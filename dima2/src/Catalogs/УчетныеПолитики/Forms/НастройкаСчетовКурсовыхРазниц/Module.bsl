#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Параметры.Свойство("АдресНастройкиСчетов",АдресНастройкиСчетов) Тогда
		
		ПрочитатьДанныеНастройки();
		
	КонецЕсли;
	
	Элементы.ИсключитьИзРасчетаКР.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Исключить", Истина));
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Счет Из ВыбранноеЗначение Цикл
			ДобавитьСчет(Счет);
		КонецЦикла;
	Иначе
		ДобавитьСчет(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицИсключений

&НаКлиенте
Процедура ИсключитьИзРасчетаКРПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "ИсключитьИзРасчетаКР";
	ОткрытьФормуВыбораСчетов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзРасчетаКРСчетПриИзменении(Элемент)
	
	Элементы.ИсключитьИзРасчетаКР.ТекущиеДанные.Исключить = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзПересчетаВППередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "ИсключитьИзПересчетаВП";
	ОткрытьФормуВыбораСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзРасчетаКРПередУдалением(Элемент, Отказ)
	
	УдаляемыйСчет = Элемент.ТекущиеДанные.Счет;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзРасчетаКРПослеУдаления(Элемент)
	
	НовыйСчет = ИсключитьИзРасчетаКР.Добавить();
	НовыйСчет.Счет = УдаляемыйСчет;
	ИсключитьИзРасчетаКР.Сортировать("Счет");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСчетаИсключения(Команда)
	ОбновитьСчетаИсключенияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодборСчетовИсключенияРасчета(Команда)
	
	ИмяТаблицыПодбора = "ИсключитьИзРасчетаКР";
	ПодборСчетов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСчетовИсключенияПересчета(Команда)
	
	ИмяТаблицыПодбора = "ИсключитьИзПересчетаВП";
	ПодборСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	СохранитьСчетаКурсовыхРазниц();
	Закрыть(РежимДиалогаВопрос.ОК);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодборСчетов(ТолькоВалютные = Ложь)
	
	ОткрытьФормуВыбораСчетов(ТолькоВалютные, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСчетов(ТолькоВалютные = Ложь, Подбор = Ложь)
	
	ПараметрыФормы = Новый Структура;
	// Стандартные параметры формы.
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",            НЕ Подбор);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	Если ТолькоВалютные Тогда
		Отбор = Новый Структура("Валютный,ЗапретитьИспользоватьВПроводках", Истина,Ложь);
		ПараметрыФормы.Вставить("Отбор", Отбор);
	Иначе
		ПараметрыФормы.Вставить("ТолькоРазрешенные", Истина);
	КонецЕсли;
	
	// Стандартные параметры формы выбора (см. Расширение управляемой формы для динамического списка).
	ПараметрыФормы.Вставить("МножественныйВыбор",            Подбор);
	ПараметрыФормы.Вставить("РежимВыбора",                   Истина);
	// Предполагаемые реквизиты.
	ПараметрыФормы.Вставить("РежимОткрытияОкна",             РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормы.Вставить("РазрешитьНачалоПеретаскивания", Ложь);
	ОткрытьФорму("ПланСчетов.Международный.ФормаВыбора",ПараметрыФормы,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСчет(Счет)
	
	НоваяСтрока = ЭтотОбъект[ИмяТаблицыПодбора].Добавить();
	НоваяСтрока.Счет = Счет;
	Если ИмяТаблицыПодбора = "ИсключитьИзРасчетаКР" Тогда
		НоваяСтрока.Исключить = Истина;
		Элементы.ИсключитьИзРасчетаКР.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеНастройки()
	
	СчетаКурсовыхРазниц = ПолучитьИзВременногоХранилища(АдресНастройкиСчетов);
	ЗаполнитьЗначенияСвойств(ЭтаФорма,СчетаКурсовыхРазниц,,"ИсключитьИзРасчетаКР,ИсключитьИзПересчетаВП");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР, ИсключитьИзРасчетаКР);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП, ИсключитьИзПересчетаВП);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСчетаКурсовыхРазниц()
	
	СчетаКурсовыхРазниц = Справочники.УчетныеПолитики.СчетаКурсовыхРазниц();
	ЗаполнитьЗначенияСвойств(СчетаКурсовыхРазниц,ЭтаФорма,,"ИсключитьИзРасчетаКР,ИсключитьИзПересчетаВП");
	СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР = РеквизитФормыВЗначение("ИсключитьИзРасчетаКР");
	СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП = РеквизитФормыВЗначение("ИсключитьИзПересчетаВП");
	ПоместитьВоВременноеХранилище(СчетаКурсовыхРазниц, АдресНастройкиСчетов);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСчетаИсключенияНаСервере()
	
	ИсключитьИзРасчетаКР.Очистить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Справочники.УчетныеПолитики.СчетаИсключенияРасчетаКР(), ИсключитьИзРасчетаКР);
	
КонецПроцедуры

#КонецОбласти