#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	ПроводкиПоДаннымОперативногоУчета = ПолучитьФункциональнуюОпцию("ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативного");
	ПроводкиПоДаннымРеглУчета = ПолучитьФункциональнуюОпцию("ФормироватьПроводкиМеждународногоУчетаПоДаннымРегламентированного");
	
	Элементы.ГруппаФормированиеПроводокМеждународногоУчетаВложенная1.Видимость = ПроводкиПоДаннымОперативногоУчета;
	Элементы.ГруппаФормированиеПроводокМеждународногоУчетаВложенная2.Видимость = ПроводкиПоДаннымРеглУчета;
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Если ТекущийОбъект.Описание <> Неопределено Тогда
		ОписаниеHTML = ТекущийОбъект.Описание.Получить();
		Если ОписаниеHTML <> Неопределено Тогда
			Описание.УстановитьHTML(ОписаниеHTML.Текст, ОписаниеHTML.Вложения);
		КонецЕсли;
	КонецЕсли;
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ ПустаяСтрока(АдресСчетовЗакрытия) Тогда
		СчетаЗакрытия = ПолучитьИзВременногоХранилища(АдресСчетовЗакрытия);
		ЗаполнитьЗначенияСвойств(ТекущийОбъект, СчетаЗакрытия,,"СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
		ТекущийОбъект.СчетаДоходов.Загрузить(СчетаЗакрытия.СчетаДоходов);
		ТекущийОбъект.СчетаРасходов.Загрузить(СчетаЗакрытия.СчетаРасходов);
		ТекущийОбъект.СчетаПрибылейУбытков.Загрузить(СчетаЗакрытия.СчетаПрибылейУбытков);
		УдалитьИзВременногоХранилища(АдресСчетовЗакрытия);
		АдресСчетовЗакрытия = "";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АдресСчетовКурсовыхРазниц) Тогда
		СчетаКурсовыхРазниц = ПолучитьИзВременногоХранилища(АдресСчетовКурсовыхРазниц);
		ЗаполнитьЗначенияСвойств(ТекущийОбъект, СчетаКурсовыхРазниц,,"ИсключитьИзПересчетаВП");
		ЗаписатьСчетаИсключенияРасчетаКР(СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР);
		ТекущийОбъект.ИсключитьИзПересчетаВП.Загрузить(СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП);
		УдалитьИзВременногоХранилища(АдресСчетовКурсовыхРазниц);
		АдресСчетовКурсовыхРазниц = "";
	КонецЕсли;
	
	ОписаниеHTML = Новый Структура("Текст, Вложения","",Новый Структура);
	Описание.ПолучитьHTML(ОписаниеHTML.Текст, ОписаниеHTML.Вложения);
	ТекущийОбъект.Описание = Новый ХранилищеЗначения(ОписаниеHTML,Новый СжатиеДанных(9));
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура  ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура ОткрытьНастройкуФормированияПроводокПоДаннымОперативногоУчета(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяПолитика", Объект.Ссылка);
	ОткрытьФорму("Обработка.НастройкаШаблоновПроводокДляМеждународногоУчета.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуФормированияПроводокПоДаннымРеглУчета(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УчетнаяПолитика", Объект.Ссылка);
	ОткрытьФорму("Обработка.НастройкаСоответствияСчетовИОборотовМеждународногоУчета.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСчетовЗакрытия(Команда)
	
	ПроверитьЗаписьОбъекта(НСтр("ru='Настройке счетов закрытия периода';uk='Настройка рахунків закриття періоду'"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаКурсовыхРазниц(Команда)
	
	ПроверитьЗаписьОбъекта(НСтр("ru='Настройке курсовых разниц';uk='Настройка курсових різниць'"), Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьЗаписьОбъекта(ИмяФормы, ИмяКоманды)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Данные еще не записаны.
                                |Переход к ""%ИмяФормы%"" возможен только после записи данных.
                                |Данные будут записаны.'
                                |;uk='Дані ще не записані.
                                |Перехід до ""%ИмяФормы%"" можливий тільки після запису даних.
                                |Дані будуть записані.'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИмяФормы%", ИмяФормы);
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаОтветаНаВопросЗаписать", ЭтотОбъект, ИмяКоманды),
						ТекстВопроса,
						РежимДиалогаВопрос.ОКОтмена
		);
		
		Возврат;
		
	КонецЕсли;
	
	ВыполнитьНастройкуСчетов(ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросЗаписать(Ответ, ИмяКоманды) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементЗаписан = Записать();
	Если НЕ ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьНастройкуСчетов(ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНастройкуСчетов(ИмяКоманды)
	
	Если ИмяКоманды = "НастройкаСчетовЗакрытия" Тогда
	
		Если ПустаяСтрока(АдресСчетовЗакрытия) Тогда
			ПоместитьСчетаЗакрытияВХранилище();
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("АдресНастройкиСчетов", АдресСчетовЗакрытия);
		Обработчик = Новый ОписаниеОповещения("СохранитьНастройкуСчетов",ЭтаФорма);
		ОткрытьФорму("Справочник.УчетныеПолитики.Форма.НастройкаСчетовЗакрытия", ПараметрыФормы, ЭтаФорма,,,,Обработчик);
		
	ИначеЕсли ИмяКоманды = "НастройкаКурсовыхРазниц" Тогда
	
		Если ПустаяСтрока(АдресСчетовКурсовыхРазниц) Тогда
			ПоместитьСчетаКурсовыхРазницВХранилище();
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("АдресНастройкиСчетов", АдресСчетовКурсовыхРазниц);
		Обработчик = Новый ОписаниеОповещения("СохранитьНастройкуСчетов",ЭтаФорма);
		ОткрытьФорму("Справочник.УчетныеПолитики.Форма.НастройкаСчетовКурсовыхРазниц", ПараметрыФормы, ЭтаФорма,,,,Обработчик);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СохранитьНастройкуСчетов(Результат, Параметр) Экспорт

	Если Результат = РежимДиалогаВопрос.ОК Тогда
		Модифицированность = Истина;
	КонецЕсли;

КонецФункции // СохранитьСчетаЗакрытия()

&НаСервере
Процедура ПоместитьСчетаЗакрытияВХранилище()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетныеПолитики.СчетУчетаДоходов,
	|	УчетныеПолитики.СчетУчетаРасходов,
	|	УчетныеПолитики.СчетУчетаНераспределеннойПрибылиУбытка,
	|	УчетныеПолитики.СчетаДоходов.(
	|		Счет
	|	),
	|	УчетныеПолитики.СчетаРасходов.(
	|		Счет
	|	),
	|	УчетныеПолитики.СчетаПрибылейУбытков.(
	|		Счет
	|	)
	|ИЗ
	|	Справочник.УчетныеПолитики КАК УчетныеПолитики
	|ГДЕ
	|	УчетныеПолитики.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СчетаЗакрытия = Справочники.УчетныеПолитики.СчетаЗакрытия();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СчетаЗакрытия, Выборка,,"СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
		СчетаЗакрытия.СчетаДоходов = Выборка.СчетаДоходов.Выгрузить();
		СчетаЗакрытия.СчетаРасходов = Выборка.СчетаРасходов.Выгрузить();
		СчетаЗакрытия.СчетаПрибылейУбытков = Выборка.СчетаПрибылейУбытков.Выгрузить();
	КонецЕсли;
	АдресСчетовЗакрытия = ПоместитьВоВременноеХранилище(СчетаЗакрытия, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьСчетаКурсовыхРазницВХранилище()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетныеПолитики.ДоходыКР,
	|	УчетныеПолитики.СтатьяДоходовКР,
	|	УчетныеПолитики.РасходыКР,
	|	УчетныеПолитики.СтатьяРасходовКР,
	|	УчетныеПолитики.ДоходыОтРазницПриПересчетеВП,
	|	УчетныеПолитики.СтатьяДоходовОтРазницПересчета,
	|	УчетныеПолитики.РасходыОтРазницПриПересчетеВП,
	|	УчетныеПолитики.СтатьяРасходовОтРазницПересчета,
	|	УчетныеПолитики.ИсключитьИзПересчетаВП.(
	|		Счет
	|	)
	|ИЗ
	|	Справочник.УчетныеПолитики КАК УчетныеПолитики
	|ГДЕ
	|	УчетныеПолитики.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СчетаЗакрытия = Справочники.УчетныеПолитики.СчетаКурсовыхРазниц();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СчетаЗакрытия, Выборка,,"ИсключитьИзПересчетаВП");
		СчетаЗакрытия.ИсключитьИзРасчетаКР = Справочники.УчетныеПолитики.СчетаИсключенияРасчетаКР();
		СчетаЗакрытия.ИсключитьИзПересчетаВП = Выборка.ИсключитьИзПересчетаВП.Выгрузить();
	КонецЕсли;
	АдресСчетовКурсовыхРазниц = ПоместитьВоВременноеХранилище(СчетаЗакрытия, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСчетаИсключенияРасчетаКР(СчетаИсключения)
	
	Для Каждого Строка Из СчетаИсключения Цикл
		ОбъектСчета = Строка.Счет.ПолучитьОбъект();
		ОбъектСчета.ИсключитьИзРасчетаКурсовыхРазниц = Строка.Исключить;
		ОбъектСчета.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти