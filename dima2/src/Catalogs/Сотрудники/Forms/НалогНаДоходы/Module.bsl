
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Заголовок,ДатаПриема,ТекущаяОрганизация");
	СотрудникСсылка = Параметры.СотрудникСсылка;
	ФизическоеЛицоСсылка = Параметры.ФизическоеЛицоСсылка;
	СозданиеНового = Параметры.СозданиеНового;
	
	ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(ТекущаяОрганизация);
	
	ЦветСтиляРасширеннойПодсказки = Элементы.ГруппаНДФЛИнфо.РасширеннаяПодсказка.ЦветТекста;
	ЦветСтиляПоясняющийОшибкуТекст = ЦветаСтиля.ПоясняющийОшибкуТекст;
	
	ДоступноИзменениеНалоговИВзносов = Пользователи.РолиДоступны("ДобавлениеИзменениеНалоговИВзносов");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтаФорма,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		Параметры.АдресВХранилище);
		
	ПроинициализироватьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, "НалогНаДоходы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ИзмененыЛьготы" И Параметр = ЭтаФорма.ФизическоеЛицоСсылка Тогда
		
		ПрочитатьСведенияОЛьготахНДФЛ();
		
	КонецЕсли;
	
КонецПроцедуры

	
#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИсправитьЗаявлениеНаПредоставлениеЛьгот(Команда)

	ПоказатьЗначение(, ЗаявлениеНаПредоставлениеЛьгот);

КонецПроцедуры

&НаКлиенте
Процедура ВвестиНовоеЗаявлениеНаПредоставлениеЛьгот(Команда)

	СотрудникиКлиент.ВвестиНовоеЗаявлениеНаПредоставлениеЛьгот(ФизическоеЛицоСсылка, ГоловнаяОрганизация);

КонецПроцедуры

&НаКлиенте
Процедура ВсеЗаявленияНаЛьготы(Команда)

	СотрудникиКлиент.ОткрытьЖурналЗаявленийНаЛьготы(ФизическоеЛицоСсылка);

КонецПроцедуры

&НаКлиенте
Процедура ВвестиПрекращениеЛьготНДФЛ(Команда)

	СотрудникиКлиент.ВвестиДокументПрекращениеЛьготНДФЛ(ФизическоеЛицоСсылка, ГоловнаяОрганизация);

КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	ПрочитатьСведенияОЛьготахНДФЛ();
	
	УстановитьДоступностьВводаЛьгот();
	
	
			
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьСведенияОЛьготахНДФЛ()
	
	Если ЗначениеЗаполнено(ФизическоеЛицоСсылка) Тогда
		
		МассивРезультатов = СотрудникиФормы.ПолучитьСведенияОЛьготахНДФЛ(ФизическоеЛицоСсылка);
		
		Если МассивРезультатов.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;

		ОрганизацияПоЗаявлению = НеОпределено;
		ОрганизацияПоУведомлению = НеОпределено;
		ЛьготыПредоставлялись = Ложь;
		
		ВыборкаЛьготы = МассивРезультатов[0][0];
		Если Не ВыборкаЛьготы.МесяцРегистрации = Null Тогда
			ЛьготыНДФЛМесяцСтрокой = Формат(ВыборкаЛьготы.МесяцРегистрации, "ДФ='ММММ гггг'");
			ЛьготыПредоставлялись = Истина;
		КонецЕсли;
		
		Результат = МассивРезультатов[1];
		Если Результат.Количество() > 0 Тогда
			ЛьготыНДФЛЛичныеЛьготы.Очистить();
			Для Каждого ВыборкаЛичныеЛьготы Из Результат Цикл
					
				ЗаполнитьЗначенияСвойств(ЛьготыНДФЛЛичныеЛьготы.Добавить(), ВыборкаЛичныеЛьготы);
				ЗаявлениеНаПредоставлениеЛьгот				= ВыборкаЛичныеЛьготы.Регистратор;
				ЗаявлениеНомер								= ВыборкаЛичныеЛьготы.Номер;
				ЗаявлениеДата								= ВыборкаЛичныеЛьготы.Дата;
				СотрудникПоЗаявлению						= ВыборкаЛичныеЛьготы.Сотрудник;
				ОрганизацияПоЗаявлению						= ВыборкаЛичныеЛьготы.Организация;
					
			КонецЦикла;
		КонецЕсли;

			
		Результат = МассивРезультатов[2];
		Если Результат.Количество() > 0 Тогда
			ЛьготыНДФЛЛьготыНаДетей.Очистить();
			Для Каждого ВыборкаЛьготыНаДетей Из Результат Цикл
					
				ЗаполнитьЗначенияСвойств(ЛьготыНДФЛЛьготыНаДетей.Добавить(), ВыборкаЛьготыНаДетей);
				ЗаявлениеНаПредоставлениеЛьгот				= ВыборкаЛьготыНаДетей.Регистратор;
				ЗаявлениеНомер								= ВыборкаЛьготыНаДетей.Номер;
				ЗаявлениеДата								= ВыборкаЛьготыНаДетей.Дата;
				СотрудникПоЗаявлению						= ВыборкаЛьготыНаДетей.Сотрудник;
				ОрганизацияПоЗаявлению						= ВыборкаЛьготыНаДетей.Организация;
					
			КонецЦикла;
		КонецЕсли;
			
		Если ЗаявлениеНаПредоставлениеЛьгот.Пустая() Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ЛьготыСтраницы",
				"ТекущаяСтраница",
				Элементы.ИнфоНадписьОПримененииЛьгот);
			
		Иначе 
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ЛьготыСтраницы",
				"ТекущаяСтраница",
				Элементы.ДанныеОПримененииЛьгот);
			
			ДоступностьИсправитьЗаявлениеНаПредоставлениеЛьгот = Истина;
			
			Если ОрганизацияПоЗаявлению = НеОпределено Тогда
				
				ЗаявлениеНаПредоставлениеЛьготИнфо = НСтр("ru='Льготы не применяются. Можете ввести заявление о предоставлении льгот';uk='Пільги не застосовуються. Можете ввести заяву про надання пільг'");
				ДоступностьИсправитьЗаявлениеНаПредоставлениеЛьгот = Ложь;
				
			ИначеЕсли ОрганизацияПоЗаявлению <> ГоловнаяОрганизация Тогда
				
				ЗаявлениеНаПредоставлениеЛьготИнфо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Льготы применяются в организации %1. Чтобы начать применение льгот в организации %2 введите новое заявление о предоставлении льгот';uk='Пільги застосовуються в організації %1. Щоб розпочати застосування пільг в організації %2 введіть нову заяву про надання пільг'"),
					ОрганизацияПоЗаявлению,
					ГоловнаяОрганизация);
				ДоступностьИсправитьЗаявлениеНаПредоставлениеЛьгот = Ложь;
				
			Иначе
				
				ЗаявлениеНаПредоставлениеЛьготИнфо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Льготы предоставляются по заявлению номер %1 от %2';uk='Пільги надаються за заявою номер для %1 від %2'"),
					ЗаявлениеНомер,
					Формат(ЗаявлениеДата,"ДФ='дд ММММ гггг'"));
					
			КонецЕсли;
				
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ИсправитьЗаявлениеНаПредоставлениеЛьгот",
				"Доступность",
				ДоступностьИсправитьЗаявлениеНаПредоставлениеЛьгот);
			
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ЛьготыСтраницы",
			"ТекущаяСтраница",
			Элементы.ИнфоНадписьОПримененииЛьгот);
		
	КонецЕсли;
	
	УстановитьИнфоНадписьЛьготы(ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено) Экспорт
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
		
	Если Не СозданиеНового И Не Отказ Тогда
	Иначе 
		СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) 
	
	Если Не Отказ Тогда
		
		
		Если ПроверитьЗаполнение() Тогда
			
			ВозвращаемыйПараметр = Новый Структура;
			ВозвращаемыйПараметр.Вставить("ИмяФормы", ИмяФормы);
			ВозвращаемыйПараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
			
			Оповестить(
			"ИзмененыДанныеДополнительнойФормы",
			ВозвращаемыйПараметр,
			ВладелецФормы);
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры



&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьИнфоНадписьЛьготы(Форма)
	
	Если Форма.ЛьготыПредоставлялись Тогда
		
		ТекстЛьготыИнфо = НСтр("ru='Льготы сотруднику сейчас не предоставляются, но ранее предоставлялись. Предыдущие заявления на льготы можно посмотреть по ссылке ""Все заявления на льготы""';uk='Пільги співробітникові зараз не надаються, але раніше надавалися. Попередні заяви на пільги можна переглянути за посиланням ""Усі заяви на пільги""'");
		ЦветТекстаЛьготыИнфо = Форма.ЦветСтиляРасширеннойПодсказки;;
		
	ИначеЕсли ЗначениеЗаполнено(Форма.ГоловнаяОрганизация) И НЕ Форма.ФизическоеЛицоСсылка.Пустая() Тогда

		ТекстЛьготыИнфо = НСтр("ru='Льготы сотруднику не предоставляются. Для того чтобы начать применение льгот, введите заявление о предоставлении стандартных льгот';uk='Пільги працівникові не надаються. Для того щоб почати застосування пільг, введіть заяву про надання  пільг'");
		ЦветТекстаЛьготыИнфо = Форма.ЦветСтиляРасширеннойПодсказки;
		
	Иначе
		
		Если Форма.ПолучитьФункциональнуюОпциюФормы("ИспользоватьКадровыйУчет") Тогда
			ТекстЛьготыИнфо = НСтр("ru='Для ввода заявления о предоставлении льгот или уведомления нал.органа о праве на льготы, необходимо оформить прием на работу';uk='Для введення заяви про надання пільг або повідомлення под.органу про право на пільги, необхідно оформити прийом на роботу'");
		Иначе
			Если ЗначениеЗаполнено(Форма.ГоловнаяОрганизация) Тогда
				ТекстЛьготыИнфо = НСтр("ru='Для ввода заявления о предоставлении льгот или уведомления нал.органа о праве на льготы запишите сотрудника (Ctrl+S)';uk='Для введення заяви про надання пільг або повідомлення под.органу про право на пільги запишіть співробітника (Ctrl+S)'");
			Иначе
				ТекстЛьготыИнфо = НСтр("ru='Для ввода заявления о предоставлении льгот или уведомления нал.органа о праве на льготы заполните организацию и запишите сотрудника (Ctrl+S)';uk='Для введення заяви про надання пільг або повідомлення под.органу про право на пільги заповніть організацію і запишіть співробітника (Ctrl+S)'");
			КонецЕсли;
		КонецЕсли;
		
		ЦветТекстаЛьготыИнфо = Форма.ЦветСтиляПоясняющийОшибкуТекст;
		
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		Форма,
		"ГруппаНДФЛИнфо",
		ТекстЛьготыИнфо);
		
	Форма.Элементы.ГруппаНДФЛИнфо.РасширеннаяПодсказка.ЦветТекста = ЦветТекстаЛьготыИнфо;
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Форма.ЛьготыНДФЛЛьготыНаДетей, "ДействуетДо", "ДействуетДоСтрокой");

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВводаЛьгот() Экспорт
	
	ДоступностьКоманд = ЗначениеЗаполнено(ГоловнаяОрганизация);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НовоеЗаявлениеНаПредоставлениеЛьгот1",
		"Доступность",
		ДоступностьКоманд);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НовоеЗаявлениеНаПредоставлениеЛьгот",
		"Доступность",
		ДоступностьКоманд);
	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВсеЗаявленияНаЛьготы1",
		"Доступность",
		ДоступностьКоманд);
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтаФорма);
	
КонецФункции

#КонецОбласти
