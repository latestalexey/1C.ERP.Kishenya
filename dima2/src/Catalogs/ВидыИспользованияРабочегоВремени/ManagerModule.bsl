#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИсключатьРегистриуемыеОтдельнымиДокументами") 
		И Параметры.ИсключатьРегистриуемыеОтдельнымиДокументами = Истина Тогда
		// Необходимо исключить из формируемого списка виды отсутствий, для регистрации которых предназначены специализированные документы.
		ЗаполнитьДанныеВыбора(ДанныеВыбора, Параметры);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти	

#Область СлужебныйПрограммныйИнтерфейс

// Процедура заполняет справочник показателей т.н. псевдопредопределенными элементами, 
// идентифицируемыми из кода
//
Процедура СоздатьВидыИспользованияРабочегоВремениПоНастройкам(НастройкиРасчетаЗарплаты = Неопределено) Экспорт
	
	НастройкиУчетаВремени = УчетРабочегоВремени.НастройкиУчетаВремени();
	
	Если НастройкиРасчетаЗарплаты = Неопределено Тогда
		НастройкиРасчетаЗарплаты = РасчетЗарплатыРасширенный.НастройкиРасчетаЗарплаты();
	КонецЕсли;

	ОбновитьПовторноИспользуемыеЗначения();
	
	// Установка реквизитов предопределенных элементов.
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "РабочееВремя";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Рабочее время';uk='Робочий час'");
	ОписаниеВидаВремени.БуквенныйКод = "";
	ОписаниеВидаВремени.ЦифровойКод = "";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Рабочее время';uk='Робочий час'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Явка";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Работа';uk='Робота'");
	ОписаниеВидаВремени.БуквенныйКод = "Р";
	ОписаниеВидаВремени.ЦифровойКод = "01";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Часы работы, предусмотренные колдоговором';uk='Години роботи, передбачені колдоговором'");
	ОписаниеВидаВремени.РабочееВремя = Истина;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	ВидВремениЯвка = НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени); 

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "РаботаВРежимеНеполногоВремени";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Работа в режиме неполного рабочего времени';uk='Робота в режимі неповного робочого часу'");
	ОписаниеВидаВремени.БуквенныйКод = "РС";
	ОписаниеВидаВремени.ЦифровойКод = "02";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Часы работы работникам, которым установлен неполный рабочий день (неделя) согласно законодательства';uk='Години роботи працівників, яким встановлено неповний робочий день (тиждень) згідно законодавства'");
	ОписаниеВидаВремени.РабочееВремя = Истина;
	ОписаниеВидаВремени.Целосменное = Ложь;
    ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);	
	
	Если НастройкиУчетаВремени.УчитыватьВечерниеЧасы Тогда	
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "РаботаВечерниеЧасы";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Вечерние часы';uk='Вечірні години'");
		ОписаниеВидаВремени.БуквенныйКод = "ВЧ";
		ОписаниеВидаВремени.ЦифровойКод = "03";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Вечерние часы работы';uk='Вечірні години роботи'");
		ОписаниеВидаВремени.РабочееВремя = Истина;
		ОписаниеВидаВремени.Целосменное = Ложь;
        ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
		
		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("РаботаВечерниеЧасы");	
	КонецЕсли;	
	
	Если НастройкиУчетаВремени.УчитыватьНочныеЧасы Тогда
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "РаботаНочныеЧасы";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Ночные часы';uk='Нічні години'");
		ОписаниеВидаВремени.БуквенныйКод = "РН";
		ОписаниеВидаВремени.ЦифровойКод = "04";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Ночные часы работы';uk='Нічні години роботи'");
		ОписаниеВидаВремени.РабочееВремя = Истина;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("РаботаНочныеЧасы");
	КонецЕсли;

	ВидВремениСверхурочные = Неопределено;
	Если НастройкиРасчетаЗарплаты.ИспользоватьОплатуСверхурочных Тогда
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Сверхурочные";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Сверхурочно';uk='Понаднормово'");
		ОписаниеВидаВремени.БуквенныйКод = "НУ";
		ОписаниеВидаВремени.ЦифровойКод = "05";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Сверхурочные часы работы';uk='Понаднормові години роботи'");
		ОписаниеВидаВремени.РабочееВремя = Истина;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

		ВидВремениСверхурочные = НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("Сверхурочные");
	КонецЕсли;	
	
	ВидВремениПраздники = Неопределено;
	Если НастройкиРасчетаЗарплаты.ИспользоватьОплатуПраздничныхИВыходных Тогда
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Праздники";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Работа в выходные и праздники';uk='Робота у вихідні та свята'");
		ОписаниеВидаВремени.БуквенныйКод = "РВ";
		ОписаниеВидаВремени.ЦифровойКод = "06";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Часы работы в выходные и праздничные дни';uk='Години роботи у вихідні та святкові дні'");
		ОписаниеВидаВремени.РабочееВремя = Истина;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

		ВидВремениПраздники = НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("Праздники");
	КонецЕсли;	
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Командировка";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Командировка';uk='Відрядження'");;
	ОписаниеВидаВремени.БуквенныйКод = "ВД";
	ОписаниеВидаВремени.ЦифровойКод = "07";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Служебная командировка';uk='Службове відрядження'");
	ОписаниеВидаВремени.РабочееВремя = Истина;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ОсновнойОтпуск";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск';uk='Відпустка'");
	ОписаниеВидаВремени.БуквенныйКод = "В";
	ОписаниеВидаВремени.ЦифровойКод = "08";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Отпуск основной ежегодный (ст. 6 Закона Украины ""Про отпуска"")';uk='Основна щорічна відпустка (ст. 6 Закону України ""Про відпустки"")'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ДополнительныйОтпуск";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Дополнительный отпуск';uk='Додаткова відпустка'");
	ОписаниеВидаВремени.БуквенныйКод = "Д";
	ОписаниеВидаВремени.ЦифровойКод = "09";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Ежегодный дополнительный отпуск (ст. 7, 8 Закона Украины ""Про отпуска"")';uk='Щорічна додаткова відпустка (ст. 7, 8 Закону України ""Про відпустки"")'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ЧернобыльскийОтпуск"; 
	ОписаниеВидаВремени.Наименование = НСтр("ru='Чернобыльский отпуск';uk='Чорнобильська відпустка'");
	ОписаниеВидаВремени.БуквенныйКод = "Ч";
	ОписаниеВидаВремени.ЦифровойКод = "10";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Дополнительный отпуск (ст. 20, 21, 30 Закона Украины ""Про статус и социальную защиту граждан пострадавших в результате Чорнобыльской катастрофы""';uk='Додаткова відпустка (ст. 20, 21, 30 Закону України ""Про статус і соціальний захист громадян, які постраждали внаслідок Чорнобильскої катастрофи""'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ТворческийОтпуск"; 
	ОписаниеВидаВремени.Наименование = НСтр("ru='Творческий отпуск';uk='Творча відпустка'");
	ОписаниеВидаВремени.БуквенныйКод = "ТВ";
	ОписаниеВидаВремени.ЦифровойКод = "11";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Творческий отпуск (ст. 16 Закона Украины ""Про отпуска"")';uk='Творча відпустка (ст. 16 Закону України ""Про відпустки"")'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ОтпускНаОбучение";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск дополнительный (оплачиваемый учебный)';uk='Відпустка додаткова (оплачувана навчальна)'");
	ОписаниеВидаВремени.БуквенныйКод = "Н";
	ОписаниеВидаВремени.ЦифровойКод = "12";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Дополнительный отпуск в связи с обучением (ст. 13, 14, 15 Закона Украины ""Про отпуска"")';uk='Додаткова відпустка у зв''язку з навчанням (ст. 13, 14, 15 Закону України ""Про відпустки"")'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ОтпускНаДетей"; 
	ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск на детей';uk='Відпустка на дітей'");
	ОписаниеВидаВремени.БуквенныйКод = "ДО";
	ОписаниеВидаВремени.ЦифровойКод = "15";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Дополнительный оплачиваемый отпуск работникам имеющим детей (ст. 19 Закона Украины ""Про отпуска"")';uk='Додаткова оплачувана відпустка працівникам які мають дітей (ст. 19 Закону України ""Про відпустки"")'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ОтпускПоБеременностиИРодам";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск по беременности и родам и по уходу до 3 лет';uk='Відпустка по вагітності та пологах та по догляду до 3 років'");
	ОписаниеВидаВремени.БуквенныйКод = "ВП";
	ОписаниеВидаВремени.ЦифровойКод = "16";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Отпуск в связи с беременностью и родами (ст. 17 Закона Украины ""Об отпусках"") и отпуск по уходу за ребенком до 3 лет (ст. 18 Закона Украины ""Об отпусках"")';uk='Відпустка у зв''язку з вагітністю та пологами (ст. 17 Закону України ""Про відпустки"") та відпустка для догляду за дитиною до 3 років (ст. 18 Закону України ""Про відпустки"")'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ОтпускПоУходуЗаРебенком";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск по уходу за ребенком до 6 лет';uk='Відпустка по догляду за дитиною до 6 років'");
	ОписаниеВидаВремени.БуквенныйКод = "ДД";
	ОписаниеВидаВремени.ЦифровойКод = "17";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Отпуск по уходу за ребенком до 6 лет';uk='Відпустка по догляду за дитиною до 6 років'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	
	Если НастройкиРасчетаЗарплаты.ИспользоватьОтпускаБезОплаты Тогда
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ОтпускНаОбучениеНеоплачиваемый";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск дополнительный (неоплачиваемый учебный)';uk='Відпустка додаткова (неоплачувана навчальна)'");
		ОписаниеВидаВремени.БуквенныйКод = "НБ";
		ОписаниеВидаВремени.ЦифровойКод = "13";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Отпуск без сохранения заработной платы в связи с обучением (п. 12, 13, 17 ст. 25  Закона Украины ""Про отпуска"")';uk='Відпустка без збереження заробітної плати у зв''язку з навчанням (п. 12, 13, 17 ст. 25 Закону України ""Про відпустки"")'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;
		
		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
		
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "НеоплачиваемыйДополнительныйОтпуск";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Доп. отпуск без сохранения заработной платы';uk='Дод. відпустка без збереження заробітної плати'");
		ОписаниеВидаВремени.БуквенныйКод = "ДБ";
		ОписаниеВидаВремени.ЦифровойКод = "14";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Дополнительный отпуск без сохранения заработной платы (ст. 25 кроме п. 3, 12, 13, 17 Закона Украины ""Про отпуска"")';uk='Додаткова відпустка без збереження заробітної плати (ст. 25 крім п. 3, 12, 13, 17 Закону України ""Про відпустки"")'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;
		
		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "НеоплачиваемыйОтпускПоРазрешениюРаботодателя";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск неоплачиваемый с разрешения работодателя';uk='Неоплачувана відпустка з дозволу роботодавця'");
		ОписаниеВидаВремени.БуквенныйКод = "НА";
		ОписаниеВидаВремени.ЦифровойКод = "18";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Отпуск без сохранения заработной платы по соглашению сторон (ст. 26 Закона Украины ""Про отпуска"")';uk='Відпустка без збереження заробітної плати за згодою сторін (ст. 26 Закону України ""Про відпустки"")'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;

		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
		
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "НеоплачиваемыйОтпускПоЗаконодательству";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Отпуск неоплачиваемый в соответствии с законом';uk='Відпустка неоплачувана згідно з законом'");
		ОписаниеВидаВремени.БуквенныйКод = "БЗ";
		ОписаниеВидаВремени.ЦифровойКод = "19";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Отпуск неоплачиваемый в соответствии с законом';uk='Відпустка неоплачувана згідно з законом'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;

		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("ОтпускНаОбучениеНеоплачиваемый");	
		ОтключитьИспользованиеПредопределенногоЭлемента("НеоплачиваемыйОтпускПоРазрешениюРаботодателя");
		ОтключитьИспользованиеПредопределенногоЭлемента("НеоплачиваемыйОтпускПоЗаконодательству");	
		ОтключитьИспользованиеПредопределенногоЭлемента("НеоплачиваемыйДополнительныйОтпуск");
	КонецЕсли;	
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "СокращенноеРабочееВремя";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Неполный день/неделя';uk='Неповний день/тиждень'");
	ОписаниеВидаВремени.БуквенныйКод = "НД";
	ОписаниеВидаВремени.ЦифровойКод = "20";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Неявки по причине перевода по инициативе работодателя на неполный рабочий день (неделю)';uk='Неявки з причини переведення за ініціативою роботодавця на неповний робочий день (тиждень)'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ПереводНаДругуюРаботу"; 
	ОписаниеВидаВремени.Наименование = НСтр("ru='Перевод на другую работу';uk='Переведення на іншу роботу'");
	ОписаниеВидаВремени.БуквенныйКод = "НП";
	ОписаниеВидаВремени.ЦифровойКод = "21";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Неявки в связи с временным переводом на другое предприятие';uk='Неявки у зв''язку з тимчасовим переведенням на інше підприємство'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;
	
	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ГосударственныеОбязанности";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Неотработанное время, предусмотренное законодательством';uk='Невідпрацьований час, передбачений законодавством'");
	ОписаниеВидаВремени.БуквенныйКод = "ІН";
	ОписаниеВидаВремени.ЦифровойКод = "22";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Другое неотработанное время, предусмотренное законодательством';uk='Інший невідпрацьований час, передбачений законодавством'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	Если НастройкиРасчетаЗарплаты.ИспользоватьОплатуПростоев Тогда
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Простой";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Простой';uk='Простій'");
		ОписаниеВидаВремени.БуквенныйКод = "П";
		ОписаниеВидаВремени.ЦифровойКод = "23";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Простой';uk='Простій'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("Простой");
	КонецЕсли;	
	
	Если НастройкиРасчетаЗарплаты.ИспользоватьУчетПрочихНевыходов Тогда 
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Прогулы";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Прогул';uk='Прогул'");
		ОписаниеВидаВремени.БуквенныйКод = "ПР";
		ОписаниеВидаВремени.ЦифровойКод = "24";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Прогул';uk='Прогул'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
		
		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "НеявкиПоНевыясненнымПричинам";
		ОписаниеВидаВремени.Наименование = НСтр("ru='Неявки по невыясненным причинам';uk='Неявки з нез''ясованих причин'");
		ОписаниеВидаВремени.БуквенныйКод = "НЗ";
		ОписаниеВидаВремени.ЦифровойКод = "28";
		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Неявки по невыясненным причинам';uk='Неявки з нез''ясованих причин'");
		ОписаниеВидаВремени.РабочееВремя = Ложь;
		ОписаниеВидаВремени.Целосменное = Ложь;
		ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	Иначе
		ОтключитьИспользованиеПредопределенногоЭлемента("Прогулы");		
		ОтключитьИспользованиеПредопределенногоЭлемента("НеявкиПоНевыясненнымПричинам");
	КонецЕсли;	
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Забастовка";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Забастовка';uk='Страйк'");
	ОписаниеВидаВремени.БуквенныйКод = "С";
	ОписаниеВидаВремени.ЦифровойКод = "25";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Массовые невыходы на работу (забастовки)';uk='Масові невиходи на роботу (страйки)'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "Болезнь";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Больничный';uk='Лікарняний'");
	ОписаниеВидаВремени.БуквенныйКод = "ТН";
	ОписаниеВидаВремени.ЦифровойКод = "26";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Временная нетрудоспособность с назначением пособия согласно законодательству';uk='Тимчасова непрацездатність з призначенням допомоги відповідно до законодавства'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "БолезньБезОплаты";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Больничный неоплачиваемый';uk='Лікарняний неоплачуваний'");
	ОписаниеВидаВремени.БуквенныйКод = "НН";
	ОписаниеВидаВремени.ЦифровойКод = "27";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Больничный неоплачиваемый';uk='Лікарняний неоплачуваний'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Истина;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ДругиеНеявкиПоКолДоговору"; 
	ОписаниеВидаВремени.Наименование = НСтр("ru='Другие неявки по кол. договору';uk='Інші неявки з кол. договором'");
	ОписаниеВидаВремени.БуквенныйКод = "ІВ";
	ОписаниеВидаВремени.ЦифровойКод = "29";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Другие виды неявок, предусмотренных коллективным договором';uk='Інші види неявок, передбачених колективним договором'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ДругиеНеявки"; 
	ОписаниеВидаВремени.Наименование = НСтр("ru='Другие неявки';uk='Інші неявки'");
	ОписаниеВидаВремени.БуквенныйКод = "І";
	ОписаниеВидаВремени.ЦифровойКод = "30";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Другие виды неявок';uk='Інші види неявок'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Ложь;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);	
	
	ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ВыходныеДни";
	ОписаниеВидаВремени.Наименование = НСтр("ru='Выходные дни';uk='Вихідні дні'");
	ОписаниеВидаВремени.БуквенныйКод = "";
	ОписаниеВидаВремени.ЦифровойКод = "";
	ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Выходные дни и  нерабочие праздничные дни';uk='Вихідні і неробочі святкові дні'");
	ОписаниеВидаВремени.РабочееВремя = Ложь;
	ОписаниеВидаВремени.Целосменное = Истина;
	ОписаниеВидаВремени.УважительнаяПричинаДляБольничных = Ложь;

	НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);

	
	
	

//////	// Виды расчета, связанные с использованием отгулов.
//////	Если НастройкиРасчетаЗарплаты.ИспользоватьОтгулы И НастройкиРасчетаЗарплаты.ИспользоватьОплатуПраздничныхИВыходных Тогда
//////		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
//////		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "ПраздникиБезПовышеннойОплаты";
//////		// Строка не локализуется т.к. является частью регламентированной формы, применяемой в РФ.
//////		ОписаниеВидаВремени.Наименование = "Праздники без повышенной оплаты";
//////		ОписаниеВидаВремени.БуквенныйКод = "ПН";
//////		ОписаниеВидаВремени.БуквенныйКодБюджетный = "ПН";
//////		ОписаниеВидаВремени.БуквенныйКодБюджетный2009 = "ПН";
//////		ОписаниеВидаВремени.ЦифровойКод = "42";
//////		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Праздники без повышенной оплаты'");
//////		ОписаниеВидаВремени.РабочееВремя = Истина;
//////		ОписаниеВидаВремени.Целосменное = Ложь;
//////		Если НЕ ВидВремениПраздники = Неопределено Тогда
//////			ОписаниеВидаВремени.ОсновноеВремя = ВидВремениПраздники.Ссылка;
//////		КонецЕсли;

//////		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
//////	Иначе
//////		ОтключитьИспользованиеПредопределенногоЭлемента("ПраздникиБезПовышеннойОплаты");
//////	КонецЕсли;	
//////	
//////	
//////	Если НастройкиРасчетаЗарплаты.ИспользоватьОтгулы И НастройкиРасчетаЗарплаты.ИспользоватьОплатуСверхурочных Тогда
//////		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
//////		ОписаниеВидаВремени.ИмяПредопределенныхДанных = "СверхурочныеБезПовышеннойОплаты";
//////		// Строка не локализуется т.к. является частью регламентированной формы, применяемой в РФ.
//////		ОписаниеВидаВремени.Наименование = "Сверхурочные без повышенной оплаты";
//////		ОписаниеВидаВремени.БуквенныйКод = "СН";
//////		ОписаниеВидаВремени.БуквенныйКодБюджетный = "СН";
//////		ОписаниеВидаВремени.БуквенныйКодБюджетный2009 = "СН";
//////		ОписаниеВидаВремени.ЦифровойКод = "43";
//////		ОписаниеВидаВремени.ПолноеНаименование = НСтр("ru='Сверхурочные без повышенной оплаты'");
//////		ОписаниеВидаВремени.РабочееВремя = Истина;
//////		ОписаниеВидаВремени.Целосменное = Ложь;
//////		Если НЕ ВидВремениСверхурочные = Неопределено Тогда
//////			ОписаниеВидаВремени.ОсновноеВремя = ВидВремениСверхурочные.Ссылка;
//////		КонецЕсли;
//////		
//////		НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени);
//////		ОписаниеВидаВремени = СоздатьОписаниеВидаВремени();
//////	Иначе
//////		ОтключитьИспользованиеПредопределенногоЭлемента("СверхурочныеБезПовышеннойОплаты");
//////	КонецЕсли;	
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры	

Функция ВидыДокументовРегистрацииОтсутствий() Экспорт
	
КонецФункции

Процедура ДобавитьВидДокумента(Таблица, ИмяВидаВремени, ВидДокумента)
	
	ВидВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени." + ИмяВидаВремени);
	Если ВидВремени = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ВидВремени = ВидВремени;
	НоваяСтрока.ВидДокумента = ВидДокумента;
	
КонецПроцедуры

// Составляет виды отсутствия, для регистрации которых предназначены специализированные документы.
//
// Возвращаемое значение - таблица значений.
//
Функция ВидыВремениРегистрируемыеОтдельнымиДокументами() Экспорт
	
	ВидыДокументов = Новый ТаблицаЗначений;
	ВидыДокументов.Колонки.Добавить("ВидВремени", Новый ОписаниеТипов("СправочникСсылка.ВидыИспользованияРабочегоВремени"));
	ВидыДокументов.Колонки.Добавить("ВидДокумента", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДокументовНачисления"));
	
	ДобавитьВидДокумента(ВидыДокументов, "Болезнь", Перечисления.ВидыДокументовНачисления.БольничныйЛист);
	ДобавитьВидДокумента(ВидыДокументов, "БолезньБезОплаты", Перечисления.ВидыДокументовНачисления.БольничныйЛист);
	ДобавитьВидДокумента(ВидыДокументов, "ГосударственныеОбязанности", Перечисления.ВидыДокументовНачисления.ОплатаПоСреднемуЗаработку);

	ДобавитьВидДокумента(ВидыДокументов, "ДополнительныйОтпуск", Перечисления.ВидыДокументовНачисления.Отпуск);

	ДобавитьВидДокумента(ВидыДокументов, "Командировка", Перечисления.ВидыДокументовНачисления.Командировка);
	
	ДобавитьВидДокумента(ВидыДокументов, "НеоплачиваемыйДополнительныйОтпуск", Перечисления.ВидыДокументовНачисления.Отпуск);
	ДобавитьВидДокумента(ВидыДокументов, "НеоплачиваемыйОтпускПоЗаконодательству", Перечисления.ВидыДокументовНачисления.ОтпускБезСохраненияОплаты);
	ДобавитьВидДокумента(ВидыДокументов, "НеоплачиваемыйОтпускПоРазрешениюРаботодателя", Перечисления.ВидыДокументовНачисления.ОтпускБезСохраненияОплаты);
	ДобавитьВидДокумента(ВидыДокументов, "НеявкиПоНевыясненнымПричинам", Перечисления.ВидыДокументовНачисления.ПрогулНеявка);
	ДобавитьВидДокумента(ВидыДокументов, "ОсновнойОтпуск", Перечисления.ВидыДокументовНачисления.Отпуск);
	ДобавитьВидДокумента(ВидыДокументов, "ОтпускНаОбучение", Перечисления.ВидыДокументовНачисления.Отпуск);
	ДобавитьВидДокумента(ВидыДокументов, "ОтпускНаОбучениеНеоплачиваемый", Перечисления.ВидыДокументовНачисления.Отпуск);
	ДобавитьВидДокумента(ВидыДокументов, "ОтпускПоБеременностиИРодам", Перечисления.ВидыДокументовНачисления.БольничныйЛист);
	ДобавитьВидДокумента(ВидыДокументов, "ОтпускПоУходуЗаРебенком", Перечисления.ВидыДокументовНачисления.Отпуск);
	
	ДобавитьВидДокумента(ВидыДокументов, "Прогулы", Перечисления.ВидыДокументовНачисления.ПрогулНеявка);
	ДобавитьВидДокумента(ВидыДокументов, "Простой", Перечисления.ВидыДокументовНачисления.ПростойСотрудников);
	
	ДобавитьВидДокумента(ВидыДокументов, "ДругиеНеявкиПоКолДоговору", Перечисления.ВидыДокументовНачисления.ПрогулНеявка);
	ДобавитьВидДокумента(ВидыДокументов, "ДругиеНеявки", Перечисления.ВидыДокументовНачисления.ПрогулНеявка);
	
	Возврат ВидыДокументов;
	
КонецФункции

// Массив видов рабочего времени, отражающих работу в выходные и нерабочие праздничные дни.
//
Функция ВидыВремениРаботаВыходныеПраздничные() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Праздники"));
	
	Возврат Массив;
	
КонецФункции

// Массив видов рабочего времени, отражающих отработанное время.
//
Функция ВидыВремениОтработанноеВремя() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Явка"));
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РаботаНочныеЧасы"));
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РаботаВечерниеЧасы"));
	
	Возврат Массив;
	
КонецФункции

// Массив видов рабочего времени, отражающих норму времени для суммированного учета рабочего времени.
// Это рабочее время + выходные + время, когда сотрудник отсутствовал по своей вине.
Функция ВидыВремениВЗачетНормыСуммированногоУчета() Экспорт
	
	// Безусловно в норму входит отработанное время.
	Массив = ВидыВремениОтработанноеВремя();
	
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ВыходныеДни"));
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам"));
	Массив.Добавить(ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Прогулы"));
	
	Возврат Массив;
	
КонецФункции

Функция ВидВремениПоВидуОтпуска(ВидОтпуска) Экспорт
	
	Если ВидОтпуска = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыОтпусков.Основной") Тогда
		Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОсновнойОтпуск");
	ИначеЕсли ВидОтпуска = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыОтпусков.ДополнительныйЕжегодныйОтпуск") Тогда
		Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ДополнительныйОтпуск");
	ИначеЕсли ВидОтпуска = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыОтпусков.ДополнительныйНаДетей") Тогда
		Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ОтпускНаДетей");	
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.ДругиеНеявкиПоКолДоговору");
	КонецЕсли;	
	
КонецФункции	

#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

Функция СоздатьОписаниеВидаВремени()
	Возврат Новый Структура("ИмяПредопределенныхДанных, БуквенныйКод, Наименование, ЦифровойКод, ПолноеНаименование, РабочееВремя, Целосменное, ОсновноеВремя, УважительнаяПричинаДляБольничных");	
КонецФункции	

Функция НовыйВидИспользованияРабочегоВремени(ОписаниеВидаВремени)
			
	ВидВремени = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени." + ОписаниеВидаВремени.ИмяПредопределенныхДанных);
	
	Если ЗначениеЗаполнено(ВидВремени) Тогда
		ВидВремениОбъект = ВидВремени.ПолучитьОбъект();
		ВидВремениОбъект.НеИспользуется = Ложь;
		ВидВремениСсылка = ВидВремениОбъект.Ссылка;
	Иначе	
		ВидВремениОбъект = Справочники.ВидыИспользованияРабочегоВремени.СоздатьЭлемент();
		ВидВремениСсылка = Справочники.ВидыИспользованияРабочегоВремени.ПолучитьСсылку();
		ВидВремениОбъект.УстановитьСсылкуНового(ВидВремениСсылка);
	КонецЕсли;		
	
	ЗаполнитьЗначенияСвойств(ВидВремениОбъект, ОписаниеВидаВремени);
	
	Если Не ЗначениеЗаполнено(ВидВремениОбъект.ОсновноеВремя) Тогда
		ВидВремениОбъект.ОсновноеВремя = ВидВремениСсылка;
	КонецЕсли;	
		
	ВидВремениОбъект.Записать();
	
	Возврат ВидВремениОбъект;

КонецФункции

Процедура ОтключитьИспользованиеПредопределенногоЭлемента(ИмяПредопределенныхДанных)
	
	Ссылка = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени." + ИмяПредопределенныхДанных);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Объект = Ссылка.ПолучитьОбъект();
		Попытка
			Объект.Заблокировать();
		Исключение
			ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru='Невозможно изменить Виды использования рабочего времени """"%2"""". Возможно, объект редактируется другим пользователем';uk='Неможливо змінити Види використання робочого часу """"%2"""". Можливо, об''єкт редагується іншим користувачем'"),
								Объект.Наименование);
			
			ВызватьИсключение ТекстИсключения;
		КонецПопытки;
		Объект.НеИспользуется = Истина;
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеВыбора(ДанныеВыбора, Параметры)
	
	Запрос = Новый Запрос;
	
	ТекстЗапросаУсловий = "";

	// Исключение регистрируемых отдельными документами.
	Если Параметры.Свойство("ИсключатьРегистриуемыеОтдельнымиДокументами")
		И Параметры.ИсключатьРегистриуемыеОтдельнымиДокументами = Истина Тогда
		ВидыДокументов = ВидыВремениРегистрируемыеОтдельнымиДокументами();
		ВидыВремени = Новый Массив;
		Для Каждого СтрокаТаблицы Из ВидыДокументов Цикл
			Если СтрокаТаблицы.ВидДокумента = Перечисления.ВидыДокументовНачисления.ОплатаПоСреднемуЗаработку Тогда
				Продолжить;
			КонецЕсли;
			ВидыВремени.Добавить(СтрокаТаблицы.ВидВремени);
		КонецЦикла;
		ТекстЗапросаУсловий = ?(ПустаяСтрока(ТекстЗапросаУсловий), "", ТекстЗапросаУсловий + "
			|	И ") + "(Не ВидыВремени.Ссылка В (&РегистрируемыеОтдельнымиДокументами))";
		Запрос.УстановитьПараметр("РегистрируемыеОтдельнымиДокументами", ВидыВремени);
	КонецЕсли;
	
	// Условия подбора по строке и коду.
	Если Параметры.Свойство("СтрокаПоиска") И Не ПустаяСтрока(Параметры.СтрокаПоиска) Тогда
		
		УсловияПодбора = "";
		МетаданныеОбъекта = Метаданные.Справочники.ВидыИспользованияРабочегоВремени;
		
		Для Каждого Поле Из МетаданныеОбъекта.ВводПоСтроке Цикл
			УсловияПодбора = УсловияПодбора + ?(ПустаяСтрока(УсловияПодбора), "", Символы.ПС + "ИЛИ ") + "(ВидыВремени." + Поле.Имя + " ПОДОБНО &СтрокаПоиска)";
		КонецЦикла;
		
		Если Не ПустаяСтрока(УсловияПодбора) Тогда
			ТекстЗапросаУсловий = ?(ПустаяСтрока(ТекстЗапросаУсловий), "", ТекстЗапросаУсловий + "
				|	И ") + "(" + УсловияПодбора + ")";
		КонецЕсли; 
			
		Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска + "%");
		
	КонецЕсли; 
	
	// Добавление отборов, переданных в параметре.
	Если Параметры.Отбор.Количество() > 0 Тогда
		
		Для Каждого ЭлементОтбора Из Параметры.Отбор Цикл
			
			Если ТипЗнч(ЭлементОтбора.Значение) = Тип("ФиксированныйМассив") Тогда				
				УсловиеСПравымЗначением = " В (&Отбор" + ЭлементОтбора.Ключ + ")";				
			Иначе				
				УсловиеСПравымЗначением = " = (&Отбор" + ЭлементОтбора.Ключ + ")";				
			КонецЕсли; 
			
			ТекстЗапросаУсловий = ?(ПустаяСтрока(ТекстЗапросаУсловий), "", ТекстЗапросаУсловий + Символы.ПС + " И ")
				+ "ВидыВремени." + ЭлементОтбора.Ключ + УсловиеСПравымЗначением;
				
			Запрос.УстановитьПараметр("Отбор" + ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 51
		|	ВидыВремени.Ссылка КАК Ссылка,
		|	ВидыВремени.ПометкаУдаления,
		|	"""" КАК Предупреждение,
		|	ВидыВремени.Наименование,
		|	ВидыВремени.БуквенныйКод
		|ИЗ
		|	Справочник.ВидыИспользованияРабочегоВремени КАК ВидыВремени";
		
	Если Не ПустаяСтрока(ТекстЗапросаУсловий) Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	" + ТекстЗапросаУсловий;
	КонецЕсли; 
		
	ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	ВидыВремени.Наименование";
		
	Запрос.Текст = ТекстЗапроса;
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ШаблонПредставления = "%1";
		Если ЗначениеЗаполнено(Выборка.БуквенныйКод) Тогда
			ШаблонПредставления = "%1 (%2)";
		КонецЕсли;
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления, Выборка.Наименование, СокрЛП(Выборка.БуквенныйКод));
		ДанныеВыбора.Добавить(Выборка.Ссылка, Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти	


#КонецЕсли
