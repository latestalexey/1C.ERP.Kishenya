
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПустоеПодразделение = НСтр("ru='Не заполняется';uk='Не заповнюється'");
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	Если Параметры.ДополнительныеПараметры.Свойство("УчетнаяПолитика") Тогда
		УчетнаяПолитика = Параметры.ДополнительныеПараметры.УчетнаяПолитика;
	КонецЕсли;
	
	ОбновитьРеквизитыЗависящиеОтОперации();
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		УстановитьИсточникиПодразделенийПоУмолчанию();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Или ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Справочники.ШаблоныПроводокДляМеждународногоУчета.ИнициализироватьКомпоновщик(ЭтотОбъект, Объект.Операция);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		СохраненныеНастройки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования, "ДополнительныйОтбор").Получить();
		Справочники.ШаблоныПроводокДляМеждународногоУчета.ЗагрузитьНастройки(ЭтотОбъект, СохраненныеНастройки);
	КонецЕсли;
	
	ПроверитьИспользованиеВПравилахОтраженияВМеждународномУчете();
	
	УстановитьЗаголовкиКомандУточненияСчетов();
	
	УстановитьДоступностьЭлементовФормы(Истина);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьТекстУстановленДополнительныйОтбор();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыНастройкиИспользованияВУчетнойПолитике" Тогда
	    ПроверитьИспользованиеВПравилахОтраженияВМеждународномУчете();   
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(УчетнаяПолитика) Тогда
		ОтразитьВУчетнойПолитике(ТекущийОбъект.Ссылка);
		ПроверитьИспользованиеВПравилахОтраженияВМеждународномУчете();
	КонецЕсли;

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписанШаблонПроводки", Объект.Ссылка);

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Справочники.ШаблоныПроводокДляМеждународногоУчета.ЗаписатьДополнительныйОтбор(ЭтотОбъект, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Справочники.ШаблоныПроводокДляМеждународногоУчета.ИнициализироватьКомпоновщик(ЭтотОбъект, ТекущийОбъект.Операция);
	
	СохраненныеНастройки = ТекущийОбъект.ДополнительныйОтбор.Получить();
	Справочники.ШаблоныПроводокДляМеждународногоУчета.ЗагрузитьНастройки(ЭтотОбъект, СохраненныеНастройки);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОперацияПриИзменении(Элемент)
	
	Объект.ТипИсточникаУточненияСчетаДт = "";
	Объект.ТипИсточникаУточненияСчетаКт = "";
	
	ОбновитьРеквизитыЗависящиеОтОперации();
	
	УстановитьДоступностьЭлементовФормы(Ложь, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетДебетаПоУмолчаниюПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(Ложь, Элемент.Имя);
	
	ОбновитьРеквизитыЗависящиеОтСчетаДебетаПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетКредитаПоУмолчаниюПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(Ложь, Элемент.Имя);
	
	ОбновитьРеквизитыЗависящиеОтСчетаКредитаПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипИсточникаУточненияСчетаДтПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(Ложь, Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипИсточникаУточненияСчетаКтПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементовФормы(Ложь, Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура КомпоновщикНастройкиОтборПриИзменении(Элемент)
	
	Объект.УстановленДополнительныйОтбор = Компоновщик.Настройки.Отбор.Элементы.Количество() > 0;
	ОбновитьТекстУстановленДополнительныйОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьТекстУстановленДополнительныйОтбор()

	ТекстУстановленДополнительныйОтбор = ?(Объект.УстановленДополнительныйОтбор, НСтр("ru='Установлен';uk='Встановлений'"), "");

КонецПроцедуры

&НаСервере
Функция СчетВалютный(Счет)

	Возврат МеждународныйУчетОбщегоНазначения.СчетВалютный(Счет);

КонецФункции

&НаСервере
Процедура ПроверитьИспользованиеВПравилахОтраженияВМеждународномУчете()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ПравилаОтраженияВМеждународномУчете.УчетнаяПолитика) КАК УчетнаяПолитика
	|ИЗ
	|	РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтраженияВМеждународномУчете
	|ГДЕ
	|	ПравилаОтраженияВМеждународномУчете.ШаблонПроводки = &ШаблонПроводки
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ПравилаОтраженияВМеждународномУчете.УчетнаяПолитика) > 0";
	
	Запрос.УстановитьПараметр("ШаблонПроводки", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДоступноИзменениеНастроекМФУ = МеждународныйУчетОбщегоНазначения.ДоступноИзменениеНастроекМеждународногоУчета();
	
	Если Выборка.Следующий() Тогда
		СостояниеИспользованияВУчетнойПолитике = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru=' Используется (%1)';uk=' Використовується (%1)'"),
			Выборка.УчетнаяПолитика);
		Если ДоступноИзменениеНастроекМФУ Тогда
			Элементы.НастроитьИспользованиеВУчетнойПолитике.Заголовок = НСтр("ru='Изменить';uk='Змінити'");
		Иначе
			Элементы.НастроитьИспользованиеВУчетнойПолитике.Заголовок = НСтр("ru='Посмотреть';uk='Подивитися'");
		КонецЕсли;
	Иначе
		СостояниеИспользованияВУчетнойПолитике = НСтр("ru=' Не используется';uk=' Не використовується'");
		Элементы.НастроитьИспользованиеВУчетнойПолитике.Заголовок = НСтр("ru='Настроить';uk='Настроїти'");
		Элементы.НастроитьИспользованиеВУчетнойПолитике.Видимость = ДоступноИзменениеНастроекМФУ;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтразитьВУчетнойПолитике(ШаблонПроводки)

	НаборЗаписей = РегистрыСведений.ПравилаОтраженияВМеждународномУчете.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.УчетнаяПолитика.Установить(УчетнаяПолитика);
	НаборЗаписей.Отбор.ШаблонПроводки.Установить(ШаблонПроводки);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.УчетнаяПолитика = УчетнаяПолитика;
	НоваяЗапись.ШаблонПроводки = ШаблонПроводки;
	
	НаборЗаписей.Записать();

КонецПроцедуры

&НаСервере
Функция УстановитьЗаголовкиКомандУточненияСчетов()

	ДоступноИзменениеНастроекМФУ = МеждународныйУчетОбщегоНазначения.ДоступноИзменениеНастроекМеждународногоУчета();
	
 	Если НЕ ДоступноИзменениеНастроекМФУ Тогда	
		Элементы.НастроитьУточнениеСчетаДт.Заголовок = НСтр("ru='Посмотреть уточнение счета Дт';uk='Подивитися уточнення рахунку Дт'");
		Элементы.НастроитьУточнениеСчетаКт.Заголовок = НСтр("ru='Посмотреть уточнение счета Кт';uk='Подивитися уточнення рахунку Кт'");
	КонецЕсли;	

КонецФункции

&НаСервере
Функция ИсточникиУточненияСчета()
	
	ИсточникиУточненияСчета = Неопределено;
	
	Если Объект.Операция = Справочники.НастройкиХозяйственныхОпераций.АмортизацияВнеоборотныхАктивов Тогда
		
		ИсточникиУточненияСчета = Новый Соответствие;
		ИсточникиУточненияСчета.Вставить(
			Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаДоходовРасходов,
			Новый Структура("ИмяПоля", "ГФУДоходовРасходов"));
		
	Иначе
		
		ИсточникДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Операция, "ИсточникДанных");
		ИсточникиУточненияСчета = МеждународныйУчетСерверПовтИсп.ИсточникиУточненияСчета(ИсточникДанных);
		
	КонецЕсли;
	
	Возврат ИсточникиУточненияСчета;
	
КонецФункции

&НаСервере
Процедура УстановитьИсточникиПодразделенийПоУмолчанию()

	ИсточникХозяйственнаяОперация = Перечисления.ИсточникиПодразделенийАналитическихРегистров.ХозяйственнаяОперация;
	Если Элементы.ИсточникПодразделенияДт.СписокВыбора.НайтиПоЗначению(ИсточникХозяйственнаяОперация) <> Неопределено Тогда
		Объект.ИсточникПодразделенияДт = ИсточникХозяйственнаяОперация;
		Объект.ИсточникПодразделенияКт = ИсточникХозяйственнаяОперация;
	КонецЕсли;

КонецПроцедуры


#Область УправлениеДоступностьюЭлементовФормы

&НаСервере
Процедура УстановитьДоступностьЭлементовФормы(ОбновитьВсе, ИмяЭлементаФормы = Неопределено)

	Если ОбновитьВсе или ИмяЭлементаФормы = "Операция" Тогда
		УстановитьДоступностьПриИзмененииОперации();
	КонецЕсли;
	
	Если ОбновитьВсе или ИмяЭлементаФормы = "ТипИсточникаУточненияСчетаДт" Тогда
		УстановитьДоступностьПриИзмененииТипаИсточникаУточненияСчетаДт()
	КонецЕсли;
	
	Если ОбновитьВсе или ИмяЭлементаФормы = "ТипИсточникаУточненияСчетаКт" Тогда
		УстановитьДоступностьПриИзмененииТипаИсточникаУточненияСчетаКт()
	КонецЕсли;

	Если ОбновитьВсе или ИмяЭлементаФормы = "СчетДебетаПоУмолчанию" Тогда
		УстановитьДоступностьИсточникаСуммыВВалютеДт();
	КонецЕсли;
	
	Если ОбновитьВсе или ИмяЭлементаФормы = "СчетКредитаПоУмолчанию" Тогда
		УстановитьДоступностьИсточникаСуммыВВалютеКт();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПриИзмененииОперации()
	
	ОперацияЗаполнена = ЗначениеЗаполнено(Объект.Операция);
	
	УстановитьДоступностьЭлемента("ТипИсточникаУточненияСчетаДт", ОперацияЗаполнена);
	УстановитьДоступностьЭлемента("ТипИсточникаУточненияСчетаКт", ОперацияЗаполнена);
	
	УстановитьДоступностьЭлемента("ИсточникПодразделенияДт", ОперацияЗаполнена);
	УстановитьДоступностьЭлемента("ИсточникПодразделенияКт", ОперацияЗаполнена);
	
	УстановитьДоступностьЭлемента("ИсточникСуммыВВалютеДт", ОперацияЗаполнена);
	УстановитьДоступностьЭлемента("ИсточникСуммыВВалютеКт", ОперацияЗаполнена);
	
	УстановитьДоступностьЭлемента("ИсточникБалансовойСуммы", ОперацияЗаполнена);
	
	УстановитьДоступностьИсточникаУточненияСчетаДт();
	УстановитьДоступностьИсточникаУточненияСчетаКт();
	
	УстановитьДоступностьНастройкиУточненияСчетаДт();
	УстановитьДоступностьНастройкиУточненияСчетаКт();
	
	УстановитьДоступностьИсточникаСуммыВВалютеДт();
	УстановитьДоступностьИсточникаСуммыВВалютеКт();
	
	ОперацияАмортизации = (Объект.Операция = Справочники.НастройкиХозяйственныхОпераций.АмортизацияВнеоборотныхАктивов);
	
	Элементы.РучноеУточнениеПроводки.Видимость = Не ОперацияАмортизации;
	
	Элементы.ИсточникПодразделенияДт.Видимость = Не ОперацияАмортизации;
	Элементы.ИсточникСуммыВВалютеДт.Видимость = Не ОперацияАмортизации;
	Элементы.ДекорацияПояснениеКРесурсуСуммыВВалютеДебета.Видимость = Не ОперацияАмортизации;
	Элементы.ИзменятьЗнакОперацииПриОтраженииВУчете.Видимость = Не ОперацияАмортизации;
	
	Элементы.ГруппаКредитаСтраницы.ТекущаяСтраница = ?(
		ОперацияАмортизации,
		Элементы.ГруппаКредитаСтраницаАмортизация,
		Элементы.ГруппаКредитаСтраницаПоУмолчанию);
	
	Элементы.ГруппаДополнительныйОтбор.Видимость = ЗначениеЗаполнено(АдресСхемыКомпоновкиДанных);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПриИзмененииТипаИсточникаУточненияСчетаДт()

	УстановитьДоступностьНастройкиУточненияСчетаДт();

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПриИзмененииТипаИсточникаУточненияСчетаКт()

	УстановитьДоступностьНастройкиУточненияСчетаКт();

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьИсточникаУточненияСчетаДт()

	ДоступностьЭлемента = Элементы.ТипИсточникаУточненияСчетаДт.СписокВыбора.Количество() > 0;
	УстановитьДоступностьЭлемента("ТипИсточникаУточненияСчетаДт", ДоступностьЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьИсточникаУточненияСчетаКт()

	ДоступностьЭлемента = Элементы.ТипИсточникаУточненияСчетаКт.СписокВыбора.Количество() > 0;
	УстановитьДоступностьЭлемента("ТипИсточникаУточненияСчетаКт", ДоступностьЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьНастройкиУточненияСчетаДт()

	ДоступностьЭлемента = ЗначениеЗаполнено(Объект.Операция) и ЗначениеЗаполнено(Объект.ТипИсточникаУточненияСчетаДт);
	УстановитьДоступностьЭлемента("НастроитьУточнениеСчетаДт", ДоступностьЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьНастройкиУточненияСчетаКт()

	ДоступностьЭлемента = ЗначениеЗаполнено(Объект.Операция) и ЗначениеЗаполнено(Объект.ТипИсточникаУточненияСчетаКт);
	УстановитьДоступностьЭлемента("НастроитьУточнениеСчетаКт", ДоступностьЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьИсточникаСуммыВВалютеДт()

	ДоступностьЭлемента = Элементы.ИсточникСуммыВВалютеДт.СписокВыбора.Количество() > 0 и СчетВалютный(Объект.СчетДебетаПоУмолчанию);
	УстановитьДоступностьЭлемента("ИсточникСуммыВВалютеДт", ДоступностьЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьИсточникаСуммыВВалютеКт()

	ДоступностьЭлемента = Элементы.ИсточникСуммыВВалютеКт.СписокВыбора.Количество() > 0 и СчетВалютный(Объект.СчетКредитаПоУмолчанию);
	УстановитьДоступностьЭлемента("ИсточникСуммыВВалютеКт", ДоступностьЭлемента);

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлемента(ИмяЭлемента, ДоступностьЭлемента)

	Элементы[ИмяЭлемента].Доступность = ДоступностьЭлемента;

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеРеквизитовИЭлементовФормы

&НаСервере
Процедура ОбновитьРеквизитыЗависящиеОтОперации()

	СформироватьСпискиВыбораИсточниковУточнения();
	
	ЗаполнитьСпискиВыбораИсточниковВалютныхСумм();
	
	ЗаполнитьСписокВыбораИсточникаБалансовойСуммы();
	
	ЗаполнитьСписокВыбораИсточниковПодразделений();
	
	Справочники.ШаблоныПроводокДляМеждународногоУчета.ИнициализироватьКомпоновщик(ЭтотОбъект, Объект.Операция);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРеквизитыЗависящиеОтСчетаДебетаПоУмолчанию()

	Если НЕ Элементы.ИсточникСуммыВВалютеДт.Доступность Тогда
		ОчиститьИсточникСуммыВВалютеДт();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРеквизитыЗависящиеОтСчетаКредитаПоУмолчанию()

	Если НЕ Элементы.ИсточникСуммыВВалютеКт.Доступность Тогда
		ОчиститьИсточникСуммыВВалютеКт();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьСпискиВыбораИсточниковУточнения()

	СписокВыбораИсточникаУточненияСчетаДт = Элементы.ТипИсточникаУточненияСчетаДт.СписокВыбора;
	СписокВыбораИсточникаУточненияСчетаКт = Элементы.ТипИсточникаУточненияСчетаКт.СписокВыбора;
	
	СписокВыбораИсточникаУточненияСчетаДт.Очистить();
	СписокВыбораИсточникаУточненияСчетаКт.Очистить();
	
	ИсточникиУточненияСчета = ИсточникиУточненияСчета();
	Если ИсточникиУточненияСчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ИсточникУточненияСчета Из ИсточникиУточненияСчета Цикл
		СписокВыбораИсточникаУточненияСчетаДт.Добавить(ИсточникУточненияСчета.Ключ);
		СписокВыбораИсточникаУточненияСчетаКт.Добавить(ИсточникУточненияСчета.Ключ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиВыбораИсточниковВалютныхСумм()

	СписокВыбораИсточникаСуммыВВалютеДт = Элементы.ИсточникСуммыВВалютеДт.СписокВыбора;
	СписокВыбораИсточникаСуммыВВалютеКт = Элементы.ИсточникСуммыВВалютеКт.СписокВыбора;
	
	СписокВыбораИсточникаСуммыВВалютеДт.Очистить();
	СписокВыбораИсточникаСуммыВВалютеКт.Очистить();
	
	ИсточникДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Операция, "ИсточникДанных");
	Показатели = МеждународныйУчетСерверПовтИсп.ПоказателиВВалюте(ИсточникДанных);
	Если Показатели = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Показатель Из Показатели Цикл
		СписокВыбораИсточникаСуммыВВалютеДт.Добавить(Показатель.Ключ);
		СписокВыбораИсточникаСуммыВВалютеКт.Добавить(Показатель.Ключ);
	КонецЦикла;
	
	СписокВыбораИсточникаСуммыВВалютеДт.СортироватьПоПредставлению();
	СписокВыбораИсточникаСуммыВВалютеКт.СортироватьПоПредставлению();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораИсточникаБалансовойСуммы()

	ПараметрыОтбора = Новый Структура("Использование", Истина);
	ТаблицаПоказателей = Объект.Операция.ПоказателиРегистра.Выгрузить(ПараметрыОтбора);
	Элементы.ИсточникБалансовойСуммы.СписокВыбора.ЗагрузитьЗначения(ТаблицаПоказателей.ВыгрузитьКолонку("Показатель"));

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораИсточниковПодразделений()

	СписокВыбораИсточникаПодразделенияДт = Элементы.ИсточникПодразделенияДт.СписокВыбора;
	СписокВыбораИсточникаПодразделенияКт = Элементы.ИсточникПодразделенияКт.СписокВыбора;
	
	СписокВыбораИсточникаПодразделенияДт.Очистить();
	СписокВыбораИсточникаПодразделенияКт.Очистить();
	
	ИсточникДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Операция, "ИсточникДанных");
	ИсточникиПодразделений = МеждународныйУчетСерверПовтИсп.ИсточникиПодразделений(ИсточникДанных);
	Если ИсточникиПодразделений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Источник Из ИсточникиПодразделений Цикл
		СписокВыбораИсточникаПодразделенияДт.Добавить(Источник.Ключ);
		СписокВыбораИсточникаПодразделенияКт.Добавить(Источник.Ключ);
	КонецЦикла;
	
	СписокВыбораИсточникаПодразделенияДт.СортироватьПоПредставлению();
	СписокВыбораИсточникаПодразделенияКт.СортироватьПоПредставлению();
	
	СписокВыбораИсточникаПодразделенияДт.Добавить(Неопределено, ПустоеПодразделение);
	СписокВыбораИсточникаПодразделенияКт.Добавить(Неопределено, ПустоеПодразделение);
	
КонецПроцедуры

&НаКлиенте
Функция ОчиститьИсточникСуммыВВалютеДт()

	Объект.ИсточникСуммыВВалютеДт = "";

КонецФункции

&НаКлиенте
Функция ОчиститьИсточникСуммыВВалютеКт()

	Объект.ИсточникСуммыВВалютеКт = "";

КонецФункции

#КонецОбласти

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	ОформитьИсточникиПодразделения(Элементы.ИсточникПодразделенияДт.Имя);
	ОформитьИсточникиПодразделения(Элементы.ИсточникПодразделенияКт.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ОформитьИсточникиПодразделения(ИмяЭлемента)
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяЭлемента);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект." + ИмяЭлемента);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПодсказкиВвода);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ПустоеПодразделение);
	
КонецПроцедуры

#КонецОбласти
