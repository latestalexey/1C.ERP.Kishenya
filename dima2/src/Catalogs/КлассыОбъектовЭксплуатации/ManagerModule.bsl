#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура проверки заполнения табличных частей правил планирования
//
// Параметры:
// 		ЭтотОбъект - СправочникОбъект.КлассыОР, СправочникОбъект.ПодклассыОР - Объект справочника, табличные части которого необходимо проверить
// 		МассивНеПроверяемыхРеквизитов - Массив - Массив имен реквизитов, которые необходимо удалить из проверяемых
// 		Отказ - Булево - Признак ошибки
//
Процедура ПроверкаЗаполненияПравилПланирования(ЭтотОбъект, МассивНеПроверяемыхРеквизитов, Отказ = Ложь) Экспорт
	
	МассивНеПроверяемыхРеквизитов.Добавить("РемонтныйЦикл.ИнтервалВремени");
	МассивНеПроверяемыхРеквизитов.Добавить("РемонтныйЦикл.ИнтервалВремениПланирования");
	МассивНеПроверяемыхРеквизитов.Добавить("РемонтныйЦикл.ЕдиницаВремени");
	МассивНеПроверяемыхРеквизитов.Добавить("РемонтныйЦикл.ИнтервалНаработки");
	МассивНеПроверяемыхРеквизитов.Добавить("РемонтныйЦикл.ИнтервалНаработкиПланирования");
	МассивНеПроверяемыхРеквизитов.Добавить("РемонтныйЦикл.ПоказательНаработки");
	МассивНеПроверяемыхРеквизитов.Добавить("ПрочиеРемонты.ИнтервалВремени");
	МассивНеПроверяемыхРеквизитов.Добавить("ПрочиеРемонты.ИнтервалВремениПланирования");
	МассивНеПроверяемыхРеквизитов.Добавить("ПрочиеРемонты.ЕдиницаВремени");
	МассивНеПроверяемыхРеквизитов.Добавить("ПрочиеРемонты.ИнтервалНаработки");
	МассивНеПроверяемыхРеквизитов.Добавить("ПрочиеРемонты.ИнтервалНаработкиПланирования");
	МассивНеПроверяемыхРеквизитов.Добавить("ПрочиеРемонты.ПоказательНаработки");
	
	СоответствиеВидовРемонтов = Новый Соответствие;
	
	Для Каждого Строка Из ЭтотОбъект.РемонтныйЦикл Цикл
		
		АдресОшибки = НСтр("ru=' в строке %НомерСтроки% списка ""Ремонтный цикл""';uk=' у рядку %НомерСтроки% списку ""Ремонтний цикл""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", Строка.НомерСтроки);
		
		НомерСтроки = Строка.НомерСтроки;
		
		Если СоответствиеВидовРемонтов.Получить(Строка.ВидРемонта) <> Неопределено Тогда
			// Вид ремонта уже присутствует в табличной части в другой строке
			
			ТекстОшибки = НСтр("ru='Вид ремонта ""%ВидРемонта%""';uk='Вид ремонту ""%ВидРемонта%""'") + АдресОшибки + НСтр("ru=' уже присутствует в строке %НомерПредыдущейСтроки%';uk=' вже присутній в рядку %НомерПредыдущейСтроки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ВидРемонта%", Строка.ВидРемонта);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерПредыдущейСтроки%", Формат(СоответствиеВидовРемонтов.Получить(Строка.ВидРемонта), "ЧГ=0"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РемонтныйЦикл", Строка.НомерСтроки, "ВидРемонта"),,
				Отказ);
		Иначе
			СоответствиеВидовРемонтов.Вставить(Строка.ВидРемонта, НомерСтроки);
		КонецЕсли;
		
		Если ЭтотОбъект.РемонтныйЦиклПоИнтервалуНаработки Тогда
			
			Если Не ЗначениеЗаполнено(Строка.ИнтервалНаработки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Межремонтный интервал""';uk='Не заповнена колонка ""Міжремонтний інтервал""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РемонтныйЦикл", Строка.НомерСтроки, "ИнтервалНаработки"),
					,
					Отказ);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.ПоказательНаработки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Единица измерения""';uk='Не заповнена колонка ""Одиниця вимірювання""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РемонтныйЦикл", Строка.НомерСтроки, "ПоказательНаработки"),
					,
					Отказ);
			КонецЕсли;
			
		Иначе
			
			Если Не ЗначениеЗаполнено(Строка.ИнтервалВремени) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Межремонтный интервал""';uk='Не заповнена колонка ""Міжремонтний інтервал""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РемонтныйЦикл", Строка.НомерСтроки, "ИнтервалВремени"),
					,
					Отказ);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.ЕдиницаВремени) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Единица измерения""';uk='Не заповнена колонка ""Одиниця вимірювання""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РемонтныйЦикл", Строка.НомерСтроки, "ЕдиницаВремени"),
					,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СоответствиеВидовРемонтов.Очистить();
	
	Для Каждого Строка Из ЭтотОбъект.ПрочиеРемонты Цикл
		
		АдресОшибки = НСтр("ru=' в строке %НомерСтроки% списка ""Прочие ремонты""';uk=' у рядку %НомерСтроки% списку ""Інші ремонти""'");
		АдресОшибки = СтрЗаменить(АдресОшибки, "%НомерСтроки%", Строка.НомерСтроки);
		
		Если СоответствиеВидовРемонтов.Получить(Строка.ВидРемонта) <> Неопределено Тогда
			// Вид ремонта уже присутствует в табличной части в другой строке
			
			ТекстОшибки = НСтр("ru='Вид ремонта ""%ВидРемонта%""';uk='Вид ремонту ""%ВидРемонта%""'") + АдресОшибки + НСтр("ru=' уже присутствует в строке %НомерПредыдущейСтроки%';uk=' вже присутній в рядку %НомерПредыдущейСтроки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ВидРемонта%", Строка.ВидРемонта);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерПредыдущейСтроки%", Формат(СоответствиеВидовРемонтов.Получить(Строка.ВидРемонта), "ЧГ=0"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("РемонтныйЦикл", Строка.НомерСтроки, "ВидРемонта"),,
				Отказ);
		Иначе
			СоответствиеВидовРемонтов.Вставить(Строка.ВидРемонта, НомерСтроки);
		КонецЕсли;
		
		Если Строка.ПоИнтервалуНаработки Тогда
			
			Если Не ЗначениеЗаполнено(Строка.ИнтервалНаработки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Межремонтный интервал""';uk='Не заповнена колонка ""Міжремонтний інтервал""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПрочиеРемонты", Строка.НомерСтроки, "ИнтервалНаработки"),
					,
					Отказ);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.ПоказательНаработки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Единица измерения""';uk='Не заповнена колонка ""Одиниця вимірювання""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПрочиеРемонты", Строка.НомерСтроки, "ПоказательНаработки"),
					,
					Отказ);
			КонецЕсли;
			
		Иначе
			
			Если Не ЗначениеЗаполнено(Строка.ИнтервалВремени) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Межремонтный интервал""';uk='Не заповнена колонка ""Міжремонтний інтервал""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПрочиеРемонты", Строка.НомерСтроки, "ИнтервалВремени"),
					,
					Отказ);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.ЕдиницаВремени) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Единица измерения""';uk='Не заповнена колонка ""Одиниця вимірювання""'") + АдресОшибки,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПрочиеРемонты", Строка.НомерСтроки, "ЕдиницаВремени"),
					,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает наборы свойств по классу объектов эксплуатации
//
Функция ПолучитьНаборыСвойств(Класс) Экспорт
	
	СтруктураНаборов = Новый Структура(
		"ПаспортныеХарактеристики",
		Неопределено);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Классы.НаборСвойств КАК ПаспортныеХарактеристики
		|ИЗ
		|	Справочник.КлассыОбъектовЭксплуатации КАК Классы
		|ГДЕ
		|	Классы.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Класс);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураНаборов;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураНаборов, Выборка);
	КонецЕсли;
	
	Возврат СтруктураНаборов;
	
КонецФункции

#КонецОбласти

#КонецЕсли
