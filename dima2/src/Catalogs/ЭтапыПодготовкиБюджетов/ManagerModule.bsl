
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура меняет коды переданного элемента и ближайшего элемента
// в указанном направлении
//
// Параметры
//  Элемент  - СправочникСсылка.ЭтапыПодготовкиБюджетов - элемент, у которого меняем код
//  Направление  - Число (+1, -1) - в какую сторону меняем код
//
Процедура СдвинутьЭлемент(Элемент, Направление) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапыПодготовкиБюджетов.Ссылка,
	|	ЭтапыПодготовкиБюджетов.Родитель,
	|	ЭтапыПодготовкиБюджетов.Код + &Смещение КАК Код,
	|	ЭтапыПодготовкиБюджетов.Владелец
	|ПОМЕСТИТЬ ТекущийЭлемент
	|ИЗ
	|	Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	|ГДЕ
	|	ЭтапыПодготовкиБюджетов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыПодготовкиБюджетов.Ссылка,
	|	ВЫБОР
	|		КОГДА ЭтапыПодготовкиБюджетов.Ссылка = ТекущийЭлемент.Ссылка
	|			ТОГДА ТекущийЭлемент.Код
	|		ИНАЧЕ ЭтапыПодготовкиБюджетов.Код
	|	КОНЕЦ КАК КодПорядок,
	|	ВЫБОР
	|		КОГДА ЭтапыПодготовкиБюджетов.Ссылка = ТекущийЭлемент.Ссылка
	|			ТОГДА &Смещение
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДопПорядок,
	|	ЭтапыПодготовкиБюджетов.Код
	|ИЗ
	|	ТекущийЭлемент КАК ТекущийЭлемент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	|		ПО ТекущийЭлемент.Родитель = ЭтапыПодготовкиБюджетов.Родитель
	|			И ТекущийЭлемент.Владелец = ЭтапыПодготовкиБюджетов.Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодПорядок,
	|	ДопПорядок");
	
	Запрос.УстановитьПараметр("Ссылка", Элемент);
	Запрос.УстановитьПараметр("Смещение", Направление);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Сч = 0;
	Пока Выборка.Следующий() Цикл
		Сч = Сч + 1;
		Если Сч <> Выборка.Код Тогда
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Объект.Код = Сч;
			Объект.мРежимОбновленияКода = Истина;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура перенумеровывает всю группу элементов
// применяется при переносе элемента в новую группу - перенумеровывается старая группа
//
// Параметры
//  Родитель  - СправочникСсылка.ЭтапыПодготовкиБюджетов 
//				- Группа, в рамках которой следует перенумеровать
//  ПереносимыйЭлемент  - СправочникСсылка.ЭтапыПодготовкиБюджетов 
//				- Элемент, который переносим из группы
//
Процедура ПеренумероватьГруппуЭлементов(Родитель, ПереносимыйЭлемент) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапыПодготовкиБюджетов.Ссылка,
	|	ЭтапыПодготовкиБюджетов.Код
	|ИЗ
	|	Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	|ГДЕ
	|	ЭтапыПодготовкиБюджетов.Родитель = &Родитель
	|	И ЭтапыПодготовкиБюджетов.Ссылка <> &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПодготовкиБюджетов.Код");
	
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Запрос.УстановитьПараметр("Ссылка", ПереносимыйЭлемент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Сч = 0;
	Пока Выборка.Следующий() Цикл
		Сч = Сч + 1;
		Если Сч <> Выборка.Код Тогда
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Объект.Код = Сч;
			Объект.мРежимОбновленияКода = Истина;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
// 
// Возвращаемое значание:
// 	Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("Периодичность");
	Результат.Добавить("ПорядокВыполненияЭтапов");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли