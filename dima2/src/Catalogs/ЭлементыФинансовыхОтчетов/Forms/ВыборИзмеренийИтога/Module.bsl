
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ДеревоЭлементов = ПолучитьИзВременногоХранилища(Параметры.АдресЭлементовОтчета);
	Если ЗначениеЗаполнено(Параметры.АдресТаблицыЭлементов) Тогда
		ТаблицаЭлементов = ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыЭлементов)
	Иначе
		ТаблицаЭлементов = Неопределено;
	КонецЕсли;
	
	Колонка = Неопределено; Строка = Неопределено;
	
	Если ТаблицаЭлементов = Неопределено Тогда
		
		СтрокаДерева = ДеревоЭлементов.Строки.Найти(Параметры.АдресРедактируемогоЭлемента, "АдресСтруктурыЭлемента", Истина);
		КорневойЭлемент = ФинансоваяОтчетностьКлиентСервер.КорневойЭлемент(СтрокаДерева, ВидЭлемента("ТаблицаПоказателиВСтроках"));
		ИсточникПодчиненных = Неопределено;
		Если КорневойЭлемент <> Неопределено Тогда
			ИсточникПодчиненных = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(КорневойЭлемент, "ВидЭлемента", ВидЭлемента("Колонки"));
			Вышележащие = "Строки";
			Нижележащие = "Колонки";
		КонецЕсли;
		КорневойЭлемент = ФинансоваяОтчетностьКлиентСервер.КорневойЭлемент(СтрокаДерева, ВидЭлемента("ТаблицаПоказателиВКолонках"));
		Если КорневойЭлемент <> Неопределено Тогда
			ИсточникПодчиненных = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(КорневойЭлемент, "ВидЭлемента", ВидЭлемента("Строки"));
			Вышележащие = "Колонки";
			Нижележащие = "Строки";
		КонецЕсли;
		Если ИсточникПодчиненных = Неопределено Тогда
			ИсточникПодчиненных = ФинансоваяОтчетностьКлиентСервер.КорневойЭлемент(СтрокаДерева);
			Вышележащие = "Строки";
			Нижележащие = Неопределено;
		КонецЕсли;
		
		ДополнитьВышестоящимиИзмерениями(СтрокаДерева, Вышележащие);
		ПеречислитьНижележащиеИзмерения(СтрокаДерева, Вышележащие);
		Если Нижележащие <> Неопределено Тогда
			ПеречислитьНижележащиеИзмерения(ИсточникПодчиненных, Нижележащие);
		Иначе
			ВидИтога = 1;
			Элементы.ВидИтога.Доступность = Ложь;
		КонецЕсли;
		
	Иначе
		
		ЯчейкаМатрицы = ТаблицаЭлементов.Найти(Параметры.АдресРедактируемогоЭлемента, "Элемент");
		
		СтрокаДерева = ДеревоЭлементов.Строки.Найти(ЯчейкаМатрицы.Строка, "АдресСтруктурыЭлемента", Истина);
		ДополнитьВышестоящимиИзмерениями(СтрокаДерева, "Строки");
		ПеречислитьНижележащиеИзмерения(СтрокаДерева, "Строки");
		
		КолонкаДерева = ДеревоЭлементов.Строки.Найти(ЯчейкаМатрицы.Колонка, "АдресСтруктурыЭлемента", Истина);
		ДополнитьВышестоящимиИзмерениями(КолонкаДерева, "Колонки");
		ПеречислитьНижележащиеИзмерения(КолонкаДерева, "Колонки");
		
	КонецЕсли;
	
	УстановитьВыбранныеИзмерения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьРасширенныеВозможности(Команда)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидИтогаПриИзменении(Элемент)
	
	УстановитьТекстНадписи();
	УстановитьВыбранныеИзмерения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Закрыть(СписокИзмерений());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СписокИзмерений()
	
	Массив = ВыборИзмерений.Выгрузить(Новый Структура("Флаг", Истина)).ВыгрузитьКолонку(1);
	Возврат СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(Массив, ", ");
	
КонецФункции

&НаСервере
Процедура ДополнитьВышестоящимиИзмерениями(Знач СтрокаДерева, Источник)
	
	Пока СтрокаДерева <> Неопределено
		И СтрокаДерева.ВидЭлемента <> ВидЭлемента("Строки")
		И СтрокаДерева.ВидЭлемента <> ВидЭлемента("Колонки") Цикл
		
		Если СтрокаДерева.ВидЭлемента = ВидЭлемента("Измерение") Тогда
			
			Представление = ПредставлениеИзмерения(СтрокаДерева);
			
			Если ВыборИзмерений.НайтиСтроки(Новый Структура("ПредставлениеИзмерения", Представление)).Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ВыборИзмерений.Добавить();
			НоваяСтрока.ПредставлениеИзмерения = Представление;
			НоваяСтрока.ИсточникИзмерения = Источник;
			
		КонецЕсли;
		
		СтрокаДерева = СтрокаДерева.Родитель;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗначениеРеквизита(СтрокаДерева, ИмяРеквизита)
	
	Если ЗначениеЗаполнено(СтрокаДерева.АдресСтруктурыЭлемента) Тогда
		Значение = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(
																СтрокаДерева.АдресСтруктурыЭлемента, ИмяРеквизита);
	Иначе
		Значение = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(
																СтрокаДерева.ЭлементОтчета, ИмяРеквизита);
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

&НаСервере
Функция ПредставлениеИзмерения(СтрокаДерева)
	
	ТипИзмерения = ЗначениеРеквизита(СтрокаДерева, "ТипИзмерения");
	
	Если ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.Период Тогда
		
		Периодичность = ЗначениеРеквизита(СтрокаДерева, "Периодичность");
		Представление = Строка(Периодичность);
		
	ИначеЕсли ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.Организация Тогда
		
		Представление = "Организация";
		
	ИначеЕсли ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.Подразделение Тогда
		
		Представление = "Подразделение";
		
	ИначеЕсли ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.Сценарий Тогда
		
		Представление = "Сценарий";
		
	ИначеЕсли ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.Валюта Тогда
		
		Представление = "Валюта";
		
	ИначеЕсли ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.ИзмерениеРегистра Тогда
		
		Представление = ЗначениеРеквизита(СтрокаДерева, "ИмяИзмерения");
		
	ИначеЕсли ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.Аналитика
		ИЛИ ТипИзмерения = Перечисления.ТипыИзмеренийФинансовогоОтчета.ФиксированнаяАналитика Тогда
		
		ВидАналитики = ЗначениеРеквизита(СтрокаДерева, "ВидАналитики");
		Представление = Строка(ВидАналитики);
		
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

&НаСервере
Процедура ПеречислитьНижележащиеИзмерения(Знач СтрокаДерева, Источник)
	
	Для Каждого ПодчиненнаяСтрока из СтрокаДерева.Строки Цикл
		
		Если ПодчиненнаяСтрока.ВидЭлемента = ВидЭлемента("Измерение") Тогда
			
			Представление = ПредставлениеИзмерения(ПодчиненнаяСтрока);
			
			Если ВыборИзмерений.НайтиСтроки(Новый Структура("ПредставлениеИзмерения", Представление)).Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ВыборИзмерений.Добавить();
			НоваяСтрока.ПредставлениеИзмерения = Представление;
			НоваяСтрока.ИсточникИзмерения = Источник;
			
		КонецЕсли;
		
		ПеречислитьНижележащиеИзмерения(ПодчиненнаяСтрока, Источник);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидЭлемента(ИмяЭлемента)
	
	#Если Клиент Тогда
		Возврат ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета." + ИмяЭлемента);
	#Иначе
		Возврат Перечисления.ВидыЭлементовФинансовогоОтчета[ИмяЭлемента];
	#КонецЕсли
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	Если Элементы.ИспользоватьРасширенныеВозможности.Заголовок = НСтр("ru='Использовать расширенные возможности';uk='Використовувати розширені можливості'") Тогда
		Элементы.ИспользоватьРасширенныеВозможности.Заголовок = НСтр("ru='Использовать упрощенные возможности';uk='Використовувати спрощені можливості'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.ДетальнаяНастройка;
	Иначе
		Элементы.ИспользоватьРасширенныеВозможности.Заголовок = НСтр("ru='Использовать расширенные возможности';uk='Використовувати розширені можливості'");
		Элементы.Страницы.ТекущаяСтраница = Элементы.ПростаяНастройка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстНадписи()
	
	Если ВидИтога = 0 Тогда
		Элементы.НадписьИтог.Заголовок = НСтр("ru='Функция вернет итог по всем значениям по строке отчета';uk='Функція поверне підсумок по всіх значеннях по рядку звіту'");
	Иначе
		Элементы.НадписьИтог.Заголовок = НСтр("ru='Функция вернет итог по всем значениям по колонке отчета';uk='Функція поверне підсумок по всіх значеннях по колонці звіту'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВыбранныеИзмерения()
	
	Если ВидИтога Тогда
		Источник = "Строки";
	Иначе
		Источник = "Колонки";
	КонецЕсли;
	
	Для Каждого СтрокаПоиска из ВыборИзмерений Цикл
		
		СтрокаПоиска.Флаг = СтрокаПоиска.ИсточникИзмерения = Источник;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

