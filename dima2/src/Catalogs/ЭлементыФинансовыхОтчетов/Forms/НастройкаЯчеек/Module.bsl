
&НаКлиенте
Перем мКэшКопированияВставки;

&НаКлиенте
Перем ЗакрытиеФормы;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеФормы = Справочники.ЭлементыФинансовыхОтчетов.ФормаПриСозданииНаСервере(ЭтаФорма);
	ЗначениеВРеквизитФормы(ДанныеФормы.ЭлементыТаблицы, "ЭлементыТаблицы");
	
	ИдентификаторГлавногоХранилища 		= Параметры.ИдентификаторГлавногоХранилища;
	ИспользоватьДляВводаПлана 			= Параметры.ИспользоватьДляВводаПлана;
	ВариантРасположенияГраницыФактическихДанных = Параметры.ВариантРасположенияГраницыФактическихДанных;
	РедактируемыеЗначения				= Параметры.РедактируемыеЗначения;
	СкорректироватьРедактируемыеЗначенияНаЭлементыТекущейТаблицы();
	
	Если Параметры.Свойство("ПроверятьВидТаблицы") Тогда
		ВидТаблицы = Неопределено;
		Параметры.Свойство("ВидТаблицы", ВидТаблицы);
		Если ВидТаблицы = Перечисления.ВидыЭлементовФинансовогоОтчета.ТаблицаПоказателиВКолонках
			ИЛИ ВидТаблицы = Перечисления.ВидыЭлементовФинансовогоОтчета.ТаблицаПоказателиВСтроках Тогда
			ЭтоПростаяТаблица = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Шапка = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЛегендаНастройкиЯчеек");
	ПредставлениеОтчета.Очистить();
	
	Если ЭтоПростаяТаблица Тогда
		Элементы.ПредставлениеОтчетаКонтекстноеМенюВырезать.Видимость 		= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюВырезать.Доступность 	= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюКопировать.Видимость 	= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюКопировать.Доступность 	= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюВставить.Видимость 		= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюВставить.Доступность 	= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюОчистить.Видимость 		= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюОчистить.Доступность 	= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюСвойства.Видимость 		= Ложь;
		Элементы.ПредставлениеОтчетаКонтекстноеМенюСвойства.Доступность 	= Ложь;
	ИначеЕсли Не ЭтоПростаяТаблица Тогда
		Легенда = Шапка.ПолучитьОбласть("ЛегендаОбласти" + ?(ИспользоватьДляВводаПлана, "Ввода", ""));
		ПредставлениеОтчета.Вывести(Легенда);
	КонецЕсли;
	
	СтрокаОтчета = Параметры.ЭлементыОтчета.НайтиПоИдентификатору(Параметры.ИдентификаторСтрокиЭлементаОтчета);
	ИдентификаторСтрокиЭлементаОтчета = СтрокаОтчета.АдресСтруктурыЭлемента;
	ДеревоЭлементов = ДанныеФормыВЗначение(Параметры.ЭлементыОтчета, Тип("ДеревоЗначений"));
	КопияДереваЭлементов = ДеревоЭлементов.Скопировать();
	КопияДереваЭлементов.Строки.Очистить();
	
	СтрокаДерева = ФинансоваяОтчетностьКлиентСервер.ТаблицаЭлемента(ДеревоЭлементов, АдресЭлементаВХранилище);
	Если СтрокаДерева = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Неверные параметры данных настройки ячеек';uk='Неправильні параметри настройки комірок'")
	КонецЕсли;
	
	ФинансоваяОтчетностьКлиентСервер.УстановитьНовогоРодителя(СтрокаДерева, КопияДереваЭлементов, ,Ложь);
	
	СтруктураШирин = Справочники.ЭлементыФинансовыхОтчетов.ВывестиТаблицуНастройкиСложнойТаблицы(
																	ЭтаФорма, КопияДереваЭлементов);
	
	АдресЭлементовОтчета = ПоместитьВоВременноеХранилище(КопияДереваЭлементов, УникальныйИдентификатор);
	
	ШиринаМакета 	= СтруктураШирин.мШиринаМакета;
	ВысотаМакета 	= СтруктураШирин.мВысотаМакета;
	ВысотаШапки 	= СтруктураШирин.мВысотаШапки;
	ГлубинаОбъединения = БюджетнаяОтчетностьРасчетКэшаСервер.РассчитатьГлубинуУровней(КопияДереваЭлементов);
	
	СтруктураЭлемента = ПолучитьИзВременногоХранилища(АдресЭлементаВХранилище);
	Для Каждого СтрокаЭлементаОформления из СтруктураЭлемента.ЭлементыОформления Цикл
		
		НоваяСтрока = СписокЭлементовОформления.Добавить();
		НоваяСтрока.КлючЭлементаОформления = СтрокаЭлементаОформления.КлючЭлементаОформления;
		НоваяСтрока.ТипОформляемойОбласти = СтрокаЭлементаОформления.ТипОформляемойОбласти;
		
		НоваяСтрока.УсловиеХранилище = ПоместитьВоВременноеХранилище(СтрокаЭлементаОформления.Условие.Получить(), УникальныйИдентификатор);
		НоваяСтрока.ОформлениеХранилище = ПоместитьВоВременноеХранилище(СтрокаЭлементаОформления.Оформление.Получить(), УникальныйИдентификатор);
		
		СтруктураПоиска = Новый Структура("КлючЭлементаОформления", НоваяСтрока.КлючЭлементаОформления);
		
		ТаблицаОформляемыхЭлементов = СтруктураЭлемента.ОформляемыеСтроки.Скопировать(СтруктураПоиска);
		НоваяСтрока.ОформляемыеСтрокиХранилище = ПоместитьВоВременноеХранилище(ТаблицаОформляемыхЭлементов, УникальныйИдентификатор);
		
		ТаблицаОформляемыхЭлементов = СтруктураЭлемента.ОформляемыеКолонки.Скопировать(СтруктураПоиска);
		НоваяСтрока.ОформляемыеКолонкиХранилище = ПоместитьВоВременноеХранилище(ТаблицаОформляемыхЭлементов, УникальныйИдентификатор);
		
		ТаблицаОформляемыхЭлементов = СтруктураЭлемента.РасшифровкаПолейОтбораЭО.Скопировать(СтруктураПоиска);
		НоваяСтрока.РасшифровкаПолейОтбораЭОХранилище = ПоместитьВоВременноеХранилище(ТаблицаОформляемыхЭлементов, УникальныйИдентификатор);
		
		ЗаполнитьПредставленияСтроки(НоваяСтрока);
		
	КонецЦикла;
	
	ОбновитьНомераСтрокУсловногоОформления();
	
	УправлениеФормой();
	УстановитьВидимостьЭлементовОформления();
	
	УстановитьЦветЯчеек();
	
	ВидимостьЭлементовОформления = Ложь;
	
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	Всего = ОбластьРедактирования.Право - ОбластьРедактирования.Лево + 1;
	
	Если Всего Тогда
		ШиринаЗанято = 0;
		Для Сч = 1 по ОбластьРедактирования.Лево - 1 Цикл
			ШиринаЗанято = ШиринаЗанято + ПредставлениеОтчета.Область(,Сч,,Сч).ШиринаКолонки;
		КонецЦикла;
		ВсегоШирина = 120; //рекомендумая ширина таблицы
		ШиринаСвободно = ВсегоШирина - ШиринаЗанято;
		ШиринаКолонкиРекомендуемая = Макс(Мин(ШиринаСвободно / Всего, 30), 15);
		
		Для Сч = ОбластьРедактирования.Лево по ОбластьРедактирования.Право Цикл
			ПредставлениеОтчета.Область(,Сч,,Сч).ШиринаКолонки = ШиринаКолонкиРекомендуемая;
		КонецЦикла;
	КонецЕсли;
	
	ПредставлениеОтчета.ФиксацияСверху = ПолучитьОбластьРедактирования(ЭтаФорма).Верх - 1;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ЭлементыФинансовыхОтчетов.ФормаПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	Если ЗначениеЗаполнено(ЭтаФорма.АдресЭлементаВХранилище) Тогда
		
		СтруктураЭлемента = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресЭлементаВХранилище);
		АдресВХранилище = ПолучитьТаблицуЭлементов();
		СтруктураЭлемента.ЭлементыТаблицы = ПолучитьИзВременногоХранилища(АдресВХранилище);
		
		СтруктураЭлемента.ЭлементыОформления.Очистить();
		СтруктураЭлемента.ОформляемыеСтроки.Очистить();
		СтруктураЭлемента.ОформляемыеКолонки.Очистить();
		СтруктураЭлемента.РасшифровкаПолейОтбораЭО.Очистить();
		
		Для Каждого СтрокаУсловногоОформления из СписокЭлементовОформления Цикл
			
			НовыйЭлементОформления = СтруктураЭлемента.ЭлементыОформления.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйЭлементОформления, СтрокаУсловногоОформления);
			НовыйЭлементОформления.Оформление = Новый ХранилищеЗначения(
						ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.ОформлениеХранилище));
			НовыйЭлементОформления.Условие = Новый ХранилищеЗначения(
						ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.УсловиеХранилище));
			
			Таблица = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.ОформляемыеСтрокиХранилище);
			Если Таблица.Колонки.Найти("КлючЭлементаОформления") = Неопределено Тогда
				Таблица.Колонки.Добавить("КлючЭлементаОформления");
			КонецЕсли;
			Таблица.ЗаполнитьЗначения(СтрокаУсловногоОформления.КлючЭлементаОформления, "КлючЭлементаОформления");
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Таблица, СтруктураЭлемента.ОформляемыеСтроки);
			
			Таблица = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.ОформляемыеКолонкиХранилище);
			Если Таблица.Колонки.Найти("КлючЭлементаОформления") = Неопределено Тогда
				Таблица.Колонки.Добавить("КлючЭлементаОформления");
			КонецЕсли;
			Таблица.ЗаполнитьЗначения(СтрокаУсловногоОформления.КлючЭлементаОформления, "КлючЭлементаОформления");
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Таблица, СтруктураЭлемента.ОформляемыеКолонки);
			
			Таблица = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.РасшифровкаПолейОтбораЭОХранилище);
			Если Таблица.Колонки.Найти("КлючЭлементаОформления") = Неопределено Тогда
				Таблица.Колонки.Добавить("КлючЭлементаОформления");
			КонецЕсли;
			Таблица.ЗаполнитьЗначения(СтрокаУсловногоОформления.КлючЭлементаОформления, "КлючЭлементаОформления");
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Таблица, СтруктураЭлемента.РасшифровкаПолейОтбораЭО);
			
		КонецЦикла;
		
		ПоместитьВоВременноеХранилище(СтруктураЭлемента, ЭтаФорма.АдресЭлементаВХранилище);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Модифицированность и Не ЗакрытиеФормы = Истина Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемОбработкаОповещения", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Все внесенные изменения будут потеряны. Закрыть форму?';uk='Всі зміни будуть втрачені. Закрити форму?'"), РежимДиалогаВопрос.ДаНет);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеВариантаИспользованияЯчейкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборТипЭлемента", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИспользоватьДляВводаПлана", ИспользоватьДляВводаПлана);
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.Форма.ВыборТипаЭлементаТаблицы", ПараметрыФормы
		,ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеВариантаИспользованияЯчейкиОчистка(Элемент, СтандартнаяОбработка)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		Модифицированность = Истина;
		ПредставлениеВариантаИспользованияЯчейкиОчисткаНаСервере();
		УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизацииОбласти(Элемент)
	
	Область = Элемент.ТекущаяОбласть;
	Если Не ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		
		ИмяЯчейки = ""; Формула = "";
		Элементы.ПредставлениеВариантаИспользованияЯчейки.Доступность = Ложь;
		УправлениеФормой();
		Возврат;
		
	КонецЕсли;
	
	Расшифровка = Область.Расшифровка;
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		Элементы.ПредставлениеВариантаИспользованияЯчейки.Доступность = Истина;
		Строка 	= Расшифровка.Строка.Наименование;
		Колонка = Расшифровка.Колонка.Наименование;
		ИмяЯчейки = "[" + Строка + "; " + Колонка + "]";
		УправлениеФормой();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПриИзменении(Элемент)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		ФормулаПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПредставлениеОтчетаВыбор(Неопределено, Элементы.ПредставлениеОтчета.ТекущаяОбласть, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ФинансоваяОтчетностьКлиент.ЗавершитьРедактированиеЭлементаОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Вырезать(Команда)
	
	КопироватьЗначения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Вставить(Команда)
	
	Если мКэшКопированияВставки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если Не ОбластьВЗонеРедактирования(ЭтаФорма, ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Невозможно заменить выбранную область';uk='Неможливо замінити вибрану область'"));
		Возврат;
	КонецЕсли;
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	
	ВысотаОбласти = мКэшКопированияВставки.Количество();
	ШиринаОбласти = мКэшКопированияВставки[0].Количество();
	
	Отказ = Ложь;
	
	Если ВысотаОбласти > 1 ИЛИ ШиринаОбласти > 1 Тогда
		//В буфере несколько ячеек - можно только указать куда копировать
		Если ОбластьРедактирования.Право < ТекущаяОбласть.Лево + мКэшКопированияВставки[0].ВГраница()
			ИЛИ ОбластьРедактирования.Низ < ТекущаяОбласть.Верх + мКэшКопированияВставки.ВГраница() Тогда
			
			//Вышли за границы области редактирования
			Отказ = Истина;
			
		КонецЕсли;
	Иначе
		//В буфере одна ячейка - можно копировать куда угодно в пределах области редактирования
		Если Не ОбластьВЗонеРедактирования(ЭтаФорма, ТекущаяОбласть) Тогда
			
			//Вышли за границы области редактирования
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
			
	Если Отказ Тогда
		
		ПоказатьПредупреждение(, НСтр("ru='Невозможно заменить выделенную область';uk='Неможливо замінити виділену область'"));
		Возврат;
		
	КонецЕсли;
	
	ВставитьНаСервере(мКэшКопированияВставки, ВысотаОбласти, ШиринаОбласти);
	
	ТабличныйДокументПриАктивизацииОбласти(Элементы.ПредставлениеОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура Копировать(Команда)
	
	КопироватьЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Свойства(Команда)
	
	ПоказатьСвойстваОбласти(Элементы.ПредставлениеОтчета.ТекущаяОбласть)
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭлемент(Команда)
	
	ВыбраннаяСтрока = Элементы.СписокЭлементовОформления.ТекущаяСтрока;
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = ПараметрыОткрытияЭлементаУсловногоОформления(Элементы.СписокЭлементовОформления.ТекущаяСтрока);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииУсловногоОформления", ЭтаФорма, ВыбраннаяСтрока);
	
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.Форма.РедактированиеЭлементаУсловногоОформления", ПараметрыФормы,
														,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаКлиенте
Процедура Нумерация(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтображатьНумерациюКолонок", ОтображатьНумерациюКолонок);
	ПараметрыФормы.Вставить("ОтображатьНумерациюСтрок", ОтображатьНумерациюСтрок);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершениеРедактированияНумерации", ЭтаФорма);
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.Форма.НастройкаЯчеекНастройкаНумерации", 
					ПараметрыФормы,,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВыделенныеЯчейки(Команда)
	
	ТекстПредупреждения = НСтр("ru='Условное оформление можно применять к областям:
                                        |- Прямоугольные области ячеек с показателями отчета
                                        |- Строки или колонки
                                        |- Заголовки строк и колонок
                                        |- Вся таблица'
                                        |;uk='Умовне оформлення можна застосовувати до областей:
                                        |- Прямокутні області комірок з показниками звіту
                                        |- Рядки або колонки
                                        |- Заголовки рядків і колонок
                                        |- Вся таблиця'");
	ВыделенныеОбласти = ПредставлениеОтчета.ВыделенныеОбласти;
	Если ВыделенныеОбласти.Количество() > 1 Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ОбластьОформления = ВыделенныеОбласти[0];
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	ЭтоСтрока = ОбластьОформления.Лево <= 2 И (ОбластьОформления.Право = 0 ИЛИ ОбластьОформления.Право >= ОбластьРедактирования.Право);
	
	ТипОформляемойОбласти = Неопределено;
	
	Если ЭтоСтрока Тогда
		Если ОбластьОформления.Верх <= ПерваяСтрока
			И (ОбластьОформления.Низ = 0 ИЛИ ОбластьОформления.Низ >= ОбластьРедактирования.Низ) Тогда
			
			ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяТаблица");
			
		ИначеЕсли ОбластьОформления.Верх >= ОбластьРедактирования.Верх И ОбластьОформления.Низ <= ОбластьРедактирования.Низ Тогда
			
			ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяСтрока");
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОформляемойОбласти = Неопределено Тогда
		ЭтоКолонка = ОбластьОформления.Верх <= ПерваяСтрока И (ОбластьОформления.Низ = 0 ИЛИ ОбластьОформления.Низ >= ОбластьРедактирования.Низ);
		Если ЭтоКолонка
			И ОбластьОформления.Лево >= ОбластьРедактирования.Лево И ОбластьОформления.Право <= ОбластьРедактирования.Право Тогда
			
			ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяКолонка");
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОформляемойОбласти = Неопределено
		И (ОбластьОформления.Лево <= 1 
		ИЛИ ОбластьОформления.Право > ОбластьРедактирования.Право
		ИЛИ ОбластьОформления.Верх < ПерваяСтрока
		ИЛИ ОбластьОформления.Низ > ОбластьРедактирования.Низ) Тогда
		
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	Если ТипОформляемойОбласти = Неопределено Тогда
		Если ОбластьОформления.Низ < ОбластьРедактирования.Верх И ОбластьОформления.Верх >= ПерваяСтрока Тогда
			
			ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиКолонок");
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОформляемойОбласти = Неопределено Тогда
		Если ОбластьОформления.Лево >= 2 И ОбластьОформления.Право < ОбластьРедактирования.Лево Тогда
			
			ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиСтрок");
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОформляемойОбласти = Неопределено Тогда
		Если ОбластьОформления.Лево >= ОбластьРедактирования.Лево И ОбластьОформления.Право <= ОбластьРедактирования.Право
			И ОбластьОформления.Верх >= ОбластьРедактирования.Верх И ОбластьОформления.Низ <= ОбластьРедактирования.Низ Тогда
			
			ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЯчейкиНаПересеченииСтрокИКолонок");
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОформляемойОбласти = Неопределено Тогда
		
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	СписокСтрок = Новый Массив;
	СписокКолонок = Новый Массив;
	ПоляОтбора = Новый Массив;
	ПоляОтбораЗначений = Новый Массив;
	
	Если ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЯчейкиНаПересеченииСтрокИКолонок") Тогда
		Для Колонка = ОбластьОформления.Лево по ОбластьОформления.Право Цикл
			Для Строка = ОбластьОформления.Верх По ОбластьОформления.Низ Цикл
				Область = ПредставлениеОтчета.Область(Строка, Колонка);
				СписокСтрок.Добавить(Область.Расшифровка.Строка.ЭлементОтчета);
				СписокКолонок.Добавить(Область.Расшифровка.Колонка.ЭлементОтчета);
				ПоляОтбора.Добавить(Область.Расшифровка.Строка.ЭлементОтчета);
				ПоляОтбора.Добавить(Область.Расшифровка.Колонка.ЭлементОтчета);
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиКолонок") Тогда
		Для Колонка = ОбластьОформления.Лево по ОбластьОформления.Право Цикл
			Для Строка = ОбластьОформления.Верх По ОбластьОформления.Низ Цикл
				Область = ПредставлениеОтчета.Область(Строка, Колонка);
				СписокКолонок.Добавить(Область.Расшифровка);
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиСтрок") Тогда
		Для Колонка = ОбластьОформления.Лево по ОбластьОформления.Право Цикл
			Для Строка = ОбластьОформления.Верх По ОбластьОформления.Низ Цикл
				Область = ПредставлениеОтчета.Область(Строка, Колонка);
				СписокСтрок.Добавить(Область.Расшифровка);
				Если ЗначениеЗаполнено(Область.Расшифровка) Тогда
					ПоляОтбора.Добавить(Область.Расшифровка);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяСтрока") Тогда
		Для Колонка = 2 по 2 + ГлубинаОбъединения - 1 Цикл
			Для Строка = ОбластьОформления.Верх По ОбластьОформления.Низ Цикл
				Область = ПредставлениеОтчета.Область(Строка, Колонка);
				СписокСтрок.Добавить(Область.Расшифровка);
				ПоляОтбора.Добавить(Область.Расшифровка);
				Для КолонкаОтбора = ОбластьРедактирования.Лево по ОбластьРедактирования.Право Цикл
					ОбластьЗначения = ПредставлениеОтчета.Область(Строка, КолонкаОтбора);
					ПоляОтбораЗначений.Добавить(ОбластьЗначения.Расшифровка.Колонка.ЭлементОтчета);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяКолонка") Тогда
		Для Колонка = ОбластьОформления.Лево по ОбластьОформления.Право Цикл
			Для Строка = ПерваяСтрока По ПерваяСтрока + ВысотаШапки Цикл
				Область = ПредставлениеОтчета.Область(Строка, Колонка);
				СписокКолонок.Добавить(Область.Расшифровка);
				ПоляОтбора.Добавить(Область.Расшифровка);
				Для СтрокаОтбора = ОбластьРедактирования.Верх по ОбластьРедактирования.Низ Цикл
					ОбластьЗначения = ПредставлениеОтчета.Область(СтрокаОтбора, Колонка);
					ПоляОтбораЗначений.Добавить(ОбластьЗначения.Расшифровка.Строка.ЭлементОтчета);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокСтрок.Найти(Неопределено) <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СписокСтрок, Неопределено);
		СписокСтрок.Добавить(Неопределено);
	КонецЕсли;
	СписокСтрок = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СписокСтрок);
	
	Если СписокКолонок.Найти(Неопределено) <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СписокКолонок, Неопределено);
		СписокКолонок.Добавить(Неопределено);
	КонецЕсли;
	СписокКолонок = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СписокКолонок);
	
	ПоляОтбора = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПоляОтбора);
	ДополнитьРодительскимиИзмерениями(ПоляОтбора);
	ПоляОтбораЗначений = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПоляОтбораЗначений);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаЯчеек", Истина);
	ПараметрыФормы.Вставить("ЭтоПростаяТаблица", ЭтоПростаяТаблица);
	ПараметрыФормы.Вставить("ОформляемыеСтроки", СписокСтрок);
	ПараметрыФормы.Вставить("ОформляемыеКолонки", СписокКолонок);
	ПараметрыФормы.Вставить("ПоляОтбора", ПоляОтбора);
	ПараметрыФормы.Вставить("ПоляОтбораЗначений", ПоляОтбораЗначений);
	ПараметрыФормы.Вставить("ТипОформляемойОбласти", ТипОформляемойОбласти);
	ПараметрыФормы.Вставить("АдресЭлементовОтчета", АдресЭлементовОтчета);
	ПараметрыФормы.Вставить("АдресЭлементаВХранилище", АдресЭлементаВХранилище);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииУсловногоОформления", ЭтаФорма);
	
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.Форма.РедактированиеЭлементаУсловногоОформления", ПараметрыФормы,
														,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыОформления(Команда)
	
	ВидимостьЭлементовОформления = Не ВидимостьЭлементовОформления;
	УстановитьВидимостьЭлементовОформления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандТаблицыФормы

&НаКлиенте
Процедура СписокЭлементовОформленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыФормы = ПараметрыОткрытияЭлементаУсловногоОформления(ВыбраннаяСтрока);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииУсловногоОформления", ЭтаФорма, ВыбраннаяСтрока);
	
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.Форма.РедактированиеЭлементаУсловногоОформления", ПараметрыФормы,
														,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЭлементовОформленияПриИзменении(Элемент)
	
	ОбновитьНомераСтрокУсловногоОформления();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЭлементовОформленияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗакрытиемОбработкаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытиеФормы = Истина;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивИменТекущейТаблицы(АдресТаблицыЭлементов)
	
	ТаблицаЭлементов = ПолучитьИзВременногоХранилища(АдресТаблицыЭлементов);
	МассивИменТекущейТаблицы = Новый Массив;
	Для Каждого СтрокаЭлементов из ТаблицаЭлементов Цикл
		СтруктураЭлемента = ПолучитьИзВременногоХранилища(СтрокаЭлементов.Элемент);
		Если СтруктураЭлемента.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.РедактируемоеЗначение Тогда
			МассивИменТекущейТаблицы.Добавить(СтруктураЭлемента.НаименованиеДляПечати);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИменТекущейТаблицы;
	
КонецФункции

&НаСервере
Процедура СкорректироватьРедактируемыеЗначенияНаЭлементыТекущейТаблицы()
	
	МассивИмен = ПолучитьИзВременногоХранилища(РедактируемыеЗначения);
	МассивВычитания = МассивИменТекущейТаблицы(ПоместитьВоВременноеХранилище(ЭлементыТаблицы.Выгрузить()));
	МассивИмен = ОбщегоНазначенияКлиентСервер.СократитьМассив(МассивИмен, МассивВычитания);
	ПоместитьВоВременноеХранилище(МассивИмен, РедактируемыеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьЗначения(Вырезать = Ложь)
	Перем ЛокальныйКэш;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	
	Если Не ОбластьВЗонеРедактирования(ЭтаФорма, ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Невозможно скопировать выбранную область';uk='Неможливо скопіювати вибрану область'"));
		Возврат;
	КонецЕсли;
	
	ВысотаОбласти = ТекущаяОбласть.Низ - ТекущаяОбласть.Верх + 1;
	ШиринаОбласти = ТекущаяОбласть.Право - ТекущаяОбласть.Лево + 1;
	
	Массив = Новый Массив(ВысотаОбласти, ШиринаОбласти);
	
	Для СчВысота = 0 по ВысотаОбласти - 1 Цикл
		Для СчШирина = 0 по ШиринаОбласти - 1 Цикл
			Область = ПредставлениеОтчета.Область(
											ТекущаяОбласть.Верх + СчВысота,
											ТекущаяОбласть.Лево + СчШирина);
			Массив[СчВысота][СчШирина] = Область.Расшифровка.ЭлементОтчета;
			Если Вырезать Тогда
				Область.Расшифровка.ЭлементОтчета = "";
				Область.Расшифровка.ВидЭлемента = Неопределено;
				Область.Текст = НСтр("ru='<выберите тип ячейки>';uk='<виберіть тип комірки>'");
				УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица, ЛокальныйКэш);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	мКэшКопированияВставки = Массив;
	
КонецПроцедуры

&НаСервере
Процедура ВставитьНаСервере(Массив, ВысотаОбласти, ШиринаОбласти)
	Перем ЛокальныйКэш;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если Не (ШиринаОбласти = 1 И ВысотаОбласти = 1) Тогда
		Если ТекущаяОбласть.Право - ТекущаяОбласть.Лево + 1 <> ШиринаОбласти
			ИЛИ ТекущаяОбласть.Низ - ТекущаяОбласть.Верх + 1 <> ВысотаОбласти Тогда
		
			ТекущаяОбласть = ПредставлениеОтчета.Область(ТекущаяОбласть.Верх, ТекущаяОбласть.Лево,
										ТекущаяОбласть.Верх + ВысотаОбласти - 1,
										ТекущаяОбласть.Лево + ШиринаОбласти - 1);
										
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ПредставлениеОтчета.ТекущаяОбласть = ТекущаяОбласть;
	ТекущаяТаблицаЭлементов = ПолучитьИзВременногоХранилища(ПолучитьТаблицуЭлементов());
	
	Для СчВысота = ТекущаяОбласть.Верх по ТекущаяОбласть.Низ Цикл
		Для СчШирина = ТекущаяОбласть.Лево по ТекущаяОбласть.Право Цикл
			
			Область = ПредставлениеОтчета.Область(СчВысота, СчШирина);
			
			Если ШиринаОбласти = 1 И ВысотаОбласти = 1 Тогда
				АдресЭлемента = Массив[0][0];
			Иначе
				АдресЭлемента = Массив[СчВысота - ТекущаяОбласть.Верх][СчШирина - ТекущаяОбласть.Лево];
			КонецЕсли;
			Если ЗначениеЗаполнено(АдресЭлемента) Тогда
				ВидЭлемента = Неопределено;
				Область.Расшифровка.ЭлементОтчета = ФинансоваяОтчетностьВызовСервера.СкопироватьЭлементПоАдресу(
																		АдресЭлемента, ИдентификаторГлавногоХранилища, ВидЭлемента);
																		
				СместитьСсылкиНаЯчейкиФормулы(Область.Расшифровка.ЭлементОтчета, АдресЭлемента, Область, ТекущаяТаблицаЭлементов);
				
				Область.Расшифровка.ВидЭлемента = ВидЭлемента;
			Иначе
				Область.Расшифровка.ЭлементОтчета = Неопределено;
				Область.Расшифровка.ВидЭлемента = Неопределено;
			КонецЕсли;
			Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
			
		КонецЦикла;
	КонецЦикла;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	
	Для СчВысота = ТекущаяОбласть.Верх по ТекущаяОбласть.Низ Цикл
		Для СчШирина = ТекущаяОбласть.Лево по ТекущаяОбласть.Право Цикл
			
			Область = ПредставлениеОтчета.Область(СчВысота, СчШирина);
			УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица, ЛокальныйКэш);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСервер()
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Для СчВысота = ТекущаяОбласть.Верх по ТекущаяОбласть.Низ Цикл
		Для СчШирина = ТекущаяОбласть.Лево по ТекущаяОбласть.Право Цикл
			
			Область = ПредставлениеОтчета.Область(СчВысота, СчШирина);
			Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
				Область.Расшифровка.ЭлементОтчета = Неопределено;
				Область.Расшифровка.ВидЭлемента = Неопределено;
				Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
				УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьДополнительныеПараметры(Расшифровка)
	
	Если Расшифровка.ВидЭлемента = ВидЭлемента("СтатьяБюджетов") Тогда
		Если ИспользоватьДляВводаПлана Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ДополнительныеРежимыЭлементовОтчетов.СтатьяБюджетовВРежимеВвода");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОбластьРедактирования(Форма)
	
	Возврат Новый Структура("Верх, Лево, Низ, Право",
								Форма.ПерваяСтрока + Форма.ВысотаШапки + 1, 			//первая строка после шапки
								2 + Форма.ГлубинаОбъединения, 							//все строки во второй колонке, значит редактируем с третьей колонки + выводимые совместно
								Форма.ПерваяСтрока + Форма.ВысотаМакета, 				//до последней строки
								2 + Форма.ГлубинаОбъединения - 1 + Форма.ШиринаМакета 	//до последней колонки
								);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОбластьВЗонеРедактирования(Форма, Область)
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(Форма);
	Если Область.Лево >= ОбластьРедактирования.Лево
		И Область.Право <= ОбластьРедактирования.Право
		И Область.Низ <= ОбластьРедактирования.Низ
		И Область.Верх >= ОбластьРедактирования.Верх Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
		
КонецФункции

&НаСервере
Функция СвойствоЯчейкиТаблицы(ИмяСвойства, ПоУмолчанию = Неопределено)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Попытка
		Расшифровка = Область.Расшифровка;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Если Не ЗначениеЗаполнено(Расшифровка)
		ИЛИ ТипЗнч(Расшифровка) <> Тип("Структура") Тогда
		Возврат ПоУмолчанию;
	КонецЕсли;
	
	ЗначениеСвойства = Неопределено;
	Если Не Расшифровка.Свойство(ИмяСвойства, ЗначениеСвойства) Тогда
		Возврат ПоУмолчанию;
	КонецЕсли;
	
	Возврат ЗначениеСвойства;
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	ВидЭлемента = СвойствоЯчейкиТаблицы("ВидЭлемента");
	ЭлементОтчета = СвойствоЯчейкиТаблицы("ЭлементОтчета");
	ЗначениеЯчейки = "";
	
	Если ЭтоПростаяТаблица Тогда
		Элементы.НадписьВидЯчейки.Видимость = Ложь;
		Элементы.ГруппаКартинокВидаЭлемента.Видимость = Ложь;
		Элементы.ПредставлениеВариантаИспользованияЯчейки.Видимость = Ложь;
	ИначеЕсли ВидЭлемента = ВидЭлемента("ПроизводныйПоказатель") Тогда
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.ПроизводныйПоказатель;
		ЗначениеЯчейки = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ПоказательБюджетов");
	ИначеЕсли ВидЭлемента = ВидЭлемента("НефинансовыйПоказатель") Тогда
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.НефинансовыйПоказатель;
		ЗначениеЯчейки = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "НефинансовыйПоказатель");
	ИначеЕсли ВидЭлемента = ВидЭлемента("РедактируемоеЗначение") Тогда
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.РедактируемоеЗначение;
		ЗначениеЯчейки = ПолучитьИзВременногоХранилища(ЭлементОтчета).НаименованиеДляПечати;
	ИначеЕсли ВидЭлемента = ВидЭлемента("СтатьяБюджетов")
		ИЛИ ВидЭлемента = ВидЭлемента("ВсеСтатьиБюджетов") Тогда
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.СтатьяБюджетов;
		ЗначениеЯчейки = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "СтатьяБюджетов");
	ИначеЕсли ВидЭлемента = ВидЭлемента("ПоказательБюджетов")
		ИЛИ ВидЭлемента = ВидЭлемента("ВсеПоказателиБюджетов") Тогда
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.ПоказательБюджетов;
		ЗначениеЯчейки = ФинансоваяОтчетностьВызовСервера.ЗначениеРеквизитаОбъекта(ЭлементОтчета, "НаименованиеДляПечати");
	ИначеЕсли ВидЭлемента = ВидЭлемента("ФормулаПоГруппе")
		ИЛИ ВидЭлемента = ВидЭлемента("Группа") Тогда
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.ПроизводныйПоказатель;
	Иначе
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.Неопределен;
	КонецЕсли;
	
	ПредставлениеВариантаИспользованияЯчейки = "" + ВидЭлемента;
	Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
		ПредставлениеВариантаИспользованияЯчейки = ПредставлениеВариантаИспользованияЯчейки + " """ + ЗначениеЯчейки + """";
	КонецЕсли;
	
	Если ЭтоПростаяТаблица Тогда
		
		Элементы.Формула.Видимость = Ложь;
		Элементы.НадписьИнфо.Видимость = Ложь;
		
	ИначеЕсли ВидЭлемента = ВидЭлемента("ПроизводныйПоказатель") Тогда
		
		Элементы.НадписьИнфо.Заголовок = НСтр("ru='Вычисление:';uk='Обчислення:'");
		Формула = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "Формула");
		Элементы.Формула.Доступность = Истина;
		Элементы.Формула.РедактированиеТекста = Истина;
		
	ИначеЕсли ВидЭлемента = ВидЭлемента("ФормулаПоГруппе") Тогда
		
		Элементы.НадписьИнфо.Заголовок = НСтр("ru='Вычисление:';uk='Обчислення:'");
		Формула = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ФормулаПоГруппе");
		Элементы.Формула.Доступность = Истина;
		Элементы.Формула.РедактированиеТекста = Ложь;
		
	ИначеЕсли ВидЭлемента = ВидЭлемента("Группа") Тогда
		
		Элементы.НадписьИнфо.Заголовок = НСтр("ru='Настройка:';uk='Настройка:'");
		ОтображатьЗаголовок = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ВыводитьЗаголовокЭлемента");
		Элементы.Формула.Доступность = Истина;
		Элементы.Формула.РедактированиеТекста = Ложь;
		Если Не ОтображатьЗаголовок Тогда
			Формула = НСтр("ru='<в отчете не отображается>';uk='<у звіті не відображається>'");
		КонецЕсли;
		
	Иначе
		
		Если Не ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
			
			Элементы.НадписьИнфо.Заголовок = НСтр("ru='Вычисление:';uk='Обчислення:'");
			Формула = "";
			Элементы.Формула.Доступность = Ложь;
			
		Иначе
			
			Элементы.Формула.Доступность = Истина;
			Элементы.Формула.РедактированиеТекста = Ложь;
			
			Если ИспользоватьДляВводаПлана И ВидЭлемента = ВидЭлемента("СтатьяБюджетов") Тогда
				
				Элементы.НадписьИнфо.Заголовок = НСтр("ru='Автозаполнение:';uk='Автозаповнення:'");
				Формула = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "Формула");
				
			Иначе
				
				Элементы.НадписьИнфо.Заголовок = НСтр("ru='Настройка:';uk='Настройка:'");
				Формула = "";
				ЕстьНастройки = ФинансоваяОтчетностьВызовСервера.ЗначениеРеквизитаОбъекта(ЭлементОтчета, "ЕстьНастройки");
				Если ЕстьНастройки = Истина Тогда
					Формула = НСтр("ru='Установлены дополнительные отборы показателя';uk='Встановлені додаткові відбори показника'");
				КонецЕсли;
				
				ПериодСмещения = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ПериодСмещения");
				Если ЗначениеЗаполнено(ПериодСмещения) Тогда
					Если Не ПустаяСтрока(Формула) Тогда
						Формула = Формула + "; ";
					КонецЕсли;
					ПараметрыПредставления = Новый Структура("ПериодСмещения, ПериодичностьСмещения, 
															|ВерхняяГраницаДанных, НижняяГраницаДанных,
															|НачалоПериодаГруппировки, КонецПериодаГруппировки");
					ПараметрыКПередаче = Новый Структура;
					Для Каждого КлючИЗначение из ПараметрыПредставления Цикл
						Значение = ФинансоваяОтчетностьВызовСервера.ЗначениеДополнительногоРеквизита(ЭлементОтчета, КлючИЗначение.Ключ);
						ПараметрыКПередаче.Вставить(КлючИЗначение.Ключ, Значение);
					КонецЦикла;
					ПустоеЗначение = Ложь;
					ПараметрыКПередаче.Вставить("ИмяФормы", "НастройкаЯчеек");
					ПредставлениеСмещения = БюджетнаяОтчетностьКлиентСервер.ПредставлениеСмещения(ПараметрыКПередаче, ПустоеЗначение);
					Если Не ПустоеЗначение Тогда
						Формула = Формула + ПредставлениеСмещения;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеЯчейки(Результат)
	
	СтруктураЭлемента = ФинансоваяОтчетностьКлиентСервер.СтруктураЭлементаОтчета();
	ЗаполнитьЗначенияСвойств(СтруктураЭлемента, Результат);
	
	Если СтруктураЭлемента.ВидЭлемента = ВидЭлемента("СтатьяБюджетов")
		ИЛИ СтруктураЭлемента.ВидЭлемента = ВидЭлемента("ВсеСтатьиБюджетов") Тогда
		
		Если СтруктураЭлемента.ВидЭлемента = ВидЭлемента("СтатьяБюджетов") Тогда
			СтруктураЭлемента.Вставить("ДополнительныйРеквизит_СтатьяБюджетов", Результат.ЭлементОтчета);
		КонецЕсли;
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ВыводимыеПоказатели", Перечисления.ТипыВыводимыхПоказателейБюджетногоОтчета.Сумма);
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ПериодичностьСмещения", Перечисления.Периодичность.Год);
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_НижняяГраницаДанных", "[Начало периода данных]");
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ВерхняяГраницаДанных", "[Конец периода данных]");
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_НачалоПериодаГруппировки", "[Период группировки]");
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_КонецПериодаГруппировки", "[Период группировки]");
		
	ИначеЕсли СтруктураЭлемента.ВидЭлемента = ВидЭлемента("ПоказательБюджетов")
		ИЛИ СтруктураЭлемента.ВидЭлемента = ВидЭлемента("ВсеПоказателиБюджетов") Тогда
		
		Если СтруктураЭлемента.ВидЭлемента = ВидЭлемента("ПоказательБюджетов") Тогда
			СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ПоказательБюджетов", Результат.ЭлементОтчета);
		КонецЕсли;
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ТипЗначенияПоказателя", Перечисления.ТипыЗначенийПоказателейБюджетногоОтчета.Оборот);
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ВыводимыеПоказатели", Перечисления.ТипыВыводимыхПоказателейБюджетногоОтчета.Сумма);
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ПериодичностьСмещения", Перечисления.Периодичность.Год);
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_НижняяГраницаДанных", "[Начало периода данных]");
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ВерхняяГраницаДанных", "[Конец периода данных]");
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_НачалоПериодаГруппировки", "[Период группировки]");
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_КонецПериодаГруппировки", "[Период группировки]");
		
	ИначеЕсли СтруктураЭлемента.ВидЭлемента = ВидЭлемента("НефинансовыйПоказатель") Тогда
		
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_НефинансовыйПоказатель", Результат.ЭлементОтчета);
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ПериодичностьСмещения", Перечисления.Периодичность.Год);
		
	ИначеЕсли СтруктураЭлемента.ВидЭлемента = ВидЭлемента("РедактируемоеЗначение") Тогда
		
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ПолучитьИзВременногоХранилища(РедактируемыеЗначения));
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивИмен, МассивИменТекущейТаблицы(ПолучитьТаблицуЭлементов()));
		СтруктураЭлемента.Вставить("НаименованиеДляПечати", БюджетнаяОтчетностьКлиентСервер.ИмяРедактируемогоЗначенияБюджета(МассивИмен));
		СтруктураЭлемента.Вставить("ДополнительныйРеквизит_ТипРедактируемогоЗначения", "Число");
		
	КонецЕсли;
	
	СсылкаНаЭлемент = БюджетнаяОтчетностьКлиентСервер.ПоместитьЭлементВХранилище(СтруктураЭлемента, ИдентификаторГлавногоХранилища);
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Расшифровка = ТекущаяОбласть.Расшифровка;
	Расшифровка.ВидЭлемента = СтруктураЭлемента.ВидЭлемента;
	Расшифровка.ЭлементОтчета = СсылкаНаЭлемент;
	
	УправлениеФормой();
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, ТекущаяОбласть.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборТипЭлемента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Область.Шрифт = Новый Шрифт(,,Ложь);
	УстановитьЗначениеЯчейки(Результат);
	УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица);
	
	Если Область.Расшифровка.ВидЭлемента = 
		ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.ПроизводныйПоказатель") Тогда
		РедактироватьЭлементОтчета(Область);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица, ЛокальныйКэш = Неопределено)
	
	Если ЭтоПростаяТаблица Тогда
		Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Центр;
		Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Центр;
		Возврат;
	КонецЕсли;
	
	ОписаниеЯчейки = Область.Расшифровка;
	Если НЕ ЗначениеЗаполнено(ОписаниеЯчейки.ЭлементОтчета) Тогда
		Область.ЦветФона = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ПолеСОшибкойФон");
		Область.ЦветТекста = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "НезаполненноеПолеТаблицы");
		Область.Шрифт = Новый Шрифт(,,Истина);
		Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Центр;
		Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Центр;
	Иначе
		Если ИспользоватьДляВводаПлана
			И (ОписаниеЯчейки.ВидЭлемента = ВидЭлемента("СтатьяБюджетов")
				ИЛИ ОписаниеЯчейки.ВидЭлемента = ВидЭлемента("РедактируемоеЗначение")) Тогда
			Область.ЦветФона = Новый Цвет(192, 220, 192);
		Иначе
			Область.ЦветФона = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ЦветФонаПоля");
		КонецЕсли;
		Область.ЦветТекста = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ЦветТекстаПоля");
		Область.Шрифт = Новый Шрифт(,,Ложь);
		Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Лево;
		Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Верх;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветЯчеек()
	Перем ЛокальныйКэш;
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	Для Колонка = ОбластьРедактирования.Лево по ОбластьРедактирования.Право Цикл
		Для Строка = ОбластьРедактирования.Верх по ОбластьРедактирования.Низ Цикл
			Область = ПредставлениеОтчета.Область(Строка, Колонка);
			УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЭтоПростаяТаблица, ЛокальныйКэш);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидЭлемента(ИмяВидаЭлемента)
	
	#Если Клиент Тогда
	
		Возврат ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета."+ИмяВидаЭлемента);
		
	#Иначе
		
		Возврат Перечисления.ВидыЭлементовФинансовогоОтчета[ИмяВидаЭлемента];
		
	#КонецЕсли
	
КонецФункции

&НаКлиенте
Процедура ПоказатьСвойстваОбласти(Область)
	
	Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		
		Расшифровка = Область.Расшифровка;
		Если Не ЗначениеЗаполнено(Расшифровка.ЭлементОтчета) Тогда
			ПредставлениеВариантаИспользованияЯчейкиНачалоВыбора(Неопределено, Неопределено, Неопределено);
		Иначе
			РедактироватьЭлементОтчета(Область);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОтчетаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЭтоПростаяТаблица Тогда
		ПоказатьПредупреждение(, НСтр("ru='Выбор значений ячеек доступен только в сложной таблице';uk='Вибір значень комірок доступний тільки в складній таблиці'"));
		Возврат;
	КонецЕсли;
	
	ПоказатьСвойстваОбласти(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЭлементОтчета(Область)
	
	Модифицированность = Истина;
	Расшифровка = Область.Расшифровка;
	
	Если Расшифровка.ВидЭлемента = ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.ФормулаПоГруппе")
		ИЛИ Расшифровка.ВидЭлемента = ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.Группа") Тогда
		ПоказатьПредупреждение( , НСтр("ru='Настройка свойств элемента доступна в виде бюджета!';uk='Настройка властивостей елемента доступна у виді бюджету!'"));
		Возврат;
	КонецЕсли;
	
	АдресСтруктурыЭлемента = Расшифровка.ЭлементОтчета;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидЭлемента", 						Расшифровка.ВидЭлемента);
	ПараметрыФормы.Вставить("АдресЭлементаВХранилище", 			АдресСтруктурыЭлемента);
	ПараметрыФормы.Вставить("ИдентификаторГлавногоХранилища", 	ИдентификаторГлавногоХранилища);
	ПараметрыФормы.Вставить("ИспользоватьДляВводаПлана", 		ИспользоватьДляВводаПлана);
	ПараметрыФормы.Вставить("НастройкаЯчеек", 					Истина);
	АдресТекущейТаблицыЭлементов = ПолучитьТаблицуЭлементов();
	ПараметрыФормы.Вставить("АдресТаблицыЭлементов", 			АдресТекущейТаблицыЭлементов);
	ПараметрыФормы.Вставить("АдресЭлементовОтчета", 			АдресЭлементовОтчета);
	ПараметрыФормы.Вставить("ДополнительныйРежимФормы", 		ОпределитьДополнительныеПараметры(Расшифровка));
	ПараметрыФормы.Вставить("ВариантРасположенияГраницыФактическихДанных", ВариантРасположенияГраницыФактическихДанных);
	ПараметрыФормы.Вставить("ИдентификаторСтрокиЭлементаОтчета", ИдентификаторСтрокиЭлементаОтчета);
	
	МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ПолучитьИзВременногоХранилища(РедактируемыеЗначения));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивИмен, МассивИменТекущейТаблицы(АдресТекущейТаблицыЭлементов));
	ПараметрыФормы.Вставить("РедактируемыеЗначения", ПоместитьВоВременноеХранилище(МассивИмен, УникальныйИдентификатор));
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьПолеПослеИзмененияЭлемента", ЭтаФорма, ПараметрыФормы);
	
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.ФормаОбъекта",
				ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПослеРедактированияЭлементаОтчета(Имя)
	
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Имя);
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПолеПослеИзмененияЭлемента(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяОбласти = Элементы.ПредставлениеОтчета.ТекущаяОбласть.Имя;
	Расшифровка = ПредставлениеОтчета.Область(ИмяОбласти).Расшифровка;
	КопияСтруктуры = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Расшифровка);
	КопияСтруктуры.ВидЭлемента = ДополнительныеПараметры.ВидЭлемента;
	КопияСтруктуры.ЭлементОтчета = ДополнительныеПараметры.АдресЭлементаВХранилище;
	ПредставлениеОтчета.Область(ИмяОбласти).Расшифровка = КопияСтруктуры;
	
	ОбновитьИнформациюПослеРедактированияЭлементаОтчета(
			Элементы.ПредставлениеОтчета.ТекущаяОбласть.Имя
			);
	
КонецПроцедуры

&НаСервере
Процедура ФормулаПриИзмененииНаСервере()
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	ФинансоваяОтчетностьВызовСервера.УстановитьЗначениеДополнительногоРеквизита(Область.Расшифровка.ЭлементОтчета, "Формула", Формула);
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ПредставлениеВариантаИспользованияЯчейкиОчисткаНаСервере()
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Область.Расшифровка.ЭлементОтчета = Неопределено;
	Область.Расшифровка.ВидЭлемента = Неопределено;
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуЭлементов()
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	ЭлементыТаблицыБуфер = Новый ТаблицаЗначений;
	ЭлементыТаблицыБуфер.Колонки.Добавить("Строка");
	ЭлементыТаблицыБуфер.Колонки.Добавить("Колонка");
	ЭлементыТаблицыБуфер.Колонки.Добавить("Элемент");
	Для Колонка = ОбластьРедактирования.Лево по ОбластьРедактирования.Право Цикл
		Для Строка = ОбластьРедактирования.Верх по ОбластьРедактирования.Низ Цикл
			Расшифровка = ПредставлениеОтчета.Область(Строка, Колонка).Расшифровка;
			Если ЗначениеЗаполнено(Расшифровка.ЭлементОтчета)
				И Не Расшифровка.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.ФормулаПоГруппе
				И Не Расшифровка.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.Группа Тогда
				НоваяСтрока = ЭлементыТаблицыБуфер.Добавить();
				НоваяСтрока.Строка = Расшифровка.Строка.ЭлементОтчета;
				НоваяСтрока.Колонка = Расшифровка.Колонка.ЭлементОтчета;
				НоваяСтрока.Элемент = Расшифровка.ЭлементОтчета;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ЭлементыТаблицыБуфер, УникальныйИдентификатор);
		
КонецФункции

&НаСервере
Процедура СместитьСсылкиНаЯчейкиФормулы(Приемник, Источник, ОбластьПриемника, ТекущаяТаблицаЭлементов)
	
	СтруктураПриемника = ПолучитьИзВременногоХранилища(Приемник);
	СтруктураИсточника = ПолучитьИзВременногоХранилища(Источник);
	ФинОтчеты = ФинансоваяОтчетностьВызовСервера;
	РасшифровкаПриемника = ОбластьПриемника.Расшифровка;
	
	ОперандыКУдалению = Новый Массив;
	
	Для Каждого Операнд из СтруктураПриемника.ОперандыФормулы Цикл
		
		ЭлементОперанд = ПолучитьИзВременногоХранилища(Операнд.АдресСтруктурыЭлемента);
		Если ЭлементОперанд.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.ЯчейкаТаблицы Тогда
			
			ОперандИсточника = СтруктураИсточника.ОперандыФормулы.Найти(Операнд.Идентификатор, "Идентификатор");
			
			СтрокаОперанда = ФинОтчеты.ЗначениеДополнительногоРеквизита(ОперандИсточника.АдресСтруктурыЭлемента, "СтрокаЯчейки");
			КолонкаОперанда = ФинОтчеты.ЗначениеДополнительногоРеквизита(ОперандИсточника.АдресСтруктурыЭлемента, "КолонкаЯчейки");
			
			НайденныеСтроки = ТекущаяТаблицаЭлементов.НайтиСтроки(Новый Структура("Элемент", Источник));
			СтрокаИсточника = НайденныеСтроки[0].Строка;
			КолонкаИсточника = НайденныеСтроки[0].Колонка;
			
			СтрокаПриемника = РасшифровкаПриемника.Строка.ЭлементОтчета;
			КолонкаПриемника = РасшифровкаПриемника.Колонка.ЭлементОтчета;
			
			ИндексСтрокаИсточника = -1;
			ИндексКолонкаИсточника = -1;
			
			ИндексСтрокаОперанда = -1;
			ИндексКолонкаОперанда = -1;
			
			ИндексСтрокаПриемника = ОбластьПриемника.Верх;
			ИндексКолонкаПриемника = ОбластьПриемника.Лево;
			
			ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
			Для Колонка = ОбластьРедактирования.Лево по ОбластьРедактирования.Право Цикл
				ТекущаяКолонка = ПредставлениеОтчета.Область(ОбластьРедактирования.Верх, Колонка).Расшифровка.Колонка.ЭлементОтчета;
				Если ТекущаяКолонка = КолонкаОперанда Тогда
					ИндексКолонкаОперанда = Колонка;
				КонецЕсли;
				Если ТекущаяКолонка = КолонкаИсточника Тогда
					ИндексКолонкаИсточника = Колонка;
				КонецЕсли;
				Если ИндексКолонкаОперанда <> -1 И ИндексКолонкаИсточника <> -1 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Для Строка = ОбластьРедактирования.Верх по ОбластьРедактирования.Низ Цикл
				ТекущаяСтрока = ПредставлениеОтчета.Область(Строка, ОбластьРедактирования.Лево).Расшифровка.Строка.ЭлементОтчета;
				Если ТекущаяСтрока = СтрокаОперанда Тогда
					ИндексСтрокаОперанда = Строка;
				КонецЕсли;
				Если ТекущаяСтрока = СтрокаИсточника Тогда
					ИндексСтрокаИсточника = Строка;
				КонецЕсли;
				Если ИндексСтрокаОперанда <> -1 И ИндексСтрокаИсточника <> -1 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			ПараметрыИдентификатора = Справочники.ЭлементыФинансовыхОтчетов.РазобратьИмяОперандаНаСоставляющие(Операнд.Идентификатор);
			
			Если ПараметрыИдентификатора.СтрокаФиксированная Тогда
				НовыйИндексСтроки = ИндексСтрокаОперанда;
			Иначе
				СмещениеСтрок = ИндексСтрокаОперанда - ИндексСтрокаИсточника;
				НовыйИндексСтроки = ИндексСтрокаПриемника + СмещениеСтрок;
			КонецЕсли;
			
			Если ПараметрыИдентификатора.КолонкаФиксированная Тогда
				НовыйИндексКолонки = ИндексКолонкаОперанда;
			Иначе
				СмещениеКолонок = ИндексКолонкаОперанда - ИндексКолонкаИсточника;
				НовыйИндексКолонки = ИндексКолонкаПриемника + СмещениеКолонок;
			КонецЕсли;
			
			ЕстьОшибки = Истина;
			Если НовыйИндексКолонки > 0 И НовыйИндексСтроки > 0 Тогда
				ОбластьЯчейки = ПредставлениеОтчета.Область(НовыйИндексСтроки, НовыйИндексКолонки);
				Если ОбластьВЗонеРедактирования(ЭтаФорма, ОбластьЯчейки) Тогда
					Расшифровка = ОбластьЯчейки.Расшифровка;
					АдресСтрокиИдентификатора = Расшифровка.Строка.Наименование;
					Если ПараметрыИдентификатора.СтрокаФиксированная Тогда
						АдресСтрокиИдентификатора = "$" + АдресСтрокиИдентификатора;
					КонецЕсли;
					АдресКолонкиИдентификатора = Расшифровка.Колонка.Наименование;
					Если ПараметрыИдентификатора.КолонкаФиксированная Тогда
						АдресКолонкиИдентификатора = "$" + АдресКолонкиИдентификатора;
					КонецЕсли;
					НовыйИдентификатор = АдресСтрокиИдентификатора + "; " + АдресКолонкиИдентификатора;
					ПредставлениеНовыйИдентификатор = "[" + НовыйИдентификатор + "]";
					Формула = ФинОтчеты.ЗначениеДополнительногоРеквизита(СтруктураПриемника, "Формула");
					Формула = СтрЗаменить(Формула, "[" + Операнд.Идентификатор + "]", ПредставлениеНовыйИдентификатор);
					Операнд.Идентификатор = НовыйИдентификатор;
					ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(СтруктураПриемника, "Формула", Формула);
					ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(Операнд.АдресСтруктурыЭлемента, "СтрокаЯчейки", Расшифровка.Строка.ЭлементОтчета);
					ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(Операнд.АдресСтруктурыЭлемента, "КолонкаЯчейки", Расшифровка.Колонка.ЭлементОтчета);
					ЕстьОшибки = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьОшибки Тогда
				ОперандыКУдалению.Добавить(Операнд);
				Формула = ФинОтчеты.ЗначениеДополнительногоРеквизита(СтруктураПриемника, "Формула");
				Формула = СтрЗаменить(Формула, "[" + Операнд.Идентификатор + "]", "#Недопустимая_ссылка");
				ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(СтруктураПриемника, "Формула", Формула);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Операнд из ОперандыКУдалению Цикл
		СтруктураПриемника.ОперандыФормулы.Удалить(Операнд);
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(СтруктураПриемника, Приемник);
	
КонецПроцедуры

&НаСервере
Функция ДополнитьРодительскимиИзмерениями(ОсновныеПоля)
	
	ДополнительныеПоля = Новый Массив;
	ЭлементыОтчета = ПолучитьИзВременногоХранилища(АдресЭлементовОтчета);
	
	Для Каждого СтрокаДополнения из ОсновныеПоля Цикл
		
		НайденнаяСтрока = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(ЭлементыОтчета, "АдресСтруктурыЭлемента", СтрокаДополнения);
		Пока НайденнаяСтрока <> Неопределено Цикл
			
			Родитель = ФинансоваяОтчетностьКлиентСервер.РодительСтроки(НайденнаяСтрока);
			Если Родитель.ВидЭлемента = ВидЭлемента("Строки")
				ИЛИ Родитель.ВидЭлемента = ВидЭлемента("Колонки")
				ИЛИ Родитель.ВидЭлемента = ВидЭлемента("ТаблицаПоказателиВСтроках")
				ИЛИ Родитель.ВидЭлемента = ВидЭлемента("ТаблицаПоказателиВКолонках")
				ИЛИ Родитель.ВидЭлемента = ВидЭлемента("ТаблицаСложная") Тогда
				Прервать;
			КонецЕсли;
			
			ДополнительныеПоля.Добавить(Родитель.АдресСтруктурыЭлемента);
			
			НайденнаяСтрока = Родитель;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОсновныеПоля, ДополнительныеПоля, Истина);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПредставленияСтроки(СтрокаУсловногоОформления)
	
	Условие = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.УсловиеХранилище);
	Если ТипЗнч(Условие) = Тип("НастройкиКомпоновкиДанных") Тогда
		СтрокаУсловногоОформления.Условие = Строка(Условие.Отбор);
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаУсловногоОформления.Условие) Тогда
		СтрокаУсловногоОформления.Условие = НСтр("ru='<без отбора>';uk='<без відбору>'");
	КонецЕсли;
	
	Оформление = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.ОформлениеХранилище);
	Если ТипЗнч(Оформление) <> Тип("ТаблицаЗначений") ИЛИ Не ЗначениеЗаполнено(Оформление) Тогда
		СтрокаУсловногоОформления.Оформление = НСтр("ru='<оформление не указано>';uk='<оформлення не зазначено>'");
	Иначе
		МассивПредставлений = Новый Массив;
		Для Каждого Строка из Оформление Цикл
			МассивПредставлений.Добавить(Строка.Параметр + ": " + Строка.Оформление);
		КонецЦикла;
		СтрокаУсловногоОформления.Оформление = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(МассивПредставлений, "; ");
	КонецЕсли;
	
	ОформляемыеСтроки = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.ОформляемыеСтрокиХранилище);
	ОформляемыеКолонки = ПолучитьИзВременногоХранилища(СтрокаУсловногоОформления.ОформляемыеКолонкиХранилище);
	
	Если СтрокаУсловногоОформления.ТипОформляемойОбласти = Перечисления.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяТаблица Тогда
		СтрокаУсловногоОформления.ОформляемыеПоля = НСтр("ru='Вся таблица';uk='Вся таблиця'");
	ИначеЕсли СтрокаУсловногоОформления.ТипОформляемойОбласти = Перечисления.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяСтрока Тогда
		СтрокаУсловногоОформления.ОформляемыеПоля = НСтр("ru='Строки:';uk='Рядки:'");
		Для Каждого Строка из ОформляемыеСтроки Цикл
			Если Не ЗначениеЗаполнено(Строка.ЭлементОтчета) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
			|-" + ПолучитьИзВременногоХранилища(Строка.ЭлементОтчета).НаименованиеДляПечати;
		КонецЦикла;
	ИначеЕсли СтрокаУсловногоОформления.ТипОформляемойОбласти = Перечисления.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяКолонка Тогда
		СтрокаУсловногоОформления.ОформляемыеПоля = НСтр("ru='Колонки:';uk='Колонки:'");
		Для Каждого Строка из ОформляемыеКолонки Цикл
			Если Не ЗначениеЗаполнено(Строка.ЭлементОтчета) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
			|-" + ПолучитьИзВременногоХранилища(Строка.ЭлементОтчета).НаименованиеДляПечати;
		КонецЦикла;
	ИначеЕсли СтрокаУсловногоОформления.ТипОформляемойОбласти = Перечисления.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиСтрок Тогда
		СтрокаУсловногоОформления.ОформляемыеПоля = НСтр("ru='Заголовки строк:';uk='Заголовки рядків:'");
		Для Каждого Строка из ОформляемыеСтроки Цикл
			Если ЗначениеЗаполнено(Строка.ЭлементОтчета) Тогда
				СтруктураЭлементаОтчета = ПолучитьИзВременногоХранилища(Строка.ЭлементОтчета);
				НаименованиеДляПечати = СтруктураЭлементаОтчета.НаименованиеДляПечати;
			Иначе
				НаименованиеДляПечати = НСтр("ru='Шапка';uk='Шапка'");
			КонецЕсли;
			СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
			|-" + НаименованиеДляПечати;
		КонецЦикла;
	ИначеЕсли СтрокаУсловногоОформления.ТипОформляемойОбласти = Перечисления.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиКолонок Тогда
		СтрокаУсловногоОформления.ОформляемыеПоля = НСтр("ru='Заголовки колонок:';uk='Заголовки колонок:'");
		Для Каждого Строка из ОформляемыеКолонки Цикл
			Если ЗначениеЗаполнено(Строка.ЭлементОтчета) Тогда
				СтруктураЭлементаОтчета = ПолучитьИзВременногоХранилища(Строка.ЭлементОтчета);
				НаименованиеДляПечати = СтруктураЭлементаОтчета.НаименованиеДляПечати;
			Иначе
				НаименованиеДляПечати = НСтр("ru='Шапка';uk='Шапка'");
			КонецЕсли;
			СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
			|-" + НаименованиеДляПечати;
		КонецЦикла;
	ИначеЕсли СтрокаУсловногоОформления.ТипОформляемойОбласти = Перечисления.ТипыОформляемыхОбластейБюджетныхОтчетов.ЯчейкиНаПересеченииСтрокИКолонок Тогда
		СтрокаУсловногоОформления.ОформляемыеПоля = НСтр("ru='Ячейки на пересечении колонок:';uk='Комірка на перетині колонок:'");
		Для Каждого Строка из ОформляемыеКолонки Цикл
			Если Не ЗначениеЗаполнено(Строка.ЭлементОтчета) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
			|-" + ПолучитьИзВременногоХранилища(Строка.ЭлементОтчета).НаименованиеДляПечати;
		КонецЦикла;
		СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
		|" + НСтр("ru='и строк:';uk='і рядків:'");
		Для Каждого Строка из ОформляемыеСтроки Цикл
			Если Не ЗначениеЗаполнено(Строка.ЭлементОтчета) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаУсловногоОформления.ОформляемыеПоля = СтрокаУсловногоОформления.ОформляемыеПоля + "
			|-" + ПолучитьИзВременногоХранилища(Строка.ЭлементОтчета).НаименованиеДляПечати;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНомераСтрокУсловногоОформления()
	
	Для Каждого Строка из СписокЭлементовОформления Цикл
		Строка.НомерСтроки = СписокЭлементовОформления.Индекс(Строка) + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУсловноеОформлениеНаСервере(АдресРезультата)
	
	СтруктураУсловногоОформления = ПолучитьИзВременногоХранилища(АдресРезультата);
	СтрокиОформления = СписокЭлементовОформления.НайтиСтроки(Новый Структура("КлючЭлементаОформления", СтруктураУсловногоОформления.КлючЭлементаОформления));
	Если СтрокиОформления.Количество() Тогда
		НоваяСтрока = СтрокиОформления[0];
	Иначе
		НоваяСтрока = СписокЭлементовОформления.Добавить();
	КонецЕсли;
	НоваяСтрока.ТипОформляемойОбласти = СтруктураУсловногоОформления.ТипОформляемойОбласти;
	НоваяСтрока.КлючЭлементаОформления = СтруктураУсловногоОформления.КлючЭлементаОформления;
	НоваяСтрока.ОформлениеХранилище = ПоместитьВоВременноеХранилище(СтруктураУсловногоОформления.Оформление, УникальныйИдентификатор);
	НоваяСтрока.ОформляемыеСтрокиХранилище = ПоместитьВоВременноеХранилище(СтруктураУсловногоОформления.ОформляемыеСтроки, УникальныйИдентификатор);
	НоваяСтрока.ОформляемыеКолонкиХранилище = ПоместитьВоВременноеХранилище(СтруктураУсловногоОформления.ОформляемыеКолонки, УникальныйИдентификатор);
	НоваяСтрока.РасшифровкаПолейОтбораЭОХранилище = ПоместитьВоВременноеХранилище(СтруктураУсловногоОформления.РасшифровкаПолейОтбораЭО, УникальныйИдентификатор);
	НоваяСтрока.УсловиеХранилище = ПоместитьВоВременноеХранилище(СтруктураУсловногоОформления.Условие, УникальныйИдентификатор);
	ЗаполнитьПредставленияСтроки(НоваяСтрока);
	ОбновитьНомераСтрокУсловногоОформления();
	
	УстановитьВидимостьЭлементовОформления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииУсловногоОформления(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьУсловноеОформлениеНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовОформления()
	
	Элементы.СписокЭлементовОформления.Видимость = ВидимостьЭлементовОформления;
	Если ВидимостьЭлементовОформления Тогда
		Элементы.ЭлементыОформления.Заголовок = НСтр("ru='Скрыть элементы оформления';uk='Приховати елементи оформлення'");
	Иначе
		Элементы.ЭлементыОформления.Заголовок = НСтр("ru='Показать элементы оформления (%1)';uk='Показати елементи оформлення (%1)'");
		Элементы.ЭлементыОформления.Заголовок = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Элементы.ЭлементыОформления.Заголовок, СписокЭлементовОформления.Количество());
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыОткрытияЭлементаУсловногоОформления(ИндексСтроки)
	
	СтрокаУО = СписокЭлементовОформления.НайтиПоИдентификатору(ИндексСтроки);
	ТипОформляемойОбласти = СтрокаУО.ТипОформляемойОбласти;
	
	ПоляОтбора = Новый Массив;
	ПоляОтбораЗначений = Новый Массив;
	
	ОформляемыеСтроки = ПолучитьИзВременногоХранилища(СтрокаУО.ОформляемыеСтрокиХранилище);
	ОформляемыеКолонки = ПолучитьИзВременногоХранилища(СтрокаУО.ОформляемыеКолонкиХранилище);
	
	ЭлементыОтчета = ПолучитьИзВременногоХранилища(АдресЭлементовОтчета);
	Таблица = ФинансоваяОтчетностьКлиентСервер.ТаблицаЭлемента(ЭлементыОтчета, АдресЭлементаВХранилище);
	
	Если ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЯчейкиНаПересеченииСтрокИКолонок") Тогда
		Для Каждого Ячейка из ОформляемыеСтроки Цикл
			ПоляОтбора.Добавить(Ячейка.ЭлементОтчета);
		КонецЦикла;
		Для Каждого Ячейка из ОформляемыеКолонки Цикл
			ПоляОтбора.Добавить(Ячейка.ЭлементОтчета);
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиКолонок") Тогда
		Для Каждого Ячейка из ОформляемыеКолонки Цикл
			ПоляОтбора.Добавить(Ячейка.ЭлементОтчета);
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ЗаголовкиСтрок") Тогда
		Для Каждого Ячейка из ОформляемыеСтроки Цикл
			ПоляОтбора.Добавить(Ячейка.ЭлементОтчета);
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяСтрока") Тогда
		Для Каждого Ячейка из ОформляемыеСтроки Цикл
			ПоляОтбора.Добавить(Ячейка.ЭлементОтчета);
		КонецЦикла;
		НайденныеСтроки = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(Таблица, "ВидЭлемента", ВидЭлемента("Колонки"));
		НайденныеСтроки = БюджетнаяОтчетностьРасчетКэшаСервер.ПолучитьКонечныеЭлементыДерева(НайденныеСтроки);
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			ПоляОтбораЗначений.Добавить(НайденнаяСтрока.АдресСтруктурыЭлемента);
		КонецЦикла;
	ИначеЕсли ТипОформляемойОбласти = ПредопределенноеЗначение("Перечисление.ТипыОформляемыхОбластейБюджетныхОтчетов.ВсяКолонка") Тогда
		Для Каждого Ячейка из ОформляемыеКолонки Цикл
			ПоляОтбора.Добавить(Ячейка.ЭлементОтчета);
		КонецЦикла;
		НайденныеСтроки = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(Таблица, "ВидЭлемента", ВидЭлемента("Строки"));
		НайденныеСтроки = БюджетнаяОтчетностьРасчетКэшаСервер.ПолучитьКонечныеЭлементыДерева(НайденныеСтроки);
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			ПоляОтбораЗначений.Добавить(НайденнаяСтрока.АдресСтруктурыЭлемента);
		КонецЦикла;
	КонецЕсли;
	
	ПоляОтбора = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПоляОтбора);
	ДополнитьРодительскимиИзмерениями(ПоляОтбора);
	ПоляОтбораЗначений = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ПоляОтбораЗначений);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЭтоПростаяТаблица", ЭтоПростаяТаблица);
	ПараметрыФормы.Вставить("ОформляемыеСтроки", СтрокаУО.ОформляемыеСтрокиХранилище);
	ПараметрыФормы.Вставить("ОформляемыеКолонки", СтрокаУО.ОформляемыеКолонкиХранилище);
	ПараметрыФормы.Вставить("КлючЭлементаОформления", СтрокаУО.КлючЭлементаОформления);
	ПараметрыФормы.Вставить("ПоляОтбора", ПоляОтбора);
	ПараметрыФормы.Вставить("ПоляОтбораЗначений", ПоляОтбораЗначений);
	ПараметрыФормы.Вставить("ТипОформляемойОбласти", ТипОформляемойОбласти);
	ПараметрыФормы.Вставить("Оформление", СтрокаУО.ОформлениеХранилище);
	ПараметрыФормы.Вставить("Условие", СтрокаУО.УсловиеХранилище);
	ПараметрыФормы.Вставить("АдресЭлементовОтчета", АдресЭлементовОтчета);
	ПараметрыФормы.Вставить("АдресЭлементаВХранилище", АдресЭлементаВХранилище);
	
	Возврат ПараметрыФормы;
	
КонецФункции

&НаКлиенте
Процедура ЗавершениеРедактированияНумерации(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОтображатьНумерациюКолонок = Результат["ОтображатьНумерациюКолонок"];
		ОтображатьНумерациюСтрок = Результат["ОтображатьНумерациюСтрок"];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
