
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеФормы = Справочники.ЭлементыФинансовыхОтчетов.ФормаПриСозданииНаСервере(ЭтаФорма);
	ЗначениеВРеквизитФормы(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыЭлементов), "ЭлементыТаблицы");
	ИспользоватьДляВводаПлана = Параметры.ИспользоватьДляВводаПлана;
	АдресРедактируемогоЭлемента = Параметры.АдресРедактируемогоЭлемента;
	
	Элементы.ФормаЗавершитьРедактирование.Заголовок = "Выбрать";
	
	ЭтоПростаяТаблица = Ложь;
	
	Шапка = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЛегендаНастройкиЯчеек");
	ПредставлениеОтчета.Очистить();
	ПредставлениеОтчета.Вывести(Шапка.ПолучитьОбласть("ЛегендаОбластиВыбора"));
	
	ДеревоЭлементовОтчета = ПолучитьИзВременногоХранилища(Параметры.АдресЭлементовОтчета);
	ЗначениеВРеквизитФормы(ДеревоЭлементовОтчета, "ЭлементыОтчета");
	СтруктураШирин 	= Справочники.ЭлементыФинансовыхОтчетов.ВывестиТаблицуНастройкиСложнойТаблицы(
													ЭтаФорма,
													ДеревоЭлементовОтчета);
	
	ШиринаМакета 	= СтруктураШирин.мШиринаМакета;
	ВысотаМакета 	= СтруктураШирин.мВысотаМакета;
	ВысотаШапки 	= СтруктураШирин.мВысотаШапки;
	ГлубинаОбъединения = БюджетнаяОтчетностьРасчетКэшаСервер.РассчитатьГлубинуУровней(ДеревоЭлементовОтчета);
	
	РедактируемаяЯчейка = ЭлементыТаблицы.НайтиСтроки(Новый Структура("Элемент", АдресРедактируемогоЭлемента))[0];
	
	ДоступныеЭлементыСоответствие = Новый Соответствие;
	
	СтартРасчета = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(
								ДеревоЭлементовОтчета, "АдресСтруктурыЭлемента", РедактируемаяЯчейка.Строка);
	РассчитатьДоступныеРодительскиеЭлементы(ДоступныеЭлементыСоответствие, СтартРасчета);
	
	СтартРасчета = ФинансоваяОтчетностьКлиентСервер.ПодчиненныйЭлемент(
								ДеревоЭлементовОтчета, "АдресСтруктурыЭлемента", РедактируемаяЯчейка.Колонка);
	РассчитатьДоступныеРодительскиеЭлементы(ДоступныеЭлементыСоответствие, СтартРасчета);

	ДоступныеЭлементы = Новый ФиксированноеСоответствие(ДоступныеЭлементыСоответствие);
	
	РассчитатьДоступностьЯчеек();

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ЭлементыФинансовыхОтчетов.ФормаПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеОтчетаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗавершитьРедактирование(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	
	Если Область.Лево <> Область.Право
		ИЛИ Область.Верх <> Область.Низ
		ИЛИ ТипЗнч(Область.Расшифровка) <> Тип("Структура")
		ИЛИ Не Область.Расшифровка.Свойство("ДоступнаДляВыбора")
		ИЛИ Не Область.Расшифровка.ДоступнаДляВыбора Тогда
		
		ПоказатьПредупреждение(, НСтр("ru='Область не может быть выбрана!';uk='Область не може бути вибрана!'"));
		Возврат;
		
	КонецЕсли;
	
	Расшифровка = Область.Расшифровка;
	СтрокаЯчейки = Неопределено;
	КолонкаЯчейки = Неопределено;
		
	ИмяЯчейки = "";
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		СтрокаЯчейки = Расшифровка.Строка.ЭлементОтчета;
		КолонкаЯчейки = Расшифровка.Колонка.ЭлементОтчета;
		ИмяЯчейки = Расшифровка.Строка.Наименование + "; " + Расшифровка.Колонка.Наименование;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ИмяЯчейки", ИмяЯчейки);
	
	ФинансоваяОтчетностьКлиент.ЗавершитьРедактированиеЭлементаОтчета(ЭтаФорма, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДополнитьДоступныеЭлементыПодчиненными(ДоступныеСтроки, СтартРасчета, ТолькоФиксированные = Ложь)
	
	Для Каждого Элемент из СтартРасчета.Строки Цикл
		Если ТолькоФиксированные И Не БюджетнаяОтчетностьРасчетКэшаСервер.ЭтоФиксированныйЭлемент(Элемент) Тогда
			Продолжить;
		КонецЕсли;
		
		ДоступныеСтроки.Вставить(Элемент.АдресСтруктурыЭлемента, Истина);
		ДополнитьДоступныеЭлементыПодчиненными(ДоступныеСтроки, Элемент, ТолькоФиксированные);
			
	КонецЦикла;
	
КонецФункции

&НаСервере
Процедура РассчитатьДоступныеРодительскиеЭлементы(ДоступныеЭлементы, СтартРасчета)
	
	//доступны все "фиксированные" колонки текущего и верхнего уровней
	ВПорядкеРодителейБылПеречислимыйТип = Не БюджетнаяОтчетностьРасчетКэшаСервер.ЭтоФиксированныйЭлемент(СтартРасчета);
	ТекущийРодитель = СтартРасчета.Родитель;
	Пока Истина Цикл
		
		ДоступныеЭлементы.Вставить(ТекущийРодитель.АдресСтруктурыЭлемента, Истина);
		
		Для Каждого ЭлементТекущегоУровня из ТекущийРодитель.Строки Цикл
			
			ЭтоТекущаяКолонка = ЭлементТекущегоУровня.АдресСтруктурыЭлемента = СтартРасчета.АдресСтруктурыЭлемента;
			Если БюджетнаяОтчетностьРасчетКэшаСервер.ЭтоФиксированныйЭлемент(ЭлементТекущегоУровня)
				ИЛИ ЭтоТекущаяКолонка Тогда
				
				ДоступныеЭлементы.Вставить(ЭлементТекущегоУровня.АдресСтруктурыЭлемента, Истина);
				ДополнитьДоступныеЭлементыПодчиненными(ДоступныеЭлементы, 
														ЭлементТекущегоУровня,
														ВПорядкеРодителейБылПеречислимыйТип
														И Не ЭтоТекущаяКолонка);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ТекущийРодитель.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.Строки
			ИЛИ ТекущийРодитель.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.Колонки Тогда
			Возврат;
		КонецЕсли;
		
		ВПорядкеРодителейБылПеречислимыйТип = ВПорядкеРодителейБылПеречислимыйТип ИЛИ 
							Не БюджетнаяОтчетностьРасчетКэшаСервер.ЭтоФиксированныйЭлемент(ТекущийРодитель);
		
		ТекущийРодитель = ТекущийРодитель.Родитель;
		ЭлементыТекущегоУровня = ТекущийРодитель.Строки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОбластьРедактирования(Форма)
	
	Возврат Новый Структура("Верх, Лево, Низ, Право",
								Форма.ПерваяСтрока + Форма.ВысотаШапки + 1, //первая строка после шапки
								2 + Форма.ГлубинаОбъединения, 				//все строки во второй колонке, значит редактируем с третьей колонки
								Форма.ПерваяСтрока + Форма.ВысотаМакета, 	//до последней строки
								2 + Форма.ГлубинаОбъединения - 1 + Форма.ШиринаМакета 	 //до последней колонки
								);
	
КонецФункции

//-1 - не указан вид элемента
//0 - недоступна для выбора
//1 - доступна для выбора
//2 - текущая выбранная ячейка
//3 - исходная ячейка
&НаСервере
Функция ТипЯчейки(ОписаниеЯчейки)
	
	Если ОписаниеЯчейки.Строка.ЭлементОтчета = СтрокаЯчейки
		И ОписаниеЯчейки.Колонка.ЭлементОтчета = КолонкаЯчейки Тогда
		Возврат 2;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОписаниеЯчейки.ЭлементОтчета) Тогда
		Возврат -1;
	КонецЕсли;
	
	Если ОписаниеЯчейки.ЭлементОтчета = АдресРедактируемогоЭлемента Тогда
		Возврат 3;
	КонецЕсли;
	
	Если ДоступныеЭлементы.Получить(ОписаниеЯчейки.Строка.ЭлементОтчета) <> Истина Тогда
		Возврат 0;
	КонецЕсли;
	
	Если ДоступныеЭлементы.Получить(ОписаниеЯчейки.Колонка.ЭлементОтчета) <> Истина Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции

&НаСервере
Процедура РассчитатьДоступностьЯчеек()
	
	ЛокальныйКэш = Новый Структура;
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	Для Колонка = ОбластьРедактирования.Лево по ОбластьРедактирования.Право Цикл
		Для Строка = ОбластьРедактирования.Верх по ОбластьРедактирования.Низ Цикл
			Область = ПредставлениеОтчета.Область(Строка, Колонка);
			ОписаниеЯчейки = Область.Расшифровка;
			ТипЯчейки = ТипЯчейки(ОписаниеЯчейки);
			ОписаниеЯчейки.Вставить("ДоступнаДляВыбора", ТипЯчейки = 1);
			Если ТипЯчейки = -1 Тогда
				Область.ЦветТекста = 
					БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ТекстЗапрещеннойЯчейкиЦвет");
				Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Центр;
				Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Центр;
			Иначе
				Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Лево;
				Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Верх;
				Если ТипЯчейки = 0 Тогда
					Область.ЦветТекста = 
						БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ТекстЗапрещеннойЯчейкиЦвет");
				ИначеЕсли ТипЯчейки = 2 Тогда
					Область.ЦветФона = Новый Цвет(201, 226, 255);
				ИначеЕсли ТипЯчейки = 3 Тогда
					Область.ЦветФона = 
						БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ЦветФонаВыделенияПоля");
					Область.ЦветТекста = 
						БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ЦветТекстаВыделенияПоля");
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
