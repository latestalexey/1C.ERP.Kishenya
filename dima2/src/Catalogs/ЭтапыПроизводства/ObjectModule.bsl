#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Эти реквизиты проверяются только при записи действующей спецификации
	МассивНепроверяемыхРеквизитов.Добавить("Подразделение");
	МассивНепроверяемыхРеквизитов.Добавить("ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий");
	МассивНепроверяемыхРеквизитов.Добавить("ДлительностьЭтапа");
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабочихЦентров");
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабочихЦентров.ВидРабочегоЦентра");
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабочихЦентров.ВремяРаботы");
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабочихЦентров.ЕдиницаИзмерения");
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабочихЦентров.ВариантНаладки");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если НомерЭтапа >= НомерСледующегоЭтапа И НомерСледующегоЭтапа <> 0 Тогда
		ТекстСообщения = НСтр("ru='Номер следующего этапа должен быть больше номера этапа.';uk='Номер наступного етапу повинен бути більше номера етапу.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НомерСледующегоЭтапа",, Отказ);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Владелец) Тогда
		СтатусСпецификации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "Статус");
		Если СтатусСпецификации <> Перечисления.СтатусыСпецификаций.ВРазработке Тогда
			ПроверитьЗаполнениеРеквизитов(Ложь,, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ПланироватьРаботуВидовРабочихЦентров Тогда
		
		РасчетнаяДлительность = 0;
		
		Если ЕдиницаИзмеренияПредварительногоБуфера = Перечисления.ЕдиницыИзмеренияВремени.Час Тогда
			РасчетнаяДлительность = РасчетнаяДлительность + ПредварительныйБуфер / 24;
		Иначе
			РасчетнаяДлительность = РасчетнаяДлительность + ПредварительныйБуфер;
		КонецЕсли; 
		
		Если ЕдиницаИзмеренияЗавершающегоБуфера = Перечисления.ЕдиницыИзмеренияВремени.Час Тогда
			РасчетнаяДлительность = РасчетнаяДлительность + ЗавершающийБуфер / 24;
		Иначе
			РасчетнаяДлительность = РасчетнаяДлительность + ЗавершающийБуфер;
		КонецЕсли; 
		
		ДлительностьЭтапа = РасчетнаяДлительность;
		
	Иначе
		ВидыРабочихЦентров.Очистить();
		АльтернативныеВидыРабочихЦентров.Очистить();
	КонецЕсли; 
	
	Если НЕ Отказ И ВидыРабочихЦентров.Количество() > 0 Тогда
	
		НастройкиВидов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ВидыРабочихЦентров.ВыгрузитьКолонку("ВидРабочегоЦентра"), "ПараллельнаяЗагрузка");
		
		Для каждого СтрокаТЧ Из ВидыРабочихЦентров Цикл
			
			СтрокаТЧ.Занятость = 0;
			Если НастройкиВидов.Получить(СтрокаТЧ.ВидРабочегоЦентра) <> Неопределено
				И НастройкиВидов.Получить(СтрокаТЧ.ВидРабочегоЦентра).ПараллельнаяЗагрузка Тогда
				Продолжить;
			КонецЕсли; 
			
			Если СтрокаТЧ.ЕдиницаИзмерения = Перечисления.ЕдиницыИзмеренияВремени.Секунда Тогда
				СтрокаТЧ.Занятость = СтрокаТЧ.ВремяРаботы;
			ИначеЕсли СтрокаТЧ.ЕдиницаИзмерения = Перечисления.ЕдиницыИзмеренияВремени.Минута Тогда
				СтрокаТЧ.Занятость = СтрокаТЧ.ВремяРаботы * 60;
			ИначеЕсли СтрокаТЧ.ЕдиницаИзмерения = Перечисления.ЕдиницыИзмеренияВремени.Час Тогда
				СтрокаТЧ.Занятость = СтрокаТЧ.ВремяРаботы * 3600;
			ИначеЕсли СтрокаТЧ.ЕдиницаИзмерения = Перечисления.ЕдиницыИзмеренияВремени.Сутки Тогда
				СтрокаТЧ.Занятость = СтрокаТЧ.ВремяРаботы * 86400;
			КонецЕсли; 
			
		КонецЦикла;
	
	КонецЕсли; 
	
	Если НЕ Владелец.Пустая() И НЕ ДополнительныеСвойства.Свойство("РазрешитьЗапись") Тогда
		
		// Если этап удаляется, то проверим что он не используется в спецификации
		Если НЕ ЭтоНовый() И ПометкаУдаления И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТаблицаСвязи.Ссылка
			|ИЗ
			|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ТаблицаСвязи
			|ГДЕ
			|	ТаблицаСвязи.ЭтапРедактирование = &Этап
			|	И ТаблицаСвязи.Ссылка = &Владелец
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТаблицаСвязи.Ссылка
			|ИЗ
			|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК ТаблицаСвязи
			|ГДЕ
			|	ТаблицаСвязи.ЭтапРедактирование = &Этап
			|	И ТаблицаСвязи.Ссылка = &Владелец
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТаблицаСвязи.Ссылка
			|ИЗ
			|	Справочник.РесурсныеСпецификации.Трудозатраты КАК ТаблицаСвязи
			|ГДЕ
			|	ТаблицаСвязи.ЭтапРедактирование = &Этап
			|	И ТаблицаСвязи.Ссылка = &Владелец
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ТаблицаСвязи.Ссылка
			|ИЗ
			|	Справочник.РесурсныеСпецификации КАК ТаблицаСвязи
			|ГДЕ
			|	ТаблицаСвязи.Ссылка = &Владелец
			|	И ТаблицаСвязи.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСпецификаций.Действует)";
			
			Запрос.УстановитьПараметр("Этап",     Ссылка);
			Запрос.УстановитьПараметр("Владелец", Владелец);
			
			Результат = Запрос.Выполнить();
			Если НЕ Результат.Пустой() Тогда
				ТекстСообщения = НСтр("ru='Этап используется в спецификации. Удаление невозможно.';uk='Етап використовується в специфікації. Вилучення неможливо.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка,,, Отказ);
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если НЕ Отказ
		И НЕ ДополнительныеСвойства.Свойство("ЗапретитьРасчетДнейДоОкончания")
		И ЗначениеЗаполнено(Ссылка)
		И ЗначениеЗаполнено(Владелец)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "Статус") = Перечисления.СтатусыСпецификаций.Действует
		И ДлительностьЭтапа <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ДлительностьЭтапа") Тогда
		
		ДополнительныеСвойства.Вставить("РассчитатьДнейДоОкончанияВФоне", Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Количество = 1;
	ЕдиницаИзмерения = НСтр("ru='партия';uk='партія'");
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Владелец") Тогда
		
		Владелец = ДанныеЗаполнения.Владелец;
		ЗаполнитьНовыйОбъект();
		
	КонецЕсли; 
	
	// Заполняем программно, т.к. ед. времени используется в нескольких местах
	ОсновнаяЕдиницаВремениБуфера = Справочники.ЭтапыПроизводства.ОсновнаяЕдиницаВремениБуфера();
	ЕдиницаИзмеренияПредварительногоБуфера = ОсновнаяЕдиницаВремениБуфера;
	ЕдиницаИзмеренияЗавершающегоБуфера     = ОсновнаяЕдиницаВремениБуфера;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗаполнитьНовыйОбъект();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ 
		И ДополнительныеСвойства.Свойство("РассчитатьДнейДоОкончанияВФоне")
		И НЕ ДополнительныеСвойства.Свойство("ЗапретитьРасчетДнейДоОкончания") Тогда
	
		Справочники.ЭтапыПроизводства.РассчитатьДнейДоОкончанияПроизводстваВФоне(Владелец);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет заполнение реквизитов этапа
// Используется при записи действующей спецификации и при редактировании этапа в заказе на производство
//
// Параметры:
//  ПутьКДанным     - Строка - путь к данным (путь к реквизиту формы), используется для корректного вывода сообщений
//  Отказ 			- Булево - истина, если найдены ошибки
//
// Возвращаемое значение:
//   Булево   - Истина, если найдены ошибки заполнения
//
Функция ПроверитьЗаполнениеРеквизитов(СообщитьНазваниеЭтапа, Знач ПутьКДанным = "", Отказ = Ложь) Экспорт

	ЕстьОшибки = Ложь;
	
	Если ПутьКДанным = "" Тогда
		КлючДанных = ЭтотОбъект;
	Иначе
		КлючДанных = Неопределено;
	КонецЕсли; 
	
	// Проверка реквизитов шапки
	РеквизитыДляПроверки = Новый СписокЗначений;
	РеквизитыДляПроверки.Добавить("Подразделение", НСтр("ru='Подразделение';uk='Підрозділ'"));
	
	Если ПланироватьРаботуВидовРабочихЦентров Тогда
		РеквизитыДляПроверки.Добавить("ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий", 
			НСтр("ru='Одновременно производимое количество единиц/партий изделий';uk='Одночасно вироблена кількість одиниць/партій виробів'"));
	КонецЕсли;
	
	Если НЕ ПланироватьРаботуВидовРабочихЦентров Тогда
		РеквизитыДляПроверки.Добавить("ЕдиницаИзмеренияДлительностиЭтапа", НСтр("ru='Единица измерения длительности этапа';uk='Одиниця вимірювання тривалості етапу'"));
	КонецЕсли;
	
	ПроверитьЗаполнениеУказанныхРеквизитов(РеквизитыДляПроверки, ЭтотОбъект, Неопределено, КлючДанных, ПутьКДанным, СообщитьНазваниеЭтапа, ЕстьОшибки);
	
	//++ НЕ УТКА
	Если ПланироватьРаботуВидовРабочихЦентров Тогда
		
		ПроверитьЗаполнениеВидовРабочихЦентров(КлючДанных, СообщитьНазваниеЭтапа, ЕстьОшибки);
		
	КонецЕсли;
	//-- НЕ УТКА
	
	Если ЕстьОшибки Тогда
		Отказ = Истина;
	КонецЕсли; 
	
	Возврат НЕ ЕстьОшибки;
	
КонецФункции

Процедура ПроверитьЗаполнениеУказанныхРеквизитов(РеквизитыДляПроверки, ЗначенияРеквизитов, ПараметрыТабличнойЧасти, КлючДанных, ПутьКДанным, СообщитьНазваниеЭтапа, Отказ)

	Для каждого ПараметрыРеквизита Из РеквизитыДляПроверки Цикл
		ИмяПоля = ПараметрыРеквизита.Значение;
		Если НЕ ЗначениеЗаполнено(ЗначенияРеквизитов[ИмяПоля]) Тогда
			
			Если ПараметрыТабличнойЧасти = Неопределено Тогда
				
				Поле = ИмяПоля;
				Если СообщитьНазваниеЭтапа Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Поле ""%1"" не заполнено (этап: %2).';uk='Поле ""%1"" не заповнено (етап: %2).'"), 
							ПараметрыРеквизита.Представление,
							КлючДанных.Наименование);
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Поле ""%1"" не заполнено.';uk='Поле ""%1"" не заповнене.'"), 
							ПараметрыРеквизита.Представление);
				КонецЕсли; 
				
			Иначе

				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыТабличнойЧасти.Имя, ПараметрыТабличнойЧасти.НомерСтроки, ИмяПоля);
				Если СообщитьНазваниеЭтапа Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Не заполнена колонка ""%1"" в строке %2 списка ""%3"" (этап: %4)';uk='Не заповнена колонка ""%1"" в рядку %2 списку ""%3"" (етап: %4)'"), 
							ПараметрыРеквизита.Представление,
							ПараметрыТабличнойЧасти.НомерСтроки,
							ПараметрыТабличнойЧасти.Представление,
							КлючДанных.Наименование);
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='Не заполнена колонка ""%1"" в строке %2 списка ""%3""';uk='Не заповнена колонка ""%1"" у рядку %2 списку ""%3""'"), 
							ПараметрыРеквизита.Представление,
							ПараметрыТабличнойЧасти.НомерСтроки,
							ПараметрыТабличнойЧасти.Представление);
				КонецЕсли; 
			КонецЕсли; 
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным, Отказ); 
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьНовыйОбъект()

	НомерЭтапа = Справочники.ЭтапыПроизводства.НовыйНомерЭтапа(Владелец);
	НомерСледующегоЭтапа = НомерЭтапа + 1;
	
КонецПроцедуры

//++ НЕ УТКА

Процедура ПроверитьЗаполнениеВидовРабочихЦентров(КлючДанных, СообщитьНазваниеЭтапа, Отказ)

	Если ВидыРабочихЦентров.Количество() = 0 Тогда
		Если СообщитьНазваниеЭтапа И КлючДанных <> Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru='Не введено ни одной строки в список ""Виды рабочих центров"" (этап: %1).';uk='Не введено жодного рядка в список ""Види робочих центрів"" (етап: %1).'"),
									КлючДанных.Наименование);
		Иначе
			ТекстСообщения = НСтр("ru='Не введено ни одной строки в список ""Виды рабочих центров"".';uk='Не введено жодного рядка в список ""Види робочих центрів"".'");
		КонецЕсли; 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, "ВидыРабочихЦентров",, Отказ);
		Возврат;
	КонецЕсли;
	
	ДублиВидовРЦ = Новый Массив;
	СписокВидовРЦДляПроверки = Новый Массив;
	СписокВидыРабочихЦентров = ВидыРабочихЦентров;
	Для Сч = 1 По 2 Цикл
		Для каждого СтрокаВидРЦ Из СписокВидыРабочихЦентров Цикл
			
			Если ЗначениеЗаполнено(СтрокаВидРЦ.ВидРабочегоЦентра) Тогда
				СписокВидовРЦДляПроверки.Добавить(СтрокаВидРЦ.ВидРабочегоЦентра);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаВидРЦ.ВидРабочегоЦентра)
				И ДублиВидовРЦ.Найти(СтрокаВидРЦ.ВидРабочегоЦентра) = Неопределено Тогда
				
				СтруктураПоиска = Новый Структура("ВидРабочегоЦентра", СтрокаВидРЦ.ВидРабочегоЦентра);
		  		СписокСтрок = ВидыРабочихЦентров.НайтиСтроки(СтруктураПоиска);
				КоличествоДублей = СписокСтрок.Количество(); 
		  		СписокСтрок = АльтернативныеВидыРабочихЦентров.НайтиСтроки(СтруктураПоиска);
				КоличествоДублей = КоличествоДублей + СписокСтрок.Количество(); 
				Если КоличествоДублей > 1 Тогда
					ДублиВидовРЦ.Добавить(СтрокаВидРЦ.ВидРабочегоЦентра);
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЦикла;
		СписокВидыРабочихЦентров = АльтернативныеВидыРабочихЦентров;
	КонецЦикла; 
	
	СписокВидовРЦДляПроверки = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(СписокВидовРЦДляПроверки);
	РеквизитыВидовРЦ = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
												СписокВидовРЦДляПроверки, 
												"ИспользуютсяВариантыНаладки,ПараллельнаяЗагрузка,ВариантЗагрузки");
												
	Для каждого ВидРЦ Из ДублиВидовРЦ Цикл
		Если СообщитьНазваниеЭтапа И КлючДанных <> Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru='Вид рабочего центра ""%1"" допускается указывать не более одного раза (этап: %2).';uk='Вид робочого центру ""%1"" допускається зазначати не більше одного разу (етап: %2).'"),
									Строка(ВидРЦ),
									КлючДанных.Наименование);
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru='Вид рабочего центра ""%1"" допускается указывать не более одного раза.';uk='Вид робочого центру ""%1"" допускається зазначати не більше одного разу.'"),
									Строка(ВидРЦ));
		КонецЕсли; 

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, "ВидыРабочихЦентров",, Отказ);
	КонецЦикла;
	
	НомерСтроки = 0;
	Для каждого СтрокаОсновнойВидРЦ Из ВидыРабочихЦентров Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		РеквизитыВидаРЦ = РеквизитыВидовРЦ.Получить(СтрокаОсновнойВидРЦ.ВидРабочегоЦентра);
		ПроверитьСтрокуВидаРабочегоЦентра(СтрокаОсновнойВидРЦ, РеквизитыВидаРЦ, НомерСтроки, КлючДанных, СообщитьНазваниеЭтапа, Отказ);
		
		СтруктураПоиска = Новый Структура("КлючСвязиВидыРабочихЦентров", СтрокаОсновнойВидРЦ.КлючСвязи);
   		АльтернативныеВидыРЦ = АльтернативныеВидыРабочихЦентров.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаАльтернативныйВидРЦ Из АльтернативныеВидыРЦ Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			РеквизитыВидаРЦ = РеквизитыВидовРЦ.Получить(СтрокаАльтернативныйВидРЦ.ВидРабочегоЦентра);
			ПроверитьСтрокуВидаРабочегоЦентра(СтрокаАльтернативныйВидРЦ, РеквизитыВидаРЦ, НомерСтроки, КлючДанных, СообщитьНазваниеЭтапа, Отказ);
			
		КонецЦикла;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьСтрокуВидаРабочегоЦентра(СтрокаВидРЦ, РеквизитыВидаРЦ, НомерСтроки, КлючДанных, СообщитьНазваниеЭтапа, Отказ)

	РеквизитыДляПроверки = Новый СписокЗначений;
	РеквизитыДляПроверки.Добавить("ВидРабочегоЦентра", НСтр("ru='Вид рабочего центра';uk='Вид робочого центру'"));
	
	ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%1"" в строке %2 списка ""%3"".';uk='Не заповнена колонка ""%1"" в рядку %2 списку ""%3"".'");
	ШаблонСообщенияЭтап = НСтр("ru='Не заполнена колонка ""%1"" в строке %2 списка ""%3"" (этап: %4).';uk='Не заповнена колонка ""%1"" в рядку %2 списку ""%3"" (етап: %4).'");
	
	ПараметрыТабличнойЧасти = Новый Структура("Имя,Представление", "ВидыРабочихЦентров", НСтр("ru='Виды рабочих центров';uk='Види робочих центрів'"));
	ПараметрыТабличнойЧасти.Вставить("НомерСтроки", НомерСтроки);
	
	ПроверитьЗаполнениеУказанныхРеквизитов(РеквизитыДляПроверки, СтрокаВидРЦ, ПараметрыТабличнойЧасти, КлючДанных, "", СообщитьНазваниеЭтапа, Отказ);
	
	// Проверка реквизитов, заполнение которых зависит от параметров вида РЦ
	Если РеквизитыВидаРЦ <> Неопределено Тогда
		
		// Проверка заполнения варианта наладки
		Если (РеквизитыВидаРЦ.ИспользуютсяВариантыНаладки = Истина)
			И НЕ ЗначениеЗаполнено(СтрокаВидРЦ.ВариантНаладки) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыТабличнойЧасти.Имя, НомерСтроки, "ВариантНаладки");
			Если СообщитьНазваниеЭтапа И КлючДанных <> Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщенияЭтап, 
												НСтр("ru='Вариант наладки';uk='Варіант налагодження'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление,
												КлючДанных.Наименование);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщения, 
												НСтр("ru='Вариант наладки';uk='Варіант налагодження'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление);
			КонецЕсли; 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле,, Отказ); 
			
		КонецЕсли; 
		
		// Проверка времени работы
		// При синхронной загрузке время берется из вида РЦ и его не нужно проверять
		Если НЕ ЗначениеЗаполнено(СтрокаВидРЦ.ВремяРаботы)
			И (НЕ РеквизитыВидаРЦ.ПараллельнаяЗагрузка 
				ИЛИ РеквизитыВидаРЦ.ВариантЗагрузки <> Перечисления.ВариантыЗагрузкиРабочихЦентров.Синхронный) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыТабличнойЧасти.Имя, НомерСтроки, "ВремяРаботы");
			Если СообщитьНазваниеЭтапа И КлючДанных <> Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщенияЭтап, 
												НСтр("ru='Время работы';uk='Час роботи'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление,
												КлючДанных.Наименование);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщения, 
												НСтр("ru='Время работы';uk='Час роботи'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление);
			КонецЕсли; 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле,, Отказ); 
		КонецЕсли; 
		
		// Проверка Единица измерения времени
		Если НЕ ЗначениеЗаполнено(СтрокаВидРЦ.ЕдиницаИзмерения)
			И (НЕ РеквизитыВидаРЦ.ПараллельнаяЗагрузка 
				ИЛИ РеквизитыВидаРЦ.ВариантЗагрузки <> Перечисления.ВариантыЗагрузкиРабочихЦентров.Синхронный) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыТабличнойЧасти.Имя, НомерСтроки, "ЕдиницаИзмерения");
			Если СообщитьНазваниеЭтапа И КлючДанных <> Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщенияЭтап, 
												НСтр("ru='Единица измерения времени';uk='Одиниця вимірювання часу'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление,
												КлючДанных.Наименование);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщения, 
												НСтр("ru='Единица измерения времени';uk='Одиниця вимірювання часу'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление);
			КонецЕсли; 
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле,, Отказ); 
		КонецЕсли; 
		
		// Проверка загрузки
		Если НЕ ЗначениеЗаполнено(СтрокаВидРЦ.Загрузка)
			И РеквизитыВидаРЦ.ПараллельнаяЗагрузка Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыТабличнойЧасти.Имя, НомерСтроки, "Загрузка");
			Если СообщитьНазваниеЭтапа И КлючДанных <> Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщенияЭтап, 
												НСтр("ru='Загрузка';uk='Завантаження'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление,
												КлючДанных.Наименование);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												ШаблонСообщения, 
												НСтр("ru='Загрузка';uk='Завантаження'"),
												НомерСтроки, 
												ПараметрыТабличнойЧасти.Представление);
			КонецЕсли; 
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле,, Отказ); 
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти

#КонецЕсли