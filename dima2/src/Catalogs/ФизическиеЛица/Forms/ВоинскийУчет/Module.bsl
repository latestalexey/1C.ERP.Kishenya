
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Заголовок,ФизическоеЛицоСсылка");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтаФорма,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		Параметры.АдресВХранилище);
		
	ПроинициализироватьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ОтредактированаИстория" И ФизическоеЛицоСсылка = Источник Тогда
		Если Параметр.ИмяРегистра = "ВоинскийУчет" Тогда
			Если ВоинскийУчетНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
					ЭтаФорма,
					ФизическоеЛицоСсылка,
					ИмяСобытия,
					Параметр,
					Источник);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтаФорма, "ВоинскийУчет", ФизическоеЛицоСсылка, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВоинскийУчетОтношениеКВоинскойОбязанностиПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);
	ЗаполнитьЗначенияПоУмолчанию();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетГруппаУчетаКарточкиВоинскогоУчетаПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);
	ЗаполнитьЗначенияПоУмолчанию();
	УстановитьДоступностьЭлементов();	

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетКатегорияЗапасаПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетЗваниеПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетСоставПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);
	ВоинскийУчетСоставПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетВУСПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетГодностьПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетВоенкоматПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетОтношениеКВоинскомуУчетуПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетНаличиеМобпредписанияПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетНомерКомандыПартииПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВоинскийУчетЗабронированОрганизациейПриИзменении(Элемент)

	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВоинскийУчетИстория(Команда)

	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("ВоинскийУчет", ФизическоеЛицоСсылка, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	Если ВоинскийУчетПрежняя = Неопределено Тогда
		РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "ВоинскийУчет", ФизическоеЛицоСсылка);
	КонецЕсли;
	
	ОбновитьПолеВоинскийУчетПериод(ЭтаФорма);
	ОбновитьПолеЗабронированОрганизацией();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено) Экспорт
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
		
	ЗапроситьРежимИзмененияВоинскийУчет(ВоинскийУчет.Период, Отказ, ОповещениеЗавершения);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт  
	
	Если Не Отказ Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			Возвращаемыйпараметр = Новый Структура;
			Возвращаемыйпараметр.Вставить("ИмяФормы", ИмяФормы);
			Возвращаемыйпараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
			
			Оповестить(
				"ИзмененыДанныеДополнительнойФормы",
				Возвращаемыйпараметр,
				ВладелецФормы);
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт 

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПолеЗабронированОрганизацией()

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ФизическоеЛицо", ФизическоеЛицоСсылка);
	
	ЗабронированОрганизацией = РегистрыСведений.БронированиеСотрудников.ПолучитьПоследнее(, СтруктураОтбора).Организация;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияВоинскийУчет(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ТекстКнопкиДа = НСтр("ru='Изменились сведения о воинском учете';uk='Змінилися відомості про військовий облік'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru =  'При редактировании изменены сведения о воинском учете.
						|Если исправлена прежняя запись о воинском учете (она была ошибочной), нажмите ""Исправлена ошибка"".
						|Если у сотрудника изменились сведения с %1, нажмите'") + " ""%2""",
			Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
			ТекстКнопкиДа);
			
	Оповещение = Новый ОписаниеОповещения("СохранитьДанныеЗавершение", ЭтотОбъект, ОповещениеЗавершения);		
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "ВоинскийУчет", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеВоинскийУчетПериод(Форма) Экспорт
	// Не обязательно заполнение поля Период если данные по умолчанию.
	Если ЗарплатаКадрыРасширенныйКлиентСервер.ВоинскийУчетПоУмолчанию(Форма.ВоинскийУчет) И 
		НЕ ЗначениеЗаполнено(Форма.ВоинскийУчетПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.ВоинскийУчет.Период) Тогда
			Форма.ВоинскийУчет.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если НЕ ЗначениеЗаполнено(Форма.ВоинскийУчет.Период) Тогда
			Форма.ВоинскийУчет.Период = ТекущаяДата();
		КонецЕсли; 
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "ВоинскийУчет", Форма.ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтаФорма);
	
КонецФункции

&НаСервере
Процедура ВоинскийУчетСоставПриИзмененииНаСервере()

	УстановитьДоступностьЭлементов()
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	

	ОфицерскийСостав = (ВоинскийУчет.ГруппаУчетаКарточкиВоинскогоУчета = Перечисления.ГруппыУчетаКарточкиВоинскогоУчета.ОфицерскийСостав) ИЛИ ВоинскийУчет.Состав.ОфицерскийСостав;
	РядовойСостав = (ВоинскийУчет.ГруппаУчетаКарточкиВоинскогоУчета = Перечисления.ГруппыУчетаКарточкиВоинскогоУчета.РедовойСержантскийСтаршинскийСостав) И НЕ ВоинскийУчет.Состав.ОфицерскийСостав;
	Призывник = (ВоинскийУчет.ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВоинскийУчетГруппаУчета", "Доступность", РядовойСостав);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВоинскийУчетКатегорияЗапаса", "Доступность", НЕ Призывник);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВоинскийУчетЗвание", "Доступность", НЕ Призывник);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВоинскийУчетСостав", "Доступность", НЕ Призывник);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВоинскийУчетВУС", "Доступность", НЕ Призывник);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ВоинскийУчетПрофиль", "Доступность", ОфицерскийСостав);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	Если ВоинскийУчет.ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.Призывник Тогда
		ВоинскийУчет.ГруппаУчета = "";
		ВоинскийУчет.КатегорияЗапаса = "";
		ВоинскийУчет.Звание = "";
		ВоинскийУчет.Состав = "";
		ВоинскийУчет.Профиль = "";
		ВоинскийУчет.ГруппаУчетаКарточкиВоинскогоУчета = Перечисления.ГруппыУчетаКарточкиВоинскогоУчета.Призывники;		
	КонецЕсли;	
	
	Если ВоинскийУчет.ГруппаУчетаКарточкиВоинскогоУчета = Перечисления.ГруппыУчетаКарточкиВоинскогоУчета.РедовойСержантскийСтаршинскийСостав Тогда
		ВоинскийУчет.Профиль = "";
		ВоинскийУчет.Состав = Справочники.СоставыВоеннослужащих.Рядовой;
	КонецЕсли;	
	
	Если ВоинскийУчет.ГруппаУчетаКарточкиВоинскогоУчета = Перечисления.ГруппыУчетаКарточкиВоинскогоУчета.ОфицерскийСостав Тогда
		ВоинскийУчет.ГруппаУчета = "";
		ВоинскийУчет.Состав = Справочники.СоставыВоеннослужащих.МладшиеОфицеры;
	КонецЕсли;	
	
КонецПроцедуры



#КонецОбласти
