////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ВидДокумента", ВидДокумента);
	Если Параметры.Свойство("Основание") Тогда 
		Основание = Параметры.Основание;
		Если Основание.Свойство("Наименование") Тогда
			Объект.ФИО = Основание.Наименование	
		КонецЕсли;
	КонецЕсли;	
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ПравоДоступа("Изменение", Метаданные.Справочники.ФизическиеЛица)
		ИЛИ ПравоДоступа("Добавление", Метаданные.Справочники.ФизическиеЛица) Тогда
		УправлениеДоступом.ПриСозданииФормыЗначенияДоступа(ЭтаФорма);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьВидимостьПоВидуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(ВидДокумента)
		И (ЗначениеЗаполнено(Номер)
		Или ЗначениеЗаполнено(Серия))
		И Не ЗначениеЗаполнено(ДатаВыдачи) Тогда
		
		ТекстСообщения = НСтр("ru='Укажите дату выдачи документа.';uk='Вкажіть дату видачі документу.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ДатаВыдачи",,Отказ);
		
		Возврат;
		
	КонецЕсли;
	
	Объект.Наименование = Объект.ФИО + " " + ?(ЗначениеЗаполнено(Объект.УточнениеНаименования),Объект.УточнениеНаименования,"");
	Если ПроверятьНаДублиПередЗаписью Тогда
		Отказ = Не ЕстьДубли();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(ВидДокумента)
		И (ЗначениеЗаполнено(Номер)
		Или ЗначениеЗаполнено(Серия)) Тогда
		Набор = РегистрыСведений.ДокументыФизическихЛиц.СоздатьНаборЗаписей();
		
		Набор.Отбор.Период.Установить(ДатаВыдачи);
		Набор.Отбор.ФизЛицо.Установить(ТекущийОбъект.Ссылка);
		Набор.Отбор.ВидДокумента.Установить(ВидДокумента);
		
		НоваяСтрока = Набор.Добавить();
		
		НоваяСтрока.Период           = ДатаВыдачи;
		НоваяСтрока.Физлицо          = ТекущийОбъект.Ссылка;
		НоваяСтрока.ВидДокумента     = ВидДокумента;
		НоваяСтрока.Серия            = СокрЛП(Серия);
		НоваяСтрока.Номер            = СокрЛП(Номер);
		НоваяСтрока.ДатаВыдачи       = ДатаВыдачи;
		НоваяСтрока.СрокДействия     = СрокДействия;
		НоваяСтрока.КемВыдан         = КемВыдан;
		
		Попытка
			Набор.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИнформацияОбОшибке().Описание,,,,Отказ)
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ВозращаемаяСсылка = Объект.Ссылка;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
		СтандартнаяОбработка = СтандартнаяОбработкаЗакрытияФормы;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Объект.КодПоДРФО) Тогда	
		ВыборкаФизЛицо = КодПоДРФОУжеНазначенДругомуФизЛицу(Объект.КодПоДРФО, Объект.Ссылка);
		Если ВыборкаФизЛицо <> Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Данный код по ДРФО (ИНН) уже указан для физического лица %1.';uk='Даний код за ДРФО (ІПН) вже вказаний для фізичної особи, %1.'"),
				ВыборкаФизЛицо.Представление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				"Объект.КодПоДРФО",
				,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Наименование = &Наименование
	|	И ФизическиеЛица.УточнениеНаименования = &Уточнение
	|	И ФизическиеЛица.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Наименование", Объект.Наименование);
	Запрос.УстановитьПараметр("Уточнение",	  Объект.УточнениеНаименования);
	Запрос.УстановитьПараметр("Ссылка", 	  Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ТекстСообщения = НСтр("ru='Физическое лицое лицо с таким ФИО и уточнением уже существует в информационной базе.
            |Необходимо либо указать другую уточняющую информацию, либо воспользоваться уже имеющимся элементом справочника.'
            |;uk='Фізична особа з таким ПІБ і уточненням вже існує в інформаційній базі.
            |Необхідно або зазначити іншу уточнюючу інформацію, або скористатися вже існуючим елементом довідника.'"); 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,
			"Объект.Наименование",
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ ТАБЛИЦА НАЙДЕНО

&НаКлиенте
Процедура ТаблицаНайденоПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Элементы.ТаблицаРасшифровкаНайдено.ОтборСтрок = Новый ФиксированнаяСтруктура("ФизЛицо",ТекущиеДанные.ФизЛицо); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНайденоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта",Новый Структура("Ключ",Элемент.ТекущиеДанные.ФизЛицо));
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасшифровкаНайденоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаОбъекта",Новый Структура("Ключ",Элемент.ТекущиеДанные.ФизЛицо));
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаНайдено.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Выберите физическое лицо, которое необходимо подставить.';uk='Виберіть фізичну особу, яку необхідно підставити.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	Иначе
		СтандартнаяОбработкаЗакрытияФормы = Ложь;
		ВозращаемаяСсылка = ТекущиеДанные.ФизЛицо;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Элементы.КоманднаяПанельФормы.Видимость = Истина;
	Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы.ГруппаСтраницыФормы.ПодчиненныеЭлементы.Основная;
	ВозращаемаяСсылка = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	ПроверятьНаДублиПередЗаписью = Ложь;
	СтандартнаяОбработкаЗакрытияФормы = Истина;
	
	Записать(Параметры);
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьВидимостьПоВидуДокумента()
	
	Элементы.ГруппаУдостоверение.Заголовок = Строка(ВидДокумента) + ":";
	
	Если ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ВодительскоеУдостоверение Тогда
		
		Элементы.Серия.Видимость            = Истина;
		Элементы.Номер.Видимость            = Истина;
		Элементы.КемВыдан.Видимость         = Ложь;
		Элементы.ДатаВыдачи.Видимость       = Истина;
		Элементы.СрокДействия.Видимость     = Истина;
		Элементы.ЯвляетсяДокументомУдостоверяющимЛичность.Видимость = Ложь;
		
	ИначеЕсли ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.Паспорт Тогда 	
		
		Элементы.Серия.Видимость            = Истина;
		Элементы.Номер.Видимость            = Истина;
		Элементы.КемВыдан.Видимость         = Истина;
		Элементы.ДатаВыдачи.Видимость       = Истина;
		Элементы.СрокДействия.Видимость     = Истина;
		Элементы.ЯвляетсяДокументомУдостоверяющимЛичность.Видимость = Истина;
		
	Иначе
		
		Элементы.Серия.Видимость            = Ложь;
		Элементы.Номер.Видимость            = Ложь;
		Элементы.КемВыдан.Видимость         = Ложь;
		Элементы.ДатаВыдачи.Видимость       = Ложь;
		Элементы.СрокДействия.Видимость     = Ложь;
		Элементы.ЯвляетсяДокументомУдостоверяющимЛичность.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЕстьДубли()
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК ФизЛицо,
	|	ФизическиеЛица.Наименование КАК ЗначениеРеквизита,
	|	&НайденоВРеквизитеНаименование КАК НайденоВРеквизите 
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	(ФизическиеЛица.Наименование ПОДОБНО &ФамилияИмяОтчетство
	|			ИЛИ ФизическиеЛица.Наименование ПОДОБНО &ФамилияИмя
	|			ИЛИ ФизическиеЛица.Наименование ПОДОБНО &Фамилия)";
	
	
	Если ЗначениеЗаполнено(ВидДокумента)
		И (ЗначениеЗаполнено(Серия)
		Или ЗначениеЗаполнено(Номер)) Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументыФизическихЛиц.Физлицо,
		|	ДокументыФизическихЛиц.Представление,
		|	ПРЕДСТАВЛЕНИЕ(ДокументыФизическихЛиц.ВидДокумента)
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
		|ГДЕ
		|	ДокументыФизическихЛиц.ВидДокумента = &ВидДокумента
		|	И ДокументыФизическихЛиц.Серия = &Серия
		|	И ДокументыФизическихЛиц.Номер = &Номер";
		Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
		Запрос.УстановитьПараметр("Серия", СокрЛП(Серия));
		Запрос.УстановитьПараметр("Номер", СокрЛП(Номер));
		Запрос.УстановитьПараметр("Документ", НСтр("ru='ФИО';uk='ПІБ'"));
		
	КонецЕсли;	
	ТекстЗапроса = ТекстЗапроса + "
	|ИТОГИ ПО
	|	ФизЛицо";
	
	Запрос.Текст = ТекстЗапроса;
	
	ФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Объект.Наименование)," ");
	
	КоличествоПодстрок = ФИО.Количество();
	Фамилия            = ?(КоличествоПодстрок > 0,ФИО[0],"");
	Имя                = ?(КоличествоПодстрок > 1,ФИО[1],"");
	Отчество           = ?(КоличествоПодстрок > 2,ФИО[2],"");
	
	Запрос.УстановитьПараметр("ФамилияИмяОтчетство", СокрЛП(Фамилия + " " + Имя + " " + Отчество) + "%");
	Запрос.УстановитьПараметр("ФамилияИмя", СокрЛП(Фамилия + " " + Имя));
	Запрос.УстановитьПараметр("Фамилия",  СокрЛП(Фамилия));
	Запрос.УстановитьПараметр("НайденоВРеквизитеНаименование", НСтр("ru='ФИО';uk='ПІБ'"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаНайдено.Очистить();
	ТаблицаРасшифровкаНайдено.Очистить();
	
	Если РезультатЗапроса.Пустой() Тогда
	     Возврат Истина;	 
	 КонецЕсли;
	
	ВыборкаФизЛицо  = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФизЛицо.Следующий() Цикл
		СтрокаТаблицыНайдено = ТаблицаНайдено.Добавить();
		СтрокаТаблицыНайдено.ФизЛицо = ВыборкаФизЛицо.ФизЛицо;
		СтрокаТаблицыНайдено.КоличествоНайденныхАналогов = 0;
		
		ВыборкаНайдено = ВыборкаФизЛицо.Выбрать();
		Пока ВыборкаНайдено.Следующий() Цикл
						
			СтрокаТаблицыРасшифровкаНайдено = ТаблицаРасшифровкаНайдено.Добавить();
			СтрокаТаблицыРасшифровкаНайдено.ФизЛицо = ВыборкаФизЛицо.ФизЛицо;
			СтрокаТаблицыРасшифровкаНайдено.ПредставлениеНайденоПо = ВыборкаНайдено.НайденоВРеквизите;
			СтрокаТаблицыНайдено.КоличествоНайденныхАналогов = СтрокаТаблицыНайдено.КоличествоНайденныхАналогов + 1;
			
		КонецЦикла;
		
		СтрокаТаблицыНайдено.Представление = Строка(ВыборкаФизЛицо.ФизЛицо) + ?(СтрокаТаблицыНайдено.КоличествоНайденныхАналогов > 1, " (Совпадений - " + СтрокаТаблицыНайдено.КоличествоНайденныхАналогов + ")","");
		
				
	КонецЦикла;
	
	Если ТаблицаНайдено.Количество() > 0 Тогда
		ТаблицаНайдено.Сортировать("КоличествоНайденныхАналогов УБЫВ");
	КонецЕсли;
	
	Элементы.КоманднаяПанельФормы.Видимость = Ложь;
	
	Элементы.ГруппаСтраницыФормы.ТекущаяСтраница = Элементы.ГруппаСтраницыФормы.ПодчиненныеЭлементы.ГруппаДубли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
// Определяет, есть ли в базе физическое лицо с таким же кодом по ДРФО
// Параметры
//  КодПоДРФО  - Строка - проверяемый КодПоДРФО
//  ИсключаяСсылку  - СправочникСсылка.ФизическиеЛица - физическое лицо, исключаемое из проверки
//
// Возвращаемое значение:
//   ВыборкаИзРезультатовЗапроса, Неопределено   - выборка с данными найденного физического лица
//  с таким же ИНН, Неопределено если искомый ИНН никому не назначен.
//
Функция КодПоДРФОУжеНазначенДругомуФизЛицу(КодПоДРФО, ИсключаяСсылку = Неопределено)	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФизическиеЛица.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ФизическиеЛица.Наименование) КАК Представление
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.КодПоДРФО = &КодПоДРФО
	|	И ФизическиеЛица.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("КодПоДРФО",	КодПоДРФО);
	Запрос.УстановитьПараметр("Ссылка", ИсключаяСсылку);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

