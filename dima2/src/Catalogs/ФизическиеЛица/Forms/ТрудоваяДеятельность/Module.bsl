
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Заголовок,ФизическоеЛицоСсылка");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтаФорма,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		Параметры.АдресВХранилище);
	
	ПроинициализироватьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "ИзмененСтажФизическогоЛица" И Источник.ВладелецФормы = ЭтаФорма Тогда
		ОбработатьИзменениеСтажаФизическогоЛица(Параметр.ДанныеСтажей);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСведенияОСтажах

&НаКлиенте
Процедура СведенияОСтажахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СведенияОСтажахПредставлениеСтажа" Тогда
		
		ДатаСведений = ОбщегоНазначенияКлиент.ДатаСеанса();
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ВидыСтажа = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущиеДанные.ВидСтажа));
		
		ДанныеСтажей = Неопределено;
		Если ЗначениеЗаполнено(ТекущиеДанные.ДатаОтсчета) Тогда
			
			ДанныеСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.СведенияОСтаже();
			ДанныеСтажа.ПериодРегистрации = ТекущиеДанные.ДатаОтсчета;
			ДанныеСтажа.РазмерМесяцев = ТекущиеДанные.Лет * 12 + ТекущиеДанные.Месяцев;
			ДанныеСтажа.РазмерДней = ТекущиеДанные.Дней;
			ДанныеСтажа.ИсчисляетсяСДатыПриема = ТекущиеДанные.ИсчисляетсяСДатыПриема;
			
			ДанныеСтажей = Новый Соответствие;
			ДанныеСтажей.Вставить(ТекущиеДанные.ВидСтажа, ДанныеСтажа);
			
		КонецЕсли;
		
		КадровыйУчетРасширенныйКлиент.ОткрытьФормуРедактированияСтажейСотрудника(ЭтотОбъект, Неопределено, ДатаСведений, ВидыСтажа, ФизическоеЛицоСсылка, ДанныеСтажей, Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОСтажахПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ОчиститьСведенияОСтаже();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыТрудоваяДеятельностьфизическихлиц

&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыНаградыфизическихлиц

&НаКлиенте
Процедура НаградыФизическихЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	Если НЕ СтажиФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "СтажиФизическихЛиц");
		СтажиФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	ЗаполнитьДанныеОСтаже();
	
	Если НЕ НаградыФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "НаградыФизическихЛиц");
		НаградыФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	Если НЕ ТрудоваяДеятельностьФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "ТрудоваяДеятельностьФизическихЛиц");
		ТрудоваяДеятельностьФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыйДокумент);
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("СведенияОСтажах");	
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СведенияОСтажах.ДатаОтсчета");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОСтаже()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыСтажа.Ссылка КАК ВидСтажа
	               |ИЗ
	               |	Справочник.ВидыСтажа КАК ВидыСтажа
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВидыСтажа.Наименование";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СведенияОСтажах.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		СформироватьПредставлениеСтажа(НоваяСтрока, ТекущаяДатаСеанса());
	КонецЦикла;
	
	Для Каждого ДанныеСтажа Из СтажиФизическихЛиц Цикл
		НайденныеСтроки = СведенияОСтажах.НайтиСтроки(Новый Структура("ВидСтажа", ДанныеСтажа.ВидСтажа));
		Если НайденныеСтроки.Количество() <> 0 Тогда
			СтрокаСтажа = НайденныеСтроки[0];
			ЗаполнитьЗначенияСвойств(СтрокаСтажа, ДанныеСтажа);
			Если Не СтрокаСтажа.ИсчисляетсяСДатыПриема Тогда 
				СтрокаСтажа.Лет = Цел(ДанныеСтажа.РазмерМесяцев / 12);
				СтрокаСтажа.Месяцев = ДанныеСтажа.РазмерМесяцев - СтрокаСтажа.Лет * 12;
				СтрокаСтажа.Дней = ДанныеСтажа.РазмерДней;
			КонецЕсли;
			СформироватьПредставлениеСтажа(СтрокаСтажа, ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтажаФизическогоЛица(ДанныеСтажей)
	
	Для Каждого КлючИЗначение Из ДанныеСтажей Цикл 
		
		НайденныеСтроки = СведенияОСтажах.НайтиСтроки(Новый Структура("ВидСтажа", КлючИЗначение.Ключ));
		Если НайденныеСтроки.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		СтрокаСтажа = НайденныеСтроки[0];
		ДанныеСтажа = КлючИЗначение.Значение;
		
		СтрокаСтажа.ИсчисляетсяСДатыПриема = ДанныеСтажа.ИсчисляетсяСДатыПриема;
		СтрокаСтажа.ДатаОтсчета = ДанныеСтажа.ПериодРегистрации;
		СтрокаСтажа.Лет = Цел(ДанныеСтажа.РазмерМесяцев / 12);
		СтрокаСтажа.Месяцев = ДанныеСтажа.РазмерМесяцев - СтрокаСтажа.Лет * 12;
		СтрокаСтажа.Дней = ДанныеСтажа.РазмерДней;
		
		СформироватьПредставлениеСтажа(СтрокаСтажа, ОбщегоНазначенияКлиент.ДатаСеанса());
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеСтажа(ДанныеСтажа, ДатаАктуальности)
	
	ПредставлениеСтажа = "";
	Если Не ЗначениеЗаполнено(ДанныеСтажа.ДатаОтсчета) Тогда
		ПредставлениеСтажа = НСтр("ru='Нажмите, чтобы заполнить';uk='Натисніть, щоб заповнити'");
	КонецЕсли;
	
	Если ПредставлениеСтажа = "" Тогда 

		Если ДанныеСтажа.ИсчисляетсяСДатыПриема Тогда
			
			ПродолжительностьСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(ДанныеСтажа.ДатаОтсчета, ДатаАктуальности);
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='С момента приема на работу (%1) на %2 составил %3';uk='З моменту прийому на роботу (%1) на %2 склав %3'"), 
				Формат(ДанныеСтажа.ДатаОтсчета, "ДЛФ=Д"),
				Формат(ДатаАктуальности, "ДЛФ=Д"),
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		Иначе 
			
			ДатаОтсчета = ЗарплатаКадрыРасширенныйКлиентСервер.ДатаОтсчетаСтажа(ДанныеСтажа.ДатаОтсчета, ДанныеСтажа.Лет, ДанныеСтажа.Месяцев, ДанныеСтажа.Дней);
			ПродолжительностьСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(ДатаОтсчета, ДатаАктуальности);
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='По трудовой книжке на %1 составил %2';uk='За трудовою книжкою на %1 склав %2'"), 
				Формат(ДатаАктуальности, "ДЛФ=Д"), 
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСтажа.ПредставлениеСтажа = ПредставлениеСтажа;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСведенияОСтаже()
	
	ТекущиеДанные = Элементы.СведенияОСтажах.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаОтсчета) Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Лет = 0;
	ТекущиеДанные.Месяцев = 0;
	ТекущиеДанные.Дней = 0;
	ТекущиеДанные.ИсчисляетсяСДатыПриема = Ложь;
	ТекущиеДанные.ДатаОтсчета = '00010101';
	
	СформироватьПредставлениеСтажа(ТекущиеДанные, ОбщегоНазначенияКлиент.ДатаСеанса());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ) Экспорт
	
	Если Модифицированность Тогда
		
		СтажиФизическихЛиц.Очистить();
		Для Каждого СтрокаСтажа Из СведенияОСтажах Цикл
			Если ЗначениеЗаполнено(СтрокаСтажа.ДатаОтсчета) Тогда 
				НоваяСтрока = СтажиФизическихЛиц.Добавить();
				НоваяСтрока.ФизическоеЛицо = ФизическоеЛицоСсылка;
				НоваяСтрока.ВидСтажа = СтрокаСтажа.ВидСтажа;
				НоваяСтрока.ДатаОтсчета = СтрокаСтажа.ДатаОтсчета;
				НоваяСтрока.РазмерМесяцев = СтрокаСтажа.Лет * 12 + СтрокаСтажа.Месяцев;
				НоваяСтрока.РазмерДней = СтрокаСтажа.Дней;
				НоваяСтрока.ИсчисляетсяСДатыПриема = СтрокаСтажа.ИсчисляетсяСДатыПриема;
			КонецЕсли;
		КонецЦикла;
		
		Если Не Отказ Тогда
			
			Если ПроверитьЗаполнение() Тогда
				
				Возвращаемыйпараметр = Новый Структура;
				Возвращаемыйпараметр.Вставить("ИмяФормы", ИмяФормы);
				Возвращаемыйпараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
				
				Оповестить(
					"ИзмененыДанныеДополнительнойФормы",
					Возвращаемыйпараметр,
					ВладелецФормы);
				
			Иначе
				Отказ = Истина;
			КонецЕсли;
				
		КонецЕсли; 
			
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли; 
	
	Отказ = Ложь;

	СохранитьДанные(Отказ);
	
	Если НЕ Отказ  Тогда
		
		Модифицированность = Ложь;
		Если ЗакрытьФорму И Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтаФорма);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтажиЗаданы(Форма)
	
	СтажиЗаданы = Ложь;
	
	Для Каждого СтрокаСтажа Из Форма.СведенияОСтажах Цикл 
		
		Если СтрокаСтажа.ИсчисляетсяСДатыПриема Или ЗначениеЗаполнено(СтрокаСтажа.ДатаОтсчета)
			Или СтрокаСтажа.Лет <> 0 Или СтрокаСтажа.Месяцев <> 0 Или СтрокаСтажа.Дней <> 0 Тогда 
			
			СтажиЗаданы = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтажиЗаданы;
	
КонецФункции

#КонецОбласти
