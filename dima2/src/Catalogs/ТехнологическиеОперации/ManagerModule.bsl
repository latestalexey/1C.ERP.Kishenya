#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возращает новый номер операции
//
// Параметры:
//  МаршрутнаяКарта	- СправочникСсылка.МаршрутныеКарты
//
// Возвращаемое значение:
//   Число   - Новый номер операции
//
Функция НовыйНомерОперации(МаршрутнаяКарта) Экспорт

	Если МаршрутнаяКарта.Пустая() Тогда
		Возврат 1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ТехнологическиеОперации.НомерОперации КАК НомерОперации
	               |ИЗ
	               |	Справочник.ТехнологическиеОперации КАК ТехнологическиеОперации
	               |ГДЕ
	               |	ТехнологическиеОперации.Владелец = &МаршрутнаяКарта
	               |	И НЕ ТехнологическиеОперации.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерОперации УБЫВ";
	
	Запрос.УстановитьПараметр("МаршрутнаяКарта", МаршрутнаяКарта);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 1;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.НомерОперации + 1;

КонецФункции

// Определяет наличие зацикливания операций
//
// Параметры:
//  ПроверяемаяМаршрутнаяКарта	- СправочникСсылка.МаршрутныеКарты - маршрутная карта
//								операции которой (и все подчиненные) будут проверены на зацикливание
//  ИсходнаяМаршрутнаяКарта		- СправочникСсылка.МаршрутныеКарты - маршрутная карта на которую не должно быть ссылок
//  Отказ						- Булево - признак отказа от выполнения действия
//
// Возвращаемое значение:
//   Булево   - Истина, если есть зацикливание операций
//
Функция ЕстьЗацикливание(ПроверяемаяМаршрутнаяКарта, ИсходнаяМаршрутнаяКарта, Отказ = Ложь) Экспорт

	Если ПроверяемаяМаршрутнаяКарта = ИсходнаяМаршрутнаяКарта Тогда
		Отказ = Истина;
		Возврат Истина;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТехнологическиеОперации.Ссылка КАК Ссылка,
	|	ТехнологическиеОперации.ВложенныйМаршрут КАК ВложенныйМаршрут
	|ИЗ
	|	Справочник.ТехнологическиеОперации КАК ТехнологическиеОперации
	|ГДЕ
	|	НЕ ТехнологическиеОперации.ПометкаУдаления
	|	И ТехнологическиеОперации.Владелец В(&ПроверяемыеМаршрутныеКарты)
	|	И ТехнологическиеОперации.СодержитВложенныйМаршрут";
	
	Запрос.УстановитьПараметр("ИсходнаяМаршрутнаяКарта", ИсходнаяМаршрутнаяКарта);
	
	ПроверяемыеМаршрутныеКарты = Новый Массив;
	ПроверяемыеМаршрутныеКарты.Добавить(ПроверяемаяМаршрутнаяКарта);
	
	Пока ПроверяемыеМаршрутныеКарты.Количество() <> 0 Цикл
		
		Запрос.УстановитьПараметр("ПроверяемыеМаршрутныеКарты", ПроверяемыеМаршрутныеКарты);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		ПроверяемыеМаршрутныеКарты.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ВложенныйМаршрут = ИсходнаяМаршрутнаяКарта Тогда
				Отказ = Истина;
				Возврат Истина;
			Иначе
				ПроверяемыеМаршрутныеКарты.Добавить(Выборка.ВложенныйМаршрут);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;

	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	УправлениеДаннымиОбИзделияхВызовСервера.ТехнологическиеОперацииОбработкаПолученияФормы(
				ВидФормы, 
				Параметры, 
				ВыбраннаяФорма, 
				СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

#Область Обработчики_2_1_2

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли