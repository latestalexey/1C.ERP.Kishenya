#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьТарифныеСеткиПриРасчетеЗарплаты") Тогда 
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказатьВсеКатегории")	Тогда
		
		Если Не Параметры.Отбор.Свойство("ТарифнаяСетка") Тогда
			Параметры.Отбор.Вставить("ТарифнаяСетка", ПредопределенноеЗначение("Справочник.ТарифныеСетки.ПустаяСсылка"));
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	ОсновнаяТарифнаяСетка = ?(Параметры.Свойство("ОсновнаяТарифнаяСетка"), Параметры.ОсновнаяТарифнаяСетка, Ложь);
	
	УстановитьПривилегированныйРежим(Истина);
		
	ТарифнаяСетка = Неопределено;
	Должность = Неопределено;
	ДолжностьПоШтатномуРасписанию = Неопределено;
	Сотрудник = Неопределено;
	ДатаСобытия = Неопределено;
	
	Параметры.Свойство("ТарифнаяСетка", ТарифнаяСетка);
	Параметры.Свойство("Должность", Должность);
	Параметры.Свойство("ДолжностьПоШтатномуРасписанию", ДолжностьПоШтатномуРасписанию);
	Параметры.Свойство("Сотрудник", Сотрудник);
	Параметры.Свойство("ДатаСобытия", ДатаСобытия);
		
	Если ЗначениеЗаполнено(ДатаСобытия) Тогда 
		ДатаСобытия = ?(Параметры.Свойство("ВремяРегистрации"), Параметры.ВремяРегистрации, ДатаСобытия); 
	КонецЕсли;		
	
	ДанныеВыбора = Новый СписокЗначений;
	СтандартнаяОбработка = Ложь;

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ИзмеренияДаты.Добавить().Период = ДатаСобытия;
		
	Если ТарифнаяСетка = Неопределено Тогда 
		Если ЗначениеЗаполнено(ДолжностьПоШтатномуРасписанию) Тогда
			ДанныеПозиции = УправлениеШтатнымРасписанием.ДанныеПозицииШтатногоРасписания(ДолжностьПоШтатномуРасписанию, ДатаСобытия, Ложь);
			ТарифнаяСетка = ДанныеПозиции.ТарифнаяСетка;
			ТарифнаяСеткаНадбавки = ДанныеПозиции.ТарифнаяСеткаНадбавки;
		ИначеЕсли ЗначениеЗаполнено(Должность) Тогда
			ТарифныеСетки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Должность, "ТарифнаяСетка,ТарифнаяСеткаНадбавки");
			ТарифнаяСетка = ТарифныеСетки.ТарифнаяСетка;
			ТарифнаяСеткаНадбавки = ТарифныеСетки.ТарифнаяСеткаНадбавки;
		Иначе 
			КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, Сотрудник, "ТарифнаяСетка,ТарифнаяСеткаНадбавки", ДатаСобытия, , Ложь);  
			Если КадровыеДанные.Количество() > 0 Тогда
				ТарифнаяСетка = КадровыеДанные[0].ТарифнаяСетка;
				ТарифнаяСеткаНадбавки = КадровыеДанные[0].ТарифнаяСеткаНадбавки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ОсновнаяТарифнаяСетка Тогда 
		ТарифнаяСеткаНадбавки = Неопределено;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТарифнаяСетка) И Не ЗначениеЗаполнено(ТарифнаяСеткаНадбавки) Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ЗначенияТарифов",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты),
		ПараметрыПостроения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("ТарифныеСетки", РазрядыКатегорииДолжностей.МассивСеток(ТарифнаяСетка, ТарифнаяСеткаНадбавки));
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗначенияТарифов.РазрядКатегория КАК РазрядКатегория
		|ИЗ
		|	ВТЗначенияТарифовСрезПоследних КАК ЗначенияТарифов
		|ГДЕ
		|	ЗначенияТарифов.ТарифнаяСетка В(&ТарифныеСетки)";
		
	Если Параметры.Свойство("СтрокаПоиска") И Параметры.СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска);	
		Запрос.Текст = Запрос.Текст
			+ " И ПОДСТРОКА(ЗначенияТарифов.РазрядКатегория.Наименование, 1, " + СтрДлина(Параметры.СтрокаПоиска) +") = &СтрокаПоиска";	
	КонецЕсли;
	
	РазрядыКатегории = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РазрядКатегория");

	ДанныеВыбора.ЗагрузитьЗначения(РазрядыКатегории);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НачальноеЗаполнение() Экспорт
	
	КлассификаторТаблица = Новый ТаблицаЗначений;
	КлассификаторТаблица.Колонки.Добавить("Наименование");
	
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='1 квалификационный уровень';uk='1 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='2 квалификационный уровень';uk='2 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='3 квалификационный уровень';uk='3 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='4 квалификационный уровень';uk='4 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='5 квалификационный уровень';uk='5 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='6 квалификационный уровень';uk='6 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='7 квалификационный уровень';uk='7 кваліфікаційний рівень'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Первая квалификационная категория';uk='Перша кваліфікаційна категорія'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Вторая квалификационная категория';uk='Друга кваліфікаційна категорія'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='Высшая квалификационная категория';uk='Вища кваліфікаційна категорія'");
		
	Иначе
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='1 разряд (категория)';uk='1 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='2 разряд (категория)';uk='2 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='3 разряд (категория)';uk='3 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='4 разряд (категория)';uk='4 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='5 разряд (категория)';uk='5 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='6 разряд (категория)';uk='6 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='7 разряд (категория)';uk='7 розряд (категорія)'");
		
		НоваяСтрокаКлассификатора = КлассификаторТаблица.Добавить();
		НоваяСтрокаКлассификатора.Наименование = НСтр("ru='8 разряд (категория)';uk='8 розряд (категорія)'");
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РазрядыКатегорииДолжностей.Наименование
	|ИЗ
	|	Справочник.РазрядыКатегорииДолжностей КАК РазрядыКатегорииДолжностей";
	
	ТаблицаСуществующих = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаКлассификатора Из КлассификаторТаблица Цикл
		Если ТаблицаСуществующих.Найти(СтрокаКлассификатора.Наименование,"Наименование")  = Неопределено Тогда
			СправочникОбъект = Справочники.РазрядыКатегорииДолжностей.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(СправочникОбъект, СтрокаКлассификатора);
			СправочникОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	КадровыйУчетРасширенный.ЗаполнитьРеквизитДопУпорядочиванияРазрядовДолжностей();
	
КонецПроцедуры

Процедура ЗаполнитьНаименованиеПолное() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазрядыКатегорииДолжностей.Ссылка
	|ИЗ
	|	Справочник.РазрядыКатегорииДолжностей КАК РазрядыКатегорииДолжностей
	|ГДЕ
	|	ПОДСТРОКА(РазрядыКатегорииДолжностей.НаименованиеПолное, 1, 150) = """"";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.НаименованиеПолное = Объект.Наименование;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ЗаполнитьТарифныеСетки() Экспорт
	
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	УтверждениеТарифнойСеткиТарифы.РазрядКатегория КАК РазрядКатегория,
			|	УтверждениеТарифнойСеткиТарифы.Ссылка.ТарифнаяСетка КАК ТарифнаяСетка
			|ИЗ
			|	Документ.УтверждениеТарифнойСетки.Тарифы КАК УтверждениеТарифнойСеткиТарифы
			|ГДЕ
			|	УтверждениеТарифнойСеткиТарифы.Ссылка.ВидТарифнойСетки = ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСеток.Тариф)
			|	И ВЫРАЗИТЬ(УтверждениеТарифнойСеткиТарифы.РазрядКатегория КАК Справочник.РазрядыКатегорииДолжностей).ТарифнаяСетка = ЗНАЧЕНИЕ(Справочник.ТарифныеСетки.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	РазрядКатегория,
			|	ТарифнаяСетка";
			
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ОбъектСправочника = Выборка.РазрядКатегория.ПолучитьОбъект();
				ОбъектСправочника.ТарифнаяСетка = Выборка.ТарифнаяСетка;
				
				ОбъектСправочника.ОбменДанными.Загрузка = Истина;
				ОбъектСправочника.Записать();
				
			КонецЦикла; 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
