
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьТолькоПКУ", ПоказыватьТолькоПКУ)
		И ПоказыватьТолькоПКУ Тогда
		
		Параметры.Отбор.Удалить("ТарифнаяСетка");
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Создать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Скопировать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюСоздать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюСкопировать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "ТарифнаяСетка", Справочники.ТарифныеСетки.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.НеРавно);
			
		ГруппировкаПоТарифнойСетке = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ГруппировкаПоТарифнойСетке.Поле = Новый ПолеКомпоновкиДанных("ТарифнаяСетка");
		ГруппировкаПоТарифнойСетке.Использование = Истина;
		
		ЭтаФорма.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("СправочникРазрядовСписок", Перечисления.ВидыТарифныхСеток.Тариф);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ФормаПереместитьЭлементВверх", "Видимость",  Ложь);
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, "ФормаПереместитьЭлементВниз", "Видимость",  Ложь);
		
	Иначе
		
		Если Не Параметры.Отбор.Свойство("ТарифнаяСетка") Тогда
			Параметры.Отбор.Вставить("ТарифнаяСетка", ПредопределенноеЗначение("Справочник.ТарифныеСетки.ПустаяСсылка"));
		КонецЕсли;
		
		ЭтаФорма.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("СправочникРазрядовСписок");
		
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
	КонецЕсли;
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список",,,, "ТарифнаяСетка");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ПоказыватьТолькоПКУ Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Истина);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьЭлементВверх(Команда)
	
	Если Не ПоказыватьТолькоПКУ
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВверхВыполнить(Список, Элементы.Список);
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВниз(Команда)
	
	Если Не ПоказыватьТолькоПКУ
		И Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		
		НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВнизВыполнить(Список, Элементы.Список);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
