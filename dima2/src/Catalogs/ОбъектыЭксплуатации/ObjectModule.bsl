
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьСправочник();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьУправлениеРемонтами = ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеРемонтами");
	УказыватьНаправлениеВоВнеоборотныхАктивах = ЗначениеНастроекПовтИсп.УказыватьНаправлениеВоВнеоборотныхАктивах();
	
	Если ИспользоватьУправлениеРемонтами Тогда
		
		// Стандартный механизм проверки заполнения применяется только для проверки стандартных реквизитов: "Наименование", "Код", "Статус" и "ДатаСведений"
		// Проверка реквизитов, доп. реквизитов и табличных частей инициируется из формы объекта
		ПроверяемыеРеквизиты.Очистить();
		ПроверяемыеРеквизиты.Добавить("Наименование");
		ПроверяемыеРеквизиты.Добавить("Статус");
		ПроверяемыеРеквизиты.Добавить("ДатаСведений");
		Если УказыватьНаправлениеВоВнеоборотныхАктивах Тогда
			ПроверяемыеРеквизиты.Добавить("НаправлениеДеятельности");
		КонецЕсли;
	Иначе
		
		НепроверяемыеРеквизиты = Новый Массив;
		
		Если Не УказыватьНаправлениеВоВнеоборотныхАктивах Тогда
			НепроверяемыеРеквизиты.Добавить("НаправлениеДеятельности");
		КонецЕсли;
		
		НепроверяемыеРеквизиты.Добавить("Класс");
		НепроверяемыеРеквизиты.Добавить("Подкласс");
		НепроверяемыеРеквизиты.Добавить("ПараметрыУчетаНаработок.ПоказательНаработки");
		НепроверяемыеРеквизиты.Добавить("ПараметрыУчетаНаработок.НазначенныйРесурс");
		НепроверяемыеРеквизиты.Добавить("ПараметрыУчетаНаработок.Источник");
		
		Если Не ПолучитьФункциональнуюОпцию("УправлениеПредприятием") Тогда
			НепроверяемыеРеквизиты.Добавить("РабочиеЦентры.РабочийЦентр");
		КонецЕсли;
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИнициализироватьДополнительныеСвойстваДляЗаписи();
	
	Если ДополнительныеСвойства.ОбъектПоставленНаРедактирование Тогда
		
		ДатаСведений = ТекущаяДатаСеанса();
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.ОбновитьНаименованиеПолное Тогда
		
		НаименованиеПолное = Наименование;
		
	КонецЕсли;
	
	//++ НЕ УТКА
	Если ДополнительныеСвойства.ОбновитьПодчиненияУзлов Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ПодчиненияУзловОбъектовЭксплуатацииСрезПоследних.Узел,
			|	ПодчиненияУзловОбъектовЭксплуатацииСрезПоследних.Родитель,
			|	ПодчиненияУзловОбъектовЭксплуатацииСрезПоследних.ОбъектЭксплуатации
			|ПОМЕСТИТЬ ПодчинениеПоДаннымРегистра
			|ИЗ
			|	РегистрСведений.ПодчиненияУзловОбъектовЭксплуатации.СрезПоследних(
			|			,
			|			Узел В
			|				(ВЫБРАТЬ
			|					Узлы.Ссылка
			|				ИЗ
			|					Справочник.УзлыОбъектовЭксплуатации КАК Узлы
			|				ГДЕ
			|					Узлы.Владелец = &ОбъектЭксплуатации)) КАК ПодчиненияУзловОбъектовЭксплуатацииСрезПоследних");
		Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ОбъектЭксплуатации", ЭтотОбъект.Ссылка);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	//-- НЕ УТКА
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	//++ НЕ УТКА
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ДополнительныеСвойства.ОбновитьПринадлежностиУзлов Тогда
		
		СтруктураДополнительныхСвойств = Новый Структура;
		СтруктураДополнительныхСвойств.Вставить("ЭтоНовый", Ложь);
		СтруктураДополнительныхСвойств.Вставить("ЗаписьИзВнешнегоОбъекта", Истина);
		СтруктураДополнительныхСвойств.Вставить("ЗначенияЗаполнения", Неопределено);
		СтруктураДополнительныхСвойств.Вставить("ДействияЗаполнения", Новый Структура("ЗаполнитьПринадлежность"));
		СтруктураДополнительныхСвойств.Вставить("ТребуетсяЗаполнениеПодчиненных", Ложь);
		
		СтруктураОтбора = Новый Структура("Владелец", Ссылка);
		
		Справочники.УзлыОбъектовЭксплуатации.ЗаполнитьПоОтбору(СтруктураОтбора, СтруктураДополнительныхСвойств, Отказ);
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.ОбновитьПодчиненияУзлов Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	УзлыОбъектовЭксплуатации.Ссылка КАК Узел,
			|	УзлыОбъектовЭксплуатации.Родитель КАК Родитель,
			|	УзлыОбъектовЭксплуатации.Владелец КАК ОбъектЭксплуатации
			|ПОМЕСТИТЬ Подчинение
			|ИЗ
			|	Справочник.УзлыОбъектовЭксплуатации КАК УзлыОбъектовЭксплуатации
			|ГДЕ
			|	УзлыОбъектовЭксплуатации.Владелец = &ОбъектЭксплуатации
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Подчинение.Узел,
			|	Подчинение.Родитель,
			|	Подчинение.ОбъектЭксплуатации
			|ИЗ
			|	Подчинение КАК Подчинение
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПодчинениеПоДаннымРегистра КАК ПодчинениеПоДаннымРегистра
			|		ПО Подчинение.Узел = ПодчинениеПоДаннымРегистра.Узел
			|			И Подчинение.Родитель = ПодчинениеПоДаннымРегистра.Родитель
			|			И Подчинение.ОбъектЭксплуатации = ПодчинениеПоДаннымРегистра.ОбъектЭксплуатации
			|ГДЕ
			|	ПодчинениеПоДаннымРегистра.Узел ЕСТЬ NULL ");
		Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ОбъектЭксплуатации", ЭтотОбъект.Ссылка);
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			ЗначенияЗаполнения = Новый Структура("Период", ЭтотОбъект.ДатаСведений);
			Пока Выборка.Следующий() Цикл
				
				НаборЗаписей = РегистрыСведений.ПодчиненияУзловОбъектовЭксплуатации.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Узел.Установить(Выборка.Узел);
				Запись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, ЗначенияЗаполнения);
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
				
				НаборЗаписей.Записать();
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат; // Пустой обработчик в УТ и КА
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьСправочник()
	
	Статус = Перечисления.СтатусыОбъектовЭксплуатации.Редактируется;
	ДатаСведений = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойстваДляЗаписи()
	
	Если ДополнительныеСвойства.Свойство("ИнициализированыДляЗаписи") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ИспользоватьУправлениеРемонтами", ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеРемонтами"));
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("ОбъектПоставленНаРедактирование", Ложь);
	ДополнительныеСвойства.Вставить("ОбновитьПодчиненияУзлов", Ложь);
	ДополнительныеСвойства.Вставить("ОбновитьПринадлежностиУзлов", Ложь);
	ДополнительныеСвойства.Вставить("ОбновитьНаименованиеПолное", ПустаяСтрока(НаименованиеПолное));
	ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	
	//++ НЕ УТКА
	Если ДополнительныеСвойства.ИспользоватьУправлениеРемонтами Тогда
		
		Если Не ДополнительныеСвойства.ЭтоНовый Тогда
			РеквизитыДоЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтотОбъект.Ссылка, "Статус, Наименование, НаименованиеПолное");
			ДополнительныеСвойства.ОбъектПоставленНаРедактирование = (
				РеквизитыДоЗаписи.Статус <> Перечисления.СтатусыОбъектовЭксплуатации.Редактируется
				И РеквизитыДоЗаписи.Статус <> Статус);
			ДополнительныеСвойства.ОбновитьПодчиненияУзлов = (
				РеквизитыДоЗаписи.Статус = Перечисления.СтатусыОбъектовЭксплуатации.Редактируется
				И РеквизитыДоЗаписи.Статус <> Статус);
			ДополнительныеСвойства.ОбновитьПринадлежностиУзлов = (РеквизитыДоЗаписи.Наименование <> Наименование);
			ДополнительныеСвойства.ОбновитьНаименованиеПолное = (
				ПустаяСтрока(НаименованиеПолное)
				Или (НаименованиеПолное = РеквизитыДоЗаписи.НаименованиеПолное
					И РеквизитыДоЗаписи.НаименованиеПолное = РеквизитыДоЗаписи.Наименование));
		КонецЕсли;
		
	КонецЕсли;
	//-- НЕ УТКА
	
	ДополнительныеСвойства.Вставить("ИнициализированыДляЗаписи");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
