#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВремяНачалаЗамера = ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрДатаОстатков = Неопределено;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.Найти("КоманднаяПанельСписок"));
	// Конец СтандартныеПодсистемы.Печать
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"КоличествоСтавок",
		"Формат",
		УправлениеШтатнымРасписанием.ФорматКоличестваСтавок());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ТарифнаяСетка",
		"Заголовок",
		РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитТарифнаяСеткаТариф"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазрядКатегория",
		"Заголовок",
		РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияТариф"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ТарифнаяСеткаНадбавки",
		"Заголовок",
		РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитТарифнаяСеткаНадбавка"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазрядКатегорияНадбавки",
		"Заголовок",
		РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияНадбавка"));
	
	ПредупреждениеОНевозможностиСозданияПозицийКартинка = БиблиотекаКартинок.Информация;
	
	СохранитьРежимОтображенияСпискаПриЗакрытии = Истина;
	ВидИерархия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СписокПозицийШтатногоРасписания", "ВидИерархия");
	Если ВидИерархия = Неопределено Тогда
		ВидИерархия = Истина;
	КонецЕсли;
	
	ОтображатьСтруктуруПредприятия = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СписокПозицийШтатногоРасписания", "ОтображатьСтруктуруПредприятия");
	
	ФОИспользоватьИсториюИзмененияШтатногоРасписания = ПолучитьФункциональнуюОпцию("ИспользоватьИсториюИзмененияШтатногоРасписания");
	Если ФОИспользоватьИсториюИзмененияШтатногоРасписания Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаСоздать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаСкопировать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюСоздать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюСкопировать",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокУтвердитьПозиции",
			"Видимость",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"СписокКонтекстноеМенюУтвердитьПозиции",
			"Видимость",
			Ложь);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПредупреждениеОНевозможностиСозданияПозицийКоманды",
		"Видимость",
		ФОИспользоватьИсториюИзмененияШтатногоРасписания);
	
	Если Параметры.Свойство("ПоказыватьЗакрытыеПозиции") Тогда
		ПоказыватьЗакрытыеПозиции = Параметры.ПоказыватьЗакрытыеПозиции;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
			ОтборОрганизация = Параметры.Отбор.Владелец;
		Иначе
			Параметры.Отбор.Удалить("Владелец");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Подразделение") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.Подразделение) Тогда
			
			ОтборПодразделение = Параметры.Отбор.Подразделение;
			Если НЕ ЗначениеЗаполнено(ОтборОрганизация) Тогда
				ОтборОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборПодразделение, "Владелец");
			КонецЕсли;
			
		Иначе
			
			Параметры.Отбор.Удалить("Подразделение");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		
		Если Параметры.МножественныйВыбор = Истина Тогда
			ЗакрыватьПриВыборе = Ложь;
		Иначе
			Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
		КонецЕсли; 
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Список",
			"РежимВыбора",
			Истина);
		
		СохранитьРежимОтображенияСпискаПриЗакрытии = Ложь;
		
		Если Параметры.Отбор.Свойство("ДатаПримененияОтбора", ДатаПримененияОтбора) Тогда
			
			Если ЗначениеЗаполнено(ДатаПримененияОтбора) Тогда
				
				// Условие по дате утверждения.
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
					Список, "ДатаУтверждения", ДатаПримененияОтбора, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
					
				ОтборДинамическогоСписка = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор;
				
				// Группа условий по дате закрытия.
				ГруппаНеЗакрыта = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
					ОтборДинамическогоСписка.Элементы, "ГруппаНеЗакрыта", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
					
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаНеЗакрыта, "ДатаЗакрытия", ДатаПримененияОтбора, ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
					
				// Нужна еще одна группа для второго условия по полю ДатаЗакрытия.
				ГруппаНеЗакрытаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
					ГруппаНеЗакрыта, "ГруппаНеЗакрытаИ", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
					
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
					ГруппаНеЗакрытаИ, "ДатаЗакрытия", , ВидСравненияКомпоновкиДанных.НеЗаполнено);
					
				ПоказыватьПозицииНаДату = Истина;
				ЗаголовокФлажка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Отображать только позиции, утвержденные на %1';uk='Відображати тільки позиції, затверджені на %1'"),
					Формат(ДатаПримененияОтбора, "ДЛФ=DD"));
					
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"ПоказыватьПозицииНаДату",
					"Заголовок",
					ЗаголовокФлажка);
					
				ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
					Элементы,
					"ПоказыватьПозицииНаДату",
					"Видимость",
					Истина);
					
				ПараметрДатаОстатков = КонецДня(ДатаПримененияОтбора);
				
			КонецЕсли;
			
			Параметры.Отбор.Удалить("ДатаПримененияОтбора");
			
		КонецЕсли;
		
		Если Параметры.Свойство("СкрытьПанельВводаДокументов")
			И Параметры.СкрытьПанельВводаДокументов Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"ПредупреждениеОНевозможностиСозданияПозиций",
				"Видимость",
				Ложь);
		
		КонецЕсли;
		
		Если Параметры.Свойство("ПоказыватьНовыеПозиции") Тогда
			ПоказыватьНовыеПозиции = Параметры.ПоказыватьНовыеПозиции;
		Иначе
			ПоказыватьНовыеПозиции = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			ПоказыватьЗакрытыеПозиции = Параметры.ТекущаяСтрока.Закрыта;
			Если НЕ Параметры.ТекущаяСтрока.Утверждена Тогда
				ПоказыватьНовыеПозиции = Истина;
			КонецЕсли;
		КонецЕсли; 
		
		АдресСпискаПодобранных = "";
		Если Параметры.Свойство("АдресСпискаПодобранных", АдресСпискаПодобранных) Тогда
			Если НЕ ПустаяСтрока(АдресСпискаПодобранных) Тогда
				СписокПодобранных.ЗагрузитьЗначения(ПолучитьИзВременногоХранилища(АдресСпискаПодобранных));
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		Если Параметры.Свойство("ПоказыватьНовыеПозиции") Тогда
			ПоказыватьНовыеПозиции = Параметры.ПоказыватьНовыеПозиции;
		Иначе
			ПоказыватьНовыеПозиции = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрДатаОстатков) Тогда
		ПараметрДатаОстатков = КонецДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ДатаОстатков", ПараметрДатаОстатков);
		
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		
		ОписаниеДинамическогоСписка = Новый Структура;
		ОписаниеДинамическогоСписка.Вставить("ИмяРеквизитаСписка",		"Список");
		ОписаниеДинамическогоСписка.Вставить("ИмяТаблицыДолжностей",	"СправочникШтатноеРасписание");
		ОписаниеДинамическогоСписка.Вставить("ИмяПоляДолжности",		"Должность");
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ПриСозданииФормыСпискаСправочникаШтатноеРасписание(ЭтотОбъект, Параметры, ОписаниеДинамическогоСписка);
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("Грейды");
		Модуль.НастроитьОтображениеГрейдаВФормеСписка(ЭтотОбъект, "СправочникШтатноеРасписание");
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		Модуль.ДополнитьФормуСпискаШтатногоРасписания(ЭтотОбъект);
		Модуль.НастроитьОтображениеМестаВСтруктуреПредприятияВФормеСпискаШтатногоРасписания(ЭтотОбъект, "СправочникШтатноеРасписание");
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСтруктураПредприятия", "Видимость", ОтображатьСтруктуруПредприятия);
	
	УстановитьОтображениеЭлементовУправления();
	УстановитьОтборСписка(ЭтотОбъект);
	
	ОбработатьИзменениеВидаСписка();
	
	ОбработатьОтображениеРежимаИерархи(ЭтаФорма);
	
	УстановитьСписокПодобранных();
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список", , , , "ЭтоГруппа, Утверждена, Закрыта, ГруппаНеЗакрыта");
	
	УстановитьИспользованиеОтбораПоОрганизации();
	
	ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени("ОткрытиеФормыСпискаСправочникаШтатноеРасписание",
		ВремяНачалаЗамера);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СохраненыПозицииШтатногоРасписания" Тогда
		Элементы.Список.Обновить();
		УстановитьОтображениеЭлементовУправления();
	ИначеЕсли ИмяСобытия = "ИзмененаСтруктураПредприятия" Тогда
		Если ВидИерархия И Параметр = ОтборОрганизация Тогда
			Элементы.Список.Обновить();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "СозданаПозицияШтатногоРасписания" И Источник = Элементы.Список Тогда
		
		Если Элементы.Список.РежимВыбора Тогда
			
			Если Параметр.Подразделение = ОтборПодразделение 
				И Параметр.ДатаУтверждения <= ДатаПримененияОтбора 
				И (Параметр.ДатаЗакрытия > ДатаПримененияОтбора ИЛИ НЕ ЗначениеЗаполнено(Параметр.ДатаЗакрытия)) Тогда
				
				ОповеститьОВыборе(Параметр.Ссылка);
				
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СохранитьНастройкиПриЗакрытииНаСервере(ВидИерархия, СохранитьРежимОтображенияСпискаПриЗакрытии, ОтображатьСтруктуруПредприятия);
	
	Если ВыбранныеПозиции.Количество() > 0 Тогда
		ОповеститьОВыборе(ВыбранныеПозиции.ВыгрузитьЗначения());
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьНовыеПозицииПриИзменении(Элемент)
	
	УстановитьОтборСписка(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗакрытыеПозицииПриИзменении(Элемент)
	
	УстановитьОтборСписка(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПозицииНаДатуПриИзменении(Элемент)
	
	ОтборДинамическогоСписка = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор;
	
	ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер.НайтиЭлементОтбораПоПредставлению(
		ОтборДинамическогоСписка.Элементы, "ГруппаНеЗакрыта");
	Если ГруппаЭлементовОтбора <> Неопределено Тогда
		ГруппаЭлементовОтбора.Использование = ПоказыватьПозицииНаДату;
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.ИзменитьЭлементыОтбора(ОтборДинамическогоСписка,
		"ДатаУтверждения",
		,
		,
		,
		ПоказыватьПозицииНаДату,);
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииЭлементаОтбора(Элемент)
	
	ОбновитьНастройкиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтруктураПредприятияСписок

&НаКлиенте
Процедура Подключаемый_СтруктураПредприятияСписокПриАктивизацииСтроки(Элемент)
	
	Если Не ОтображатьСтруктуруПредприятия Тогда 
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "МестоВСтруктуреПредприятия");
		Возврат;
	КонецЕсли;
	
	ТекущееПодразделение = Элементы.СтруктураПредприятияСписок.ТекущаяСтрока;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "МестоВСтруктуреПредприятия", ТекущееПодразделение, ВидСравненияКомпоновкиДанных.Равно, , Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ОткрытиеФормыЭлементаСправочникаШтатноеРасписание");

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		
		Отказ = Истина;
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Подразделение);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ОткрытиеФормыНовогоЭлементаСправочникаШтатноеРасписание");
	
	Если ФОИспользоватьИсториюИзмененияШтатногоРасписания Тогда
		
		Отказ = Истина;
		
	ИначеЕсли ЗначениеЗаполнено(ДатаПримененияОтбора) Тогда
		
		Отказ = Истина;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ДатаУтверждения", ДатаПримененияОтбора);
		
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			ЗначенияЗаполнения.Вставить("Владелец", ОтборОрганизация);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
			ЗначенияЗаполнения.Вставить("Подразделение", ОтборПодразделение);
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаОбъекта", ПараметрыФормы, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		СписокЗначений = Значение;
	Иначе
		СписокЗначений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Значение);
	КонецЕсли;
	
	Если СписокЗначений.Количество() > 0 Тогда
		
		Если Элементы.Список.МножественныйВыбор Тогда
			
			ОбновитьСписокПодобранных(СписокЗначений);
			Если СписокЗначений.Количество() > 1 Тогда
				Закрыть();
			КонецЕсли; 
			
		Иначе
			
			Если СписокПодобранных.НайтиПоЗначению(СписокЗначений[0]) = Неопределено Тогда
				ОповеститьОВыборе(СписокЗначений[0]);
			Иначе
				Закрыть();
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Истина);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Элементы.Список.СоздатьЭлементыФормыПользовательскихНастроек();
	ПодключитьОбработчикиСобытийЭлементамПолейОтбора();
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект);
	ОбновитьНастройкиФормы();

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ВидИерархия(Команда)
	
	Если Не ВидИерархия Или ОтображатьСтруктуруПредприятия Тогда 
		ВидИерархия = Истина;
		ОтображатьСтруктуруПредприятия = Ложь;
		ОбработатьИзменениеВидаСписка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСписок(Команда)
	
	Если ВидИерархия Или ОтображатьСтруктуруПредприятия Тогда 
		ВидИерархия = Ложь;
		ОтображатьСтруктуруПредприятия = Ложь;
		ОбработатьИзменениеВидаСписка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВидСтруктураПредприятия(Команда)
	
	Если ВидИерархия Или Не ОтображатьСтруктуруПредприятия Тогда 
		ВидИерархия = Ложь;
		ОтображатьСтруктуруПредприятия = Истина;
		ОбработатьИзменениеВидаСписка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокДокументовУтверждениеШтатногоРасписания(Команда)
	
	ОткрытьФорму("Документ.УтверждениеШтатногоРасписания.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокДокументовИзменениеШтатногоРасписания(Команда)
	
	ОткрытьФорму("Документ.ИзменениеШтатногоРасписания.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьТекущееШтатноеРасписание(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	
	ПоследнееПодходящееИзменение = ПоследнийПодходящийДокументИзменения(ОтборОрганизация);
	Если ПоследнееПодходящееИзменение = Неопределено Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			ЗначенияЗаполнения.Вставить("Организация", ОтборОрганизация);
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
	Иначе
		ПараметрыОткрытия.Вставить("Ключ", ПоследнееПодходящееИзменение);
	КонецЕсли;
	
	ОткрытьФорму("Документ.ИзменениеШтатногоРасписания.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументУтвердившийТекущееШтатноеРасписание(Команда)
	
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ДокументУтверждения = ПоследнийДокументУтверждения(ОтборОрганизация).Ссылка;
		Если ЗначениеЗаполнено(ДокументУтверждения) Тогда
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("Ключ", ДокументУтверждения);
			ОткрытьФорму("Документ.УтверждениеШтатногоРасписания.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
		Иначе
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для ""%1"" штатное расписание еще не утверждалось';uk='Для ""%1"" штатний розклад ще не затверджувався'"),
				ОтборОрганизация);
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
	Иначе
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать организацию';uk='Необхідно вибрати організацію'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьНовоеШтатноеРасписание(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	
	ПоследнееНеПроведенноеУтверждение = ПоследнийНеПроведенныйДокументУтверждения(ОтборОрганизация);
	Если ПоследнееНеПроведенноеУтверждение = Неопределено Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
			ЗначенияЗаполнения.Вставить("Организация", ОтборОрганизация);
		КонецЕсли; 
		
		ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
	Иначе
		ПараметрыОткрытия.Вставить("Ключ", ПоследнееНеПроведенноеУтверждение);
	КонецЕсли;
	
	ОткрытьФорму("Документ.УтверждениеШтатногоРасписания.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналДокументовИзменившихШтатноеРасписание(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", ОтборОрганизация);
	
	ПараметрыОткрытия.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму("ЖурналДокументов.ДокументыУправленияШтатнымРасписанием.ФормаСписка", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьПозиции(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() > 0 Тогда
		
		Оповещение = Новый ОписаниеОповещения("УтвердитьПозицииЗавершение", ЭтотОбъект);
		ПоказатьВводДаты(Оповещение, КонецМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()) + 1, НСтр("ru='Утвердить с';uk='Затвердити з'"), ЧастиДаты.Дата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СоздатьУправленческуюПозицию(Команда)
	
	ПараметрыФормы = Новый Структура("УправленческаяПозиция", Истина);
	ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиПриЗакрытииНаСервере(ВидИерархия, СохранитьРежимОтображенияСпискаПриЗакрытии, ОтображатьСтруктуруПредприятия)
	
	Если СохранитьРежимОтображенияСпискаПриЗакрытии Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СписокПозицийШтатногоРасписания", "ВидИерархия", ВидИерархия);
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СписокПозицийШтатногоРасписания", "ОтображатьСтруктуруПредприятия", ОтображатьСтруктуруПредприятия);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоследнийПодходящийДокументИзменения(ОтборОрганизация)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(УтверждениеШтатногоРасписания.МесяцВступленияВСилу) КАК МесяцВступленияВСилу
		|ПОМЕСТИТЬ ВТМаксимальныйПериодУтвержденияШтатногоРасписания
		|ИЗ
		|	Документ.УтверждениеШтатногоРасписания КАК УтверждениеШтатногоРасписания
		|ГДЕ
		|	УтверждениеШтатногоРасписания.Организация = &ОтборОрганизация
		|	И УтверждениеШтатногоРасписания.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ИзменениеШтатногоРасписания.Ссылка
		|ИЗ
		|	Документ.ИзменениеШтатногоРасписания КАК ИзменениеШтатногоРасписания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМаксимальныйПериодУтвержденияШтатногоРасписания КАК ВТМаксимальныйПериодУтвержденияШтатногоРасписания
		|		ПО ИзменениеШтатногоРасписания.ДатаВступленияВСилу > ВТМаксимальныйПериодУтвержденияШтатногоРасписания.МесяцВступленияВСилу
		|ГДЕ
		|	НЕ ИзменениеШтатногоРасписания.ПометкаУдаления
		|	И (НЕ ИзменениеШтатногоРасписания.Проведен
		|			ИЛИ ИзменениеШтатногоРасписания.ДатаВступленияВСилу >= &МесяцВступленияВСилу)
		|	И ИзменениеШтатногоРасписания.Организация = &ОтборОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИзменениеШтатногоРасписания.ДатаВступленияВСилу УБЫВ";
	
	Запрос.УстановитьПараметр("ОтборОрганизация", ОтборОрганизация);
	Запрос.УстановитьПараметр("МесяцВступленияВСилу", НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), 1)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПоследнийНеПроведенныйДокументУтверждения(ОтборОрганизация)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	УтверждениеШтатногоРасписания.Ссылка
		|ИЗ
		|	Документ.УтверждениеШтатногоРасписания КАК УтверждениеШтатногоРасписания
		|ГДЕ
		|	НЕ УтверждениеШтатногоРасписания.ПометкаУдаления
		|	И НЕ УтверждениеШтатногоРасписания.Проведен
		|	И УтверждениеШтатногоРасписания.Организация = &ОтборОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	УтверждениеШтатногоРасписания.МесяцВступленияВСилу УБЫВ";
	
	Запрос.УстановитьПараметр("ОтборОрганизация", ОтборОрганизация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПоследнийДокументУтверждения(ОтборОрганизация)
	
	ПоследнийДокументУтверждения = Новый Структура;
	ПоследнийДокументУтверждения.Вставить("Ссылка", Документы.УтверждениеШтатногоРасписания.ПустаяСсылка());
	ПоследнийДокументУтверждения.Вставить("ДатаУтверждения", '00010101');
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	УтверждениеШтатногоРасписания.Ссылка,
	|	УтверждениеШтатногоРасписания.МесяцВступленияВСилу КАК ДатаУтверждения
	|ИЗ
	|	Документ.УтверждениеШтатногоРасписания КАК УтверждениеШтатногоРасписания
	|ГДЕ
	|	УтверждениеШтатногоРасписания.Проведен
	|	И УтверждениеШтатногоРасписания.Организация = &ОтборОрганизация
	|
	|УПОРЯДОЧИТЬ ПО
	|	УтверждениеШтатногоРасписания.МесяцВступленияВСилу УБЫВ";
	
	Запрос.УстановитьПараметр("ОтборОрганизация", ОтборОрганизация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ПоследнийДокументУтверждения, Выборка);
		
	КонецЕсли; 
	
	Возврат ПоследнийДокументУтверждения;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Форма)
	
	Список = Форма.Список;

	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Утверждена");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "Закрыта");
	
	Если НЕ Форма.ПоказыватьНовыеПозиции Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Утверждена", Истина);
	КонецЕсли;
	
	Если НЕ Форма.ПоказыватьЗакрытыеПозиции Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Закрыта", Ложь);
	КонецЕсли;
	
	#Если Клиент Тогда
		ГосударственнаяСлужбаСуществует = ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба");
	#Иначе
		ГосударственнаяСлужбаСуществует = ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба");
	#КонецЕсли
	
	Если ГосударственнаяСлужбаСуществует Тогда
		#Если Клиент Тогда
			Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ГосударственнаяСлужбаКлиентСервер");
		#Иначе
			Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужбаКлиентСервер");
		#КонецЕсли
		Модуль.УстановитьЭлементыОтбораФормыСпискаСправочникаШтатноеРасписание(Форма, Список);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодключитьОбработчикиСобытийЭлементамПолейОтбора(ГруппаФормы = Неопределено)
	
	Если ГруппаФормы = Неопределено Тогда
		ГруппаФормы = Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки
	КонецЕсли; 
	
	Для каждого ЭлементГруппы Из ГруппаФормы.ПодчиненныеЭлементы Цикл
		
		Если Тип(ЭлементГруппы) = Тип("ГруппаФормы") Тогда
			ПодключитьОбработчикиСобытийЭлементамПолейОтбора(ЭлементГруппы);
		КонецЕсли; 
		
		Если Тип(ЭлементГруппы) = Тип("ПолеФормы") Тогда
			ЭлементГруппы.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииЭлементаОтбора");
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПользовательскиеОтборы(Список)
	
	ПользовательскиеОтборы = Неопределено;
	Для каждого ЭлементПользовательскихНастроек Из Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		
		Если ТипЗнч(ЭлементПользовательскихНастроек) = Тип("ОтборКомпоновкиДанных") Тогда
			ПользовательскиеОтборы = ЭлементПользовательскихНастроек;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;
	
	Если ПользовательскиеОтборы = Неопределено Тогда
		КоллекцияЭлементов = Новый Массив;
	Иначе
		КоллекцияЭлементов = ПользовательскиеОтборы.Элементы;
	КонецЕсли;
	
	Возврат КоллекцияЭлементов;
	
КонецФункции

&НаСервере
Процедура ОбновитьНастройкиФормы()
	
	ОтборПоОрганизации = Неопределено;
	
	УстановленОтборПоОрганизации = Ложь;
	УстановленОтборПоПодразделению = Ложь;
	
	КоллекцияОтборов = Новый Массив;
	КоллекцияОтборов.Добавить(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы);
	КоллекцияОтборов.Добавить(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы);
	КоллекцияОтборов.Добавить(ПользовательскиеОтборы(Список));
	
	Для каждого ЭлементыОтбора Из КоллекцияОтборов Цикл
		
		Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			
			Если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение") Тогда
				УстановленОтборПоПодразделению = ЭлементОтбора.Использование;
			КонецЕсли; 
			
			Если ЭлементОтбора.Использование
				И ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец") Тогда
				
				УстановленОтборПоОрганизации = Истина;
				ОтборПоОрганизации = ЭлементОтбора.ПравоеЗначение;
				
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если УстановленОтборПоПодразделению Тогда
		
		ВидИерархия = Ложь;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ВидСписка",
			"Видимость",
			Ложь);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ВидСписка",
			"Видимость",
			Истина);
		
	КонецЕсли; 
	
	Если УстановленОтборПоОрганизации
		И ОтборОрганизация <> ОтборПоОрганизации Тогда
		
		ОтборОрганизация = ОтборПоОрганизации;
		ОтборОрганизацияПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеЭлементовУправления()
	
	Если НЕ ПолучитьФункциональнуюОпциюФормы("ИспользоватьИсториюИзмененияШтатногоРасписания") Тогда
		Возврат;
	КонецЕсли; 
	
	ЗаголовокКомандыСозданияНовогоШтатногоРасписания =
		НСтр("ru='Утвердить штатное расписание';uk='Затвердити штатний розклад'");
			
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		
		ДоступностьКоманд = Истина;
		
		ДокументУтверждения = ПоследнийДокументУтверждения(ОтборОрганизация);
		
		Если ЗначениеЗаполнено(ДокументУтверждения.Ссылка) Тогда
			
			ВидимостьКомандРаботыСУтвержденнымШтатнымРасписанием = Истина;
			
			ЗаголовокКомандыСозданияНовогоШтатногоРасписания =
				НСтр("ru='Утвердить новое штатное расписание';uk='Затвердити новий штатний розклад'");
				
			Если ЗначениеЗаполнено(ОтборПодразделение)
				И НЕ ПозицииПоПодразделениюУтверждались(ОтборПодразделение) Тогда
					
				ПредупреждениеОНевозможностиСозданияПозицийТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Подразделение ""%1"" еще  не включено в штатное расписание. Откройте документ, утвердивший штатное расписание на %2 года и дозаполните его, или внесите изменение в штатное расписание с текущего месяца.';uk='Підрозділ ""%1"" ще не включено в штатний розклад. Відкрийте документ, яким затверджено штатний розклад на %2 роки і дозаполните його, або внести зміну в штатний розклад з поточного місяця.'"),
					ОтборПодразделение,
					Формат(ДокументУтверждения.ДатаУтверждения, "ДФ='д МММ гггг'"));
				
			Иначе
				
				ПредупреждениеОНевозможностиСозданияПозицийТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Если необходимая позиция штатного расписания еще не утверждена, откройте документ, утвердивший штатное расписание на %1 года и дозаполните его, или внесите изменение в штатное расписание с текущего месяца.';uk='Якщо необхідна позиція штатного розкладу ще не затверджена, відкрийте документ, яким затверджено штатний розклад на %1 року і дозаполните його, або внести зміну в штатний розклад з поточного місяця.'"),
					Формат(ДокументУтверждения.ДатаУтверждения, "ДФ='д МММ гггг'"));
				
			КонецЕсли;
			
		Иначе
			
			ВидимостьКомандРаботыСУтвержденнымШтатнымРасписанием = Ложь;
			
			ПредупреждениеОНевозможностиСозданияПозицийТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В организации ""%1"" штатное расписание еще не утверждено, используйте команду';uk='В організації ""%1"" штатний розклад ще не затверджено, використовуйте команду'") + " ""%2"".",
				ОтборОрганизация,
				ЗаголовокКомандыСозданияНовогоШтатногоРасписания);
			
		КонецЕсли;
		
	Иначе
		
		ПредупреждениеОНевозможностиСозданияПозицийТекст = НСтр("ru='Используется режим ведения истории изменения штатного расписания';uk='Використовується режим ведення історії зміни штатного розкладу'") + "."
			+ НСтр("ru='В этом режиме все изменения оформляются с помощью документов. Выберите организацию';uk='У цьому режимі всі зміни оформляються за допомогою документів. Виберіть організацію'") + ".";
		ДоступностьКоманд = Ложь;
		ВидимостьКомандРаботыСУтвержденнымШтатнымРасписанием = Ложь;;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ОткрытьДокументУтвердившийТекущееШтатноеРасписание",
		"Видимость",
		ВидимостьКомандРаботыСУтвержденнымШтатнымРасписанием);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИзменитьТекущееШтатноеРасписание",
		"Видимость",
		ВидимостьКомандРаботыСУтвержденнымШтатнымРасписанием);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"УтвердитьНовоеШтатноеРасписание",
		"Заголовок",
		ЗаголовокКомандыСозданияНовогоШтатногоРасписания);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПредупреждениеОНевозможностиСозданияПозицийКоманды",
		"Доступность",
		ДоступностьКоманд);
		
КонецПроцедуры

&НаСервере
Процедура ОтборОрганизацияПриИзмененииНаСервере()
	
	УстановитьОтображениеЭлементовУправления();
	УстановитьОтборСписка(ЭтотОбъект);	
		
КонецПроцедуры

&НаСервере
Функция ПозицииПоПодразделениюУтверждались(Подразделение)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ШтатноеРасписание.Ссылка КАК Количество
		|ИЗ
		|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	ШтатноеРасписание.Подразделение = &Подразделение
		|	И НЕ ШтатноеРасписание.ЭтоГруппа";
		
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Процедура ОбработатьИзменениеВидаСписка()
	
	ОбработатьОтображениеРежимаИерархи(ЭтотОбъект);
	
	Если Не ОтображатьСтруктуруПредприятия Тогда 		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "МестоВСтруктуреПредприятия");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаСтруктураПредприятия", "Видимость", ОтображатьСтруктуруПредприятия);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СоздатьУправленческуюПозицию", "Видимость", ОтображатьСтруктуруПредприятия);
	
	УстановитьИспользованиеОтбораПоОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИспользованиеОтбораПоОрганизации()
	
	Если ОтображатьСтруктуруПредприятия И Не Элементы.Список.РежимВыбора Тогда 
		
		КоллекцияОтборов = Новый Массив;
		КоллекцияОтборов.Добавить(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы);
		КоллекцияОтборов.Добавить(Список.КомпоновщикНастроек.Настройки.Отбор.Элементы);
		КоллекцияОтборов.Добавить(ПользовательскиеОтборы(Список));
		
		Для Каждого ЭлементыОтбора Из КоллекцияОтборов Цикл
			
			Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
				
				Если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
					Продолжить;
				КонецЕсли; 
				
				Если ЭлементОтбора.Использование И ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец") Тогда
					
					ЭлементОтбора.Использование = Ложь;
					ОтборОрганизация = Неопределено;
					ОтборОрганизацияПриИзмененииНаСервере();
					
				КонецЕсли; 
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработатьОтображениеРежимаИерархи(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ФормаВидИерархия.Пометка = Форма.ВидИерархия И Не Форма.ОтображатьСтруктуруПредприятия;
	Элементы.ФормаВидСписок.Пометка = Не Форма.ВидИерархия И Не Форма.ОтображатьСтруктуруПредприятия;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"ВидСтруктураПредприятия", "Пометка", Форма.ОтображатьСтруктуруПредприятия);
	
	Если Форма.ВидИерархия Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
	Иначе
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПодобранных(Значение)
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		СписокЗначений = Значение;
	Иначе
		СписокЗначений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Значение);
	КонецЕсли;
	
	Для каждого ВыбранноеЗначение Из СписокЗначений Цикл
		Если СписокПодобранных.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
			СписокПодобранных.Добавить(ВыбранноеЗначение);
			ВыбранныеПозиции.Добавить(ВыбранноеЗначение);
		КонецЕсли; 
	КонецЦикла;
	
	УстановитьСписокПодобранных();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокПодобранных()
	
	ЭлементУсловногоОформления = Неопределено;
	Для каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементОформления.Представление = НСтр("ru='Выделение подобранных';uk='Виділення підібраних'") Тогда
			ЭлементУсловногоОформления = ЭлементОформления;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Если ЭлементУсловногоОформления <> Неопределено Тогда
		ЭлементУсловногоОформления.Отбор.Элементы[0].ПравоеЗначение = СписокПодобранных;
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьПозицииЗавершение(ДатаУтверждения, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДатаУтверждения) Тогда
		
		КоличествоУтвержденныхПозиций = УтвердитьВыделенныеПозиции(ДатаУтверждения);
		Если КоличествоУтвержденныхПозиций = 0 Тогда
			Пояснение = НСтр("ru='Среди выбранных позиций нет подходящих для утверждения';uk='Серед обраних позицій немає підходящих для затвердження'") + ".";
		Иначе
			Пояснение = ЧислоПрописью(КоличествоУтвержденныхПозиций, "L=ru_RU", НСтр("ru='позиция утверждена,позиции утверждены,позиций утверждено,ж';uk='позиція затверджена,позиції затверджені,позицій затверджено,ж'") + ",,,,,0") + " " + НСтр("ru='с';uk='з'") + " " + Формат(ДатаУтверждения, "ДЛФ=DD");
		КонецЕсли; 
		
		ПоказатьОповещениеПользователя(НСтр("ru='Утверждение позиций';uk='Утвердження позицій'") + ":", , Пояснение, БиблиотекаКартинок.Информация32);
	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция УтвердитьВыделенныеПозиции(ДатаУтверждения)
	
	КоличествоУтвержденныхПозиций = 0;
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Элементы.Список.ВыделенныеСтроки, "ЭтоГруппа,Утверждена");
	Для каждого ПозицияСсылка Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = ЗначенияРеквизитов.Получить(ПозицияСсылка);
		Если Не ДанныеСтроки.ЭтоГруппа И Не ДанныеСтроки.Утверждена Тогда
			
			ПозицияОбъект = ПозицияСсылка.ПолучитьОбъект();
			ПозицияОбъект.Утверждена = Истина;
			ПозицияОбъект.ДатаУтверждения = ДатаУтверждения;
			
			УправлениеШтатнымРасписанием.ОтключитьОбновлениеСтруктурыШтатногоРасписания(ПозицияОбъект);
			ПозицияОбъект.Записать();
			
			КоличествоУтвержденныхПозиций = КоличествоУтвержденныхПозиций + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоУтвержденныхПозиций > 0 Тогда
		Справочники.ШтатноеРасписание.ОбновитьСтруктуруШтатногоРасписанияПоПодразделениям();
		Элементы.Список.Обновить();
	КонецЕсли; 
	
	Возврат КоличествоУтвержденныхПозиций;
	
КонецФункции

#КонецОбласти
