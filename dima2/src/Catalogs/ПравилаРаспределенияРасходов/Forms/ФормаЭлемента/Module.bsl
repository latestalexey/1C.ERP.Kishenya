
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	Если Параметры.Свойство("НаДату") Тогда
		НаДату = Параметры.НаДату;
	КонецЕсли;
	
	Если Параметры.Свойство("ПодразделенияДляКоторыхНеВведеноЗначениеПоказателя") Тогда
		СписокПодразделенийДляКоторыхНеВведеноЗначениеПоказателя.ЗагрузитьЗначения(Параметры.ПодразделенияДляКоторыхНеВведеноЗначениеПоказателя);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация")
		И Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства Тогда
		НазначениеПравила = НСтр("ru='Распределение статей расходов по выпускам продукции';uk='Розподіл статей витрат за випусками продукції'");
	Иначе
		НазначениеПравила = СокрЛП(Объект.НазначениеПравила);
	КонецЕсли;
	
	ЗаполнитьСпискиОтбора();
	УстановитьТестНадписиОтбораПоПодразделениям();
	УстановитьБазуРаспределения();
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	УстановитьВидимостьОтбораПоГруппамПродукции();
	// подсистема запрета редактирования ключевых реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьВидимостьНаправленияРаспределения();
	УстановитьТекстИВидимостьОтбораНаправленияРаспределения();
	УстановитьВидимостьПоОтборуПоГруппамПродукции();
	УстановитьТестНадписиОтбораПоГруппамПродукции();
	УстановитьВидимостьСтатьиКалькуляции();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьСпискиОтбора();
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	Оповестить("Запись_ПравилаРаспределенияРасходов");

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	ТекущийОбъект.ОтборПоГруппамПродукции.Очистить();
	Если ИспользоватьОтборПоГруппамПродукции 
		   И ТекущийОбъект.НазначениеПравила <> Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям Тогда
		Для Каждого Элемент Из ОтборПоГруппамПродукции Цикл 
			НоваяСтрока = ТекущийОбъект.ОтборПоГруппамПродукции.Добавить();
			НоваяСтрока.ГруппаПродукции = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;
	ТекущийОбъект.ОтборПоМатериалам.Очистить();
	Если Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов
		ИЛИ Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов
		ИЛИ Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов Тогда
		Для Каждого Элемент Из ОтборПоМатериалам Цикл 
			НоваяСтрока = ТекущийОбъект.ОтборПоМатериалам.Добавить();
			НоваяСтрока.Материал = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;
	ТекущийОбъект.ОтборПоВидамРабот.Очистить();
	Если Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов Тогда
		Для Каждого Элемент Из ОтборПоВидамРабот Цикл 
			НоваяСтрока = ТекущийОбъект.ОтборПоВидамРабот.Добавить();
			НоваяСтрока.ВидРабот = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;
	ТекущийОбъект.ОтборПоПодразделениям.Очистить();
	Если Объект.НаправлениеРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПоказателюНаУказанныеПодразделения
		И Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям Тогда
		Для Каждого Элемент Из ОтборПоПодразделениям Цикл 
			НоваяСтрока = ТекущийОбъект.ОтборПоПодразделениям.Добавить();
			НоваяСтрока.Подразделение = Элемент.Значение;
		КонецЦикла;
	КонецЕсли;

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если (Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям
		И Элементы.ПодразделенияВручную.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено
		И Элементы.ПодразделенияАвтоматически.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено)
		ИЛИ
		(Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства
		И Элементы.ЭтапыМатериальныеЗатраты.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено
		И Элементы.ЭтапыТрудозатраты.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено
		И Элементы.ЭтапыПродукция.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено
		И Элементы.ЭтапыПрочее.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено)
		ИЛИ
		(Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеМатериаловИРабот
		И Элементы.МатериалыИРаботыМатериальныеЗатраты.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено
		И Элементы.МатериалыИРаботыПродукция.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено
		И Элементы.МатериалыИРаботыНормативРасходаДанногоМатериала.СписокВыбора.НайтиПоЗначению(БазаРаспределения) = Неопределено)
		Тогда
		
		ТекстСообщения = НСтр("ru='Не выбрано ни одной базы распределения';uk='Не вибрано жодної бази розподілу'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			, // Ключ данных
			"БазаРаспределения",
			, // Путь к данным
			Отказ);
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьОтборПоГруппамПродукцииНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("МассивГруппПродукции", ОтборПоГруппамПродукции.ВыгрузитьЗначения());
	РезультатОтбора = Неопределено;

	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
			ПараметрыОтбора,
			ЭтаФорма,,,, 
			Новый ОписаниеОповещения("НадписьОтборНажатиеЗавершение", ЭтотОбъект, "ОтборПоГруппамПродукции"), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоГруппамПродукцииПриИзменении(Элемент)
	
	УстановитьВидимостьПоОтборуПоГруппамПродукции();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОтборБазыРаспределенияНажатие()
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура();
	ДопПараметрОтбора = "";
	Если БазаРаспределения = "КоличествоУказанныхМатериалов"
		ИЛИ БазаРаспределения = "ВесУказанныхМатериалов"
		ИЛИ БазаРаспределения = "ОбъемУказанныхМатериалов" Тогда
		ПараметрыОтбора.Вставить("МассивМатериалов", ОтборПоМатериалам.ВыгрузитьЗначения());
		ДопПараметрОтбора = "ОтборПоМатериалам";
	ИначеЕсли БазаРаспределения = "КоличествоРаботУказанныхВидов" Тогда
		ПараметрыОтбора.Вставить("МассивВидовРабот", ОтборПоВидамРабот.ВыгрузитьЗначения());
		ДопПараметрОтбора = "ОтборПоВидамРабот";
	КонецЕсли;
	РезультатОтбора = Неопределено;

	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
			ПараметрыОтбора,
			ЭтаФорма,,,, 
			Новый ОписаниеОповещения("НадписьОтборНажатиеЗавершение", ЭтотОбъект, ДопПараметрОтбора), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
КонецПроцедуры

&НаКлиенте
Процедура НадписьОтборНаправлениеНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("МассивПодразделений", ОтборПоПодразделениям.ВыгрузитьЗначения());
	ДопПараметрОтбора = "ОтборПоПодразделениям";
	РезультатОтбора = Неопределено;

	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
			ПараметрыОтбора,
			ЭтаФорма,,,, 
			Новый ОписаниеОповещения("НадписьОтборНажатиеЗавершение", ЭтотОбъект, ДопПараметрОтбора), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыМатериальныеЗатратыПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыТрудозатратыПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыПродукцияПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияВручнуюПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияАвтоматическиПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыИРаботыМатериальныеЗатратыПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыИРаботыПродукцияПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыИРаботыНормативРасходаДанногоМатериалаПриИзменении(Элемент)
	
	УстановитьТекстИДоступностьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЭтапыУказатьМатериалыНажатие(Элемент)
	
	НадписьОтборБазыРаспределенияНажатие();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьЭтапыУказатьВидыРаботНажатие(Элемент)
	
	НадписьОтборБазыРаспределенияНажатие();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПодразделенияЗначенияНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Показатель", Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоЗначения");
	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаСпискаВручную",
						ПараметрыФормы,
						,,,,,
						РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьМатериалыИРаботыУказатьМатериалыНажатие(Элемент)
	
	НадписьОтборБазыРаспределенияНажатие();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьМатериалыИРаботыУказатьВидыРаботНажатие(Элемент)
	
	НадписьОтборБазыРаспределенияНажатие();
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеРаспределенияПриИзменении(Элемент)
	
	УстановитьТекстИВидимостьОтбораНаправленияРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеРаспределенияОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСпискиОтбора()
	
	ОтборПоГруппамПродукции.ЗагрузитьЗначения(Объект.ОтборПоГруппамПродукции.Выгрузить(, "ГруппаПродукции").ВыгрузитьКолонку("ГруппаПродукции"));
	ИспользоватьОтборПоГруппамПродукции = (ОтборПоГруппамПродукции.Количество() > 0);
	ОтборПоВидамРабот.ЗагрузитьЗначения(Объект.ОтборПоВидамРабот.Выгрузить(, "ВидРабот").ВыгрузитьКолонку("ВидРабот"));
	ОтборПоМатериалам.ЗагрузитьЗначения(Объект.ОтборПоМатериалам.Выгрузить(, "Материал").ВыгрузитьКолонку("Материал"));
	ОтборПоПодразделениям.ЗагрузитьЗначения(Объект.ОтборПоПодразделениям.Выгрузить(, "Подразделение").ВыгрузитьКолонку("Подразделение"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьПоОтборуПоГруппамПродукции()
	
	Элементы.НадписьОтборПоГруппамПродукции.Видимость = ИспользоватьОтборПоГруппамПродукции;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтатьиКалькуляции()
	
	Элементы.СтатьяКалькуляции.Видимость = (Объект.НазначениеПравила = ПредопределенноеЗначение("Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеМатериаловИРабот")
							ИЛИ Объект.НазначениеПравила = ПредопределенноеЗначение("Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТестНадписиОтбораПоГруппамПродукции()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоГруппамПродукции Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru='Указать группы (виды) продукции';uk='Вказати групи (види) продукції'");
	КонецЕсли;
	Элементы.НадписьОтборПоГруппамПродукции.Заголовок = ТекстНадписи;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОтборНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатОтбора = Результат;
	Если ТипЗнч(РезультатОтбора) = Тип("Массив") Тогда
		Если ДополнительныеПараметры = "ОтборПоГруппамПродукции" Тогда
			ОтборПоГруппамПродукции.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТестНадписиОтбораПоГруппамПродукции();
			Модифицированность = Истина;
		ИначеЕсли ДополнительныеПараметры = "ОтборПоМатериалам" Тогда
			ОтборПоМатериалам.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТекстИДоступностьОтбораБазыРаспределения();
			Модифицированность = Истина;
		ИначеЕсли ДополнительныеПараметры = "ОтборПоВидамРабот" Тогда
			ОтборПоВидамРабот.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТекстИДоступностьОтбораБазыРаспределения();
			Модифицированность = Истина;
		ИначеЕсли ДополнительныеПараметры = "ОтборПоПодразделениям" Тогда
			ОтборПоПодразделениям.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТекстИВидимостьОтбораНаправленияРаспределения();
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьТестНадписиОтбораПоМатериалам()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоМатериалам Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru='Указать материалы';uk='Вказати матеріали'");
	КонецЕсли;
	Элементы.НадписьЭтапыУказатьМатериалы.Заголовок = ТекстНадписи;
	Элементы.НадписьМатериалыИРаботыУказатьМатериалы.Заголовок = ТекстНадписи;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТестНадписиОтбораПоВидамРабот()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоВидамРабот Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru='Указать виды работ';uk='Зазначити види робіт'");
	КонецЕсли;
	Элементы.НадписьЭтапыУказатьВидыРабот.Заголовок = ТекстНадписи;
	Элементы.НадписьМатериалыИРаботыУказатьВидыРабот.Заголовок = ТекстНадписи;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстИДоступностьОтбораБазыРаспределения()

	Если БазаРаспределения = "КоличествоУказанныхМатериалов"
		ИЛИ БазаРаспределения = "ВесУказанныхМатериалов"
		ИЛИ БазаРаспределения = "ОбъемУказанныхМатериалов" Тогда
		Элементы.НадписьЭтапыУказатьМатериалы.Доступность = Истина;
		Элементы.НадписьМатериалыИРаботыУказатьМатериалы.Доступность = Истина;
		Элементы.НадписьЭтапыУказатьВидыРабот.Доступность = Ложь;
		Элементы.НадписьМатериалыИРаботыУказатьВидыРабот.Доступность = Ложь;
		Элементы.НадписьПодразделенияЗначения.Доступность = Ложь;
	ИначеЕсли БазаРаспределения = "КоличествоРаботУказанныхВидов" Тогда
		Элементы.НадписьЭтапыУказатьВидыРабот.Доступность = Истина;
		Элементы.НадписьМатериалыИРаботыУказатьВидыРабот.Доступность = Истина;
		Элементы.НадписьЭтапыУказатьМатериалы.Доступность = Ложь;
		Элементы.НадписьМатериалыИРаботыУказатьМатериалы.Доступность = Ложь;
		Элементы.НадписьПодразделенияЗначения.Доступность = Ложь;
	ИначеЕсли БазаРаспределения = "ВводитсяЕжемесячно" ИЛИ БазаРаспределения = "ВводитсяПриИзменении" Тогда
		Элементы.НадписьПодразделенияЗначения.Доступность = Истина;
		Элементы.НадписьЭтапыУказатьВидыРабот.Доступность = Ложь;
		Элементы.НадписьМатериалыИРаботыУказатьВидыРабот.Доступность = Ложь;
		Элементы.НадписьЭтапыУказатьМатериалы.Доступность = Ложь;
		Элементы.НадписьМатериалыИРаботыУказатьМатериалы.Доступность = Ложь;
	Иначе
		Элементы.НадписьЭтапыУказатьВидыРабот.Доступность = Ложь;
		Элементы.НадписьМатериалыИРаботыУказатьВидыРабот.Доступность = Ложь;
		Элементы.НадписьЭтапыУказатьМатериалы.Доступность = Ложь;
		Элементы.НадписьМатериалыИРаботыУказатьМатериалы.Доступность = Ложь;
		Элементы.НадписьПодразделенияЗначения.Доступность = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(БазаРаспределения) Тогда
		Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов[БазаРаспределения];
	КонецЕсли;

	УстановитьТестНадписиОтбораПоМатериалам();
	УстановитьТестНадписиОтбораПоВидамРабот();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОтбораПоГруппамПродукции()
	
	Элементы.ГруппаОтборПоВидамПродукции.Видимость = ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции")
		И Объект.НазначениеПравила <> Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНаправленияРаспределения()
	
	Элементы.НаправлениеРаспределения.Видимость = 
		(Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьБазуРаспределения()
	
	Если Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоПодразделениям Тогда
		Элементы.СтраницыБазаРаспределения.ТекущаяСтраница = Элементы.СтраницаПоПодразделениям;
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.БазаРаспределения) Тогда
			Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат;
		КонецЕсли;
	ИначеЕсли Объект.НазначениеПравила = Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеСтатейРасходовПоЭтапамПроизводства Тогда
		Элементы.СтраницыБазаРаспределения.ТекущаяСтраница = Элементы.СтраницаПоЭтапам;
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.БазаРаспределения) Тогда
			Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции;
		КонецЕсли;
	Иначе
		Элементы.СтраницыБазаРаспределения.ТекущаяСтраница = Элементы.СтраницаМатериаловИРабот;
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Объект.БазаРаспределения) Тогда
			Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции;
		КонецЕсли;
	КонецЕсли;
	
	БазаРаспределения = XMLстрока(Объект.БазаРаспределения);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстИВидимостьОтбораНаправленияРаспределения()

	Элементы.НадписьОтборНаправление.Видимость = 
		(Объект.НаправлениеРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПоказателюНаУказанныеПодразделения);
	УстановитьТестНадписиОтбораПоПодразделениям();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТестНадписиОтбораПоПодразделениям()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоПодразделениям Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru='Указать подразделения';uk='Вказати підрозділи'");
	КонецЕсли;
	Элементы.НадписьОтборНаправление.Заголовок = ТекстНадписи;
	
КонецПроцедуры

#КонецОбласти
