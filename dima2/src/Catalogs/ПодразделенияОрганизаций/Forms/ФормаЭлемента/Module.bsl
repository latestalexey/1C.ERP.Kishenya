
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриСозданииНаСервере(ЭтотОбъект, Объект.Наименование);	
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

	ФОИспользоватьИсториюИзмененияШтатногоРасписания = ПолучитьФункциональнуюОпцию("ИспользоватьИсториюИзмененияШтатногоРасписания");
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		
		БазоваяВерсияКонфигурации = ЗарплатаКадры.ЭтоБазоваяВерсияКонфигурации();
		СписокВыбораБухучетЗарплатыВариантНастройки();
		
		ДоступенПросмотрМестВыплатыЗарплаты = Пользователи.РолиДоступны("ЧтениеВыплаченнойЗарплатыРасширенная,ДобавлениеИзменениеВыплаченнойЗарплатыРасширенная");
		ДоступенПросмотрБухучетЗарплатыПодразделений = Пользователи.РолиДоступны("ЧтениеБухгалтерскогоУчетаЗарплаты,ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты");
		ДоступеноРедактированиеБухучетЗарплатыПодразделений = Пользователи.РолиДоступны("ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты");
			
		Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
			
			ЗначенияДляЗаполнения = Новый Структура;
			ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Владелец");
		
			ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		КонецЕсли; 
		
		ОрганизацияФормы = Объект.Владелец;
		УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", ОрганизацияФормы));
	
		ПриИзмененииОрганизацииНаСервере();
			
		Если Не ФОИспользоватьИсториюИзмененияШтатногоРасписания Тогда
			
			Объект.ДатаСоздания = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("СправочникПодразделенияОрганизаций", "ДатаСоздания");
			
			Если Не ЗначениеЗаполнено(Объект.ДатаСоздания) Тогда
				Объект.ДатаСоздания = ДатаСозданияПоУмолчанию(ТекущаяДатаСеанса());
			КонецЕсли; 
			
		Иначе
			
			Объект.Сформировано = Ложь;
			
		КонецЕсли; 
		
		СсылкаНаОбъект = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Объект.Ссылка).ПолучитьСсылку();
		
		РедактированиеПериодическихСведений.ИнициализироватьЗаписьДляРедактированияВФорме(ЭтаФорма, "БухучетЗарплатыПодразделений", СсылкаНаОбъект);
		БухучетЗарплатыОбновитьТекущуюСтраницу(ЭтаФорма);
		
		УстановитьМестоВыплатыВладельца();
		УстановитьМестоВыплатыПодразделения();

	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Сформировано",
		"ТолькоПросмотр",
		ФОИспользоватьИсториюИзмененияШтатногоРасписания);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаСоздания",
		"ТолькоПросмотр",
		ФОИспользоватьИсториюИзмененияШтатногоРасписания);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Расформировано",
		"ТолькоПросмотр",
		ФОИспользоватьИсториюИзмененияШтатногоРасписания);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаРасформирования",
		"ТолькоПросмотр",
		ФОИспользоватьИсториюИзмененияШтатногоРасписания);
	
	Если ДоступенПросмотрБухучетЗарплатыПодразделений Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"БухучетЗарплатыПодразделенийПериодСтрокой",
			"ТолькоПросмотр",
			Не ДоступеноРедактированиеБухучетЗарплатыПодразделений);
			
	КонецЕсли;
	
	НастроитьПоляМестВыплатыЗарплаты();
	
	СозданиеНового = Параметры.Ключ.Пустая();
	
	
	//ERP начало 00-00052247
	ОтражениеЗарплатыВФинансовомУчетеУП.УстановитьЗаголовокСпособаОтражения(ЭтаФорма, "БухучетЗарплатыПодразделенийРаспределениеСпособОтраженияЗарплатыВБухучете");
	ОтражениеЗарплатыВФинансовомУчетеУП.УстановитьЗаголовокСпособаОтражения(ЭтаФорма, "СпособОтраженияЗарплатыВБухучете");
	//ERP конец
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	БазоваяВерсияКонфигурации = ЗарплатаКадры.ЭтоБазоваяВерсияКонфигурации();
	СписокВыбораБухучетЗарплатыВариантНастройки();
	
	ДоступенПросмотрМестВыплатыЗарплаты = Пользователи.РолиДоступны("ЧтениеВыплаченнойЗарплатыРасширенная,ДобавлениеИзменениеВыплаченнойЗарплатыРасширенная");
	
	СсылкаНаОбъект = Объект.Ссылка;
	
	РодительПриОткрытии = ТекущийОбъект.Родитель;
	
	ДоступенПросмотрБухучетЗарплатыПодразделений = Пользователи.РолиДоступны("ЧтениеБухгалтерскогоУчетаЗарплаты,ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты");
	ДоступеноРедактированиеБухучетЗарплатыПодразделений = Пользователи.РолиДоступны("ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты");
	Если ДоступенПросмотрБухучетЗарплатыПодразделений Тогда
		ПрочитатьДанныеБухучетаДляРедактированияВФорме(ТекущийОбъект);
	КонецЕсли;
	
	УстановитьМестоВыплатыВладельца();
	УстановитьМестоВыплатыПодразделения();
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	УстановитьДоступностьМестВыплатыЗарплаты();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьНаКлиенте", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ПараметрыЗаписи.Свойство("ПроверкаПередЗаписьюВыполнена") Тогда 
		Отказ = Истина;
		ЗаписатьНаКлиенте(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Параметры.Ключ.Пустая() Тогда
		ТекущийОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	
	// Обработчик подсистемы "Свойства".
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты") Тогда
		Если БухучетЗарплатыВариантНастройки = 2 Тогда
			ЗаписатьНаборЗаписейПослеРедактированияВФорме(ТекущийОбъект);
		Иначе	
			РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, "БухучетЗарплатыПодразделений", ТекущийОбъект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеВыплаченнойЗарплатыРасширенная") Тогда
		ВзаиморасчетыССотрудникамиРасширенный.ЗаписатьМестоВыплатыЗарплаты(ДанныеФормыВЗначение(МестоВыплатыЗарплатыПодразделения, Тип("РегистрСведенийМенеджерЗаписи.МестаВыплатыЗарплатыПодразделений")));
	КонецЕсли;
	
	Если СозданиеНового Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если ТекущийОбъект.ДатаСоздания < НачалоМесяца(ТекущаяДатаСеанса()) Тогда
			ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("СправочникПодразделенияОрганизаций", "ДатаСоздания", ТекущийОбъект.ДатаСоздания);
		Иначе
			ОбщегоНазначения.ХранилищеОбщихНастроекУдалить("СправочникПодразделенияОрганизаций", "ДатаСоздания", ИмяПользователя());
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриЗаписиНаСервере(ЭтотОбъект, Объект.Наименование, ТекущийОбъект.Ссылка);	
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Параметры.Ключ.Пустая() Тогда
		ТекущийОбъект.УстановитьСсылкуНового(СсылкаНаОбъект);
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если СозданиеНового И Не Параметры.Ключ.Пустая() Тогда
		Оповестить("СозданоПодразделениеОрганизаций", Объект.Ссылка, ВладелецФормы);
	КонецЕсли;
	
	Если РодительПриОткрытии <> Объект.Родитель Тогда
		Оповестить("ИзмененаСтруктураПредприятия", Объект.Владелец);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ВзаиморасчетыССотрудникамиРасширенный.ПроверитьМестоВыплатыЗарплатыПодразделения(ДанныеФормыВЗначение(МестоВыплатыЗарплатыПодразделения, Тип("РегистрСведенийМенеджерЗаписи.МестаВыплатыЗарплатыПодразделений")), Отказ);
	
	
	ПроверитьНаборЗаписейБухучетЗарплаты(Отказ);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
	Если ИмяСобытия = "ОтредактированаИстория" И СсылкаНаОбъект = Источник Тогда
		Если ЭтаФорма[Параметр.ИмяРегистра + "НаборЗаписейПрочитан"] Тогда
			
			Если Параметр.ИмяРегистра = "БухучетЗарплатыПодразделений" Тогда
				ВедущийОбъект = СсылкаНаОбъект;
			КонецЕсли;
			РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтаФорма, ВедущийОбъект, ИмяСобытия, Параметр, Источник);
			Если Параметр.ИмяРегистра = "БухучетЗарплатыПодразделений" Тогда
				ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, Объект, ЭтаФорма.Элементы, БухучетЗарплатыПодразделений, БухучетЗарплатыПодразделенийПрежняя, ОбщегоНазначенияКлиент.ДатаСеанса());
				ОбработатьОповещениеБухучетЗарплатыПодразделений();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РасформированоПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если Не Объект.Расформировано Тогда
		Объект.ДатаРасформирования = '00010101';
	ИначеЕсли Объект.ДатаРасформирования = '00010101' Тогда
		Объект.ДатаРасформирования = КонецМесяца(ТекущаяДата()) + 1;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СформированоПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	
	Если Не Объект.Сформировано Тогда
		Объект.ДатаСоздания = '00010101';
	ИначеЕсли Объект.ДатаСоздания = '00010101' Тогда
		Объект.ДатаСоздания = ДатаСозданияПоУмолчанию(ОбщегоНазначенияКлиент.ДатаСеанса());
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыИстория(Команда)
	
	ОткрытьФормуРедактированияИсторииБухучетЗарплаты();	
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыПодразделенийПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "БухучетЗарплатыПодразделений.Период", "БухучетЗарплатыПодразделенийПериодСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыПодразделенийПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтаФорма,
		ЭтаФорма,
		"БухучетЗарплатыПодразделений.Период",
		"БухучетЗарплатыПодразделенийПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыПодразделенийПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "БухучетЗарплатыПодразделений.Период", "БухучетЗарплатыПодразделенийПериодСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыПодразделенийПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыПодразделенийПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяФинансированияПриИзменении(Элемент)
	
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, Объект, ЭтаФорма.Элементы, БухучетЗарплатыПодразделений, БухучетЗарплатыПодразделенийПрежняя, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура СпособОтраженияЗарплатыВБухучетеПриИзменении(Элемент)
	
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, Объект, ЭтаФорма.Элементы, БухучетЗарплатыПодразделений, БухучетЗарплатыПодразделенийПрежняя, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектовКлиент.ПриИзмененииПредставления(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Места выплаты зарплаты

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыКакВсемПриИзменении(Элемент)
	УстановитьДоступностьМестВыплатыЗарплаты();
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыКассаПриИзменении(Элемент)
	УстановитьДоступностьМестВыплатыЗарплаты();
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыЗарплатыЗарплатныйПроектПриИзменении(Элемент)
	УстановитьДоступностьМестВыплатыЗарплаты();
КонецПроцедуры

&НаКлиенте
Процедура ВидМестаВыплатыРаздатчикПриИзменении(Элемент)
	УстановитьДоступностьМестВыплатыЗарплаты();
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыКассаДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	ВзаиморасчетыССотрудникамиКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыКассаНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	ВзаиморасчетыССотрудникамиКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЗарплатныйПроектДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	ВзаиморасчетыССотрудникамиКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыЗарплатныйПроектНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	ВзаиморасчетыССотрудникамиКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыРаздатчикДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	ВзаиморасчетыССотрудникамиКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МестоВыплатыРаздатчикНеДоступноПолеОткрытие(Элемент, СтандартнаяОбработка)
	ВзаиморасчетыССотрудникамиКлиентРасширенный.МестоВыплатыОткрытие(Элемент, СтандартнаяОбработка);
КонецПроцедуры

///////////////////////////////////////////////////////////////////// 
//ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВ"

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));

КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
	
	ОрганизацияФормы = Объект.Владелец;

	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", ТекущийОбъект.Владелец));
	
	УстановитьВидПоляОрганизация();
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	Объект.Владелец = ОрганизацияФормы;
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Владелец));
	ПриИзмененииОрганизацииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	ЗаполнитьНастройкиПоВышестоящемуОбъекту();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияБухгалтерскогоУчета(Отказ, ДополнительныеПараметры) Экспорт 
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если ДоступеноРедактированиеБухучетЗарплатыПодразделений Тогда
		
		Если БухучетЗарплатыВариантНастройки = 2 Тогда
			ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры);	
		Иначе
			
			ДатаИзменения = БухучетЗарплатыПодразделений.Период;
			Если БухучетЗарплатыВариантНастройки = 0 И (ЗначениеЗаполнено(БухучетЗарплатыПодразделений.СтатьяФинансирования)
				Или ЗначениеЗаполнено(БухучетЗарплатыПодразделений.СпособОтраженияЗарплатыВБухучете)) Тогда
				БухучетЗарплатыПодразделений.СтатьяФинансирования = "";
				БухучетЗарплатыПодразделений.СпособОтраженияЗарплатыВБухучете = "";
			КонецЕсли;
			Если БухучетЗарплатыВариантНастройкиПрежняя = 2 Тогда
				// изменился вариант настройки бухучета, записываем данные без проверки
				ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры);
			Иначе
				
				ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru =  'При редактировании Вы изменили бухгалтерский учет для подразделения. 
					|Если Вы просто исправили прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
					|Если бухучет подразделения изменился с %1, нажмите ""Изменился бухучет""'"), 
				Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"));
				ТекстКнопкиДа = НСтр("ru='Изменился бухучет';uk='Змінився бухоблік'");
				
				Оповещение = Новый ОписаниеОповещения("ЗаписатьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
				РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "БухучетЗарплатыПодразделений", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе 
		ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСведенияОБухучетеПериод(Форма, Объект, Элементы, БухучетЗарплатыПодразделений, БухучетЗарплатыПодразделенийПрежняя, ДатаСеанса)

	Если Элементы.Найти("БухучетЗарплатыПодразделенийПериодСтрокой") = НеОпределено Тогда
		Возврат;
	КонецЕсли;
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "БухучетЗарплатыПодразделений", Форма.СсылкаНаОбъект);
	// Не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о бухучете еще нет.
	Если ЗарплатаКадрыКлиентСервер.СведенияОБухучетеСотрудникаПоУмолчанию(БухучетЗарплатыПодразделений) И 
		Не ЗначениеЗаполнено(БухучетЗарплатыПодразделенийПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(БухучетЗарплатыПодразделений.Период) Тогда
			БухучетЗарплатыПодразделений.Период = '00010101';
		КонецЕсли; 
	Иначе
		Если Не ЗначениеЗаполнено(БухучетЗарплатыПодразделений.Период) Тогда
			Если ЗначениеЗаполнено(Объект.ДатаСоздания) Тогда
				БухучетЗарплатыПодразделений.Период = НачалоМесяца(Объект.ДатаСоздания);
			Иначе
				БухучетЗарплатыПодразделений.Период = НачалоМесяца(ДатаСеанса);
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "БухучетЗарплатыПодразделений.Период", "БухучетЗарплатыПодразделенийПериодСтрокой");

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если Не ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать


&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	ЗаписатьНаКлиенте(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Склонения(Команда)
	
	СклонениеПредставленийОбъектовКлиент.ОбработатьКомандуСклонения(ЭтотОбъект, Объект.Наименование);
			
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ДатаСоздания",
		"Доступность",
		Форма.Объект.Сформировано);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Расформировано",
		"Доступность",
		Форма.Объект.Сформировано);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ДатаРасформирования",
		"Доступность",
		Форма.Объект.Расформировано);
		
		
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОрганизацииНаСервере()
	
	ЗаполнитьНастройкиПоВышестоящемуОбъекту();
	УстановитьМестоВыплатыВладельца();
	ЗаполнитьГрафикРаботы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМестоВыплатыВладельца()
	Если ДоступенПросмотрМестВыплатыЗарплаты Тогда
		ЗначениеВДанныеФормы(ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыОрганизации(Объект.Владелец), МестоВыплатыЗарплатыВладельца);
	КонецЕсли; 
КонецПроцедуры	

&НаСервере
Процедура УстановитьМестоВыплатыПодразделения()
	Если ДоступенПросмотрМестВыплатыЗарплаты Тогда
		ЗначениеВДанныеФормы(ВзаиморасчетыССотрудникамиРасширенный.МестоВыплатыЗарплатыПодразделения(СсылкаНаОбъект), МестоВыплатыЗарплатыПодразделения);
	КонецЕсли; 
КонецПроцедуры	

&НаСервере
Процедура НастроитьПоляМестВыплатыЗарплаты()
	
	Если ДоступенПросмотрМестВыплатыЗарплаты Тогда
		
		ОписателиПолейМестВыплаты = Новый Соответствие;
		ОписателиПолейМестВыплаты.Вставить(Элементы.МестоВыплатыКассаДоступноПоле,				Перечисления.ВидыМестВыплатыЗарплаты.Касса);
		ОписателиПолейМестВыплаты.Вставить(Элементы.МестоВыплатыКассаНеДоступноПоле,			Перечисления.ВидыМестВыплатыЗарплаты.Касса);
		
		ОписателиПолейМестВыплаты.Вставить(Элементы.МестоВыплатыЗарплатныйПроектДоступноПоле,	Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект);
		ОписателиПолейМестВыплаты.Вставить(Элементы.МестоВыплатыЗарплатныйПроектНеДоступноПоле,	Перечисления.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект);
		
		ОписателиПолейМестВыплаты.Вставить(Элементы.МестоВыплатыРаздатчикДоступноПоле,			Перечисления.ВидыМестВыплатыЗарплаты.Раздатчик);
		ОписателиПолейМестВыплаты.Вставить(Элементы.МестоВыплатыРаздатчикНеДоступноПоле,		Перечисления.ВидыМестВыплатыЗарплаты.Раздатчик);
		
		ВзаиморасчетыССотрудникамиФормыРасширенный.НастроитьПоляМестВыплатыЗарплаты(ОписателиПолейМестВыплаты);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьМестВыплатыЗарплаты()

	Если ДоступенПросмотрМестВыплатыЗарплаты Тогда
		
		СтруктураГруппы = "Группа, СтраницаДоступно, СтраницаНеДоступно";
		
		ГруппыМестВыплаты = Новый Соответствие;
		
		ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ПустаяСсылка"),
			Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыКакВсем, Элементы.МестоВыплатыКакВсемДоступно, Элементы.МестоВыплатыКакВсемНеДоступно));
		ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.Касса"),
			Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыКасса, Элементы.МестоВыплатыКассаДоступно, Элементы.МестоВыплатыКассаНеДоступно));
		ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.ЗарплатныйПроект"),
			Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыЗарплатныйПроект, Элементы.МестоВыплатыЗарплатныйПроектДоступно, Элементы.МестоВыплатыЗарплатныйПроектНеДоступно));
		ГруппыМестВыплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВидыМестВыплатыЗарплаты.Раздатчик"),
			Новый Структура(СтруктураГруппы, Элементы.МестоВыплатыРаздатчик, Элементы.МестоВыплатыРаздатчикДоступно, Элементы.МестоВыплатыРаздатчикНеДоступно));
			
		ГруппаМестВыплаты = ГруппыМестВыплаты[МестоВыплатыЗарплатыПодразделения.Вид];
		Для Каждого ГруппаМестВыплаты Из ГруппыМестВыплаты Цикл
			Если ГруппаМестВыплаты.Ключ = МестоВыплатыЗарплатыПодразделения.Вид Тогда
				ГруппаМестВыплаты.Значение.Группа.ТекущаяСтраница = ГруппаМестВыплаты.Значение.СтраницаДоступно
			Иначе	
				ГруппаМестВыплаты.Значение.Группа.ТекущаяСтраница = ГруппаМестВыплаты.Значение.СтраницаНеДоступно
			КонецЕсли	
		КонецЦикла
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикРаботы()
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		
		ЗначенияДляЗаполнения = Новый Структура;
		ЗначенияДляЗаполнения.Вставить("Организация",	"Объект.Владелец");
		ЗначенияДляЗаполнения.Вставить("ГрафикРаботы",	"Объект.ГрафикРаботыСотрудников");
		
		ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидПоляОрганизация()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Владелец",
		"ТолькоПросмотр",
		Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"Владелец",
		"Шрифт",
		Новый Шрифт( , ,Истина));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДатаСозданияПоУмолчанию(ДатаСеанса)
	
	Возврат НачалоГода(ДатаСеанса);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНастройкиПоВышестоящемуОбъекту()
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		СтруктурнаяЕдиница = Объект.Родитель;
	Иначе
		СтруктурнаяЕдиница = Объект.Владелец;
	КонецЕсли;
	
	
КонецПроцедуры

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте 
Процедура Подключаемый_ПросклонятьПредставлениеПоВсемПадежам() 
	
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставлениеПоВсемПадежам(ЭтотОбъект, Объект.Наименование);
		
КонецПроцедуры

// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

#Область ЗаписьЭлемента

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаписатьНаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиенте(ЗакрытьПослеЗаписи, ОповещениеЗавершения = Неопределено) Экспорт 

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЗакрытьПослеЗаписи", ЗакрытьПослеЗаписи);
	ДополнительныеПараметры.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
	
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияБухгалтерскогоУчета", ЭтотОбъект, ДополнительныеПараметры);
	ВыполнитьОбработкуОповещения(Оповещение, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура("ПроверкаПередЗаписьюВыполнена", Истина);
	
	Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения, ПараметрыЗаписи);
	ИначеЕсли Записать(ПараметрыЗаписи) И ДополнительныеПараметры.ЗакрытьПослеЗаписи Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область РедактированиеПериодическихСведенийБухучетЗарплаты

&НаКлиенте
Процедура БухучетЗарплатыВариантПриИзменении(Элемент)
	
	БухучетЗарплатыОбновитьТекущуюСтраницу(ЭтаФорма);
	БухучетЗарплатыПодразделенийНаборЗаписейПрочитан = Ложь;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура БухучетЗарплатыОбновитьТекущуюСтраницу(Форма)

	Если Форма.БухучетЗарплатыВариантНастройки = 0 Тогда
		Форма.Элементы.БухучетСтраницы.ТекущаяСтраница = Форма.Элементы.БухучетПустаяСтраница;
	ИначеЕсли Форма.БухучетЗарплатыВариантНастройки = 1 Тогда
		Форма.Элементы.БухучетСтраницы.ТекущаяСтраница = Форма.Элементы.БухучетОдноЗначение;
	Иначе
		Форма.Элементы.БухучетСтраницы.ТекущаяСтраница = Форма.Элементы.БухучетРаспределение;
 	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеБухучетаДляРедактированияВФорме(ТекущийОбъект)

	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "БухучетЗарплатыПодразделений", СсылкаНаОбъект);
	ОбновитьПолеСведенияОБухучетеПериод(ЭтаФорма, ТекущийОбъект, ЭтаФорма.Элементы, БухучетЗарплатыПодразделений, БухучетЗарплатыПодразделенийПрежняя, ТекущаяДатаСеанса());
	
	БухучетЗарплатыПодразделенийРаспределение.Очистить();
	
	Период = БухучетЗарплатыПодразделений.Период;
	Если Не БазоваяВерсияКонфигурации И ЗначениеЗаполнено(Период) Тогда
		НаборЗаписей = РегистрыСведений.БухучетЗарплатыПодразделений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Подразделение.Установить(Объект.Ссылка);
		НаборЗаписей.Отбор.Период.Установить(Период);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 1 Тогда
			БухучетЗарплатыПодразделенийРаспределение.Загрузить(НаборЗаписей.Выгрузить());
		КонецЕсли;
	КонецЕсли;
	
	УстановитьБухучетЗарплатыВариантНастройки(ЭтаФорма);
	БухучетЗарплатыОбновитьТекущуюСтраницу(ЭтаФорма);	

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьБухучетЗарплатыВариантНастройки(Форма)

	Если Форма.БухучетЗарплатыПодразделенийРаспределение.Количество() > 1 Тогда
		// в настройках указано распределение
		Форма.БухучетЗарплатыВариантНастройки = 2;
	ИначеЕсли ЗарплатаКадрыКлиентСервер.СведенияОБухучетеСотрудникаПоУмолчанию(Форма.БухучетЗарплатыПодразделений) Тогда
		// бухучет еще не задан
		Форма.БухучетЗарплатыВариантНастройки = 0;
	Иначе
		// задан бухучет на конкретную статью и счет
		Форма.БухучетЗарплатыВариантНастройки = 1;
	КонецЕсли;
	// запоминаем вариант настройки при открытии формы
	Форма.БухучетЗарплатыВариантНастройкиПрежняя = Форма.БухучетЗарплатыВариантНастройки;	

КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаборЗаписейПослеРедактированияВФорме(ТекущийОбъект)
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыПодразделений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Подразделение.Установить(ТекущийОбъект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если Не БухучетЗарплатыПодразделенийНаборЗаписейПрочитан Тогда
		СтруктураВедущихОбъектов = Новый Структура();
		СтруктураВедущихОбъектов.Вставить("Подразделение", ТекущийОбъект.Ссылка);
		РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтаФорма, "БухучетЗарплатыПодразделений", СтруктураВедущихОбъектов);
	КонецЕсли;
	
	Период = БухучетЗарплатыПодразделений.Период;
	ИдентификаторСтрокиЗаписи = 0;
	Для каждого Запись Из БухучетЗарплатыПодразделенийРаспределение Цикл
		Запись.Период = Период;
		Запись.Подразделение = ТекущийОбъект.Ссылка;
		Запись.ИдентификаторСтроки = ИдентификаторСтрокиЗаписи;
		ИдентификаторСтрокиЗаписи = ИдентификаторСтрокиЗаписи + 1;
	КонецЦикла;
	
	Отбор = Новый Структура("Период", Период);
	НайденныеСтроки = БухучетЗарплатыПодразделенийНаборЗаписей.НайтиСтроки(отбор);
	Для каждого СтрокаЗаписи Из НайденныеСтроки Цикл
		БухучетЗарплатыПодразделенийНаборЗаписей.Удалить(СтрокаЗаписи);
	КонецЦикла;
	
	Для каждого СтрокаЗаписи Из БухучетЗарплатыПодразделенийРаспределение Цикл
		ЗаполнитьЗначенияСвойств(БухучетЗарплатыПодразделенийНаборЗаписей.Добавить(),СтрокаЗаписи);
	КонецЦикла;
	
	НаборЗаписейНовый = РеквизитФормыВЗначение("БухучетЗарплатыПодразделенийНаборЗаписей");
	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(НаборЗаписей.Выгрузить(), НаборЗаписейНовый.Выгрузить()) Тогда
		НаборЗаписейНовый.Отбор.Подразделение.Установить(ТекущийОбъект.Ссылка);
		НаборЗаписейНовый.Записать();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаборЗаписейБухучетЗарплаты(Отказ)
	
	Если БухучетЗарплатыВариантНастройки <> 2 Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.БухучетЗарплатыПодразделений;
	Синоним = МетаданныеРегистра.Синоним;
	Если ЗначениеЗаполнено(МетаданныеРегистра.ПредставлениеЗаписи) Тогда
		Синоним = МетаданныеРегистра.ПредставлениеЗаписи;
	КонецЕсли;
	
	Если БухучетЗарплатыПодразделенийРаспределение.Количество() = 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1: не указано распределение по счетам, субконто.';uk='%1: не вказано розподіл по рахунках, субконто.'"), Синоним);
		ПутьКРеквизитуФормы = "БухучетЗарплатыПодразделенийРаспределение";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,	ПутьКРеквизитуФормы, , Отказ);
		
	Иначе
		
		ПроверяемыеПоля = Новый Массив;
		ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.СпособОтраженияЗарплатыВБухучете);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
			ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.СтатьяФинансирования);
		КонецЕсли;
		ПроверяемыеПоля.Добавить(МетаданныеРегистра.Ресурсы.ДоляРаспределения);
		
		Для каждого Запись Из БухучетЗарплатыПодразделенийРаспределение Цикл
			
			Для каждого ОписаниеПоля Из ПроверяемыеПоля Цикл
				
				Если Не ЗначениеЗаполнено(Запись[ОписаниеПоля.Имя]) Тогда   
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1: не заполнено поле ""%2"".';uk='%1: не заповнено поле ""%2"".'"), Синоним, ?(ЗначениеЗаполнено(ОписаниеПоля.Синоним), ОписаниеПоля.Синоним, ОписаниеПоля.Имя));
					ПутьКРеквизитуФормы = "БухучетЗарплатыПодразделенийРаспределение";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,	ПутьКРеквизитуФормы, , Отказ);
				КонецЕсли;	
				
			КонецЦикла;	
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияИсторииБухучетЗарплаты()

	Если БазоваяВерсияКонфигурации Тогда
		СотрудникиКлиент.ОткрытьФормуРедактированияИстории("БухучетЗарплатыПодразделений", СсылкаНаОбъект, ЭтаФорма);
	Иначе
		
		ТолькоПросмотрИстории = ТолькоПросмотр;
		Если Не ТолькоПросмотрИстории Тогда
			Попытка
				ЗаблокироватьДанныеФормыДляРедактирования();
				ТолькоПросмотрИстории = Ложь;
			Исключение
				ТолькоПросмотрИстории = Истина;
			КонецПопытки
		КонецЕсли;
		
		Если БухучетЗарплатыВариантНастройки = 2 Тогда
			
			Если Не БухучетЗарплатыПодразделенийНаборЗаписейПрочитан Тогда
				ПрочитатьНаборЗаписейПериодическихСведений("БухучетЗарплатыПодразделений", Объект.Ссылка);
			КонецЕсли;
			
			Если БухучетЗарплатыПодразделений.Период <> БухучетЗарплатыПодразделенийПрежняя.Период Тогда
				Отбор = Новый Структура("Период",БухучетЗарплатыПодразделенийПрежняя.Период);
				НайденныеСтроки = БухучетЗарплатыПодразделенийНаборЗаписей.НайтиСтроки(Отбор);
			Иначе
				Отбор = Новый Структура("Период",БухучетЗарплатыПодразделений.Период);
				НайденныеСтроки = БухучетЗарплатыПодразделенийНаборЗаписей.НайтиСтроки(Отбор);
			КонецЕсли;
			Для каждого СтрокаНабора Из НайденныеСтроки Цикл
				БухучетЗарплатыПодразделенийНаборЗаписей.Удалить(СтрокаНабора);
			КонецЦикла;
			
			Для каждого СтрокаНабор Из БухучетЗарплатыПодразделенийРаспределение Цикл
				НоваяСтрока = БухучетЗарплатыПодразделенийНаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНабор);
				НоваяСтрока.Период = БухучетЗарплатыПодразделений.Период;
				НоваяСтрока.Подразделение = Объект.Ссылка;
			КонецЦикла;
			
			СтруктураЗаписиСтрокой = "";
			НужнаЗапятая = Ложь;
			Для Каждого КлючЗначение Из БухучетЗарплатыПодразделенийПрежняя Цикл
				Если НужнаЗапятая Тогда
					СтруктураЗаписиСтрокой = СтруктураЗаписиСтрокой + ",";
				КонецЕсли;
				СтруктураЗаписиСтрокой = СтруктураЗаписиСтрокой + КлючЗначение.Ключ;
				НужнаЗапятая = Истина;
			КонецЦикла;
			
			МассивЗаписей = Новый Массив();
			Для Каждого Строка Из БухучетЗарплатыПодразделенийНаборЗаписей Цикл
				НоваяСтрока = Новый Структура(СтруктураЗаписиСтрокой);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				МассивЗаписей.Добавить(НоваяСтрока);
			КонецЦикла;
			
		Иначе
			МассивЗаписей = РедактированиеПериодическихСведенийКлиентСервер.МассивЗаписейИстории(ЭтаФорма, "БухучетЗарплатыПодразделений", Объект.Ссылка);
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("МассивЗаписей,ВедущийОбъект,ТолькоПросмотр", МассивЗаписей, Объект.Ссылка, ТолькоПросмотр);
		ОткрытьФорму("РегистрСведений.БухучетЗарплатыПодразделений.Форма.РедактированиеИсторииСРаспределением" , ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СписокВыбораБухучетЗарплатыВариантНастройки()

	Если ДоступенПросмотрБухучетЗарплатыПодразделений Тогда
		
		СписокВыбора = Элементы.БухучетЗарплатыВариантНастройки.СписокВыбора;
		СписокВыбора.Очистить();
		СписокВыбора.Добавить(0,"Как указано для организации");
		СписокВыбора.Добавить(1,"Отражается на указанном счете, субконто");
		Если Не БазоваяВерсияКонфигурации Тогда
			СписокВыбора.Добавить(2,"Распределяется по счетам, субконто");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыПодразделенийРаспределениеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если БухучетЗарплатыПодразделенийРаспределение.Количество() > 0 И Не ЗначениеЗаполнено(БухучетЗарплатыПодразделений.Период) Тогда
		Если ЗначениеЗаполнено(Объект.ДатаСоздания) Тогда
			БухучетЗарплатыПодразделений.Период = НачалоМесяца(Объект.ДатаСоздания);
		Иначе
			БухучетЗарплатыПодразделений.Период = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
		КонецЕсли;
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "БухучетЗарплатыПодразделений.Период", "БухучетЗарплатыПодразделенийПериодСтрокой");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОповещениеБухучетЗарплатыПодразделений()

	БухучетЗарплатыПодразделенийРаспределение.Очистить();
	Если БухучетЗарплатыПодразделенийНаборЗаписей.Количество() > 0 Тогда
		ПоследняяЗапись = БухучетЗарплатыПодразделенийНаборЗаписей[БухучетЗарплатыПодразделенийНаборЗаписей.Количество()-1];
		Отбор = Новый Структура("Период", ПоследняяЗапись.Период);
		ПоследниеЗаписи = БухучетЗарплатыПодразделенийНаборЗаписей.НайтиСтроки(Отбор);
		Если ПоследниеЗаписи.Количество() > 1 Тогда
			Для каждого ЗаписьНабора Из ПоследниеЗаписи Цикл
				ЗаполнитьЗначенияСвойств(БухучетЗарплатыПодразделенийРаспределение.Добавить(),ЗаписьНабора);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьБухучетЗарплатыВариантНастройки(ЭтаФорма);
	БухучетЗарплатыОбновитьТекущуюСтраницу(ЭтаФорма);

КонецПроцедуры


#КонецОбласти

#КонецОбласти
