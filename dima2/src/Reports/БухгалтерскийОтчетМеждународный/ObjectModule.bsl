#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВалютаМУ = МеждународнаяОтчетностьВызовСервера.УчетнаяВалюта();
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВалютаФункциональная", ВалютаМУ.Функциональная);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВалютаПредставления", ВалютаМУ.Представления);
	
	ДокументРезультат.Очистить();
	
	// Сформируем заголовки ресурсов
	СФормироватьЗаголовкиПолей();
	
	// Настроим поля выбора
	ПоказателиОтчета = Новый Структура;
	ПоказателиОтчета.Вставить("ВалютнаяСумма", БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПоказательВалютнаяСумма"));
	ПоказателиОтчета.Вставить("СуммаПредставления", БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПоказательСуммаПредставления"));
	ПоказателиОтчета.Вставить("Сумма", БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПоказательСумма"));
	
	МеждународнаяОтчетностьСервер.УстановитьГруппировкуВалюты(КомпоновщикНастроек, ПоказателиОтчета.ВалютнаяСумма.Значение);
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	МеждународнаяОтчетностьСервер.НастроитьПоляВыбора(ПоказателиОтчета,НастройкиКомпоновкиДанных.Выбор.Элементы);
	
	// Выведем отчет
	Попытка
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(
			СхемаКомпоновкиДанных,
			НастройкиКомпоновкиДанных,
			ДанныеРасшифровки);
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Если СтрНайти(ОписаниеОшибки, НСтр("ru='Поле не найдено (Субконто';uk='Поле не знайдено (Субконто'")) Тогда
			ОписаниеПолей = "";
			РазобратьПоляГруппировок(НастройкиКомпоновкиДанных.Структура, ОписаниеОшибки, ОписаниеПолей);
			СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ОписаниеПолей,2);
			Шаблон = НСтр("ru='При заданных видах субконто формирование отчета с текущими группировками невозможно.';uk='При заданих видах субконто формування звіту з поточними групуваннями неможливо.'");
			Если НЕ ПустаяСтрока(ОписаниеПолей) Тогда
				Шаблон = Шаблон + Символы.ПС + НСтр("ru='По причине: Недоступны для вывода поля группировки %1';uk='Через: Недоступні для виведення поля групування %1'");
			КонецЕсли;
			ОписаниеОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, ОписаниеПолей);
		КонецЕсли;
		ВызватьИсключение ОписаниеОшибки;
	КонецПопытки;
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.НайтиПараметр(ПоказателиОтчета.Сумма.Параметр);
	МеждународнаяОтчетностьСервер.УстановитьВалюту(ДокументРезультат, ВалютаМУ.Функциональная, Параметр.Заголовок);
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.НайтиПараметр(ПоказателиОтчета.СуммаПредставления.Параметр);
	МеждународнаяОтчетностьСервер.УстановитьВалюту(ДокументРезультат, ВалютаМУ.Представления, Параметр.Заголовок);
	
	УдалитьЗаголовкиПолей(ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиГруппировку(СтруктураКД, ИмяЭлемента)
	
	Результат = Неопределено;
	Для Каждого Элемент Из СтруктураКД Цикл
		Если Элемент.Имя = ИмяЭлемента Тогда
			Результат = Элемент;
			Прервать;
		Иначе
			Результат = НайтиГруппировку(Элемент.Структура, ИмяЭлемента);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Процедура СФормироватьЗаголовкиПолей()

	ФункциональнаяВалюта = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ВалютаФункциональная");
	ВалютаПредставления = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ВалютаПредставления");
	
	ФункциональнаяВалюта = Новый Структура("Значение","Удалить");
	ВалютаПредставления = Новый Структура("Значение","Удалить");
	
	МеждународнаяОтчетностьСервер.УстановитьЗаголовкиПолей(СхемаКомпоновкиДанных.НаборыДанных.ОстаткиИОбороты, ВалютаПредставления, ФункциональнаяВалюта);

КонецПроцедуры

Процедура РазобратьПоляГруппировок(СтруктураКД, ОписаниеОшибки, ОписаниеПолей)
	
	Для Каждого ЭлементСтруктуры Из СтруктураКД Цикл
		Если ЭлементСтруктуры.Использование Тогда
			Для Каждого Поле Из ЭлементСтруктуры.ПоляГруппировки.Элементы Цикл
				Если Поле.Использование И 
					Найти(ОписаниеОшибки, Строка(Поле.Поле)) И  СтрНайти(ОписаниеОшибки, НСтр("ru='Поле не найдено';uk='Поле не знайдене'")) Тогда
					ОписаниеПолей = ОписаниеПолей + Строка(Поле.Поле) + ", ";
				КонецЕсли;
			КонецЦикла;
			РазобратьПоляГруппировок(ЭлементСтруктуры.Структура, ОписаниеОшибки, ОписаниеПолей);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьЗаголовкиПолей(Документ)
	
	Область = Документ.НайтиТекст("Функц.");
	Если Область <> Неопределено Тогда
		Область.Текст = "";
	КонецЕсли;
	Область = Документ.НайтиТекст("Удалить");
	Пока Область <> Неопределено Цикл
		
		УдаляемаяСтрока = Лев(Область.Имя,Найти(Область.Имя,"C")-1);
		УдаляемаяОбласть = Документ.Область(УдаляемаяСтрока);
		Документ.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		Документ.ФиксацияСверху = Документ.ФиксацияСверху - 1;
		
		Область = Документ.НайтиТекст("Удалить");
	КонецЦикла;
	
	Область = Документ.НайтиТекст(НСтр("ru='Валюта отчета';uk='Валюта звіту'"));
	Если Область <> Неопределено Тогда
		Колонка = "C"+Строка(Область.Лево);
		ИмяОбласти = "R"+Строка(Область.Верх)+Колонка+":R"+Строка(Документ.ФиксацияСверху)+Колонка;
		ШапкаВалюты = Документ.Область(ИмяОбласти);
		ШапкаВалюты.Объединить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
