#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ИнициализироватьОтчет();

	КлючВарианта = ЗарплатаКадрыОтчеты.КлючВарианта(КомпоновщикНастроек);
	Если КлючВарианта = "Т3" Тогда
		
	Иначе
		
		ДокументРезультат.Очистить();
		
		// Параметры документа
		ДокументРезультат.ТолькоПросмотр = Истина;
		ДокументРезультат.ИмяПараметровПечати = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ПАРАМЕТРЫ_ПЕЧАТИ_%1",
			КлючВарианта); 
		ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
		
		ЭлементОформления = НастройкиОтчета.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Формат", УправлениеШтатнымРасписанием.ФорматКоличестваСтавок());
		ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("КоличествоСтавок");
		
		ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаАктуальности"));
		
		Если ЗначениеПараметра <> Неопределено Тогда
			Если ТипЗнч(ЗначениеПараметра.Значение) = Тип("Дата") 
				Или ТипЗнч(ЗначениеПараметра.Значение) = Тип("СтандартнаяДатаНачала") Тогда
				ДатаАктуальности = Дата(ЗначениеПараметра.Значение);
				Если ДатаАктуальности = '00010101' Тогда
					ЗначениеПараметра.Значение = ТекущаяДатаСеанса();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ЗначениеПараметраИспользоватьНесколькоТарифныхСтавок = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИспользоватьНесколькоТарифныхСтавок"));
		
		Если ЗначениеПараметраИспользоватьНесколькоТарифныхСтавок <> Неопределено Тогда
			ЗначениеПараметраИспользоватьНесколькоТарифныхСтавок.Значение = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоТарифныхСтавок");
		КонецЕсли;
		
		ЗначениеПараметраВРРайонныйКоэффициент = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВРРайонныйКоэффициент"));
		ЗначениеПараметраВРРайонныйКоэффициент.Значение = РасчетЗарплаты.НачислениеРайонныйКоэффициент();
		ЗначениеПараметраВРРайонныйКоэффициент.Использование = Истина;
		
		СтандартнаяОбработка = Ложь;
		
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
		
		// Создадим и инициализируем процессор компоновки.
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
		
		// Обозначим начало вывода
		ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
		
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОтчет() Экспорт
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаполнитьОбщиеИсточникиДанныхОтчета(ЭтотОбъект);
	ЗарплатаКадрыОбщиеНаборыДанныхРасширенный.ДополнитьШтатноеРасписаниеНачисления(ЭтотОбъект);
	
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ИнициализироватьОтчет();
	ЗначениеВДанныеФормы(ЭтотОбъект, Форма.Отчет);
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли