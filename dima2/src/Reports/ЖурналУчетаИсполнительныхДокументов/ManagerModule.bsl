#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт

	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ЖурналУчетаИсполнительныхДокументов");
	НастройкиВарианта.Описание =
		НСтр("ru='Список исполнительных листов, действующих в заданном периоде';uk='Список виконавчих листів, що діють в заданому періоді'");
	
КонецПроцедуры

#Область Печать

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   ПараметрыПечати       - Структура  - Дополнительные параметры для печати.
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КарточкаУчетаИсполнительныхДокументов") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"КарточкаУчетаИсполнительныхДокументов",
				НСтр("ru='Карточка учета исполнительных документов';uk='Картка обліку виконавчих документів'"),
				ПечатьКарточкиУчетаИсполнительныхДокументов(МассивОбъектов[0], ОбъектыПечати, ПараметрыВывода),,,,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьКарточкиУчетаИсполнительныхДокументов(Документ, ОбъектыПечати, ПараметрыВывода) 
	
	ОтчетОбъект = Отчеты.ЖурналУчетаИсполнительныхДокументов.Создать();
	
	ВариантОтчета = ОтчетОбъект.СхемаКомпоновкиДанных.ВариантыНастроек.Найти("КарточкаУчетаИсполнительныхДокументов");
	Если ВариантОтчета= Неопределено Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	НастройкиОтчета = ВариантОтчета.Настройки;
	
	Период = Документ.Дата;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Период", 				Новый СтандартныйПериод(НачалоМесяца(Период), КонецМесяца(Период)));
	СтруктураПараметров.Вставить("НачалоПериода",		НачалоМесяца(Период));
	СтруктураПараметров.Вставить("КонецПериода",		КонецМесяца(Период));
	СтруктураПараметров.Вставить("Документ",			Документ);
	СтруктураПараметров.Вставить("ТолькоПроведенные",	Ложь);
	
	Для каждого ПараметрЗаполнения Из СтруктураПараметров Цикл
		
		ПараметрКомпоновкиДанных = Новый ПараметрКомпоновкиДанных(ПараметрЗаполнения.Ключ);
		ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновкиДанных);
		Если ЗначениеПараметра <> Неопределено Тогда
			ЗначениеПараметра.Значение = ПараметрЗаполнения.Значение;
			ЗначениеПараметра.Использование = Истина;
		Иначе
			НовыйПараметр = НастройкиОтчета.ПараметрыДанных.Элементы.Добавить();
			НовыйПараметр.Параметр = ПараметрКомпоновкиДанных;
			НовыйПараметр.Значение = ПараметрЗаполнения.Значение;
			НовыйПараметр.Использование = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ОтчетОбъект.СкомпоноватьРезультат(ДокументРезультат);
	
	Возврат ДокументРезультат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли