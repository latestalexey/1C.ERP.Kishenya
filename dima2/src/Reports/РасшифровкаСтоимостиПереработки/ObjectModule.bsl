#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем МассивОбъектов, Период, Валюта, ВидЦены, КэшированныеЗначения;

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		ЭтаФорма.Параметры.Отбор.Вставить("МассивОбъектов", Параметры.ПараметрКоманды);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	УстановитьОбязательныеНастройки(ПользовательскиеНастройкиМодифицированы);
	
	// Подготовим и выведем отчет.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных,
		НастройкиКомпоновкиДанных,
		ДанныеРасшифровки);
	
	КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураЗаголовковПолей(), МакетКомпоновки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	ТаблицаМатериалов = СтоимостьПереработкиДавальческогоСырья();

	ВнешниеНаборыДанных = Новый Структура("ТаблицаМатериалов", ТаблицаМатериалов);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.НачатьВывод();
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	ПроцессорВывода.ЗакончитьВывод();
	
	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции
	
Процедура УстановитьОбязательныеНастройки(ПользовательскиеНастройкиМодифицированы)
	
	МассивОбъектов = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.ФиксированныеНастройки, "МассивОбъектов").Значение;
	
	Период = КонецДня(ТекущаяДатаСеанса());
	ПараметрДатаОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ДатаОтчета");
	
	Если ЗначениеЗаполнено(ПараметрДатаОтчета.Значение) Тогда
		Период = КонецДня(ПараметрДатаОтчета.Значение);
	Иначе
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ДатаОтчета", Период);
		ПользовательскиеНастройкиМодифицированы = Истина;
	КонецЕсли;
	
	Валюта = Константы.ВалютаПлановойСебестоимостиПродукции.Получить();
	
	ПараметрДатаОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ВидЦены");
	ВидЦены = ПараметрДатаОтчета.Значение;
	
КонецПроцедуры

Функция СтоимостьПереработкиДавальческогоСырья()
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказДавальцаПродукция.Ссылка КАК ЗаказДавальца,
	|	ЗаказДавальцаПродукция.Номенклатура КАК Номенклатура,
	|	ЗаказДавальцаПродукция.Характеристика КАК Характеристика,
	|	ЗаказДавальцаПродукция.Спецификация,
	|	ЗаказДавальцаПродукция.НомерСтроки,
	|	ЗаказДавальцаПродукция.КодСтроки,
	|	ЗаказДавальцаПродукция.Количество,
	|	ВЫБОР
	|		КОГДА &ВидЦены = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗаказДавальцаПродукция.Ссылка.ВидЦены
	|		ИНАЧЕ &ВидЦены
	|	КОНЕЦ КАК ВидЦены,
	|	ЗаказДавальцаПродукция.СуммаУслуги,
	|	ЗаказДавальцаПродукция.СуммаСобственныхМатериалов,
	|	ЗаказДавальцаПродукция.Сумма
	|ИЗ
	|	Документ.ЗаказДавальца.Продукция КАК ЗаказДавальцаПродукция
	|ГДЕ
	|	ЗаказДавальцаПродукция.Ссылка В(&МассивОбъектов)
	|	И ЗаказДавальцаПродукция.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ТаблицаЗатрат = Новый ТаблицаЗначений;
	ТаблицаЗатрат.Колонки.Добавить("ЗаказДавальца",Новый ОписаниеТипов("ДокументСсылка.ЗаказДавальца"));
	ТаблицаЗатрат.Колонки.Добавить("КодСтроки",Новый ОписаниеТипов("Число"));
	ТаблицаЗатрат.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаЗатрат.Колонки.Добавить("Характеристика",Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаЗатрат.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаЗатрат.Колонки.Добавить("ВидЦены",Новый ОписаниеТипов("СправочникСсылка.ВидыЦен"));
	
	ПереченьДанных = Новый Массив();
	ПереченьДанных.Добавить("МатериалыИУслуги");
	ПереченьДанных.Добавить("Трудозатраты");
	
	Пока Выборка.Следующий() Цикл
		
		ДанныеПоНоменклатуре = Новый Структура("Номенклатура, Характеристика, Спецификация, Количество");
		ЗаполнитьЗначенияСвойств(ДанныеПоНоменклатуре, Выборка);
		ТабличныеЧасти = Справочники.РесурсныеСпецификации.ДанныеСпецификацииСПолуфабрикатами(ДанныеПоНоменклатуре, Истина, , ПереченьДанных);
		
		// материалы
		ТабличныеЧасти.МатериалыИУслуги.Колонки.Добавить("ЗаказДавальца",Новый ОписаниеТипов("ДокументСсылка.ЗаказДавальца"));
		ТабличныеЧасти.МатериалыИУслуги.ЗаполнитьЗначения(Выборка.ЗаказДавальца, "ЗаказДавальца");
		
		ТабличныеЧасти.МатериалыИУслуги.Колонки.Добавить("КодСтроки",Новый ОписаниеТипов("Число"));
		ТабличныеЧасти.МатериалыИУслуги.ЗаполнитьЗначения(Выборка.КодСтроки, "КодСтроки");
		
		ТабличныеЧасти.МатериалыИУслуги.Колонки.Добавить("ВидЦены",Новый ОписаниеТипов("СправочникСсылка.ВидыЦен"));
		ТабличныеЧасти.МатериалыИУслуги.ЗаполнитьЗначения(Выборка.ВидЦены, "ВидЦены");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТабличныеЧасти.МатериалыИУслуги, ТаблицаЗатрат);
	
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗатрат.ЗаказДавальца,
	|	ТаблицаЗатрат.КодСтроки,
	|	ТаблицаЗатрат.Номенклатура,
	|	ТаблицаЗатрат.Характеристика,
	|	ТаблицаЗатрат.Количество,
	|	ТаблицаЗатрат.ВидЦены
	|ПОМЕСТИТЬ ВТТаблицаМатериалов
	|ИЗ
	|	&ТаблицаЗатрат КАК ТаблицаЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказДавальцаМатериалы.КодСтрокиПродукция,
	|	ЗаказДавальцаМатериалы.Номенклатура,
	|	ЗаказДавальцаМатериалы.Характеристика,
	|	СУММА(ЗаказДавальцаМатериалы.Количество) КАК Количество,
	|	ЗаказДавальцаМатериалы.Ссылка КАК ЗаказДавальца
	|ПОМЕСТИТЬ ВТМатериалыДавальца
	|ИЗ
	|	Документ.ЗаказДавальца.Материалы КАК ЗаказДавальцаМатериалы
	|ГДЕ
	|	ЗаказДавальцаМатериалы.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказДавальцаМатериалы.Ссылка,
	|	ЗаказДавальцаМатериалы.Номенклатура,
	|	ЗаказДавальцаМатериалы.Характеристика,
	|	ЗаказДавальцаМатериалы.КодСтрокиПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаМатериалов.ЗаказДавальца,
	|	ВТТаблицаМатериалов.КодСтроки,
	|	ЗаказДавальцаПродукция.НомерСтроки,
	|	ВТТаблицаМатериалов.Номенклатура,
	|	ВТТаблицаМатериалов.Характеристика,
	|	ВТТаблицаМатериалов.ВидЦены,
	|	СУММА(ВТТаблицаМатериалов.Количество) КАК КоличествоПоСпецификации,
	|	СУММА(ЕСТЬNULL(ВТМатериалыДавальца.Количество, 0)) КАК КоличествоПредоставляетсяДавальцем,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЗаказДавальцаПродукция.Номенклатура КАК Продукция,
	|	ЗаказДавальцаПродукция.Характеристика КАК ХарактеристикаПродукции,
	|	ЗаказДавальцаПродукция.СуммаСобственныхМатериалов КАК СуммаМатериаловВыставлено,
	|	ЗаказДавальцаПродукция.СуммаУслуги КАК СуммаУслугиВыставлено,
	|	ЗаказДавальцаПродукция.Сумма КАК СуммаВсегоВыставлено
	|ИЗ
	|	ВТТаблицаМатериалов КАК ВТТаблицаМатериалов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМатериалыДавальца КАК ВТМатериалыДавальца
	|		ПО ВТТаблицаМатериалов.ЗаказДавальца = ВТМатериалыДавальца.ЗаказДавальца
	|			И ВТТаблицаМатериалов.КодСтроки = ВТМатериалыДавальца.КодСтрокиПродукция
	|			И ВТТаблицаМатериалов.Номенклатура = ВТМатериалыДавальца.Номенклатура
	|			И ВТТаблицаМатериалов.Характеристика = ВТМатериалыДавальца.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ВТТаблицаМатериалов.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены
	|			И ВТТаблицаМатериалов.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ВТТаблицаМатериалов.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца.Продукция КАК ЗаказДавальцаПродукция
	|		ПО ВТТаблицаМатериалов.ЗаказДавальца = ЗаказДавальцаПродукция.Ссылка
	|			И ВТТаблицаМатериалов.КодСтроки = ЗаказДавальцаПродукция.КодСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаМатериалов.ЗаказДавальца,
	|	ВТТаблицаМатериалов.КодСтроки,
	|	ВТТаблицаМатериалов.Номенклатура,
	|	ВТТаблицаМатериалов.Характеристика,
	|	ВТТаблицаМатериалов.ВидЦены,
	|	ЗаказДавальцаПродукция.Номенклатура,
	|	ЗаказДавальцаПродукция.Характеристика,
	|	ЗаказДавальцаПродукция.НомерСтроки,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЗаказДавальцаПродукция.СуммаСобственныхМатериалов,
	|	ЗаказДавальцаПродукция.СуммаУслуги,
	|	ЗаказДавальцаПродукция.Сумма";
	
	Запрос.УстановитьПараметр("ТаблицаЗатрат", ТаблицаЗатрат);
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(Период), Период, КонецДня(ТекущаяДатаСеанса())));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СтруктураЗаголовковПолей()
	
	СтруктураЗаголовковПолей = Новый Структура;
	СтруктураЗаголовковПолей.Вставить("ВалютаОтчета", "(" + Валюта + ")");
	
	Возврат СтруктураЗаголовковПолей;
КонецФункции

#КонецОбласти 

#КонецЕсли

