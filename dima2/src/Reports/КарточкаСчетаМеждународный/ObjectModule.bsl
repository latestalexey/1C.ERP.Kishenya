#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВалютаМУ = МеждународнаяОтчетностьВызовСервера.УчетнаяВалюта();
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВалютаФункциональная", ВалютаМУ.Функциональная);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВалютаПредставления", ВалютаМУ.Представления);
	
	ДокументРезультат.Очистить();
	СФормироватьЗаголовкиПолей();
	
	ПоказателиОтчета = Новый Структура;
	ПоказателиОтчета.Вставить("ВалютнаяСумма", БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПоказательВалютнаяСумма"));
	ПоказателиОтчета.Вставить("СуммаПредставления", БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПоказательСуммаПредставления"));
	ПоказателиОтчета.Вставить("Сумма", БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПоказательСумма"));
	
	МеждународнаяОтчетностьСервер.УстановитьГруппировкуВалюты(КомпоновщикНастроек, ПоказателиОтчета.ВалютнаяСумма.Значение);
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	МеждународнаяОтчетностьСервер.НастроитьПоляВыбора(ПоказателиОтчета,НастройкиКомпоновкиДанных.Выбор.Элементы);
	
	МассивВидовСубконто = Новый Массив;
	ПараметрВидыСубконто = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "СписокВидовСубконто");
	Если ПараметрВидыСубконто <> Неопределено И ЗначениеЗаполнено(ПараметрВидыСубконто.Значение) Тогда
		Если ТипЗнч(ПараметрВидыСубконто.Значение) = Тип("СписокЗначений") Тогда
			СписокВидовСубконто = ПараметрВидыСубконто.Значение;
			Для Каждого ЭлементСписка Из СписокВидовСубконто Цикл
				Если ЗначениеЗаполнено(ЭлементСписка.Значение) Тогда 
					МассивВидовСубконто.Добавить(ЭлементСписка.Значение);
				КонецЕсли;
			КонецЦикла;
		Иначе
			МассивВидовСубконто.Добавить(ПараметрВидыСубконто.Значение);
		КонецЕсли;
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,"СпискоВидовСубконто", МассивВидовСубконто);
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных,
		НастройкиКомпоновкиДанных,
		ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.НайтиПараметр(ПоказателиОтчета.Сумма.Параметр);
	МеждународнаяОтчетностьСервер.УстановитьВалюту(ДокументРезультат, ВалютаМУ.Функциональная, Параметр.Заголовок);
	Параметр = КомпоновщикНастроек.Настройки.ПараметрыДанных.ДоступныеПараметры.НайтиПараметр(ПоказателиОтчета.СуммаПредставления.Параметр);
	МеждународнаяОтчетностьСервер.УстановитьВалюту(ДокументРезультат, ВалютаМУ.Представления, Параметр.Заголовок);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СФормироватьЗаголовкиПолей()

	ФункциональнаяВалюта = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ВалютаФункциональная");
	ВалютаПредставления = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ВалютаПредставления");
	МеждународнаяОтчетностьСервер.УстановитьЗаголовкиПолей(СхемаКомпоновкиДанных.НаборыДанных.ОсновнойНаборДанных, ВалютаПредставления, ФункциональнаяВалюта);

КонецПроцедуры

#КонецОбласти

#КонецЕсли
