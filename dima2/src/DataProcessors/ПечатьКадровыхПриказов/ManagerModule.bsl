#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_UK_П1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_UK_П1", НСтр("ru='Приказ о приеме';uk='Наказ про прийом'"),
						ПолучитьТабличныйДокументПриказаП1(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П1", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,
						"Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П1");
	КонецЕсли;
					
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_UK_П4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_UK_П4", НСтр("ru='Приказ об увольнении';uk='Наказ про звільнення'"),
						ПолучитьТабличныйДокументПриказаП4(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П4", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,
						"Обработка.ПечатьКадровыхПриказов.ПФ_MXL_UK_П4");
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Перевод") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_Перевод", НСтр("ru='Приказ о переводе';uk='Наказ про переведення'"),
						ПолучитьТабличныйДокументПриказаПеревод(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.ПФ_MXL_Перевод", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,
						"Обработка.ПечатьКадровыхПриказов.ПФ_MXL_Перевод",,Истина);
	КонецЕсли;	
    
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НЕУКРПФ_MXL_Т6") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"НЕУКРПФ_MXL_Т6", НСтр("ru='Приказ о предоставлении отпуска';uk='Наказ про надання відпустки'"),
		ТабличныйДокументПриказаТ6(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.НЕУКРПФ_MXL_Т6", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,
		"Обработка.ПечатьКадровыхПриказов.НЕУКРПФ_MXL_Т6");
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_XML_UK_П3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_XML_UK_П3", НСтр("ru='Приказ о предоставлении отпуска (Форма П-3)';uk='Наказ про надання відпустки (Форма П-3)'"),
						ПолучитьТабличныйДокументПриказаП3(УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьКадровыхПриказов.ПФ_XML_UK_П3", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,
						"Обработка.ПечатьКадровыхПриказов.ПФ_XML_UK_П3");
	КонецЕсли;	
		
		
	
КонецПроцедуры								

#Область ПроцедурыФункцииПечатиКадровыхДанных

// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении.
//
// Параметры:
//	МассивОбъектов - массив сотрудников.
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в
//                   которой был выведен объект).
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении".
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокументПриказаП1(Макет, МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПриеме";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаП1(МассивОбъектов);	
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати, КодЯзыкаПечать);
	
	Возврат ДокументРезультат;
КонецФункции 
	
// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении.
//
// Параметры:
//	МассивОбъектов - массив сотрудников.
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в
//                   которой был выведен объект).
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении".
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокументПриказаПеревод(Макет, МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПереводе";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаПеревод(МассивОбъектов);	
	
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати, КодЯзыкаПечать);
	
	Возврат ДокументРезультат;
КонецФункции 
	
// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о приеме или увольнении.
//
// Параметры:
//	МассивОбъектов - массив сотрудников.
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в
//                   которой был выведен объект).
//	ВидПриказа     - "ПриказОПриеме" или "ПриказОбУвольнении".
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ПолучитьТабличныйДокументПриказаП4(Макет, МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;

	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОбУвольнении";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаП4(МассивОбъектов);
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати, КодЯзыкаПечать);
	
	Возврат ДокументРезультат;
КонецФункции 

Функция ПолучитьТабличныйДокументПриказаП3(Макет, МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;

	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОбОтпуске";
	МассивДанныхЗаполнения = ПолучитьДанныеДляПечатиКадровогоПриказаП3(МассивОбъектов);
	ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ДокументРезультат, МассивДанныхЗаполнения, ОбъектыПечати, КодЯзыкаПечать);
	
	Возврат ДокументРезультат;
КонецФункции 


Процедура ВывестиДанныеКадровогоПриказаВТабличныйДокумент(Макет, ТабличныйДокумент, МассивДанныхЗаполнения, ОбъектыПечати, КодЯзыкаПечать)
	
	Если Макет <> Неопределено Тогда
		
		ПервыйПриказ = Истина;
		Для каждого ПараметрыМакета Из МассивДанныхЗаполнения Цикл
			Если Не ПервыйПриказ Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПриказ = Ложь;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			Макет.Параметры.Заполнить(ПараметрыМакета);
			Если ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ПриказОПриеме" Тогда
				Если ПараметрыМакета.ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Тогда
					Макет.Параметры.ФлагОсновная = ИСТИНА
				Иначе
					Макет.Параметры.ФлагОсновная = ЛОЖЬ
				КонецЕсли;
				
				Если ПараметрыМакета.ДлительностьИспытательногоСрока <> 0 Тогда
					Макет.Параметры.ФлагИспытательныйСрок = Истина;
					Макет.Параметры.ИспытательныйСрок = ПараметрыМакета.ДлительностьИспытательногоСрока;
				КонецЕсли;	
				
				Если ПараметрыМакета.ДлительностьРабочейНеделиЧасов <> 0 Тогда
					Если НЕ ПараметрыМакета.НеполноеРабочееВремя Тогда
						Макет.Параметры.ФлагДлительность = Истина;
						Макет.Параметры.ДлительностьЧасы = ЦЕЛ(ПараметрыМакета.ДлительностьРабочейНеделиЧасов);
						Макет.Параметры.ДлительностьМинуты = Окр((ПараметрыМакета.ДлительностьРабочейНеделиЧасов - ЦЕЛ(ПараметрыМакета.ДлительностьРабочейНеделиЧасов))*60);
					Иначе
						Макет.Параметры.ФлагДлительностьСокр = Истина;
						Макет.Параметры.ДлительностьЧасыСокр = ПараметрыМакета.ДлительностьРабочейНеделиЧасов;
					КонецЕсли;	
				КонецЕсли;	

				Если ПараметрыМакета.ОснованиеСрочногоДоговора = Справочники.ОснованияЗаключенияСрочныхТрудовыхДоговоров.Контракт Тогда
					Макет.Параметры.ФлагКонтракт = Истина;
					Макет.Параметры.ДатаОкончанияКонтракта = Формат(ПараметрыМакета.ДатаЗавершенияТрудовогоДоговора, "Л="+КодЯзыкаПечать+"");
				ИначеЕсли ПараметрыМакета.ОснованиеСрочногоДоговора = Справочники.ОснованияЗаключенияСрочныхТрудовыхДоговоров.НаВремяВыполненияРаботы Тогда
					Макет.Параметры.ФлагНаВремя = Истина;
				ИначеЕсли ПараметрыМакета.ОснованиеСрочногоДоговора = Справочники.ОснованияЗаключенияСрочныхТрудовыхДоговоров.НаВремяОтсуствияСотрудника Тогда
					Макет.Параметры.ФлагЗамещение = Истина;
				КонецЕсли;
				
				ТарифнаяСтавкаГривны = РазложитьЧислоВСтроку(МассивДанныхЗаполнения[0].ТарифнаяСтавкаЦелаяЧасть,6,Ложь);
				Для Сч = 1 По 6 Цикл
					Макет.Параметры["Гривны" + Сч] = Сред(Строка(ТарифнаяСтавкаГривны), Сч, 1);
				КонецЦикла;
				ТарифнаяСтавкаКопейки = РазложитьЧислоВСтроку(МассивДанныхЗаполнения[0].ТарифнаяСтавкаДробнаяЧасть,2,Ложь);
				Для Сч = 1 По 2 Цикл
					Макет.Параметры["Копейки" + Сч] = Сред(Строка(ТарифнаяСтавкаКопейки), Сч, 1);
				КонецЦикла;
			КонецЕсли;	
			ТабличныйДокумент.Вывести(Макет);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ПараметрыМакета.Ссылка);	
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьДанныеДляПечатиКадровогоПриказаП1(МассивОбъектов)
	
	Выборка = КадровыйУчет.СформироватьЗапросДляП1(МассивОбъектов).Выбрать();
	
	МассивПараметров = Новый Массив;
	
	Пока  Выборка.Следующий() Цикл
		
		Параметры = ПараметрыПриказаП1();
		
		КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);
		
		СтрокаНадбавок = СтрРазделить(Выборка.Надбавка, ";", Ложь);
		КоличествоНадбавок = 1;
		Для каждого Надбавка Из СтрокаНадбавок Цикл
		
			Параметры["Надбавка" + КоличествоНадбавок] = Надбавка;
			КоличествоНадбавок = КоличествоНадбавок + 1;
			Если КоличествоНадбавок > 4 Тогда 
				Прервать;
			КонецЕсли;
		
		КонецЦикла; 
		
		РезультатСклонения = "";
		Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 4, РезультатСклонения, Параметры.Пол) Тогда
			Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ЦелаяЧасть = Цел(Выборка.ТарифнаяСтавка);
		Параметры.ТарифнаяСтавкаЦелаяЧасть = ЦелаяЧасть;
		ДробнаяЧасть = Выборка.ТарифнаяСтавка - ЦелаяЧасть;
		Параметры.ТарифнаяСтавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100);
		Параметры.ВидЗанятости = Выборка.ВидЗанятости;
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	
Функция РазложитьЧислоВСтроку(Значение, Длина, ЛидирующиеНули = Ложь)
	
	ФорматнаяСтрока = "ЧЦ="+Строка(Длина)+"; ЧДЦ=0; ЧГ=0";
	Если ЛидирующиеНули Тогда
		Строка0 = "0";
		Для Сч = 2 по Длина Цикл
			Строка0 = Строка0+"0";
		Конеццикла;
		ФорматнаяСтрока = ФорматнаяСтрока + "; ЧН="+Строка0+"; ЧВН=";
	Иначе
		ФорматнаяСтрока = ФорматнаяСтрока + "; ЧН=0";
	КонецЕсли;
	
	Результат = Формат(Значение,ФорматнаяСтрока);
	
	Если НЕ ЛидирующиеНули Тогда
		
		Пока СтрДлина(Результат) < Длина Цикл
			Результат = " "+Результат;
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиКадровогоПриказаПеревод(МассивОбъектов)
	
	НастройкиПечатныхФорм  = ЗарплатаКадрыПовтИсп.НастройкиПечатныхФорм();
	
	Выборка = КадровыйУчет.СформироватьЗапросДляПеревод(МассивОбъектов).Выбрать();
	
	МассивПараметров = Новый Массив;
	
	Пока  Выборка.Следующий() Цикл
		
		Параметры = ПараметрыПриказаПеревод();
		
		КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);
		
		РезультатСклонения = "";
		Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 4, РезультатСклонения, Параметры.Пол) Тогда
			Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		Если НастройкиПечатныхФорм.ВыводитьПолнуюИерархиюПодразделений
			И ЗначениеЗаполнено(Параметры.НовоеПодразделение) Тогда
			
			Параметры.НовоеПодразделение = Параметры.НовоеПодразделение.ПолноеНаименование();
			
		КонецЕсли;
		
		ЦелаяЧасть = Цел(Выборка.ТарифнаяСтавка);
		Параметры.ОкладТарифнаяСтавкаЦелаяЧасть = ЦелаяЧасть;
		ДробнаяЧасть = Выборка.ТарифнаяСтавка - ЦелаяЧасть;
		Параметры.ОкладТарифнаяСтавкаДробнаяЧасть = ?(ДробнаяЧасть = 0, "00", ДробнаяЧасть*100);
		
		Если ЗначениеЗаполнено(Параметры.НовыйРазрядКатегория) Тогда
			Параметры.НовыйРазрядКатегория = ", " + Параметры.НовыйРазрядКатегория;
		КонецЕсли; 
		
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	

Функция ПолучитьДанныеДляПечатиКадровогоПриказаП4(МассивОбъектов)
	
	Выборка = КадровыйУчет.СформироватьЗапросДляП4(МассивОбъектов).Выбрать();
	
	МассивПараметров = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Параметры = ПараметрыПриказаП4();
		
		КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, Выборка);

		РезультатСклонения = "";
		Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 4, РезультатСклонения, Параметры.Пол) Тогда
			Параметры.Работник	= РезультатСклонения
		КонецЕсли;
		
		ПредставлениеДатыУвольнения  = Формат(Выборка.ДатаУвольнения, "ДЛФ=DD");
		
		Параметры.ДатаУвольненияЧисло = ?(ЗначениеЗаполнено(Выборка.ДатаУвольнения),
			СокрЛП(Лев(ПредставлениеДатыУвольнения,2)),
			"      ");
		Параметры.ДатаУвольненияМесяцГод = ?(ЗначениеЗаполнено(Выборка.ДатаУвольнения),
			СокрЛП(Прав(ПредставлениеДатыУвольнения, СтрДлина(ПредставлениеДатыУвольнения)-2)),
			"                     г.");
			
		Параметры.ДатаУвольнения = Формат(Выборка.ДатаУвольнения, "Л=uk_UA; ДЛФ=DD"); 	
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	

Функция ПолучитьДанныеДляПечатиКадровогоПриказаП3(МассивОбъектов)
	
	Выборка = КадровыйУчет.СформироватьЗапросДляП3(МассивОбъектов).Выбрать();
	
	МассивПараметров = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Параметры = ПараметрыПриказаП3();
		
		ЗаполнитьЗначенияСвойств(Параметры, Выборка);
		ПродолжительностьВсего = ЗарплатаКадры.РазложитьЧислоВСтроку(Параметры.Продолжительность,2,Истина);
		Для Сч = 1 По 2 Цикл
			Параметры["Продолжительность" + Сч] = Сред(Строка(ПродолжительностьВсего), Сч, 1);
		КонецЦикла;
		
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;

КонецФункции	


Функция ПараметрыПриказаП1()
	
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("ДатаПриема");
	Параметры.Вставить("ДатаЗавершенияТрудовогоДоговора");
	Параметры.Вставить("УсловияПриема");
	Параметры.Вставить("ТарифнаяСтавкаЦелаяЧасть");
	Параметры.Вставить("ТарифнаяСтавкаДробнаяЧасть");
	Параметры.Вставить("ТарифнаяСтавкаГривны");
	Параметры.Вставить("ТарифнаяСтавкаКопейки");
	Параметры.Вставить("ВалютаТарифнойСтавки", "грн.");
	Параметры.Вставить("КопейкиТарифнойСтавки", "коп.");
	Параметры.Вставить("Надбавка", 0);
	Параметры.Вставить("Надбавка1", "");
	Параметры.Вставить("Надбавка2", "");
	Параметры.Вставить("Надбавка3", "");
	Параметры.Вставить("Надбавка4", "");
	Параметры.Вставить("ДлительностьИспытательногоСрока", "");
	Параметры.Вставить("ДлительностьРабочейНеделиЧасов", "");
	Параметры.Вставить("ВидЗанятости");
	Параметры.Вставить("ОснованиеСрочногоДоговора");
	Параметры.Вставить("НеполноеРабочееВремя");
	
	Возврат Параметры;
	
КонецФункции	

Функция ПараметрыПриказаПеревод()
	
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("ДатаНачала");
	Параметры.Вставить("ДатаОкончания");
	Параметры.Вставить("ВидПеревода");
	Параметры.Вставить("Подразделение");
	Параметры.Вставить("Должность");
	Параметры.Вставить("НовоеПодразделение");
	Параметры.Вставить("НоваяДолжность");
	Параметры.Вставить("НовыйРазрядКатегория");
	Параметры.Вставить("ОкладТарифнаяСтавкаЦелаяЧасть");
	Параметры.Вставить("ОкладТарифнаяСтавкаДробнаяЧасть");
	Параметры.Вставить("ВалютаТарифнойСтавки", "грн.");
	Параметры.Вставить("КопейкиТарифнойСтавки", "коп.");
	Параметры.Вставить("Надбавка", 0);
	Параметры.Вставить("ОснованиеПеревода");
	Параметры.Вставить("ПричинаПеревода");

	Возврат Параметры;
	
КонецФункции

Функция ПараметрыПриказаП4()
		
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("ДатаУвольнения");
	Параметры.Вставить("ДатаУвольненияЧисло");
	Параметры.Вставить("ДатаУвольненияМесяцГод");
	Параметры.Вставить("СтатьяЗакона", "");
	Параметры.Вставить("СтатьяКЗоТ", "");
	Параметры.Вставить("ОснованиеУвольнения", "");
	
	Возврат Параметры;
	
КонецФункции

Функция ПараметрыПриказаП3()
		
	Параметры = КадровыйУчет.ПараметрыПриказаОбОтпуске();
	
	Параметры.Вставить("ВидОтпуска");
	Параметры.Вставить("ДатаНачалаВсего");
	Параметры.Вставить("ДатаОкончанияВсего");
	Параметры.Вставить("РабочийГодС", '00010101');
	Параметры.Вставить("РабочийГодПо", '00010101');
	Параметры.Вставить("Продолжительность");
	Параметры.Вставить("ФИОРуководителя");
	Параметры.Вставить("Продолжительность1");
	Параметры.Вставить("Продолжительность2");

	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область Отпуск

// Процедура печати документа.
// Возвращает табличный документ - сформированную печатную форму приказа о предоставлении отпуска.
//
// Параметры:
//	МассивОбъектов - массив сотрудников.
//  ОбъектыПечати  - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в
//                   которой был выведен объект).
//
// Возвращаемое значение:
//	Табличный документ
//
Функция ТабличныйДокументПриказаТ6(Макет, МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	ДокументРезультат.КлючПараметровПечати = "ПараметрыПечати_ПриказОПредоставленииОтпуска";
	МассивДанныхЗаполнения = ДанныеДляПечатиКадровогоПриказаТ6(МассивОбъектов);
	
	Если Макет <> Неопределено Тогда
		
		ПервыйПриказ = Истина;
		Для каждого ПараметрыМакета Из МассивДанныхЗаполнения Цикл
			
			НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
			Если Не ПервыйПриказ Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйПриказ = Ложь;
			КонецЕсли;
			
			МакетШапка = Макет.ПолучитьОбласть("Шапка");
			МакетШапка.Параметры.Заполнить(ПараметрыМакета);
			ДокументРезультат.Вывести(МакетШапка);
				
			МакетРаботник = Макет.ПолучитьОбласть("Работник");
			МакетРаботник.Параметры.Заполнить(ПараметрыМакета);
		
			ДокументРезультат.Вывести(МакетРаботник);
				
			МакетПодвал = Макет.ПолучитьОбласть("Подвал");
			МакетПодвал.Параметры.Заполнить(ПараметрыМакета);
			ДокументРезультат.Вывести(МакетПодвал);
			
			// Печать приложения
			Если ПараметрыМакета.ДополнительныеОтпуска.Количество() > 1 Тогда
				
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				
				МакетШапкиПриложения = Макет.ПолучитьОбласть("ПриложениеШапка");
				МакетШапкиПриложения.Параметры.Заполнить(ПараметрыМакета);
				ДокументРезультат.Вывести(МакетШапкиПриложения);
				
				Для Каждого ПараметрыМакетаПриложения Из ПараметрыМакета.ДополнительныеОтпуска Цикл
					МакетСтрокиПриложения = Макет.ПолучитьОбласть("ПриложениеСтрокаОтпуск");
					МакетСтрокиПриложения.Параметры.Заполнить(ПараметрыМакетаПриложения);
					ДокументРезультат.Вывести(МакетСтрокиПриложения);
					
					Если ПараметрыМакетаПриложения.УказанПериодЗаКоторыйПредоставляетсяОтпуск Тогда
						МакетСтрокиПриложения = Макет.ПолучитьОбласть("ПриложениеСтрокаПериод");
						МакетСтрокиПриложения.Параметры.Заполнить(ПараметрыМакетаПриложения);
						ДокументРезультат.Вывести(МакетСтрокиПриложения);
					КонецЕсли;
					
					МакетСтрокиПриложения = Макет.ПолучитьОбласть("ПриложениеСтрокаОснование");
					МакетСтрокиПриложения.Параметры.Заполнить(ПараметрыМакетаПриложения);
					ДокументРезультат.Вывести(МакетСтрокиПриложения);
					
				КонецЦикла;
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ПараметрыМакета.Ссылка);

		КонецЦикла;

	КонецЕсли;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ДанныеДляПечатиКадровогоПриказаТ6(МассивОбъектов)
	
	МассивПараметров = Новый Массив;
	НомерДополнительногоОтпуска = 1;
	
	Результат = КадровыйУчет.СформироватьЗапросДляТ6(МассивОбъектов);
	
	Если Результат.Пустой() Тогда
		Возврат МассивПараметров
	КонецЕсли;
	
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока  Выборка.Следующий() Цикл
		
		Параметры = СтруктураПараметровПриказаТ6();		
		
		ВыборкаПоВидуОтпуска = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ДатаНачалаВсего = '00010101';
		ДатаОкончанияВсего = '00010101';
		ШапкаЗаполнена = Ложь;
		ПродолжительностьВсего = 0;
		ОрганизацияДокумента = Неопределено;
		Если ВыборкаПоВидуОтпуска.НайтиСледующий(Новый Структура("ЭтоОсновнойОтпуск", Истина)) Тогда
			
			КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, ВыборкаПоВидуОтпуска);
			
			РезультатСклонения = "";
			Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 3, РезультатСклонения, Параметры.Пол) Тогда
				Параметры.Работник	= РезультатСклонения
			КонецЕсли;
			
			Параметры.ДатаДок = Формат(ВыборкаПоВидуОтпуска.ДатаДок, "ДЛФ=Д");
			ШапкаЗаполнена = Истина;
			
			ПредставлениеДатыНачалаОсновногоОтпуска  = Формат(ВыборкаПоВидуОтпуска.ДатаНачала, "ДЛФ=DD");
			Параметры.ДатаНачалаЧисло = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала), СокрЛП(Лев(ПредставлениеДатыНачалаОсновногоОтпуска,2)), "      ");
			Параметры.ДатаНачалаМесяцГод = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала),  СокрЛП(Прав(ПредставлениеДатыНачалаОсновногоОтпуска, СтрДлина(ПредставлениеДатыНачалаОсновногоОтпуска)-2)), "                     г.");
			
			ПредставлениеДатыОкончанияОсновногоОтпуска  = Формат(ВыборкаПоВидуОтпуска.ДатаОкончания, "ДЛФ=DD");
			Параметры.ДатаОкончанияЧисло = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания), СокрЛП(Лев(ПредставлениеДатыОкончанияОсновногоОтпуска,2)), "      ");
			Параметры.ДатаОкончанияМесяцГод = ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания),  СокрЛП(Прав(ПредставлениеДатыОкончанияОсновногоОтпуска, СтрДлина(ПредставлениеДатыОкончанияОсновногоОтпуска)-2)), "                     г.");
			
			Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.Продолжительность) Тогда
				Параметры.Продолжительность = ВыборкаПоВидуОтпуска.Продолжительность;
				ПродолжительностьВсего  = ВыборкаПоВидуОтпуска.Продолжительность;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала) Тогда
				ДатаНачалаВсего = ВыборкаПоВидуОтпуска.ДатаНачала;
			КонецЕсли;	
			
			Если  ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания) Тогда
				ДатаОкончанияВсего = ВыборкаПоВидуОтпуска.ДатаОкончания;
			КонецЕсли;
		КонецЕсли;
		
		ВыборкаПоВидуОтпуска.Сбросить();
		
		ДатаНачалаДоп = '00010101';
		ДатаОкончанияДоп = '00010101';
		СтрокаВидДопОтпуска = "";
		ПродолжительностьДоп = 0;

		Пока ВыборкаПоВидуОтпуска.НайтиСледующий(Новый Структура("ЭтоОсновнойОтпуск", Ложь)) Цикл
			Если НЕ ШапкаЗаполнена  Тогда
				
				КадровыйУчет.ЗаполнитьПараметрыКадровогоПриказа(Параметры, ВыборкаПоВидуОтпуска);
				
				РезультатСклонения = "";
				Если ФизическиеЛицаЗарплатаКадры.Просклонять(Параметры.Работник, 3, РезультатСклонения, Параметры.Пол) Тогда
					Параметры.Работник	= РезультатСклонения
				КонецЕсли;
				
				Параметры.Продолжительность  = 0;
				Параметры.ДатаДок = Формат(?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаДок), ВыборкаПоВидуОтпуска.ДатаДок, ТекущаяДатаСеанса()), "ДЛФ=Д");
				ШапкаЗаполнена = Истина;
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДатаНачалаДоп) ИЛИ ДатаНачалаДоп > ВыборкаПоВидуОтпуска.ДатаНачала Тогда
				ДатаНачалаДоп = ВыборкаПоВидуОтпуска.ДатаНачала;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДатаОкончанияДоп) ИЛИ ДатаОкончанияДоп < ВыборкаПоВидуОтпуска.ДатаОкончания Тогда
				ДатаОкончанияДоп = ВыборкаПоВидуОтпуска.ДатаОкончания; 
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ПолноеНаименованиеОтпуска) Тогда
				СтрокаВидДопОтпуска = СтрокаВидДопОтпуска + ", " + Строка(ВыборкаПоВидуОтпуска.ПолноеНаименованиеОтпуска);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.Продолжительность) Тогда
				ПродолжительностьДоп = ПродолжительностьДоп + ВыборкаПоВидуОтпуска.Продолжительность;
			КонецЕсли;
			
			// Заполнение параметров приложения к приказу.
			ПараметрыДопОтпуска = Новый Структура;
			ПараметрыДопОтпуска.Вставить("НомерОтпуска", НомерДополнительногоОтпуска);
			ПараметрыДопОтпуска.Вставить("НазваниеОтпуска", Строка(ВыборкаПоВидуОтпуска.ПолноеНаименованиеОтпуска));
			ПараметрыДопОтпуска.Вставить("Продолжительность", ВыборкаПоВидуОтпуска.Продолжительность);
			ПараметрыДопОтпуска.Вставить("Основание", ВыборкаПоВидуОтпуска.Основание);
			ПараметрыДопОтпуска.Вставить("УказанПериодЗаКоторыйПредоставляетсяОтпуск", ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск));
			
			ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.ДатаНачала, "ДЛФ=DD");
			ПараметрыДопОтпуска.Вставить("ДатаНачалаЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
			ПараметрыДопОтпуска.Вставить("ДатаНачалаМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаНачала),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
			
			ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.ДатаОкончания, "ДЛФ=DD");
			ПараметрыДопОтпуска.Вставить("ДатаОкончанияЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
			ПараметрыДопОтпуска.Вставить("ДатаОкончанияМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.ДатаОкончания),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
			
			ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск, "ДЛФ=DD");
			ПараметрыДопОтпуска.Вставить("ДатаНачалаПериодаЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
			ПараметрыДопОтпуска.Вставить("ДатаНачалаПериодаМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
			
			ПредставлениеДаты  = Формат(ВыборкаПоВидуОтпуска.КонецПериодаЗаКоторыйПредоставляетсяОтпуск, "ДЛФ=DD");
			ПараметрыДопОтпуска.Вставить("ДатаОкончанияПериодаЧисло", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.КонецПериодаЗаКоторыйПредоставляетсяОтпуск), СокрЛП(Лев(ПредставлениеДаты,2)), "      "));
			ПараметрыДопОтпуска.Вставить("ДатаОкончанияПериодаМесяцГод", ?(ЗначениеЗаполнено(ВыборкаПоВидуОтпуска.КонецПериодаЗаКоторыйПредоставляетсяОтпуск),  СокрЛП(Прав(ПредставлениеДаты, СтрДлина(ПредставлениеДаты)-2)), "                     г."));
			
			Параметры.ДополнительныеОтпуска.Добавить(ПараметрыДопОтпуска);
			
			НомерДополнительногоОтпуска = НомерДополнительногоОтпуска + 1;
			
		КонецЦикла;
		
		ПредставлениеДатыНачалаДопОтпуска  = Формат(ДатаНачалаДоп, "ДЛФ=DD");
		Параметры.ДатаСДопЧисло = ?(ЗначениеЗаполнено(ДатаНачалаДоп), СокрЛП(Лев(ПредставлениеДатыНачалаДопОтпуска,2)), "      ");
		Параметры.ДатаСДопМесяцГод = ?(ЗначениеЗаполнено(ДатаНачалаДоп),  СокрЛП(Прав(ПредставлениеДатыНачалаДопОтпуска, СтрДлина(ПредставлениеДатыНачалаДопОтпуска)-2)), "                     г.");
		
		ПредставлениеДатыОкончанияДопОтпуска  = Формат(ДатаОкончанияДоп, "ДЛФ=DD");
		Параметры.ДатаПоДопЧисло = ?(ЗначениеЗаполнено(ДатаОкончанияДоп), СокрЛП(Лев(ПредставлениеДатыОкончанияДопОтпуска,2)), "      ");
		Параметры.ДатаПоДопМесяцГод = ?(ЗначениеЗаполнено(ДатаОкончанияДоп),  СокрЛП(Прав(ПредставлениеДатыОкончанияДопОтпуска, СтрДлина(ПредставлениеДатыОкончанияДопОтпуска)-2)), "                     г.");
		
		Если ЗначениеЗаполнено(ПродолжительностьДоп) Тогда
			Параметры.ПродолжительностьДоп = ПродолжительностьДоп;
			ПродолжительностьВсего = ПродолжительностьВсего + ПродолжительностьДоп;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПродолжительностьВсего) Тогда
			Параметры.ПродолжительностьВсего = ПродолжительностьВсего;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаВидДопОтпуска) Тогда
			СтрокаВидДопОтпуска = Прав(СтрокаВидДопОтпуска,СтрДлина(СтрокаВидДопОтпуска) - 2);
			Параметры.ВидДопОтпуска = СтрокаВидДопОтпуска;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаНачалаВсего) ИЛИ (ЗначениеЗаполнено(ДатаНачалаДоп) И ДатаНачалаВсего > ДатаНачалаДоп) Тогда
		    ДатаНачалаВсего = ДатаНачалаДоп;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаОкончанияВсего) ИЛИ (ЗначениеЗаполнено(ДатаОкончанияДоп) И ДатаОкончанияВсего < ДатаОкончанияДоп) Тогда
		    ДатаОкончанияВсего = ДатаОкончанияДоп;
		КонецЕсли;
		
		ПредставлениеДатыНачалаВсего  = Формат(ДатаНачалаВсего, "ДЛФ=DD");
		Параметры.ДатаНачалаВсегоЧисло = ?(ЗначениеЗаполнено(ДатаНачалаВсего), СокрЛП(Лев(ПредставлениеДатыНачалаВсего,2)), "      ");
		Параметры.ДатаНачалаВсегоМесяцГод = ?(ЗначениеЗаполнено(ДатаНачалаВсего),  СокрЛП(Прав(ПредставлениеДатыНачалаВсего, СтрДлина(ПредставлениеДатыНачалаВсего)-2)), "                     г.");
		
		ПредставлениеДатыОкончанияВсего  = Формат(ДатаОкончанияВсего, "ДЛФ=DD");
		Параметры.ДатаОкончанияВсегоЧисло = ?(ЗначениеЗаполнено(ДатаОкончанияВсего), СокрЛП(Лев(ПредставлениеДатыОкончанияВсего,2)), "      ");
		Параметры.ДатаОкончанияВсегоМесяцГод = ?(ЗначениеЗаполнено(ДатаОкончанияВсего),  СокрЛП(Прав(ПредставлениеДатыОкончанияВсего, СтрДлина(ПредставлениеДатыОкончанияВсего)-2)), "                     г.");
		
		МассивПараметров.Добавить(Параметры);
		
	КонецЦикла;
	
	Возврат МассивПараметров;
КонецФункции 

Функция СтруктураПараметровПриказаТ6()
	Параметры = КадровыйУчет.ПараметрыКадровогоПриказа();
	
	Параметры.Вставить("НазваниеОрганизации");				
	Параметры.Вставить("КодПоОКПО");
    Параметры.Вставить("Работник");						
	Параметры.Вставить("НомерДок");	
	Параметры.Вставить("ДатаДок");	
	Параметры.Вставить("ТабельныйНомер");
	Параметры.Вставить("Подразделение");							
	Параметры.Вставить("Должность");
	Параметры.Вставить("НачалоПериодаЗаКоторыйПредоставляетсяОтпуск");	
	Параметры.Вставить("КонецПериодаЗаКоторыйПредоставляетсяОтпуск");
	Параметры.Вставить("Продолжительность");
	Параметры.Вставить("ДатаНачалаЧисло");
	Параметры.Вставить("ДатаНачалаМесяцГод"); 
	Параметры.Вставить("ДатаОкончанияЧисло"); 
	Параметры.Вставить("ДатаОкончанияМесяцГод");  
	Параметры.Вставить("ПродолжительностьДоп");
	Параметры.Вставить("ДатаСДопЧисло");
	Параметры.Вставить("ДатаСДопМесяцГод");
	Параметры.Вставить("ДатаПоДопЧисло");
	Параметры.Вставить("ДатаПоДопМесяцГод");
    Параметры.Вставить("ВидДопОтпуска");						
	Параметры.Вставить("ПродолжительностьВсего");
	Параметры.Вставить("ДатаНачалаВсегоЧисло");
	Параметры.Вставить("ДатаНачалаВсегоМесяцГод");
	Параметры.Вставить("ДатаОкончанияВсегоЧисло");
	Параметры.Вставить("ДатаОкончанияВсегоМесяцГод");
	
	Параметры.Вставить("Основание");
	
	Параметры.Вставить("ДолжностьРуководителя");
	Параметры.Вставить("РуководительРасшифровкаПодписи");	
	
	Параметры.Вставить("ДополнительныеОтпуска", Новый Массив);

	Возврат Параметры;
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли