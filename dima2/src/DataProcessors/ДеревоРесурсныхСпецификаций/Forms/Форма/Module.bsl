#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ДеревоДата = ТекущаяДатаСеанса();
	ДеревоВыводитьВыходныеИзделия = Истина;
	ДеревоВыводитьМатериалы = Истина;
	ДеревоВыводитьТрудозатраты = Истина;
	ДеревоВыводитьЭтапы = Истина;
	
	УстановитьПараметрыСпискаДоступныхСпецификаций(Неопределено);
	
	Если Параметры.Свойство("Номенклатура") Тогда
		Если Параметры.Номенклатура.Этогруппа Тогда
			Возврат;
		КонецЕсли;
		ДеревоНоменклатура = Параметры.Номенклатура;
		
		// Проверяем использование характеристик для номенклатуры.
		РезультатПроверки = Справочники.Номенклатура.ХарактеристикаИУпаковкаПринадлежатВладельцу(ДеревоНоменклатура,
			Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
		
		НоменклатураХарактеристикаИспользуется = РезультатПроверки.ХарактеристикиИспользуются;
	КонецЕсли;
	
	Если Параметры.Свойство("ХарактеристикаНоменклатуры") Тогда
		ДеревоХарактеристикаНоменклатуры = Параметры.ХарактеристикаНоменклатуры;
	КонецЕсли;
	
	Если Параметры.Свойство("Спецификация") Тогда
		Если Параметры.Спецификация.Этогруппа Тогда
			Возврат;
		КонецЕсли;
		Спецификация = Параметры.Спецификация;
	КонецЕсли;
	
	РазузловыватьПолуфабрикаты = Истина;
	
	// Режим открытия из спецификации заказа.
	Если Параметры.Свойство("АдресВХранилище") Тогда
		
		АдресВХранилище						= Параметры.АдресВХранилище;
		КоличествоВыходногоИзделия			= Параметры.Количество;
		КоличествоУпаковокВыходногоИзделия	= Параметры.КоличествоУпаковок;
		УпаковкаВыходногоИзделия			= Параметры.Упаковка;
		КлючСвязи							= Параметры.КлючСвязи;
		
		РазузловыватьПолуфабрикаты = Ложь;
		
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ЗакрыватьПриЗакрытииВладельца = Истина;
		Элементы.ДеревоСпецификаций.ТолькоПросмотр = Истина;
		
		Элементы.СписокДоступныхСпецификаций.Видимость = Ложь;
		
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("СформироватьПриОткрытии") Тогда
		СформироватьДеревоСпецификацийНаСервере();
	КонецЕсли;
	
	УправлениеДаннымиОбИзделиях.НастроитьУсловноеОформлениеДереваСпецификаций(УсловноеОформление);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(АдресВХранилище) И Не ЗначениеЗаполнено(ДеревоНоменклатура) И Не ЗначениеЗаполнено(Спецификация) Тогда
		ТекстПредупреждения = НСтр("ru='Дерево спецификаций строится в контексте номенклатуры, ресурсной спецификации или спецификации заказа.';uk='Дерево специфікацій будується в контексті номенклатури, ресурсної специфікації або специфікації замовлення.'");
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.РесурсныеСпецификации.Форма.ВыборДействующихСпецификаций" Тогда
		
		ТекущиеДанные.ПолучитьЭлементы().Очистить();
		ТекущиеДанные.Спецификация = ВыбранноеЗначение;
		ТекущиеДанные.ЕстьСпецификация = ЗначениеЗаполнено(ТекущиеДанные.Спецификация);
		
		Если ТекущиеДанные.ЕстьСпецификация Тогда
			ДеревоСпецификацийПриИзмененииНаСервере(ТекущиеДанные.Идентификатор);
		КонецЕсли;
		
	КонецЕсли;
	
	РазвернутьДеревоСпецификаций(ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОсновныеСпецификации" Тогда
		Элементы.СписокДоступныхСпецификаций.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьЭтапыПриИзменении(Элемент)
	
	ОбновитьДанные();

КонецПроцедуры

&НаКлиенте
Процедура ВыводитьВыходныеИзделияПриИзменении(Элемент)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыводитьМатериалыПриИзменении(Элемент)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьТрудозатратыПриИзменении(Элемент)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийСпецификацияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	ТекущиеДанные.ЕстьСпецификация = Ложь;
	ТекущиеДанные.ПолучитьЭлементы().Очистить();
	
	Если ТипЗнч(ТекущиеДанные.Спецификация) = Тип("СправочникСсылка.РесурсныеСпецификации") и ЗначениеЗаполнено(ТекущиеДанные.Спецификация) Тогда
		
		ТекущиеДанные.ЕстьСпецификация = Истина;
		ДеревоСпецификацийПриИзмененииНаСервере(ТекущиеДанные.Идентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Номенклатура", ТекущиеДанные.Номенклатура);
	ПараметрыОткрытия.Вставить("Характеристика", ТекущиеДанные.Характеристика);
	ПараметрыОткрытия.Вставить("ВсеСпецификации", Истина);
	
	ОткрытьФорму("Справочник.РесурсныеСпецификации.Форма.ВыборДействующихСпецификаций", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДеревоСпецификацийНоменклатура" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) И 
		ТипЗнч(Элемент.ТекущиеДанные.Номенклатура) <> Тип("Строка") Тогда
		
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийПриАктивизацииСтроки(Элемент)
	
	Если Не ЗначениеЗаполнено(АдресВХранилище) Тогда
		ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиДерева",0.2,Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДоступныхСпецификаций

&НаКлиенте
Процедура СписокДоступныхСпецификацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокДоступныхСпецификаций.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(,ТекущиеДанные.Спецификация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОбновитьДанные(Команда)
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДереваСпецификации(Команда)
	
	ПараметрКоманды = Новый Массив;
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.РесурсныеСпецификации.ПустаяСсылка"));
	
	ИменаМакетов = "ДеревоСпецификаций";
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.ДеревоРесурсныхСпецификаций",
		ИменаМакетов,
		ПараметрКоманды,
		ЭтаФорма,
		ПолучитьПараметры());
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОсновнойСпецификацией(Команда)
	
	ТекущиеДанныеДерево = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	ТекущиеДанныеСписокДоступных = Элементы.СписокДоступныхСпецификаций.ТекущиеДанные;
	
	Если ТекущиеДанныеДерево = Неопределено или ТекущиеДанныеСписокДоступных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанныеСписокДоступных.Спецификация) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОшибки = Новый Структура;
	СвойстваСпецификации = ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(ТекущиеДанныеСписокДоступных.Спецификация, "Статус");
	
	Если НЕ УправлениеДаннымиОбИзделияхКлиентСервер.СпецификациюМожноНазначитьОсновной(СвойстваСпецификации, СтруктураОшибки) Тогда
		ПоказатьПредупреждение(Неопределено, СтруктураОшибки.ТекстОшибки,, НСтр("ru='Назначить основной спецификацией';uk='Призначити основною специфікацією'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Спецификация, Номенклатура, Характеристика", 
		ТекущиеДанныеСписокДоступных.Спецификация, ТекущиеДанныеДерево.Номенклатура, ТекущиеДанныеДерево.Характеристика);
	
	ОткрытьФорму("РегистрСведений.ОсновныеСпецификации.Форма.НазначитьОсновнойСпецификацией", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРазвернутьВсе(Команда)
	
	РазвернутьВсе();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСвернутьВсе(Команда)
	
	СвернутьВсе();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьПараметры()
	
	ДеревоСпецификацийЗначение = РеквизитФормыВЗначение("ДеревоСпецификаций");
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("АдресВХранилище", ПоместитьВоВременноеХранилище(ДеревоСпецификацийЗначение, УникальныйИдентификатор));
	
	Возврат ПараметрыПечати;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДанные()

	СформироватьДеревоСпецификацийНаСервере();
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		РазвернутьДеревоСпецификаций(ТекущиеДанные.Идентификатор);
	Иначе
		РазвернутьДеревоСпецификаций();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиДерева()
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
			НовыйОтборНоменклатура = ТекущиеДанные.Номенклатура;
		Иначе
			НовыйОтборНоменклатура = Неопределено;
		КонецЕсли;
		
		НовыйОтборХарактеристика = ТекущиеДанные.Характеристика;
		
	Иначе
		НовыйОтборНоменклатура = Неопределено;
		НовыйОтборХарактеристика = Неопределено;
	КонецЕсли;
	
	ТекущийОтборНоменклатура = СписокДоступныхСпецификаций.Параметры.Элементы.Найти("Номенклатура").Значение;
	ТекущийОтборХарактеристика = СписокДоступныхСпецификаций.Параметры.Элементы.Найти("Характеристика").Значение;
	
	Если НовыйОтборНоменклатура <> ТекущийОтборНоменклатура или НовыйОтборХарактеристика <> ТекущийОтборХарактеристика Тогда
		УстановитьПараметрыСпискаДоступныхСпецификаций(НовыйОтборНоменклатура, НовыйОтборХарактеристика);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСпецификацийНаСервере()
	
	Дерево = РеквизитФормыВЗначение("ДеревоСпецификаций");
	
	ПараметрыДерева = Новый Структура;
	ПараметрыДерева.Вставить("Дата", ДеревоДата);
	ПараметрыДерева.Вставить("ВыводитьЭтапы", ДеревоВыводитьЭтапы);
	ПараметрыДерева.Вставить("ВыводитьВыходныеИзделия",	ДеревоВыводитьВыходныеИзделия);
	ПараметрыДерева.Вставить("ВыводитьМатериалы", ДеревоВыводитьМатериалы);
	ПараметрыДерева.Вставить("ВыводитьТрудозатраты", ДеревоВыводитьТрудозатраты);
	ПараметрыДерева.Вставить("Спецификация", Спецификация);
	ПараметрыДерева.Вставить("РазузловыватьПолуфабрикаты", РазузловыватьПолуфабрикаты);
	
	ПараметрыДерева.Вставить("АдресВХранилище",	АдресВХранилище);
	ПараметрыДерева.Вставить("КоличествоВыходногоИзделия", КоличествоВыходногоИзделия);
	ПараметрыДерева.Вставить("КоличествоУпаковокВыходногоИзделия", КоличествоУпаковокВыходногоИзделия);
	ПараметрыДерева.Вставить("УпаковкаВыходногоИзделия", УпаковкаВыходногоИзделия);
	ПараметрыДерева.Вставить("КлючСвязи", КлючСвязи);
	
	УправлениеДаннымиОбИзделиях.ПостроитьДеревоСпецификаций(ПараметрыДерева, Дерево, ДеревоНоменклатура, ДеревоХарактеристикаНоменклатуры);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСпецификаций");
	
КонецПроцедуры

&НаКлиенте
Функция НайтиСтрокуПоИдентификатору(КоллекцияЭлементовДерева, Идентификатор)
	
	Для Каждого Строка из КоллекцияЭлементовДерева Цикл
		
		Если Строка.Идентификатор = Идентификатор Тогда
			Возврат Строка;
		Иначе
			Результат = НайтиСтрокуПоИдентификатору(Строка.ПолучитьЭлементы(), Идентификатор);
			Если Результат <> Неопределено Тогда
				Возврат Результат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура УстановитьПараметрыСпискаДоступныхСпецификаций(ТекущаяНоменклатура, ТекущаяХарактеристика = Неопределено)
	
	СписокДоступныхСпецификаций.Параметры.УстановитьЗначениеПараметра("Номенклатура", ТекущаяНоменклатура);
	СписокДоступныхСпецификаций.Параметры.УстановитьЗначениеПараметра("Характеристика", ?(ЗначениеЗаполнено(ТекущаяХарактеристика), ТекущаяХарактеристика, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоСпецификаций(Идентификатор = Неопределено)
	
	ТекущиеДанные = Элементы.ДеревоСпецификаций.ТекущиеДанные;
	
	// Разворачиваем дерево и установливаем текущую строку.
	Для Каждого Строка из ДеревоСпецификаций.ПолучитьЭлементы() Цикл
		Элементы.ДеревоСпецификаций.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ТекущаяСтрока = НайтиСтрокуПоИдентификатору(ДеревоСпецификаций.ПолучитьЭлементы(), Идентификатор);
		Если ТекущаяСтрока <> Неопределено Тогда
			Элементы.ДеревоСпецификаций.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоСпецификацийПриИзмененииНаСервере(Идентификатор)
	
	Дерево = РеквизитФормыВЗначение("ДеревоСпецификаций");
	
	СтрокаСпецификации = Дерево.Строки.Найти(Идентификатор, "Идентификатор", Истина);
	
	// Проверка спецификации.
	
	Отказ = Ложь;
	УправлениеДаннымиОбИзделиях.ЗаполнитьКоличествоВыходногоИзделияСпецификации(Новый Структура, СтрокаСпецификации.Спецификация,
		СтрокаСпецификации.Номенклатура, СтрокаСпецификации.Характеристика, Отказ);
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Изделие по выбранной спецификации не производится.';uk='Виріб за вибраною специфікацію не виробляється.'"),
			,
			"ДеревоСпецификаций");
		
		Возврат
	КонецЕсли;
	
	ПараметрыДерева = Новый Структура("Дата, ВыводитьЭтапы, ВыводитьВыходныеИзделия, ВыводитьТрудозатраты, Спецификация, РазузловыватьПолуфабрикаты");
	
	ПараметрыДерева.Дата						= ДеревоДата;
	ПараметрыДерева.ВыводитьЭтапы				= ДеревоВыводитьЭтапы;
	ПараметрыДерева.ВыводитьВыходныеИзделия		= ДеревоВыводитьВыходныеИзделия;
	ПараметрыДерева.ВыводитьТрудозатраты		= ДеревоВыводитьТрудозатраты;
	ПараметрыДерева.Спецификация				= Справочники.РесурсныеСпецификации.ПустаяСсылка();
	ПараметрыДерева.РазузловыватьПолуфабрикаты	= РазузловыватьПолуфабрикаты;
	
	ПараметрыДерева.Вставить("АдресВХранилище", Неопределено);
	
	ИспользованныеСпецификации = Новый Массив;
	
	Если ИспользованныеСпецификации.Найти(СтрокаСпецификации.Спецификация) = Неопределено Тогда
		
		УправлениеДаннымиОбИзделиях.ЗаполнитьСтрокиДерева(ПараметрыДерева, Дерево, СтрокаСпецификации, ИспользованныеСпецификации);
		ЗначениеВРеквизитФормы(Дерево, "ДеревоСпецификаций");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе()

	СтрокиДерева = ДеревоСпецификаций.ПолучитьЭлементы();
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.ДеревоСпецификаций.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла; 

КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе()

	СтрокиДерева = ДеревоСпецификаций.ПолучитьЭлементы();
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.ДеревоСпецификаций.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
	КонецЦикла; 

КонецПроцедуры

#КонецОбласти
