#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда	

#Область СлужебныеПроцедурыИФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка") Тогда
		ДанныеДокументов = ДанныеДокументовРасчетаСреднегоЗаработкаФСС(МассивОбъектов);
		ТабличныйДокумент = ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати,,,КодЯзыкаПечать);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасчетСреднегоЗаработка", НСтр("ru='Расчет среднего заработка';uk='Розрахунок середнього заробітку'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати, ВыводитьЗаголовок = Истина, КомпактныйРежим = Ложь, КодЯзыкаПечать) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоЗаработкаФСС";
	
	Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
		
		//Если ДанныеДокумента.ПараметрыРасчета.ПорядокРасчета = ПредопределенноеЗначение("Перечисление.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2010") Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Печать расчета среднего заработка по правилам 2010 года не поддерживается.'"));
		//	Продолжить;
		//КонецЕсли;
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если КомпактныйРежим Тогда
			ВывестиТабличныйДокументРасчетаСреднегоЗаработкаКомпактный(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, КодЯзыкаПечать);
		иначе	
			ВывестиТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, ВыводитьЗаголовок, КодЯзыкаПечать);
		КонецЕсли;
		
		Обработки.ПечатьРасчетаСреднегоЗаработка.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.РеквизитыДокумента.Ссылка, ДанныеДокумента.РеквизитыДокумента.Сотрудник);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции 

// Подготавливает табличный документ с печатными формами для массива ссылок.
//
// Параметры:
//	МассивСсылок 		- массив ссылок на документы поддерживающие печать среднего заработка.
//	ВыводитьЗаголовок 	- признак того, что надо формировать полную печатную форму.
//
// Возвращаемое значение - структура в которой содержатся
// 		- ТабличныйДокумент, табличный документ с областями для каждой ссылки из массива ссылок.
// 		- ОбъектыПечати, соответствие, ключом которой является ссылка, а значением - имя области табличного документа,
// 			в которой хранится печатная форма для этой ссылки.
//
Функция ОбластиДляВстраивания(ДанныеДокументов, ВыводитьЗаголовок = Ложь, КомпактныйРежим = Ложь, КодЯзыкаПечать) Экспорт
	
	ОбъектыПечати = Обработки.ПечатьРасчетаСреднегоЗаработка.ОбъектыПечатиДляВстраиваемыхОбластей();
	
	ТабличныйДокумент = ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати, ВыводитьЗаголовок, КомпактныйРежим, КодЯзыкаПечать);
	
	Возврат Новый Структура("ОбъектыПечати,ТабличныйДокумент", ОбъектыПечати, ТабличныйДокумент);
	
КонецФункции

Процедура ВывестиТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, ВыводитьЗаголовок, КодЯзыкаПечать)
	
	ОбластиМакета = ОбластиМакета(ДанныеДокумента.ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми, ДанныеДокумента.ПараметрыРасчета.ПрименятьПредельнуюВеличину И НЕ ДанныеДокумента.ПараметрыРасчета.НеполныйРасчетныйПериод, КодЯзыкаПечать);

	Если ВыводитьЗаголовок Тогда
		ВывестиШапку(ТабличныйДокумент, ОбластиМакета.Шапка, ДанныеДокумента.РеквизитыДокумента, ДанныеДокумента.КадровыеДанныеСотрудника, ДанныеДокумента.ПараметрыРасчета.РасчетныеМесяцы, КодЯзыкаПечать);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокНачислений);
	
	ВывестиТаблицуЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	
	ТабличныйДокумент.Вывести(ОбластиМакета.РасчетСреднегоЗаработкаЗаголовок);
	
	ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	
	ВывестиМРОТ(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	
КонецПроцедуры

Процедура ВывестиТабличныйДокументРасчетаСреднегоЗаработкаКомпактный(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, КодЯзыкаПечать)
	
	ОбластиМакета = ОбластиМакета(ДанныеДокумента.ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми, ДанныеДокумента.ПараметрыРасчета.ПрименятьПредельнуюВеличину, КодЯзыкаПечать);
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ПустойЗаголовокНачислений);
	ВывестиТаблицуЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	
КонецПроцедуры

Процедура ВывестиШапку(ТабличныйДокумент, ОбластьШапка, РеквизитыДокумента, КадровыеДанныеСотрудника, РасчетныеМесяцы, КодЯзыкаПечать)
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("СинонимДокумента", 			Формат(РеквизитыДокумента.Ссылка.Метаданные().Синоним, "Л="+КодЯзыкаПечать));
	ЗначенияПараметров.Вставить("НомерДокумента", 				ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыДокумента.НомерДокумента, Истина, Истина));
	ЗначенияПараметров.Вставить("ДатаДокумента", 				Формат(РеквизитыДокумента.ДатаДокумента, "Л="+КодЯзыкаПечать+";ДЛФ=DD"));
	ЗначенияПараметров.Вставить("ДатаНачалаОтсутствия", 		Формат(РеквизитыДокумента.ДатаНачалаОтсутствия, "Л="+КодЯзыкаПечать+";ДЛФ=D"));
	ЗначенияПараметров.Вставить("ДатаОкончанияОтсутствия", 		Формат(РеквизитыДокумента.ДатаОкончанияОтсутствия, "Л="+КодЯзыкаПечать+";ДЛФ=D"));
	ЗначенияПараметров.Вставить("НаименованиеОрганизации", 		?(ЗначениеЗаполнено(РеквизитыДокумента.ПолноеНаименованиеОрганизации), РеквизитыДокумента.ПолноеНаименованиеОрганизации, РеквизитыДокумента.НаименованиеОрганизации)); 	
	ЗначенияПараметров.Вставить("ВидЗанятости", 				КадровыеДанныеСотрудника.ВидЗанятости);
	ЗначенияПараметров.Вставить("Подразделение", 				КадровыеДанныеСотрудника.Подразделение);
	ЗначенияПараметров.Вставить("Должность", 					КадровыеДанныеСотрудника.Должность);
	ЗначенияПараметров.Вставить("ФИОРаботника", 				КадровыеДанныеСотрудника.ФИОПолные);
	ЗначенияПараметров.Вставить("ТабельныйНомер", 				ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(КадровыеДанныеСотрудника.ТабельныйНомер, Истина, Истина));
	//ЗначенияПараметров.Вставить("РасчетныеГоды", 				ОписаниеРасчетныхЛет(РасчетныеГоды));
	ЗначенияПараметров.Вставить("РасчетныеМесяцы", 				ОписаниеРасчетныхМесяцев(РасчетныеМесяцы, КодЯзыкаПечать));
	ЗначенияПараметров.Вставить("НомерЛисткаНетрудоспособности",РеквизитыДокумента.НомерЛисткаНетрудоспособности);
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластьШапка);
КонецПроцедуры

Процедура ВывестиТаблицуЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать)
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокТаблицы);
	
	//Если ДанныеДокумента.ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми Тогда
	//	ТабличныйДокумент.Присоединить(ОбластиМакета.ЗаголовокТаблицыДнейБолезниУходаЗаДетьми);
	//КонецЕсли;
	
	
	ЗначенияПараметров = Новый Структура;
	
	Для каждого РасчетныйМесяц Из ДанныеДокумента.ПараметрыРасчета.РасчетныеМесяцы Цикл
		
		ЗаработокЗаМесяц = 0;
		
		СтрокаПоМесяцу = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеДокумента.ДанныеРасчетаСреднего, Новый Структура("РасчетныйМесяц", РасчетныйМесяц));

		Если СтрокаПоМесяцу = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого СтрокаПоСтрахователю Из СтрокаПоМесяцу.Страхователи Цикл
			Если НЕ СтрокаПоСтрахователю.СтороннийСтрахователь Тогда
				ЗначенияПараметров.Очистить();
				ЗначенияПараметров.Вставить("РасчетныйМесяц",					 Формат(СтрокаПоМесяцу.РасчетныйМесяц,  "Л="+КодЯзыкаПечать+";ДФ='ММММ гггг '"));
				ЗначенияПараметров.Вставить("Заработок", 						 СтрокаПоСтрахователю.Заработок);
				ЗначенияПараметров.Вставить("ДнейБолезниУходаЗаДетьми", 		 СтрокаПоСтрахователю.ДнейБолезниУходаЗаДетьми);
				ЗначенияПараметров.Вставить("Страхователь", 					 СтрокаПоСтрахователю.Страхователь);
				ЗначенияПараметров.Вставить("ПредельнаяВеличина", 				 СтрокаПоМесяцу.ПредельнаяВеличина);
				ДанныеСтрокиВремени = ДанныеДокумента.ПараметрыРасчета.ДанныеВремени.Найти(СтрокаПоМесяцу.РасчетныйМесяц, "Период");
				ЗначенияПараметров.Вставить("КалендарныхДней", 					 ?(ДанныеСтрокиВремени = Неопределено, 0, ДанныеСтрокиВремени.ОтработаноДнейКалендарных));
				ДанныеСтрокиНачислений = ДанныеДокумента.ПараметрыРасчета.ДанныеНачислений.Найти(СтрокаПоМесяцу.РасчетныйМесяц, "Период");
				ЗначенияПараметров.Вставить("УчтеннаяСумма", 				 ?(ДанныеСтрокиНачислений = Неопределено, 0,ДанныеСтрокиНачислений.УчтеннаяСумма));
				ЗначенияПараметров.Вставить("СуммаСУчетомОграничений", 	     ?(ДанныеСтрокиНачислений = Неопределено, 0,ДанныеСтрокиНачислений.СуммаСУчетомОграничений));
				ЗначенияПараметров.Вставить("ДнейИсключаемыхИзРасчетногоПериода",СтрокаПоСтрахователю.ДнейБолезниУходаЗаДетьми);
				ВывестиСтрокуПоСтрахователю(ТабличныйДокумент, ДанныеДокумента, ОбластиМакета, ЗначенияПараметров)
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаПоМесяцу.Страхователи.Количество() = 0 Тогда
			ЗначенияПараметров.Очистить();
			ЗначенияПараметров.Вставить("РасчетныйМесяц", 					 Формат(СтрокаПоМесяцу.РасчетныйМесяц,  "Л="+КодЯзыкаПечать+";ДФ='ММММ гггг '"));
			ЗначенияПараметров.Вставить("Заработок", 						 СтрокаПоМесяцу.Заработок);
			ЗначенияПараметров.Вставить("ДнейБолезниУходаЗаДетьми", 0);
			ЗначенияПараметров.Вставить("ПредельнаяВеличина", 				 СтрокаПоМесяцу.ПредельнаяВеличина);
			ДанныеСтрокиВремени = ДанныеДокумента.ПараметрыРасчета.ДанныеВремени.Найти(СтрокаПоМесяцу.РасчетныйМесяц, "Период");
			ЗначенияПараметров.Вставить("КалендарныхДней", 					 ?(ДанныеСтрокиВремени = Неопределено, 0, ДанныеСтрокиВремени.ОтработаноДнейКалендарных));
			ДанныеСтрокиНачислений = ДанныеДокумента.ПараметрыРасчета.ДанныеНачислений.Найти(СтрокаПоМесяцу.РасчетныйМесяц, "Период");
			ЗначенияПараметров.Вставить("УчтеннаяСумма", 				 	 ?(ДанныеСтрокиНачислений = Неопределено, 0,ДанныеСтрокиНачислений.УчтеннаяСумма));
			ЗначенияПараметров.Вставить("СуммаСУчетомОграничений", 	     	 ?(ДанныеСтрокиНачислений = Неопределено, 0,ДанныеСтрокиНачислений.СуммаСУчетомОграничений));
			ЗначенияПараметров.Вставить("ДнейИсключаемыхИзРасчетногоПериода",СтрокаПоМесяцу.ДнейБолезниУходаЗаДетьми);
			ВывестиСтрокуПоСтрахователю(ТабличныйДокумент, ДанныеДокумента, ОбластиМакета, ЗначенияПараметров);
		КонецЕсли;
		
		
	КонецЦикла;
	
	ДанныеОВремени = ДанныеДокумента.ПараметрыРасчета.ДанныеВремени.Скопировать();
	ДанныеОВремени.Свернуть("ФизическоеЛицо", "ОтработаноДнейКалендарных, ДнейБолезниУходаЗаДетьми");
	ДанныеСтрокиНачислений = ДанныеДокумента.ПараметрыРасчета.ДанныеНачислений.Скопировать();
	ДанныеСтрокиНачислений.Свернуть("ФизическоеЛицо", "СуммаСУчетомОграничений, УчтеннаяСумма, Сумма");
	ЗначенияПараметров.Вставить("ВсегоЗаработка", Формат(?(ДанныеСтрокиНачислений = Неопределено ИЛИ ДанныеСтрокиНачислений.Количество() = 0, 0,ДанныеСтрокиНачислений[0].СуммаСУчетомОграничений), "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗначенияПараметров.Вставить("УчтеннаяСумма", Формат(?(ДанныеСтрокиНачислений = Неопределено ИЛИ ДанныеСтрокиНачислений.Количество() = 0, 0,ДанныеСтрокиНачислений[0].УчтеннаяСумма), "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗначенияПараметров.Вставить("СуммаСУчетомОграничений", Формат(?(ДанныеСтрокиНачислений = Неопределено ИЛИ ДанныеСтрокиНачислений.Количество() = 0, 0,ДанныеСтрокиНачислений[0].СуммаСУчетомОграничений), "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗначенияПараметров.Вставить("ДнейИсключаемыхИзРасчетногоПериода", Формат(?(ДанныеОВремени = Неопределено ИЛИ ДанныеОВремени.Количество() = 0, 0,ДанныеОВремени[0].ДнейБолезниУходаЗаДетьми), "ЧЦ=4; ЧН=-"));
	ЗначенияПараметров.Вставить("КалендарныхДней", Формат(?(ДанныеОВремени = Неопределено ИЛИ ДанныеОВремени.Количество() = 0, 0,ДанныеОВремени[0].ОтработаноДнейКалендарных), "ЧН=-"));
	ЗначенияПараметров.Вставить("Заработок", Формат(?(ДанныеСтрокиНачислений = Неопределено ИЛИ ДанныеСтрокиНачислений.Количество() = 0, 0,ДанныеСтрокиНачислений[0].Сумма), "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	
	ЗаполнитьЗначенияСвойств(ОбластиМакета.ТекущийИтог.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.ТекущийИтог);
	
	Если ДанныеДокумента.ПараметрыРасчета.УчитыватьЗаработокПредыдущихСтрахователей И ДанныеДокумента.ПараметрыРасчета.ДанныеСтрахователей.Количество() <> 0 Тогда
		ВывестиДополнительнуюТаблицуСтрахователей(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(ОбластиМакета.ПодвалТаблицыЗаработка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.ПодвалТаблицыЗаработка);

КонецПроцедуры

Процедура ВывестиДополнительнуюТаблицуСтрахователей(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать)
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ПустойЗаголовокНачислений);
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокНачисленийСтрахователей);
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокТаблицыСтрахователь);
	
	ЗначенияПараметров = Новый Структура;
	
	Для каждого РасчетныйМесяц Из ДанныеДокумента.ПараметрыРасчета.РасчетныеМесяцы Цикл
		ЗаработокЗаМесяц = 0;
		
		СтрокаПоМесяцу = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеДокумента.ДанныеРасчетаСреднего, Новый Структура("РасчетныйМесяц", РасчетныйМесяц));
		
		Если СтрокаПоМесяцу = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого СтрокаПоСтрахователю Из СтрокаПоМесяцу.Страхователи Цикл
			Если СтрокаПоСтрахователю.СтороннийСтрахователь Тогда
				ЗначенияПараметров.Очистить();
				ЗначенияПараметров.Вставить("РасчетныйМесяц",					 Формат(СтрокаПоМесяцу.РасчетныйМесяц, "Л="+КодЯзыкаПечать+";ДФ='ММММ гггг '"));
				ЗначенияПараметров.Вставить("Заработок", 						 СтрокаПоСтрахователю.Заработок);
				ЗначенияПараметров.Вставить("Страхователь", 					 СтрокаПоСтрахователю.Страхователь);
				ЗначенияПараметров.Вставить("ДнейИсключаемыхИзРасчетногоПериода",СтрокаПоСтрахователю.ДнейБолезниУходаЗаДетьми);
				ДанныеСтрокиВремени = ДанныеДокумента.ПараметрыРасчета.ДанныеВремени.Найти(СтрокаПоМесяцу.РасчетныйМесяц, "Период");
				ЗначенияПараметров.Вставить("КалендарныхДней", 					 ?(ДанныеСтрокиВремени = Неопределено, 0, ДанныеСтрокиВремени.ОтработаноДнейКалендарных));
				ЗаполнитьЗначенияСвойств(ОбластиМакета.СтрокаСтрахователь.Параметры, ЗначенияПараметров);
				ТабличныйДокумент.Вывести(ОбластиМакета.СтрокаСтрахователь);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;	
КонецПроцедуры	

Процедура ВывестиСтрокуПоСтрахователю(ТабличныйДокумент, ДанныеДокумента, ОбластиМакета, ЗначенияПараметров)	
	ЗаполнитьЗначенияСвойств(ОбластиМакета.Строка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.Строка);
	//Если ДанныеДокумента.ПараметрыРасчета.ИспользоватьДниБолезниУходаЗаДетьми Тогда
	//	ЗаполнитьЗначенияСвойств(ОбластиМакета.СтрокаДнейБолезниУходаЗаДетьми.Параметры, ЗначенияПараметров);
	//	ТабличныйДокумент.Присоединить(ОбластиМакета.СтрокаДнейБолезниУходаЗаДетьми);
	//КонецЕсли;
КонецПроцедуры

Процедура ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать)
	
	СреднедневнойЗаработок =  ДанныеДокумента.ПараметрыРасчета.СреднийДневнойЗаработок;
	
	СуммаПределаСредней = УчетПособийСоциальногоСтрахования.СуммаПределаСредней(ДанныеДокумента.ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание);
	
	ПоследнийМесяцРасчетногоПериода = Новый Массив;
	ПоследнийМесяцРасчетногоПериода.Добавить(НачалоМесяца(ДанныеДокумента.ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание));
	ПредельныеВеличиныПоМесяцам = УчетПособийСоциальногоСтрахования.ПредельнаяВеличинаБазыСтраховыхВзносов(ПоследнийМесяцРасчетногоПериода);
	СуммаПредела = ПредельныеВеличиныПоМесяцам[НачалоМесяца(ДанныеДокумента.ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание)];

	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("СреднедневнойЗаработок", 			Формат(СреднедневнойЗаработок, "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗначенияПараметров.Вставить("СуммаПределаСредней", 				Формат(СуммаПределаСредней, "ЧЦ=15; ЧДЦ=2; ЧН=0.00"));
	ЗначенияПараметров.Вставить("СуммаПредела", 					СуммаПредела);	
	ЗаполнитьЗначенияСвойств(ОбластиМакета.РасчетСреднегоЗаработка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластиМакета.РасчетСреднегоЗаработка);

КонецПроцедуры

Процедура ВывестиМРОТ(ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать)
	
	ММОТ = ?(ДанныеДокумента.РеквизитыДокумента.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереММОТ, Истина, Ложь);
	ДваММОТ = ?(ДанныеДокумента.РеквизитыДокумента.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОграничениеВРазмереДвухММОТ, Истина, Ложь); 
	БеременностьИРоды = ?(ДанныеДокумента.РеквизитыДокумента.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам И ДанныеДокумента.РеквизитыДокумента.ОграничениеПособия = Перечисления.ВидыОграниченияПособия.ОбщееОграничение, Истина, Ложь);
	
	ВывестиОбластиМРОТ(ММОТ, ДваММОТ, БеременностьИРоды, ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать);
	
КонецПроцедуры

Процедура ВывестиОбластиМРОТ(ММОТ, ДваММОТ, БеременностьИРоды, ТабличныйДокумент, ОбластиМакета, ДанныеДокумента, КодЯзыкаПечать)
	
	ЗначенияПараметров = Новый Структура;
	//ЗначенияПараметров.Вставить("ДатаНачалаСобытия", 	Формат(ДанныеДокумента.ПараметрыРасчета.ДатаНачалаСобытия, "ДЛФ=D"));
	Если ММОТ ИЛИ ДваММОТ ИЛИ БеременностьИРоды Тогда
		ТабличныйДокумент.Вывести(ОбластиМакета.ШапкаМРОТ);
		МинимальныйСреднедневнойЗаработок = УчетПособийСоциальногоСтрахованияКлиентСервер.МинимальныйСреднедневнойЗаработокФСС(ДанныеДокумента.ПараметрыРасчета);	
		Если ММОТ Тогда
			ЗначенияПараметров.Вставить("СреднийММОТ", МинимальныйСреднедневнойЗаработок);
			ЗаполнитьЗначенияСвойств(ОбластиМакета.ММОТ.Параметры,	ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластиМакета.ММОТ);
		ИначеЕсли ДваММОТ Тогда
			ЗначенияПараметров.Вставить("СреднийММОТ", МинимальныйСреднедневнойЗаработок);
			ЗначенияПараметров.Вставить("СреднийММОТ2", МинимальныйСреднедневнойЗаработок*2);
			ЗаполнитьЗначенияСвойств(ОбластиМакета.ДваММОТ.Параметры,	ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластиМакета.ДваММОТ);
		КонецЕсли;
		
		Если БеременностьИРоды Тогда
			ЗначенияПараметров.Вставить("СреднийММОТ", МинимальныйСреднедневнойЗаработок);
			ЗаполнитьЗначенияСвойств(ОбластиМакета.БеременностьИРоды.Параметры,	ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластиМакета.БеременностьИРоды);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОбластиМакета(ИспользоватьДниБолезниУходаЗаДетьми, ПрименятьПредельнуюВеличину, КодЯзыкаПечать)
	
	ОбластиМакета = Новый Структура;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьРасчетаСреднегоЗаработкаФСС.ПФ_MXL_РасчетСреднегоЗаработкаПособий", КодЯзыкаПечать);
	
	ОбластиМакета.Вставить("Шапка", 								Макет.ПолучитьОбласть("Заголовок"));
	ОбластиМакета.Вставить("ШапкаМРОТ", 							Макет.ПолучитьОбласть("ШапкаМРОТ"));
	ОбластиМакета.Вставить("ЗаголовокНачисленийСтрахователей", 		Макет.ПолучитьОбласть("ЗаголовокНачисленийСтрахователей"));
	ОбластиМакета.Вставить("ММОТ", 									Макет.ПолучитьОбласть("ММОТ"));
	ОбластиМакета.Вставить("ДваММОТ", 								Макет.ПолучитьОбласть("ДваММОТ"));
	ОбластиМакета.Вставить("БеременностьИРоды", 					Макет.ПолучитьОбласть("БеременностьИРоды"));
	ОбластиМакета.Вставить("ЗаголовокНачислений", 					Макет.ПолучитьОбласть("ЗаголовокНачислений")); 
	ОбластиМакета.Вставить("ПустойЗаголовокНачислений", 			Макет.ПолучитьОбласть("ПустойЗаголовокНачислений")); 
	ОбластиМакета.Вставить("РасчетСреднегоЗаработкаЗаголовок", 		Макет.ПолучитьОбласть("РасчетСреднегоЗаработкаЗаголовок"));
	ОбластиМакета.Вставить("РасчетСреднегоЗаработка", 				Макет.ПолучитьОбласть("РасчетСреднегоЗаработка"));
	
	ОбластиМакета.Вставить("ЗаголовокТаблицы", 			Макет.ПолучитьОбласть("ЗаголовокТаблицыНачалоБезОграничений")); 
	ОбластиМакета.Вставить("Строка", 					Макет.ПолучитьОбласть("СтрокаЗаработкаНачалоБезОграничений"));
	ОбластиМакета.Вставить("ТекущийИтог", 				Макет.ПолучитьОбласть("ТекущийИтогБезОграничений"));
	ОбластиМакета.Вставить("ПодвалТаблицыЗаработка", 	Макет.ПолучитьОбласть("ПодвалТаблицыЗаработкаБезОграничений")); 
	
	ОбластиМакета.Вставить("ЗаголовокТаблицыСтрахователь", 				Макет.ПолучитьОбласть("ЗаголовокТаблицыНачало")); 
	ОбластиМакета.Вставить("СтрокаСтрахователь", 						Макет.ПолучитьОбласть("СтрокаЗаработкаНачало"));
	ОбластиМакета.Вставить("СтрокаИтогСтрахователь", 					Макет.ПолучитьОбласть("ТекущийИтог"));
	
	Возврат ОбластиМакета;
	
КонецФункции


Функция ОписаниеРасчетныхМесяцев(РасчетныеМесяцы, КодЯзыкаПечать)
			
	ОписаниеРасчетныхМесяцев = НСтр("ru='Не указаны';uk='Не вказано'",КодЯзыкаПечать);   
	
	ВсегоСтрок = РасчетныеМесяцы.Количество();
	
	Если ВсегоСтрок > 1 Тогда
		ОписаниеРасчетныхМесяцев = СтрШаблон(НСтр("ru='c %1 по %2 ';uk='c %1 по %2 '",КодЯзыкаПечать), Формат(РасчетныеМесяцы[0], "ДФ='ММММ гггг'; Л=" + КодЯзыкаПечать), Формат(РасчетныеМесяцы[ВсегоСтрок - 1], "ДФ='ММММ гггг'; Л=" + КодЯзыкаПечать));
	ИначеЕсли ВсегоСтрок <> 0 Тогда	
		ОписаниеРасчетныхМесяцев = Формат(РасчетныеМесяцы[0], "ДФ='ММММ гггг '; Л=" + КодЯзыкаПечать);
	КонецЕсли;
	
	Возврат ОписаниеРасчетныхМесяцев;
	
КонецФункции


Функция ДокументыСгруппированныеПоТипам(МассивСсылок)
	
	ДокументыСгруппированныеПоТипам = Новый Соответствие;
	
	Для каждого Ссылка Из МассивСсылок Цикл
		
		Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		
		МассивСсылок = ДокументыСгруппированныеПоТипам.Получить(Менеджер);
		
		Если МассивСсылок = Неопределено Тогда
			ДокументыСгруппированныеПоТипам.Вставить(Менеджер, Новый Массив);
			МассивСсылок = ДокументыСгруппированныеПоТипам.Получить(Менеджер);
		КонецЕсли;
		
		МассивСсылок.Добавить(Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументыСгруппированныеПоТипам;
	
КонецФункции

Функция ДанныеДокументовРасчетаСреднегоЗаработкаФСС(МассивСсылок)
	
	ДанныеДокументов = Новый Массив;
	
	ДокументыСгруппированныеПоТипам = ДокументыСгруппированныеПоТипам(МассивСсылок);
	
	Для каждого ОписаниеТипаДокумента Из ДокументыСгруппированныеПоТипам Цикл
		
		Менеджер = ОписаниеТипаДокумента.Ключ;
		МассивСсылок = ОписаниеТипаДокумента.Значение;
		
		ДанныеДокументовПоТипу = Менеджер.ДанныеДокументовДляПечатиРасчетаСреднегоЗаработкаФСС(МассивСсылок);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДанныеДокументов, ДанныеДокументовПоТипу);
	     		
	КонецЦикла;

	Возврат ДанныеДокументов
	
КонецФункции

Функция ПустаяСтруктураДанныхДляПечатиСреднегоЗаработка() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("РеквизитыДокумента", ПустаяСтруктураРеквизитовДокументаДляПечатиСреднегоЗаработка());
	СтруктураДанных.Вставить("КадровыеДанныеСотрудника", ПустаяСтруктураКадровыхДанныхСотрудникаДляПечатиСреднегоЗаработка());
	СтруктураДанных.Вставить("ПараметрыРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.ПараметрыРасчетаСреднегоДневногоЗаработкаФСС());
	СтруктураДанных.Вставить("ДанныеРасчетаСреднего", Новый Массив);
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПустаяСтруктураРеквизитовДокументаДляПечатиСреднегоЗаработка()
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Ссылка");
	СтруктураДанных.Вставить("Сотрудник");
	СтруктураДанных.Вставить("НомерДокумента");
	СтруктураДанных.Вставить("ДатаДокумента");
	СтруктураДанных.Вставить("ДатаНачалаОтсутствия");
	СтруктураДанных.Вставить("ДатаОкончанияОтсутствия");
	СтруктураДанных.Вставить("ПолноеНаименованиеОрганизации");
	СтруктураДанных.Вставить("НаименованиеОрганизации");
	СтруктураДанных.Вставить("НомерЛисткаНетрудоспособности");
	СтруктураДанных.Вставить("ОграничениеПособия");
	СтруктураДанных.Вставить("ПричинаНетрудоспособности");

	Возврат СтруктураДанных;

КонецФункции

Функция ПустаяСтруктураКадровыхДанныхСотрудникаДляПечатиСреднегоЗаработка()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ФизическоеЛицо");
	СтруктураДанных.Вставить("ФИОПолные");
	СтруктураДанных.Вставить("ТабельныйНомер");
	СтруктураДанных.Вставить("Подразделение");
	СтруктураДанных.Вставить("Должность");
	СтруктураДанных.Вставить("ВидЗанятости");
	
	Возврат СтруктураДанных;

КонецФункции

#КонецОбласти

#КонецЕсли