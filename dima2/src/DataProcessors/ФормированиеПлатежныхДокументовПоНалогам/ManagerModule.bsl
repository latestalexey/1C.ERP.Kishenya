#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура АвтозаполнениеПоВедомостям(ПараметрыЗаполнения, АдресХранилища) Экспорт
	
	Объект             = ПараметрыЗаполнения.Объект;
	ПлатежныеВедомости = Объект.ДокументыНачисления.ВыгрузитьКолонку("Ведомость");
	
	Если ПлатежныеВедомости.Количество() = 0 Тогда
		РезультатВыполнения = Новый Структура("Объект", Объект);
		ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("ПлатежныеВедомости",   ПлатежныеВедомости);
	Запрос.УстановитьПараметр("Организация",   Объект.Организация);
	Запрос.УстановитьПараметр("ПустаяОрганизация",   Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойНалог",   Справочники.Налоги.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКодДохода",  Справочники.ВидыДоходовНДФЛ.ПустаяСсылка());
	Запрос.УстановитьПараметр("ГруппаНДФЛ",  Справочники.ГруппыУчетаНачисленийИУдержаний.НДФЛ);
	Запрос.УстановитьПараметр("ГруппаВС",  Справочники.ГруппыУчетаНачисленийИУдержаний.ВоенныйСбор);
	Запрос.УстановитьПараметр("ГруппаЕСВ",  Справочники.ГруппыУчетаНачисленийИУдержаний.ЕСВ);
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Обороты.Регистратор КАК Ведомость,
	|	Обороты.НалогРасход КАК Сумма,
	|	Обороты.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|	&ПустойНалог КАК Налог,
	|	Обороты.КодДохода КАК КодДохода
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Обороты(,, Регистратор) КАК Обороты
	|ГДЕ
	|   Обороты.Регистратор В (&ПлатежныеВедомости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Обороты.Регистратор,
	|	Обороты.СуммаРасход,
	|	&ГруппаЕСВ,
	|	Обороты.Налог,
	|	&ПустойКодДохода
	|ИЗ
	|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Обороты(,, Регистратор) КАК Обороты
	|ГДЕ
	|   Обороты.Регистратор В (&ПлатежныеВедомости)
	|";	
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	СУММА(ДанныеДокументов.Сумма) КАК Сумма,
	|	ДанныеДокументов.Ведомость КАК Ведомость,
	|	ДанныеДокументов.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|	ДанныеДокументов.Налог КАК Налог,
	|	ДанныеДокументов.КодДохода КАК КодДохода
	|ПОМЕСТИТЬ ВТДанныеДокументовСводно
	|ИЗ
	|	ВТДанныеДокументов КАК ДанныеДокументов
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументов.Ведомость,
	|	ДанныеДокументов.ГруппаУчетаУдержаний,
	|   ДанныеДокументов.Налог,
	|   ДанныеДокументов.КодДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   Параметры.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|   Параметры.Налог КАК Налог,
	|   Параметры.КодДохода КАК КодДохода,
	|   Параметры.Контрагент КАК Контрагент,
	|   Параметры.СчетКонтрагента КАК СчетКонтрагента
//По организации с указанным налогом/кодом	
	|ПОМЕСТИТЬ ВТПараметрыДокументовПриоритет1
	|ИЗ
	|	РегистрСведений.ПараметрыПлатежныхДокументовПоНалогам КАК Параметры
	|ГДЕ
	|   Параметры.Организация = &Организация
	|   И 
	|   	((Параметры.ГруппаУчетаУдержаний <> &ГруппаЕСВ И Параметры.КодДохода <> &ПустойКодДохода)
	|   	 ИЛИ
	|   	(Параметры.ГруппаУчетаУдержаний = &ГруппаЕСВ И Параметры.Налог <> &ПустойНалог))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   Параметры.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|   Параметры.Налог КАК Налог,
	|   Параметры.КодДохода КАК КодДохода,
	|   Параметры.Контрагент КАК Контрагент,
	|   Параметры.СчетКонтрагента КАК СчетКонтрагента
//По пустой организации с указанным налогом/кодом	
	|ПОМЕСТИТЬ ВТПараметрыДокументовПриоритет2
	|ИЗ
	|	РегистрСведений.ПараметрыПлатежныхДокументовПоНалогам КАК Параметры
	|ГДЕ
	|   Параметры.Организация = &ПустаяОрганизация
	|   И 
	|   	((Параметры.ГруппаУчетаУдержаний <> &ГруппаЕСВ И Параметры.КодДохода <> &ПустойКодДохода)
	|   	 ИЛИ
	|   	(Параметры.ГруппаУчетаУдержаний=&ГруппаЕСВ И Параметры.Налог <> &ПустойНалог))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   Параметры.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|   Параметры.Налог КАК Налог,
	|   Параметры.КодДохода КАК КодДохода,
	|   Параметры.Контрагент КАК Контрагент,
	|   Параметры.СчетКонтрагента КАК СчетКонтрагента
//По организации с пустым налогом/кодом	
	|ПОМЕСТИТЬ ВТПараметрыДокументовПриоритет3
	|ИЗ
	|	РегистрСведений.ПараметрыПлатежныхДокументовПоНалогам КАК Параметры
	|ГДЕ
	|   Параметры.Организация = &Организация
	|   И 
	|   	(Параметры.КодДохода = &ПустойКодДохода И Параметры.Налог = &ПустойНалог)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|   Параметры.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|   Параметры.Налог КАК Налог,
	|   Параметры.КодДохода КАК КодДохода,
	|   Параметры.Контрагент КАК Контрагент,
	|   Параметры.СчетКонтрагента КАК СчетКонтрагента
//По пустой организации с пустым налогом/кодом	
	|ПОМЕСТИТЬ ВТПараметрыДокументовПриоритет4
	|ИЗ
	|	РегистрСведений.ПараметрыПлатежныхДокументовПоНалогам КАК Параметры
	|ГДЕ
	|   Параметры.Организация = &ПустаяОрганизация
	|   И 
	|   	(Параметры.КодДохода = &ПустойКодДохода И Параметры.Налог = &ПустойНалог)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДанныеДокументов.Ведомость КАК Ведомость,
	|   ДанныеДокументов.Сумма КАК Сумма,
	|   ДанныеДокументов.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|   ДанныеДокументов.Налог КАК Налог,
	|   ДанныеДокументов.КодДохода КАК КодДохода,
	|   ГруппыУчетаНачисленийИУдержаний.СчетУчета КАК СчетУчета,
	|   ВЫБОР
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет1.Контрагент ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет1.Контрагент
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет2.Контрагент ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет2.Контрагент
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет3.Контрагент ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет3.Контрагент
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет4.Контрагент ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет4.Контрагент
	|       ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|   ВЫБОР
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет1.СчетКонтрагента ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет1.СчетКонтрагента
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет2.СчетКонтрагента ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет2.СчетКонтрагента
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет3.СчетКонтрагента ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет3.СчетКонтрагента
	|   	КОГДА НЕ (ПараметрыДокументовПриоритет4.СчетКонтрагента ЕСТЬ NULL)
	|   		ТОГДА ПараметрыДокументовПриоритет4.СчетКонтрагента
	|       ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК СчетКонтрагента	
	|ПОМЕСТИТЬ ВТДанныеДокументовСПараметрами
	|ИЗ
	|	ВТДанныеДокументовСводно КАК ДанныеДокументов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТПараметрыДокументовПриоритет1 КАК ПараметрыДокументовПриоритет1
	|	ПО ДанныеДокументов.ГруппаУчетаУдержаний = ПараметрыДокументовПриоритет1.ГруппаУчетаУдержаний
	|	 И ДанныеДокументов.Налог = ПараметрыДокументовПриоритет1.Налог
	|	 И ДанныеДокументов.КодДохода = ПараметрыДокументовПриоритет1.КодДохода
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТПараметрыДокументовПриоритет2 КАК ПараметрыДокументовПриоритет2
	|	ПО ДанныеДокументов.ГруппаУчетаУдержаний = ПараметрыДокументовПриоритет1.ГруппаУчетаУдержаний
	|	 И ДанныеДокументов.Налог = ПараметрыДокументовПриоритет1.Налог
	|	 И ДанныеДокументов.КодДохода = ПараметрыДокументовПриоритет1.КодДохода
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТПараметрыДокументовПриоритет3 КАК ПараметрыДокументовПриоритет3
	|	ПО ДанныеДокументов.ГруппаУчетаУдержаний = ПараметрыДокументовПриоритет3.ГруппаУчетаУдержаний
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВТПараметрыДокументовПриоритет4 КАК ПараметрыДокументовПриоритет4
	|	ПО ДанныеДокументов.ГруппаУчетаУдержаний = ПараметрыДокументовПриоритет4.ГруппаУчетаУдержаний
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.ГруппыУчетаНачисленийИУдержаний КАК ГруппыУчетаНачисленийИУдержаний
	|	ПО ДанныеДокументов.ГруппаУчетаУдержаний = ГруппыУчетаНачисленийИУдержаний.Ссылка
	|ГДЕ	
	|	ДанныеДокументов.Сумма > 0
	|;
	|
	|ВЫБРАТЬ
	|   Налоги.Ведомость,
	|   Налоги.Сумма,
	|   Налоги.ГруппаУчетаУдержаний,
	|   Налоги.Налог,
	|   Налоги.КодДохода,
	|   Налоги.СчетУчета,
	|   Налоги.Контрагент,
	|   Налоги.СчетКонтрагента
	|ИЗ
	|	ВТДанныеДокументовСПараметрами КАК Налоги
	|";	
	
	Объект.Налоги = Запрос.Выполнить().Выгрузить();
	
	РезультатВыполнения = Новый Структура("Объект", Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура АвтозаполнениеДокументов(ПараметрыЗаполнения, АдресХранилища) Экспорт
	
	
	Объект             = ПараметрыЗаполнения.Объект;
	Налоги 			   = Объект.Налоги;
	
	Если Налоги.Количество() = 0 Тогда
		РезультатВыполнения = Новый Структура("Объект", Объект);
		ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Налоги",   	Налоги);
	
	Запрос.Текст = 	
	"ВЫБРАТЬ 
	|   Налоги.Ведомость,
	|   Налоги.Сумма,
	|   Налоги.Контрагент,
	|   Налоги.СчетКонтрагента
	|ПОМЕСТИТЬ ВТНалоги
	|ИЗ
	|	&Налоги КАК Налоги
    |;
	|
	|ВЫБРАТЬ
	|   СУММА(Налоги.Сумма) КАК Сумма,
	|   Налоги.Контрагент,
	|   Налоги.СчетКонтрагента,
	|   МАКСИМУМ(Истина) КАК Отметка
	|ИЗ
	|	ВТНалоги КАК Налоги
	|СГРУППИРОВАТЬ ПО
	|   Налоги.Контрагент,
	|   Налоги.СчетКонтрагента
	|УПОРЯДОЧИТЬ ПО
	|	Сумма УБЫВ
	|";
	
	Объект.Платежки = Запрос.Выполнить().Выгрузить();
	
	РезультатВыполнения = Новый Структура("Объект", Объект);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СоздатьДокументы(ПараметрыСоздания, АдресХранилища) Экспорт
	
	Объект                        = ПараметрыСоздания.Объект;
	Организация                   = Объект.Организация;
	ДатаПлатежки                  = Объект.ДатаПлатежки;
	Платежки                      = Объект.Платежки;
	Налоги                        = Объект.Налоги;
	
	ВалютаРегламентированногоУчета        = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ГотовыеПлатежки = Новый Массив();
	
	Отбор = Новый Структура ("Контрагент, СчетКонтрагента");
	Для Каждого СтрокаТаблицы Из Платежки Цикл
		
		Если СтрокаТаблицы.Отметка Тогда
			
			ДокументПлатежка = Новый Структура();
			
			ДокументПлатежка.Вставить("Дата", ДатаПлатежки);
			ДокументПлатежка.Вставить("ДатаПлатежа", ДатаПлатежки);
			ДокументПлатежка.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
			ДокументПлатежка.Вставить("СуммаДокумента", СтрокаТаблицы.Сумма);
			ДокументПлатежка.Вставить("Контрагент", СтрокаТаблицы.Контрагент);
			ДокументПлатежка.Вставить("БанковскийСчетКонтрагента", СтрокаТаблицы.СчетКонтрагента);
            ДокументПлатежка.Вставить("Валюта",  ВалютаРегламентированногоУчета);
			ДокументПлатежка.Вставить("Организация",  Организация);
			
			// табличная часть
			РасшифровкаПлатежа = ТаблицаРасшифровкаПлатежа();
			
			Отбор.СчетКонтрагента = СтрокаТаблицы.СчетКонтрагента;
			Отбор.Контрагент = СтрокаТаблицы.Контрагент;
			СтрокиНалогов = Налоги.НайтиСтроки(Отбор);
			
			Для Каждого СтрокаНалогов Из СтрокиНалогов Цикл
				
				СтрокаПлатежки = РасшифровкаПлатежа.Добавить();
				СтрокаПлатежки.СчетУчета	= СтрокаНалогов.СчетУчета;
				Если СтрокаНалогов.ГруппаУчетаУдержаний = Справочники.ГруппыУчетаНачисленийИУдержаний.НДФЛ Тогда
					
				ИначеЕсли СтрокаНалогов.ГруппаУчетаУдержаний = Справочники.ГруппыУчетаНачисленийИУдержаний.ВоенныйСбор Тогда	
				    СтрокаПлатежки.Субконто1 = Справочники.Налоги.ВоенныйСбор;
				ИначеЕсли СтрокаНалогов.ГруппаУчетаУдержаний = Справочники.ГруппыУчетаНачисленийИУдержаний.ЕСВ Тогда	
				    СтрокаПлатежки.Субконто1 = СтрокаНалогов.Налог;
				КонецЕсли;	
				СтрокаПлатежки.Сумма = СтрокаНалогов.Сумма;
				СтрокаПлатежки.АналитикаАктивовПассивов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.НалогиИВзносыСОплатыТруда;
		
			КонецЦикла;
			ДокументПлатежка.Вставить("ТаблицаРасшифровкаПлатежа",  РасшифровкаПлатежа);
			
			ГотовыеПлатежки.Добавить(ДокументПлатежка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	РезультатВыполнения = Новый Структура("ГотовыеПлатежки", ГотовыеПлатежки);
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Функция ТаблицаРасшифровкаПлатежа()
	
	ТаблицаРасшифровкаПлатежа = Новый ТаблицаЗначений();
	ТаблицаРасшифровкаПлатежа.Колонки.Добавить("Сумма");
	ТаблицаРасшифровкаПлатежа.Колонки.Добавить("СчетУчета");
	ТаблицаРасшифровкаПлатежа.Колонки.Добавить("Субконто1");
	ТаблицаРасшифровкаПлатежа.Колонки.Добавить("Субконто2");
	ТаблицаРасшифровкаПлатежа.Колонки.Добавить("Субконто3");
	ТаблицаРасшифровкаПлатежа.Колонки.Добавить("АналитикаАктивовПассивов");
	
	Возврат ТаблицаРасшифровкаПлатежа;
	
КонецФункции	

#КонецЕсли