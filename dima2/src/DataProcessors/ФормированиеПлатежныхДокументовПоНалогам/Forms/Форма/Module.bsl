&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаСервере
Перем ОбъектОтбора;

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ЗагрузитьРезультат();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультат()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.Свойство("Объект",) Тогда
			Объект.Налоги.Загрузить(Результат.Объект.Налоги);
			Объект.Платежки.Загрузить(Результат.Объект.Платежки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВедомостям()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("ДатаПлатежки",                  ОбработкаОбъект.ДатаПлатежки);
	
	ПараметрыЗаполнения = Новый Структура("Объект", СтруктураОбъекта);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Обработки.ФормированиеПлатежныхДокументовПоНалогам.АвтозаполнениеПоВедомостям(ПараметрыЗаполнения, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание платежных документов на уплату налогов';uk='Створення платіжних документів на сплату податків'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			Новый УникальныйИдентификатор,
			"Обработки.ФормированиеПлатежныхДокументовПоНалогам.АвтозаполнениеПоВедомостям", 
			ПараметрыЗаполнения, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
		
	Если Результат.ЗаданиеВыполнено Тогда	
		ЗагрузитьРезультат();
	КонецЕсли;	
				
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументы()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("ДатаПлатежки",                  ОбработкаОбъект.ДатаПлатежки);
	
	ПараметрыЗаполнения = Новый Структура("Объект", СтруктураОбъекта);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Обработки.ФормированиеПлатежныхДокументовПоНалогам.АвтозаполнениеДокументов(ПараметрыЗаполнения, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание платежных документов на уплату налогов';uk='Створення платіжних документів на сплату податків'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			Новый УникальныйИдентификатор,
			"Обработки.ФормированиеПлатежныхДокументовПоНалогам.АвтозаполнениеДокументов", 
			ПараметрыЗаполнения, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
		
	Если Результат.ЗаданиеВыполнено Тогда	
		ЗагрузитьРезультат();
	КонецЕсли;	
				
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьДокументы();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВедомости(Команда)
	ЗаполнитьВедомостиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВедомостиНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация",   Объект.Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации",   Объект.ПериодРегистрации);
	
	ИмяВедомостей = Новый Массив();
	ИмяВедомостей.Добавить("ВедомостьНаВыплатуЗарплатыВБанк");
	ИмяВедомостей.Добавить("ВедомостьНаВыплатуЗарплатыВКассу");
	ИмяВедомостей.Добавить("ВедомостьНаВыплатуЗарплатыПеречислением");
	ИмяВедомостей.Добавить("ВедомостьНаВыплатуЗарплатыРаздатчиком");
	ИмяВедомостей.Добавить("ВыплатаБывшимСотрудникам");
	ИмяВедомостей.Добавить("РегистрацияПрочихДоходов");
	
	ТекстШаблон = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗарплатаКВыплате.Ссылка КАК Ведомость
	|ИЗ
	|	Документ.ИМЯДОКУМЕНТА КАК ЗарплатаКВыплате
	|ГДЕ
	|   ЗарплатаКВыплате.Организация = &Организация 
	|   И ЗарплатаКВыплате.ПериодРегистрации = &ПериодРегистрации
	|   И ЗарплатаКВыплате.Проведен
	|";
	
	ТекстЗапроса = "";
	
	Для Каждого ИмяВедомсти из ИмяВедомостей Цикл
		
		Если ИмяВедомостей.Найти(ИмяВедомсти) = 0 Тогда
			Текст = ТекстШаблон;
		Иначе
			ТекстЗапроса = ТекстЗапроса + ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьОбъединениеЗапросов();
			Текст = ТекстШаблон;
			ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(Текст, Ложь);
		КонецЕсли;
		Текст = СтрЗаменить(Текст, "ИМЯДОКУМЕНТА", ИмяВедомсти);
		
		ТекстЗапроса = ТекстЗапроса + Текст;
		
	КонецЦикла;	
	
	Запрос.Текст = ТекстЗапроса;
	Объект.ДокументыНачисления.Загрузить(Запрос.Выполнить().Выгрузить());
	ЗаполнитьПоВедомостям();
	
КонецПроцедуры

&НаСервере
Функция СоздатьПлатежныеДокументы()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураОбъекта = Новый Структура();
	СтруктураОбъекта.Вставить("Организация",                   ОбработкаОбъект.Организация);
	СтруктураОбъекта.Вставить("ДокументыНачисления",           ОбработкаОбъект.ДокументыНачисления.Выгрузить());
	СтруктураОбъекта.Вставить("Налоги", 			           ОбработкаОбъект.Налоги.Выгрузить());
	СтруктураОбъекта.Вставить("Платежки", 			           ОбработкаОбъект.Платежки.Выгрузить());
	СтруктураОбъекта.Вставить("ДатаПлатежки",                  ОбработкаОбъект.ДатаПлатежки);
	
	ПараметрыСоздания = Новый Структура("Объект", СтруктураОбъекта);
		
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Обработки.ФормированиеПлатежныхДокументовПоНалогам.СоздатьДокументы(ПараметрыСоздания, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	Иначе
		НаименованиеЗадания = НСтр("ru='Создание платежных документов на уплату налогов';uk='Створення платіжних документів на сплату податків'");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			Новый УникальныйИдентификатор,
			"Обработки.ФормированиеПлатежныхДокументовПоНалогам.СоздатьДокументы", 
			ПараметрыСоздания, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;	
	КонецЕсли;
		
	Если Результат.ЗаданиеВыполнено Тогда	
		РезультатСоздания = ПолучитьИзВременногоХранилища(АдресХранилища);
		МассивАдресов = Новый Массив();
		Если ТипЗнч(РезультатСоздания) = Тип("Структура") Тогда
			Если РезультатСоздания.Свойство("ГотовыеПлатежки",) Тогда
				Для Каждого Платежка Из РезультатСоздания.ГотовыеПлатежки Цикл
					АдресХранилищаРезультат = ПоместитьВоВременноеХранилище(Платежка, Новый УникальныйИдентификатор);
					МассивАдресов.Добавить(АдресХранилищаРезультат);
				КонецЦикла;	
				Возврат МассивАдресов;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
		
КонецФункции


&НаСервере
Процедура УстановкаФлажков(Значение = Неопределено)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Если Значение = Неопределено Тогда 
		Для Каждого СтрокаТаблицы Из ОбработкаОбъект.Платежки Цикл
			СтрокаТаблицы.Отметка = НЕ СтрокаТаблицы.Отметка;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТаблицы Из ОбработкаОбъект.Платежки Цикл
			СтрокаТаблицы.Отметка = Значение;
		КонецЦикла;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
				
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ТАБЛИЧНОЙ ЧАСТИ

&НаКлиенте
Процедура РКОРКОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РКОРКООчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	Если Объект.Платежки.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана организация!';uk='Не зазначена організація!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "Организация";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаПлатежки) Тогда
		
		ТекстСообщения = НСтр("ru='Не указана дата, на которую формируются документы!';uk='Не вказана дата, на яку формуються документи!'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст       = ТекстСообщения;
		Сообщение.Поле        = "ДатаПлатежки";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.ИдентификаторНазначения = ЭтаФорма.УникальныйИдентификатор;
		Сообщение.Сообщить();
		
		Возврат
	КонецЕсли;
	
	Результат = СоздатьПлатежныеДокументы();
	
	Если Результат <> Неопределено Тогда
		Для Каждого Платежка Из Результат Цикл
			ПараметрыФормы = Новый Структура("Основание", Новый Структура("ПлатежиПоНалогам", Платежка));
			Если ИспользоватьЗаявкиНаРасходованиеДенежныхСредств Тогда
				ОткрытьФорму("Документ.ЗаявкаНаРасходованиеДенежныхСредств.ФормаОбъекта", ПараметрыФормы,,Истина);
			Иначе
				ОткрытьФорму("Документ.СписаниеБезналичныхДенежныхСредств.ФормаОбъекта", ПараметрыФормы,,Истина);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлаги(Команда)
	
	УстановкаФлажков(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлаги(Команда)
	
	УстановкаФлажков(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлаги(Команда)
	
	УстановкаФлажков();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьДокументы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежнаяВедомостьОчистка(Элемент, СтандартнаяОбработка)
	

	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежнаяВедомостьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ДокументыНачисленияПриИзменении(Элемент)
	
	ЗаполнитьПоВедомостям();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектОтбора", ОбъектОтбора);
	
	Если ОбъектОтбора = Неопределено Тогда
		Объект.ДатаПлатежки = ОбщегоНазначенияБП.ПолучитьРабочуюДату();
	Иначе	
		Объект.Организация = ОбъектОтбора.Организация;
		Объект.ДатаПлатежки = ОбщегоНазначенияБП.ПолучитьРабочуюДату();
		НС = Объект.ДокументыНачисления.Добавить();
		НС.Ведомость = ОбъектОтбора;
		Объект.ОтборПоВедомости = Истина;
	КонецЕсли;
	
	ЗначенияДляЗаполнения = Новый Структура;
	ЗначенияДляЗаполнения.Вставить("ПредыдущийМесяц",	"Объект.ПериодРегистрации");
	ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
	
	ИспользоватьЗаявкиНаРасходованиеДенежныхСредств = ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ОтборПоВедомости Тогда
		Этаформа.Элементы.ДокументыНачисления.Видимость = Ложь;
		Этаформа.Элементы.НалогиВедомость.Видимость = Ложь;
		Этаформа.Элементы.ПДЗаполнить.Видимость = Ложь;
		Этаформа.Элементы.Организация.Видимость = Ложь;
		Этаформа.Элементы.ПериодРегистрации.Видимость = Ложь;
		ЗаполнитьПоВедомостям();
		ЗаполнитьДокументы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
//	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("ФормированиеПлатежныхДокументовПоНалогам", "СтатьяДвиженияДенежныхСредств", Объект.СтатьяДвиженияДенежныхСредств);
	
КонецПроцедуры

&НаКлиенте
Процедура ПДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыДокументы(Команда)
	ПараметрыФормы = Новый Структура("Организация", Объект.Организация);
	ОткрытьФорму("РегистрСведений.ПараметрыПлатежныхДокументовПоНалогам.ФормаСписка", ПараметрыФормы);
КонецПроцедуры
