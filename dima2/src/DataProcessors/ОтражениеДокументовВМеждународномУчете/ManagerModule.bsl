#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает массив имен регистров, данные которых отражаются в международном учете.
//
// Возвращаемое значение:
//	Массив - массив имен регистров.
//
Функция РегистрыКОтражениюВМеждународномУчете() Экспорт

	МассивРегистров = Новый Массив;

	МассивРегистров.Добавить("ДвиженияДенежныхСредств");
	МассивРегистров.Добавить("ДвиженияДенежныеСредстваДоходыРасходы");
	МассивРегистров.Добавить("ДвиженияДенежныеСредстваКонтрагент");
	МассивРегистров.Добавить("ДвиженияКонтрагентДоходыРасходы");
	МассивРегистров.Добавить("ДвиженияКонтрагентКонтрагент");
	МассивРегистров.Добавить("ДвиженияДоходыРасходыПрочиеАктивыПассивы");
	МассивРегистров.Добавить("Закупки");
	МассивРегистров.Добавить("ДвиженияНоменклатураДоходыРасходы");
	МассивРегистров.Добавить("ДвиженияНоменклатураНоменклатура");
	
	Возврат МассивРегистров;

КонецФункции

// Выполняет проверку настройки правил отражения в международном учете
//
// Параметры:
// 	 Организация - СправочникСсылка.Организации - Ораганизация, для которой необходимо выполнить проверку правил отражения
// 	 Документ - Массив, ДокументССылка - Документы для которых необходимо выполнить проверку правил отражения, Неопределено - по всем
//
// Возвращаемое значение:
//	Результат - Структура - Структура содержащая:
//								ХозяйственныеОперацииБезПравилОтражения - Таблица операция, по которым не настроены правила отражения
//								СчетаБезПравилОтражения - Таблица счетов регл. учета, по которым не настроены правила отражения
//
Функция ПроверитьНастройкуПравилОтраженияУчете(Организация, Документ = Неопределено) Экспорт
	
	ХозяйственныеОперацииБезПравилОтражения = Новый ТаблицаЗначений;
	ХозяйственныеОперацииБезПравилОтражения.Колонки.Добавить("Операция", Новый ОписаниеТипов("СправочникСсылка.НастройкиХозяйственныхОпераций"));
	ХозяйственныеОперацииБезПравилОтражения.Колонки.Добавить("УчетнаяПолитика", Новый ОписаниеТипов("СправочникСсылка.УчетныеПолитики"));
	ХозяйственныеОперацииБезПравилОтражения.Колонки.Добавить("ХозяйственнаяОперация", Новый ОписаниеТипов("ПеречислениеСсылка.ХозяйственныеОперации"));
	ХозяйственныеОперацииБезПравилОтражения.Колонки.Добавить("ИсточникДанных", Новый ОписаниеТипов("Строка"));
	ХозяйственныеОперацииБезПравилОтражения.Индексы.Добавить("Операция, УчетнаяПолитика");
	
	СчетаБезПравилОтражения = Новый ТаблицаЗначений;
	СчетаБезПравилОтражения.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СчетаБезПравилОтражения.Колонки.Добавить("УчетнаяПолитика", Новый ОписаниеТипов("СправочникСсылка.УчетныеПолитики"));
	СчетаБезПравилОтражения.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка"));
	СчетаБезПравилОтражения.Индексы.Добавить("Счет, УчетнаяПолитика");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтражениеДокументов.Регистратор КАК Документ,
	|	ОтражениеДокументов.Организация КАК Организация,
	|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК ПериодУчетнойПолитики
	|ПОМЕСТИТЬ ОтражениеДокументов
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВМеждународномУчете КАК ОтражениеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета КАК УчетнаяПолитикаОрганизаций
	|		ПО ОтражениеДокументов.Организация = УчетнаяПолитикаОрганизаций.Организация
	|			И ОтражениеДокументов.Период >= УчетнаяПолитикаОрганизаций.Период
	|ГДЕ
	|	(ОтражениеДокументов.Регистратор = &Документ
	|			ИЛИ &Документ = НЕОПРЕДЕЛЕНО)
	|	И ОтражениеДокументов.Организация = &Организация
	|	И ОтражениеДокументов.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияВМеждународномУчете.КОтражениюВУчете), 
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияВМеждународномУчете.ОтсутствуютПравилаОтраженияВУчете))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтражениеДокументов.Регистратор,
	|	ОтражениеДокументов.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодУчетнойПолитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОтражению.Документ КАК Документ,
	|	ДокументыКОтражению.Организация КАК Организация,
	|	УчетнаяПолитикаОрганизаций.УчетнаяПолитика КАК УчетнаяПолитика
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	ОтражениеДокументов КАК ДокументыКОтражению
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета КАК УчетнаяПолитикаОрганизаций
	|		ПО ДокументыКОтражению.Организация = УчетнаяПолитикаОрганизаций.Организация
	|			И ДокументыКОтражению.ПериодУчетнойПолитики = УчетнаяПолитикаОрганизаций.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтражениеДокументов";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.Выполнить();
	
	ПроверитьПравилаОтраженияПоданнымОперативногоУчета(ХозяйственныеОперацииБезПравилОтражения, МенеджерВременныхТаблиц, Организация);
	ПроверитьПравилаОтраженияПоДаннымРеглУчета(СчетаБезПравилОтражения, МенеджерВременныхТаблиц, Организация);
	
	Результат = Новый Структура;
	Результат.Вставить("ХозяйственныеОперацииБезПравилОтражения", ХозяйственныеОперацииБезПравилОтражения);
	Результат.Вставить("СчетаБезПравилОтражения", СчетаБезПравилОтражения);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПоРегистрамКОтражениВМеждународномУчете()

	ШаблонТекстаЗапросаПоРегистру = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.%ИмяРегистра% КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|ГДЕ
	|	ДанныеРегистра.Организация = &Организация
	|	И ДанныеРегистра.Активность
	|";
	
	ТекстЗапросаПоРегистрам = "";
	МассивРегистров = РегистрыКОтражениюВМеждународномУчете();
	Для каждого ИмяРегистра Из МассивРегистров Цикл
		ТекстЗапросаПоРегистрам = ТекстЗапросаПоРегистрам
			+ ?(ПустаяСтрока(ТекстЗапросаПоРегистрам), "", "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС)
			+ СтрЗаменить(ШаблонТекстаЗапросаПоРегистру, "%ИмяРегистра%", ИмяРегистра);
	КонецЦикла;

	Возврат ТекстЗапросаПоРегистрам;
	
КонецФункции

Функция ТекстЗапросаПоВыручкеИСебестоимости()

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	АналитикаПоПартнерам.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|	ПО
	|		АналитикаПоПартнерам.Организация = &Организация
	|		И ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.Активность
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаПоЗачетамАванса()

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаКлиента) КАК ХозяйственнаяОперация,
	|	АналитикаПоПартнерам.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|	ПО
	|		АналитикаПоПартнерам.Организация = &Организация
	|		И ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.Активность
	|	И ДанныеРегистра.ПредоплатаРегл > 0 И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеАвансаКлиента) КАК ХозяйственнаяОперация,
	|	АналитикаПоПартнерам.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|	ПО
	|		АналитикаПоПартнерам.Организация = &Организация
	|		И ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.Активность
	|	И ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДанныеРегистра.ПредоплатаРегл > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику) КАК ХозяйственнаяОперация,
	|	АналитикаПоПартнерам.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|	ПО
	|		АналитикаПоПартнерам.Организация = &Организация
	|		И ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.Активность
	|	И ДанныеРегистра.ПредоплатаРегл > 0 И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПретензииНаАвансы) КАК ХозяйственнаяОперация,
	|	АналитикаПоПартнерам.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|	ПО
	|		АналитикаПоПартнерам.Организация = &Организация
	|		И ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.Активность
	|	И ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратТоваровПоставщику)
	|	И ТИПЗНАЧЕНИЯ(ДанныеРегистра.ЗаказПоставщику) <> ТИП(Документ.ВозвратТоваровПоставщику)
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеРегистра.ПредоплатаРегл > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереносПретензииНаРасчеты) КАК ХозяйственнаяОперация,
	|	АналитикаПоПартнерам.Организация КАК Организация,
	|	ДокументыКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыКОтражению КАК ДокументыКОтражению
	|	ПО
	|		ДанныеРегистра.Регистратор = ДокументыКОтражению.Документ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|	ПО
	|		АналитикаПоПартнерам.Организация = &Организация
	|		И ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.Активность
	|	И ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратТоваровПоставщику)
	|	И ДанныеРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДанныеРегистра.ДолгРегл > 0
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ПроверитьПравилаОтраженияПоДаннымОперативногоУчета(ТаблицаОшибок, МенеджерВременныхТаблиц, Организация)
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьПроводкиМеждународногоУчетаПоДаннымОперативного") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозоперацииКОтражению.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ХозоперацииКОтражению.Организация КАК Организация,
	|	ХозоперацииКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ПОМЕСТИТЬ ХозоперацииКОтражению
	|ИЗ
	|	(%ТекстЗапросаПоРегистрам%
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	%ТекстЗапросаПоВыручкеИСебестоимости%
	|
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	%ТекстЗапросаПоЗачетамАванса%
	|	) КАК ХозоперацииКОтражению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШаблоныПроводок.Ссылка КАК ШаблонПроводки,
	|	ШаблоныПроводок.Операция КАК Операция,
	|	ПравилаОтражения.УчетнаяПолитика КАК УчетнаяПолитика
	|ПОМЕСТИТЬ ШаблоныПроводок
	|ИЗ
	|	Справочник.ШаблоныПроводокДляМеждународногоУчета КАК ШаблоныПроводок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтражения
	|	ПО
	|		ШаблоныПроводок.Ссылка = ПравилаОтражения.ШаблонПроводки
	|ИНДЕКСИРОВАТЬ ПО
	|	ШаблонПроводки,
	|	Операция,
	|	УчетнаяПолитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиХозопераций.Ссылка КАК Операция,
	|	НастройкиХозопераций.ИсточникДанных КАК ИсточникДанных,
	|	НастройкиХозопераций.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НастройкиХозопераций.Наименование КАК Наименование,
	|	ХозоперацииКОтражению.УчетнаяПолитика КАК УчетнаяПолитика
	|ИЗ
	|	Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозопераций
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ХозоперацииКОтражению КАК ХозоперацииКОтражению
	|	ПО
	|		НастройкиХозопераций.ХозяйственнаяОперация = ХозоперацииКОтражению.ХозяйственнаяОперация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ШаблоныПроводок КАК ШаблоныПроводок
	|	ПО
	|		НастройкиХозопераций.Ссылка = ШаблоныПроводок.Операция
	|		И ХозоперацииКОтражению.УчетнаяПолитика = ШаблоныПроводок.УчетнаяПолитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ХозяйственныеОперацииНеОтражаемыеВМеждународномУчете КАК НеОтражаемыеХозоперации
	|	ПО
	|		НастройкиХозопераций.Ссылка = НеОтражаемыеХозоперации.Операция
	|		И ХозоперацииКОтражению.УчетнаяПолитика = НеОтражаемыеХозоперации.УчетнаяПолитика
	|ГДЕ
	|	ШаблоныПроводок.ШаблонПроводки ЕСТЬ NULL
	|	И НеОтражаемыеХозоперации.Операция ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиХозопераций.Наименование
	|";
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТекстЗапросаПоРегистрам%", ТекстЗапросаПоРегистрамКОтражениВМеждународномУчете());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТекстЗапросаПоВыручкеИСебестоимости%", ТекстЗапросаПоВыручкеИСебестоимости());
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ТекстЗапросаПоЗачетамАванса%", ТекстЗапросаПоЗачетамАванса());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаОшибок.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ТаблицаОшибок.Сортировать("Операция, УчетнаяПолитика");
	
КонецПроцедуры

Процедура ПроверитьПравилаОтраженияПоДаннымРеглУчета(ТаблицаОшибок, МенеджерВременныхТаблиц, Организация)
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьПроводкиМеждународногоУчетаПоДаннымРегламентированного") Тогда
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.Организация,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаДт,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.ПодразделениеКт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаКт,
	|	ХозрасчетныйДвиженияССубконто.Сумма
	|ПОМЕСТИТЬ ПроводкиРеглУчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			,
	|			,
	|			Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыКОтражению.Документ
	|				ИЗ
	|					ДокументыКОтражению КАК ДокументыКОтражению),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОтражению.УчетнаяПолитика,
	|	ПроводкиРеглУчета.Организация,
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СубконтоДт1,
	|	ПроводкиРеглУчета.СубконтоДт2,
	|	ПроводкиРеглУчета.СубконтоДт3,
	|	ПроводкиРеглУчета.ПодразделениеДт,
	|	ПроводкиРеглУчета.ВалютаДт,
	|	ПроводкиРеглУчета.СчетКт,
	|	ПроводкиРеглУчета.СубконтоКт1,
	|	ПроводкиРеглУчета.СубконтоКт2,
	|	ПроводкиРеглУчета.СубконтоКт3,
	|	ПроводкиРеглУчета.ПодразделениеКт,
	|	ПроводкиРеглУчета.ВалютаКт,
	|	СУММА(ПроводкиРеглУчета.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ОборотыДокументовКОтражениюВУчете
	|ИЗ
	|	ПроводкиРеглУчета КАК ПроводкиРеглУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО ПроводкиРеглУчета.Регистратор = ДокументыКОтражению.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыКОтражению.УчетнаяПолитика,
	|	ПроводкиРеглУчета.Организация,
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СубконтоДт1,
	|	ПроводкиРеглУчета.СубконтоДт2,
	|	ПроводкиРеглУчета.СубконтоДт3,
	|	ПроводкиРеглУчета.ПодразделениеДт,
	|	ПроводкиРеглУчета.ВалютаДт,
	|	ПроводкиРеглУчета.СчетКт,
	|	ПроводкиРеглУчета.СубконтоКт1,
	|	ПроводкиРеглУчета.СубконтоКт2,
	|	ПроводкиРеглУчета.СубконтоКт3,
	|	ПроводкиРеглУчета.ПодразделениеКт,
	|	ПроводкиРеглУчета.ВалютаКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументыКОтражению.УчетнаяПолитика,
	|	ПроводкиРеглУчета.СчетДт,
	|	ПроводкиРеглУчета.СчетКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПравилаОтражения.УчетнаяПолитика,
	|	СоответствияОборотов.Ссылка КАК Ссылка,
	|	СоответствияОборотов.СчетРеглУчетаДт,
	|	СоответствияОборотов.СчетРеглУчетаКт,
	|	СоответствияОборотов.УстановленДополнительныйОтбор,
	|	СоответствияОборотов.ДополнительныйОтбор
	|ПОМЕСТИТЬ СоответствияОборотов
	|ИЗ
	|	Справочник.СоответствияОборотовМеждународногоУчета КАК СоответствияОборотов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтражения
	|		ПО СоответствияОборотов.Ссылка = ПравилаОтражения.ШаблонПроводки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравилаОтражения.УчетнаяПолитика,
	|	СоответствияОборотов.СчетРеглУчетаДт,
	|	СоответствияОборотов.СчетРеглУчетаКт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПравилаОтражения.УчетнаяПолитика,
	|	СоответствияСчетов.Ссылка КАК Ссылка,
	|	СоответствияСчетов.СчетРеглУчета,
	|	СоответствияСчетов.УстановленДополнительныйОтбор,
	|	СоответствияСчетов.ДополнительныйОтбор
	|ПОМЕСТИТЬ СоответствияСчетов
	|ИЗ
	|	Справочник.СоответствияСчетовМеждународногоУчета КАК СоответствияСчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтражения
	|		ПО СоответствияСчетов.Ссылка = ПравилаОтражения.ШаблонПроводки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравилаОтражения.УчетнаяПолитика,
	|	СоответствияСчетов.СчетРеглУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствияОборотов.УчетнаяПолитика,
	|	СоответствияОборотов.Ссылка КАК Ссылка,
	|	СоответствияОборотов.СчетРеглУчетаДт,
	|	СоответствияОборотов.СчетРеглУчетаКт,
	|	СоответствияОборотов.УстановленДополнительныйОтбор
	|ПОМЕСТИТЬ УникальныеСоответствияОборотов
	|ИЗ
	|	СоответствияОборотов КАК СоответствияОборотов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОборотыДокументовКОтражениюВУчете КАК ОборотыДокументовКОтражениюВУчете
	|		ПО СоответствияОборотов.УчетнаяПолитика = ОборотыДокументовКОтражениюВУчете.УчетнаяПолитика
	|			И СоответствияОборотов.СчетРеглУчетаДт = ОборотыДокументовКОтражениюВУчете.СчетДт
	|			И СоответствияОборотов.СчетРеглУчетаКт = ОборотыДокументовКОтражениюВУчете.СчетКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствияСчетов.УчетнаяПолитика,
	|	СоответствияСчетов.Ссылка КАК Ссылка,
	|	СоответствияСчетов.СчетРеглУчета,
	|	СоответствияСчетов.УстановленДополнительныйОтбор
	|ПОМЕСТИТЬ УникальныеСоответствияСчетов
	|ИЗ
	|	СоответствияСчетов КАК СоответствияСчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОборотыДокументовКОтражениюВУчете КАК ОборотыДокументовКОтражениюВУчете
	|		ПО СоответствияСчетов.УчетнаяПолитика = ОборотыДокументовКОтражениюВУчете.УчетнаяПолитика
	|			И (СоответствияСчетов.СчетРеглУчета = ОборотыДокументовКОтражениюВУчете.СчетДт
	|				ИЛИ СоответствияСчетов.СчетРеглУчета = ОборотыДокументовКОтражениюВУчете.СчетКт)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыДокументовКОтражениюВУчете.УчетнаяПолитика,
	|	ОборотыДокументовКОтражениюВУчете.Организация,
	|	ОборотыДокументовКОтражениюВУчете.СчетДт,
	|	ОборотыДокументовКОтражениюВУчете.СубконтоДт1,
	|	ОборотыДокументовКОтражениюВУчете.СубконтоДт2,
	|	ОборотыДокументовКОтражениюВУчете.СубконтоДт3,
	|	ОборотыДокументовКОтражениюВУчете.ПодразделениеДт,
	|	ОборотыДокументовКОтражениюВУчете.ВалютаДт,
	|	ОборотыДокументовКОтражениюВУчете.СчетКт,
	|	ОборотыДокументовКОтражениюВУчете.СубконтоКт1,
	|	ОборотыДокументовКОтражениюВУчете.СубконтоКт2,
	|	ОборотыДокументовКОтражениюВУчете.СубконтоКт3,
	|	ОборотыДокументовКОтражениюВУчете.ПодразделениеКт,
	|	ОборотыДокументовКОтражениюВУчете.ВалютаКт
	|ИЗ
	|	ОборотыДокументовКОтражениюВУчете КАК ОборотыДокументовКОтражениюВУчете
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УникальныеСоответствияОборотов.УчетнаяПолитика,
	|	УникальныеСоответствияОборотов.Ссылка,
	|	УникальныеСоответствияОборотов.СчетРеглУчетаДт,
	|	УникальныеСоответствияОборотов.СчетРеглУчетаКт,
	|	УникальныеСоответствияОборотов.УстановленДополнительныйОтбор,
	|	УникальныеСоответствияОборотов.Ссылка.ДополнительныйОтбор КАК ДополнительныйОтбор
	|ИЗ
	|	УникальныеСоответствияОборотов КАК УникальныеСоответствияОборотов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УникальныеСоответствияСчетов.УчетнаяПолитика,
	|	УникальныеСоответствияСчетов.Ссылка,
	|	УникальныеСоответствияСчетов.СчетРеглУчета,
	|	УникальныеСоответствияСчетов.УстановленДополнительныйОтбор,
	|	УникальныеСоответствияСчетов.Ссылка.ДополнительныйОтбор КАК ДополнительныйОтбор
	|ИЗ
	|	УникальныеСоответствияСчетов КАК УникальныеСоответствияСчетов";
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаСоответствияОборотов = РезультатЗапроса[7].Выбрать();
	ВыборкаСоответствияСчетов = РезультатЗапроса[8].Выбрать();
	
	ТаблицаОборотов = РезультатЗапроса[6].Выгрузить();
	ТаблицаОборотов.Колонки.Добавить("НомерСтроки");
	ТаблицаОборотов.Индексы.Добавить("НомерСтроки");
	
	НомерСтроки = 1;
	Для каждого Строка Из ТаблицаОборотов Цикл 
		Строка.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	Если Не ТаблицаОборотов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ПрименитьСоответствияОборотов(ТаблицаОборотов, ВыборкаСоответствияОборотов);
	
	Если Не ТаблицаОборотов.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСчетовБезСоотвествий = ПрименитьСоответствияСчетов(ТаблицаОборотов, ВыборкаСоответствияСчетов);
	
	Отбор = Новый Структура("Счет, УчетнаяПолитика");
	Для каждого Строка Из ТаблицаСчетовБезСоотвествий Цикл
		ЗаполнитьЗначенияСвойств(Отбор, Строка);
		Если ТаблицаОшибок.НайтиСтроки(Отбор).Количество() = 0 Тогда
			НоваяОшибка  = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяОшибка, Строка);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаОшибок.Сортировать("Счет, УчетнаяПолитика");
	
КонецПроцедуры

Процедура ПрименитьСоответствияОборотов(ТаблицаОборотов, ВыборкаСоответствияОборотов)
	
	СхемаКомпоновкиДанных = МеждународныйУчетПроведениеСервер.СхемаКомпоновкиДанныхРеглУчета(ТаблицаОборотов);
	
	Пока ВыборкаСоответствияОборотов.Следующий() Цикл
		
		Настройки = Новый НастройкиКомпоновкиДанных;
		НоваяГруппировка = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		НоваяГруппировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		НоваяГруппировка.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
		
		ФинансоваяОтчетностьСервер.НовоеПолеВыбора(Настройки, "НомерСтроки");
		
		МеждународныйУчетПроведениеСервер.УстановитьОтборПроводокПоСоответствиюОборотов(
			СхемаКомпоновкиДанных, Настройки, ВыборкаСоответствияОборотов);
		
		ВнешниеНаборы = Новый Структура;
		ВнешниеНаборы.Вставить("ТаблицаДанных", ТаблицаОборотов);
		
		РезультатПримененияСоответствия = 
			ФинансоваяОтчетностьСервер.ВыгрузитьРезультатСКД(СхемаКомпоновкиДанных, Настройки, ВнешниеНаборы);
			
		Для каждого Строка Из РезультатПримененияСоответствия Цикл
			СтрокаТаблицыОборотов = ТаблицаОборотов.Найти(Строка.НомерСтроки, "НомерСтроки");
			ТаблицаОборотов.Удалить(СтрокаТаблицыОборотов);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПрименитьСоответствияСчетов(ТаблицаОборотов, ВыборкаСоответствияСчетов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОборотов.УчетнаяПолитика,
	|	ТаблицаОборотов.Организация,
	|	ТаблицаОборотов.СчетДт,
	|	ТаблицаОборотов.СубконтоДт1,
	|	ТаблицаОборотов.СубконтоДт2,
	|	ТаблицаОборотов.СубконтоДт3,
	|	ТаблицаОборотов.ПодразделениеДт,
	|	ТаблицаОборотов.ВалютаДт,
	|	ТаблицаОборотов.СчетКт,
	|	ТаблицаОборотов.СубконтоКт1,
	|	ТаблицаОборотов.СубконтоКт2,
	|	ТаблицаОборотов.СубконтоКт3,
	|	ТаблицаОборотов.ПодразделениеКт,
	|	ТаблицаОборотов.ВалютаКт
	|ПОМЕСТИТЬ ТаблицаОборотов
	|ИЗ
	|	&ТаблицаОборотов КАК ТаблицаОборотов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОборотов.УчетнаяПолитика КАК УчетнаяПолитика,
	|	ТаблицаОборотов.Организация КАК Организация,
	|	ТаблицаОборотов.СчетДт КАК Счет,
	|	ТаблицаОборотов.СубконтоДт1 КАК Субконто1,
	|	ТаблицаОборотов.СубконтоДт2 КАК Субконто2,
	|	ТаблицаОборотов.СубконтоДт3 КАК Субконто3,
	|	ТаблицаОборотов.ПодразделениеДт КАК Подразделение,
	|	ТаблицаОборотов.ВалютаДт КАК Валюта
	|ПОМЕСТИТЬ ТаблицаСчетов
	|ИЗ
	|	ТаблицаОборотов КАК ТаблицаОборотов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОборотов.УчетнаяПолитика,
	|	ТаблицаОборотов.Организация,
	|	ТаблицаОборотов.СчетКт,
	|	ТаблицаОборотов.СубконтоКт1,
	|	ТаблицаОборотов.СубконтоКт2,
	|	ТаблицаОборотов.СубконтоКт3,
	|	ТаблицаОборотов.ПодразделениеКт,
	|	ТаблицаОборотов.ВалютаКт
	|ИЗ
	|	ТаблицаОборотов КАК ТаблицаОборотов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УчетнаяПолитика,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСчетов.УчетнаяПолитика,
	|	ТаблицаСчетов.Организация,
	|	ТаблицаСчетов.Счет,
	|	ТаблицаСчетов.Субконто1,
	|	ТаблицаСчетов.Субконто2,
	|	ТаблицаСчетов.Субконто3,
	|	ТаблицаСчетов.Подразделение,
	|	ТаблицаСчетов.Валюта
	|ИЗ
	|	ТаблицаСчетов КАК ТаблицаСчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаРеглУчетаИгнорируемыеПриОтраженииВМеждународномУчете КАК ИгнорируемыеСчета
	|		ПО ТаблицаСчетов.УчетнаяПолитика = ИгнорируемыеСчета.УчетнаяПолитика
	|			И ТаблицаСчетов.Счет = ИгнорируемыеСчета.СчетРеглУчета
	|ГДЕ
	|	ИгнорируемыеСчета.СчетРеглУчета ЕСТЬ NULL
	|	И ТаблицаСчетов.Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаОборотов", ТаблицаОборотов);
	
	ТаблицаСчетов = Запрос.Выполнить().Выгрузить();
	ТаблицаСчетов.Колонки.Добавить("НомерСтроки");
	ТаблицаСчетов.ИНдексы.Добавить("НомерСтроки");
	НомерСтроки = 1;
	Для каждого Строка Из ТаблицаСчетов Цикл
		Строка.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
	СхемаКомпоновкиДанных = МеждународныйУчетПроведениеСервер.СхемаКомпоновкиДанныхРеглУчета(ТаблицаСчетов);
	
	Пока ВыборкаСоответствияСчетов.Следующий() Цикл
		Настройки = Новый НастройкиКомпоновкиДанных;
		НоваяГруппировка = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		НоваяГруппировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		НоваяГруппировка.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
		
		ФинансоваяОтчетностьСервер.НовоеПолеВыбора(Настройки, "НомерСтроки");
		
		МеждународныйУчетПроведениеСервер.УстановитьОтборПроводокПоСоответствиюСчетов(
			СхемаКомпоновкиДанных, Настройки, ВыборкаСоответствияСчетов);
		
		ВнешниеНаборы = Новый Структура;
		ВнешниеНаборы.Вставить("ТаблицаДанных", ТаблицаСчетов);
		
		РезультатПримененияСоответствия = 
			ФинансоваяОтчетностьСервер.ВыгрузитьРезультатСКД(СхемаКомпоновкиДанных, Настройки, ВнешниеНаборы);
			
		Для каждого Строка Из РезультатПримененияСоответствия Цикл
			СтрокаТаблицыСчетов = ТаблицаСчетов.Найти(Строка.НомерСтроки, "НомерСтроки");
			ТаблицаСчетов.Удалить(СтрокаТаблицыСчетов);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаСчетов;
	
КонецФункции

#КонецОбласти

#КонецЕсли