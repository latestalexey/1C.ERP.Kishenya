#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проверка_возможности_создания_ведомостей 

Функция МожноСоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент) Экспорт
	
	// Создавать ведомости можно только по потенциально межрасчетным документам.
	ВидМежрасчетногоДокумента = Перечисления.ВидыДокументовМежрасчетныхНачислений.ПоДокументу(РасчетныйДокумент);
	Если ВидМежрасчетногоДокумента = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Документ нельзя выплачивать в межрасчет';uk='Документ можна виплачувати в міжрозрахунковий період'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;	
	
	Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РасчетныйДокумент, "Проведен") Тогда
		ТекстСообщения = НСтр("ru='Выплата возможна только по проведенному документу';uk='Виплата можлива лише за проведеним документу'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйДокумент", РасчетныйДокумент);
	Запрос.УстановитьПараметр("Организация", РасчетныйДокумент.Организация);
	Запрос.УстановитьПараметр("ГруппаФСС", Справочники.ГруппыУчетаНачисленийИУдержаний.НачисленияФСС);
	
	// Должна быть указана выплата в межрасчет
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
 	|	1 КАК Один
 	|ИЗ
 	|	РегистрСведений.ПорядокВыплатыДокументов КАК ПорядокВыплатыДокументов
 	|ГДЕ
 	|	ПорядокВыплатыДокументов.ДокументОснование = &РасчетныйДокумент
 	|	И ПорядокВыплатыДокументов.ПорядокВыплаты = ЗНАЧЕНИЕ(Перечисление.ХарактерВыплатыЗарплаты.Межрасчет)";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой()Тогда
		ТекстСообщения = НСтр("ru='Документ не предназначен для выплаты в межрасчетный период';uk='Документ не призначений для виплати в міжрозрахунковий період'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;

	// Должны остаться суммы к выплате по документу.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОстатки.ДокументОснование,
	|	СУММА(ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток) КАК СуммаКВыплате,
	|	СУММА(ВЫБОР
	|		КОГДА ЗарплатаКВыплатеОстатки.ГруппаУчетаНачислений <> &ГруппаФСС
	|				ИЛИ НЕ ОплатаПособийСоциальногоСтрахования.ДокументОснование ЕСТЬ NULL
	|				ИЛИ ЕСТЬNULL(НастройкиУчетаПособийСоциальногоСтрахования.РазрешенаВыплатаПособийДоОплатыФСС, ЛОЖЬ)
	|			ТОГДА ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК ДоступныйОстаток
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате.Остатки(, ДокументОснование = &РасчетныйДокумент) КАК ЗарплатаКВыплатеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОплатаПособийСоциальногоСтрахования КАК ОплатаПособийСоциальногоСтрахования
	|		ПО ЗарплатаКВыплатеОстатки.ДокументОснование = ОплатаПособийСоциальногоСтрахования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаПособийСоциальногоСтрахования КАК НастройкиУчетаПособийСоциальногоСтрахования
	|		ПО НастройкиУчетаПособийСоциальногоСтрахования.Организация = &Организация
	|ГДЕ
	|	ЗарплатаКВыплатеОстатки.СуммаКВыплатеОстаток > 0
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплатеОстатки.ДокументОснование
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.СуммаКВыплате = Выборка.ДоступныйОстаток Тогда
			Возврат Истина;
		ИначеЕсли Выборка.ДоступныйОстаток = 0 Тогда
			//В документе только суммы ФСС без оплаты
		    ТекстСообщения = НСтр("ru='Пособия ФСС выплачиваются только после поступления средств от фонда';uk='Допомоги ФСС виплачуються тільки після надходження коштів від фонду'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Ложь
		Иначе
			//В документе есть суммы ФСС без оплаты, но есть и другие выплаты
		    ТекстСообщения = НСтр("ru='Пособия ФСС выплачиваются только после поступления средств от фонда, документ оплачивается частично';uk='Допомоги ФСС виплачуються тільки після надходження коштів від фонду, чи документ сплачується частково'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Истина;
		КонецЕсли;	
	Иначе	
		ТекстСообщения = НСтр("ru='По документу не осталось сумм к выплате';uk='За документом не залишилося сум до виплати'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь
	КонецЕсли;
		
	Возврат Истина
	
КонецФункции

#КонецОбласти

#Область Создание_ведомостей 

Функция ПараметрыСозданияВедомостейПоРасчетномуДокументу() Экспорт
	
	ПараметрыСозданияВедомостейПоРасчетномуДокументу = Новый Структура;
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("УникальныйИдентификаторФормы");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("СпособВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ДатаВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("Округление");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ВРазрезеПодразделений");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ВРазрезеИсточников");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ПроцентВыплаты");
	ПараметрыСозданияВедомостейПоРасчетномуДокументу.Вставить("ПорядокЗаполненияНалогов");
	
	Возврат ПараметрыСозданияВедомостейПоРасчетномуДокументу;
	
КонецФункции

Функция СоздатьВедомостиПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания) Экспорт
	
	СписокВедомостей = НовыйСписокВедомостей();
	
	ВыборкаКлючейВедомостей = КлючиВедомостейПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания);
	
	Пока ВыборкаКлючейВедомостей.Следующий() Цикл
		
		Ведомость = НоваяВедомостьПоРасчетномуДокументу(РасчетныйДокумент, ВыборкаКлючейВедомостей, ПараметрыСоздания);
		
		Ведомость.ЗаполнитьЗарплату();
		
		Строка = СписокВедомостей.Добавить();
		Строка.Адрес = ПоместитьВоВременноеХранилище(ОбщегоНазначения.ЗначениеВСтрокуXML(Ведомость), ПараметрыСоздания.УникальныйИдентификаторФормы);
		Строка.Представление = ПредставлениеВедомости(Ведомость);
		
	КонецЦикла;
	
	Возврат СписокВедомостей	
	
КонецФункции

Функция НовыйСписокВедомостей()
	
	ТаблицаВедомостей = Новый ТаблицаЗначений;
	ТаблицаВедомостей.Колонки.Добавить("Адрес");
	ТаблицаВедомостей.Колонки.Добавить("Представление");
	
	Возврат ТаблицаВедомостей
	
КонецФункции

Функция КлючиВедомостейПоРасчетномуДокументу(РасчетныйДокумент, ПараметрыСоздания)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
	
	Запрос.УстановитьПараметр("РасчетныйДокумент",		РасчетныйДокумент);
	Запрос.УстановитьПараметр("ВРазрезеПодразделений",	ПараметрыСоздания.ВРазрезеПодразделений);
	Запрос.УстановитьПараметр("ВРазрезеИсточников",		ПараметрыСоздания.ВРазрезеИсточников);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗарплатаКВыплате.Сотрудник,
	|	ЗарплатаКВыплате.Подразделение,
	|	ЗарплатаКВыплате.Организация
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
	|ГДЕ
	|	ЗарплатаКВыплате.Регистратор = &РасчетныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник,
	|	ВЫБОР
	|		КОГДА МестаВыплатыЗарплатыСотрудников.Вид ЕСТЬ НЕ NULL 
	|			ТОГДА МестаВыплатыЗарплатыСотрудников.Вид
	|		КОГДА МестаВыплатыЗарплатыПодразделений.Вид ЕСТЬ НЕ NULL 
	|			ТОГДА МестаВыплатыЗарплатыПодразделений.Вид
	|		КОГДА МестаВыплатыЗарплатыОрганизаций.Вид ЕСТЬ НЕ NULL 
	|			ТОГДА МестаВыплатыЗарплатыОрганизаций.Вид
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыМестВыплатыЗарплаты.Касса)
	|	КОНЕЦ КАК ВидМестаВыплаты,
	|	ВЫБОР
	|		КОГДА МестаВыплатыЗарплатыСотрудников.МестоВыплаты ЕСТЬ НЕ NULL 
	|				И МестаВыплатыЗарплатыСотрудников.МестоВыплаты <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ВЫБОР
	|					КОГДА МестаВыплатыЗарплатыСотрудников.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыМестВыплатыЗарплаты.БанковскийСчет)
	|						ТОГДА МестаВыплатыЗарплатыСотрудников.МестоВыплаты.Банк
	|					ИНАЧЕ МестаВыплатыЗарплатыСотрудников.МестоВыплаты
	|				КОНЕЦ
	|		КОГДА МестаВыплатыЗарплатыПодразделений.МестоВыплаты ЕСТЬ НЕ NULL 
	|				И МестаВыплатыЗарплатыПодразделений.МестоВыплаты <> НЕОПРЕДЕЛЕНО
	|			ТОГДА МестаВыплатыЗарплатыПодразделений.МестоВыплаты
	|		КОГДА МестаВыплатыЗарплатыОрганизаций.МестоВыплаты ЕСТЬ НЕ NULL 
	|				И МестаВыплатыЗарплатыОрганизаций.МестоВыплаты <> НЕОПРЕДЕЛЕНО
	|			ТОГДА МестаВыплатыЗарплатыОрганизаций.МестоВыплаты
	|	КОНЕЦ КАК МестоВыплаты
	|ПОМЕСТИТЬ ВТМестаВыплатыЗарплатыСотрудников
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестаВыплатыЗарплатыОрганизаций КАК МестаВыплатыЗарплатыОрганизаций
	|		ПО (МестаВыплатыЗарплатыОрганизаций.Организация = Сотрудники.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестаВыплатыЗарплатыПодразделений КАК МестаВыплатыЗарплатыПодразделений
	|		ПО (МестаВыплатыЗарплатыПодразделений.Подразделение = Сотрудники.Подразделение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестаВыплатыЗарплатыСотрудников КАК МестаВыплатыЗарплатыСотрудников
	|		ПО (МестаВыплатыЗарплатыСотрудников.Сотрудник = Сотрудники.Сотрудник)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарплатаКВыплате.Организация КАК Организация,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА &ВРазрезеПодразделений
	|			ТОГДА ЗарплатаКВыплате.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	МестаВыплатыЗарплаты.ВидМестаВыплаты КАК ВидМестаВыплаты,
	|	МестаВыплатыЗарплаты.МестоВыплаты КАК МестоВыплаты,
	|	СУММА(ЗарплатаКВыплате.СуммаКВыплате) КАК КВыплате
	|ИЗ
	|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМестаВыплатыЗарплатыСотрудников КАК МестаВыплатыЗарплаты
	|		ПО (МестаВыплатыЗарплаты.Сотрудник = ЗарплатаКВыплате.Сотрудник)
	|ГДЕ
	|	ЗарплатаКВыплате.Регистратор = &РасчетныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаКВыплате.Организация,
	|	ЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА &ВРазрезеПодразделений
	|			ТОГДА ЗарплатаКВыплате.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВРазрезеИсточников
	|			ТОГДА ЗарплатаКВыплате.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	МестаВыплатыЗарплаты.ВидМестаВыплаты,
	|	МестаВыплатыЗарплаты.МестоВыплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодРегистрации,
	|	Подразделение,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	ВидМестаВыплаты,
	|	МестоВыплаты";
	
	ВыборкаЗарплатыКВыплатеПоРасчетномуДокументу = Запрос.Выполнить().Выбрать();

	Возврат ВыборкаЗарплатыКВыплатеПоРасчетномуДокументу
	
КонецФункции

Функция НоваяВедомостьПоРасчетномуДокументу(РасчетныйДокумент, КлючВедомости, ПараметрыСоздания)
	
	ДокументМенеджер = ВзаиморасчетыССотрудниками.МенеджерДокументаВедомостьПоВидуМестаВыплаты(КлючВедомости.ВидМестаВыплаты); 
	
	Ведомость = ДокументМенеджер.СоздатьДокумент();
	
	ДанныеЗаполнения = ВзаиморасчетыССотрудниками.ДанныеЗаполненияВедомости();
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения.Шапка, КлючВедомости);
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения.Шапка, ПараметрыСоздания);
	ДанныеЗаполнения.Шапка.Дата = ПараметрыСоздания.ДатаВыплаты;
	ДанныеЗаполнения.Основания.Добавить(РасчетныйДокумент);
	
	Ведомость.Заполнить(ДанныеЗаполнения);


	Ведомость.СтатьяФинансирования	= КлючВедомости.СтатьяФинансирования;
	Ведомость.СтатьяРасходов		= КлючВедомости.СтатьяРасходов;
	
	Возврат Ведомость
	
КонецФункции
	
Функция ПредставлениеВедомости(Ведомость)
	
	ШаблонПредставления = НСтр("ru='%1 на общую сумму %2 %3 (НДФЛ на сумму %6 %3, взносы на сумму %7 %3), сотрудников %4: %5';uk='%1 на загальну суму %2 %3 (ПДФО на суму %6 %3, внески на суму %7 %3), співробітників %4: %5'");
	
	Тип = Ведомость.Метаданные().Синоним;
	Сумма	= Ведомость.Зарплата.Итог("КВыплате");
	Валюта	= НСтр("ru='грн.';uk='грн.'");
	Сотрудники = Ведомость.Зарплата.Выгрузить(, "Сотрудник");
	Сотрудники.Свернуть("Сотрудник");
	КоличествоСотрудников	= Сотрудники.Количество();
	КраткийСоставСотрудников= ЗарплатаКадры.КраткийСоставСотрудников(Ведомость.Зарплата.ВыгрузитьКолонку("Сотрудник"), Ведомость.Дата);
	СуммаНДФЛ = Ведомость.НДФЛ.Итог("Сумма");
	СуммаВзносы = Ведомость.ВзносыФОТ.Итог("Сумма");
	
	ПредставлениеВедомости = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления, Тип, Сумма, Валюта, КоличествоСотрудников, КраткийСоставСотрудников, СуммаНДФЛ, СуммаВзносы);
	
	Возврат ПредставлениеВедомости
	
КонецФункции

#КонецОбласти

#Область Сохранение_ведомостей 

Процедура СохранитьВедомостиНаСервере(СписокВедомостей, РежимЗаписи)	Экспорт
	
	НачатьТранзакцию();
	
	Для Каждого СтрокаСпискаВедомостей Из СписокВедомостей Цикл
		СтрокаXML = ПолучитьИзВременногоХранилища(СтрокаСпискаВедомостей.Адрес);
		Ведомость = ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
		Ведомость.Записать(РежимЗаписи);
	КонецЦикла;	
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#КонецЕсли