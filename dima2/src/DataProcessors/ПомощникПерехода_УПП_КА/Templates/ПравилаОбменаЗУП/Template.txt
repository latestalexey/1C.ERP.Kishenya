<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП21">2.01</ВерсияФормата>
	<Ид>6f614c95-324b-44a4-a628-5e9d596fa9fe    </Ид>
	<Наименование>УПП 1.3 - BASERP (зарплата)</Наименование>
	<ДатаВремяСоздания>2017-12-13T14:51:38</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.3.53.1" СинонимКонфигурации="Управление производственным предприятием для Украины, редакция 1.3">УправлениеПроизводственнымПредприятиемДляУкраины</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.1.1.76" СинонимКонфигурации="BAS ERP">BASERP</Приемник>
	<ПередВыгрузкойДанных>Параметры.Алгоритмы				= Алгоритмы;
//Параметры.ВременноеХранилище	= ОбъектыПереносаДанных.НовыйОбъект("Структура");
Параметры.ВременноеХранилище	= Новый Структура;

СтрокаТаблицы = ТаблицаНастройкиПараметров.Найти("ПереноситьНачисленияПредыдущейПрограммыДляОтладки", "Имя");
Если СтрокаТаблицы &lt;&gt; Неопределено И СтрокаТаблицы.Значение &gt; 0 Тогда
	Параметры.ПереноситьНачисленияПредыдущейПрограммы = Истина;
КонецЕсли;

Если ЭтоИнтерактивныйРежим И ЗначениеЗаполнено(ДатаНачала) Тогда
	
	Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
		Параметры.ДатаНачалаПереносаРасчетныхДанных = ДатаНачала;
	Иначе
		Параметры.МесяцНачалаЭксплуатации = НачалоМесяца(ДатаНачала);
	КонецЕсли;
	
	ДатаНачала = Дата(1, 1, 1);
	
КонецЕсли;

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Если Не ЗначениеЗаполнено(Параметры.ДатаНачалаПереносаРасчетныхДанных) Тогда
		Параметры.ДатаНачалаПереносаРасчетныхДанных = Дата(2010, 1, 1);
	КонецЕсли;
Иначе
	Если Не ЗначениеЗаполнено(Параметры.МесяцНачалаЭксплуатации) Тогда
		Параметры.МесяцНачалаЭксплуатации = Дата(2015, 1, 1);
	КонецЕсли;
КонецЕсли;

ОбщиеОбъекты = ТаблицаПравилВыгрузки.Строки.Найти("ОбщиеОбъекты", "Имя", Истина);
Если ОбщиеОбъекты &lt;&gt; Неопределено Тогда
	СоздатьГрафикРаботыПятидневка = ТаблицаНастройкиПараметров.Найти("СоздатьГрафикРаботыПятидневка", "Имя");
	СоздатьГрафикРаботыПятидневка.Значение = Не Параметры.ПереноситьНачисленияПредыдущейПрограммы И ОбщиеОбъекты.Включить = 1;
	ОбновитьВидыКонтактнойИнформации = ТаблицаНастройкиПараметров.Найти("ОбновитьВидыКонтактнойИнформации", "Имя");
	ОбновитьВидыКонтактнойИнформации.Значение = Не Параметры.ПереноситьНачисленияПредыдущейПрограммы И ОбщиеОбъекты.Включить = 1;
КонецЕсли;

ФизическиеЛицаСотрудники = ТаблицаПравилВыгрузки.Строки.Найти("ФизическиеЛицаСотрудники", "Имя", Истина);
Если ФизическиеЛицаСотрудники &lt;&gt; Неопределено Тогда
	ОбновитьВидыКонтактнойИнформации = ТаблицаНастройкиПараметров.Найти("ОбновитьВидыКонтактнойИнформации", "Имя");
	ОбновитьВидыКонтактнойИнформации.Значение = ОбновитьВидыКонтактнойИнформации.Значение Или Не Параметры.ПереноситьНачисленияПредыдущейПрограммы И ФизическиеЛицаСотрудники.Включить = 1;
КонецЕсли;

Если ЗначениеЗаполнено(Параметры.СотрудникДляОтладки) Тогда
	Параметры.ФизическоеЛицоДляОтладки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.СотрудникДляОтладки, "Физлицо");
КонецЕсли;

НачисленияУдержания = ТаблицаПравилВыгрузки.Строки.Найти("НачисленияУдержания_ПН", "Имя", Истина);
Если НачисленияУдержания &lt;&gt; Неопределено Тогда
	УстановитьОчередностьРасчетаВидовРасчета = ТаблицаНастройкиПараметров.Найти("УстановитьОчередностьРасчетаВидовРасчета", "Имя");
	УстановитьОчередностьРасчетаВидовРасчета.Значение = Параметры.ПереноситьНачисленияПредыдущейПрограммы И НачисленияУдержания.Включить = 1;
КонецЕсли;

СведенияОДоходахСтраховыеВзносы_ПД = ТаблицаПравилВыгрузки.Строки.Найти("СведенияОДоходахСтраховыеВзносы_ПД", "Имя", Истина);
Если СведенияОДоходахСтраховыеВзносы_ПД &lt;&gt; Неопределено Тогда
	ЗаполнитьДанныеУчетаСтажаПФР = ТаблицаНастройкиПараметров.Найти("ЗаполнитьДанныеУчетаСтажаПФР", "Имя");
	ЗаполнитьДанныеУчетаСтажаПФР.Значение = СведенияОДоходахСтраховыеВзносы_ПД.Включить = 1;
КонецЕсли;

РабочееВремяСотрудников = ТаблицаПравилВыгрузки.Строки.Найти("РабочееВремяСотрудников_ПД", "Имя", Истина);
Если РабочееВремяСотрудников &lt;&gt; Неопределено Тогда
	ПеренестиДанныеУчетаВремениВНовыеРегистры = ТаблицаНастройкиПараметров.Найти("ПеренестиДанныеУчетаВремениВНовыеРегистры", "Имя");
	ПеренестиДанныеУчетаВремениВНовыеРегистры.Значение = Параметры.ПереноситьНачисленияПредыдущейПрограммы И РабочееВремяСотрудников.Включить = 1;
КонецЕсли;

РасчетЗарплаты_ПереносНачислений = ТаблицаПравилВыгрузки.Строки.Найти("РасчетЗарплаты_ПереносНачислений", "Имя", Истина);
Если РасчетЗарплаты_ПереносНачислений &lt;&gt; Неопределено Тогда
	ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего = ТаблицаНастройкиПараметров.Найти("ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего", "Имя");
	ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего.Значение = Параметры.ПереноситьНачисленияПредыдущейПрограммы И РасчетЗарплаты_ПереносНачислений.Включить = 1;
КонецЕсли;


УчетСтраховыхВзносов = ТаблицаПравилВыгрузки.Строки.Найти("УчетСтраховыхВзносов", "Имя", Истина);
Если УчетСтраховыхВзносов &lt;&gt; Неопределено Тогда
	ОбновитьУчетСтраховыхВзносов = ТаблицаНастройкиПараметров.Найти("ОбновитьУчетСтраховыхВзносов", "Имя");
	ОбновитьУчетСтраховыхВзносов.Значение = УчетСтраховыхВзносов.Включить = 1;
КонецЕсли;

ОбщиеОбъекты = ТаблицаПравилВыгрузки.Строки.Найти("ОбщиеОбъекты", "Имя", Истина);
Если ОбщиеОбъекты &lt;&gt; Неопределено Тогда
	ОбновитьНастройкиПрограммы = ТаблицаНастройкиПараметров.Найти("ОбновитьНастройкиПрограммы", "Имя");
	ОбновитьНастройкиПрограммы.Значение = ?(ОбщиеОбъекты.Включить &lt;&gt; 1,0,?(Параметры.ПереноситьНачисленияПредыдущейПрограммы,1,2));
КонецЕсли;

КадровыеДанные_УпрощенныйПеренос = ТаблицаПравилВыгрузки.Строки.Найти("КадровыеДанные_УпрощенныйПеренос", "Имя", Истина);
Если КадровыеДанные_УпрощенныйПеренос &lt;&gt; Неопределено Тогда
	ОбновитьСтруктуруШтатногоРасписания = ТаблицаНастройкиПараметров.Найти("ОбновитьСтруктуруШтатногоРасписания", "Имя");
	ОбновитьСтруктуруШтатногоРасписания.Значение = КадровыеДанные_УпрощенныйПеренос.Включить = 1;
КонецЕсли;</ПередВыгрузкойДанных>
	<ПередЗагрузкойДанных>Параметры.Вставить("ОчередностьРасчетаВидовРасчетаУстановлена", Ложь);</ПередЗагрузкойДанных>
	<ПослеЗагрузкиДанных>Если Параметры.УстановитьОчередностьРасчетаВидовРасчета Тогда
	Выполнить(Алгоритмы.ВидыРасчета_УстановитьОчередностьРасчета);
КонецЕсли;

Если Параметры.СоздатьГрафикРаботыПятидневка Тогда
	УчетРабочегоВремени.СоздатьГрафикРаботыПятидневка();
КонецЕсли;

//Если Параметры.ОбновитьУчетСтраховыхВзносов Тогда
//	Выполнить(Алгоритмы.ОбновитьУчетСтраховыхВзносов);
//КонецЕсли;

Если Параметры.ПеренестиДанныеУчетаВремениВНовыеРегистры Тогда
	УчетРабочегоВремени.ПеренестиДанныеУчетаВремениВНовыеРегистры();
КонецЕсли;

Если Параметры.ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего Тогда
	Выполнить(Алгоритмы.ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего);
КонецЕсли;

Если Параметры.ОбновитьСтруктуруШтатногоРасписания Тогда
	Справочники.ШтатноеРасписание.ОбновитьСтруктуруШтатногоРасписанияПоПодразделениям();
КонецЕсли;

Если Параметры.ОбновитьВидыКонтактнойИнформации Тогда
	Выполнить(Алгоритмы.ОбновитьВидыКонтактнойИнформации);
КонецЕсли;</ПослеЗагрузкиДанных>
	<ПослеЗагрузкиПараметров>Если Параметры.ОбновитьНастройкиПрограммы &lt;&gt; 0 Тогда
	Выполнить(Алгоритмы.ВыполнитьОбновлениеНастроекПрограммы);
КонецЕсли;</ПослеЗагрузкиПараметров>
	<Параметры>
		<Параметр Имя="Алгоритмы                                         " Наименование="Алгоритмы" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВременноеХранилище                                " Наименование="Временное хранилище" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаНачалаПереносаРасчетныхДанных                 " Наименование="Дата начала переноса расчетных данных  (режим переноса начислений)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ТипЗначения="Дата" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ЗаполнитьДанныеУчетаСтажаПФР                      " Наименование="Заполнить данные учета стажа ПФР" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="МесяцНачалаЭксплуатации                           " Наименование="МесяцНачалаЭксплуатации (упрощенный перенос)" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ТипЗначения="Дата" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОбновитьВидыКонтактнойИнформации                  " Наименование="ОбновитьВидыКонтактнойИнформации" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего " Наименование="ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ОбновитьНастройкиПрограммы                        " Наименование="Обновление настроек программы: 1 - перенос начислений, 2 - упрощенный перенос" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ОбновитьСтруктуруШтатногоРасписания               " Наименование="ОбновитьСтруктуруШтатногоРасписанияПоПодразделения" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ОбновитьУчетСтраховыхВзносов                      " Наименование="ОбновитьУчетСтраховыхВзносов" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ПеренестиДанныеУчетаВремениВНовыеРегистры         " Наименование="ПеренестиДанныеУчетаВремениВНовыеРегистры" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ПереноситьНачисленияПредыдущейПрограммы           " Наименование="ПереноситьНачисленияПредыдущейПрограммы" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПереноситьНачисленияПредыдущейПрограммыДляОтладки " Наименование="ПереноситьНачисленияПредыдущейПрограммыОтладка" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СоздатьГрафикРаботыПятидневка                     " Наименование="Создать график работы Пятидневка" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="СотрудникДляОтладки                               " Наименование="Сотрудник для отладки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.СотрудникиОрганизаций" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УстановитьОчередностьРасчетаВидовРасчета          " Наименование="Установить очередность расчета видов расчета  (режим переноса начислений)" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="true" ТипЗначения="Булево" ПередаватьПараметрПриВыгрузке="true"/>
		<Параметр Имя="ФизическоеЛицоДляОтладки                          " Наименование="Физическое лицо для отладки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.ФизическиеЛица" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>ОбщиеОбъекты</Код>
			<Наименование>Общие объекты</Наименование>
			<Порядок>50</Порядок>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>Справочник: Валюты</Наименование>
				<Порядок>50</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПараметрыПрописиНаРусском --&gt; ПараметрыПрописиНаРусском</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПараметрыПрописиНаРусском" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ПараметрыПрописиНаРусском" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ПараметрыПрописиНаУкраинском --&gt; ПараметрыПрописиНаУкраинском</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПараметрыПрописиНаУкраинском" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ПараметрыПрописиНаУкраинском" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыКонтактнойИнформации</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Тип, Наименование, Родитель, Используется");
ВходящиеДанные.Тип				= Источник.Тип;
ВходящиеДанные.Наименование		= Источник.Наименование;
ВходящиеДанные.Родитель			= Источник.Родитель;
ВходящиеДанные.Используется     = Истина;

Если Источник.Предопределенный Тогда
	Источник = Источник.Значение;
	НеЗамещатьОбъектПриЗагрузке = Истина;
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.ВидыКонтактнойИнформации</Источник>
				<Приемник>СправочникСсылка.ВидыКонтактнойИнформации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Тип</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
						<КодПравилаКонвертации>ТипыКонтактнойИнформации                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
						<КодПравилаКонвертации>ВидыКонтактнойИнформации_Родитель                 </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Используется</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Используется" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>АдресОрганизацииПочтовый --&gt; ПочтовыйАдресОрганиза</Наименование>
						<Порядок>50</Порядок>
						<Источник>АдресОрганизацииПочтовый</Источник>
						<Приемник>ПочтовыйАдресОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ИнформАдресФизЛица --&gt; АдресДляИнформированияФизич</Наименование>
						<Порядок>150</Порядок>
						<Источник>ИнформАдресФизЛица</Источник>
						<Приемник>АдресДляИнформированияФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>КонтактнТелефонКандидата --&gt; ТелефонМобильныйФизич</Наименование>
						<Порядок>200</Порядок>
						<Источник>КонтактнТелефонКандидата</Источник>
						<Приемник>ТелефонМобильныйФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>СлужебныйАдресЭлектроннойПочтыПользователя --&gt; Ema</Наименование>
						<Порядок>250</Порядок>
						<Источник>СлужебныйАдресЭлектроннойПочтыПользователя</Источник>
						<Приемник>EmailПользователя</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ТелефонОрганизации --&gt; ТелефонОрганизации</Наименование>
						<Порядок>300</Порядок>
						<Источник>ТелефонОрганизации</Источник>
						<Приемник>ТелефонОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ФаксОрганизации --&gt; ФаксОрганизации</Наименование>
						<Порядок>450</Порядок>
						<Источник>ФаксОрганизации</Источник>
						<Приемник>ФаксОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ФактАдресОрганизации --&gt; ФактАдресОрганизации</Наименование>
						<Порядок>500</Порядок>
						<Источник>ФактАдресОрганизации</Источник>
						<Приемник>ФактАдресОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ФактАдресФизЛица --&gt; АдресМестаПроживанияФизически</Наименование>
						<Порядок>550</Порядок>
						<Источник>ФактАдресФизЛица</Источник>
						<Приемник>АдресМестаПроживанияФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ЮрАдресОрганизации --&gt; ЮрАдресОрганизации</Наименование>
						<Порядок>600</Порядок>
						<Источник>ЮрАдресОрганизации</Источник>
						<Приемник>ЮрАдресОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ЮрАдресФизЛица --&gt; АдресПоПропискеФизическиеЛица</Наименование>
						<Порядок>650</Порядок>
						<Источник>ЮрАдресФизЛица</Источник>
						<Приемник>АдресПоПропискеФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>EmailОрганизации --&gt; EmailОрганизации</Наименование>
						<Порядок>700</Порядок>
						<Источник>EmailОрганизации</Источник>
						<Приемник>EmailОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ТелефонКонтрагента --&gt; ТелефонКонтрагента</Наименование>
						<Порядок>750</Порядок>
						<Источник>ТелефонКонтрагента</Источник>
						<Приемник>ТелефонКонтрагента</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ФактАдресКонтрагента --&gt; ФактАдресКонтрагента</Наименование>
						<Порядок>800</Порядок>
						<Источник>ФактАдресКонтрагента</Источник>
						<Приемник>ФактАдресКонтрагента</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ЮрАдресКонтрагента --&gt; ЮрАдресКонтрагента</Наименование>
						<Порядок>850</Порядок>
						<Источник>ЮрАдресКонтрагента</Источник>
						<Приемник>ЮрАдресКонтрагента</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>EmailФизЛица --&gt; EMailФизическиеЛица</Наименование>
						<Порядок>900</Порядок>
						<Источник>EmailФизЛица</Источник>
						<Приемник>EMailФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>АдресДоставкиКонтрагента --&gt; АдресПартнера</Наименование>
						<Порядок>950</Порядок>
						<Источник>АдресДоставкиКонтрагента</Источник>
						<Приемник>АдресПартнера</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>АдресЭлектроннойПочтыКонтактногоЛицаКонтрагента --</Наименование>
						<Порядок>1000</Порядок>
						<Источник>АдресЭлектроннойПочтыКонтактногоЛицаКонтрагента</Источник>
						<Приемник>EmailКонтактногоЛица</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>МобильныйТелефонКонтактногоЛицаКонтрагента --&gt; Моб</Наименование>
						<Порядок>1050</Порядок>
						<Источник>МобильныйТелефонКонтактногоЛицаКонтрагента</Источник>
						<Приемник>МобильныйТелефонКонтактногоЛица</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>РабочийТелефонКонтактногоЛицаКонтрагента --&gt; Телеф</Наименование>
						<Порядок>1100</Порядок>
						<Источник>РабочийТелефонКонтактногоЛицаКонтрагента</Источник>
						<Приемник>ТелефонКонтактногоЛица</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ТелефонПоЮрАдресуОрганизации --&gt; ТелефонОрганизаци</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ТелефонПоЮрАдресуОрганизации</Источник>
						<Приемник>ТелефонОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ТелефонФизЛицаДомашний --&gt; ТелефонРабочийФизически</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ТелефонФизЛицаДомашний</Источник>
						<Приемник>ТелефонРабочийФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ТелефонФизЛицаСлужебный --&gt; ТелефонМобильныйФизиче</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ТелефонФизЛицаСлужебный</Источник>
						<Приемник>ТелефонМобильныйФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ФаксКонтрагента --&gt; ФаксКонтрагенты</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ФаксКонтрагента</Источник>
						<Приемник>ФаксКонтрагенты</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыКонтактнойИнформации_Родитель</Код>
				<Наименование>Перечисление: Виды объектов контактной информации</Наименование>
				<Порядок>150</Порядок>
				<Источник>ПеречислениеСсылка.ВидыОбъектовКонтактнойИнформации</Источник>
				<Приемник>СправочникСсылка.ВидыКонтактнойИнформации</Приемник>
				<Свойства>
					<Свойство Отключить="true" Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Организации --&gt; СправочникОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник>Организации</Источник>
						<Приемник>СправочникОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Пользователи --&gt; СправочникПользователи</Наименование>
						<Порядок>100</Порядок>
						<Источник>Пользователи</Источник>
						<Приемник>СправочникПользователи</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ФизическиеЛица --&gt; СправочникФизическиеЛица</Наименование>
						<Порядок>150</Порядок>
						<Источник>ФизическиеЛица</Источник>
						<Приемник>СправочникФизическиеЛица</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>КонтактныеЛицаКонтрагентов --&gt; СправочникКонтактны</Наименование>
						<Порядок>200</Порядок>
						<Источник>КонтактныеЛицаКонтрагентов</Источник>
						<Приемник>СправочникКонтактныеЛицаПартнеров</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Контрагенты --&gt; СправочникКонтрагенты</Наименование>
						<Порядок>250</Порядок>
						<Источник>Контрагенты</Источник>
						<Приемник>СправочникКонтрагенты</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыОтпусков</Код>
				<Наименование>Справочник: Виды ежегодных отпусков</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Выполнить(Алгоритмы.ВидыОтпусков_ПередВыгрузкой);</ПередВыгрузкой>
				<ПриЗагрузке>НеЗамещатьОбъект = Объект.Предопределенный;</ПриЗагрузке>
				<ПоследовательностьПолейПоиска>//Выполнить(Алгоритмы.ВидыОтпусков_ПоляПоиска)</ПоследовательностьПолейПоиска>
				<Источник>СправочникСсылка.ВидыОтпусков</Источник>
				<Приемник>СправочникСсылка.ВидыОтпусков</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ОтпускЯвляетсяЕжегодным</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтпускЯвляетсяЕжегодным" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; СпособРасчетаОтпуска</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаОтпуска" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаОтпуска"/>
						<КодПравилаКонвертации>СпособыРасчетаОтпуска                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ПредоставлятьОтпускВсемСотрудникам</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПредоставлятьОтпускВсемСотрудникам" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КоличествоДнейВГод</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДнейВГод" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДополнительныйЕжегодныйОтпуск --&gt; ДополнительныйЕж</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДополнительныйЕжегодныйОтпуск</Источник>
						<Приемник>ДополнительныйЕжегодныйОтпуск</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДополнительныйНаДетей --&gt; ДополнительныйНаДетей</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДополнительныйНаДетей</Источник>
						<Приемник>ДополнительныйНаДетей</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДополнительныйПрочий --&gt; ДополнительныйПрочий</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДополнительныйПрочий</Источник>
						<Приемник>ДополнительныйПрочий</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ЕжегодныйОсновной --&gt; Основной</Наименование>
						<Порядок>200</Порядок>
						<Источник>ЕжегодныйОсновной</Источник>
						<Приемник>Основной</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ОтпускЗаСвойСчет --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>250</Порядок>
						<Источник>ОтпускЗаСвойСчет</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ОтпускЗаСвойСчетПоСоглашению --&gt; ОтпускЗаСвойСчетП</Наименование>
						<Порядок>300</Порядок>
						<Источник>ОтпускЗаСвойСчетПоСоглашению</Источник>
						<Приемник>ОтпускЗаСвойСчетПоСоглашению</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>УчебныйОтпуск --&gt; ОтпускУчебный</Наименование>
						<Порядок>350</Порядок>
						<Источник>УчебныйОтпуск</Источник>
						<Приемник>ОтпускУчебный</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>УчебныйОтпускБезОплаты --&gt; ОтпускБезОплатыУчебный</Наименование>
						<Порядок>400</Порядок>
						<Источник>УчебныйОтпускБезОплаты</Источник>
						<Приемник>ОтпускБезОплатыУчебный</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ЧернобыльскийОтпуск --&gt; ОтпускПострадавшимВАварииЧ</Наименование>
						<Порядок>450</Порядок>
						<Источник>ЧернобыльскийОтпуск</Источник>
						<Приемник>ОтпускПострадавшимВАварииЧАЭС</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыОтпусковТолькоСсылка</Код>
				<Наименование>: </Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>Выполнить(Алгоритмы.ВидыОтпусков_ПередВыгрузкой);</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.ВидыОтпусков</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Контрагенты</Код>
				<Наименование>Справочник: Контрагенты</Наименование>
				<Порядок>300</Порядок>
				<ПриВыгрузке>Если СтрДлина(Источник.ИНН) &lt;= 10 Тогда // оказалось физическое лицо
	ЮрФизЛицо		= "ФизическоеЛицо";
Иначе // оказалась организация
	ЮрФизЛицо		= "ЮридическоеЛицо";
КонецЕсли;

ВходящиеДанные = Новый Структура("ЮридическоеФизическоеЛицо");
ВходящиеДанные.ЮридическоеФизическоеЛицо	= ЮрФизЛицо;</ПриВыгрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>ИНН --&gt; ИННПлательщикаНДС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИННПлательщикаНДС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>КодПоЕДРПОУ --&gt; КодПоЕДРПОУ</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="КодПоЕДРПОУ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПоЕДРПОУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ЮридическоеФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮридическоеФизическоеЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КонтрагентыСтрокой</Код>
				<Наименование>Справочник: Контрагенты</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование, ЮридическоеФизическоеЛицо");
ВходящиеДанные.Наименование					= Источник;
ВходящиеДанные.ЮридическоеФизическоеЛицо	= "ЮридическоеЛицо";</ПередВыгрузкой>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ЮридическоеФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮридическоеФизическоеЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Начисления_Основные</Код>
				<Наименование>План видов расчета: Основные начисления организаций</Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= Источник.Ссылка;

ВходящиеДанные = Новый Структура("Предопределенный");
ВходящиеДанные.Предопределенный = Источник.Предопределенный;</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.Начисление_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Если ПараметрыОбъекта["Предопределенный"] Тогда
	СтрокаИменСвойствПоиска	= "Наименование";
Иначе
	СтрокаИменСвойствПоиска	= "{УникальныйИдентификатор}";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; КатегорияНачисленияИлиНеоплаченногоВремени</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияНачисленияИлиНеоплаченногоВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; Рассчитывается</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Рассчитывается" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
						<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; НачисляетсяПриРасчетеПервойПоловиныМесяца</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисляетсяПриРасчетеПервойПоловиныМесяца" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидВремени</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРабочегоВремениСотрудников"/>
						<КодПравилаКонвертации>ВидыРабочегоВремениСотрудников                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ОбозначениеВТабелеУчетаРабочегоВремени</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбозначениеВТабелеУчетаРабочегоВремени" Вид="Реквизит" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
						<КодПравилаКонвертации>ВидыИспользованияРабочегоВремениПоКлассификатору  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
						<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ВидПособияСоциальногоСтрахования</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПособияСоциальногоСтрахования" Вид="Реквизит" Тип="ПеречислениеСсылка.ПереченьПособийСоциальногоСтрахования"/>
						<КодПравилаКонвертации>ПереченьПособийСоциальногоСтрахования             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка"/>
						<КодПравилаКонвертации>ПорядокОпределенияРасчетногоПериодаСреднегоЗаработ</КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; КоличествоМесяцевРасчетаСреднегоЗаработка</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоМесяцевРасчетаСреднегоЗаработка" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; ПериодРасчетаБазовыхНачислений</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРасчетаБазовыхНачислений" Вид="Реквизит" Тип="ПеречислениеСсылка.ПериодыРасчетаБазовыхНачислений"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; КоличествоМесяцевБазовогоПериода</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоМесяцевБазовогоПериода" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование>--&gt; СпособВыполненияНачисления</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВыполненияНачисления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыполненияНачислений"/>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>24</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ЗапрашиватьПриВводе</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриВводе" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Выполнить(Алгоритмы.НачисленияУдержания_ПередОбработкой);</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<ПередВыгрузкой>РеквизитОбъекта = ОбъектКоллекции.ВидРасчета;
Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>34</Код>
						<Наименование>--&gt; СреднийЗаработокОбщий</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СреднийЗаработокОбщий" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Источник.СреднийЗаработокОбщий.Количество() = 0;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>35</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="ПеречислениеСсылка.УчетНачисленийВСреднемЗаработкеОбщий"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>--&gt; Индексируется</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Индексируется" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; ПорядокРасчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокРасчетаСреднегоЗаработкаОбщий"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; ОчередностьРасчета</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОчередностьРасчета" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование>--&gt; ВАрхиве</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВАрхиве" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>27</Код>
						<Наименование>--&gt; Предопределенный</Наименование>
						<Порядок>1350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Предопределенный</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Начисления_ОсновныеТолькоСсылка</Код>
				<Наименование>План видов расчета: Основные начисления организаций</Наименование>
				<Порядок>450</Порядок>
				<ПередВыгрузкой>//Источник = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Преобразовать", Параметры.Алгоритмы, Источник);

КлючВыгружаемыхДанных	= Источник.Ссылка;

ВходящиеДанные = Новый Структура("Предопределенный");
ВходящиеДанные.Предопределенный = Источник.Предопределенный;</ПередВыгрузкой>
				<ПоследовательностьПолейПоиска>Если ПараметрыОбъекта["Предопределенный"] Тогда
	СтрокаИменСвойствПоиска	= "Наименование";
Иначе
	СтрокаИменСвойствПоиска	= "{УникальныйИдентификатор}";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Предопределенный</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Предопределенный</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Начисления_Дополнительные</Код>
				<Наименование>План видов расчета: Дополнительные начисления организаций</Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= Источник.Ссылка;

ВходящиеДанные = Новый Структура("Предопределенный");
ВходящиеДанные.Предопределенный = Источник.Предопределенный;</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.Начисление_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Если ПараметрыОбъекта["Предопределенный"] Тогда
	СтрокаИменСвойствПоиска	= "Наименование";
Иначе
	СтрокаИменСвойствПоиска	= "{УникальныйИдентификатор}";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; КатегорияНачисленияИлиНеоплаченногоВремени</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияНачисленияИлиНеоплаченногоВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование>--&gt; Рассчитывается</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Рассчитывается" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
						<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; НачисляетсяПриРасчетеПервойПоловиныМесяца</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисляетсяПриРасчетеПервойПоловиныМесяца" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
						<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидПособияСоциальногоСтрахования</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПособияСоциальногоСтрахования" Вид="Реквизит" Тип="ПеречислениеСсылка.ПереченьПособийСоциальногоСтрахования"/>
						<КодПравилаКонвертации>ПереченьПособийСоциальногоСтрахования             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка"/>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование>--&gt; ПериодРасчетаБазовыхНачислений</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРасчетаБазовыхНачислений" Вид="Реквизит" Тип="ПеречислениеСсылка.ПериодыРасчетаБазовыхНачислений"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; КоличествоМесяцевБазовогоПериода</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоМесяцевБазовогоПериода" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование>--&gt; СпособВыполненияНачисления</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВыполненияНачисления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыполненияНачислений"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>17</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ЗапрашиватьПриВводе</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриВводе" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Выполнить(Алгоритмы.НачисленияУдержания_ПередОбработкой);</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<ПередВыгрузкой>РеквизитОбъекта = ОбъектКоллекции.ВидРасчета;
Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>29</Код>
						<Наименование>--&gt; СреднийЗаработокОбщий</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СреднийЗаработокОбщий" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Источник.СреднийЗаработокОбщий.Количество() = 0;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="ПеречислениеСсылка.УчетНачисленийВСреднемЗаработкеОбщий"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Индексируется</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Индексируется" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; ПорядокРасчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокРасчетаСреднегоЗаработкаОбщий"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; ОчередностьРасчета</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОчередностьРасчета" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; ВАрхиве</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВАрхиве" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>20</Код>
						<Наименование>--&gt; Предопределенный</Наименование>
						<Порядок>1150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Предопределенный</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Начисления_ДополнительныеТолькоСсылка</Код>
				<Наименование>План видов расчета: Дополнительные начисления организаций</Наименование>
				<Порядок>550</Порядок>
				<ПередВыгрузкой>//Источник = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Преобразовать", Параметры.Алгоритмы, Источник);

КлючВыгружаемыхДанных	= Источник.Ссылка;

ВходящиеДанные = Новый Структура("Предопределенный");
ВходящиеДанные.Предопределенный = Источник.Предопределенный;</ПередВыгрузкой>
				<ПоследовательностьПолейПоиска>Если ПараметрыОбъекта["Предопределенный"] Тогда
	СтрокаИменСвойствПоиска	= "Наименование";
Иначе
	СтрокаИменСвойствПоиска	= "{УникальныйИдентификатор}";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Предопределенный</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Предопределенный</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Организации</Код>
				<Наименование>Справочник: Организации</Наименование>
				<Порядок>600</Порядок>
				<ПослеЗагрузки>Объект.ЮрФизЛицо = ?(Объект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, Перечисления.ЮрФизЛицо.ЮрЛицо, Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель);
Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.КонтактнаяИнформация_ПослеЗагрузки);</ПослеЗагрузки>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>29</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						<ПередВыгрузкой>КодыОрганизации = РегистрыСведений.КодыОрганизации.ПолучитьПоследнее(, Новый Структура("Организация", Источник.ГоловнаяОрганизация));

ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("Наименование", Источник.ГоловнаяОрганизация.Наименование);
ИсходящиеДанные.Вставить("КодПоЕДРПОУ",  КодыОрганизации.КодПоЕДРПОУ);
</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>35</Код>
						<Наименование>--&gt; ЕстьОбособленныеПодразделения</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕстьОбособленныеПодразделения" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; НаименованиеПолное</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; ОбособленноеПодразделение</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование>--&gt; Префикс</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Префикс" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование>--&gt; ЮридическоеФизическоеЛицо</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮридическоеФизическоеЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮридическоеФизическоеЛицо"/>
					</Свойство>
					<Группа>
						<Код>38</Код>
						<Наименование>--&gt; КонтактнаяИнформация</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтактнаяИнформация" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; Тип</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							<КодПравилаКонвертации>ТипыКонтактнойИнформации                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование>--&gt; Вид</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Вид" Вид="Реквизит" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
							<КодПравилаКонвертации>ВидыКонтактнойИнформации                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; ЗначенияПолей</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначенияПолей" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ИндивидуальныйПредприниматель</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИндивидуальныйПредприниматель" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>--&gt; НаименованиеСокращенное</Наименование>
						<Порядок>1550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеСокращенное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>1950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>42</Код>
						<Наименование>--&gt; КодПоЕДРПОУ</Наименование>
						<Порядок>2000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоЕДРПОУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование>--&gt; ВЭД</Наименование>
						<Порядок>2050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВЭД" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>44</Код>
						<Наименование>--&gt; ДатаНачалаИспользованияЗвит1С</Наименование>
						<Порядок>2100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачалаИспользованияЗвит1С" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>45</Код>
						<Наименование>--&gt; КемЗарегистрирована</Наименование>
						<Порядок>2150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КемЗарегистрирована" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование>--&gt; КлассПрофессиональногоРиска</Наименование>
						<Порядок>2200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КлассПрофессиональногоРиска" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>47</Код>
						<Наименование>--&gt; КодЗКГНГ</Наименование>
						<Порядок>2250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодЗКГНГ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>48</Код>
						<Наименование>--&gt; КодКВЕД</Наименование>
						<Порядок>2300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодКВЕД" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>49</Код>
						<Наименование>--&gt; КодКОАТУУ</Наименование>
						<Порядок>2350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодКОАТУУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>50</Код>
						<Наименование>--&gt; КодКФВ</Наименование>
						<Порядок>2400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодКФВ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>51</Код>
						<Наименование>--&gt; КодОПФГ</Наименование>
						<Порядок>2450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодОПФГ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>52</Код>
						<Наименование>--&gt; КодОрганаПФУ</Наименование>
						<Порядок>2500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодОрганаПФУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>53</Код>
						<Наименование>--&gt; КодСПОДУ</Наименование>
						<Порядок>2550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодСПОДУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>54</Код>
						<Наименование>--&gt; НомерРегистрации</Наименование>
						<Порядок>2600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерРегистрации" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>55</Код>
						<Наименование>--&gt; НомерРегистрацииВСлужбеЗанятости</Наименование>
						<Порядок>2650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерРегистрацииВСлужбеЗанятости" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>56</Код>
						<Наименование>--&gt; НомерРегистрацииПФ</Наименование>
						<Порядок>2700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерРегистрацииПФ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>57</Код>
						<Наименование>--&gt; НомерФСС</Наименование>
						<Порядок>2750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерФСС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>58</Код>
						<Наименование>--&gt; НомерФССНесчСлучай</Наименование>
						<Порядок>2800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерФССНесчСлучай" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>59</Код>
						<Наименование>--&gt; ОПФГ</Наименование>
						<Порядок>2850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОПФГ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>60</Код>
						<Наименование>--&gt; ОрганГУ</Наименование>
						<Порядок>2900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганГУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>61</Код>
						<Наименование>--&gt; ОрганСоциальнойЗащитыНаселения</Наименование>
						<Порядок>2950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганСоциальнойЗащитыНаселения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОрганизацииТолькоСсылка</Код>
				<Наименование>Справочник: Организации</Наименование>
				<Порядок>650</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование, КодПоЕДРПОУ");

ОрганизацииТолькоСсылка = Неопределено;
Параметры.ВременноеХранилище.Свойство("ОрганизацииТолькоСсылка", ОрганизацииТолькоСсылка);

Если ОрганизацииТолькоСсылка = Неопределено Тогда
	Выполнить(Алгоритмы.ЗаполнитьОрганизацииТолькоСсылка);
	ОрганизацииТолькоСсылка = Параметры.ВременноеХранилище.ОрганизацииТолькоСсылка;
КонецЕсли;

ОрганизацияСсылка = ОрганизацииТолькоСсылка.Получить(Источник);

Если ОрганизацияСсылка = Неопределено Тогда
	Отказ = Истина;
КонецЕсли;

ЗаполнитьЗначенияСвойств(ВходящиеДанные, ОрганизацияСсылка);
</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.Организации</Источник>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; КодПоЕДРПОУ</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоЕДРПОУ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПереносДанныхТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>700</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПереносДанныхТолькоСсылкаРеестр</Код>
				<Наименование>:</Наименование>
				<Порядок>750</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Пользователи</Код>
				<Наименование>Справочник: Пользователи</Наименование>
				<Порядок>800</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.Пользователи</Источник>
				<Приемник>СправочникСсылка.Пользователи</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование>Справочник: Подразделения организации</Наименование>
				<Порядок>850</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Объект.ДополнительныеСвойства.Вставить("ОтключитьОбновлениеСтруктурыШтатногоРасписания", Истина);</ПослеЗагрузки>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; РеквизитДопУпорядочивания</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РеквизитДопУпорядочивания" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ДатаСоздания</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаСоздания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; Сформировано</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сформировано" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПодразделенияОрганизацийТолькоСсылка</Код>
				<Наименование>Справочник: Подразделения организации</Наименование>
				<Порядок>900</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.ПодразделенияОрганизаций</Источник>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтраныМира</Код>
				<Наименование>Справочник: Классификатор стран мира</Наименование>
				<Порядок>950</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.КлассификаторСтранМира</Источник>
				<Приемник>СправочникСсылка.СтраныМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>Украина --&gt; Украина</Наименование>
						<Порядок>100</Порядок>
						<Источник>Украина</Источник>
						<Приемник>Украина</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ТипыКонтактнойИнформации</Код>
				<Наименование>Перечисление: Типы контактной информации</Наименование>
				<Порядок>1000</Порядок>
				<Источник>ПеречислениеСсылка.ТипыКонтактнойИнформации</Источник>
				<Приемник>ПеречислениеСсылка.ТипыКонтактнойИнформации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt;</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Адрес --&gt; Адрес</Наименование>
						<Порядок>50</Порядок>
						<Источник>Адрес</Источник>
						<Приемник>Адрес</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>АдресЭлектроннойПочты --&gt; АдресЭлектроннойПочты</Наименование>
						<Порядок>100</Порядок>
						<Источник>АдресЭлектроннойПочты</Источник>
						<Приемник>АдресЭлектроннойПочты</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ВебСтраница --&gt; ВебСтраница</Наименование>
						<Порядок>150</Порядок>
						<Источник>ВебСтраница</Источник>
						<Приемник>ВебСтраница</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Другое --&gt; Другое</Наименование>
						<Порядок>200</Порядок>
						<Источник>Другое</Источник>
						<Приемник>Другое</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Телефон --&gt; Телефон</Наименование>
						<Порядок>250</Порядок>
						<Источник>Телефон</Источник>
						<Приемник>Телефон</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаОрганизаций</Код>
				<Наименование>Регистр сведений: Учетная политика (налоговый учет)</Наименование>
				<Порядок>1050</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ИННПлательщикаНДС</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИННПлательщикаНДС" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; НомерСвидетельстваПлательщикаНДС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерСвидетельстваПлательщикаНДС" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ПлательщикНДС</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлательщикНДС" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Удержания</Код>
				<Наименование>План видов расчета: Удержания организаций</Наименование>
				<Порядок>1100</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= Источник.Ссылка;

ВходящиеДанные = Новый Структура("Предопределенный");
ВходящиеДанные.Предопределенный = Источник.Предопределенный;</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.Удержание_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Если ПараметрыОбъекта["Предопределенный"] Тогда
	СтрокаИменСвойствПоиска	= "Наименование";
Иначе
	СтрокаИменСвойствПоиска	= "{УникальныйИдентификатор}";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ПланВидовРасчетаСсылка.Удержания</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; КатегорияУдержания</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииУдержаний"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; Рассчитывается</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Рассчитывается" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
						<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; КоличествоМесяцевРасчетаСреднегоЗаработка</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоМесяцевРасчетаСреднегоЗаработка" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; СпособВыполненияУдержания</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВыполненияУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыполненияУдержаний"/>
					</Свойство>
					<Группа>
						<Код>12</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ЗапрашиватьПриВводе</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриВводе" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>8</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Выполнить(Алгоритмы.НачисленияУдержания_ПередОбработкой);</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<ПередВыгрузкой>РеквизитОбъекта = ОбъектКоллекции.ВидРасчета;
Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ВАрхиве</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВАрхиве" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование>--&gt; Предопределенный</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Предопределенный</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УдержанияТолькоСсылка</Код>
				<Наименование>План видов расчета: Удержания организаций</Наименование>
				<Порядок>1150</Порядок>
				<ПередВыгрузкой>//Источник = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Преобразовать", Параметры.Алгоритмы, Источник);

КлючВыгружаемыхДанных	= Источник.Ссылка;

ВходящиеДанные = Новый Структура("Предопределенный");
ВходящиеДанные.Предопределенный = Источник.Предопределенный;</ПередВыгрузкой>
				<ПоследовательностьПолейПоиска>Если ПараметрыОбъекта["Предопределенный"] Тогда
	СтрокаИменСвойствПоиска	= "Наименование";
Иначе
	СтрокаИменСвойствПоиска	= "{УникальныйИдентификатор}";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ПланВидовРасчетаСсылка.Удержания</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Предопределенный</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Предопределенный</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НалогиВКатегории</Код>
				<Наименование>Справочник: Налоги</Наименование>
				<Порядок>1200</Порядок>
				<Источник>СправочникСсылка.Налоги</Источник>
				<Приемник>СправочникСсылка.КатегорииЗастрахованныхЛицЕСВ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЕСВФОТБюджетники --&gt; НаемныйРаботникБюджет</Наименование>
						<Порядок>50</Порядок>
						<Источник>ЕСВФОТБюджетники</Источник>
						<Приемник>НаемныйРаботникБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЕСВФОТГПХ --&gt; РаботникПоДоговоруГПХ</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЕСВФОТГПХ</Источник>
						<Приемник>РаботникПоДоговоруГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ЕСВФОТГПХСудостр --&gt; НаемныйРаботникГПХСудостроите</Наименование>
						<Порядок>150</Порядок>
						<Источник>ЕСВФОТГПХСудостр</Источник>
						<Приемник>НаемныйРаботникГПХСудостроитель</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ЕСВФОТГПХУТОГ --&gt; РаботникПоДоговоруГПХУТОГУТОС</Наименование>
						<Порядок>200</Порядок>
						<Источник>ЕСВФОТГПХУТОГ</Источник>
						<Приемник>РаботникПоДоговоруГПХУТОГУТОС</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ЕСВФОТИнвалиды --&gt; НаемныйРаботникИнвалид</Наименование>
						<Порядок>250</Порядок>
						<Источник>ЕСВФОТИнвалиды</Источник>
						<Приемник>НаемныйРаботникИнвалид</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ЕСВФОТИнвалиды50 --&gt; НаемныйРаботникИнвалид50</Наименование>
						<Порядок>300</Порядок>
						<Источник>ЕСВФОТИнвалиды50</Источник>
						<Приемник>НаемныйРаботникИнвалид50</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ЕСВФОТИнвалидыСР --&gt; НаемныйРаботникИнвалидНаСпеци</Наименование>
						<Порядок>350</Порядок>
						<Источник>ЕСВФОТИнвалидыСР</Источник>
						<Приемник>НаемныйРаботникИнвалидНаСпециальныхРаботах</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ЕСВФОТИнвалидыУТОГУТОС --&gt; НаемныйРаботникИнвалидУ</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЕСВФОТИнвалидыУТОГУТОС</Источник>
						<Приемник>НаемныйРаботникИнвалидУТОГУТОС</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ЕСВФОТЛетчики --&gt; НаемныйРаботникЛетчик</Наименование>
						<Порядок>450</Порядок>
						<Источник>ЕСВФОТЛетчики</Источник>
						<Приемник>НаемныйРаботникЛетчик</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ЕСВФОТМобил --&gt; МобилизованныйРаботник</Наименование>
						<Порядок>500</Порядок>
						<Источник>ЕСВФОТМобил</Источник>
						<Приемник>МобилизованныйРаботник</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ЕСВФОТМобилКомп --&gt; МобилизованныйРаботникКомпенса</Наименование>
						<Порядок>550</Порядок>
						<Источник>ЕСВФОТМобилКомп</Источник>
						<Приемник>МобилизованныйРаботникКомпенсация</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ЕСВФОТРаботники --&gt; НаемныйРаботникНаОбщихОсновани</Наименование>
						<Порядок>600</Порядок>
						<Источник>ЕСВФОТРаботники</Источник>
						<Приемник>НаемныйРаботникНаОбщихОснованиях</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ЕСВФОТРаботникиЗаПределами --&gt; НаемныйРаботникЗаПр</Наименование>
						<Порядок>650</Порядок>
						<Источник>ЕСВФОТРаботникиЗаПределами</Источник>
						<Приемник>НаемныйРаботникЗаПределамиУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ЕСВФОТРаботникиИностранные --&gt; НаемныйРаботникВИно</Наименование>
						<Порядок>700</Порядок>
						<Источник>ЕСВФОТРаботникиИностранные</Источник>
						<Приемник>НаемныйРаботникВИностранныхОрганизациях</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ЕСВФОТРаботникиСР --&gt; НаемныйРаботникНаСпециальных</Наименование>
						<Порядок>750</Порядок>
						<Источник>ЕСВФОТРаботникиСР</Источник>
						<Приемник>НаемныйРаботникНаСпециальныхРаботах</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ЕСВФОТРаботникиУТОГУТОС --&gt; НаемныйРаботникУТОГУТО</Наименование>
						<Порядок>800</Порядок>
						<Источник>ЕСВФОТРаботникиУТОГУТОС</Источник>
						<Приемник>НаемныйРаботникУТОГУТОС</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ЕСВФОТРаботникиФЛ --&gt; НаемныйРаботникУФизическогоЛ</Наименование>
						<Порядок>850</Порядок>
						<Источник>ЕСВФОТРаботникиФЛ</Источник>
						<Приемник>НаемныйРаботникУФизическогоЛица</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СчетВГруппуУчета</Код>
				<Наименование>План счетов: План счетов бухгалтерского учета</Наименование>
				<Порядок>1250</Порядок>
				<Приемник>СправочникСсылка.ГруппыУчетаНачисленийИУдержаний</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; СчетУчета</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетУчета" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ВзаиморасчетыССотрудниками</Код>
			<Наименование>Взаиморасчеты с сотрудниками</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>ЗарплатаКВыплатеАвансом_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ЗарплатаКВыплатеАвансом");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ЗарплатаКВыплатеАвансом</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗарплатаКВыплатеАвансом" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗарплатаКВыплатеАвансом");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; СуммаКВыплате</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКВыплате" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗарплатаКВыплате_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ВзаиморасчетыССотрудниками");
СписокРегистров.Добавить("ЗарплатаКВыплате");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ВзаиморасчетыССотрудниками</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыССотрудниками" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ВзаиморасчетыССотрудниками");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; СуммаВзаиморасчетов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВзаиморасчетов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ВидВзаиморасчетов</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидВзаиморасчетов" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыВзаиморасчетовССотрудниками"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ГруппаУчетаНачислений</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаУчетаНачислений" Вид="Измерение" Тип="СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"/>
							<КодПравилаКонвертации>ГруппыУчетаНачисленийИУдержанийСтрокой            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование>--&gt; ЗарплатаКВыплате</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗарплатаКВыплате" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗарплатаКВыплате");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; СуммаКВыплате</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКВыплате" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ГруппаУчетаНачислений</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаУчетаНачислений" Вид="Измерение" Тип="СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"/>
							<КодПравилаКонвертации>ГруппыУчетаНачисленийИУдержанийСтрокой            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НачальнаяЗадолженностьПоЗарплате</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Объект.Записать(РежимЗаписиДокумента.Запись);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать(РежимЗаписиДокумента.Проведение);
Исключение
КонецПопытки;
Отказ = Истина;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.НачальнаяЗадолженностьПоЗарплате</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>22</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>21</Код>
						<Наименование>--&gt; Месяц</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Месяц" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>24</Код>
						<Наименование>--&gt; ЗадолженностьПоЗарплате</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗадолженностьПоЗарплате" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; ГруппаУчетаНачислений</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаУчетаНачислений" Вид="Реквизит" Тип="СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ЗаймыСотрудникам</Код>
			<Наименование>ЗаймыСотрудникам</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>ВзаиморасчетыПоЗаймамСотрудникам_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ВзаиморасчетыПоЗаймамСотрудникам");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ВзаиморасчетыПоЗаймамСотрудникам</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыПоЗаймамСотрудникам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ВзаиморасчетыПоЗаймамСотрудникам");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ДоговорЗайма</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорЗайма" Вид="Измерение" Тип="ДокументСсылка.ДоговорЗаймаСотруднику"/>
							<КодПравилаКонвертации>ДоговорЗаймаСотрудникуТолькоСсылка                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ВнеочередноеПогашение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВнеочередноеПогашение" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Проценты</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Проценты" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; СуммаЗайма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаЗайма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоговорЗаймаСотруднику</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = Источник.Ссылка;</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("ДокументОснование, Проведен");
ВходящиеДанные.Проведен				= Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Приемник>ДокументСсылка.ДоговорЗаймаСотруднику</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>38</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>51</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>52</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>49</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ВзаиморасчетыПоЗаймамСотрудникам</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыПоЗаймамСотрудникам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ВзаиморасчетыПоЗаймамСотрудникам");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; ДоговорЗайма</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорЗайма" Вид="Измерение" Тип="ДокументСсылка.ДоговорЗаймаСотруднику"/>
							<КодПравилаКонвертации>ДоговорЗаймаСотрудникуТолькоСсылка                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ВнеочередноеПогашение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВнеочередноеПогашение" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Проценты</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Проценты" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; СуммаЗайма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаЗайма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>12</Код>
						<Наименование>--&gt; УсловияДоговораЗаймаСотруднику</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УсловияДоговораЗаймаСотруднику" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("УсловияДоговораЗаймаСотруднику");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ДоговорЗайма</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорЗайма" Вид="Измерение" Тип="ДокументСсылка.ДоговорЗаймаСотруднику"/>
							<КодПравилаКонвертации>ДоговорЗаймаСотрудникуТолькоСсылка                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ДатаНачалаПогашения</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаПогашения" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; МатериальнаяВыгодаОблагаетсяНДФЛ</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МатериальнаяВыгодаОблагаетсяНДФЛ" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ОграничениеПлатежа</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОграничениеПлатежа" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ПроцентнаяСтавка</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентнаяСтавка" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; РазмерПлатежа</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерПлатежа" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; РазмерПогашения</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерПогашения" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>26</Код>
						<Наименование>--&gt; ВидПлатежей</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПлатежей" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПлатежейПогашенияЗаймаСотруднику"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование>--&gt; ДатаВыдачи</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование>--&gt; ДатаНачалаПогашения</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачалаПогашения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>31</Код>
						<Наименование>--&gt; ДатаПредоставления</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПредоставления" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование>--&gt; ДолжностьРуководителя</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДолжностьРуководителя" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; ЗаемПоДоговоруВыданПолностью</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗаемПоДоговоруВыданПолностью" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование>--&gt; ЗаемЧастичноПогашен</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗаемЧастичноПогашен" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>35</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование>--&gt; МатериальнаяВыгодаОблагаетсяНДФЛ</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МатериальнаяВыгодаОблагаетсяНДФЛ" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование>--&gt; ОграничениеПлатежа</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОграничениеПлатежа" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>39</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование>--&gt; ПогашеннаяСуммаЗайма</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПогашеннаяСуммаЗайма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>41</Код>
						<Наименование>--&gt; ПогашенныеПроценты</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПогашенныеПроценты" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование>--&gt; ПроцентнаяСтавка</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроцентнаяСтавка" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование>--&gt; РазмерПлатежа</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазмерПлатежа" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>44</Код>
						<Наименование>--&gt; РазмерПогашения</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазмерПогашения" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>45</Код>
						<Наименование>--&gt; Руководитель</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Руководитель" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование>--&gt; СпособПогашения</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособПогашения" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПогашенияЗаймаСотруднику"/>
					</Свойство>
					<Свойство>
						<Код>47</Код>
						<Наименование>--&gt; СпособПредоставления</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособПредоставления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПредоставленияЗаймаСотруднику"/>
					</Свойство>
					<Свойство>
						<Код>48</Код>
						<Наименование>--&gt; Сумма</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>50</Код>
						<Наименование>--&gt; ФормаРасчетов</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормаРасчетов" Вид="Реквизит" Тип="ПеречислениеСсылка.ФормыОплаты"/>
					</Свойство>
					<Свойство>
						<Код>53</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>54</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>1550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоговорЗаймаСотрудникуТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.ДоговорЗаймаСРаботником</Источник>
				<Приемник>ДокументСсылка.ДоговорЗаймаСотруднику</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Номер --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>ФизЛицо --&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НастройкиЗаймовСотрудникам</Код>
				<Наименование>:</Наименование>
				<Порядок>200</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НастройкиЗаймовСотрудникам</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ИспользоватьЗаймыСотрудникам</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользоватьЗаймыСотрудникам" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыПогашенияЗаймаСотруднику</Код>
				<Наименование>Перечисление: Порядок погашения займа процентов</Наименование>
				<Порядок>250</Порядок>
				<Источник>ПеречислениеСсылка.ПорядокПогашенияЗаймаПроцентов</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПогашенияЗаймаСотруднику</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоОкончанииСрока --&gt; ПоОкончанииСрока</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПоОкончанииСрока</Источник>
						<Приемник>ПоОкончанииСрока</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Ежемесячно --&gt; ВТечениеСрока</Наименование>
						<Порядок>100</Порядок>
						<Источник>Ежемесячно</Источник>
						<Приемник>ВТечениеСрока</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>КадровыйУчет</Код>
			<Наименование>Кадровый учет</Наименование>
			<Порядок>200</Порядок>
			<Группа>
				<Код>ВоинскийУчет</Код>
				<Наименование>Воинский учет</Наименование>
				<Порядок>50</Порядок>
				<Правило>
					<Код>Военкоматы</Код>
					<Наименование>Справочник: Военкоматы</Наименование>
					<Порядок>50</Порядок>
					<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
					<Источник>СправочникСсылка.Военкоматы</Источник>
					<Приемник>СправочникСсылка.Военкоматы</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ВоинскийУчетФизическихЛиц</Код>
					<Наименование>Регистр сведений: Воинский учет</Наименование>
					<Порядок>100</Порядок>
					<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
					<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
					<Приемник>РегистрСведенийЗапись.ВоинскийУчет</Приемник>
					<Свойства>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>--&gt; Военкомат</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Военкомат" Вид="Ресурс" Тип="СправочникСсылка.Военкоматы"/>
							<КодПравилаКонвертации>Военкоматы                                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; ВУС</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВУС" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Годность</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Годность" Вид="Ресурс" Тип="ПеречислениеСсылка.ГодностьКВоеннойСлужбе"/>
							<КодПравилаКонвертации>ГодностьКВоеннойСлужбе                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; НаличиеМобпредписания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаличиеМобпредписания" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; НомерКомандыПартии</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерКомандыПартии" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ОтношениеКВоинскойОбязанности</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтношениеКВоинскойОбязанности" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтношениеКВоинскойОбязанности"/>
							<КодПравилаКонвертации>ОтношениеКВоинскойОбязанности                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ОтношениеКВоинскомуУчету</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтношениеКВоинскомуУчету" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтношениеКВоинскомуУчету"/>
							<КодПравилаКонвертации>ОтношениеКВоинскомуУчету                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ДатаИНомерПриказаОПризыве</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаИНомерПриказаОПризыве" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Профиль</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Профиль" Вид="Ресурс" Тип="ПеречислениеСсылка.ПрофилиОфицеров"/>
							<КодПравилаКонвертации>ПрофилиОфицеров                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; СпецУчет</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпецУчет" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ГодностьКВоеннойСлужбе</Код>
					<Наименование>Перечисление: Годность к военной службе</Наименование>
					<Порядок>150</Порядок>
					<Источник>ПеречислениеСсылка.ГодностьКВоеннойСлужбе</Источник>
					<Приемник>ПеречислениеСсылка.ГодностьКВоеннойСлужбе</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>ВременноНеГоден --&gt; ВременноНеГоден</Наименование>
							<Порядок>50</Порядок>
							<Источник>ВременноНегоден</Источник>
							<Приемник>ВременноНеГоден</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>Годен --&gt; Годен</Наименование>
							<Порядок>100</Порядок>
							<Источник>Годен</Источник>
							<Приемник>Годен</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>НеГоден --&gt; НеГоден</Наименование>
							<Порядок>200</Порядок>
							<Источник>НеГоден</Источник>
							<Приемник>НеГоден</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ГоденКНестроевой --&gt; ГоденСОграничениями</Наименование>
							<Порядок>300</Порядок>
							<Источник>ГоденКНестроевой</Источник>
							<Приемник>ГоденСОграничениями</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>НастройкиВоинскогоУчета</Код>
					<Наименование>:</Наименование>
					<Порядок>450</Порядок>
					<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
					<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
					<Приемник>РегистрСведенийЗапись.НастройкиВоинскогоУчета</Приемник>
					<Свойства>
						<Свойство>
							<Код>1</Код>
							<Наименование>--&gt; ИспользоватьВоинскийУчет</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИспользоватьВоинскийУчет" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОтношениеКВоинскойОбязанности</Код>
					<Наименование>Перечисление: Отношение к воинской обязанности</Наименование>
					<Порядок>500</Порядок>
					<Источник>ПеречислениеСсылка.ОтношениеКВоинскойОбязанности</Источник>
					<Приемник>ПеречислениеСсылка.ОтношениеКВоинскойОбязанности</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Военнообязанный --&gt; Военнообязанный</Наименование>
							<Порядок>50</Порядок>
							<Источник>Военнообязанный</Источник>
							<Приемник>Военнообязанный</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НеВоеннообязанный --&gt; НеВоеннообязанный</Наименование>
							<Порядок>100</Порядок>
							<Источник>НеВоеннообязанный</Источник>
							<Приемник>НеВоеннообязанный</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>Призывник --&gt; Призывник</Наименование>
							<Порядок>150</Порядок>
							<Источник>Призывник</Источник>
							<Приемник>Призывник</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>ОтношениеКВоинскомуУчету</Код>
					<Наименование>Перечисление: Отношение к воинскому учету</Наименование>
					<Порядок>550</Порядок>
					<Источник>ПеречислениеСсылка.ОтношениеКВоинскомуУчету</Источник>
					<Приемник>ПеречислениеСсылка.ОтношениеКВоинскомуУчету</Приемник>
					<Свойства/>
					<Значения>
						<Значение>
							<Код>1</Код>
							<Наименование>Встает --&gt; Встает</Наименование>
							<Порядок>50</Порядок>
							<Источник>Встает</Источник>
							<Приемник>Встает</Приемник>
						</Значение>
						<Значение>
							<Код>2</Код>
							<Наименование>НеСостоит --&gt; НеСостоит</Наименование>
							<Порядок>100</Порядок>
							<Источник>НеСостоит</Источник>
							<Приемник>НеСостоит</Приемник>
						</Значение>
						<Значение>
							<Код>3</Код>
							<Наименование>СнятПоВозрасту --&gt; СнятПоВозрасту</Наименование>
							<Порядок>150</Порядок>
							<Источник>СнятПоВозрасту</Источник>
							<Приемник>СнятПоВозрасту</Приемник>
						</Значение>
						<Значение>
							<Код>4</Код>
							<Наименование>СнятПоСостояниюЗдоровья --&gt; СнятПоСостояниюЗдоровь</Наименование>
							<Порядок>200</Порядок>
							<Источник>СнятПоСостояниюЗдоровья</Источник>
							<Приемник>СнятПоСостояниюЗдоровья</Приемник>
						</Значение>
						<Значение>
							<Код>5</Код>
							<Наименование>Состоит --&gt; Состоит</Наименование>
							<Порядок>250</Порядок>
							<Источник>Состоит</Источник>
							<Приемник>Состоит</Приемник>
						</Значение>
						<Значение>
							<Код>6</Код>
							<Наименование>ПризванНаВоинскуюСлужбу --&gt; ПризванНаВоинскуюСлужб</Наименование>
							<Порядок>300</Порядок>
							<Источник>ПризванНаВоинскуюСлужбу</Источник>
							<Приемник>ПризванНаВоинскуюСлужбу</Приемник>
						</Значение>
						<Значение>
							<Код>7</Код>
							<Наименование>СлужбаПоКонтракту --&gt; СлужбаПоКонтракту</Наименование>
							<Порядок>350</Порядок>
							<Источник>СлужбаПоКонтракту</Источник>
							<Приемник>СлужбаПоКонтракту</Приемник>
						</Значение>
					</Значения>
				</Правило>
			</Группа>
			<Правило>
				<Код>ВидыСтажа</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>
Если СвойстваПоиска["КатегорияСтажа"] = Перечисления.КатегорииСтажа.Прочее Тогда
	СтрокаИменСвойствПоиска = "Наименование,КатегорияСтажа";
Иначе
	СтрокаИменСвойствПоиска = "КатегорияСтажа";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ВидыСтажа</Источник>
				<Приемник>СправочникСсылка.ВидыСтажа</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; КатегорияСтажа</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияСтажа" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииСтажа"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыДокументовОбОбразовании</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование");
ВходящиеДанные.Наименование = Источник;</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.ВидыДокументовОбОбразовании</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыДокументовФизическихЛиц</Код>
				<Наименование>Справочник: Документы, удостоверяющие личность</Наименование>
				<Порядок>200</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Источник>
				<Приемник>СправочникСсылка.ВидыДокументовФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыЗанятости</Код>
				<Наименование>:</Наименование>
				<Порядок>250</Порядок>
				<Источник>ПеречислениеСсылка.ВидыЗанятостиВОрганизации</Источник>
				<Приемник>ПеречислениеСсылка.ВидыЗанятости</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВнутреннееСовместительство --&gt; ВнутреннееСовместит</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВнутреннееСовместительство</Источник>
						<Приемник>ВнутреннееСовместительство</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ОсновноеМестоРаботы --&gt; ОсновноеМестоРаботы</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОсновноеМестоРаботы</Источник>
						<Приемник>ОсновноеМестоРаботы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Совместительство --&gt; Совместительство</Наименование>
						<Порядок>150</Порядок>
						<Источник>Совместительство</Источник>
						<Приемник>Совместительство</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыОбразованияФизическихЛиц</Код>
				<Наименование>Справочник: Виды образования физических лиц</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если ТипЗнч(Источник) = Тип("Структура") Тогда
	Значение = Источник.Идентификатор; 
КонецЕсли;</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ВидыОбразованияФизЛиц</Источник>
				<Приемник>СправочникСсылка.ВидыОбразованияФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>ВысшееОбразование --&gt; ВысшееОбразование</Наименование>
						<Порядок>100</Порядок>
						<Источник>ВысшееОбразование</Источник>
						<Приемник>ВысшееОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Докторантура --&gt; ПослевузовскоеОбразование</Наименование>
						<Порядок>150</Порядок>
						<Источник>Докторантура</Источник>
						<Приемник>ПослевузовскоеОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НачальноеПрофессиональноеОбразование --&gt; Начальное</Наименование>
						<Порядок>200</Порядок>
						<Источник>НачальноеПрофессиональноеОбразование</Источник>
						<Приемник>НачальноеПрофессиональноеОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>СреднееПолноеОбщееОбразование --&gt; СреднееПолноеОбщ</Наименование>
						<Порядок>250</Порядок>
						<Источник>СреднееПолноеОбщееОбразование</Источник>
						<Приемник>СреднееПолноеОбщееОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СреднееПрофессиональноеОбразование --&gt; СреднееПроф</Наименование>
						<Порядок>300</Порядок>
						<Источник>СреднееПрофессиональноеОбразование</Источник>
						<Приемник>СреднееПрофессиональноеОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>НеполноеВысшееОбразование --&gt; НеполноеВысшееОбразо</Наименование>
						<Порядок>350</Порядок>
						<Источник>НеполноеВысшееОбразование</Источник>
						<Приемник>НеполноеВысшееОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>АдъюнктураОрдинатура --&gt; АспирантураОрдинатураАдъю</Наименование>
						<Порядок>400</Порядок>
						<Источник>АдъюнктураОрдинатура</Источник>
						<Приемник>ОрдинатураАдъюнктура</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Аспирантура --&gt; АспирантураОрдинатураАдъюнктура</Наименование>
						<Порядок>450</Порядок>
						<Источник>Аспирантура</Источник>
						<Приемник>Аспирантура</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>БазовоеВысшееОбразование --&gt; ВысшееОбразованиеБака</Наименование>
						<Порядок>500</Порядок>
						<Источник>БазовоеВысшееОбразование</Источник>
						<Приемник>ВысшееОбразованиеБакалавриат</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>БазовоеОбщееСреднееОбразование --&gt; СреднееОбщееОбр</Наименование>
						<Порядок>550</Порядок>
						<Источник>БазовоеОбщееСреднееОбразование</Источник>
						<Приемник>СреднееОбщееОбразование</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыДополнительногоОбразованияФизическихЛиц</Код>
				<Наименование>Справочник: Виды образования физических лиц</Наименование>
				<Порядок>350</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ВидыОбразованияФизЛиц</Источник>
				<Приемник>СправочникСсылка.ВидыОбразованияФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>Докторантура --&gt; Докторантура</Наименование>
						<Порядок>100</Порядок>
						<Источник>Докторантура</Источник>
						<Приемник>Докторантура</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ВысшееОбразование --&gt; ВысшееОбразование</Наименование>
						<Порядок>150</Порядок>
						<Источник>ВысшееОбразование</Источник>
						<Приемник>ВысшееОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НачальноеПрофессиональноеОбразование --&gt; Начальное</Наименование>
						<Порядок>200</Порядок>
						<Источник>НачальноеПрофессиональноеОбразование</Источник>
						<Приемник>НачальноеПрофессиональноеОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>НеполноеВысшееОбразование --&gt; НеполноеВысшееОбразо</Наименование>
						<Порядок>250</Порядок>
						<Источник>НеполноеВысшееОбразование</Источник>
						<Приемник>НеполноеВысшееОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СреднееПолноеОбщееОбразование --&gt; СреднееПолноеОбщ</Наименование>
						<Порядок>300</Порядок>
						<Источник>СреднееПолноеОбщееОбразование</Источник>
						<Приемник>СреднееПолноеОбщееОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>СреднееПрофессиональноеОбразование --&gt; СреднееПроф</Наименование>
						<Порядок>350</Порядок>
						<Источник>СреднееПрофессиональноеОбразование</Источник>
						<Приемник>СреднееПрофессиональноеОбразование</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>АдъюнктураОрдинатура --&gt; АспирантураОрдинатураАдъю</Наименование>
						<Порядок>400</Порядок>
						<Источник>АдъюнктураОрдинатура</Источник>
						<Приемник>ОрдинатураАдъюнктура</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Аспирантура --&gt; АспирантураОрдинатураАдъюнктура</Наименование>
						<Порядок>450</Порядок>
						<Источник>Аспирантура</Источник>
						<Приемник>Аспирантура</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>БазовоеВысшееОбразование --&gt; ВысшееОбразованиеБака</Наименование>
						<Порядок>500</Порядок>
						<Источник>БазовоеВысшееОбразование</Источник>
						<Приемник>ВысшееОбразованиеБакалавриат</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>БазовоеОбщееСреднееОбразование --&gt; СреднееОбщееОбр</Наименование>
						<Порядок>550</Порядок>
						<Источник>БазовоеОбщееСреднееОбразование</Источник>
						<Приемник>СреднееОбщееОбразование</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГражданствоФизическихЛиц</Код>
				<Наименование>Регистр сведений: Гражданство физического лица</Наименование>
				<Порядок>450</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>РегистрСведенийЗапись.ГражданствоФизЛиц</Источник>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Период --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>Страна --&gt; Страна</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.СтраныМира"/>
						<КодПравилаКонвертации>СтраныМира                                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ИНН</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГруппыДоступаФизическихЛиц</Код>
				<Наименование>Справочник: Группы доступа физических лиц</Наименование>
				<Порядок>500</Порядок>
				<Источник>СправочникСсылка.ГруппыДоступаФизическихЛиц</Источник>
				<Приемник>СправочникСсылка.ГруппыДоступаФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ГруппыДоступаФизическихЛиц"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ГруппыДоступаФизическихЛиц"/>
						<КодПравилаКонвертации>ГруппыДоступаФизическихЛиц                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДокументыФизическихЛиц</Код>
				<Наименование>Регистр сведений: Паспортные данные физического лица</Наименование>
				<Порядок>550</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ДокументыФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ВидДокумента</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДокумента" Вид="Измерение" Тип="СправочникСсылка.ВидыДокументовФизическихЛиц"/>
						<КодПравилаКонвертации>ВидыДокументовФизическихЛиц                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; Серия</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Серия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ДатаВыдачи</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; КемВыдан</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КемВыдан" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ЯвляетсяДокументомУдостоверяющимЛичность</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЯвляетсяДокументомУдостоверяющимЛичность" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; Представление</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Должности</Код>
				<Наименование>Справочник: Должности организаций</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("ВведенаВШтатноеРасписание,ДатаВвода,ВыплачиваетсяНадбавкаЗаВредность");
Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ВходящиеДанные.ВведенаВШтатноеРасписание = ?(Источник.ПометкаУдаления = 1,0,1);
	ВходящиеДанные.ДатаВвода = Параметры.ДатаНачалаПереносаРасчетныхДанных; 
Иначе	
	ВходящиеДанные.ВведенаВШтатноеРасписание = ?(Источник.ПометкаУдаления = 1,0,1);
	ВходящиеДанные.ДатаВвода = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;
Если ТипЗнч(Источник) = Тип("Структура") Тогда
	ВходящиеДанные.ВыплачиваетсяНадбавкаЗаВредность = Источник.ВыплачиваетсяНадбавкаЗаВредность;
Иначе
	ВходящиеДанные.ВыплачиваетсяНадбавкаЗаВредность = Ложь;
КонецЕсли;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>
//Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
//	ДатаНачалаРаботыСПрограммой = Параметры.ДатаНачалаПереносаРасчетныхДанных;
//Иначе
//	ДатаНачалаРаботыСПрограммой = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
//КонецЕсли;

//Запрос = Новый Запрос;
//Запрос.УстановитьПараметр("ДатаСреза", ДатаНачалаРаботыСПрограммой);
//Запрос.УстановитьПараметр("Должность", Источник.Ссылка);
//Запрос.Текст =
//"ВЫБРАТЬ
//|	&amp;ДатаСреза КАК Период,
//|	КлассыУсловийТрудаПоДолжностямСрезПоследних.Должность,
//|	КлассыУсловийТрудаПоДолжностямСрезПоследних.КлассУсловийТруда,
//|	КлассыУсловийТрудаПоДолжностямСрезПоследних.ДатаРегистрацииИзменений
//|ИЗ
//|	РегистрСведений.КлассыУсловийТрудаПоДолжностям.СрезПоследних(&amp;ДатаСреза, Должность = &amp;Должность) КАК КлассыУсловийТрудаПоДолжностямСрезПоследних
//|
//|ОБЪЕДИНИТЬ ВСЕ
//|
//|ВЫБРАТЬ
//|	КлассыУсловийТрудаПоДолжностям.Период,
//|	КлассыУсловийТрудаПоДолжностям.Должность,
//|	КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда,
//|	КлассыУсловийТрудаПоДолжностям.ДатаРегистрацииИзменений
//|ИЗ
//|	РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыУсловийТрудаПоДолжностям
//|ГДЕ
//|	КлассыУсловийТрудаПоДолжностям.Период &gt; &amp;ДатаСреза
//|	И КлассыУсловийТрудаПоДолжностям.Должность = &amp;Должность";

//Классы = Запрос.Выполнить().Выгрузить();
//Для каждого СтрокаТЗ Из Классы Цикл
//	
//	ВыгрузитьПоПравилу(СтрокаТЗ, , , , "КлассыУсловийТрудаПоДолжностям");
//	
//КонецЦикла;</ПослеВыгрузкиВФайл>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.ДолжностиОрганизаций</Источник>
				<Приемник>СправочникСсылка.Должности</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ВведенаВШтатноеРасписание</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВведенаВШтатноеРасписание" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; ДатаВвода</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВвода" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>Категория --&gt; Категория</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="Категория" Вид="Реквизит" Тип="СправочникСсылка.КатегорииДолжностей"/>
						<Приемник Имя="Категория" Вид="Реквизит" Тип="СправочникСсылка.КатегорииДолжностей"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>КодКП --&gt; КодКП</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="КодКП" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодКП" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДолжностиТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>650</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.Должности</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗнаниеЯзыковФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>700</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ЗнаниеЯзыковФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Язык</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Язык" Вид="Измерение" Тип="СправочникСсылка.ЯзыкиНародовМира"/>
						<КодПравилаКонвертации>ЯзыкиНародовМира                                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; СтепеньЗнанияЯзыка</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтепеньЗнанияЯзыка" Вид="Ресурс" Тип="СправочникСсылка.СтепениЗнанияЯзыка"/>
						<КодПравилаКонвертации>СтепениЗнанияЯзыка                                </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КадровыйПеревод</Код>
				<Наименование>:</Наименование>
				<Порядок>750</Порядок>
				<ПередВыгрузкой>РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Документ_РассчитатьФОТ);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать()
Исключение
	Сообщить(Объект);
	Сообщить(ОписаниеОшибки());
	Сообщить("Документ не перенесен!");
	Отказ = Истина;
КонецПопытки</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.КадровыйПеревод</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>66</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>52</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>63</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>65</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>62</Код>
						<Наименование>--&gt; ОбособленноеПодразделение</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>67</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>53</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>54</Код>
						<Наименование>--&gt; Должность</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>Должности                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>50</Код>
						<Наименование>--&gt; ВидЗанятости</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
						<КодПравилаКонвертации>ВидыЗанятости                                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>59</Код>
						<Наименование>--&gt; КоличествоСтавок</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоСтавок" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>51</Код>
						<Наименование>--&gt; ГрафикРаботы</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботыСотрудников"/>
						<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>58</Код>
						<Наименование>--&gt; ИзменитьПодразделениеИДолжность</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьПодразделениеИДолжность" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>55</Код>
						<Наименование>--&gt; ИзменитьГрафикРаботы</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьГрафикРаботы" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>57</Код>
						<Наименование>--&gt; ИзменитьНачисления</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>56</Код>
						<Наименование>--&gt; ИзменитьЕжегодныеОтпуска</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьЕжегодныеОтпуска" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>61</Код>
						<Наименование>--&gt; НачисленияУтверждены</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУтверждены" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>75</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>77</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>79</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>80</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Показатели");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>82</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>71</Код>
						<Наименование>--&gt; ЕжегодныеОтпуска</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕжегодныеОтпуска" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЕжегодныеОтпуска");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>72</Код>
							<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
							<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСЕжегоднымиОтпусками"/>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование>--&gt; КоличествоДнейВГод</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДнейВГод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>68</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>64</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>60</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>102</Код>
						<Наименование>--&gt; ВидДоговора</Наименование>
						<Порядок>1600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровССотрудниками"/>
						<КодПравилаКонвертации>ВидыДоговоровССотрудниками                        </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторСпециальностейПоОбразованию</Код>
				<Наименование>Справочник: Классификатор специальностей по образованию (ОКСО)</Наименование>
				<Порядок>800</Порядок>
				<ПередВыгрузкой>Если ТипЗнч(Источник)&lt;&gt;Тип("СправочникСсылка.КлассификаторСпециальностейПоОбразованию") Тогда
	Отказ= Истина;
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.КлассификаторСпециальностейПоОбразованию</Источник>
				<Приемник>СправочникСсылка.КлассификаторСпециальностейПоОбразованию</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>6</ПриводитьКДлине>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОбразованиеФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>950</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>СправочникСсылка.ОбразованиеФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ОсновноеОбразование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновноеОбразование" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидДокумента</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДокумента" Вид="Реквизит" Тип="СправочникСсылка.ВидыДокументовОбОбразовании"/>
						<КодПравилаКонвертации>ВидыДокументовОбОбразовании                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ДатаВыдачи</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; ВидОбразования</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОбразования" Вид="Реквизит" Тип="СправочникСсылка.ВидыОбразованияФизическихЛиц"/>
						<КодПравилаКонвертации>ВидыОбразованияФизическихЛиц                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование>--&gt; ВидПослевузовскогоОбразования</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПослевузовскогоОбразования" Вид="Реквизит" Тип="СправочникСсылка.ВидыОбразованияФизическихЛиц"/>
						<КодПравилаКонвертации>ВидыДополнительногоОбразованияФизическихЛиц       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>--&gt; УчебноеЗаведение</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчебноеЗаведение" Вид="Реквизит" Тип="СправочникСсылка.УчебныеЗаведения"/>
						<КодПравилаКонвертации>УчебныеЗаведения                                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; Специальность</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Специальность" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторСпециальностейПоОбразованию"/>
						<КодПравилаКонвертации>КлассификаторСпециальностейПоОбразованию          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Серия</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Серия" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Окончание</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Окончание" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Квалификация</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Квалификация" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОснованияУвольнения</Код>
				<Наименование>:</Наименование>
				<Порядок>1050</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ОснованияУвольненияИзОрганизации</Источник>
				<Приемник>СправочникСсылка.ОснованияУвольнения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПолФизическогоЛица</Код>
				<Наименование>Перечисление: Пол физических Лиц</Наименование>
				<Порядок>1150</Порядок>
				<Источник>ПеречислениеСсылка.ПолФизическихЛиц</Источник>
				<Приемник>ПеречислениеСсылка.ПолФизическогоЛица</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Женский --&gt; Женский</Наименование>
						<Порядок>50</Порядок>
						<Источник>Женский</Источник>
						<Приемник>Женский</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Мужской --&gt; Мужской</Наименование>
						<Порядок>100</Порядок>
						<Источник>Мужской</Источник>
						<Приемник>Мужской</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПриемНаРаботу</Код>
				<Наименование>:</Наименование>
				<Порядок>1200</Порядок>
				<ПередВыгрузкой>РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Документ_РассчитатьФОТ);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать()
Исключение
	Сообщить(Объект);
	Сообщить(ОписаниеОшибки());
	Сообщить("Документ не перенесен!");
	Отказ = Истина;
КонецПопытки</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ПриемНаРаботу</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>65</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>59</Код>
						<Наименование>--&gt; ДатаПриема</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>63</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>64</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>66</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>60</Код>
						<Наименование>--&gt; Должность</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>Должности                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>57</Код>
						<Наименование>--&gt; ГрафикРаботы</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботыСотрудников"/>
						<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>61</Код>
						<Наименование>--&gt; КоличествоСтавок</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоСтавок" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>81</Код>
						<Наименование>--&gt; ДлительностьИспытательногоСрока</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДлительностьИспытательногоСрока" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>58</Код>
						<Наименование>--&gt; ДатаЗавершенияТрудовогоДоговора</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаЗавершенияТрудовогоДоговора" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>56</Код>
						<Наименование>--&gt; ВидЗанятости</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
						<КодПравилаКонвертации>ВидыЗанятости                                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>106</Код>
						<Наименование>--&gt; ВидДоговора</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровССотрудниками"/>
						<КодПравилаКонвертации>ВидыДоговоровССотрудниками                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>80</Код>
						<Наименование>--&gt; СпособРасчетаАванса</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаАванса" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаАванса"/>
					</Свойство>
					<Свойство>
						<Код>87</Код>
						<Наименование>--&gt; Аванс</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Аванс" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>62</Код>
						<Наименование>--&gt; НачисленияУтверждены</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУтверждены" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>82</Код>
						<Наименование>--&gt; ТрудовойДоговорДата</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТрудовойДоговорДата" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>83</Код>
						<Наименование>--&gt; ТрудовойДоговорНомер</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТрудовойДоговорНомер" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>69</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>70</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>72</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>73</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Показатели");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>75</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>77</Код>
						<Наименование>--&gt; ЕжегодныеОтпуска</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕжегодныеОтпуска" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЕжегодныеОтпуска");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>78</Код>
							<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
							<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование>--&gt; КоличествоДнейВГод</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДнейВГод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>67</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>68</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>1550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>86</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>1600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>85</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрофессииРабочих</Код>
				<Наименование>Справочник: Профессии рабочих</Наименование>
				<Порядок>1250</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.ПрофессииРабочих</Источник>
				<Приемник>СправочникСсылка.ПрофессииРабочих</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрофессииФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>1300</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПрофессииФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Профессия</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Профессия" Вид="Измерение" Тип="СправочникСсылка.ПрофессииРабочих"/>
						<КодПравилаКонвертации>ПрофессииРабочих                                  </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбИнвалидностиФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>1400</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>5</Код>
						<Наименование>Физлицо --&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Период --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Инвалидность --&gt; Инвалидность</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
						<Приемник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>УдостоверениеДатаВыдачи --&gt; ДатаВыдачи</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="УдостоверениеДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СостоянияВБракеФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>1450</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СостоянияВБракеФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; СостояниеВБраке</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СостояниеВБраке" Вид="Ресурс" Тип="СправочникСсылка.СостояниеВБраке"/>
						<КодПравилаКонвертации>СостояниеВБраке                                   </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СостояниеВБраке</Код>
				<Наименование>Справочник: Семейное положение физических лиц</Наименование>
				<Порядок>1550</Порядок>
				<Источник>СправочникСсылка.СемейноеПоложениеФизЛиц</Источник>
				<Приемник>СправочникСсылка.СостояниеВБраке</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>1</ПриводитьКДлине>
						<ПередВыгрузкой>Значение = ПривестиНомерКДлине(Значение, 1);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Сотрудники</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>1600</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= Источник.Ссылка;</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("ГоловнойСотрудник");
ВходящиеДанные.ГоловнойСотрудник = Источник;</ПриВыгрузке>
				<ПослеВыгрузкиВФайл>Если Не Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	ТекущиеКадровыеДанные = Новый Структура("ФизическоеЛицо, Сотрудник, ГоловнаяОрганизация, ТекущаяОрганизация, ДатаПриема");
	ТекущиеКадровыеДанные.ФизическоеЛицо		= Источник.ФизическоеЛицо;
	ТекущиеКадровыеДанные.Сотрудник			    = Источник.Ссылка;
	ТекущиеКадровыеДанные.ГоловнаяОрганизация	= Источник.Организация;
	ТекущиеКадровыеДанные.ДатаПриема 			= Источник.ДатаПриемаНаРаботу;
	
	ВыгрузитьПоПравилу(ТекущиеКадровыеДанные, , , , "ТекущиеКадровыеДанныеСотрудников");
	
КонецЕсли;</ПослеВыгрузкиВФайл>
				<ПослеЗагрузки>Попытка
РегистрыСведений.ДанныеДляПодбораСотрудников.ДобавитьДанныеНовогоСотрудника(Объект);
Исключение
КонецПопытки;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Приемник>СправочникСсылка.Сотрудники</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; ГоловнойСотрудник</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнойСотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; УточнениеНаименования</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УточнениеНаименования" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ВАрхиве</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВАрхиве" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СотрудникиТолькоСсылка</Код>
				<Наименование>Справочник: Сотрудники</Наименование>
				<Порядок>1650</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>СправочникСсылка.СотрудникиОрганизаций</Источник>
				<Приемник>СправочникСсылка.Сотрудники</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Физлицо --&gt; ФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтажиФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>1750</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СтажиФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидСтажа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтажа" Вид="Измерение" Тип="СправочникСсылка.ВидыСтажа"/>
						<КодПравилаКонвертации>ВидыСтажа                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ДатаОтсчета</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОтсчета" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; РазмерМесяцев</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазмерМесяцев" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; РазмерДней</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РазмерДней" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтепениЗнанияЯзыка</Код>
				<Наименование>Справочник: Степени знания языков</Наименование>
				<Порядок>1900</Порядок>
				<Источник>СправочникСсылка.СтепениЗнанияЯзыка</Источник>
				<Приемник>СправочникСсылка.СтепениЗнанияЯзыка</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>1</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтепениРодстваФизическихЛиц</Код>
				<Наименование>Справочник: Степени родства физических лиц</Наименование>
				<Порядок>1950</Порядок>
				<Источник>СправочникСсылка.СтепениРодстваФизЛиц</Источник>
				<Приемник>СправочникСсылка.СтепениРодстваФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>2</ПриводитьКДлине>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТрудоваяДеятельностьФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>2000</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ТрудоваяДеятельностьФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; НомерПоПорядку</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерПоПорядку" Вид="Измерение" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Должность</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Увольнение</Код>
				<Наименование>:</Наименование>
				<Порядок>2050</Порядок>
				<ПередВыгрузкой>РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<ПослеЗагрузки>ПериодРасчетаСреднего = УчетСреднегоЗаработкаКлиентСервер.ПериодРасчетаОбщегоСреднегоЗаработка(Объект.ДатаУвольнения, Объект.ВидРасчетаКомпенсацииУдержанияОтпуска);

Объект.ПериодРасчетаСреднегоЗаработкаНачало		= ПериодРасчетаСреднего.ДатаНачала;
Объект.ПериодРасчетаСреднегоЗаработкаОкончание	= ПериодРасчетаСреднего.ДатаОкончания;

Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать()
Исключение
	Сообщить(Объект);
	Сообщить(ОписаниеОшибки());
	Сообщить("Документ не перенесен!");
	Отказ = Истина;
КонецПопытки</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.Увольнение</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>23</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; ДатаУвольнения</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>24</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; ОснованиеУвольнения</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОснованиеУвольнения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>31</Код>
						<Наименование>--&gt; ПризнакКомпенсацииУдержанияОтпуска</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПризнакКомпенсацииУдержанияОтпуска" Вид="Реквизит" Тип="ПеречислениеСсылка.КомпенсацияУдержаниеОтпускаПриУвольнении"/>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; ПорядокВыплаты</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерВыплатыЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; ПланируемаяДатаВыплаты</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПланируемаяДатаВыплаты" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование>--&gt; ДокументРассчитан</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументРассчитан" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование>--&gt; ВидДоговора</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровССотрудниками"/>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование>--&gt; ПериодРасчетаСреднегоЗаработкаВыходногоПособияНачало</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРасчетаСреднегоЗаработкаВыходногоПособияНачало" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>44</Код>
						<Наименование>--&gt; ПериодРасчетаСреднегоЗаработкаВыходногоПособияОкончание</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРасчетаСреднегоЗаработкаВыходногоПособияОкончание" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>45</Код>
						<Наименование>--&gt; РучнаяКорректировкаСреднегоЗаработка</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РучнаяКорректировкаСреднегоЗаработка" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование>--&gt; РучнаяКорректировкаСреднегоЗаработкаВыходногоПособия</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РучнаяКорректировкаСреднегоЗаработкаВыходногоПособия" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>47</Код>
						<Наименование>--&gt; ВидУчетаВремениДляСредней</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидУчетаВремениДляСредней" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыУчетаВремениДляСредней"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчебныеЗаведения</Код>
				<Наименование>Справочник: Учебные заведения</Наименование>
				<Порядок>2100</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.УчебныеЗаведения</Источник>
				<Приемник>СправочникСсылка.УчебныеЗаведения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УченыеЗвания</Код>
				<Наименование>Справочник: Ученые звания</Наименование>
				<Порядок>2150</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Приемник>СправочникСсылка.УченыеЗвания</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УченыеЗванияФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>2200</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УченыеЗванияФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; НомерПоПорядку</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерПоПорядку" Вид="Измерение" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; УченоеЗвание</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УченоеЗвание" Вид="Ресурс" Тип="СправочникСсылка.УченыеЗвания"/>
						<КодПравилаКонвертации>УченыеЗвания                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ДатаПрисвоенияУченогоЗвания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПрисвоенияУченогоЗвания" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; АттестатНомер</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="АттестатНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; АттестатСерия</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="АттестатСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; АттестатВыданОрганизация</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="АттестатВыданОрганизация" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; НаучнаяСпециальность</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаучнаяСпециальность" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСпециальностейПоОбразованию"/>
						<КодПравилаКонвертации>КлассификаторСпециальностейПоОбразованию          </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УченыеСтепени</Код>
				<Наименование>Справочник: Ученые степени</Наименование>
				<Порядок>2250</Порядок>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.УченыеСтепени</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УченыеСтепениФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>2300</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УченыеСтепениФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; НомерПоПорядку</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерПоПорядку" Вид="Измерение" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; УченаяСтепень</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УченаяСтепень" Вид="Ресурс" Тип="СправочникСсылка.УченыеСтепени"/>
						<КодПравилаКонвертации>УченыеСтепени                                     </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура("Наименование", Источник.УченаяСтепень);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ДатаПрисужденияУченойСтепени</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПрисужденияУченойСтепени" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ОтрасльНауки</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтрасльНауки" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ДиссертационныйСовет</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДиссертационныйСовет" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ДипломСерияНомер</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДипломСерияНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ДипломВыданОрганизация</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДипломВыданОрганизация" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛица</Код>
				<Наименование>Справочник: Физические лица</Наименование>
				<Порядок>2350</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.КонтактнаяИнформация_ПослеЗагрузки);</ПослеЗагрузки>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаРождения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; Пол</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическогоЛица"/>
						<КодПравилаКонвертации>ПолФизическогоЛица                                </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; МестоРождения</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; ФИО</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФИО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ИмеетИзобретения</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИмеетИзобретения" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ИмеетНаучныеТруды</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИмеетНаучныеТруды" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ГруппаДоступа</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГруппаДоступа" Вид="Реквизит" Тип="СправочникСсылка.ГруппыДоступаФизическихЛиц"/>
						<КодПравилаКонвертации>ГруппыДоступаФизическихЛиц                        </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>15</Код>
						<Наименование>--&gt; КонтактнаяИнформация</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтактнаяИнформация" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Тип</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Тип" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
							<КодПравилаКонвертации>ТипыКонтактнойИнформации                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Вид</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Вид" Вид="Реквизит" Тип="СправочникСсылка.ВидыКонтактнойИнформации"/>
							<КодПравилаКонвертации>ВидыКонтактнойИнформации                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ЗначенияПолей</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначенияПолей" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаГруппа                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; КодПоДРФО</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоДРФО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛицаГруппа</Код>
				<Наименование>Справочник: Физические лица</Наименование>
				<Порядок>2400</Порядок>
				<Источник>СправочникСсылка.ФизическиеЛица</Источник>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаГруппа                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>3</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛицаТолькоСсылка</Код>
				<Наименование>Справочник: Физические лица</Наименование>
				<Порядок>2450</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.ФизическиеЛица</Источник>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизическихЛиц</Код>
				<Наименование>Регистр сведений: Фамилия, имя, отчество физического лица</Наименование>
				<Порядок>2500</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ФИОФизическихЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Фамилия</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Имя</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Отчество</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЯзыкиНародовМира</Код>
				<Наименование>Справочник: Языки народов мира</Наименование>
				<Порядок>2550</Порядок>
				<Источник>СправочникСсылка.ЯзыкиНародовМира</Источник>
				<Приемник>СправочникСсылка.ЯзыкиНародовМира</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ШтатноеРасписание_ПКО_УП</Код>
				<Наименование>:</Наименование>
				<Порядок>2600</Порядок>
				<ПослеЗагрузки>Если Не Параметры.ОчередностьРасчетаВидовРасчетаУстановлена Тогда
	Выполнить(Алгоритмы.ВидыРасчета_УстановитьОчередностьРасчета);	
КонецЕсли;

Справочники.ШтатноеРасписание.РассчитатьФОТПозиции(Объект);
Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Объект.ДополнительныеСвойства.Вставить("ОтключитьОбновлениеСтруктурыШтатногоРасписания", Истина);</ПослеЗагрузки>
				<Приемник>СправочникСсылка.ШтатноеРасписание</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Должность</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>ДолжностиТолькоСсылка                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ДатаУтверждения</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаУтверждения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КоличествоСтавок</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоСтавок" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; ГрафикРаботыСотрудников</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикРаботыСотрудников" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботыСотрудников"/>
						<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование>--&gt; ЕжегодныеОтпуска</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕжегодныеОтпуска" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
							<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; КоличествоДнейВГод</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДнейВГод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>12</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ЗначениеМакс</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеМакс" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ЗначениеМин</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеМин" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>21</Код>
						<Наименование>--&gt; Утверждена</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Утверждена" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Истина;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ШтатноеРасписаниеТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>2650</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.ШтатноеРасписание</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Должность</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
						<КодПравилаКонвертации>ДолжностиТолькоСсылка                             </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НачальнаяШтатнаяРасстановка_ПКО_УП</Код>
				<Наименование>:</Наименование>
				<Порядок>2700</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Документ_РассчитатьФОТ);
Объект.Записать(РежимЗаписиДокумента.Запись);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать(РежимЗаписиДокумента.Проведение);
Исключение
КонецПопытки;
Отказ = Истина;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.НачальнаяШтатнаяРасстановка</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Месяц</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Месяц" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ВидДоговора</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровССотрудниками"/>
						<КодПравилаКонвертации>ВидыДоговоровССотрудниками                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>31</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование>--&gt; Сотрудники</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудники" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ВидЗанятости</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятости"/>
							<КодПравилаКонвертации>ВидыЗанятости                                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Должность</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.Должности"/>
							<КодПравилаКонвертации>ДолжностиТолькоСсылка                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ДолжностьПоШтатномуРасписанию</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДолжностьПоШтатномуРасписанию" Вид="Реквизит" Тип="СправочникСсылка.ШтатноеРасписание"/>
							<КодПравилаКонвертации>ШтатноеРасписаниеТолькоСсылка                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; КоличествоСтавок</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоСтавок" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ГрафикРаботы</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботыСотрудников"/>
							<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Аванс</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Аванс" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; СпособРасчетаАванса</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособРасчетаАванса" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаАванса"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; КатегорияЕСВ</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КатегорияЕСВ" Вид="Реквизит" Тип="СправочникСсылка.КатегорииЗастрахованныхЛицЕСВ"/>
							<КодПравилаКонвертации>НалогиВКатегории                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование>--&gt; ЕжегодныеОтпуска</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕжегодныеОтпуска" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
							<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ДатаОстатка</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОстатка" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; КоличествоДней</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДней" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; КоличествоДнейВГод</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДнейВГод" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>24</Код>
						<Наименование>--&gt; ОстаткиОтпусковПоРабочимГодам</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОстаткиОтпусковПоРабочимГодам" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
							<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ДатаОстатка</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОстатка" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; Остаток</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Остаток" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; РабочийГодНачало</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочийГодНачало" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; РабочийГодОкончание</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочийГодОкончание" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>32</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_УП_ТолькоСсылка_ПоСпособу              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>36</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДанныеСостоянийСотрудников</Код>
				<Наименование>:</Наименование>
				<Порядок>2800</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ДанныеСостоянийСотрудников");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ДанныеСостоянийСотрудников</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеСостоянийСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеСостоянийСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ПереносДанныхТолькоСсылка                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Начало</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начало" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Окончание</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Окончание" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Состояние</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состояние" Вид="Измерение" Тип="ПеречислениеСсылка.СостоянияСотрудника"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТекущиеКадровыеДанныеСотрудников</Код>
				<Наименование>:</Наименование>
				<Порядок>2850</Порядок>
				<ПослеЗагрузки>Набор = РегистрыСведений.ТекущиеКадровыеДанныеСотрудников.СоздатьНаборЗаписей();
Набор.Отбор.ГоловнаяОрганизация.Установить(НаборЗаписей[0].ГоловнаяОрганизация);
Набор.Отбор.ФизическоеЛицо.Установить(НаборЗаписей[0].ФизическоеЛицо);
Набор.Отбор.Сотрудник.Установить(НаборЗаписей[0].Сотрудник);
Набор.Прочитать();
Если Набор.Количество() &gt; 0 Тогда
	Набор[0].ДатаПриема = НаборЗаписей[0].ДатаПриема;
	Набор.Записать();
	Отказ = Истина;
КонецЕсли;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ТекущиеКадровыеДанныеСотрудников</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ДатаПриема</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаПриема" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РеестрКадровыхПриказов</Код>
				<Наименование>:</Наименование>
				<Порядок>2900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура;
ОписаниеДокументОснование = Новый Структура;
ОписаниеДокументОснование.Вставить("Номер", Источник.Номер);
ОписаниеДокументОснование.Вставить("Организация", Источник.Организация);
ВходящиеДанные.Вставить("ДокументОснование", ОписаниеДокументОснование);</ПередВыгрузкой>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("РеестрКадровыхПриказов");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; РеестрКадровыхПриказов</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РеестрКадровыхПриказов" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("РеестрКадровыхПриказов");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ПереносДанныхТолькоСсылкаРеестр                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Номер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номер" Вид="Измерение" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Дата</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дата" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Ресурс"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидСобытия = "Увольнение" Тогда
	Значение = "";
ИначеЕсли Не ЗначениеЗаполнено(ОбъектКоллекции.Подразделение) Тогда
	Значение = "";
Иначе
	Значение = ОбъектКоллекции.Подразделение.Наименование;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Должность</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Ресурс"/>
							<ПередВыгрузкой>Если ОбъектКоллекции.ВидСобытия = "Увольнение" Тогда
	Значение = "";
ИначеЕсли Не ЗначениеЗаполнено(ОбъектКоллекции.Должность) Тогда
	Значение = "";
Иначе
	Значение = ОбъектКоллекции.Должность.Наименование;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Разряд</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Разряд" Вид="Ресурс"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ТарифнаяСтавкаНадбавка</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТарифнаяСтавкаНадбавка" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ВидДоговора</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДоговора" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДоговоровССотрудниками"/>
							<КодПравилаКонвертации>ВидыДоговоровССотрудниками                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидСобытия</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСобытия" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыКадровыхСобытий"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ДатаПриказа</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриказа" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; НомерПриказа</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерПриказа" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Основание</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Основание" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РеестрОтпусков</Код>
				<Наименование>:</Наименование>
				<Порядок>2950</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура;
ОписаниеДокументОснование = Новый Структура;
ОписаниеДокументОснование.Вставить("Номер", Источник.Номер);
ОписаниеДокументОснование.Вставить("Организация", Источник.Организация);
ВходящиеДанные.Вставить("ДокументОснование", ОписаниеДокументОснование);</ПередВыгрузкой>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("РеестрОтпусков");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; РеестрОтпусков</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РеестрОтпусков" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("РеестрОтпусков");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Номер</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номер" Вид="Измерение" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; ВидОтпуска</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОтпуска" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ДатаНачалаПериодаОтсутствия</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаПериодаОтсутствия" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДатаОкончанияПериодаОтсутствия</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончанияПериодаОтсутствия" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; КоличествоДнейОтпуска</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДнейОтпуска" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; КонецПериодаЗаКоторыйПредоставляетсяОтпуск</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КонецПериодаЗаКоторыйПредоставляетсяОтпуск" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; НачалоПериодаЗаКоторыйПредоставляетсяОтпуск</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачалоПериодаЗаКоторыйПредоставляетсяОтпуск" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Основание</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Основание" Вид="Ресурс" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ПереносДанныхТолькоСсылкаРеестр                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидДоговора</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДоговора" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДоговоровССотрудниками"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НастройкиКадровогоУчета</Код>
				<Наименование>:</Наименование>
				<Порядок>3000</Порядок>
				<ПослеЗагрузки>Если НаборЗаписей.Количество() &gt; 0 Тогда
	
	Настройка = РегистрыСведений.НастройкиКадровогоУчета.СоздатьНаборЗаписей();
	Настройка.Прочитать();
	Если Настройка.Количество() &gt; 0 Тогда
		Настройка[0].ИспользоватьРаботуНаНеполнуюСтавку = НаборЗаписей[0].ИспользоватьРаботуНаНеполнуюСтавку;
		Настройка.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
	Иначе
		НоваяЗапись = Настройка.Добавить();
		НоваяЗапись.ИспользоватьРаботуНаНеполнуюСтавку = НаборЗаписей[0].ИспользоватьРаботуНаНеполнуюСтавку;
	КонецЕсли;
	
	Настройка.Записать();
	
КонецЕсли;

Отказ = Истина;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НастройкиКадровогоУчета</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ИспользоватьРаботуНаНеполнуюСтавку</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользоватьРаботуНаНеполнуюСтавку" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КатегорииДолжностей</Код>
				<Наименование>Справочник: Категории должностей</Наименование>
				<Порядок>3050</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>СправочникСсылка.КатегорииДолжностей</Источник>
				<Приемник>СправочникСсылка.КатегорииДолжностей</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДругиеСлужащие --&gt; ДругиеСлужащие</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДругиеСлужащие</Источник>
						<Приемник>ДругиеСлужащие</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>КвалифицированныеРаботникиСИнструментом --&gt; Квалиф</Наименование>
						<Порядок>100</Порядок>
						<Источник>КвалифицированныеРаботникиСИнструментом</Источник>
						<Приемник>КвалифицированныеРаботникиСИнструментом</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>КвалифицированныеРаботникиСХ --&gt; Квалифицированные</Наименование>
						<Порядок>150</Порядок>
						<Источник>КвалифицированныеРаботникиСХ</Источник>
						<Приемник>КвалифицированныеРаботникиСХ</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Профессионалы --&gt; Профессионалы</Наименование>
						<Порядок>200</Порядок>
						<Источник>Профессионалы</Источник>
						<Приемник>Профессионалы</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>РаботникиСферыТорговлиИУслуг --&gt; РаботникиСферыТор</Наименование>
						<Порядок>250</Порядок>
						<Источник>РаботникиСферыТорговлиИУслуг</Источник>
						<Приемник>РаботникиСферыТорговлиИУслуг</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Рабочие --&gt; Рабочие</Наименование>
						<Порядок>300</Порядок>
						<Источник>Рабочие</Источник>
						<Приемник>Рабочие</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Руководители --&gt; Руководители</Наименование>
						<Порядок>350</Порядок>
						<Источник>Руководители</Источник>
						<Приемник>Руководители</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>Специалисты --&gt; Специалисты</Наименование>
						<Порядок>400</Порядок>
						<Источник>Специалисты</Источник>
						<Приемник>Специалисты</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ТехническиеСлужащие --&gt; ТехническиеСлужащие</Наименование>
						<Порядок>450</Порядок>
						<Источник>ТехническиеСлужащие</Источник>
						<Приемник>ТехническиеСлужащие</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>ОбменСБанкамиПоЗарплатнымПроектам</Код>
			<Наименование>Обмен с банками по зарплатным проектам</Наименование>
			<Порядок>250</Порядок>
			<Правило>
				<Код>ЗарплатныеПроекты</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование");
ВходящиеДанные.Наименование = Строка(Источник.Банк) + ?(ЗначениеЗаполнено(Источник.НомерДоговора), " №" + Источник.НомерДоговора, "");</ПередВыгрузкой>
				<Приемник>СправочникСсылка.ЗарплатныеПроекты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Банк</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Банк" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторБанков"/>
						<КодПравилаКонвертации>КонтрагентыБанки                                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Валюта</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КонтрагентыБанки</Код>
				<Наименование>Справочник: Контрагенты</Наименование>
				<Порядок>100</Порядок>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>СправочникСсылка.КлассификаторБанков</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам</Код>
				<Наименование>Регистр сведений: Лицевые счета сотрудников организации</Наименование>
				<Порядок>150</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Банк</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Банк" Вид="Измерение" Тип="СправочникСсылка.КлассификаторБанков"/>
						<КодПравилаКонвертации>КонтрагентыБанки                                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; НомерЛицевогоСчета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерЛицевогоСчета" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ЗарплатныйПроект</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗарплатныйПроект" Вид="Ресурс" Тип="СправочникСсылка.ЗарплатныеПроекты"/>
						<КодПравилаКонвертации>ЗарплатныеПроекты                                 </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>МестаВыплатыЗарплатыСотрудников</Код>
				<Наименование>:</Наименование>
				<Порядок>200</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.МестаВыплатыЗарплатыСотрудников</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Вид</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыМестВыплатыЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; МестоВыплаты</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МестоВыплаты" Вид="Ресурс"/>
						<КодПравилаКонвертации>ЗарплатныеПроекты                                 </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ОстаткиОтпусков</Код>
			<Наименование>ОстаткиОтпусков</Наименование>
			<Порядок>300</Порядок>
			<Правило>
				<Код>ФактическиеОтпуска_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>200</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ФактическиеОтпуска");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ФактическиеОтпуска</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФактическиеОтпуска" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ФактическиеОтпуска");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Измерение" Тип="СправочникСсылка.ВидыОтпусков"/>
							<КодПравилаКонвертации>ВидыОтпусков                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>12</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Количество</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>10</Код>
							<Наименование>--&gt; Компенсация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Компенсация" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ДатаРегистрации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; РабочийПериодС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочийПериодС" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; РабочийПериодПо</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочийПериодПо" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>9</Код>
							<Наименование>--&gt; Основание</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Основание" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ОтражениеЗарплатыВБухгалтерскомУчете</Код>
			<Наименование>Отражение зарплаты в бухгалтерском учете</Наименование>
			<Порядок>350</Порядок>
			<Правило>
				<Код>БухучетЗарплатыОрганизаций</Код>
				<Наименование>Справочник: Учреждения</Наименование>
				<Порядок>50</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>РегистрСведенийЗапись.УчетОсновногоЗаработкаОрганизации</Источник>
				<Приемник>РегистрСведенийЗапись.БухучетЗарплатыОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Период --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>СпособОтраженияВБухучете --&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="СпособОтраженияВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВБухУчете</Код>
				<Наименование>Справочник: Способы отражения зарплаты в регламентированном учете</Наименование>
				<Порядок>400</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Источник>СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Источник>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>РасчетЗарплаты</Код>
			<Наименование>Расчет зарплаты</Наименование>
			<Порядок>400</Порядок>
			<Правило>
				<Код>ВидыДоговоровАвторскогоЗаказа</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("КодДоходаНДФЛ");
ВходящиеДанные.КодДоходаНДФЛ = Источник;</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ВидыДоходовНДФЛ</Источник>
				<Приемник>СправочникСсылка.ВидыДоговоровАвторскогоЗаказа</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; КодДоходаНДФЛ</Наименование>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыРабочегоВремениСотрудников</Код>
				<Наименование>Перечисление: Виды времени</Наименование>
				<Порядок>250</Порядок>
				<Источник>ПеречислениеСсылка.ВидыВремени</Источник>
				<Приемник>ПеречислениеСсылка.ВидыРабочегоВремениСотрудников</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt;</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДополнительноОплачиваемоеВПределахНормы --&gt; Дополн</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДополнительноОплачиваемоеВПределахНормы</Источник>
						<Приемник>ДополнительноОплачиваемоеВПределахНормы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ОтработанноеВПределахНормы --&gt; ОтработанноеВПредел</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОтработанноеВПределахНормы</Источник>
						<Приемник>ОтработанноеВПределахНормы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ОтработанноеСверхНормы --&gt; ОтработанноеСверхНормы</Наименование>
						<Порядок>150</Порядок>
						<Источник>ОтработанноеСверхНормы</Источник>
						<Приемник>ОтработанноеСверхНормы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ЦелодневноеНеотработанное --&gt; ЦелодневноеНеотработ</Наименование>
						<Порядок>200</Порядок>
						<Источник>ЦелодневноеНеотработанное</Источник>
						<Приемник>ЦелодневноеНеотработанное</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ЧасовоеНеотработанное --&gt; ЧасовоеНеотработанное</Наименование>
						<Порядок>250</Порядок>
						<Источник>ЧасовоеНеотработанное</Источник>
						<Приемник>ЧасовоеНеотработанное</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ЧасовоеОтработанноеВПределахНормы --&gt; ЧасовоеОтраб</Наименование>
						<Порядок>300</Порядок>
						<Источник>ЧасовоеОтработанноеВПределахНормы</Источник>
						<Приемник>ЧасовоеОтработанноеВПределахНормы</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДоговорАвторскогоЗаказа</Код>
				<Наименование>Документ: Договор на выполнение работ с физ. лицом</Наименование>
				<Порядок>350</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Проведен");
ВходящиеДанные.Проведен = Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Приемник>ДокументСсылка.ДоговорАвторскогоЗаказа</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидАвторскогоДоговора</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидАвторскогоДоговора" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоговоровАвторскогоЗаказа"/>
						<КодПравилаКонвертации>ВидыДоговоровАвторскогоЗаказа                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; МесяцНачисления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНачисления" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; Сумма</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>19</Код>
						<Наименование>--&gt; ПериодыДействияДоговоровГражданскоПравовогоХарактера</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодыДействияДоговоровГражданскоПравовогоХарактера" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ДоговорАвторскогоЗаказаТолькоСсылка               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Ресурс" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>27</Код>
						<Наименование>--&gt; ПлановыеНачисленияПоДоговорам</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисленияПоДоговорам" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; Договор</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Договор" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДоговорАвторскогоЗаказаТолькоСсылка               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; ДоговорАкт</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорАкт" Вид="Измерение"/>
							<КодПравилаКонвертации>ДоговорАвторскогоЗаказаТолькоСсылка               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; МесяцНачисления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНачисления" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Ресурс" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование>--&gt; ЗаключенСоСтудентомРаботающимВСтудотряде</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗаключенСоСтудентомРаботающимВСтудотряде" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; КодДохода</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Ресурс" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
							<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоговорАвторскогоЗаказаТолькоСсылка</Код>
				<Наименование>Документ: Договор на выполнение работ с физ. лицом</Наименование>
				<Порядок>400</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом</Источник>
				<Приемник>ДокументСсылка.ДоговорАвторскогоЗаказа</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ДатаНачала --&gt; ДатаНачала</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>Номер --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоговорРаботыУслуги</Код>
				<Наименование>Документ: Договор на выполнение работ с физ. лицом</Наименование>
				<Порядок>450</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Проведен");
ВходящиеДанные.Проведен = Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Приемник>ДокументСсылка.ДоговорРаботыУслуги</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; МесяцНачисления</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНачисления" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; Сумма</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ЗаключенСоСтудентомРаботающимВСтудотряде</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗаключенСоСтудентомРаботающимВСтудотряде" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>18</Код>
						<Наименование>--&gt; ПериодыДействияДоговоровГражданскоПравовогоХарактера</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодыДействияДоговоровГражданскоПравовогоХарактера" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ДоговорРаботыУслугиТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Ресурс" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>26</Код>
						<Наименование>--&gt; ПлановыеНачисленияПоДоговорам</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисленияПоДоговорам" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Договор</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Договор" Вид="Реквизит"/>
							<КодПравилаКонвертации>ДоговорРаботыУслугиТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ДоговорАкт</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорАкт" Вид="Измерение"/>
							<КодПравилаКонвертации>ДоговорРаботыУслугиТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; МесяцНачисления</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНачисления" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Ресурс" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; ЗаключенСоСтудентомРаботающимВСтудотряде</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗаключенСоСтудентомРаботающимВСтудотряде" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>--&gt; КодДохода</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Ресурс" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
							<КодПравилаКонвертации>СпособыОтраженияЗарплатыВБухУчете                 </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>950</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоговорРаботыУслугиТолькоСсылка</Код>
				<Наименование>Документ: Договор на выполнение работ с физ. лицом</Наименование>
				<Порядок>500</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом</Источник>
				<Приемник>ДокументСсылка.ДоговорРаботыУслуги</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>ДатаНачала --&gt; ДатаНачала</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Номер --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование>Сотрудник --&gt; Сотрудник</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗначенияПоказателейРасчетаЗарплаты_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>550</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ЗначенияПериодическихПоказателейРасчетаЗарплатыОрганизаций");
СписокРегистров.Добавить("ЗначенияПериодическихПоказателейРасчетаЗарплатыПодразделений");
СписокРегистров.Добавить("ЗначенияРазовыхПоказателейРасчетаЗарплатыОрганизаций");
СписокРегистров.Добавить("ЗначенияРазовыхПоказателейРасчетаЗарплатыПодразделений");
СписокРегистров.Добавить("ЗначенияРазовыхПоказателейРасчетаЗарплатыСотрудников");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыОрганизаций</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияПериодическихПоказателейРасчетаЗарплатыОрганизаций");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
							<ПередВыгрузкой>СтруктураПоказатель = Новый Структура("ПоказательСсылка,ЗапрашиватьПоказатель,НомерПоказателя,ФормулаРасчета,НачислениеУдержание",
	ОбъектКоллекции.Показатель,0,0,"","");
Выполнить(Алгоритмы.Показатель_Преобразовать);
Значение  = СтруктураПоказатель.Показатель;
//Значение = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Показатель_Преобразовать", Параметры.Алгоритмы, ОбъектКоллекции.Показатель, 0, 0, "", "");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыПодразделений</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыПодразделений" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияПериодическихПоказателейРасчетаЗарплатыПодразделений");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
							<ПередВыгрузкой>СтруктураПоказатель = Новый Структура("ПоказательСсылка,ЗапрашиватьПоказатель,НомерПоказателя,ФормулаРасчета,НачислениеУдержание",
	ОбъектКоллекции.Показатель,0,0,"","");
Выполнить(Алгоритмы.Показатель_Преобразовать);
Значение  = СтруктураПоказатель.Показатель;
//Значение = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Показатель_Преобразовать", Параметры.Алгоритмы, ОбъектКоллекции.Показатель, 0, 0, "", "");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование>--&gt; ЗначенияРазовыхПоказателейРасчетаЗарплатыОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияРазовыхПоказателейРасчетаЗарплатыОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияРазовыхПоказателейРасчетаЗарплатыОрганизаций");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
							<ПередВыгрузкой>СтруктураПоказатель = Новый Структура("ПоказательСсылка,ЗапрашиватьПоказатель,НомерПоказателя,ФормулаРасчета,НачислениеУдержание",
	ОбъектКоллекции.Показатель,0,0,"","");
Выполнить(Алгоритмы.Показатель_Преобразовать);
Значение  = СтруктураПоказатель.Показатель;
//Значение = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Показатель_Преобразовать", Параметры.Алгоритмы, ОбъектКоллекции.Показатель, 0, 0, "", "");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование>--&gt; ЗначенияРазовыхПоказателейРасчетаЗарплатыПодразделений</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияРазовыхПоказателейРасчетаЗарплатыПодразделений" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияРазовыхПоказателейРасчетаЗарплатыПодразделений");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
							<ПередВыгрузкой>СтруктураПоказатель = Новый Структура("ПоказательСсылка,ЗапрашиватьПоказатель,НомерПоказателя,ФормулаРасчета,НачислениеУдержание",
	ОбъектКоллекции.Показатель,0,0,"","");
Выполнить(Алгоритмы.Показатель_Преобразовать);
Значение  = СтруктураПоказатель.Показатель;
//Значение = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Показатель_Преобразовать", Параметры.Алгоритмы, ОбъектКоллекции.Показатель, 0, 0, "", "");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>26</Код>
						<Наименование>--&gt; ЗначенияРазовыхПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияРазовыхПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияРазовыхПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
							<ПередВыгрузкой>СтруктураПоказатель = Новый Структура("ПоказательСсылка,ЗапрашиватьПоказатель,НомерПоказателя,ФормулаРасчета,НачислениеУдержание",
	ОбъектКоллекции.Показатель,0,0,"","");
Выполнить(Алгоритмы.Показатель_Преобразовать);
Значение  = СтруктураПоказатель.Показатель;
//Значение = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Показатель_Преобразовать", Параметры.Алгоритмы, ОбъектКоллекции.Показатель, 0, 0, "", "");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>32</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = "Значения показателей расчета зарплаты";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИзменениеОплатыТруда</Код>
				<Наименование>:</Наименование>
				<Порядок>600</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Проведен");
ВходящиеДанные.Проведен = Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Документ_РассчитатьФОТ);</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ИзменениеОплатыТруда</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаИзменения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаИзменения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ИзменитьНачисления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>30</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>34</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование>--&gt; ПлановыеНачисления</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисления" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПлановыеНачисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; Используется</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Используется" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>27</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ИспользуетсяПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИспользуетсяПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>28</Код>
							<Наименование>--&gt; РазмерПоОкончании</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>35</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Показатели");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>11</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>39</Код>
						<Наименование>--&gt; ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; Применение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Применение" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; ПрименениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПрименениеПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>750</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИндексацияЗаработка</Код>
				<Наименование>:</Наименование>
				<Порядок>650</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Проведен");
ВходящиеДанные.Проведен = Истина;</ПриВыгрузке>
				<Приемник>ДокументСсылка.ИндексацияЗаработка</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; МесяцИндексации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцИндексации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; КоэффициентИндексации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоэффициентИндексации" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Группа>
						<Код>32</Код>
						<Наименование>--&gt; Сотрудники</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудники" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; КоэффициентИндексации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоэффициентИндексации" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>26</Код>
						<Наименование>--&gt; НачисленияСотрудников</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияСотрудников" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>30</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>22</Код>
						<Наименование>--&gt; ЗначенияПоказателей</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПоказателей" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование>--&gt; КоэффициентИндексацииЗаработка</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоэффициентИндексацииЗаработка" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Коэффициент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НачислениеЗаПервуюПоловинуМесяца</Код>
				<Наименование>:</Наименование>
				<Порядок>750</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Проведен");
ВходящиеДанные.Проведен = Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<Приемник>ДокументСсылка.НачислениеЗаПервуюПоловинуМесяца</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>34</Код>
						<Наименование>--&gt; МесяцНачисления</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНачисления" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>35</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>40</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; ВидУчетаВремени</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; ВремяВЧасах</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВремяВЧасах" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование>--&gt; ГрафикРаботы</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование>--&gt; ГрафикРаботыНорма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботыНорма" Вид="Реквизит"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование>--&gt; КодВычета</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыЛьготПоНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование>--&gt; НормаДней</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НормаДней" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование>--&gt; НормаЧасов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НормаЧасов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование>--&gt; ОплаченоДней</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоДней" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование>--&gt; ОплаченоЧасов</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоЧасов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование>--&gt; ОтработаноДней</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование>--&gt; ОтработаноЧасов</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование>--&gt; ПериодРегистрацииВремени</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрацииВремени" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование>--&gt; РасчетнаяБазаЗаЕдиницуНормыВремени</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетнаяБазаЗаЕдиницуНормыВремени" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование>--&gt; Результат</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование>--&gt; СуммаВычета</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВычета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>93</Код>
						<Наименование>--&gt; Удержания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержания" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>94</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>95</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Выполнить(Алгоритмы.Удержание_ДокументОснование_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>97</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование>--&gt; ПлатежныйАгент</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежныйАгент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						</Свойство>
						<Свойство>
							<Код>99</Код>
							<Наименование>--&gt; Получатель</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						</Свойство>
						<Свойство>
							<Код>100</Код>
							<Наименование>--&gt; Результат</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование>--&gt; Удержание</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>73</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>74</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>62</Код>
						<Наименование>--&gt; НДФЛ</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛ" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>63</Код>
							<Наименование>--&gt; ИдентификаторСтрокиНДФЛ</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиНДФЛ" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование>--&gt; Налог</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит"/>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>103</Код>
							<Наименование>--&gt; ВидСтавки</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСтавки" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
							<КодПравилаКонвертации>ВидыСтавокНДФЛ                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>104</Код>
							<Наименование>--&gt; Доход</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Доход" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>105</Код>
							<Наименование>--&gt; ДоходПолный</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходПолный" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>106</Код>
							<Наименование>--&gt; КодДохода</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование>--&gt; КоличествоЛьгот</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоЛьгот" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>108</Код>
							<Наименование>--&gt; Льгота</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Льгота" Вид="Реквизит" Тип="СправочникСсылка.ВидыЛьготПоНДФЛ"/>
						</Свойство>
						<Свойство>
							<Код>109</Код>
							<Наименование>--&gt; СуммаЛьготы</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаЛьготы" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование>--&gt; УвеличеннаяСтавка</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УвеличеннаяСтавка" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
							<КодПравилаКонвертации>ВидыСтавокНДФЛ                                    </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование>--&gt; НачисленияУдержанияПоСотрудникамАвансом</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУдержанияПоСотрудникамАвансом" Вид="НаборДвиженийРегистраНакопления"/>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; НачислениеУдержание</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислениеУдержание" Вид="Измерение"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>20</Код>
						<Наименование>--&gt; ОтработанноеВремяПоСотрудникамАвансом</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтработанноеВремяПоСотрудникамАвансом" Вид="НаборДвиженийРегистраНакопления"/>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ОплаченоДней</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ОплаченоЧасов</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ОтработаноДней</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; ОтработаноЧасов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ЗарплатаКВыплатеАвансом</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗарплатаКВыплатеАвансом" Вид="НаборДвиженийРегистраНакопления"/>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; СуммаКВыплате</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаКВыплате" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>38</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>39</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПереченьПособийСоциальногоСтрахования</Код>
				<Наименование>Перечисление: Виды пособий социального страхования</Наименование>
				<Порядок>800</Порядок>
				<Источник>ПеречислениеСсылка.ВидыГосударственныхПособий</Источник>
				<Приемник>ПеречислениеСсылка.ПереченьПособийСоциальногоСтрахования</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>10</Код>
						<Наименование>ПриРожденииРебенка --&gt; ПриРожденииРебенка</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПриРожденииРебенка</Источник>
						<Приемник>ПриРожденииРебенка</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>НаПогребение --&gt; ВСвязиСоСмертью</Наименование>
						<Порядок>650</Порядок>
						<Источник>НаПогребение</Источник>
						<Приемник>ВСвязиСоСмертью</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ПоУходуЗаРебенкомДо3хЛет --&gt; ПоУходуЗаРебенком</Наименование>
						<Порядок>700</Порядок>
						<Источник>ПоУходуЗаРебенкомДо3хЛет</Источник>
						<Приемник>ПоУходуЗаРебенком</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПоказателиРасчетаЗарплаты</Код>
				<Наименование>Справочник: Показатели схем мотивации</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Точность");
ВходящиеДанные.Точность = 3; //здадим по умолчанию 3 знака</ПередВыгрузкой>
				<ПриЗагрузке>НеЗамещатьОбъект = Объект.Предопределенный;</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ПоказателиРасчетаЗарплаты_ПоляПоиска);</ПоследовательностьПолейПоиска>
				<Источник>СправочникСсылка.ПоказателиСхемМотивации</Источник>
				<Приемник>СправочникСсылка.ПоказателиРасчетаЗарплаты</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПриВыгрузке>Отказ = Не ЗначениеЗаполнено(Значение);</ПриВыгрузке>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Идентификатор</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ТипПоказателя</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипПоказателя" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; НазначениеПоказателя</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НазначениеПоказателя" Вид="Реквизит" Тип="ПеречислениеСсылка.НазначенияПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ЗначениеРассчитываетсяАвтоматически</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначениеРассчитываетсяАвтоматически" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ОтображатьВДокументахНачисления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтображатьВДокументахНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; СпособВводаЗначений</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВводаЗначений" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВводаЗначенийПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; СпособПримененияЗначений</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособПримененияЗначений" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; Точность</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Точность" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПорядокОпределенияРасчетногоПериодаСреднегоЗаработ</Код>
				<Наименование>Перечисление: Порядок определения расчетного периода среднего заработка</Наименование>
				<Порядок>1000</Порядок>
				<Источник>ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Источник>
				<Приемник>ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоКолдоговору --&gt; ПоКолдоговору</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПоКолдоговору</Источник>
						<Приемник>ПоКолдоговору</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоТрудовомуЗаконодательству --&gt; ПоТрудовомуЗаконод</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПоТрудовомуЗаконодательству</Источник>
						<Приемник>ПоТрудовомуЗаконодательству</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПостоянноеУдержаниеВПользуТретьихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>1050</Порядок>
				<ПослеЗагрузки>Объект.ПометкаУдаления = Ложь;
Объект.Записать(РежимЗаписиДокумента.Запись);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать(РежимЗаписиДокумента.Проведение);
Исключение
КонецПопытки;
Отказ = Истина;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ПостоянноеУдержаниеВПользуТретьихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>34</Код>
						<Наименование>--&gt; Удержание</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ИмяПКО = "УдержанияТолькоСсылка"; 	
Иначе
	ИмяПКО = "Удержания_УП_ТолькоСсылка";	
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>41</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>33</Код>
						<Наименование>--&gt; Контрагент</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ТипЗнч(Источник.Контрагент) = Тип("Строка") Тогда
	ИмяПКО = "КонтрагентыСтрокой";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>35</Код>
						<Наименование>--&gt; ДокументОснование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ПостоянноеУдержаниеВПользуТретьихЛиц"/>
						<КодПравилаКонвертации>ПостоянноеУдержаниеВПользуТретьихЛицТолькоСсылка  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>32</Код>
						<Наименование>--&gt; Действие</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСУдержаниями"/>
					</Свойство>
					<Группа>
						<Код>37</Код>
						<Наименование>--&gt; Удержания</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержания" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>38</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>19</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ИмяПКО = "ПоказателиРасчетаЗарплаты"; 	
Иначе
	ИмяПКО = "Показатели_УП_ТолькоСсылка";	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПостоянноеУдержаниеВПользуТретьихЛицТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>1100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ДокументСсылка.ПостоянноеУдержаниеВПользуТретьихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Удержание</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ИмяПКО = "УдержанияТолькоСсылка"; 	
Иначе
	ИмяПКО = "Удержания_УП_ТолькоСсылка";	
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыРасчетаОтпуска</Код>
				<Наименование>Перечисление: Способы расчета остатка отпуска</Наименование>
				<Порядок>1250</Порядок>
				<Источник>ПеречислениеСсылка.ВидыУчетаВремениДляСредней</Источник>
				<Приемник>ПеречислениеСсылка.СпособыРасчетаОтпуска</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt;</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоКалендарнымДням --&gt; ВКалендарныхДнях</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПоКалендарнымДням</Источник>
						<Приемник>ВКалендарныхДнях</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоРабочимДням --&gt; ВРабочихДнях</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПоРабочимДням</Источник>
						<Приемник>ВРабочихДнях</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПоКалендарнымДнямСПраздниками --&gt; ВКалендарныхДнях</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПоКалендарнымДнямСПраздниками</Источник>
						<Приемник>ВКалендарныхДняхСПраздниками</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПоРабочимЧасам --&gt; ВРабочихДнях</Наименование>
						<Порядок>250</Порядок>
						<Источник>ПоРабочимЧасам</Источник>
						<Приемник>ВРабочихДнях</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыРасчетаУдержаний</Код>
				<Наименование>Перечисление: Способы расчета оплаты труда</Наименование>
				<Порядок>1300</Порядок>
				<Источник>ПеречислениеСсылка.СпособыРасчетаОплатыТруда</Источник>
				<Приемник>ПеречислениеСсылка.СпособыРасчетаУдержаний</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>ИсполнительныйЛистПроцентом --&gt; ИсполнительныйЛист</Наименование>
						<Порядок>100</Порядок>
						<Источник>ИсполнительныйЛистПроцентом</Источник>
						<Приемник>ИсполнительныйЛист</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ИсполнительныйЛистПроцентомДоПредела --&gt; Исполните</Наименование>
						<Порядок>150</Порядок>
						<Источник>ИсполнительныйЛистПроцентомДоПредела</Источник>
						<Приемник>ИсполнительныйЛист</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ИсполнительныйЛистФиксСуммойДоПредела --&gt; Исполнит</Наименование>
						<Порядок>200</Порядок>
						<Источник>ИсполнительныйЛистФиксСуммойДоПредела</Источник>
						<Приемник>ИсполнительныйЛист</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПроизвольнаяФормула --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>250</Порядок>
						<Источник>ПроизвольнаяФормула</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПочтовыйСбор --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПочтовыйСбор</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Процентом --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>450</Порядок>
						<Источник>Процентом</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>АлиментыПроцентом --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>500</Порядок>
						<Источник>АлиментыПроцентом</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>АлиментыПроцентомДоПредела --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>550</Порядок>
						<Источник>АлиментыПроцентомДоПредела</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>АлиментыФиксСуммой --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>600</Порядок>
						<Источник>АлиментыФиксСуммой</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>АлиментыФиксСуммойДоПредела --&gt; ПроизвольнаяФормул</Наименование>
						<Порядок>650</Порядок>
						<Источник>АлиментыФиксСуммойДоПредела</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>Взносы --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>700</Порядок>
						<Источник>Взносы</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ВзносыФОТ --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>750</Порядок>
						<Источник>ВзносыФОТ</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ВыслугаЛет --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>800</Порядок>
						<Источник>ВыслугаЛет</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ВыходноеПособие --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>850</Порядок>
						<Источник>ВыходноеПособие</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ГосударственноеПособие --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>900</Порядок>
						<Источник>ГосударственноеПособие</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ДоначислениеОтОбратного --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>950</Порядок>
						<Источник>ДоначислениеОтОбратного</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ДоплатаДоМЗП --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ДоплатаДоМЗП</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ДоплатаДоСреднегоЗаработка --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1050</Порядок>
						<Источник>ДоплатаДоСреднегоЗаработка</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ДоплатаЗаВечерниеЧасы --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасы</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ДоплатаЗаНочныеЧасы --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ДоплатаЗаНочныеЧасы</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>Замена --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1200</Порядок>
						<Источник>Замена</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ИндексацияАлиментов --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ИндексацияАлиментов</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ИндексацияЗарплаты --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ИндексацияЗарплаты</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ИндексацияСоциальныхНачислений --&gt; ПроизвольнаяФор</Наименование>
						<Порядок>1350</Порядок>
						<Источник>ИндексацияСоциальныхНачислений</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ИсполнителныйЛистСУчетомОграничения --&gt; Произвольн</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ИсполнителныйЛистСУчетомОграничения</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>ИсполнительныйЛистФиксСуммой --&gt; ПроизвольнаяФорму</Наименование>
						<Порядок>1450</Порядок>
						<Источник>ИсполнительныйЛистФиксСуммой</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>КомпенсацияНевыплаченнойЗарплаты --&gt; ПроизвольнаяФ</Наименование>
						<Порядок>1500</Порядок>
						<Источник>КомпенсацияНевыплаченнойЗарплаты</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>НулеваяСумма --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1550</Порядок>
						<Источник>НулеваяСумма</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ПоДневнойТарифнойСтавке --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ПоДневнойТарифнойСтавке</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ПоДоговоруФиксированнойСуммой --&gt; ПроизвольнаяФорм</Наименование>
						<Порядок>1650</Порядок>
						<Источник>ПоДоговоруФиксированнойСуммой</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>ПоМесячнойТарифнойСтавкеПоДням --&gt; ПроизвольнаяФор</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ПоМесячнойТарифнойСтавкеПоДням</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ПоМесячнойТарифнойСтавкеПоЧасам --&gt; ПроизвольнаяФо</Наименование>
						<Порядок>1750</Порядок>
						<Источник>ПоМесячнойТарифнойСтавкеПоЧасам</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ПоСреднемуЗаработку --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ПоСреднемуЗаработку</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ПоСреднемуЗаработкуВозвратОтпуска --&gt; Произвольная</Наименование>
						<Порядок>1850</Порядок>
						<Источник>ПоСреднемуЗаработкуВозвратОтпуска</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>ПоСреднемуЗаработкуДляОтпуска --&gt; ПроизвольнаяФорм</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ПоСреднемуЗаработкуДляОтпуска</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>ПоСреднемуЗаработкуКомпенсацияОтпуска --&gt; Произвол</Наименование>
						<Порядок>1950</Порядок>
						<Источник>ПоСреднемуЗаработкуКомпенсацияОтпуска</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>ПоСреднемуЗаработкуФСС --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ПоСреднемуЗаработкуФСС</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>ПоЧасовойТарифнойСтавке --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>2050</Порядок>
						<Источник>ПоЧасовойТарифнойСтавке</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ПоЧасовойТарифнойСтавкеУмножитьНаПроцент --&gt; Произ</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ПоЧасовойТарифнойСтавкеУмножитьНаПроцент</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>СдельныйЗаработок --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>2150</Порядок>
						<Источник>СдельныйЗаработок</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>ФиксированнойСуммой --&gt; ПроизвольнаяФормула</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ФиксированнойСуммой</Источник>
						<Приемник>ПроизвольнаяФормула</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>--&gt; ВознаграждениеПлатежногоАгента</Наименование>
						<Порядок>2250</Порядок>
						<Приемник>ВознаграждениеПлатежногоАгента</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>УдержаниеПрофсоюзныхВзносов</Код>
				<Наименование>:</Наименование>
				<Порядок>1450</Порядок>
				<ПослеЗагрузки>Объект.ПометкаУдаления = Ложь;
Объект.Записать(РежимЗаписиДокумента.Запись);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать(РежимЗаписиДокумента.Проведение);
Исключение
КонецПопытки;
Отказ = Истина;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.УдержаниеПрофсоюзныхВзносов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>25</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование>--&gt; Удержание</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ИмяПКО = "УдержанияТолькоСсылка"; 	
Иначе
	ИмяПКО = "Удержания_УП_ТолькоСсылка";	
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>20</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>41</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>27</Код>
						<Наименование>--&gt; ПрофсоюзнаяОрганизация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрофсоюзнаяОрганизация" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ТипЗнч(Источник.ПрофсоюзнаяОрганизация) = Тип("Строка") Тогда
	ИмяПКО = "КонтрагентыСтрокой";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>23</Код>
						<Наименование>--&gt; ДокументОснование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.УдержаниеПрофсоюзныхВзносов"/>
						<КодПравилаКонвертации>УдержаниеПрофсоюзныхВзносовТолькоСсылка           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; Действие</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСУдержаниями"/>
					</Свойство>
					<Группа>
						<Код>36</Код>
						<Наименование>--&gt; Удержания</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержания" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>33</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>35</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ИмяПКО = "ПоказателиРасчетаЗарплаты"; 	
Иначе
	ИмяПКО = "Показатели_УП_ТолькоСсылка";	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УдержаниеПрофсоюзныхВзносовТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>1500</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ДокументСсылка.УдержаниеПрофсоюзныхВзносов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Удержание</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<КодПравилаКонвертации>УдержанияТолькоСсылка                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоРасчетуЗарплаты</Код>
				<Наименование>:</Наименование>
				<Порядок>1550</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ЗначенияПоказателейДоплатыЗаРаботуВНочноеВечернееВремя</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ПроцентДоплатыЗаРаботуВВечернееВремя</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроцентДоплатыЗаРаботуВВечернееВремя" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ПроцентДоплатыЗаРаботуВНочноеВремя</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроцентДоплатыЗаРаботуВНочноеВремя" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическиеНачисленияУдержания_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>1600</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("Начисления");
СписокРегистров.Добавить("Удержания");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ПериодРегистрации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<ПередВыгрузкой>РеквизитОбъекта = ОбъектКоллекции.ВидРасчета;
Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ПериодДействияНачало</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияНачало" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ПериодДействияКонец</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияКонец" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; БазовыйПериодНачало</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодНачало" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; БазовыйПериодКонец</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодКонец" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Сторно</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Результат</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ОтработаноДней</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ОтработаноЧасов</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; РезультатВТомЧислеЗаСчетФБ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РезультатВТомЧислеЗаСчетФБ" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ГрафикРаботы</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит"/>
							<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = ОбъектКоллекции.ГрафикРаботы;
Выполнить(Алгоритмы.ГрафикРаботы_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; ВидУчетаВремени</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
							<КодПравилаКонвертации>ВидыИспользованияРабочегоВремени                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ВремяВЧасах</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВремяВЧасах" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; ГрафикРаботыНорма</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботыНорма" Вид="Реквизит"/>
							<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
							<ПередВыгрузкой>Если ЗначениеЗаполнено(ОбъектКоллекции.ГрафикРаботыНорма) Тогда
	ИсходящиеДанные = ОбъектКоллекции.ГрафикРаботыНорма;
Иначе
	ИсходящиеДанные = ОбъектКоллекции.ГрафикРаботы;
КонецЕсли;	
Значение = ИсходящиеДанные;
Выполнить(Алгоритмы.ГрафикРаботы_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; РасчетнаяБазаЗаЕдиницуНормыВремени</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасчетнаяБазаЗаЕдиницуНормыВремени" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; ИдентификаторСтроки</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>25</Код>
						<Наименование>--&gt; Удержания</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержания" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Удержания");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>35</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ПериодРегистрации</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.Удержания"/>
							<КодПравилаКонвертации>УдержанияТолькоСсылка                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; БазовыйПериодНачало</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодНачало" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; БазовыйПериодКонец</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодКонец" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; Сторно</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Результат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<ПередВыгрузкой>Выполнить(Алгоритмы.Удержание_ДокументОснование_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство Отключить="true">
							<Код>32</Код>
							<Наименование>--&gt; Получатель</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; ПлатежныйАгент</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежныйАгент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>КонтрагентыСтрокой                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование>--&gt; ИдентификаторСтроки</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтроки" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НастройкиРасчетаЗарплаты</Код>
				<Наименование>:</Наименование>
				<Порядок>1650</Порядок>
				<ПослеЗагрузки>Если НаборЗаписей.Количество() &gt; 0 Тогда
	
	Настройка = РегистрыСведений.НастройкиРасчетаЗарплатыРасширенный.СоздатьНаборЗаписей();  
	Настройка.Прочитать();
	Если Настройка.Количество() &gt; 0 Тогда
		Настройка[0].ИспользоватьУчетВремениСотрудниковВЧасах = НаборЗаписей[0].ИспользоватьУчетВремениСотрудниковВЧасах;
	Иначе
		НоваяЗапись = Настройка.Добавить();
		НоваяЗапись.ИспользоватьУчетВремениСотрудниковВЧасах = НаборЗаписей[0].ИспользоватьУчетВремениСотрудниковВЧасах;
	КонецЕсли;
	
	Настройка.Записать();
	
КонецЕсли;

Отказ = Истина;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НастройкиРасчетаЗарплатыРасширенный</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ИспользоватьУчетВремениСотрудниковВЧасах</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользоватьУчетВремениСотрудниковВЧасах" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ИсполнительныеДокументы</Код>
			<Наименование>ИсполнительныеДокументы</Наименование>
			<Порядок>450</Порядок>
			<Правило>
				<Код>ИсполнительныйЛист</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= Источник.Ссылка;</ПередВыгрузкой>
				<ПослеЗагрузки>Объект.ПометкаУдаления = Ложь;
Объект.Записать(РежимЗаписиДокумента.Запись);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать(РежимЗаписиДокумента.Проведение);
Исключение
КонецПопытки;
Отказ = Истина;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ДокументСсылка.ИсполнительныйЛист</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>45</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>31</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование>--&gt; ВидИсполнительногоДокумента</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидИсполнительногоДокумента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыИсполнительныхДокументов"/>
					</Свойство>
					<Свойство>
						<Код>38</Код>
						<Наименование>--&gt; РеквизитыИсполнительногоДокумента</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РеквизитыИсполнительногоДокумента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование>--&gt; Получатель</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>27</Код>
						<Наименование>--&gt; ДатаДействия</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаДействия" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>39</Код>
						<Наименование>--&gt; СпособРасчета</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаУдержанияПоИсполнительномуДокументу"/>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование>--&gt; ВидБазы</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидБазы" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыБазыУдержанияПоИсполнительномуДокументу"/>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование>--&gt; Удержание</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<КодПравилаКонвертации>Удержания_УП_ТолькоСсылка                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование>--&gt; Процент</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Процент" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование>--&gt; Сумма</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>35</Код>
						<Наименование>--&gt; Предел</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Предел" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>44</Код>
						<Наименование>--&gt; УчитыватьБольничныеЛисты</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьБольничныеЛисты" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; ПлатежныйАгент</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлатежныйАгент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>КонтрагентыСтрокой                                </КодПравилаКонвертации>
						<ПередВыгрузкой>//Если ТипЗнч(Источник.ПлатежныйАгент) = Тип("СправочникСсылка.Контрагенты") Тогда
//	ИмяПКО = "КонтрагентыБанки";
//Иначе
//	ИмяПКО = "КонтрагентыСтрокой";
//КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>41</Код>
						<Наименование>--&gt; ТарифПлатежногоАгента</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТарифПлатежногоАгента" Вид="Реквизит" Тип="СправочникСсылка.ТарифыПлатежныхАгентов"/>
						<КодПравилаКонвертации>ТарифыПлатежныхАгентов_ПочтовыйСбор               </КодПравилаКонвертации>
						<ПередВыгрузкой>//Выполнить(Алгоритмы.ИсполнительныйЛист_ТарифПлатежногоАгента_ПКО);
Если Не ЗначениеЗаполнено(Источник.ТарифПлатежногоАгента) Тогда
	Отказ = Истина;
КонецЕсли;

//ИмяПКО	= "ТарифыПлатежныхАгентов_ПочтовыйСбор";</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование>--&gt; УдержаниеВознагражденияПлатежногоАгента</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УдержаниеВознагражденияПлатежногоАгента" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<КодПравилаКонвертации>Удержания_УП_ТолькоСсылка                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>47</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>48</Код>
						<Наименование>--&gt; Дети</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дети" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>50</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование>--&gt; ДатаРождения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИсполнительныйЛистТолькоСсылка</Код>
				<Наименование>Документ: Исполнительный лист</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если ТипЗнч(Источник) &lt;&gt; Тип("ДокументСсылка.ИсполнительныйЛист") Тогда
	Отказ = Истина;
Иначе
	КлючВыгружаемыхДанных	= Источник.Ссылка;
КонецЕсли;</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>ДокументСсылка.ИсполнительныйЛист</Источник>
				<Приемник>ДокументСсылка.ИсполнительныйЛист</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Физлицо --&gt; ФизическоеЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ДатаДействия --&gt; ДатаДействия</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ДатаДействия" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаДействия" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИзменениеУсловийИсполнительногоЛиста</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= Источник.Ссылка;</ПередВыгрузкой>
				<ПослеЗагрузки>Объект.ПометкаУдаления = Ложь;
Объект.Записать(РежимЗаписиДокумента.Запись);
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
Попытка
	Объект.Записать(РежимЗаписиДокумента.Проведение);
Исключение
КонецПопытки;
Отказ = Истина;</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Приемник>ДокументСсылка.ИзменениеУсловийИсполнительногоЛиста</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>31</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>43</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование>--&gt; ИсполнительныйЛист</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИсполнительныйЛист" Вид="Реквизит" Тип="ДокументСсылка.ИсполнительныйЛист"/>
						<КодПравилаКонвертации>ИсполнительныйЛистТолькоСсылка                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование>--&gt; ДатаИзменения</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаИзменения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование>--&gt; Действие</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями"/>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование>--&gt; СпособРасчета</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаУдержанияПоИсполнительномуДокументу"/>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование>--&gt; ВидБазы</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидБазы" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыБазыУдержанияПоИсполнительномуДокументу"/>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование>--&gt; Удержание</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Удержание" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<КодПравилаКонвертации>Удержания_УП_ТолькоСсылка                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование>--&gt; Процент</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Процент" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>38</Код>
						<Наименование>--&gt; Сумма</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>34</Код>
						<Наименование>--&gt; Предел</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Предел" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование>--&gt; УчитыватьБольничныеЛисты</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьБольничныеЛисты" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; ПлатежныйАгент</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлатежныйАгент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>КонтрагентыСтрокой                                </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>39</Код>
						<Наименование>--&gt; ТарифПлатежногоАгента</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТарифПлатежногоАгента" Вид="Реквизит" Тип="СправочникСсылка.ТарифыПлатежныхАгентов"/>
						<ПередВыгрузкой>Выполнить(Алгоритмы.ИсполнительныйЛист_ТарифПлатежногоАгента_ПКО);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>41</Код>
						<Наименование>--&gt; УдержаниеВознагражденияПлатежногоАгента</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УдержаниеВознагражденияПлатежногоАгента" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Удержания"/>
						<КодПравилаКонвертации>Удержания_УП_ТолькоСсылка                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>44</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>45</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УдержанияПоИсполнительнымДокументам_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>200</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("УдержанияПоИсполнительнымДокументам");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; УдержанияПоИсполнительнымДокументам</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УдержанияПоИсполнительнымДокументам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("УдержанияПоИсполнительнымДокументам");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ИсполнительныйДокумент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсполнительныйДокумент" Вид="Измерение" Тип="ДокументСсылка.ИсполнительныйЛист"/>
							<КодПравилаКонвертации>ИсполнительныйЛистТолькоСсылка                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Получатель</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Получатель" Вид="Измерение" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ПлатежныйАгент</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлатежныйАгент" Вид="Измерение" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>КонтрагентыСтрокой                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; СуммаУдержания</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаУдержания" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; СуммаВознагражденияПлатежногоАгента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВознагражденияПлатежногоАгента" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифыПлатежныхАгентов_ПочтовыйСбор</Код>
				<Наименование>Справочник: Тарифы почтового сбора</Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование, ИспользуетсяШкала, СпособВводаСуммы, Шкала");
ВходящиеДанные.Шкала	= Новый ТаблицаЗначений;
ВходящиеДанные.Шкала.Колонки.Добавить("МаксимальнаяСумма");
ВходящиеДанные.Шкала.Колонки.Добавить("МинимальнаяСумма");
ВходящиеДанные.Шкала.Колонки.Добавить("Порог");
ВходящиеДанные.Шкала.Колонки.Добавить("Процент");
ВходящиеДанные.Шкала.Колонки.Добавить("Сумма");

ВходящиеДанные.Наименование			= Строка(Источник);
ВходящиеДанные.ИспользуетсяШкала	= Истина;
ВходящиеДанные.СпособВводаСуммы		= 0;	//?(Источник.РасчетПоШкалеСПолнойСуммы, 0, 1);

НаборЗаписей = РегистрыСведений.ШкалаПочтовыхСборов.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.ПочтовыйТариф.Установить(Источник);
НаборЗаписей.Прочитать();

Для Каждого СтрокаНабора Из НаборЗаписей Цикл
	СтрокаШкалы = ВходящиеДанные.Шкала.Добавить();
	СтрокаШкалы.Порог				= СтрокаНабора.Порог;
	СтрокаШкалы.Процент				= СтрокаНабора.Ставка * 100;
	СтрокаШкалы.Сумма				= СтрокаНабора.СуммаДополнительно;
	СтрокаШкалы.МинимальнаяСумма	= СтрокаНабора.СуммаМинимальная;
КонецЦикла;</ПередВыгрузкой>
				<Приемник>СправочникСсылка.ТарифыПлатежныхАгентов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ИспользуетсяШкала</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользуетсяШкала" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; СпособВводаСуммы</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВводаСуммы" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование>--&gt; Шкала</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Шкала" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; МаксимальнаяСумма</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МаксимальнаяСумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; МинимальнаяСумма</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МинимальнаяСумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Порог</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Порог" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Процент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Процент" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифыПлатежныхАгентов_Число</Код>
				<Наименование>:</Наименование>
				<Порядок>450</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование, ИспользуетсяШкала, Шкала");
ВходящиеДанные.Наименование			= "Почта " + Источник + "%";</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Наименование, ИспользуетсяШкала, Шкала");
ВходящиеДанные.Шкала	= Новый ТаблицаЗначений;
ВходящиеДанные.Шкала.Колонки.Добавить("Процент");

ВходящиеДанные.ИспользуетсяШкала	= Ложь;

СтрокаШкалы = ВходящиеДанные.Шкала.Добавить();
СтрокаШкалы.Процент	= Источник;</ПриВыгрузке>
				<Приемник>СправочникСсылка.ТарифыПлатежныхАгентов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ИспользуетсяШкала</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользуетсяШкала" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>3</Код>
						<Наименование>--&gt; Шкала</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Шкала" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Процент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Процент" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>РегламентированнаяОтчетность</Код>
			<Наименование>Регламентированная отчетность</Наименование>
			<Порядок>500</Порядок>
			<Правило>
				<Код>Периодичность</Код>
				<Наименование>Перечисление: Периодичность</Наименование>
				<Порядок>150</Порядок>
				<Источник>ПеречислениеСсылка.Периодичность</Источник>
				<Приемник>ПеречислениеСсылка.Периодичность</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Год --&gt; Год</Наименование>
						<Порядок>50</Порядок>
						<Источник>Год</Источник>
						<Приемник>Год</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Декада --&gt; Декада</Наименование>
						<Порядок>100</Порядок>
						<Источник>Декада</Источник>
						<Приемник>Декада</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>День --&gt; День</Наименование>
						<Порядок>150</Порядок>
						<Источник>День</Источник>
						<Приемник>День</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Квартал --&gt; Квартал</Наименование>
						<Порядок>200</Порядок>
						<Источник>Квартал</Источник>
						<Приемник>Квартал</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Месяц --&gt; Месяц</Наименование>
						<Порядок>250</Порядок>
						<Источник>Месяц</Источник>
						<Приемник>Месяц</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Неделя --&gt; Неделя</Наименование>
						<Порядок>300</Порядок>
						<Источник>Неделя</Источник>
						<Приемник>Неделя</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Полугодие --&gt; Полугодие</Наименование>
						<Порядок>350</Порядок>
						<Источник>Полугодие</Источник>
						<Приемник>Полугодие</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>РегламентированныеОтчеты</Код>
				<Наименование>Справочник: Регламентированные отчеты</Наименование>
				<Порядок>250</Порядок>
				<Источник>СправочникСсылка.РегламентированныеОтчеты</Источник>
				<Приемник>СправочникСсылка.РегламентированныеОтчеты</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>ИсточникОтчета --&gt; ИсточникОтчета</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ИсточникОтчета" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИсточникОтчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Описание --&gt; Описание</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Периоды --&gt; Периоды</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Периоды" Вид="Реквизит" Тип="ХранилищеЗначения"/>
						<Приемник Имя="Периоды" Вид="Реквизит" Тип="ХранилищеЗначения"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.РегламентированныеОтчеты"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.РегламентированныеОтчеты"/>
						<КодПравилаКонвертации>РегламентированныеОтчеты                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>8</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыОтчетности</Код>
				<Наименование>Перечисление: Виды отчетности</Наименование>
				<Порядок>350</Порядок>
				<Источник>ПеречислениеСсылка.ВидыОтчетности</Источник>
				<Приемник>ПеречислениеСсылка.ВидыОтчетности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ОтчетностьПоМСФО --&gt; ОтчетностьПоМСФО</Наименование>
						<Порядок>50</Порядок>
						<Источник>ОтчетностьПоМСФО</Источник>
						<Приемник>ОтчетностьПоМСФО</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>РегламентированнаяОтчетность --&gt; Регламентированна</Наименование>
						<Порядок>100</Порядок>
						<Источник>РегламентированнаяОтчетность</Источник>
						<Приемник>РегламентированнаяОтчетность</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>РегламентированныйОтчет</Код>
				<Наименование>Документ: Регламентированный отчет</Наименование>
				<Порядок>400</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.РегламентированныйОтчет</Источник>
				<Приемник>ДокументСсылка.РегламентированныйОтчет</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>ВидОтчетности --&gt; ВидОтчетности</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ВидОтчетности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОтчетности"/>
						<Приемник Имя="ВидОтчетности" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыОтчетности"/>
						<КодПравилаКонвертации>ВидыОтчетности                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ВыбраннаяФорма --&gt; ВыбраннаяФорма</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ВыбраннаяФорма" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ВыбраннаяФорма" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ДанныеОтчета --&gt; ДанныеОтчета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ДанныеОтчета" Вид="Реквизит" Тип="ХранилищеЗначения"/>
						<Приемник Имя="ДанныеОтчета" Вид="Реквизит" Тип="ХранилищеЗначения"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ДатаНачала --&gt; ДатаНачала</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ДатаОкончания --&gt; ДатаОкончания</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ДатаПодписи --&gt; ДатаПодписи</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ДатаПодписи" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаПодписи" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ДеревоНастройкиСтраниц --&gt; ДеревоНастройкиСтраниц</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ДеревоНастройкиСтраниц" Вид="Реквизит" Тип="ХранилищеЗначения"/>
						<Приемник Имя="ДеревоНастройкиСтраниц" Вид="Реквизит" Тип="ХранилищеЗначения"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>ЕдиницаИзмерения --&gt; ЕдиницаИзмерения</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругленияОтчетности"/>
						<Приемник Имя="ЕдиницаИзмерения" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядкиОкругленияОтчетности"/>
						<КодПравилаКонвертации>ПорядкиОкругленияОтчетности                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>ИсточникОтчета --&gt; ИсточникОтчета</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ИсточникОтчета" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИсточникОтчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>НаименованиеОтчета --&gt; НаименованиеОтчета</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="НаименованиеОтчета" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеОтчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование>Организация --&gt; Организация</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>Периодичность --&gt; Периодичность</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="Периодичность" Вид="Реквизит" Тип="ПеречислениеСсылка.Периодичность"/>
						<Приемник Имя="Периодичность" Вид="Реквизит" Тип="ПеречислениеСсылка.Периодичность"/>
						<КодПравилаКонвертации>Периодичность                                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование>ТочностьЕдиницыИзмерения --&gt; ТочностьЕдиницыИзмерения</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="ТочностьЕдиницыИзмерения" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ТочностьЕдиницыИзмерения" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>ФорматВыгрузки --&gt; ФорматВыгрузки</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="ФорматВыгрузки" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ФорматВыгрузки" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>Дата --&gt; Дата</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>КодИМНС --&gt; КодНалоговогоОргана</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодНалоговогоОргана" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПорядкиОкругленияОтчетности</Код>
				<Наименование>Перечисление: Порядки округления отчетности</Наименование>
				<Порядок>450</Порядок>
				<Источник>ПеречислениеСсылка.ПорядкиОкругленияОтчетности</Источник>
				<Приемник>ПеречислениеСсылка.ПорядкиОкругленияОтчетности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Окр1 --&gt; Окр1</Наименование>
						<Порядок>50</Порядок>
						<Источник>Окр1</Источник>
						<Приемник>Окр1</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Окр1000 --&gt; Окр1000</Наименование>
						<Порядок>100</Порядок>
						<Источник>Окр1000</Источник>
						<Приемник>Окр1000</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Окр1000000 --&gt; Окр1000000</Наименование>
						<Порядок>150</Порядок>
						<Источник>Окр1000000</Источник>
						<Приемник>Окр1000000</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СтатусыПисем</Код>
				<Наименование>Перечисление: Статусы писем</Наименование>
				<Порядок>500</Порядок>
				<Источник>ПеречислениеСсылка.СтатусыПисем</Источник>
				<Приемник>ПеречислениеСсылка.СтатусыПисем</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Исходящее --&gt; Исходящее</Наименование>
						<Порядок>50</Порядок>
						<Источник>Исходящее</Источник>
						<Приемник>Исходящее</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Отправленное --&gt; Отправленное</Наименование>
						<Порядок>100</Порядок>
						<Источник>Отправленное</Источник>
						<Приемник>Отправленное</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Полученное --&gt; Полученное</Наименование>
						<Порядок>150</Порядок>
						<Источник>Полученное</Источник>
						<Приемник>Полученное</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Сохраненное --&gt; Сохраненное</Наименование>
						<Порядок>200</Порядок>
						<Источник>Сохраненное</Источник>
						<Приемник>Сохраненное</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>УчетДепонированнойЗарплаты</Код>
			<Наименование>УчетДепонированнойЗарплаты</Наименование>
			<Порядок>550</Порядок>
		</Группа>
		<Группа>
			<Код>УчетНачисленнойЗарплаты</Код>
			<Наименование>УчетНачисленнойЗарплаты</Наименование>
			<Порядок>600</Порядок>
			<Правило>
				<Код>НачисленияУдержанияПоСотрудникам_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>600</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("НачисленияУдержанияПоСотрудникам");
СписокРегистров.Добавить("ОтработанноеВремяПоСотрудникам");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; НачисленияУдержанияПоСотрудникам</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУдержанияПоСотрудникам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("НачисленияУдержанияПоСотрудникам");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; НачислениеУдержание</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислениеУдержание" Вид="Измерение"/>
							<ПередВыгрузкой>РеквизитОбъекта = ОбъектКоллекции.НачислениеУдержание;
Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>13</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Контрагент</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Контрагент" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ДатаНачала</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ДатаОкончания</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>19</Код>
						<Наименование>--&gt; ОтработанноеВремяПоСотрудникам</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтработанноеВремяПоСотрудникам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ОтработанноеВремяПоСотрудникам");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; ОплаченоДней</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; ОплаченоЧасов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; ОтработаноДней</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; ОтработаноЧасов</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НачисленияУдержанияПоСотрудникамАвансом_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>600</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("НачисленияУдержанияПоСотрудникамАвансом");
СписокРегистров.Добавить("ОтработанноеВремяПоСотрудникамАвансом");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; НачисленияУдержанияПоСотрудникамАвансом</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУдержанияПоСотрудникамАвансом" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("НачисленияУдержанияПоСотрудникамАвансом");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; НачислениеУдержание</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислениеУдержание" Вид="Измерение"/>
							<ПередВыгрузкой>РеквизитОбъекта = ОбъектКоллекции.НачислениеУдержание;
Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование>--&gt; ОтработанноеВремяПоСотрудникамАвансом</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтработанноеВремяПоСотрудникамАвансом" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ОтработанноеВремяПоСотрудникамАвансом");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ПериодДействия</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ГруппаНачисленияУдержанияВыплаты</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаНачисленияУдержанияВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ОплаченоДней</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ОплаченоЧасов</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ОтработаноДней</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ОтработаноЧасов</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>УчетНДФЛ</Код>
			<Наименование>Учет НДФЛ</Наименование>
			<Порядок>650</Порядок>
			<Правило>
				<Код>ВидыДоходовНДФЛ</Код>
				<Наименование>Справочник: Коды доходов НДФЛ</Наименование>
				<Порядок>100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ВидыДоходовНДФЛ</Источник>
				<Приемник>СправочникСсылка.ВидыДоходовНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>3</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ВидСтавкиРезидента --&gt; ВидСтавкиРезидента</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ВидСтавкиРезидента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
						<Приемник Имя="ВидСтавкиРезидента" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
						<КодПравилаКонвертации>ВидыСтавокНДФЛ                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>ВидСтавкиУвеличенная --&gt; ВидСтавкиУвеличенная</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ВидСтавкиУвеличенная" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
						<Приемник Имя="ВидСтавкиУвеличенная" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
						<КодПравилаКонвертации>ВидыСтавокНДФЛ                                    </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>40</Код>
						<Наименование>ВоенныйСбор --&gt; ВоенныйСбор</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ВоенныйСбор</Источник>
						<Приемник>ВоенныйСбор</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>Код146 --&gt; Код146</Наименование>
						<Порядок>2050</Порядок>
						<Источник>Код146</Источник>
						<Приемник>Код146</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>Код01 --&gt; Код101</Наименование>
						<Порядок>2100</Порядок>
						<Источник>Код01</Источник>
						<Приемник>Код101</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>Код01ГПХ --&gt; Код102</Наименование>
						<Порядок>2150</Порядок>
						<Источник>Код01ГПХ</Источник>
						<Приемник>Код102</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>Код02 --&gt; Код103</Наименование>
						<Порядок>2200</Порядок>
						<Источник>Код02</Источник>
						<Приемник>Код103</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>Код12 --&gt; Код109</Наименование>
						<Порядок>2250</Порядок>
						<Источник>Код12</Источник>
						<Приемник>Код109</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>Код14 --&gt; Код127</Наименование>
						<Порядок>2300</Порядок>
						<Источник>Код14</Источник>
						<Приемник>Код127</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>Код16 --&gt; Код118</Наименование>
						<Порядок>2350</Порядок>
						<Источник>Код16</Источник>
						<Приемник>Код118</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>Код17 --&gt; Код169</Наименование>
						<Порядок>2400</Порядок>
						<Источник>Код17</Источник>
						<Приемник>Код169</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>Код22 --&gt; Код128</Наименование>
						<Порядок>2450</Порядок>
						<Источник>Код22</Источник>
						<Приемник>Код128</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>Код29 --&gt; Код140</Наименование>
						<Порядок>2500</Порядок>
						<Источник>Код29</Источник>
						<Приемник>Код140</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>Код42 --&gt; Код157</Наименование>
						<Порядок>2550</Порядок>
						<Источник>Код42</Источник>
						<Приемник>Код157</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>РасчетыНалогоплательщиковСБюджетомПоНДФЛ_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>600</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("РасчетыНалогоплательщиковСБюджетомПоНДФЛ");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; РасчетыНалогоплательщиковСБюджетомПоНДФЛ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыНалогоплательщиковСБюджетомПоНДФЛ" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("РасчетыНалогоплательщиковСБюджетомПоНДФЛ");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; КодДохода</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Измерение" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>13</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Доход</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Доход" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Налог</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; НалоговыйПериод</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НалоговыйПериод" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; ГруппаУчетаУдержаний</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГруппаУчетаУдержаний" Вид="Измерение" Тип="СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОДоходахНДФЛ_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>650</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("СведенияОДоходахНДФЛ");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; СведенияОДоходахНДФЛ</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СведенияОДоходахНДФЛ" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("СведенияОДоходахНДФЛ");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; КодДохода</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Измерение" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; СуммаДохода</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит"/>
							<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	РеквизитОбъекта = ОбъектКоллекции.Начисление;
	Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);
Иначе
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; ДатаПолученияДохода</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПолученияДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ДоходМежрасчетногоПериода</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходМежрасчетногоПериода" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; НалоговыйПериод</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НалоговыйПериод" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ПодразделениеСотрудника</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеСотрудника" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>Сотрудники                                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИсчисленныйНДФЛ_ПД</Код>
				<Наименование>: </Наименование>
				<Порядок>700</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ИсчисленныйНДФЛ");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>16</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ИсчисленныйНДФЛ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИсчисленныйНДФЛ" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ИсчисленныйНДФЛ");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; КодДохода</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Измерение" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
							<КодПравилаКонвертации>ВидыДоходовНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; НалоговыйПериод</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НалоговыйПериод" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ВидСтавки</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСтавки" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
							<КодПравилаКонвертации>ВидыСтавокНДФЛ                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; ДоходПолный</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоходПолный" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; КоличествоЛьгот</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоЛьгот" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Льгота</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Льгота" Вид="Реквизит" Тип="СправочникСсылка.ВидыЛьготПоНДФЛ"/>
							<КодПравилаКонвертации>ВидыЛьготПоНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство Отключить="true">
							<Код>10</Код>
							<Наименование>--&gt; СуммаЛьготы</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаЛьготы" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; УвеличеннаяСтавка</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УвеличеннаяСтавка" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокНДФЛ"/>
							<КодПравилаКонвертации>ВидыСтавокНДФЛ                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Доход</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Доход" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; Налог</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЛьготыФизическихЛицНДФЛ_ПД</Код>
				<Наименование>Льготы физических лиц НДФЛ</Наименование>
				<Порядок>750</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ЛьготыФизическихЛицНДФЛ");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ЛьготыФизическихЛицНДФЛ</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЛьготыФизическихЛицНДФЛ" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЛьготыФизическихЛицНДФЛ");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Льгота</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Льгота" Вид="Измерение" Тип="СправочникСсылка.ВидыЛьготПоНДФЛ"/>
							<КодПравилаКонвертации>ВидыЛьготПоНДФЛ                                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Актуальность</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Актуальность" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>УчетПособийСоциальногоСтрахования</Код>
			<Наименование>УчетПособийСоциальногоСтрахования</Наименование>
			<Порядок>700</Порядок>
			<Правило>
				<Код>ВозвратИзОтпускаПоУходуЗаРебенком</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("ДокументОснование, Проведен");
ВходящиеДанные.Проведен				= Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Документ_РассчитатьФОТ);</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ВозвратИзОтпускаПоУходуЗаРебенком</Приемник>
				<Свойства>
					<Свойство>
						<Код>59</Код>
						<Наименование>--&gt; ОсновнойСотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойСотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>26</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>24</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>20</Код>
						<Наименование>--&gt; ДатаВозврата</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВозврата" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование>--&gt; ДокументОснование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ОтпускПоУходуЗаРебенком"/>
						<КодПравилаКонвертации>ОтпускПоУходуЗаРебенкомТолькоСсылка               </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование>--&gt; ИзменитьНачисления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование>--&gt; НачисленияУтверждены</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУтверждены" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>30</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Отказ = ОбъектКоллекции.ЯвляетсяОтпускомПоУходуЗаРебенком;</ПередВыгрузкой>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; РабочееМесто</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочееМесто" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>35</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование>--&gt; ПлановыеНачисления</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисления" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПлановыеНачисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Используется</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Используется" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>17</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ИспользуетсяПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИспользуетсяПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>18</Код>
							<Наименование>--&gt; РазмерПоОкончании</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>36</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Показатели");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>38</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>50</Код>
						<Наименование>--&gt; ЗначенияСовокупныхТарифныхСтавокСотрудников</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияСовокупныхТарифныхСтавокСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияСовокупныхТарифныхСтавокСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>58</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование>--&gt; ВидТарифнойСтавки</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидТарифнойСтавки" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование>--&gt; ВидТарифнойСтавкиПоОкончании</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидТарифнойСтавкиПоОкончании" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>41</Код>
						<Наименование>--&gt; ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>47</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование>--&gt; Применение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Применение" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование>--&gt; ПрименениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПрименениеПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>25</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("ДокументОснование, Проведен");
ВходящиеДанные.Проведен				= Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Документ_РассчитатьФОТ);</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком</Приемник>
				<Свойства>
					<Свойство>
						<Код>82</Код>
						<Наименование>--&gt; ОсновнойСотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойСотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>49</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>45</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>37</Код>
						<Наименование>--&gt; ДатаИзменения</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаИзменения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>63</Код>
						<Наименование>--&gt; ДокументОснование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ОтпускПоУходуЗаРебенком"/>
						<КодПравилаКонвертации>ОтпускПоУходуЗаРебенкомТолькоСсылка               </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>39</Код>
						<Наименование>--&gt; ДатаОкончанияПособияДоТрехЛет</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончанияПособияДоТрехЛет" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование>--&gt; ВыплачиватьПособиеДоТрехЛет</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВыплачиватьПособиеДоТрехЛет" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>48</Код>
						<Наименование>--&gt; ПособиеДоТрехЛет</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПособиеДоТрехЛет" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
						<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование>--&gt; ИзменитьНачисления</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>94</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
					</Свойство>
					<Группа>
						<Код>20</Код>
						<Наименование>--&gt; УсловияОплатыОтпускаПоУходуЗаРебенком</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УсловияОплатыОтпускаПоУходуЗаРебенком" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("УсловияОплатыОтпускаПоУходуЗаРебенком");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ДатаНачалаСобытия</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаСобытия" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; СтраховойСлучай</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтраховойСлучай" Вид="Реквизит" Тип="ДокументСсылка.ОтпускПоУходуЗаРебенком"/>
							<КодПравилаКонвертации>ОтпускПоУходуЗаРебенкомТолькоСсылка               </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>44</Код>
						<Наименование>--&gt; НачисленияУтверждены</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУтверждены" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>53</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Отказ = ОбъектКоллекции.ЯвляетсяОтпускомПоУходуЗаРебенком;</ПередВыгрузкой>
						<Свойство>
							<Код>57</Код>
							<Наименование>--&gt; РабочееМесто</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочееМесто" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>58</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование>--&gt; ПлановыеНачисления</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисления" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПлановыеНачисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Используется</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Используется" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>13</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ИспользуетсяПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИспользуетсяПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>11</Код>
							<Наименование>--&gt; РазмерПоОкончании</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>59</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Показатели");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>61</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>73</Код>
						<Наименование>--&gt; ЗначенияСовокупныхТарифныхСтавокСотрудников</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияСовокупныхТарифныхСтавокСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияСовокупныхТарифныхСтавокСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>81</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование>--&gt; ВидТарифнойСтавки</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидТарифнойСтавки" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование>--&gt; ВидТарифнойСтавкиПоОкончании</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидТарифнойСтавкиПоОкончании" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>91</Код>
						<Наименование>--&gt; ПрименениеПлановыхНачислений</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименениеПлановыхНачислений" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПрименениеПлановыхНачислений");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>92</Код>
							<Наименование>--&gt; Применение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Применение" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование>--&gt; РабочееМесто</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочееМесто" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>83</Код>
						<Наименование>--&gt; ПрименениеПлановыхНачислений</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименениеПлановыхНачислений" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПрименениеПлановыхНачислений");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>84</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование>--&gt; Применение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Применение" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>64</Код>
						<Наименование>--&gt; ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>66</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование>--&gt; Применение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Применение" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование>--&gt; ПрименениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПрименениеПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>46</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>43</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>50</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>51</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>52</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>1500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтпускПоУходуЗаРебенком</Код>
				<Наименование>:</Наименование>
				<Порядок>200</Порядок>
				<ПриВыгрузке>ВходящиеДанные = Новый Структура("Проведен");
ВходящиеДанные.Проведен = Истина;</ПриВыгрузке>
				<ПриЗагрузке>Выполнить(Алгоритмы.Документ_ПриЗагрузке);

//НомерРелизаПриемника = 0;
//Выполнить(Алгоритмы.НомерРелизаКонфигурацииПриемника); 

//Если НомерРелизаПриемника &gt;= 23 Тогда
//	МодульКлиентСервер = ОбщегоНазначения.ОбщийМодуль("УчетПособийСоциальногоСтрахованияКлиентСервер");
//	Модуль = ОбщегоНазначения.ОбщийМодуль("УчетПособийСоциальногоСтрахованияРасширенный");
//ИначеЕсли НомерРелизаПриемника = 22 Тогда
//	МодульКлиентСервер = ОбщегоНазначения.ОбщийМодуль("УчетПособийСоциальногоСтрахованияРасширенныйКлиентСервер");
//	Модуль = ОбщегоНазначения.ОбщийМодуль("УчетПособийСоциальногоСтрахованияРасширенный");	
//Иначе
//	МодульКлиентСервер = ОбщегоНазначения.ОбщийМодуль("УчетСреднегоЗаработкаКлиентСервер");
//	Модуль = ОбщегоНазначения.ОбщийМодуль("УчетСреднегоЗаработка");
//КонецЕсли;	

//ПорядокРасчета = ПредопределенноеЗначение("Перечисление.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2010");
//Если Не Объект.РасчетПоПравилам2010Года И Объект.ДатаНачала &gt;= Дата(2011, 1, 1) Тогда
//	ПорядокРасчета = ПредопределенноеЗначение("Перечисление.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2011");
//КонецЕсли;


//Если Не ЗначениеЗаполнено(Объект.ПериодРасчетаСреднегоЗаработкаНачало) Или Не ЗначениеЗаполнено(Объект.ПериодРасчетаСреднегоЗаработкаОкончание) Тогда
//	ПериодРасчетаСреднего = МодульКлиентСервер.ПериодРасчетаСреднегоЗаработкаФСС(Объект.ДатаНачала, ПорядокРасчета);
//	
//	Объект.ПериодРасчетаСреднегоЗаработкаНачало	= ПериодРасчетаСреднего.ДатаНачала;
//	Объект.ПериодРасчетаСреднегоЗаработкаОкончание = ПериодРасчетаСреднего.ДатаОкончания;
//	
//	Объект.ПериодРасчетаСреднегоЗаработкаПервыйГод = Год(ПериодРасчетаСреднего.ДатаНачала);
//	Объект.ПериодРасчетаСреднегоЗаработкаВторойГод = Год(ПериодРасчетаСреднего.ДатаОкончания);
//КонецЕсли;


//ОсновныеСотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Сотрудник), Истина, Объект.Организация, Объект.ДатаНачала);
//Если ОсновныеСотрудники.Количество() &gt; 0 Тогда
//	ОсновнойСотрудникФизЛица = ОсновныеСотрудники[0].Сотрудник;
//	
//	Объект.СреднийЗаработокФСС.Очистить();
//	Объект.ОтработанноеВремяДляСреднегоФСС.Очистить();
//	Объект.СреднийЗаработокДанныеСтрахователей.Очистить();
//	
//	Если НомерРелизаПриемника &gt;= 23 Тогда
//		
//		ДополнительныеПараметры = Модуль.ДополнительныеПараметрыДанныхДляРасчетаСреднегоЗаработкаФСС();
//		ДополнительныеПараметры.НачалоПериода    = Объект.ПериодРасчетаСреднегоЗаработкаНачало;
//		ДополнительныеПараметры.ОкончаниеПериода = Объект.ПериодРасчетаСреднегоЗаработкаОкончание;
//		ДополнительныеПараметры.ПорядокРасчета   = ПорядокРасчета;   
//		ДополнительныеПараметры.ДокументСсылка   = Объект.Ссылка; 
//		ДополнительныеПараметры.УчитыватьКорректировки   = Ложь;
//		
//		ДанныеДляРасчета = Модуль.ДанныеДляРасчетаСреднегоЗаработкаФСССотрудника(ОсновнойСотрудникФизЛица, ДополнительныеПараметры);
//		
//	Иначе	
//	
//		ДанныеДляРасчета = Модуль.ДанныеДляРасчетаСреднегоЗаработкаФСССотрудника(
//			ОсновнойСотрудникФизЛица,
//			Объект.ПериодРасчетаСреднегоЗаработкаНачало,
//			Объект.ПериодРасчетаСреднегоЗаработкаОкончание,
//			ПорядокРасчета,
//			Объект.Ссылка);
//		
//	КонецЕсли;	
//	
//	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеДляРасчета.ДанныеОНачислениях, Объект.СреднийЗаработокФСС);
//	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеДляРасчета.ДанныеОВремени, Объект.ОтработанноеВремяДляСреднегоФСС);
//	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеДляРасчета.ДанныеСтрахователей, Объект.СреднийЗаработокДанныеСтрахователей);
//КонецЕсли;</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
//Выполнить(Алгоритмы.Документ_РассчитатьФОТ);
ОбъектМодифицирован = Истина;</ПослеЗагрузки>
				<Приемник>ДокументСсылка.ОтпускПоУходуЗаРебенком</Приемник>
				<Свойства>
					<Свойство>
						<Код>95</Код>
						<Наименование>--&gt; ОсновнойСотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновнойСотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>57</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>47</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>96</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>37</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>38</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>40</Код>
						<Наименование>--&gt; ДатаОкончанияПособияДоТрехЛет</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончанияПособияДоТрехЛет" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>36</Код>
						<Наименование>--&gt; ВыплачиватьПособиеДоТрехЛет</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВыплачиватьПособиеДоТрехЛет" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>53</Код>
						<Наименование>--&gt; ПособиеДоТрехЛет</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПособиеДоТрехЛет" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
						<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>74</Код>
						<Наименование>--&gt; НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>42</Код>
						<Наименование>--&gt; ИзменитьНачисления</Наименование>
						<Порядок>1400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИзменитьНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>46</Код>
						<Наименование>--&gt; НачисленияУтверждены</Наименование>
						<Порядок>1450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисленияУтверждены" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Группа>
						<Код>20</Код>
						<Наименование>--&gt; УсловияОплатыОтпускаПоУходуЗаРебенком</Наименование>
						<Порядок>1500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УсловияОплатыОтпускаПоУходуЗаРебенком" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("УсловияОплатыОтпускаПоУходуЗаРебенком");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; ДатаНачалаСобытия</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаСобытия" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; СтраховойСлучай</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтраховойСлучай" Вид="Реквизит" Тип="ДокументСсылка.ОтпускПоУходуЗаРебенком"/>
							<КодПравилаКонвертации>ОтпускПоУходуЗаРебенкомТолькоСсылка               </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>63</Код>
						<Наименование>--&gt; Начисления</Наименование>
						<Порядок>1550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Начисления" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Начисления");</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Отказ = ОбъектКоллекции.ЯвляетсяОтпускомПоУходуЗаРебенком;</ПередВыгрузкой>
						<Свойство>
							<Код>67</Код>
							<Наименование>--&gt; РабочееМесто</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РабочееМесто" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>68</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>10</Код>
						<Наименование>--&gt; ПлановыеНачисления</Наименование>
						<Порядок>1600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисления" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПлановыеНачисления");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Используется</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Используется" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>17</Код>
							<Наименование>--&gt; Размер</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ИспользуетсяПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИспользуетсяПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>18</Код>
							<Наименование>--&gt; РазмерПоОкончании</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>69</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>1650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("Показатели");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>71</Код>
							<Наименование>--&gt; ИдентификаторСтрокиВидаРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИдентификаторСтрокиВидаРасчета" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>1700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>86</Код>
						<Наименование>--&gt; ЗначенияСовокупныхТарифныхСтавокСотрудников</Наименование>
						<Порядок>1750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияСовокупныхТарифныхСтавокСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ЗначенияСовокупныхТарифныхСтавокСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>94</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>88</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>92</Код>
							<Наименование>--&gt; ВидТарифнойСтавки</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидТарифнойСтавки" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование>--&gt; ВидТарифнойСтавкиПоОкончании</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидТарифнойСтавкиПоОкончании" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование>--&gt; ЗначениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоОкончании" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>77</Код>
						<Наименование>--&gt; ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников</Наименование>
						<Порядок>1800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>80</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>ПоказателиРасчетаЗарплаты                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование>--&gt; Применение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Применение" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование>--&gt; ДействуетДо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействуетДо" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование>--&gt; ПрименениеПоОкончании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПрименениеПоОкончании" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>48</Код>
						<Наименование>--&gt; Ответственный</Наименование>
						<Порядок>1850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ответственный" Вид="Реквизит" Тип="СправочникСсылка.Пользователи"/>
						<КодПравилаКонвертации>Пользователи                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>45</Код>
						<Наименование>--&gt; Комментарий</Наименование>
						<Порядок>1900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>60</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>1950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>61</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>2000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>62</Код>
						<Наименование>--&gt; Проведен</Наименование>
						<Порядок>2050</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>97</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>2100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтпускПоУходуЗаРебенкомТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>250</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ДокументСсылка.ОтпускПоУходуЗаРебенком</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>УчетРабочегоВремени</Код>
			<Наименование>Учет рабочего времени</Наименование>
			<Порядок>750</Порядок>
			<Правило>
				<Код>ВидыИспользованияРабочегоВремени</Код>
				<Наименование>Перечисление: Виды учета времени</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если ТипЗнч(Источник) = Тип("ПеречислениеСсылка.ВидыУчетаВремени") Тогда
	ВходящиеДанные = Новый Структура("Наименование");
	ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}" + ОбщегоНазначения.ИмяЗначенияПеречисления(Источник);
	
Иначе
	ВходящиеДанные = Новый Структура("Наименование");
	ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}" + Источник;
	
КонецЕсли;

КлючВыгружаемыхДанных	= ВходящиеДанные.Наименование;
ЗапоминатьВыгруженные	= Истина;</ПередВыгрузкой>
				<ПриЗагрузке>НеЗамещатьОбъект = Объект.Предопределенный;</ПриЗагрузке>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ВидыИспользованияРабочегоВремени_ПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Источник>ПеречислениеСсылка.ВидыУчетаВремени</Источник>
				<Приемник>СправочникСсылка.ВидыИспользованияРабочегоВремени</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоВечернимЧасам --&gt; РаботаВечерниеЧасы</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПоВечернимЧасам</Источник>
						<Приемник>РаботаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоДням --&gt; РабочееВремя</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПоДням</Источник>
						<Приемник>РабочееВремя</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоНочнымЧасам --&gt; РаботаНочныеЧасы</Наименование>
						<Порядок>150</Порядок>
						<Источник>ПоНочнымЧасам</Источник>
						<Приемник>РаботаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПоЧасам --&gt; РабочееВремя</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПоЧасам</Источник>
						<Приемник>РабочееВремя</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыИспользованияРабочегоВремениПоКлассификатору</Код>
				<Наименование>Справочник: Классификатор использования рабочего времени</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование, БуквенныйКод, ПолноеНаименование, РабочееВремя, ЦифровойКод, ПометкаУдаления, УважительнаяПричинаДляБольничных");

Если ТипЗнч(Источник) = Тип("СправочникСсылка.КлассификаторИспользованияРабочегоВремени") Тогда
	Если Источник.Предопределенный Тогда
		Имя = Справочники.КлассификаторИспользованияРабочегоВремени.ПолучитьИмяПредопределенного(Источник);
		Если Имя = "Работа" Тогда
			Имя = "Явка";
		КонецЕсли;
		
		ВходящиеДанные.Наименование = "{ИмяПредопределенныхДанных}" + Имя;
	Иначе
		ЗаполнитьЗначенияСвойств(ВходящиеДанные, Источник);
	КонецЕсли;
	
Иначе
	ВходящиеДанные.Наименование = "{ИмяПредопределенныхДанных}" + Источник;
	
КонецЕсли;

КлючВыгружаемыхДанных	= ВходящиеДанные.Наименование;
ЗапоминатьВыгруженные	= Истина;</ПередВыгрузкой>
				<ПриЗагрузке>НеЗамещатьОбъект = Объект.Предопределенный;</ПриЗагрузке>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ВидыИспользованияРабочегоВремениКФ_ПоляПоиска);</ПоследовательностьПолейПоиска>
				<Источник>СправочникСсылка.КлассификаторИспользованияРабочегоВремени</Источник>
				<Приемник>СправочникСсылка.ВидыИспользованияРабочегоВремени</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; БуквенныйКод</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БуквенныйКод" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ПолноеНаименование</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПолноеНаименование" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; РабочееВремя</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РабочееВремя" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ЦифровойКод</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЦифровойКод" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; УважительнаяПричинаДляБольничных</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УважительнаяПричинаДляБольничных" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Болезнь --&gt; Болезнь</Наименование>
						<Порядок>50</Порядок>
						<Источник>Болезнь</Источник>
						<Приемник>Болезнь</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>БолезньБезОплаты --&gt; БолезньБезОплаты</Наименование>
						<Порядок>100</Порядок>
						<Источник>БолезньБезОплаты</Источник>
						<Приемник>БолезньБезОплаты</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ВыходныеДни --&gt; ВыходныеДни</Наименование>
						<Порядок>150</Порядок>
						<Источник>ВыходныеДни</Источник>
						<Приемник>ВыходныеДни</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ГосударственныеОбязанности --&gt; ГосударственныеОбяз</Наименование>
						<Порядок>200</Порядок>
						<Источник>ГосударственныеОбязанности</Источник>
						<Приемник>ГосударственныеОбязанности</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ДополнительныйОтпуск --&gt; ДополнительныйОтпуск</Наименование>
						<Порядок>250</Порядок>
						<Источник>ДополнительныйОтпуск</Источник>
						<Приемник>ДополнительныйОтпуск</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Забастовка --&gt; Забастовка</Наименование>
						<Порядок>300</Порядок>
						<Источник>Забастовка</Источник>
						<Приемник>Забастовка</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Командировка --&gt; Командировка</Наименование>
						<Порядок>350</Порядок>
						<Источник>Командировка</Источник>
						<Приемник>Командировка</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>НеоплачиваемыйОтпускПоЗаконодательству --&gt; Неоплач</Наименование>
						<Порядок>400</Порядок>
						<Источник>НеоплачиваемыйОтпускПоЗаконодательству</Источник>
						<Приемник>НеоплачиваемыйОтпускПоЗаконодательству</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>НеоплачиваемыйОтпускПоРазрешениюРаботодателя --&gt; Н</Наименование>
						<Порядок>450</Порядок>
						<Источник>НеоплачиваемыйОтпускПоРазрешениюРаботодателя</Источник>
						<Приемник>НеоплачиваемыйОтпускПоРазрешениюРаботодателя</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>НеявкиПоНевыясненнымПричинам --&gt; НеявкиПоНевыяснен</Наименование>
						<Порядок>500</Порядок>
						<Источник>НеявкиПоНевыясненнымПричинам</Источник>
						<Приемник>НеявкиПоНевыясненнымПричинам</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ОсновнойОтпуск --&gt; ОсновнойОтпуск</Наименование>
						<Порядок>550</Порядок>
						<Источник>ОсновнойОтпуск</Источник>
						<Приемник>ОсновнойОтпуск</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ОтпускНаОбучение --&gt; ОтпускНаОбучение</Наименование>
						<Порядок>600</Порядок>
						<Источник>ОтпускНаОбучение</Источник>
						<Приемник>ОтпускНаОбучение</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ОтпускНаОбучениеНеоплачиваемый --&gt; ОтпускНаОбучени</Наименование>
						<Порядок>650</Порядок>
						<Источник>ОтпускНаОбучениеНеоплачиваемый</Источник>
						<Приемник>ОтпускНаОбучениеНеоплачиваемый</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ОтпускПоБеременностиИРодам --&gt; ОтпускПоБеременност</Наименование>
						<Порядок>700</Порядок>
						<Источник>ОтпускПоБеременностиИРодам</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ОтпускПоУходуЗаРебенком --&gt; ОтпускПоУходуЗаРебенко</Наименование>
						<Порядок>750</Порядок>
						<Источник>ОтпускПоУходуЗаРебенком</Источник>
						<Приемник>ОтпускПоУходуЗаРебенком</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>Простой --&gt; Простой</Наименование>
						<Порядок>800</Порядок>
						<Источник>Простой</Источник>
						<Приемник>Простой</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>РаботаВечерниеЧасы --&gt; РаботаВечерниеЧасы</Наименование>
						<Порядок>850</Порядок>
						<Источник>РаботаВечерниеЧасы</Источник>
						<Приемник>РаботаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>Сверхурочные --&gt; Сверхурочные</Наименование>
						<Порядок>900</Порядок>
						<Источник>Сверхурочные</Источник>
						<Приемник>Сверхурочные</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ДополнительныйОтпускБезОплаты --&gt; НеоплачиваемыйДо</Наименование>
						<Порядок>950</Порядок>
						<Источник>ДополнительныйОтпускБезОплаты</Источник>
						<Приемник>НеоплачиваемыйДополнительныйОтпуск</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>Ночные --&gt; РаботаНочныеЧасы</Наименование>
						<Порядок>1000</Порядок>
						<Источник>Ночные</Источник>
						<Приемник>РаботаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>РаботаНеполныйРабочийДень --&gt; РаботаВРежимеНеполно</Наименование>
						<Порядок>1050</Порядок>
						<Источник>РаботаНеполныйРабочийДень</Источник>
						<Приемник>РаботаВРежимеНеполногоВремени</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ПереводНаНеполныйДень --&gt; СокращенноеРабочееВремя</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ПереводНаНеполныйДень</Источник>
						<Приемник>СокращенноеРабочееВремя</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ГрафикиРаботыПоВидамВремени</Код>
				<Наименование>Регистр сведений: Графики работы по видам времени</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Регистр_ПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ГрафикиРаботыПоВидамВремени</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ГрафикРаботы</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикРаботы" Вид="Измерение"/>
						<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Месяц</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Месяц" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидУчетаВремени</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидУчетаВремени" Вид="Измерение" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
						<КодПравилаКонвертации>ВидыИспользованияРабочегоВремени                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ВремяВЧасах</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВремяВЧасах" Вид="Измерение" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ДополнительноеЗначение</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДополнительноеЗначение" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; ДополнительноеЗначениеНорма</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДополнительноеЗначениеНорма" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ОсновноеЗначение</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновноеЗначение" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ОсновноеЗначениеНорма</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновноеЗначениеНорма" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГрафикиРаботыСотрудников</Код>
				<Наименование>Справочник: Графики работы</Наименование>
				<Порядок>200</Порядок>
				<ПриЗагрузке>Если Объект &lt;&gt; Неопределено Тогда
	НаборЗаписей = РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.ГрафикРаботы.Установить(Объект.Ссылка);
	НаборЗаписей.Записать();
КонецЕсли;</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<Приемник>СправочникСсылка.ГрафикиРаботыСотрудников</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ПроизводственныйКалендарь</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроизводственныйКалендарь" Вид="Реквизит" Тип="СправочникСсылка.ПроизводственныеКалендари"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; СуммированныйУчетРабочегоВремени</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммированныйУчетРабочегоВремени" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ДатаОтсчета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОтсчета" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ДлительностьРабочейНедели</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДлительностьРабочейНедели" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; НеполноеРабочееВремя</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеполноеРабочееВремя" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; СокращеннаяРабочаяНеделя</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СокращеннаяРабочаяНеделя" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; НеполныйРабочийДень</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеполныйРабочийДень" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ГрафикПолногоРабочегоВремени</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикПолногоРабочегоВремени" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботыСотрудников"/>
						<КодПравилаКонвертации>ГрафикиРаботыСотрудниковТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; УчитыватьПраздники</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьПраздники" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; СпособЗаполнения</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособЗаполнения" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыЗаполненияГрафикаРаботы"/>
					</Свойство>
					<Группа>
						<Код>15</Код>
						<Наименование>--&gt; ШаблонЗаполнения</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ШаблонЗаполнения" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ДеньВключенВГрафик</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДеньВключенВГрафик" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование>--&gt; ДанныеОРабочихЧасах</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеОРабочихЧасах" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ВидВремени</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидВремени" Вид="Реквизит" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
							<КодПравилаКонвертации>ВидыИспользованияРабочегоВремениПоКлассификатору  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; НомерДняЦикла</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДняЦикла" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Часов</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Часов" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование>--&gt; ВидыВремени</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидыВремени" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидВремени</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидВремени" Вид="Реквизит" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
							<КодПравилаКонвертации>ВидыИспользованияРабочегоВремениПоКлассификатору  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ПометкаУдаления</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>21</Код>
						<Наименование>--&gt; УчитыватьПредпраздничныеДни</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитыватьПредпраздничныеДни" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГрафикиРаботыСотрудниковТолькоСсылка</Код>
				<Наименование>Справочник: Графики работы</Наименование>
				<Порядок>250</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.ГрафикиРаботы</Источник>
				<Приемник>СправочникСсылка.ГрафикиРаботыСотрудников</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РабочееВремяСотрудников_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>350</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ДанныеТабельногоУчетаРабочегоВремениСотрудников");
						СписокРегистров.Добавить("ДанныеОперативногоУчетаРабочегоВремениСотрудников");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ДанныеТабельногоУчетаРабочегоВремениСотрудников</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеТабельногоУчетаРабочегоВремениСотрудников" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеТабельногоУчетаРабочегоВремениСотрудников");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ВидУчетаВремени</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Измерение" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
							<КодПравилаКонвертации>ВидыИспользованияРабочегоВремениПоКлассификатору  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Дни</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Дни" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Часы</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Часы" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыЗаполненияГрафикаРаботы</Код>
				<Наименование>Перечисление: Виды рабочих графиков</Наименование>
				<Порядок>400</Порядок>
				<Источник>ПеречислениеСсылка.ВидыРабочихГрафиков</Источник>
				<Приемник>ПеречислениеСсылка.СпособыЗаполненияГрафикаРаботы</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>КалендарныеДни --&gt; ПоЦикламПроизвольнойДлины</Наименование>
						<Порядок>50</Порядок>
						<Источник>КалендарныеДни</Источник>
						<Приемник>ПоЦикламПроизвольнойДлины</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Пятидневка --&gt; ПоНеделям</Наименование>
						<Порядок>100</Порядок>
						<Источник>Пятидневка</Источник>
						<Приемник>ПоНеделям</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Сменный --&gt; ПоЦикламПроизвольнойДлины</Наименование>
						<Порядок>150</Порядок>
						<Источник>Сменный</Источник>
						<Приемник>ПоЦикламПроизвольнойДлины</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Шестидневка --&gt; ПоНеделям</Наименование>
						<Порядок>200</Порядок>
						<Источник>Шестидневка</Источник>
						<Приемник>ПоНеделям</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>УчетСреднегоЗаработка</Код>
			<Наименование>УчетСреднегоЗаработка</Наименование>
			<Порядок>800</Порядок>
			<Правило>
				<Код>ДанныеДляРасчетаСреднегоФСС_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
//СписокРегистров.Добавить("ДанныеОВремениДляРасчетаСреднегоФСС");
СписокРегистров.Добавить("ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС");
//СписокРегистров.Добавить("ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>13</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа Отключить="true">
						<Код>3</Код>
						<Наименование>--&gt; ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Страхователь</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Страхователь" Вид="Измерение"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; НачалоПериода</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачалоПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ОкончаниеПериода</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОкончаниеПериода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; ДнейБолезниУходаЗаДетьми</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДнейБолезниУходаЗаДетьми" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>121</Код>
							<Наименование>--&gt; Месяц</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Месяц" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>122</Код>
							<Наименование>--&gt; ДнейСтажа</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДнейСтажа" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>15</Код>
						<Наименование>--&gt; ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ПорядокРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокРасчета" Вид="Измерение" Тип="ПеречислениеСсылка.ПорядокРасчетаСреднегоЗаработкаФСС"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>123</Код>
							<Наименование>--&gt; НалоговыйПериод</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НалоговыйПериод" Вид="Измерение" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>22</Код>
						<Наименование>--&gt; ДанныеОВремениДляРасчетаСреднегоФСС</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеОВремениДляРасчетаСреднегоФСС" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеОВремениДляРасчетаСреднегоФСС");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень1</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень1" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень10</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень10" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень11</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень11" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень12</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень12" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень13</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень13" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень14</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень14" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень15</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень15" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень16</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень16" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень17</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень17" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень18</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень18" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень19</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень19" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень2</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень2" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень20</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень20" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень21</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень21" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень22</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень22" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень23</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень23" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень24</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень24" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень25</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень25" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень26</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень26" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень27</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень27" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень28</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень28" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень29</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень29" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень3</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень3" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень30</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень30" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень31</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень31" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень4</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень4" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень5</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень5" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень6</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень6" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень7</Наименование>
							<Порядок>1450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень7" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень8</Наименование>
							<Порядок>1500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень8" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование>--&gt; БолезньУходЗаДетьмиДень9</Наименование>
							<Порядок>1550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БолезньУходЗаДетьмиДень9" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование>--&gt; ВидБолезниУходаЗаДетьми</Наименование>
							<Порядок>1600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидБолезниУходаЗаДетьми" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_ОсновныеТолькоСсылка                   </КодПравилаКонвертации>
							<ПередВыгрузкой>Если Не ЗначениеЗаполнено(ОбъектКоллекции.ВидБолезниУходаЗаДетьми) Тогда
	Отказ = Истина;
Иначе
	Если Параметры.ПереноситьНачисленияПредыдущейПрограммы = 1 Тогда
		ИмяПКО = "Начисления_ОсновныеТолькоСсылка"; 	
	Иначе
		
		ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ОписаниеНачисленийСЗ,ТолькоПлановыеНачисления");
		ПараметрыДляЗаполнения.Параметры = Параметры;
		ПараметрыДляЗаполнения.ТолькоПлановыеНачисления = Ложь;
		ПараметрыДляЗаполнения.ВР = ОбъектКоллекции.ВидБолезниУходаЗаДетьми;
		
		ОписаниеВР = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗаполнитьОписаниеВР_Начисления", Параметры.Алгоритмы, ПараметрыДляЗаполнения);
		Если ЗначениеЗаполнено(ОписаниеВР.Наименование) Тогда
			Значение = ОписаниеВР;
			ИмяПКО = "Начисления_УП";
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>1650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>1700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ПереносДанныхТолькоСсылка                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование>--&gt; Месяц</Наименование>
							<Порядок>1750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Месяц" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование>--&gt; НеотработанДень1</Наименование>
							<Порядок>1800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень1" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование>--&gt; НеотработанДень10</Наименование>
							<Порядок>1850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень10" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование>--&gt; НеотработанДень11</Наименование>
							<Порядок>1900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень11" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование>--&gt; НеотработанДень12</Наименование>
							<Порядок>1950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень12" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование>--&gt; НеотработанДень13</Наименование>
							<Порядок>2000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень13" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование>--&gt; НеотработанДень14</Наименование>
							<Порядок>2050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень14" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование>--&gt; НеотработанДень15</Наименование>
							<Порядок>2100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень15" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование>--&gt; НеотработанДень16</Наименование>
							<Порядок>2150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень16" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование>--&gt; НеотработанДень17</Наименование>
							<Порядок>2200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень17" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование>--&gt; НеотработанДень18</Наименование>
							<Порядок>2250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень18" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование>--&gt; НеотработанДень19</Наименование>
							<Порядок>2300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень19" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование>--&gt; НеотработанДень2</Наименование>
							<Порядок>2350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень2" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование>--&gt; НеотработанДень20</Наименование>
							<Порядок>2400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень20" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование>--&gt; НеотработанДень21</Наименование>
							<Порядок>2450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень21" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование>--&gt; НеотработанДень22</Наименование>
							<Порядок>2500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень22" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование>--&gt; НеотработанДень23</Наименование>
							<Порядок>2550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень23" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование>--&gt; НеотработанДень24</Наименование>
							<Порядок>2600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень24" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование>--&gt; НеотработанДень25</Наименование>
							<Порядок>2650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень25" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование>--&gt; НеотработанДень26</Наименование>
							<Порядок>2700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень26" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование>--&gt; НеотработанДень27</Наименование>
							<Порядок>2750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень27" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование>--&gt; НеотработанДень28</Наименование>
							<Порядок>2800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень28" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование>--&gt; НеотработанДень29</Наименование>
							<Порядок>2850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень29" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование>--&gt; НеотработанДень3</Наименование>
							<Порядок>2900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень3" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование>--&gt; НеотработанДень30</Наименование>
							<Порядок>2950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень30" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование>--&gt; НеотработанДень31</Наименование>
							<Порядок>3000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень31" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование>--&gt; НеотработанДень4</Наименование>
							<Порядок>3050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень4" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование>--&gt; НеотработанДень5</Наименование>
							<Порядок>3100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень5" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование>--&gt; НеотработанДень6</Наименование>
							<Порядок>3150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень6" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование>--&gt; НеотработанДень7</Наименование>
							<Порядок>3200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень7" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование>--&gt; НеотработанДень8</Наименование>
							<Порядок>3250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень8" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>88</Код>
							<Наименование>--&gt; НеотработанДень9</Наименование>
							<Порядок>3300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НеотработанДень9" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование>--&gt; ОтработанДень1</Наименование>
							<Порядок>3350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень1" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование>--&gt; ОтработанДень10</Наименование>
							<Порядок>3400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень10" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование>--&gt; ОтработанДень11</Наименование>
							<Порядок>3450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень11" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>92</Код>
							<Наименование>--&gt; ОтработанДень12</Наименование>
							<Порядок>3500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень12" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>93</Код>
							<Наименование>--&gt; ОтработанДень13</Наименование>
							<Порядок>3550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень13" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>94</Код>
							<Наименование>--&gt; ОтработанДень14</Наименование>
							<Порядок>3600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень14" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>95</Код>
							<Наименование>--&gt; ОтработанДень15</Наименование>
							<Порядок>3650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень15" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование>--&gt; ОтработанДень16</Наименование>
							<Порядок>3700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень16" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>97</Код>
							<Наименование>--&gt; ОтработанДень17</Наименование>
							<Порядок>3750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень17" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование>--&gt; ОтработанДень18</Наименование>
							<Порядок>3800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень18" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>99</Код>
							<Наименование>--&gt; ОтработанДень19</Наименование>
							<Порядок>3850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень19" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>100</Код>
							<Наименование>--&gt; ОтработанДень2</Наименование>
							<Порядок>3900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень2" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование>--&gt; ОтработанДень20</Наименование>
							<Порядок>3950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень20" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование>--&gt; ОтработанДень21</Наименование>
							<Порядок>4000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень21" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>103</Код>
							<Наименование>--&gt; ОтработанДень22</Наименование>
							<Порядок>4050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень22" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>104</Код>
							<Наименование>--&gt; ОтработанДень23</Наименование>
							<Порядок>4100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень23" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>105</Код>
							<Наименование>--&gt; ОтработанДень24</Наименование>
							<Порядок>4150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень24" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>106</Код>
							<Наименование>--&gt; ОтработанДень25</Наименование>
							<Порядок>4200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень25" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование>--&gt; ОтработанДень26</Наименование>
							<Порядок>4250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень26" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>108</Код>
							<Наименование>--&gt; ОтработанДень27</Наименование>
							<Порядок>4300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень27" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>109</Код>
							<Наименование>--&gt; ОтработанДень28</Наименование>
							<Порядок>4350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень28" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование>--&gt; ОтработанДень29</Наименование>
							<Порядок>4400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень29" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>111</Код>
							<Наименование>--&gt; ОтработанДень3</Наименование>
							<Порядок>4450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень3" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>112</Код>
							<Наименование>--&gt; ОтработанДень30</Наименование>
							<Порядок>4500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень30" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>113</Код>
							<Наименование>--&gt; ОтработанДень31</Наименование>
							<Порядок>4550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень31" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>114</Код>
							<Наименование>--&gt; ОтработанДень4</Наименование>
							<Порядок>4600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень4" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>115</Код>
							<Наименование>--&gt; ОтработанДень5</Наименование>
							<Порядок>4650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень5" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>116</Код>
							<Наименование>--&gt; ОтработанДень6</Наименование>
							<Порядок>4700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень6" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>117</Код>
							<Наименование>--&gt; ОтработанДень7</Наименование>
							<Порядок>4750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень7" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>118</Код>
							<Наименование>--&gt; ОтработанДень8</Наименование>
							<Порядок>4800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень8" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>119</Код>
							<Наименование>--&gt; ОтработанДень9</Наименование>
							<Порядок>4850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработанДень9" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>120</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>4900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>124</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>4950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КоэффициентИндексацииЗаработка_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>700</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("КоэффициентИндексацииЗаработка");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; КоэффициентИндексацииЗаработка</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоэффициентИндексацииЗаработка" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("КоэффициентИндексацииЗаработка");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; Коэффициент</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДанныеДляРасчетаСреднегоОбщий_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>750</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ДанныеОВремениДляРасчетаСреднегоОбщий");
СписокРегистров.Добавить("ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>38</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>39</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>40</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование>--&gt; ДанныеОВремениДляРасчетаСреднегоОбщий</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеОВремениДляРасчетаСреднегоОбщий" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеОВремениДляРасчетаСреднегоОбщий");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>2</Код>
							<Наименование>--&gt; ПорядокРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокРасчета" Вид="Измерение" Тип="ПеречислениеСсылка.ПорядокРасчетаСреднегоЗаработкаОбщий"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; ОтработаноДней</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; ОтработаноДнейКалендарных</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДнейКалендарных" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>6</Код>
							<Наименование>--&gt; ОтработаноДнейПятидневка</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДнейПятидневка" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>7</Код>
							<Наименование>--&gt; ОтработаноДнейШестидневка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДнейШестидневка" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; ОтработаноЧасов</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>9</Код>
							<Наименование>--&gt; ОтработаноЧасовПятидневка</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасовПятидневка" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>13</Код>
						<Наименование>--&gt; ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Год</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Год" Вид="Измерение" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ДатаНачалаБазовогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаБазовогоПериода" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Индексируется</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Индексируется" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; КоличествоМесяцев</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоМесяцев" Вид="Измерение" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ПорядокРасчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокРасчета" Вид="Измерение" Тип="ПеречислениеСсылка.ПорядокРасчетаСреднегоЗаработкаОбщий"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; СоставнаяЧасть</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СоставнаяЧасть" Вид="Измерение" Тип="ПеречислениеСсылка.УчетНачисленийВСреднемЗаработкеОбщий"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОВремениДляРасчетаСреднегоФCC</Код>
				<Наименование>: </Наименование>
				<Порядок>800</Порядок>
				<ПослеЗагрузки>Набор = РегистрыСведений.СведенияОВремениДляРасчетаСреднегоФCC.СоздатьНаборЗаписей();
Набор.Отбор.ГоловнаяОрганизация.Установить(НаборЗаписей[0].ГоловнаяОрганизация);
Набор.Отбор.ФизическоеЛицо.Установить(НаборЗаписей[0].ФизическоеЛицо);
Набор.Отбор.Сотрудник.Установить(НаборЗаписей[0].Сотрудник);
Набор.Отбор.Месяц.Установить(НаборЗаписей[0].Месяц);
Набор.Прочитать();
Если Набор.Количество() &gt; 0 Тогда
	Набор[0].ОтработаноДнейКалендарных = НаборЗаписей[0].ОтработаноДнейКалендарных;
	Набор[0].ДнейБолезниУходаЗаДетьми = НаборЗаписей[0].ДнейБолезниУходаЗаДетьми;
	Набор[0].УчитываетсяДнейБолезниУходаЗаДетьми = НаборЗаписей[0].УчитываетсяДнейБолезниУходаЗаДетьми;
	Набор.Записать();
	Отказ = Истина;
КонецЕсли;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СведенияОВремениДляРасчетаСреднегоФCC</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ФизическоеЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Сотрудник</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
						<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Месяц</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Месяц" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ОтработаноДнейКалендарных</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтработаноДнейКалендарных" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ДнейБолезниУходаЗаДетьми</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДнейБолезниУходаЗаДетьми" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; УчитываетсяДнейБолезниУходаЗаДетьми</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчитываетсяДнейБолезниУходаЗаДетьми" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>УчетСтраховыхВзносов</Код>
			<Наименование>Учет страховых взносов</Наименование>
			<Порядок>850</Порядок>
			<Правило>
				<Код>ИсчисленныеСтраховыеВзносы_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>300</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("ИсчисленныеСтраховыеВзносы");
СписокРегистров.Добавить("СтраховыеВзносыПоФизическимЛицам");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ИсчисленныеСтраховыеВзносы</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИсчисленныеСтраховыеВзносы" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("ИсчисленныеСтраховыеВзносы");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ДатаПолученияДохода</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПолученияДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ВидЕСВ</Наименование>
							<Порядок>2050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕСВ" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыЕСВ"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; КатегорияЕСВ</Наименование>
							<Порядок>2100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КатегорияЕСВ" Вид="Измерение" Тип="СправочникСсылка.КатегорииЗастрахованныхЛицЕСВ"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование>--&gt; НалоговыйПериод</Наименование>
							<Порядок>2150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НалоговыйПериод" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование>--&gt; СпособРасчета</Наименование>
							<Порядок>2200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособРасчета" Вид="Измерение" Тип="ПеречислениеСсылка.СпособыРасчетаВзносов"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование>--&gt; СтатьяНалоговойДекларации</Наименование>
							<Порядок>2250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтатьяНалоговойДекларации" Вид="Измерение" Тип="СправочникСсылка.СтатьиНалоговыхДеклараций"/>
							<КодПравилаКонвертации>СтатьиНалоговыхДеклараций                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование>--&gt; ТипНачисления</Наименование>
							<Порядок>2300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТипНачисления" Вид="Измерение" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование>--&gt; База</Наименование>
							<Порядок>2350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="База" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование>--&gt; БазаВзноса</Наименование>
							<Порядок>2400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазаВзноса" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование>--&gt; БазаДоначисление</Наименование>
							<Порядок>2450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазаДоначисление" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование>--&gt; БазаОтпускные</Наименование>
							<Порядок>2500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазаОтпускные" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование>--&gt; РезультатДоначисление</Наименование>
							<Порядок>2550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РезультатДоначисление" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>2600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетыСФондамиПоСтраховымВзносам_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>400</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("РасчетыСФондамиПоСтраховымВзносам");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; РасчетыСФондамиПоСтраховымВзносам</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыСФондамиПоСтраховымВзносам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("РасчетыСФондамиПоСтраховымВзносам");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>11</Код>
							<Наименование>--&gt; ЭтоДоначислениеПоАктуПроверки</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоДоначислениеПоАктуПроверки" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ВидДвижения</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; Налог</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Измерение" Тип="СправочникСсылка.Налоги"/>
							<КодПравилаКонвертации>Налоги                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>17</Код>
							<Наименование>--&gt; Ставка</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ставка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>18</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОДоходахСтраховыеВзносы_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>450</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("СведенияОДоходахСтраховыеВзносы");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; СведенияОДоходахСтраховыеВзносы</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СведенияОДоходахСтраховыеВзносы" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("СведенияОДоходахСтраховыеВзносы");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>11</Код>
							<Наименование>--&gt; ФизическоеЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГоловнаяОрганизация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Сумма</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Начисление</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Начисление" Вид="Реквизит"/>
							<ПередВыгрузкой>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	РеквизитОбъекта = ОбъектКоллекции.Начисление;
	Выполнить(Алгоритмы.НачислениеУдержание_ВидРасчета_ПКО);
Иначе
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ДатаПолученияДохода</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПолученияДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>--&gt; ПоАктуПроверки</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПоАктуПроверки" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>--&gt; ВидЕСВ</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕСВ" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыЕСВ"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>--&gt; НалоговыйПериод</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НалоговыйПериод" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ЭтоОтпускные</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЭтоОтпускные" Вид="Измерение" Тип="Булево"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>900</Порядок>
			<Правило>
				<Код>ВидыДоговоровССотрудниками</Код>
				<Наименование>Перечисление: Виды договоров с физ. лицами</Наименование>
				<Порядок>100</Порядок>
				<Источник>ПеречислениеСсылка.ВидыДоговоровСФизЛицами</Источник>
				<Приемник>ПеречислениеСсылка.ВидыДоговоровССотрудниками</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ТрудовойДоговор --&gt; ТрудовойДоговор</Наименование>
						<Порядок>50</Порядок>
						<Источник>ТрудовойДоговор</Источник>
						<Приемник>ТрудовойДоговор</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Авторский --&gt;</Наименование>
						<Порядок>200</Порядок>
						<Источник>Авторский</Источник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Подряда --&gt;</Наименование>
						<Порядок>350</Порядок>
						<Источник>Подряда</Источник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДействияСНачислениямиИУдержаниями</Код>
				<Наименование>Перечисление: Виды действия с начислением</Наименование>
				<Порядок>250</Порядок>
				<Источник>ПеречислениеСсылка.ВидыДействияСНачислением</Источник>
				<Приемник>ПеречислениеСсылка.ДействияСНачислениямиИУдержаниями</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Изменить --&gt; Утвердить</Наименование>
						<Порядок>50</Порядок>
						<Источник>Изменить</Источник>
						<Приемник>Утвердить</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Начать --&gt; Утвердить</Наименование>
						<Порядок>100</Порядок>
						<Источник>Начать</Источник>
						<Приемник>Утвердить</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НеИзменять --&gt; Утвердить</Наименование>
						<Порядок>150</Порядок>
						<Источник>НеИзменять</Источник>
						<Приемник>Утвердить</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Прекратить --&gt; Отменить</Наименование>
						<Порядок>200</Порядок>
						<Источник>Прекратить</Источник>
						<Приемник>Отменить</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыРасчетаНачислений</Код>
				<Наименование>Перечисление: Способы расчета оплаты труда</Наименование>
				<Порядок>300</Порядок>
				<Источник>ПеречислениеСсылка.СпособыРасчетаОплатыТруда</Источник>
				<Приемник>ПеречислениеСсылка.СпособыРасчетаНачислений</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоплатаДоМЗП --&gt; ДоплатаДоМЗП</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДоплатаДоМЗП</Источник>
						<Приемник>ДоплатаДоМЗП</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ИндексацияЗарплаты --&gt; Индексация</Наименование>
						<Порядок>100</Порядок>
						<Источник>ИндексацияЗарплаты</Источник>
						<Приемник>Индексация</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>Планы видов расчета</Код>
			<Наименование>Планы видов расчета</Наименование>
			<Порядок>950</Порядок>
			<Правило>
				<Код>Начисления_УП</Код>
				<Наименование>:</Наименование>
				<Порядок>3050</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("ДополнительныйОтпускПослеНесчастныхСлучаев");
ВходящиеДанные.ДополнительныйОтпускПослеНесчастныхСлучаев = (Источник.ВидПособияСоциальногоСтрахования = "ДополнительныйОтпускПослеНесчастныхСлучаев");</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.Начисление_УП_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>// не удалять, обеспечение передачи ИмяПКО в правилах, для правильного алгоритма поиска
// из-за наличия в правилах нескольких ПКО для ПланВидовРасчетаСсылка.Начисления

Если ПараметрыОбъекта["ДополнительныйОтпускПослеНесчастныхСлучаев"] Тогда
	СтрокаИменСвойствПоиска	= "ВидПособияСоциальногоСтрахования";
Иначе
	СтрокаИменСвойствПоиска	= "Наименование";
КонецЕсли;</ПоследовательностьПолейПоиска>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>22</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидВремени</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРабочегоВремениСотрудников"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ВидПособияСоциальногоСтрахования</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПособияСоциальногоСтрахования" Вид="Реквизит" Тип="ПеречислениеСсылка.ПереченьПособийСоциальногоСтрахования"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; КатегорияНачисленияИлиНеоплаченногоВремени</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияНачисленияИлиНеоплаченногоВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ВидыДоходовНДФЛ"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; КраткоеНаименование</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КраткоеНаименование" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; НачисляетсяПриРасчетеПервойПоловиныМесяца</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачисляетсяПриРасчетеПервойПоловиныМесяца" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ОбозначениеВТабелеУчетаРабочегоВремени</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбозначениеВТабелеУчетаРабочегоВремени" Вид="Реквизит" Тип="СправочникСсылка.ВидыИспользованияРабочегоВремени"/>
						<КодПравилаКонвертации>ВидыИспользованияРабочегоВремениПоКлассификатору  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ПериодРасчетаБазовыхНачислений</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРасчетаБазовыхНачислений" Вид="Реквизит" Тип="ПеречислениеСсылка.ПериодыРасчетаБазовыхНачислений"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; Рассчитывается</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Рассчитывается" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; СпособВыполненияНачисления</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВыполненияНачисления" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыполненияНачислений"/>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>--&gt; СпособОтраженияЗарплатыВБухучете</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияЗарплатыВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"/>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование>--&gt; СтатьяРасходов</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтатьяРасходов" Вид="Реквизит" Тип="СправочникСсылка.СтатьиРасходовЗарплата"/>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; СтатьяФинансирования</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтатьяФинансирования" Вид="Реквизит" Тип="СправочникСсылка.СтатьиФинансированияЗарплата"/>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>1050</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>1100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>23</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>1150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>24</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>25</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>1200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; ЗапрашиватьПриВводе</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриВводе" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>28</Код>
						<Наименование>--&gt; СреднийЗаработокОбщий</Наименование>
						<Порядок>1250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СреднийЗаработокОбщий" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Отказ = Источник.СреднийЗаработокОбщий.Количество() = 0;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="ПеречислениеСсылка.УчетНачисленийВСреднемЗаработкеОбщий"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>--&gt; Индексируется</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Индексируется" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; ПорядокРасчета</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокРасчетаСреднегоЗаработкаОбщий"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>32</Код>
						<Наименование>--&gt; Описание</Наименование>
						<Порядок>1300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование>--&gt; ВидДокументаНачисления</Наименование>
						<Порядок>1350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДокументаНачисления" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДокументовНачисления"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>34</Код>
						<Наименование>--&gt; ДополнительныйОтпускПослеНесчастныхСлучаев</Наименование>
						<Порядок>1400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ДополнительныйОтпускПослеНесчастныхСлучаев</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Начисления_УП_ТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>3100</Порядок>
				<ПередВыгрузкой>Если ТипЗнч(ВходящиеДанные) &lt;&gt; Тип("Структура") Тогда
	ВходящиеДанные = Новый Структура("НеСоздаватьНовый", Ложь);
ИначеЕсли Не ВходящиеДанные.Свойство("НеСоздаватьНовый") Тогда
	ВходящиеДанные.Вставить("НеСоздаватьНовый", Ложь);
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>НеСоздаватьНовый = Неопределено;
Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	НеСоздаватьНовый = ПараметрыОбъекта["НеСоздаватьНовый"];
КонецЕсли;
Если НеСоздаватьНовый &lt;&gt; Неопределено Тогда
	Отказ = НеСоздаватьНовый И Не ОбъектНайден;
КонецЕсли;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>// не удалять, обеспечение передачи ИмяПКО в правилах, для правильного алгоритма поиска
// из-за наличия в правилах нескольких ПКО для ПланВидовРасчетаСсылка.Начисления
А=0;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Начисления_УП_ТолькоСсылка_ПоСпособу</Код>
				<Наименование>:</Наименование>
				<Порядок>3100</Порядок>
				<ПередВыгрузкой>Если ТипЗнч(ВходящиеДанные) &lt;&gt; Тип("Структура") Тогда
	ВходящиеДанные = Новый Структура("НеСоздаватьНовый", Ложь);
ИначеЕсли Не ВходящиеДанные.Свойство("НеСоздаватьНовый") Тогда
	ВходящиеДанные.Вставить("НеСоздаватьНовый", Ложь);
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>НеСоздаватьНовый = Неопределено;
Если ПараметрыОбъекта &lt;&gt; Неопределено Тогда
	НеСоздаватьНовый = ПараметрыОбъекта["НеСоздаватьНовый"];
КонецЕсли;
Если НеСоздаватьНовый &lt;&gt; Неопределено Тогда
	Отказ = НеСоздаватьНовый И Не ОбъектНайден;
КонецЕсли;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>// не удалять, обеспечение передачи ИмяПКО в правилах, для правильного алгоритма поиска
// из-за наличия в правилах нескольких ПКО для ПланВидовРасчетаСсылка.Начисления
А=0;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>ПланВидовРасчетаСсылка.Начисления</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; СпособРасчета</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаНачислений"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Удержания_УП</Код>
				<Наименование>:</Наименование>
				<Порядок>3150</Порядок>
				<ПослеЗагрузки>БР = Объект.БазовыеВидыРасчета.Выгрузить();
СтрокиКУдалению = Новый Массив;
Для каждого СтрокаТЗ Из БР Цикл
	Если СтрокаТЗ.ВидРасчета.ПолучитьОбъект() = Неопределено Тогда
		СтрокиКУдалению.Добавить(СтрокаТЗ);
	КонецЕсли;
КонецЦикла;
Для каждого СтрокаТЗ Из СтрокиКУдалению Цикл
	БР.Удалить(СтрокаТЗ);
КонецЦикла;
Объект.БазовыеВидыРасчета.Загрузить(БР);
Выполнить(Алгоритмы.Объект_ПослеЗагрузки);
Выполнить(Алгоритмы.Удержание_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>// не удалять, обеспечение передачи ИмяПКО в правилах, для правильного алгоритма поиска
// из-за наличия в правилах нескольких ПКО для ПланВидовРасчетаСсылка.Удержания
А=0;</ПоследовательностьПолейПоиска>
				<Приемник>ПланВидовРасчетаСсылка.Удержания</Приемник>
				<Свойства>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидОтпуска</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыОтпусков"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; КатегорияУдержания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииУдержаний"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КоличествоМесяцевРасчетаСреднегоЗаработка</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоМесяцевРасчетаСреднегоЗаработка" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; КраткоеНаименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КраткоеНаименование" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Описание</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; Рассчитывается</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Рассчитывается" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; СпособВыполненияУдержания</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВыполненияУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыполненияУдержаний"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>12</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.Начисления"/>
							<КодПравилаКонвертации>Начисления_УП_ТолькоСсылка                        </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = Новый Структура("НеСоздаватьНовый", Истина);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>14</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ЗапрашиватьПриВводе</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриВводе" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Удержания_УП_ТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>3200</Порядок>
				<ПоследовательностьПолейПоиска>// не удалять, обеспечение передачи ИмяПКО в правилах, для правильного алгоритма поиска
// из-за наличия в правилах нескольких ПКО для ПланВидовРасчетаСсылка.Удержания
А=0;</ПоследовательностьПолейПоиска>
				<Приемник>ПланВидовРасчетаСсылка.Удержания</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>1000</Порядок>
			<Правило>
				<Код>Показатели_УП</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПриЗагрузке>НеЗамещатьОбъект = Объект.Предопределенный;</ПриЗагрузке>
				<ПослеЗагрузки>Выполнить(Алгоритмы.Объект_ПослеЗагрузки);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.Показатели_ПоляПоиска);</ПоследовательностьПолейПоиска>
				<Приемник>СправочникСсылка.ПоказателиРасчетаЗарплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Идентификатор</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидСтажа</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтажа" Вид="Реквизит" Тип="СправочникСсылка.ВидыСтажа"/>
						<КодПравилаКонвертации>ВидыСтажа                                         </КодПравилаКонвертации>
						<ПередВыгрузкой>Если Не ЗначениеЗаполнено(Источник.ВидСтажа) Тогда
	Отказ = Истина;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ВидТарифнойСтавки</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифнойСтавки" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ЗначениеРассчитываетсяАвтоматически</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначениеРассчитываетсяАвтоматически" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; КраткоеНаименование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КраткоеНаименование" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; НазначениеПоказателя</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НазначениеПоказателя" Вид="Реквизит" Тип="ПеречислениеСсылка.НазначенияПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ОтображатьВДокументахНачисления</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтображатьВДокументахНачисления" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; СпособВводаЗначений</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособВводаЗначений" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВводаЗначенийПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; СпособПримененияЗначений</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособПримененияЗначений" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ТипПоказателя</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипПоказателя" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; Точность</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Точность" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>13</Код>
						<Наименование>--&gt; ШкалаОценкиСтажа</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ШкалаОценкиСтажа" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Не ЗначениеЗаполнено(Источник.ШкалаОценкиСтажа) Тогда
	Отказ = Истина;
КонецЕсли</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВерхняяГраницаИнтервалаСтажа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВерхняяГраницаИнтервалаСтажа" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ЗначениеПоказателя</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗначениеПоказателя" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Показатели_УП_ТолькоСсылка</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.Показатели_ПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.ПоказателиРасчетаЗарплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Идентификатор</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РодственникиФизическихЛиц</Код>
				<Наименование>:</Наименование>
				<Порядок>1500</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>СправочникСсылка.РодственникиФизическихЛиц</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; СтепеньРодства</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтепеньРодства" Вид="Реквизит" Тип="СправочникСсылка.СтепениРодстваФизическихЛиц"/>
						<КодПравилаКонвертации>СтепениРодстваФизическихЛиц                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; ДатаРождения</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ШаблонВводаПоказателей</Код>
				<Наименование>:</Наименование>
				<Порядок>1550</Порядок>
				<Приемник>СправочникСсылка.ВидыДокументовВводДанныхДляРасчетаЗарплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ПредставлениеДокумента</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПредставлениеДокумента" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ПоказыватьПодразделение</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПоказыватьПодразделение" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ПроверятьЗаполнениеПодразделения</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроверятьЗаполнениеПодразделения" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; СпособПримененияЗначенийПоказателей</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособПримененияЗначенийПоказателей" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты"/>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>1050</Порядок>
			<Правило>
				<Код>ДанныеДляРасчетаЗарплатыПоказателиОрганизации</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ДанныеДляРасчетаЗарплаты</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ВидДокумента</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДокумента" Вид="Реквизит" Тип="СправочникСсылка.ВидыДокументовВводДанныхДляРасчетаЗарплаты"/>
						<КодПравилаКонвертации>ШаблонВводаПоказателей                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование>--&gt; ЗначенияПоказателей</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПоказателей" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Объект</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Объект" Вид="Реквизит"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДанныеДляРасчетаЗарплатыПоказателиПодразделений</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>РежимЗаписи = "Проведение";</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ДанныеДляРасчетаЗарплаты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ВидДокумента</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДокумента" Вид="Реквизит" Тип="СправочникСсылка.ВидыДокументовВводДанныхДляРасчетаЗарплаты"/>
						<КодПравилаКонвертации>ШаблонВводаПоказателей                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Подразделение</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Дата</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование>--&gt; ЗначенияПоказателей</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗначенияПоказателей" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Значение</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Значение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Объект</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Объект" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Показатель</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиРасчетаЗарплаты"/>
							<КодПравилаКонвертации>Показатели_УП_ТолькоСсылка                        </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>НовыеУКР</Код>
			<Наименование>НовыеУКР                                          </Наименование>
			<Порядок>1100</Порядок>
			<Правило>
				<Код>БазовыеПериодыИндексации_ПД</Код>
				<Наименование>:</Наименование>
				<Порядок>700</Порядок>
				<ПриЗагрузке>СписокРегистров = Новый Массив;
СписокРегистров.Добавить("БазовыеПериодыИндексации");
Выполнить(Алгоритмы.ПереносДанных_ПриЗагрузке);</ПриЗагрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Номер</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; ПериодРегистрации</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Отключить="true">
						<Код>4</Код>
						<Наименование>--&gt; БазовыеПериодыИндексации</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеПериодыИндексации" Вид="НаборДвиженийРегистраСведений"/>
						<ПередВыгрузкой>Отказ = Не Источник.Свойство("БазовыеПериодыИндексации");</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование>--&gt; БазовыеПериодыИндексации</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеПериодыИндексации" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Отказ = Не Источник.Свойство("БазовыеПериодыИндексации");</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>ОрганизацииТолькоСсылка                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>--&gt; Подразделение</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Подразделение" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизацийТолькоСсылка              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>--&gt; Должность</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Измерение" Тип="СправочникСсылка.Должности"/>
							<КодПравилаКонвертации>ДолжностиТолькоСсылка                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.Сотрудники"/>
							<КодПравилаКонвертации>СотрудникиТолькоСсылка                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Период</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыСтавокНДФЛ</Код>
				<Наименование>Перечисление: Виды ставок НДФЛ</Наименование>
				<Порядок>700</Порядок>
				<Источник>ПеречислениеСсылка.ВидыСтавокНДФЛ</Источник>
				<Приемник>ПеречислениеСсылка.ВидыСтавокНДФЛ</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВоенныйСбор --&gt; ВоенныйСбор</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВоенныйСбор</Источник>
						<Приемник>ВоенныйСбор</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Двойная --&gt; Двойная</Наименование>
						<Порядок>100</Порядок>
						<Источник>Двойная</Источник>
						<Приемник>Двойная</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НеОблагается --&gt; НеОблагается</Наименование>
						<Порядок>150</Порядок>
						<Источник>НеОблагается</Источник>
						<Приемник>НеОблагается</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Основная --&gt; Основная</Наименование>
						<Порядок>200</Порядок>
						<Источник>Основная</Источник>
						<Приемник>Основная</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>СтавкаШахтеров --&gt; СтавкаШахтеров</Наименование>
						<Порядок>250</Порядок>
						<Источник>СтавкаШахтеров</Источник>
						<Приемник>СтавкаШахтеров</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Увеличенная --&gt; Увеличенная</Наименование>
						<Порядок>300</Порядок>
						<Источник>Увеличенная</Источник>
						<Приемник>Увеличенная</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Уменьшенная --&gt; Уменьшенная</Наименование>
						<Порядок>350</Порядок>
						<Источник>Уменьшенная</Источник>
						<Приемник>Уменьшенная</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СтатьиНалоговыхДеклараций</Код>
				<Наименование>Справочник: Статьи налоговых деклараций</Наименование>
				<Порядок>750</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.СтатьиНалоговыхДеклараций</Источник>
				<Приемник>СправочникСсылка.СтатьиНалоговыхДеклараций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ВидНалоговойДекларации --&gt; ВидНалоговойДекларации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ВидНалоговойДекларации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНалоговыхДеклараций"/>
						<Приемник Имя="ВидНалоговойДекларации" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНалоговыхДеклараций"/>
						<КодПравилаКонвертации>ВидыНалоговыхДеклараций                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Описание --&gt; Описание</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Описание" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиНалоговыхДеклараций"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СтатьиНалоговыхДеклараций"/>
						<КодПравилаКонвертации>СтатьиНалоговыхДеклараций                         </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Акциз_ --&gt; Акциз_</Наименование>
						<Порядок>50</Порядок>
						<Источник>Акциз_</Источник>
						<Приемник>Акциз_</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Акциз_Розница_ --&gt; Акциз_Розница_</Наименование>
						<Порядок>100</Порядок>
						<Источник>Акциз_Розница_</Источник>
						<Приемник>Акциз_Розница_</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Акциз_Розница_Алкоголь --&gt; Акциз_Розница_Алкоголь</Наименование>
						<Порядок>150</Порядок>
						<Источник>Акциз_Розница_Алкоголь</Источник>
						<Приемник>Акциз_Розница_Алкоголь</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Акциз_Розница_Бензин --&gt; Акциз_Розница_Бензин</Наименование>
						<Порядок>200</Порядок>
						<Источник>Акциз_Розница_Бензин</Источник>
						<Приемник>Акциз_Розница_Бензин</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Акциз_Розница_Биодизель --&gt; Акциз_Розница_Биодизел</Наименование>
						<Порядок>250</Порядок>
						<Источник>Акциз_Розница_Биодизель</Источник>
						<Приемник>Акциз_Розница_Биодизель</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Акциз_Розница_Вино --&gt; Акциз_Розница_Вино</Наименование>
						<Порядок>300</Порядок>
						<Источник>Акциз_Розница_Вино</Источник>
						<Приемник>Акциз_Розница_Вино</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>Акциз_Розница_ГазСжиженый --&gt; Акциз_Розница_ГазСжи</Наименование>
						<Порядок>350</Порядок>
						<Источник>Акциз_Розница_ГазСжиженый</Источник>
						<Приемник>Акциз_Розница_ГазСжиженый</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>Акциз_Розница_Другие --&gt; Акциз_Розница_Другие</Наименование>
						<Порядок>400</Порядок>
						<Источник>Акциз_Розница_Другие</Источник>
						<Приемник>Акциз_Розница_Другие</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Акциз_Розница_Компоненты --&gt; Акциз_Розница_Компоне</Наименование>
						<Порядок>450</Порядок>
						<Источник>Акциз_Розница_Компоненты</Источник>
						<Приемник>Акциз_Розница_Компоненты</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>Акциз_Розница_НефтепродуктыДругие --&gt; Акциз_Розниц</Наименование>
						<Порядок>500</Порядок>
						<Источник>Акциз_Розница_НефтепродуктыДругие</Источник>
						<Приемник>Акциз_Розница_НефтепродуктыДругие</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>Акциз_Розница_Пиво --&gt; Акциз_Розница_Пиво</Наименование>
						<Порядок>550</Порядок>
						<Источник>Акциз_Розница_Пиво</Источник>
						<Приемник>Акциз_Розница_Пиво</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>Акциз_Розница_Табак --&gt; Акциз_Розница_Табак</Наименование>
						<Порядок>600</Порядок>
						<Источник>Акциз_Розница_Табак</Источник>
						<Приемник>Акциз_Розница_Табак</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>Акциз_Розница_ТопливоАльтернативное --&gt; Акциз_Розн</Наименование>
						<Порядок>650</Порядок>
						<Источник>Акциз_Розница_ТопливоАльтернативное</Источник>
						<Приемник>Акциз_Розница_ТопливоАльтернативное</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ЕН_ --&gt; ЕН_</Наименование>
						<Порядок>700</Порядок>
						<Источник>ЕН_</Источник>
						<Приемник>ЕН_</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ЕН_ВнереализационныеДоходы --&gt; ЕН_Внереализационны</Наименование>
						<Порядок>750</Порядок>
						<Источник>ЕН_ВнереализационныеДоходы</Источник>
						<Приемник>ЕН_ВнереализационныеДоходы</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ЕН_ВнереализационныеДоходыОблагаемые --&gt; ЕН_Внереа</Наименование>
						<Порядок>800</Порядок>
						<Источник>ЕН_ВнереализационныеДоходыОблагаемые</Источник>
						<Приемник>ЕН_ВнереализационныеДоходыОблагаемые</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ЕН_Затраты --&gt; ЕН_Затраты</Наименование>
						<Порядок>850</Порядок>
						<Источник>ЕН_Затраты</Источник>
						<Приемник>ЕН_Затраты</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ЕН_НачислНаДив --&gt; ЕН_НачислНаДив</Наименование>
						<Порядок>900</Порядок>
						<Источник>ЕН_НачислНаДив</Источник>
						<Приемник>ЕН_НачислНаДив</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ЕН_НачислНалог --&gt; ЕН_НачислНалог</Наименование>
						<Порядок>950</Порядок>
						<Источник>ЕН_НачислНалог</Источник>
						<Приемник>ЕН_НачислНалог</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ЕН_НачислШтрафаСамост --&gt; ЕН_НачислШтрафаСамост</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ЕН_НачислШтрафаСамост</Источник>
						<Приемник>ЕН_НачислШтрафаСамост</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ЕН_Реализация --&gt; ЕН_Реализация</Наименование>
						<Порядок>1050</Порядок>
						<Источник>ЕН_Реализация</Источник>
						<Приемник>ЕН_Реализация</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ЕН_РеализацияОС --&gt; ЕН_РеализацияОС</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ЕН_РеализацияОС</Источник>
						<Приемник>ЕН_РеализацияОС</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ЕННК_ --&gt; ЕННК_</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ЕННК_</Источник>
						<Приемник>ЕННК_</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ЕННК_Доходы --&gt; ЕННК_Доходы</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ЕННК_Доходы</Источник>
						<Приемник>ЕННК_Доходы</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ЕННК_ДоходыВозвраты --&gt; ЕННК_ДоходыВозвраты</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ЕННК_ДоходыВозвраты</Источник>
						<Приемник>ЕННК_ДоходыВозвраты</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ЕННК_ДоходыДоходомНеПризнается --&gt; ЕННК_ДоходыДохо</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ЕННК_ДоходыДоходомНеПризнается</Источник>
						<Приемник>ЕННК_ДоходыДоходомНеПризнается</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ЕННК_ДоходыДоходыДругойСпособРасчетов --&gt; ЕННК_Дох</Наименование>
						<Порядок>1350</Порядок>
						<Источник>ЕННК_ДоходыДоходыДругойСпособРасчетов</Источник>
						<Приемник>ЕННК_ДоходыДоходыДругойСпособРасчетов</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ЕННК_ДоходыДоходыПоВидуДеятельностиНеЕдиныйНалог -</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ЕННК_ДоходыДоходыПоВидуДеятельностиНеЕдиныйНалог</Источник>
						<Приемник>ЕННК_ДоходыДоходыПоВидуДеятельностиНеЕдиныйНалог</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>ЕННК_ДоходыДоходыПоВидуДеятельностиНеУказанномуВСв</Наименование>
						<Порядок>1450</Порядок>
						<Источник>ЕННК_ДоходыДоходыПоВидуДеятельностиНеУказанномуВСвидетельстве</Источник>
						<Приемник>ЕННК_ДоходыДоходыПоВидуДеятельностиНеУказанномуВСвидетельстве</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ЕННК_ДоходыПросроченнаяЗадолженность --&gt; ЕННК_Дохо</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ЕННК_ДоходыПросроченнаяЗадолженность</Источник>
						<Приемник>ЕННК_ДоходыПросроченнаяЗадолженность</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ЕННК_ДоходыРеализация --&gt; ЕННК_ДоходыРеализация</Наименование>
						<Порядок>1550</Порядок>
						<Источник>ЕННК_ДоходыРеализация</Источник>
						<Приемник>ЕННК_ДоходыРеализация</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ЕННК_ДоходыСтоимостьБезоплатноПолученных --&gt; ЕННК_</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ЕННК_ДоходыСтоимостьБезоплатноПолученных</Источник>
						<Приемник>ЕННК_ДоходыСтоимостьБезоплатноПолученных</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ЕННК_Затраты --&gt; ЕННК_Затраты</Наименование>
						<Порядок>1650</Порядок>
						<Источник>ЕННК_Затраты</Источник>
						<Приемник>ЕННК_Затраты</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>ЕННК_ЗатратыДругиеЗатраты --&gt; ЕННК_ЗатратыДругиеЗа</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ЕННК_ЗатратыДругиеЗатраты</Источник>
						<Приемник>ЕННК_ЗатратыДругиеЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ЕННК_ЗатратыЕСВ --&gt; ЕННК_ЗатратыЕСВ</Наименование>
						<Порядок>1750</Порядок>
						<Источник>ЕННК_ЗатратыЕСВ</Источник>
						<Приемник>ЕННК_ЗатратыЕСВ</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ЕННК_ЗатратыЗатратыСвязанныеСПриобретением --&gt; ЕНН</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ЕННК_ЗатратыЗатратыСвязанныеСПриобретением</Источник>
						<Приемник>ЕННК_ЗатратыЗатратыСвязанныеСПриобретением</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ЕННК_ЗатратыОплатаТруда --&gt; ЕННК_ЗатратыОплатаТруд</Наименование>
						<Порядок>1850</Порядок>
						<Источник>ЕННК_ЗатратыОплатаТруда</Источник>
						<Приемник>ЕННК_ЗатратыОплатаТруда</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>ЕСВ_ --&gt; ЕСВ_</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ЕСВ_</Источник>
						<Приемник>ЕСВ_</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>ЕСВ_Больничные --&gt; ЕСВ_Больничные</Наименование>
						<Порядок>1950</Порядок>
						<Источник>ЕСВ_Больничные</Источник>
						<Приемник>ЕСВ_Больничные</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>ЕСВ_ГПХ --&gt; ЕСВ_ГПХ</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ЕСВ_ГПХ</Источник>
						<Приемник>ЕСВ_ГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>ЕСВ_Декретные --&gt; ЕСВ_Декретные</Наименование>
						<Порядок>2050</Порядок>
						<Источник>ЕСВ_Декретные</Источник>
						<Приемник>ЕСВ_Декретные</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ЕСВ_ИнвалидыУТОГ --&gt; ЕСВ_ИнвалидыУТОГ</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ЕСВ_ИнвалидыУТОГ</Источник>
						<Приемник>ЕСВ_ИнвалидыУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ЕСВ_Мобилизованные --&gt; ЕСВ_Мобилизованные</Наименование>
						<Порядок>2150</Порядок>
						<Источник>ЕСВ_Мобилизованные</Источник>
						<Приемник>ЕСВ_Мобилизованные</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>ЕСВ_Работники --&gt; ЕСВ_Работники</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ЕСВ_Работники</Источник>
						<Приемник>ЕСВ_Работники</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ЕСВ_РаботникиСР --&gt; ЕСВ_РаботникиСР</Наименование>
						<Порядок>2250</Порядок>
						<Источник>ЕСВ_РаботникиСР</Источник>
						<Приемник>ЕСВ_РаботникиСР</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>ЕСВ_ФОТ --&gt; ЕСВ_ФОТ</Наименование>
						<Порядок>2300</Порядок>
						<Источник>ЕСВ_ФОТ</Источник>
						<Приемник>ЕСВ_ФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>ЕСВ_ФОТБольничные --&gt; ЕСВ_ФОТБольничные</Наименование>
						<Порядок>2350</Порядок>
						<Источник>ЕСВ_ФОТБольничные</Источник>
						<Приемник>ЕСВ_ФОТБольничные</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>ЕСВ_ФОТБольничныеИнвалиды --&gt; ЕСВ_ФОТБольничныеИнв</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ЕСВ_ФОТБольничныеИнвалиды</Источник>
						<Приемник>ЕСВ_ФОТБольничныеИнвалиды</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>ЕСВ_ФОТБольничныеИнвалиды50 --&gt; ЕСВ_ФОТБольничныеИ</Наименование>
						<Порядок>2450</Порядок>
						<Источник>ЕСВ_ФОТБольничныеИнвалиды50</Источник>
						<Приемник>ЕСВ_ФОТБольничныеИнвалиды50</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>ЕСВ_ФОТБольничныеУТОГ --&gt; ЕСВ_ФОТБольничныеУТОГ</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ЕСВ_ФОТБольничныеУТОГ</Источник>
						<Приемник>ЕСВ_ФОТБольничныеУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>ЕСВ_ФОТБюджетники --&gt; ЕСВ_ФОТБюджетники</Наименование>
						<Порядок>2550</Порядок>
						<Источник>ЕСВ_ФОТБюджетники</Источник>
						<Приемник>ЕСВ_ФОТБюджетники</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>ЕСВ_ФОТГПХ --&gt; ЕСВ_ФОТГПХ</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ЕСВ_ФОТГПХ</Источник>
						<Приемник>ЕСВ_ФОТГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>53</Код>
						<Наименование>ЕСВ_ФОТГПХСудостр --&gt; ЕСВ_ФОТГПХСудостр</Наименование>
						<Порядок>2650</Порядок>
						<Источник>ЕСВ_ФОТГПХСудостр</Источник>
						<Приемник>ЕСВ_ФОТГПХСудостр</Приемник>
					</Значение>
					<Значение>
						<Код>54</Код>
						<Наименование>ЕСВ_ФОТГПХУТОГ --&gt; ЕСВ_ФОТГПХУТОГ</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ЕСВ_ФОТГПХУТОГ</Источник>
						<Приемник>ЕСВ_ФОТГПХУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>55</Код>
						<Наименование>ЕСВ_ФОТДекретные --&gt; ЕСВ_ФОТДекретные</Наименование>
						<Порядок>2750</Порядок>
						<Источник>ЕСВ_ФОТДекретные</Источник>
						<Приемник>ЕСВ_ФОТДекретные</Приемник>
					</Значение>
					<Значение>
						<Код>56</Код>
						<Наименование>ЕСВ_ФОТДекретныеИнвалиды --&gt; ЕСВ_ФОТДекретныеИнвал</Наименование>
						<Порядок>2800</Порядок>
						<Источник>ЕСВ_ФОТДекретныеИнвалиды</Источник>
						<Приемник>ЕСВ_ФОТДекретныеИнвалиды</Приемник>
					</Значение>
					<Значение>
						<Код>57</Код>
						<Наименование>ЕСВ_ФОТДекретныеИнвалиды50 --&gt; ЕСВ_ФОТДекретныеИнв</Наименование>
						<Порядок>2850</Порядок>
						<Источник>ЕСВ_ФОТДекретныеИнвалиды50</Источник>
						<Приемник>ЕСВ_ФОТДекретныеИнвалиды50</Приемник>
					</Значение>
					<Значение>
						<Код>58</Код>
						<Наименование>ЕСВ_ФОТДекретныеУТОГ --&gt; ЕСВ_ФОТДекретныеУТОГ</Наименование>
						<Порядок>2900</Порядок>
						<Источник>ЕСВ_ФОТДекретныеУТОГ</Источник>
						<Приемник>ЕСВ_ФОТДекретныеУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>59</Код>
						<Наименование>ЕСВ_ФОТИнвалиды --&gt; ЕСВ_ФОТИнвалиды</Наименование>
						<Порядок>2950</Порядок>
						<Источник>ЕСВ_ФОТИнвалиды</Источник>
						<Приемник>ЕСВ_ФОТИнвалиды</Приемник>
					</Значение>
					<Значение>
						<Код>60</Код>
						<Наименование>ЕСВ_ФОТИнвалиды50 --&gt; ЕСВ_ФОТИнвалиды50</Наименование>
						<Порядок>3000</Порядок>
						<Источник>ЕСВ_ФОТИнвалиды50</Источник>
						<Приемник>ЕСВ_ФОТИнвалиды50</Приемник>
					</Значение>
					<Значение>
						<Код>61</Код>
						<Наименование>ЕСВ_ФОТЛетчики --&gt; ЕСВ_ФОТЛетчики</Наименование>
						<Порядок>3050</Порядок>
						<Источник>ЕСВ_ФОТЛетчики</Источник>
						<Приемник>ЕСВ_ФОТЛетчики</Приемник>
					</Значение>
					<Значение>
						<Код>62</Код>
						<Наименование>ЕСВ_ФОТСудостр --&gt; ЕСВ_ФОТСудостр</Наименование>
						<Порядок>3100</Порядок>
						<Источник>ЕСВ_ФОТСудостр</Источник>
						<Приемник>ЕСВ_ФОТСудостр</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>ЕСВ_ФОТУТОГ --&gt; ЕСВ_ФОТУТОГ</Наименование>
						<Порядок>3150</Порядок>
						<Источник>ЕСВ_ФОТУТОГ</Источник>
						<Приемник>ЕСВ_ФОТУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>64</Код>
						<Наименование>НДС_ --&gt; НДС_</Наименование>
						<Порядок>3200</Порядок>
						<Источник>НДС_</Источник>
						<Приемник>НДС_</Приемник>
					</Значение>
					<Значение>
						<Код>65</Код>
						<Наименование>НДС_БюджКорректировка_ --&gt; НДС_БюджКорректировка_</Наименование>
						<Порядок>3250</Порядок>
						<Источник>НДС_БюджКорректировка_</Источник>
						<Приемник>НДС_БюджКорректировка_</Приемник>
					</Значение>
					<Значение>
						<Код>66</Код>
						<Наименование>НДС_БюджКорректировкаВексельПогашенный --&gt; НДС_Бюд</Наименование>
						<Порядок>3300</Порядок>
						<Источник>НДС_БюджКорректировкаВексельПогашенный</Источник>
						<Приемник>НДС_БюджКорректировкаВексельПогашенный</Приемник>
					</Значение>
					<Значение>
						<Код>67</Код>
						<Наименование>НДС_БюджПеня --&gt; НДС_БюджПеня</Наименование>
						<Порядок>3350</Порядок>
						<Источник>НДС_БюджПеня</Источник>
						<Приемник>НДС_БюджПеня</Приемник>
					</Значение>
					<Значение>
						<Код>68</Код>
						<Наименование>НДС_БюджПолучВСчетВозвратаИзГосбюджета --&gt; НДС_Бюд</Наименование>
						<Порядок>3400</Порядок>
						<Источник>НДС_БюджПолучВСчетВозвратаИзГосбюджета</Источник>
						<Приемник>НДС_БюджПолучВСчетВозвратаИзГосбюджета</Приемник>
					</Значение>
					<Значение>
						<Код>69</Код>
						<Наименование>НДС_БюджШтраф --&gt; НДС_БюджШтраф</Наименование>
						<Порядок>3450</Порядок>
						<Источник>НДС_БюджШтраф</Источник>
						<Приемник>НДС_БюджШтраф</Приемник>
					</Значение>
					<Значение>
						<Код>70</Код>
						<Наименование>НДС_БюджШтрафПеня_ --&gt; НДС_БюджШтрафПеня_</Наименование>
						<Порядок>3500</Порядок>
						<Источник>НДС_БюджШтрафПеня_</Источник>
						<Приемник>НДС_БюджШтрафПеня_</Приемник>
					</Значение>
					<Значение>
						<Код>71</Код>
						<Наименование>НДС_ВвозЛьгИспНеПоНазнач --&gt; НДС_ВвозЛьгИспНеПоНаз</Наименование>
						<Порядок>3550</Порядок>
						<Источник>НДС_ВвозЛьгИспНеПоНазнач</Источник>
						<Приемник>НДС_ВвозЛьгИспНеПоНазнач</Приемник>
					</Значение>
					<Значение>
						<Код>72</Код>
						<Наименование>НДС_ЗачетОтрицатЗначВУменьшНалогДолга --&gt; НДС_Заче</Наименование>
						<Порядок>3600</Порядок>
						<Источник>НДС_ЗачетОтрицатЗначВУменьшНалогДолга</Источник>
						<Приемник>НДС_ЗачетОтрицатЗначВУменьшНалогДолга</Приемник>
					</Значение>
					<Значение>
						<Код>73</Код>
						<Наименование>НДС_ИзмененОстатокОтрицЗначенияПроверка --&gt; НДС_Из</Наименование>
						<Порядок>3650</Порядок>
						<Источник>НДС_ИзмененОстатокОтрицЗначенияПроверка</Источник>
						<Приемник>НДС_ИзмененОстатокОтрицЗначенияПроверка</Приемник>
					</Значение>
					<Значение>
						<Код>74</Код>
						<Наименование>НДС_НКИзменениеСтоимости --&gt; НДС_НКИзменениеСтоимо</Наименование>
						<Порядок>3700</Порядок>
						<Источник>НДС_НКИзменениеСтоимости</Источник>
						<Приемник>НДС_НКИзменениеСтоимости</Приемник>
					</Значение>
					<Значение>
						<Код>75</Код>
						<Наименование>НДС_НКИзменениеСтоимостиБезНК --&gt; НДС_НКИзменениеС</Наименование>
						<Порядок>3750</Порядок>
						<Источник>НДС_НКИзменениеСтоимостиБезНК</Источник>
						<Приемник>НДС_НКИзменениеСтоимостиБезНК</Приемник>
					</Значение>
					<Значение>
						<Код>76</Код>
						<Наименование>НДС_НКИмпортВРНеОблаг_ --&gt; НДС_НКИмпортВРНеОблаг_</Наименование>
						<Порядок>3800</Порядок>
						<Источник>НДС_НКИмпортВРНеОблаг_</Источник>
						<Приемник>НДС_НКИмпортВРНеОблаг_</Приемник>
					</Значение>
					<Значение>
						<Код>77</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъект_ --&gt; НДС_НКИмпортВРН</Наименование>
						<Порядок>3850</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъект_</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъект_</Приемник>
					</Значение>
					<Значение>
						<Код>78</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектБезНДС --&gt; НДС_НКИмпо</Наименование>
						<Порядок>3900</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектБезНДС</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектБезНДС</Приемник>
					</Значение>
					<Значение>
						<Код>79</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектБезНДСУслугВнеУкраины</Наименование>
						<Порядок>3950</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектБезНДСУслугВнеУкраины</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектБезНДСУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>80</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектНДСОплачВексель --&gt; Н</Наименование>
						<Порядок>4000</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектНДСОплачВексель</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектНДСОплачВексель</Приемник>
					</Значение>
					<Значение>
						<Код>81</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектНДСТамож --&gt; НДС_НКИм</Наименование>
						<Порядок>4050</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектНДСТамож</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектНДСТамож</Приемник>
					</Значение>
					<Значение>
						<Код>82</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектНДСТаможУслугВнеУкраи</Наименование>
						<Порядок>4100</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектНДСТаможУслугВнеУкраины</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектНДСТаможУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>83</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектУслугиНерезидента --&gt;</Наименование>
						<Порядок>4150</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектУслугиНерезидента</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектУслугиНерезидента</Приемник>
					</Значение>
					<Значение>
						<Код>84</Код>
						<Наименование>НДС_НКИмпортВРНеОблагНеОбъектУслугиНерезидентаУслу</Наименование>
						<Порядок>4200</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагНеОбъектУслугиНерезидентаУслугВнеУкраины</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагНеОбъектУслугиНерезидентаУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>85</Код>
						<Наименование>НДС_НКИмпортВРНеОблагОсвобожден_ --&gt; НДС_НКИмпортВ</Наименование>
						<Порядок>4250</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагОсвобожден_</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагОсвобожден_</Приемник>
					</Значение>
					<Значение>
						<Код>86</Код>
						<Наименование>НДС_НКИмпортВРНеОблагОсвобожденБезНДС --&gt; НДС_НКИм</Наименование>
						<Порядок>4300</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагОсвобожденБезНДС</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагОсвобожденБезНДС</Приемник>
					</Значение>
					<Значение>
						<Код>87</Код>
						<Наименование>НДС_НКИмпортВРНеОблагОсвобожденНДСТамож --&gt; НДС_НК</Наименование>
						<Порядок>4350</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагОсвобожденНДСТамож</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагОсвобожденНДСТамож</Приемник>
					</Значение>
					<Значение>
						<Код>88</Код>
						<Наименование>НДС_НКИмпортВРНеОблагОсвобожденОплачВексель --&gt; НД</Наименование>
						<Порядок>4400</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагОсвобожденОплачВексель</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагОсвобожденОплачВексель</Приемник>
					</Значение>
					<Значение>
						<Код>89</Код>
						<Наименование>НДС_НКИмпортВРНеОблагОсвобожденУслугиНерезидента -</Наименование>
						<Порядок>4450</Порядок>
						<Источник>НДС_НКИмпортВРНеОблагОсвобожденУслугиНерезидента</Источник>
						<Приемник>НДС_НКИмпортВРНеОблагОсвобожденУслугиНерезидента</Приемник>
					</Значение>
					<Значение>
						<Код>90</Код>
						<Наименование>НДС_НКИмпортВРОблаг_ --&gt; НДС_НКИмпортВРОблаг_</Наименование>
						<Порядок>4500</Порядок>
						<Источник>НДС_НКИмпортВРОблаг_</Источник>
						<Приемник>НДС_НКИмпортВРОблаг_</Приемник>
					</Значение>
					<Значение>
						<Код>91</Код>
						<Наименование>НДС_НКИмпортВРОблагБезНДС --&gt; НДС_НКИмпортВРОблагБ</Наименование>
						<Порядок>4550</Порядок>
						<Источник>НДС_НКИмпортВРОблагБезНДС</Источник>
						<Приемник>НДС_НКИмпортВРОблагБезНДС</Приемник>
					</Значение>
					<Значение>
						<Код>92</Код>
						<Наименование>НДС_НКИмпортВРОблагВексель --&gt; НДС_НКИмпортВРОблаг</Наименование>
						<Порядок>4600</Порядок>
						<Источник>НДС_НКИмпортВРОблагВексель</Источник>
						<Приемник>НДС_НКИмпортВРОблагВексель</Приемник>
					</Значение>
					<Значение>
						<Код>93</Код>
						<Наименование>НДС_НКИмпортВРОблагНДСТамож --&gt; НДС_НКИмпортВРОбла</Наименование>
						<Порядок>4650</Порядок>
						<Источник>НДС_НКИмпортВРОблагНДСТамож</Источник>
						<Приемник>НДС_НКИмпортВРОблагНДСТамож</Приемник>
					</Значение>
					<Значение>
						<Код>94</Код>
						<Наименование>НДС_НКИмпортВРОблагУслугиНерезидента --&gt; НДС_НКИмп</Наименование>
						<Порядок>4700</Порядок>
						<Источник>НДС_НКИмпортВРОблагУслугиНерезидента</Источник>
						<Приемник>НДС_НКИмпортВРОблагУслугиНерезидента</Приемник>
					</Значение>
					<Значение>
						<Код>95</Код>
						<Наименование>НДС_НККорректировка_ --&gt; НДС_НККорректировка_</Наименование>
						<Порядок>4750</Порядок>
						<Источник>НДС_НККорректировка_</Источник>
						<Приемник>НДС_НККорректировка_</Приемник>
					</Значение>
					<Значение>
						<Код>96</Код>
						<Наименование>НДС_НККорректировкаБезНК --&gt; НДС_НККорректировкаБе</Наименование>
						<Порядок>4800</Порядок>
						<Источник>НДС_НККорректировкаБезНК</Источник>
						<Приемник>НДС_НККорректировкаБезНК</Приемник>
					</Значение>
					<Значение>
						<Код>97</Код>
						<Наименование>НДС_НККорректировкаБезНКДляУслугВнеУкраины --&gt; НДС</Наименование>
						<Порядок>4850</Порядок>
						<Источник>НДС_НККорректировкаБезНКДляУслугВнеУкраины</Источник>
						<Приемник>НДС_НККорректировкаБезНКДляУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>98</Код>
						<Наименование>НДС_НККорректировкаБезНКНеХоз --&gt; НДС_НККорректиро</Наименование>
						<Порядок>4900</Порядок>
						<Источник>НДС_НККорректировкаБезНКНеХоз</Источник>
						<Приемник>НДС_НККорректировкаБезНКНеХоз</Приемник>
					</Значение>
					<Значение>
						<Код>99</Код>
						<Наименование>НДС_НККорректировкаВосстановлениеКредита --&gt; НДС_Н</Наименование>
						<Порядок>4950</Порядок>
						<Источник>НДС_НККорректировкаВосстановлениеКредита</Источник>
						<Приемник>НДС_НККорректировкаВосстановлениеКредита</Приемник>
					</Значение>
					<Значение>
						<Код>100</Код>
						<Наименование>НДС_НККорректировкаВосстановлениеКредитаПропорцион</Наименование>
						<Порядок>5000</Порядок>
						<Источник>НДС_НККорректировкаВосстановлениеКредитаПропорциональноВклВКредит</Источник>
						<Приемник>НДС_НККорректировкаВосстановлениеКредитаПропорциональноВклВКредит</Приемник>
					</Значение>
					<Значение>
						<Код>101</Код>
						<Наименование>НДС_НККорректировкаВосстановлениеКредитаПропорцион</Наименование>
						<Порядок>5050</Порядок>
						<Источник>НДС_НККорректировкаВосстановлениеКредитаПропорциональноНеВклВКредит</Источник>
						<Приемник>НДС_НККорректировкаВосстановлениеКредитаПропорциональноНеВклВКредит</Приемник>
					</Значение>
					<Значение>
						<Код>102</Код>
						<Наименование>НДС_НККорректировкаПропорциональноВклВКредит --&gt; Н</Наименование>
						<Порядок>5100</Порядок>
						<Источник>НДС_НККорректировкаПропорциональноВклВКредит</Источник>
						<Приемник>НДС_НККорректировкаПропорциональноВклВКредит</Приемник>
					</Значение>
					<Значение>
						<Код>103</Код>
						<Наименование>НДС_НККорректировкаПропорциональноВклВКредитПостав</Наименование>
						<Порядок>5150</Порядок>
						<Источник>НДС_НККорректировкаПропорциональноВклВКредитПоставкаОФ</Источник>
						<Приемник>НДС_НККорректировкаПропорциональноВклВКредитПоставкаОФ</Приемник>
					</Значение>
					<Значение>
						<Код>104</Код>
						<Наименование>НДС_НККорректировкаПропорциональноНеВклВКредит --&gt;</Наименование>
						<Порядок>5200</Порядок>
						<Источник>НДС_НККорректировкаПропорциональноНеВклВКредит</Источник>
						<Приемник>НДС_НККорректировкаПропорциональноНеВклВКредит</Приемник>
					</Значение>
					<Значение>
						<Код>105</Код>
						<Наименование>НДС_НККорректировкаПропорциональноНеВклВКредитПост</Наименование>
						<Порядок>5250</Порядок>
						<Источник>НДС_НККорректировкаПропорциональноНеВклВКредитПоставкаОФ</Источник>
						<Приемник>НДС_НККорректировкаПропорциональноНеВклВКредитПоставкаОФ</Приемник>
					</Значение>
					<Значение>
						<Код>106</Код>
						<Наименование>НДС_НККорректировкаПропорциональноПерерасчет --&gt; Н</Наименование>
						<Порядок>5300</Порядок>
						<Источник>НДС_НККорректировкаПропорциональноПерерасчет</Источник>
						<Приемник>НДС_НККорректировкаПропорциональноПерерасчет</Приемник>
					</Значение>
					<Значение>
						<Код>107</Код>
						<Наименование>НДС_НККорректировкаПрочее --&gt; НДС_НККорректировкаП</Наименование>
						<Порядок>5350</Порядок>
						<Источник>НДС_НККорректировкаПрочее</Источник>
						<Приемник>НДС_НККорректировкаПрочее</Приемник>
					</Значение>
					<Значение>
						<Код>108</Код>
						<Наименование>НДС_НККорректировкаСамостОшибки --&gt; НДС_НККорректи</Наименование>
						<Порядок>5400</Порядок>
						<Источник>НДС_НККорректировкаСамостОшибки</Источник>
						<Приемник>НДС_НККорректировкаСамостОшибки</Приемник>
					</Значение>
					<Значение>
						<Код>109</Код>
						<Наименование>НДС_НККорректировкаТрансфЦенообразование --&gt; НДС_Н</Наименование>
						<Порядок>5450</Порядок>
						<Источник>НДС_НККорректировкаТрансфЦенообразование</Источник>
						<Приемник>НДС_НККорректировкаТрансфЦенообразование</Приемник>
					</Значение>
					<Значение>
						<Код>110</Код>
						<Наименование>НДС_НККорректировкаЧастИспользВСХ --&gt; НДС_НККоррек</Наименование>
						<Порядок>5500</Порядок>
						<Источник>НДС_НККорректировкаЧастИспользВСХ</Источник>
						<Приемник>НДС_НККорректировкаЧастИспользВСХ</Приемник>
					</Значение>
					<Значение>
						<Код>111</Код>
						<Наименование>НДС_НКПокупкаБезНДСвВР_ --&gt; НДС_НКПокупкаБезНДСвВР</Наименование>
						<Порядок>5550</Порядок>
						<Источник>НДС_НКПокупкаБезНДСвВР_</Источник>
						<Приемник>НДС_НКПокупкаБезНДСвВР_</Приемник>
					</Значение>
					<Значение>
						<Код>112</Код>
						<Наименование>НДС_НКПокупкаБезНДСвВРНеОблаг --&gt; НДС_НКПокупкаБез</Наименование>
						<Порядок>5600</Порядок>
						<Источник>НДС_НКПокупкаБезНДСвВРНеОблаг</Источник>
						<Приемник>НДС_НКПокупкаБезНДСвВРНеОблаг</Приемник>
					</Значение>
					<Значение>
						<Код>113</Код>
						<Наименование>НДС_НКПокупкаБезНДСвВРНеОблагУслугВнеУкраины --&gt; Н</Наименование>
						<Порядок>5650</Порядок>
						<Источник>НДС_НКПокупкаБезНДСвВРНеОблагУслугВнеУкраины</Источник>
						<Приемник>НДС_НКПокупкаБезНДСвВРНеОблагУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>114</Код>
						<Наименование>НДС_НКПокупкаБезНДСвВРОблаг --&gt; НДС_НКПокупкаБезНД</Наименование>
						<Порядок>5700</Порядок>
						<Источник>НДС_НКПокупкаБезНДСвВРОблаг</Источник>
						<Приемник>НДС_НКПокупкаБезНДСвВРОблаг</Приемник>
					</Значение>
					<Значение>
						<Код>115</Код>
						<Наименование>НДС_НКПокупкаБезНДСнеВР_ --&gt; НДС_НКПокупкаБезНДСне</Наименование>
						<Порядок>5750</Порядок>
						<Источник>НДС_НКПокупкаБезНДСнеВР_</Источник>
						<Приемник>НДС_НКПокупкаБезНДСнеВР_</Приемник>
					</Значение>
					<Значение>
						<Код>116</Код>
						<Наименование>НДС_НКПокупкаБезНДСнеВРДляУслугВнеУкраины --&gt; НДС_</Наименование>
						<Порядок>5800</Порядок>
						<Источник>НДС_НКПокупкаБезНДСнеВРДляУслугВнеУкраины</Источник>
						<Приемник>НДС_НКПокупкаБезНДСнеВРДляУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>117</Код>
						<Наименование>НДС_НКПокупкаБезНДСнеВРИмпорт --&gt; НДС_НКПокупкаБез</Наименование>
						<Порядок>5850</Порядок>
						<Источник>НДС_НКПокупкаБезНДСнеВРИмпорт</Источник>
						<Приемник>НДС_НКПокупкаБезНДСнеВРИмпорт</Приемник>
					</Значение>
					<Значение>
						<Код>118</Код>
						<Наименование>НДС_НКПокупкаБезНДСнеВРнаУкраине --&gt; НДС_НКПокупка</Наименование>
						<Порядок>5900</Порядок>
						<Источник>НДС_НКПокупкаБезНДСнеВРнаУкраине</Источник>
						<Приемник>НДС_НКПокупкаБезНДСнеВРнаУкраине</Приемник>
					</Значение>
					<Значение>
						<Код>119</Код>
						<Наименование>НДС_НКПокупкаБезНДСнеВРУслугиНерезидента --&gt; НДС_Н</Наименование>
						<Порядок>5950</Порядок>
						<Источник>НДС_НКПокупкаБезНДСнеВРУслугиНерезидента</Источник>
						<Приемник>НДС_НКПокупкаБезНДСнеВРУслугиНерезидента</Приемник>
					</Значение>
					<Значение>
						<Код>120</Код>
						<Наименование>НДС_НКПокупкаСНДСвВР_ --&gt; НДС_НКПокупкаСНДСвВР_</Наименование>
						<Порядок>6000</Порядок>
						<Источник>НДС_НКПокупкаСНДСвВР_</Источник>
						<Приемник>НДС_НКПокупкаСНДСвВР_</Приемник>
					</Значение>
					<Значение>
						<Код>121</Код>
						<Наименование>НДС_НКПокупкаСНДСвВРНеОблаг --&gt; НДС_НКПокупкаСНДСв</Наименование>
						<Порядок>6050</Порядок>
						<Источник>НДС_НКПокупкаСНДСвВРНеОблаг</Источник>
						<Приемник>НДС_НКПокупкаСНДСвВРНеОблаг</Приемник>
					</Значение>
					<Значение>
						<Код>122</Код>
						<Наименование>НДС_НКПокупкаСНДСвВРНеОблагУслугВнеУкраины --&gt; НДС</Наименование>
						<Порядок>6100</Порядок>
						<Источник>НДС_НКПокупкаСНДСвВРНеОблагУслугВнеУкраины</Источник>
						<Приемник>НДС_НКПокупкаСНДСвВРНеОблагУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>123</Код>
						<Наименование>НДС_НКПокупкаСНДСвВРОблаг --&gt; НДС_НКПокупкаСНДСвВР</Наименование>
						<Порядок>6150</Порядок>
						<Источник>НДС_НКПокупкаСНДСвВРОблаг</Источник>
						<Приемник>НДС_НКПокупкаСНДСвВРОблаг</Приемник>
					</Значение>
					<Значение>
						<Код>124</Код>
						<Наименование>НДС_НКПокупкаСНДСвВРОблагКомиссия --&gt; НДС_НКПокупк</Наименование>
						<Порядок>6200</Порядок>
						<Источник>НДС_НКПокупкаСНДСвВРОблагКомиссия</Источник>
						<Приемник>НДС_НКПокупкаСНДСвВРОблагКомиссия</Приемник>
					</Значение>
					<Значение>
						<Код>125</Код>
						<Наименование>НДС_НКПокупкаСНДСвВРОблагПриобрОФ --&gt; НДС_НКПокупк</Наименование>
						<Порядок>6250</Порядок>
						<Источник>НДС_НКПокупкаСНДСвВРОблагПриобрОФ</Источник>
						<Приемник>НДС_НКПокупкаСНДСвВРОблагПриобрОФ</Приемник>
					</Значение>
					<Значение>
						<Код>126</Код>
						<Наименование>НДС_НКПокупкаСНДСнеВР_ --&gt; НДС_НКПокупкаСНДСнеВР_</Наименование>
						<Порядок>6300</Порядок>
						<Источник>НДС_НКПокупкаСНДСнеВР_</Источник>
						<Приемник>НДС_НКПокупкаСНДСнеВР_</Приемник>
					</Значение>
					<Значение>
						<Код>127</Код>
						<Наименование>НДС_НКПокупкаСНДСнеВРДляУслугВнеУкраины --&gt; НДС_НК</Наименование>
						<Порядок>6350</Порядок>
						<Источник>НДС_НКПокупкаСНДСнеВРДляУслугВнеУкраины</Источник>
						<Приемник>НДС_НКПокупкаСНДСнеВРДляУслугВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>128</Код>
						<Наименование>НДС_НКПокупкаСНДСнеВРИмпорт --&gt; НДС_НКПокупкаСНДСн</Наименование>
						<Порядок>6400</Порядок>
						<Источник>НДС_НКПокупкаСНДСнеВРИмпорт</Источник>
						<Приемник>НДС_НКПокупкаСНДСнеВРИмпорт</Приемник>
					</Значение>
					<Значение>
						<Код>129</Код>
						<Наименование>НДС_НКПокупкаСНДСнеВРнаУкраине --&gt; НДС_НКПокупкаСН</Наименование>
						<Порядок>6450</Порядок>
						<Источник>НДС_НКПокупкаСНДСнеВРнаУкраине</Источник>
						<Приемник>НДС_НКПокупкаСНДСнеВРнаУкраине</Приемник>
					</Значение>
					<Значение>
						<Код>130</Код>
						<Наименование>НДС_НКПокупкаСНДСнеВРУслугиНерезидента --&gt; НДС_НКП</Наименование>
						<Порядок>6500</Порядок>
						<Источник>НДС_НКПокупкаСНДСнеВРУслугиНерезидента</Источник>
						<Приемник>НДС_НКПокупкаСНДСнеВРУслугиНерезидента</Приемник>
					</Значение>
					<Значение>
						<Код>131</Код>
						<Наименование>НДС_НКПропорционально --&gt; НДС_НКПропорционально</Наименование>
						<Порядок>6550</Порядок>
						<Источник>НДС_НКПропорционально</Источник>
						<Приемник>НДС_НКПропорционально</Приемник>
					</Значение>
					<Значение>
						<Код>132</Код>
						<Наименование>НДС_НКПропорциональноВклВКредит --&gt; НДС_НКПропорци</Наименование>
						<Порядок>6600</Порядок>
						<Источник>НДС_НКПропорциональноВклВКредит</Источник>
						<Приемник>НДС_НКПропорциональноВклВКредит</Приемник>
					</Значение>
					<Значение>
						<Код>133</Код>
						<Наименование>НДС_НКПропорциональноВклВКредитПоставкаОФ --&gt; НДС_</Наименование>
						<Порядок>6650</Порядок>
						<Источник>НДС_НКПропорциональноВклВКредитПоставкаОФ</Источник>
						<Приемник>НДС_НКПропорциональноВклВКредитПоставкаОФ</Приемник>
					</Значение>
					<Значение>
						<Код>134</Код>
						<Наименование>НДС_НКПропорциональноНеВклВКредит --&gt; НДС_НКПропор</Наименование>
						<Порядок>6700</Порядок>
						<Источник>НДС_НКПропорциональноНеВклВКредит</Источник>
						<Приемник>НДС_НКПропорциональноНеВклВКредит</Приемник>
					</Значение>
					<Значение>
						<Код>135</Код>
						<Наименование>НДС_НКПропорциональноНеВклВКредитПоставкаОФ --&gt; НД</Наименование>
						<Порядок>6750</Порядок>
						<Источник>НДС_НКПропорциональноНеВклВКредитПоставкаОФ</Источник>
						<Приемник>НДС_НКПропорциональноНеВклВКредитПоставкаОФ</Приемник>
					</Значение>
					<Значение>
						<Код>136</Код>
						<Наименование>НДС_НОИзменениеСтоимости --&gt; НДС_НОИзменениеСтоимо</Наименование>
						<Порядок>6800</Порядок>
						<Источник>НДС_НОИзменениеСтоимости</Источник>
						<Приемник>НДС_НОИзменениеСтоимости</Приемник>
					</Значение>
					<Значение>
						<Код>137</Код>
						<Наименование>НДС_НОИмпортВексель --&gt; НДС_НОИмпортВексель</Наименование>
						<Порядок>6850</Порядок>
						<Источник>НДС_НОИмпортВексель</Источник>
						<Приемник>НДС_НОИмпортВексель</Приемник>
					</Значение>
					<Значение>
						<Код>138</Код>
						<Наименование>НДС_НОКорректировка_ --&gt; НДС_НОКорректировка_</Наименование>
						<Порядок>6900</Порядок>
						<Источник>НДС_НОКорректировка_</Источник>
						<Приемник>НДС_НОКорректировка_</Приемник>
					</Значение>
					<Значение>
						<Код>139</Код>
						<Наименование>НДС_НОКорректировкаНецелевоеИсп --&gt; НДС_НОКорректи</Наименование>
						<Порядок>6950</Порядок>
						<Источник>НДС_НОКорректировкаНецелевоеИсп</Источник>
						<Приемник>НДС_НОКорректировкаНецелевоеИсп</Приемник>
					</Значение>
					<Значение>
						<Код>140</Код>
						<Наименование>НДС_НОКорректировкаПрочее --&gt; НДС_НОКорректировкаП</Наименование>
						<Порядок>7000</Порядок>
						<Источник>НДС_НОКорректировкаПрочее</Источник>
						<Приемник>НДС_НОКорректировкаПрочее</Приемник>
					</Значение>
					<Значение>
						<Код>141</Код>
						<Наименование>НДС_НОКорректировкаСамостОшибки --&gt; НДС_НОКорректи</Наименование>
						<Порядок>7050</Порядок>
						<Источник>НДС_НОКорректировкаСамостОшибки</Источник>
						<Приемник>НДС_НОКорректировкаСамостОшибки</Приемник>
					</Значение>
					<Значение>
						<Код>142</Код>
						<Наименование>НДС_НОКорректировкаТрансфЦенообразование --&gt; НДС_Н</Наименование>
						<Порядок>7100</Порядок>
						<Источник>НДС_НОКорректировкаТрансфЦенообразование</Источник>
						<Приемник>НДС_НОКорректировкаТрансфЦенообразование</Приемник>
					</Значение>
					<Значение>
						<Код>143</Код>
						<Наименование>НДС_НОНеОбъектНалог --&gt; НДС_НОНеОбъектНалог</Наименование>
						<Порядок>7150</Порядок>
						<Источник>НДС_НОНеОбъектНалог</Источник>
						<Приемник>НДС_НОНеОбъектНалог</Приемник>
					</Значение>
					<Значение>
						<Код>144</Код>
						<Наименование>НДС_НОНерезидентУслуги --&gt; НДС_НОНерезидентУслуги</Наименование>
						<Порядок>7200</Порядок>
						<Источник>НДС_НОНерезидентУслуги</Источник>
						<Приемник>НДС_НОНерезидентУслуги</Приемник>
					</Значение>
					<Значение>
						<Код>145</Код>
						<Наименование>НДС_НООсвобожден --&gt; НДС_НООсвобожден</Наименование>
						<Порядок>7250</Порядок>
						<Источник>НДС_НООсвобожден</Источник>
						<Приемник>НДС_НООсвобожден</Приемник>
					</Значение>
					<Значение>
						<Код>146</Код>
						<Наименование>НДС_НОПоСтавке0Другие --&gt; НДС_НОПоСтавке0Другие</Наименование>
						<Порядок>7300</Порядок>
						<Источник>НДС_НОПоСтавке0Другие</Источник>
						<Приемник>НДС_НОПоСтавке0Другие</Приемник>
					</Значение>
					<Значение>
						<Код>147</Код>
						<Наименование>НДС_НОПоСтавке0Экспорт --&gt; НДС_НОПоСтавке0Экспорт</Наименование>
						<Порядок>7350</Порядок>
						<Источник>НДС_НОПоСтавке0Экспорт</Источник>
						<Приемник>НДС_НОПоСтавке0Экспорт</Приемник>
					</Значение>
					<Значение>
						<Код>148</Код>
						<Наименование>НДС_НОПоСтавке0ЭкспортБартер --&gt; НДС_НОПоСтавке0Эк</Наименование>
						<Порядок>7400</Порядок>
						<Источник>НДС_НОПоСтавке0ЭкспортБартер</Источник>
						<Приемник>НДС_НОПоСтавке0ЭкспортБартер</Приемник>
					</Значение>
					<Значение>
						<Код>149</Код>
						<Наименование>НДС_НОПоСтавке0ЭкспортУслуги --&gt; НДС_НОПоСтавке0Эк</Наименование>
						<Порядок>7450</Порядок>
						<Источник>НДС_НОПоСтавке0ЭкспортУслуги</Источник>
						<Приемник>НДС_НОПоСтавке0ЭкспортУслуги</Приемник>
					</Значение>
					<Значение>
						<Код>150</Код>
						<Наименование>НДС_НОПоСтавке20 --&gt; НДС_НОПоСтавке20</Наименование>
						<Порядок>7500</Порядок>
						<Источник>НДС_НОПоСтавке20</Источник>
						<Приемник>НДС_НОПоСтавке20</Приемник>
					</Значение>
					<Значение>
						<Код>151</Код>
						<Наименование>НДС_НОПоСтавке20Бартер --&gt; НДС_НОПоСтавке20Бартер</Наименование>
						<Порядок>7550</Порядок>
						<Источник>НДС_НОПоСтавке20Бартер</Источник>
						<Приемник>НДС_НОПоСтавке20Бартер</Приемник>
					</Значение>
					<Значение>
						<Код>152</Код>
						<Наименование>НДС_НОПоСтавке20Комиссия --&gt; НДС_НОПоСтавке20Комис</Наименование>
						<Порядок>7600</Порядок>
						<Источник>НДС_НОПоСтавке20Комиссия</Источник>
						<Приемник>НДС_НОПоСтавке20Комиссия</Приемник>
					</Значение>
					<Значение>
						<Код>153</Код>
						<Наименование>НДС_НОПоСтавке20ЛиквидОФ --&gt; НДС_НОПоСтавке20Ликви</Наименование>
						<Порядок>7650</Порядок>
						<Источник>НДС_НОПоСтавке20ЛиквидОФ</Источник>
						<Приемник>НДС_НОПоСтавке20ЛиквидОФ</Приемник>
					</Значение>
					<Значение>
						<Код>154</Код>
						<Наименование>НДС_НОПоСтавке20НепроизвИсп --&gt; НДС_НОПоСтавке20Не</Наименование>
						<Порядок>7700</Порядок>
						<Источник>НДС_НОПоСтавке20НепроизвИсп</Источник>
						<Приемник>НДС_НОПоСтавке20НепроизвИсп</Приемник>
					</Значение>
					<Значение>
						<Код>155</Код>
						<Наименование>НДС_НОПоСтавке20ПоставкаОФ --&gt; НДС_НОПоСтавке20Пос</Наименование>
						<Порядок>7750</Порядок>
						<Источник>НДС_НОПоСтавке20ПоставкаОФ</Источник>
						<Приемник>НДС_НОПоСтавке20ПоставкаОФ</Приемник>
					</Значение>
					<Значение>
						<Код>156</Код>
						<Наименование>НДС_НОУслугиВнеУкраины --&gt; НДС_НОУслугиВнеУкраины</Наименование>
						<Порядок>7800</Порядок>
						<Источник>НДС_НОУслугиВнеУкраины</Источник>
						<Приемник>НДС_НОУслугиВнеУкраины</Приемник>
					</Значение>
					<Значение>
						<Код>157</Код>
						<Наименование>НДС_Штраф --&gt; НДС_Штраф</Наименование>
						<Порядок>7850</Порядок>
						<Источник>НДС_Штраф</Источник>
						<Приемник>НДС_Штраф</Приемник>
					</Значение>
					<Значение>
						<Код>158</Код>
						<Наименование>НП_ --&gt; НП_</Наименование>
						<Порядок>7900</Порядок>
						<Источник>НП_</Источник>
						<Приемник>НП_</Приемник>
					</Значение>
					<Значение>
						<Код>159</Код>
						<Наименование>НП_85Оффшор --&gt; НП_85Оффшор</Наименование>
						<Порядок>7950</Порядок>
						<Источник>НП_85Оффшор</Источник>
						<Приемник>НП_85Оффшор</Приемник>
					</Значение>
					<Значение>
						<Код>160</Код>
						<Наименование>НП_АмортГруппа1_2проц --&gt; НП_АмортГруппа1_2проц</Наименование>
						<Порядок>8000</Порядок>
						<Источник>НП_АмортГруппа1_2проц</Источник>
						<Приемник>НП_АмортГруппа1_2проц</Приемник>
					</Значение>
					<Значение>
						<Код>161</Код>
						<Наименование>НП_АмортГруппа1_ниже2проц --&gt; НП_АмортГруппа1_ниже</Наименование>
						<Порядок>8050</Порядок>
						<Источник>НП_АмортГруппа1_ниже2проц</Источник>
						<Приемник>НП_АмортГруппа1_ниже2проц</Приемник>
					</Значение>
					<Значение>
						<Код>162</Код>
						<Наименование>НП_АмортГруппа2_10проц --&gt; НП_АмортГруппа2_10проц</Наименование>
						<Порядок>8100</Порядок>
						<Источник>НП_АмортГруппа2_10проц</Источник>
						<Приемник>НП_АмортГруппа2_10проц</Приемник>
					</Значение>
					<Значение>
						<Код>163</Код>
						<Наименование>НП_АмортГруппа2_ниже10проц --&gt; НП_АмортГруппа2_ниж</Наименование>
						<Порядок>8150</Порядок>
						<Источник>НП_АмортГруппа2_ниже10проц</Источник>
						<Приемник>НП_АмортГруппа2_ниже10проц</Приемник>
					</Значение>
					<Значение>
						<Код>164</Код>
						<Наименование>НП_АмортГруппа3_6проц --&gt; НП_АмортГруппа3_6проц</Наименование>
						<Порядок>8200</Порядок>
						<Источник>НП_АмортГруппа3_6проц</Источник>
						<Приемник>НП_АмортГруппа3_6проц</Приемник>
					</Значение>
					<Значение>
						<Код>165</Код>
						<Наименование>НП_АмортГруппа3_ниже6проц --&gt; НП_АмортГруппа3_ниже</Наименование>
						<Порядок>8250</Порядок>
						<Источник>НП_АмортГруппа3_ниже6проц</Источник>
						<Приемник>НП_АмортГруппа3_ниже6проц</Приемник>
					</Значение>
					<Значение>
						<Код>166</Код>
						<Наименование>НП_АмортГруппа4_15проц --&gt; НП_АмортГруппа4_15проц</Наименование>
						<Порядок>8300</Порядок>
						<Источник>НП_АмортГруппа4_15проц</Источник>
						<Приемник>НП_АмортГруппа4_15проц</Приемник>
					</Значение>
					<Значение>
						<Код>167</Код>
						<Наименование>НП_АмортГруппа4_ниже15проц --&gt; НП_АмортГруппа4_ниж</Наименование>
						<Порядок>8350</Порядок>
						<Источник>НП_АмортГруппа4_ниже15проц</Источник>
						<Приемник>НП_АмортГруппа4_ниже15проц</Приемник>
					</Значение>
					<Значение>
						<Код>168</Код>
						<Наименование>НП_АмортНМА --&gt; НП_АмортНМА</Наименование>
						<Порядок>8400</Порядок>
						<Источник>НП_АмортНМА</Источник>
						<Приемник>НП_АмортНМА</Приемник>
					</Значение>
					<Значение>
						<Код>169</Код>
						<Наименование>НП_ДругиеВД --&gt; НП_ДругиеВД</Наименование>
						<Порядок>8450</Порядок>
						<Источник>НП_ДругиеВД</Источник>
						<Приемник>НП_ДругиеВД</Приемник>
					</Значение>
					<Значение>
						<Код>170</Код>
						<Наименование>НП_ДругиеВидыСтрахования --&gt; НП_ДругиеВидыСтрахова</Наименование>
						<Порядок>8500</Порядок>
						<Источник>НП_ДругиеВидыСтрахования</Источник>
						<Приемник>НП_ДругиеВидыСтрахования</Приемник>
					</Значение>
					<Значение>
						<Код>171</Код>
						<Наименование>НП_ДругиеВР --&gt; НП_ДругиеВР</Наименование>
						<Порядок>8550</Порядок>
						<Источник>НП_ДругиеВР</Источник>
						<Приемник>НП_ДругиеВР</Приемник>
					</Значение>
					<Значение>
						<Код>172</Код>
						<Наименование>НП_ДругиеВР_ --&gt; НП_ДругиеВР_</Наименование>
						<Порядок>8600</Порядок>
						<Источник>НП_ДругиеВР_</Источник>
						<Приемник>НП_ДругиеВР_</Приемник>
					</Значение>
					<Значение>
						<Код>173</Код>
						<Наименование>НП_ДругиеВР_ГарантийныйРемонтОбслуживание --&gt; НП_Д</Наименование>
						<Порядок>8650</Порядок>
						<Источник>НП_ДругиеВР_ГарантийныйРемонтОбслуживание</Источник>
						<Приемник>НП_ДругиеВР_ГарантийныйРемонтОбслуживание</Приемник>
					</Значение>
					<Значение>
						<Код>174</Код>
						<Наименование>НП_ДругиеВР_РекламныеМероприятия --&gt; НП_ДругиеВР_Р</Наименование>
						<Порядок>8700</Порядок>
						<Источник>НП_ДругиеВР_РекламныеМероприятия</Источник>
						<Приемник>НП_ДругиеВР_РекламныеМероприятия</Приемник>
					</Значение>
					<Значение>
						<Код>175</Код>
						<Наименование>НП_ДругиеВР_Страхование --&gt; НП_ДругиеВР_Страховани</Наименование>
						<Порядок>8750</Порядок>
						<Источник>НП_ДругиеВР_Страхование</Источник>
						<Приемник>НП_ДругиеВР_Страхование</Приемник>
					</Значение>
					<Значение>
						<Код>176</Код>
						<Наименование>НП_ДругиеВР_СуточныеБезПитания --&gt; НП_ДругиеВР_Сут</Наименование>
						<Порядок>8800</Порядок>
						<Источник>НП_ДругиеВР_СуточныеБезПитания</Источник>
						<Приемник>НП_ДругиеВР_СуточныеБезПитания</Приемник>
					</Значение>
					<Значение>
						<Код>177</Код>
						<Наименование>НП_ДругиеВР_СуточныеДвухразовое --&gt; НП_ДругиеВР_Су</Наименование>
						<Порядок>8850</Порядок>
						<Источник>НП_ДругиеВР_СуточныеДвухразовое</Источник>
						<Приемник>НП_ДругиеВР_СуточныеДвухразовое</Приемник>
					</Значение>
					<Значение>
						<Код>178</Код>
						<Наименование>НП_ДругиеВР_СуточныеОдноразовое --&gt; НП_ДругиеВР_Су</Наименование>
						<Порядок>8900</Порядок>
						<Источник>НП_ДругиеВР_СуточныеОдноразовое</Источник>
						<Приемник>НП_ДругиеВР_СуточныеОдноразовое</Приемник>
					</Значение>
					<Значение>
						<Код>179</Код>
						<Наименование>НП_ДругиеВР_СуточныеТрехразовое --&gt; НП_ДругиеВР_Су</Наименование>
						<Порядок>8950</Порядок>
						<Источник>НП_ДругиеВР_СуточныеТрехразовое</Источник>
						<Приемник>НП_ДругиеВР_СуточныеТрехразовое</Приемник>
					</Значение>
					<Значение>
						<Код>180</Код>
						<Наименование>НП_К1_1_ --&gt; НП_К1_1_</Наименование>
						<Порядок>9000</Порядок>
						<Источник>НП_К1_1_</Источник>
						<Приемник>НП_К1_1_</Приемник>
					</Значение>
					<Значение>
						<Код>181</Код>
						<Наименование>НП_К1_1_Оборудование --&gt; НП_К1_1_Оборудование</Наименование>
						<Порядок>9050</Порядок>
						<Источник>НП_К1_1_Оборудование</Источник>
						<Приемник>НП_К1_1_Оборудование</Приемник>
					</Значение>
					<Значение>
						<Код>182</Код>
						<Наименование>НП_К1_1ГотовПрод --&gt; НП_К1_1ГотовПрод</Наименование>
						<Порядок>9100</Порядок>
						<Источник>НП_К1_1ГотовПрод</Источник>
						<Приемник>НП_К1_1ГотовПрод</Приемник>
					</Значение>
					<Значение>
						<Код>183</Код>
						<Наименование>НП_К1_1Материалы --&gt; НП_К1_1Материалы</Наименование>
						<Порядок>9150</Порядок>
						<Источник>НП_К1_1Материалы</Источник>
						<Приемник>НП_К1_1Материалы</Приемник>
					</Значение>
					<Значение>
						<Код>184</Код>
						<Наименование>НП_К1_1МБП --&gt; НП_К1_1МБП</Наименование>
						<Порядок>9200</Порядок>
						<Источник>НП_К1_1МБП</Источник>
						<Приемник>НП_К1_1МБП</Приемник>
					</Значение>
					<Значение>
						<Код>185</Код>
						<Наименование>НП_К1_1НезавершПрво --&gt; НП_К1_1НезавершПрво</Наименование>
						<Порядок>9250</Порядок>
						<Источник>НП_К1_1НезавершПрво</Источник>
						<Приемник>НП_К1_1НезавершПрво</Приемник>
					</Значение>
					<Значение>
						<Код>186</Код>
						<Наименование>НП_К1_1ОСкакЗапасы --&gt; НП_К1_1ОСкакЗапасы</Наименование>
						<Порядок>9300</Порядок>
						<Источник>НП_К1_1ОСкакЗапасы</Источник>
						<Приемник>НП_К1_1ОСкакЗапасы</Приемник>
					</Значение>
					<Значение>
						<Код>187</Код>
						<Наименование>НП_К1_1ТоварыОпт --&gt; НП_К1_1ТоварыОпт</Наименование>
						<Порядок>9350</Порядок>
						<Источник>НП_К1_1ТоварыОпт</Источник>
						<Приемник>НП_К1_1ТоварыОпт</Приемник>
					</Значение>
					<Значение>
						<Код>188</Код>
						<Наименование>НП_К1_1ТоварыРозн --&gt; НП_К1_1ТоварыРозн</Наименование>
						<Порядок>9400</Порядок>
						<Источник>НП_К1_1ТоварыРозн</Источник>
						<Приемник>НП_К1_1ТоварыРозн</Приемник>
					</Значение>
					<Значение>
						<Код>189</Код>
						<Наименование>НП_К2_ --&gt; НП_К2_</Наименование>
						<Порядок>9450</Порядок>
						<Источник>НП_К2_</Источник>
						<Приемник>НП_К2_</Приемник>
					</Значение>
					<Значение>
						<Код>190</Код>
						<Наименование>НП_К2ВыполнениеДД --&gt; НП_К2ВыполнениеДД</Наименование>
						<Порядок>9500</Порядок>
						<Источник>НП_К2ВыполнениеДД</Источник>
						<Приемник>НП_К2ВыполнениеДД</Приемник>
					</Значение>
					<Значение>
						<Код>191</Код>
						<Наименование>НП_К2ДоходПерерасчетНО --&gt; НП_К2ДоходПерерасчетНО</Наименование>
						<Порядок>9550</Порядок>
						<Источник>НП_К2ДоходПерерасчетНО</Источник>
						<Приемник>НП_К2ДоходПерерасчетНО</Приемник>
					</Значение>
					<Значение>
						<Код>192</Код>
						<Наименование>НП_К3_ --&gt; НП_К3_</Наименование>
						<Порядок>9600</Порядок>
						<Источник>НП_К3_</Источник>
						<Приемник>НП_К3_</Приемник>
					</Значение>
					<Значение>
						<Код>193</Код>
						<Наименование>НП_К3Акции --&gt; НП_К3Акции</Наименование>
						<Порядок>9650</Порядок>
						<Источник>НП_К3Акции</Источник>
						<Приемник>НП_К3Акции</Приемник>
					</Значение>
					<Значение>
						<Код>194</Код>
						<Наименование>НП_К3Векселя --&gt; НП_К3Векселя</Наименование>
						<Порядок>9700</Порядок>
						<Источник>НП_К3Векселя</Источник>
						<Приемник>НП_К3Векселя</Приемник>
					</Значение>
					<Значение>
						<Код>195</Код>
						<Наименование>НП_К3Деривативы --&gt; НП_К3Деривативы</Наименование>
						<Порядок>9750</Порядок>
						<Источник>НП_К3Деривативы</Источник>
						<Приемник>НП_К3Деривативы</Приемник>
					</Значение>
					<Значение>
						<Код>196</Код>
						<Наименование>НП_К3Другое --&gt; НП_К3Другое</Наименование>
						<Порядок>9800</Порядок>
						<Источник>НП_К3Другое</Источник>
						<Приемник>НП_К3Другое</Приемник>
					</Значение>
					<Значение>
						<Код>197</Код>
						<Наименование>НП_К3ИпотечныеСертификаты --&gt; НП_К3ИпотечныеСертиф</Наименование>
						<Порядок>9850</Порядок>
						<Источник>НП_К3ИпотечныеСертификаты</Источник>
						<Приемник>НП_К3ИпотечныеСертификаты</Приемник>
					</Значение>
					<Значение>
						<Код>198</Код>
						<Наименование>НП_К3Облигации --&gt; НП_К3Облигации</Наименование>
						<Порядок>9900</Порядок>
						<Источник>НП_К3Облигации</Источник>
						<Приемник>НП_К3Облигации</Приемник>
					</Значение>
					<Значение>
						<Код>199</Код>
						<Наименование>НП_К3СертификатыФондов --&gt; НП_К3СертификатыФондов</Наименование>
						<Порядок>9950</Порядок>
						<Источник>НП_К3СертификатыФондов</Источник>
						<Приемник>НП_К3СертификатыФондов</Приемник>
					</Значение>
					<Значение>
						<Код>200</Код>
						<Наименование>НП_К6_ --&gt; НП_К6_</Наименование>
						<Порядок>10000</Порядок>
						<Источник>НП_К6_</Источник>
						<Приемник>НП_К6_</Приемник>
					</Значение>
					<Значение>
						<Код>201</Код>
						<Наименование>НП_К6КонсолНалог --&gt; НП_К6КонсолНалог</Наименование>
						<Порядок>10050</Порядок>
						<Источник>НП_К6КонсолНалог</Источник>
						<Приемник>НП_К6КонсолНалог</Приемник>
					</Значение>
					<Значение>
						<Код>202</Код>
						<Наименование>НП_К6ПассПрибыльЗаРубежом --&gt; НП_К6ПассПрибыльЗаРу</Наименование>
						<Порядок>10100</Порядок>
						<Источник>НП_К6ПассПрибыльЗаРубежом</Источник>
						<Приемник>НП_К6ПассПрибыльЗаРубежом</Приемник>
					</Значение>
					<Значение>
						<Код>203</Код>
						<Наименование>НП_К6ПрибыльЗаРубежом --&gt; НП_К6ПрибыльЗаРубежом</Наименование>
						<Порядок>10150</Порядок>
						<Источник>НП_К6ПрибыльЗаРубежом</Источник>
						<Приемник>НП_К6ПрибыльЗаРубежом</Приемник>
					</Значение>
					<Значение>
						<Код>204</Код>
						<Наименование>НП_К6ТоргПатентБытовыеУслуги --&gt; НП_К6ТоргПатентБы</Наименование>
						<Порядок>10200</Порядок>
						<Источник>НП_К6ТоргПатентБытовыеУслуги</Источник>
						<Приемник>НП_К6ТоргПатентБытовыеУслуги</Приемник>
					</Значение>
					<Значение>
						<Код>205</Код>
						<Наименование>НП_К6ТоргПатентВалюта --&gt; НП_К6ТоргПатентВалюта</Наименование>
						<Порядок>10250</Порядок>
						<Источник>НП_К6ТоргПатентВалюта</Источник>
						<Приемник>НП_К6ТоргПатентВалюта</Приемник>
					</Значение>
					<Значение>
						<Код>206</Код>
						<Наименование>НП_К6ТоргПатентГоловн --&gt; НП_К6ТоргПатентГоловн</Наименование>
						<Порядок>10300</Порядок>
						<Источник>НП_К6ТоргПатентГоловн</Источник>
						<Приемник>НП_К6ТоргПатентГоловн</Приемник>
					</Значение>
					<Значение>
						<Код>207</Код>
						<Наименование>НП_К6ТоргПатентИгорныйБизнес --&gt; НП_К6ТоргПатентИг</Наименование>
						<Порядок>10350</Порядок>
						<Источник>НП_К6ТоргПатентИгорныйБизнес</Источник>
						<Приемник>НП_К6ТоргПатентИгорныйБизнес</Приемник>
					</Значение>
					<Значение>
						<Код>208</Код>
						<Наименование>НП_К6ТоргПатентПунктПродаж --&gt; НП_К6ТоргПатентПунк</Наименование>
						<Порядок>10400</Порядок>
						<Источник>НП_К6ТоргПатентПунктПродаж</Источник>
						<Приемник>НП_К6ТоргПатентПунктПродаж</Приемник>
					</Значение>
					<Значение>
						<Код>209</Код>
						<Наименование>НП_К6ТоргПатентРозница --&gt; НП_К6ТоргПатентРозница</Наименование>
						<Порядок>10450</Порядок>
						<Источник>НП_К6ТоргПатентРозница</Источник>
						<Приемник>НП_К6ТоргПатентРозница</Приемник>
					</Значение>
					<Значение>
						<Код>210</Код>
						<Наименование>НП_К6ТоргПатентФилиал --&gt; НП_К6ТоргПатентФилиал</Наименование>
						<Порядок>10500</Порядок>
						<Источник>НП_К6ТоргПатентФилиал</Источник>
						<Приемник>НП_К6ТоргПатентФилиал</Приемник>
					</Значение>
					<Значение>
						<Код>211</Код>
						<Наименование>НП_К6УплНалогНаДив --&gt; НП_К6УплНалогНаДив</Наименование>
						<Порядок>10550</Порядок>
						<Источник>НП_К6УплНалогНаДив</Источник>
						<Приемник>НП_К6УплНалогНаДив</Приемник>
					</Значение>
					<Значение>
						<Код>212</Код>
						<Наименование>НП_КорректировкаВД_ --&gt; НП_КорректировкаВД_</Наименование>
						<Порядок>10600</Порядок>
						<Источник>НП_КорректировкаВД_</Источник>
						<Приемник>НП_КорректировкаВД_</Приемник>
					</Значение>
					<Значение>
						<Код>213</Код>
						<Наименование>НП_КорректировкаВДВРОшибки --&gt; НП_КорректировкаВДВ</Наименование>
						<Порядок>10650</Порядок>
						<Источник>НП_КорректировкаВДВРОшибки</Источник>
						<Приемник>НП_КорректировкаВДВРОшибки</Приемник>
					</Значение>
					<Значение>
						<Код>214</Код>
						<Наименование>НП_КорректировкаВДВРСуммаКомпенсТов --&gt; НП_Коррект</Наименование>
						<Порядок>10700</Порядок>
						<Источник>НП_КорректировкаВДВРСуммаКомпенсТов</Источник>
						<Приемник>НП_КорректировкаВДВРСуммаКомпенсТов</Приемник>
					</Значение>
					<Значение>
						<Код>215</Код>
						<Наименование>НП_КорректировкаВДВРУрегСомнитЗадолж --&gt; НП_Коррек</Наименование>
						<Порядок>10750</Порядок>
						<Источник>НП_КорректировкаВДВРУрегСомнитЗадолж</Источник>
						<Приемник>НП_КорректировкаВДВРУрегСомнитЗадолж</Приемник>
					</Значение>
					<Значение>
						<Код>216</Код>
						<Наименование>НП_КорректировкаВР_ --&gt; НП_КорректировкаВР_</Наименование>
						<Порядок>10800</Порядок>
						<Источник>НП_КорректировкаВР_</Источник>
						<Приемник>НП_КорректировкаВР_</Приемник>
					</Значение>
					<Значение>
						<Код>217</Код>
						<Наименование>НП_Модернизация --&gt; НП_Модернизация</Наименование>
						<Порядок>10850</Порядок>
						<Источник>НП_Модернизация</Источник>
						<Приемник>НП_Модернизация</Приемник>
					</Значение>
					<Значение>
						<Код>218</Код>
						<Наименование>НП_НачислениеУплатаНалога --&gt; НП_НачислениеУплатаН</Наименование>
						<Порядок>10900</Порядок>
						<Источник>НП_НачислениеУплатаНалога</Источник>
						<Приемник>НП_НачислениеУплатаНалога</Приемник>
					</Значение>
					<Значение>
						<Код>219</Код>
						<Наименование>НП_ОбязательноеСтраховние --&gt; НП_ОбязательноеСтрах</Наименование>
						<Порядок>10950</Порядок>
						<Источник>НП_ОбязательноеСтраховние</Источник>
						<Приемник>НП_ОбязательноеСтраховние</Приемник>
					</Значение>
					<Значение>
						<Код>220</Код>
						<Наименование>НП_ПеняСомнитЗадолж --&gt; НП_ПеняСомнитЗадолж</Наименование>
						<Порядок>11000</Порядок>
						<Источник>НП_ПеняСомнитЗадолж</Источник>
						<Приемник>НП_ПеняСомнитЗадолж</Приемник>
					</Значение>
					<Значение>
						<Код>221</Код>
						<Наименование>НП_ПокупЗемли --&gt; НП_ПокупЗемли</Наименование>
						<Порядок>11050</Порядок>
						<Источник>НП_ПокупЗемли</Источник>
						<Приемник>НП_ПокупЗемли</Приемник>
					</Значение>
					<Значение>
						<Код>222</Код>
						<Наименование>НП_ПокупТовар --&gt; НП_ПокупТовар</Наименование>
						<Порядок>11100</Порядок>
						<Источник>НП_ПокупТовар</Источник>
						<Приемник>НП_ПокупТовар</Приемник>
					</Значение>
					<Значение>
						<Код>223</Код>
						<Наименование>НП_ПокупТовар_ --&gt; НП_ПокупТовар_</Наименование>
						<Порядок>11150</Порядок>
						<Источник>НП_ПокупТовар_</Источник>
						<Приемник>НП_ПокупТовар_</Приемник>
					</Значение>
					<Значение>
						<Код>224</Код>
						<Наименование>НП_ПокупТовар_ГСМиАрендаЛегковых --&gt; НП_ПокупТовар</Наименование>
						<Порядок>11200</Порядок>
						<Источник>НП_ПокупТовар_ГСМиАрендаЛегковых</Источник>
						<Приемник>НП_ПокупТовар_ГСМиАрендаЛегковых</Приемник>
					</Значение>
					<Значение>
						<Код>225</Код>
						<Наименование>НП_ПродажЗемли --&gt; НП_ПродажЗемли</Наименование>
						<Порядок>11250</Порядок>
						<Источник>НП_ПродажЗемли</Источник>
						<Приемник>НП_ПродажЗемли</Приемник>
					</Значение>
					<Значение>
						<Код>226</Код>
						<Наименование>НП_ПродажТовар --&gt; НП_ПродажТовар</Наименование>
						<Порядок>11300</Порядок>
						<Источник>НП_ПродажТовар</Источник>
						<Приемник>НП_ПродажТовар</Приемник>
					</Значение>
					<Значение>
						<Код>227</Код>
						<Наименование>НП_Р1_ --&gt; НП_Р1_</Наименование>
						<Порядок>11350</Порядок>
						<Источник>НП_Р1_</Источник>
						<Приемник>НП_Р1_</Приемник>
					</Значение>
					<Значение>
						<Код>228</Код>
						<Наименование>НП_Р1ДопПенсСтрах --&gt; НП_Р1ДопПенсСтрах</Наименование>
						<Порядок>11400</Порядок>
						<Источник>НП_Р1ДопПенсСтрах</Источник>
						<Приемник>НП_Р1ДопПенсСтрах</Приемник>
					</Значение>
					<Значение>
						<Код>229</Код>
						<Наименование>НП_Р1ДоходДосрПрекрДогСтрахЖ --&gt; НП_Р1ДоходДосрПре</Наименование>
						<Порядок>11450</Порядок>
						<Источник>НП_Р1ДоходДосрПрекрДогСтрахЖ</Источник>
						<Приемник>НП_Р1ДоходДосрПрекрДогСтрахЖ</Приемник>
					</Значение>
					<Значение>
						<Код>230</Код>
						<Наименование>НП_Р1СтрахованиеЖизни --&gt; НП_Р1СтрахованиеЖизни</Наименование>
						<Порядок>11500</Порядок>
						<Источник>НП_Р1СтрахованиеЖизни</Источник>
						<Приемник>НП_Р1СтрахованиеЖизни</Приемник>
					</Значение>
					<Значение>
						<Код>231</Код>
						<Наименование>НП_Р2_ --&gt; НП_Р2_</Наименование>
						<Порядок>11550</Порядок>
						<Источник>НП_Р2_</Источник>
						<Приемник>НП_Р2_</Приемник>
					</Значение>
					<Значение>
						<Код>232</Код>
						<Наименование>НП_Р2Акциз --&gt; НП_Р2Акциз</Наименование>
						<Порядок>11600</Порядок>
						<Источник>НП_Р2Акциз</Источник>
						<Приемник>НП_Р2Акциз</Приемник>
					</Значение>
					<Значение>
						<Код>233</Код>
						<Наименование>НП_Р2Аукцион --&gt; НП_Р2Аукцион</Наименование>
						<Порядок>11650</Порядок>
						<Источник>НП_Р2Аукцион</Источник>
						<Приемник>НП_Р2Аукцион</Приемник>
					</Значение>
					<Значение>
						<Код>234</Код>
						<Наименование>НП_Р2Виноград --&gt; НП_Р2Виноград</Наименование>
						<Порядок>11700</Порядок>
						<Источник>НП_Р2Виноград</Источник>
						<Приемник>НП_Р2Виноград</Приемник>
					</Значение>
					<Значение>
						<Код>235</Код>
						<Наименование>НП_Р2Геолог --&gt; НП_Р2Геолог</Наименование>
						<Порядок>11750</Порядок>
						<Источник>НП_Р2Геолог</Источник>
						<Приемник>НП_Р2Геолог</Приемник>
					</Значение>
					<Значение>
						<Код>236</Код>
						<Наименование>НП_Р2ГосПошлина --&gt; НП_Р2ГосПошлина</Наименование>
						<Порядок>11800</Порядок>
						<Источник>НП_Р2ГосПошлина</Источник>
						<Приемник>НП_Р2ГосПошлина</Приемник>
					</Значение>
					<Значение>
						<Код>237</Код>
						<Наименование>НП_Р2ЗагрязнОкрСр --&gt; НП_Р2ЗагрязнОкрСр</Наименование>
						<Порядок>11850</Порядок>
						<Источник>НП_Р2ЗагрязнОкрСр</Источник>
						<Приемник>НП_Р2ЗагрязнОкрСр</Приемник>
					</Значение>
					<Значение>
						<Код>238</Код>
						<Наименование>НП_Р2Земля --&gt; НП_Р2Земля</Наименование>
						<Порядок>11900</Порядок>
						<Источник>НП_Р2Земля</Источник>
						<Приемник>НП_Р2Земля</Приемник>
					</Значение>
					<Значение>
						<Код>239</Код>
						<Наименование>НП_Р2КиноТеле --&gt; НП_Р2КиноТеле</Наименование>
						<Порядок>11950</Порядок>
						<Источник>НП_Р2КиноТеле</Источник>
						<Приемник>НП_Р2КиноТеле</Приемник>
					</Значение>
					<Значение>
						<Код>240</Код>
						<Наименование>НП_Р2Коммунальный --&gt; НП_Р2Коммунальный</Наименование>
						<Порядок>12000</Порядок>
						<Источник>НП_Р2Коммунальный</Источник>
						<Приемник>НП_Р2Коммунальный</Приемник>
					</Значение>
					<Значение>
						<Код>241</Код>
						<Наименование>НП_Р2МестнСимв --&gt; НП_Р2МестнСимв</Наименование>
						<Порядок>12050</Порядок>
						<Источник>НП_Р2МестнСимв</Источник>
						<Приемник>НП_Р2МестнСимв</Приемник>
					</Значение>
					<Значение>
						<Код>242</Код>
						<Наименование>НП_Р2Недвиж --&gt; НП_Р2Недвиж</Наименование>
						<Порядок>12100</Порядок>
						<Источник>НП_Р2Недвиж</Источник>
						<Приемник>НП_Р2Недвиж</Приемник>
					</Значение>
					<Значение>
						<Код>243</Код>
						<Наименование>НП_Р2ПограничСбор --&gt; НП_Р2ПограничСбор</Наименование>
						<Порядок>12150</Порядок>
						<Источник>НП_Р2ПограничСбор</Источник>
						<Приемник>НП_Р2ПограничСбор</Приемник>
					</Значение>
					<Значение>
						<Код>244</Код>
						<Наименование>НП_Р2Пошлина --&gt; НП_Р2Пошлина</Наименование>
						<Порядок>12200</Порядок>
						<Источник>НП_Р2Пошлина</Источник>
						<Приемник>НП_Р2Пошлина</Приемник>
					</Значение>
					<Значение>
						<Код>245</Код>
						<Наименование>НП_Р2ПроездПогранОбл --&gt; НП_Р2ПроездПогранОбл</Наименование>
						<Порядок>12250</Порядок>
						<Источник>НП_Р2ПроездПогранОбл</Источник>
						<Приемник>НП_Р2ПроездПогранОбл</Приемник>
					</Значение>
					<Значение>
						<Код>246</Код>
						<Наименование>НП_Р2ПФВалют --&gt; НП_Р2ПФВалют</Наименование>
						<Порядок>12300</Порядок>
						<Источник>НП_Р2ПФВалют</Источник>
						<Приемник>НП_Р2ПФВалют</Приемник>
					</Значение>
					<Значение>
						<Код>247</Код>
						<Наименование>НП_Р2ПФЛегкАвто --&gt; НП_Р2ПФЛегкАвто</Наименование>
						<Порядок>12350</Порядок>
						<Источник>НП_Р2ПФЛегкАвто</Источник>
						<Приемник>НП_Р2ПФЛегкАвто</Приемник>
					</Значение>
					<Значение>
						<Код>248</Код>
						<Наименование>НП_Р2ПФМобил --&gt; НП_Р2ПФМобил</Наименование>
						<Порядок>12400</Порядок>
						<Источник>НП_Р2ПФМобил</Источник>
						<Приемник>НП_Р2ПФМобил</Приемник>
					</Значение>
					<Значение>
						<Код>249</Код>
						<Наименование>НП_Р2ПФНедвиж --&gt; НП_Р2ПФНедвиж</Наименование>
						<Порядок>12450</Порядок>
						<Источник>НП_Р2ПФНедвиж</Источник>
						<Приемник>НП_Р2ПФНедвиж</Приемник>
					</Значение>
					<Значение>
						<Код>250</Код>
						<Наименование>НП_Р2ПФТабачн --&gt; НП_Р2ПФТабачн</Наименование>
						<Порядок>12500</Порядок>
						<Источник>НП_Р2ПФТабачн</Источник>
						<Приемник>НП_Р2ПФТабачн</Приемник>
					</Значение>
					<Значение>
						<Код>251</Код>
						<Наименование>НП_Р2ПФЮвелир --&gt; НП_Р2ПФЮвелир</Наименование>
						<Порядок>12550</Порядок>
						<Источник>НП_Р2ПФЮвелир</Источник>
						<Приемник>НП_Р2ПФЮвелир</Приемник>
					</Значение>
					<Значение>
						<Код>252</Код>
						<Наименование>НП_Р2РадиочастотРесурс --&gt; НП_Р2РадиочастотРесурс</Наименование>
						<Порядок>12600</Порядок>
						<Источник>НП_Р2РадиочастотРесурс</Источник>
						<Приемник>НП_Р2РадиочастотРесурс</Приемник>
					</Значение>
					<Значение>
						<Код>253</Код>
						<Наименование>НП_Р2РазрРазмОбТорг --&gt; НП_Р2РазрРазмОбТорг</Наименование>
						<Порядок>12650</Порядок>
						<Источник>НП_Р2РазрРазмОбТорг</Источник>
						<Приемник>НП_Р2РазрРазмОбТорг</Приемник>
					</Значение>
					<Значение>
						<Код>254</Код>
						<Наименование>НП_Р2Реклама --&gt; НП_Р2Реклама</Наименование>
						<Порядок>12700</Порядок>
						<Источник>НП_Р2Реклама</Источник>
						<Приемник>НП_Р2Реклама</Приемник>
					</Значение>
					<Значение>
						<Код>255</Код>
						<Наименование>НП_Р2Рентные --&gt; НП_Р2Рентные</Наименование>
						<Порядок>12750</Порядок>
						<Источник>НП_Р2Рентные</Источник>
						<Приемник>НП_Р2Рентные</Приемник>
					</Значение>
					<Значение>
						<Код>256</Код>
						<Наименование>НП_Р2Рыночный --&gt; НП_Р2Рыночный</Наименование>
						<Порядок>12800</Порядок>
						<Источник>НП_Р2Рыночный</Источник>
						<Приемник>НП_Р2Рыночный</Приемник>
					</Значение>
					<Значение>
						<Код>257</Код>
						<Наименование>НП_Р2СборПроведГастролей --&gt; НП_Р2СборПроведГастро</Наименование>
						<Порядок>12850</Порядок>
						<Источник>НП_Р2СборПроведГастролей</Источник>
						<Приемник>НП_Р2СборПроведГастролей</Приемник>
					</Значение>
					<Значение>
						<Код>258</Код>
						<Наименование>НП_Р2СпецИспПрирод --&gt; НП_Р2СпецИспПрирод</Наименование>
						<Порядок>12900</Порядок>
						<Источник>НП_Р2СпецИспПрирод</Источник>
						<Приемник>НП_Р2СпецИспПрирод</Приемник>
					</Значение>
					<Значение>
						<Код>259</Код>
						<Наименование>НП_Р2СудовойСбор --&gt; НП_Р2СудовойСбор</Наименование>
						<Порядок>12950</Порядок>
						<Источник>НП_Р2СудовойСбор</Источник>
						<Приемник>НП_Р2СудовойСбор</Приемник>
					</Значение>
					<Значение>
						<Код>260</Код>
						<Наименование>НП_Р2ТранспортСр --&gt; НП_Р2ТранспортСр</Наименование>
						<Порядок>13000</Порядок>
						<Источник>НП_Р2ТранспортСр</Источник>
						<Приемник>НП_Р2ТранспортСр</Приемник>
					</Значение>
					<Значение>
						<Код>261</Код>
						<Наименование>НП_Р2ЦелНадбГаз --&gt; НП_Р2ЦелНадбГаз</Наименование>
						<Порядок>13050</Порядок>
						<Источник>НП_Р2ЦелНадбГаз</Источник>
						<Приемник>НП_Р2ЦелНадбГаз</Приемник>
					</Значение>
					<Значение>
						<Код>262</Код>
						<Наименование>НП_Р2ЦелНадбЭлектроэнергия --&gt; НП_Р2ЦелНадбЭлектро</Наименование>
						<Порядок>13100</Порядок>
						<Источник>НП_Р2ЦелНадбЭлектроэнергия</Источник>
						<Приемник>НП_Р2ЦелНадбЭлектроэнергия</Приемник>
					</Значение>
					<Значение>
						<Код>263</Код>
						<Наименование>НП_Р3 --&gt; НП_Р3</Наименование>
						<Порядок>13150</Порядок>
						<Источник>НП_Р3</Источник>
						<Приемник>НП_Р3</Приемник>
					</Значение>
					<Значение>
						<Код>264</Код>
						<Наименование>НП_Р3МестнБюдж --&gt; НП_Р3МестнБюдж</Наименование>
						<Порядок>13200</Порядок>
						<Источник>НП_Р3МестнБюдж</Источник>
						<Приемник>НП_Р3МестнБюдж</Приемник>
					</Значение>
					<Значение>
						<Код>265</Код>
						<Наименование>НП_Р3НаукаКультура --&gt; НП_Р3НаукаКультура</Наименование>
						<Порядок>13250</Порядок>
						<Источник>НП_Р3НаукаКультура</Источник>
						<Приемник>НП_Р3НаукаКультура</Приемник>
					</Значение>
					<Значение>
						<Код>266</Код>
						<Наименование>НП_Р3ОргИнвалид --&gt; НП_Р3ОргИнвалид</Наименование>
						<Порядок>13300</Порядок>
						<Источник>НП_Р3ОргИнвалид</Источник>
						<Приемник>НП_Р3ОргИнвалид</Приемник>
					</Значение>
					<Значение>
						<Код>267</Код>
						<Наименование>НП_Р3ОргНеприбыль --&gt; НП_Р3ОргНеприбыль</Наименование>
						<Порядок>13350</Порядок>
						<Источник>НП_Р3ОргНеприбыль</Источник>
						<Приемник>НП_Р3ОргНеприбыль</Приемник>
					</Значение>
					<Значение>
						<Код>268</Код>
						<Наименование>НП_Р3ОргРаботодат --&gt; НП_Р3ОргРаботодат</Наименование>
						<Порядок>13400</Порядок>
						<Источник>НП_Р3ОргРаботодат</Источник>
						<Приемник>НП_Р3ОргРаботодат</Приемник>
					</Значение>
					<Значение>
						<Код>269</Код>
						<Наименование>НП_Р3Уголь --&gt; НП_Р3Уголь</Наименование>
						<Порядок>13450</Порядок>
						<Источник>НП_Р3Уголь</Источник>
						<Приемник>НП_Р3Уголь</Приемник>
					</Значение>
					<Значение>
						<Код>270</Код>
						<Наименование>НП_Р3Чернобыль --&gt; НП_Р3Чернобыль</Наименование>
						<Порядок>13500</Порядок>
						<Источник>НП_Р3Чернобыль</Источник>
						<Приемник>НП_Р3Чернобыль</Приемник>
					</Значение>
					<Значение>
						<Код>271</Код>
						<Наименование>НП_РасходыПоОплатеТруда --&gt; НП_РасходыПоОплатеТруд</Наименование>
						<Порядок>13550</Порядок>
						<Источник>НП_РасходыПоОплатеТруда</Источник>
						<Приемник>НП_РасходыПоОплатеТруда</Приемник>
					</Значение>
					<Значение>
						<Код>272</Код>
						<Наименование>НП_СборыФСС --&gt; НП_СборыФСС</Наименование>
						<Порядок>13600</Порядок>
						<Источник>НП_СборыФСС</Источник>
						<Приемник>НП_СборыФСС</Приемник>
					</Значение>
					<Значение>
						<Код>273</Код>
						<Наименование>НП_УлучшениеОФ --&gt; НП_УлучшениеОФ</Наименование>
						<Порядок>13650</Порядок>
						<Источник>НП_УлучшениеОФ</Источник>
						<Приемник>НП_УлучшениеОФ</Приемник>
					</Значение>
					<Значение>
						<Код>274</Код>
						<Наименование>НП15_ --&gt; НП15_</Наименование>
						<Порядок>13700</Порядок>
						<Источник>НП15_</Источник>
						<Приемник>НП15_</Приемник>
					</Значение>
					<Значение>
						<Код>275</Код>
						<Наименование>НП15_ЗП_Аванс --&gt; НП15_ЗП_Аванс</Наименование>
						<Порядок>13750</Порядок>
						<Источник>НП15_ЗП_Аванс</Источник>
						<Приемник>НП15_ЗП_Аванс</Приемник>
					</Значение>
					<Значение>
						<Код>276</Код>
						<Наименование>НП15_ЗП_АвансПриВыплатеДивидентов --&gt; НП15_ЗП_Аван</Наименование>
						<Порядок>13800</Порядок>
						<Источник>НП15_ЗП_АвансПриВыплатеДивидентов</Источник>
						<Приемник>НП15_ЗП_АвансПриВыплатеДивидентов</Приемник>
					</Значение>
					<Значение>
						<Код>277</Код>
						<Наименование>НП15_ПЗ_ --&gt; НП15_ПЗ_</Наименование>
						<Порядок>13850</Порядок>
						<Источник>НП15_ПЗ_</Источник>
						<Приемник>НП15_ПЗ_</Приемник>
					</Значение>
					<Значение>
						<Код>278</Код>
						<Наименование>НП15_РИ_ --&gt; НП15_РИ_</Наименование>
						<Порядок>13900</Порядок>
						<Источник>НП15_РИ_</Источник>
						<Приемник>НП15_РИ_</Приемник>
					</Значение>
					<Значение>
						<Код>279</Код>
						<Наименование>НП15_РИ_АМ_ --&gt; НП15_РИ_АМ_</Наименование>
						<Порядок>13950</Порядок>
						<Источник>НП15_РИ_АМ_</Источник>
						<Приемник>НП15_РИ_АМ_</Приемник>
					</Значение>
					<Значение>
						<Код>280</Код>
						<Наименование>НП15_РИ_АМ_БУ --&gt; НП15_РИ_АМ_БУ</Наименование>
						<Порядок>14000</Порядок>
						<Источник>НП15_РИ_АМ_БУ</Источник>
						<Приемник>НП15_РИ_АМ_БУ</Приемник>
					</Значение>
					<Значение>
						<Код>281</Код>
						<Наименование>НП15_РИ_АМ_Дооценки --&gt; НП15_РИ_АМ_Дооценки</Наименование>
						<Порядок>14050</Порядок>
						<Источник>НП15_РИ_АМ_Дооценки</Источник>
						<Приемник>НП15_РИ_АМ_Дооценки</Приемник>
					</Значение>
					<Значение>
						<Код>282</Код>
						<Наименование>НП15_РИ_АМ_НУ --&gt; НП15_РИ_АМ_НУ</Наименование>
						<Порядок>14100</Порядок>
						<Источник>НП15_РИ_АМ_НУ</Источник>
						<Приемник>НП15_РИ_АМ_НУ</Приемник>
					</Значение>
					<Значение>
						<Код>283</Код>
						<Наименование>НП15_РИ_АМ_ОстаточБУ --&gt; НП15_РИ_АМ_ОстаточБУ</Наименование>
						<Порядок>14150</Порядок>
						<Источник>НП15_РИ_АМ_ОстаточБУ</Источник>
						<Приемник>НП15_РИ_АМ_ОстаточБУ</Приемник>
					</Значение>
					<Значение>
						<Код>284</Код>
						<Наименование>НП15_РИ_АМ_ОстаточНУ --&gt; НП15_РИ_АМ_ОстаточНУ</Наименование>
						<Порядок>14200</Порядок>
						<Источник>НП15_РИ_АМ_ОстаточНУ</Источник>
						<Приемник>НП15_РИ_АМ_ОстаточНУ</Приемник>
					</Значение>
					<Значение>
						<Код>285</Код>
						<Наименование>НП15_РИ_АМ_Уценки --&gt; НП15_РИ_АМ_Уценки</Наименование>
						<Порядок>14250</Порядок>
						<Источник>НП15_РИ_АМ_Уценки</Источник>
						<Приемник>НП15_РИ_АМ_Уценки</Приемник>
					</Значение>
					<Значение>
						<Код>286</Код>
						<Наименование>НП15_РИ_Др_ --&gt; НП15_РИ_Др_</Наименование>
						<Порядок>14300</Порядок>
						<Источник>НП15_РИ_Др_</Источник>
						<Приемник>НП15_РИ_Др_</Приемник>
					</Значение>
					<Значение>
						<Код>287</Код>
						<Наименование>НП15_РИ_Др_1_ --&gt; НП15_РИ_Др_1_</Наименование>
						<Порядок>14350</Порядок>
						<Источник>НП15_РИ_Др_1_</Источник>
						<Приемник>НП15_РИ_Др_1_</Приемник>
					</Значение>
					<Значение>
						<Код>288</Код>
						<Наименование>НП15_РИ_Др_1_ОбрДоход --&gt; НП15_РИ_Др_1_ОбрДоход</Наименование>
						<Порядок>14400</Порядок>
						<Источник>НП15_РИ_Др_1_ОбрДоход</Источник>
						<Приемник>НП15_РИ_Др_1_ОбрДоход</Приемник>
					</Значение>
					<Значение>
						<Код>289</Код>
						<Наименование>НП15_РИ_Др_1_ОбрЗатраты --&gt; НП15_РИ_Др_1_ОбрЗатрат</Наименование>
						<Порядок>14450</Порядок>
						<Источник>НП15_РИ_Др_1_ОбрЗатраты</Источник>
						<Приемник>НП15_РИ_Др_1_ОбрЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>290</Код>
						<Наименование>НП15_РИ_Др_1_ПропорцДоход --&gt; НП15_РИ_Др_1_Пропорц</Наименование>
						<Порядок>14500</Порядок>
						<Источник>НП15_РИ_Др_1_ПропорцДоход</Источник>
						<Приемник>НП15_РИ_Др_1_ПропорцДоход</Приемник>
					</Значение>
					<Значение>
						<Код>291</Код>
						<Наименование>НП15_РИ_Др_1_ПропорцЗатрат --&gt; НП15_РИ_Др_1_Пропор</Наименование>
						<Порядок>14550</Порядок>
						<Источник>НП15_РИ_Др_1_ПропорцЗатрат</Источник>
						<Приемник>НП15_РИ_Др_1_ПропорцЗатрат</Приемник>
					</Значение>
					<Значение>
						<Код>292</Код>
						<Наименование>НП15_РИ_Др_2_ --&gt; НП15_РИ_Др_2_</Наименование>
						<Порядок>14600</Порядок>
						<Источник>НП15_РИ_Др_2_</Источник>
						<Приемник>НП15_РИ_Др_2_</Приемник>
					</Значение>
					<Значение>
						<Код>293</Код>
						<Наименование>НП15_РИ_Др_2_Страховка --&gt; НП15_РИ_Др_2_Страховка</Наименование>
						<Порядок>14650</Порядок>
						<Источник>НП15_РИ_Др_2_Страховка</Источник>
						<Приемник>НП15_РИ_Др_2_Страховка</Приемник>
					</Значение>
					<Значение>
						<Код>294</Код>
						<Наименование>НП15_РИ_Др_3_ --&gt; НП15_РИ_Др_3_</Наименование>
						<Порядок>14700</Порядок>
						<Источник>НП15_РИ_Др_3_</Источник>
						<Приемник>НП15_РИ_Др_3_</Приемник>
					</Значение>
					<Значение>
						<Код>295</Код>
						<Наименование>НП15_РИ_Др_3_Страховик --&gt; НП15_РИ_Др_3_Страховик</Наименование>
						<Порядок>14750</Порядок>
						<Источник>НП15_РИ_Др_3_Страховик</Источник>
						<Приемник>НП15_РИ_Др_3_Страховик</Приемник>
					</Значение>
					<Значение>
						<Код>296</Код>
						<Наименование>НП15_РИ_Др_Переходные_ --&gt; НП15_РИ_Др_Переходные_</Наименование>
						<Порядок>14800</Порядок>
						<Источник>НП15_РИ_Др_Переходные_</Источник>
						<Приемник>НП15_РИ_Др_Переходные_</Приемник>
					</Значение>
					<Значение>
						<Код>297</Код>
						<Наименование>НП15_РИ_Др_Переходные_Задолженность --&gt; НП15_РИ_Др</Наименование>
						<Порядок>14850</Порядок>
						<Источник>НП15_РИ_Др_Переходные_Задолженность</Источник>
						<Приемник>НП15_РИ_Др_Переходные_Задолженность</Приемник>
					</Значение>
					<Значение>
						<Код>298</Код>
						<Наименование>НП15_РИ_Др_Переходные_ЗадолженностьДоход --&gt; НП15_</Наименование>
						<Порядок>14900</Порядок>
						<Источник>НП15_РИ_Др_Переходные_ЗадолженностьДоход</Источник>
						<Приемник>НП15_РИ_Др_Переходные_ЗадолженностьДоход</Приемник>
					</Значение>
					<Значение>
						<Код>299</Код>
						<Наименование>НП15_РИ_Др_Переходные_ЗадолженностьПогашПокупатель</Наименование>
						<Порядок>14950</Порядок>
						<Источник>НП15_РИ_Др_Переходные_ЗадолженностьПогашПокупатель</Источник>
						<Приемник>НП15_РИ_Др_Переходные_ЗадолженностьПогашПокупатель</Приемник>
					</Значение>
					<Значение>
						<Код>300</Код>
						<Наименование>НП15_РИ_Др_Переходные_ЗадолженностьПогашПродавец -</Наименование>
						<Порядок>15000</Порядок>
						<Источник>НП15_РИ_Др_Переходные_ЗадолженностьПогашПродавец</Источник>
						<Приемник>НП15_РИ_Др_Переходные_ЗадолженностьПогашПродавец</Приемник>
					</Значение>
					<Значение>
						<Код>301</Код>
						<Наименование>НП15_РИ_Др_Переходные_ЗадолженностьПогашСебест --&gt;</Наименование>
						<Порядок>15050</Порядок>
						<Источник>НП15_РИ_Др_Переходные_ЗадолженностьПогашСебест</Источник>
						<Приемник>НП15_РИ_Др_Переходные_ЗадолженностьПогашСебест</Приемник>
					</Значение>
					<Значение>
						<Код>302</Код>
						<Наименование>НП15_РИ_Др_Переходные_ЗадолженностьСебест --&gt; НП15</Наименование>
						<Порядок>15100</Порядок>
						<Источник>НП15_РИ_Др_Переходные_ЗадолженностьСебест</Источник>
						<Приемник>НП15_РИ_Др_Переходные_ЗадолженностьСебест</Приемник>
					</Значение>
					<Значение>
						<Код>303</Код>
						<Наименование>НП15_РИ_Др_Переходные_КассовыйДоход --&gt; НП15_РИ_Др</Наименование>
						<Порядок>15150</Порядок>
						<Источник>НП15_РИ_Др_Переходные_КассовыйДоход</Источник>
						<Приемник>НП15_РИ_Др_Переходные_КассовыйДоход</Приемник>
					</Значение>
					<Значение>
						<Код>304</Код>
						<Наименование>НП15_РИ_Др_Переходные_КассовыйЗатраты --&gt; НП15_РИ_</Наименование>
						<Порядок>15200</Порядок>
						<Источник>НП15_РИ_Др_Переходные_КассовыйЗатраты</Источник>
						<Приемник>НП15_РИ_Др_Переходные_КассовыйЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>305</Код>
						<Наименование>НП15_РИ_Др_Переходные_НефтегазАморт --&gt; НП15_РИ_Др</Наименование>
						<Порядок>15250</Порядок>
						<Источник>НП15_РИ_Др_Переходные_НефтегазАморт</Источник>
						<Приемник>НП15_РИ_Др_Переходные_НефтегазАморт</Приемник>
					</Значение>
					<Значение>
						<Код>306</Код>
						<Наименование>НП15_РИ_Др_Переходные_НефтегазЗатраты --&gt; НП15_РИ_</Наименование>
						<Порядок>15300</Порядок>
						<Источник>НП15_РИ_Др_Переходные_НефтегазЗатраты</Источник>
						<Приемник>НП15_РИ_Др_Переходные_НефтегазЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>307</Код>
						<Наименование>НП15_РИ_Др_Переходные_НефтегазУценка --&gt; НП15_РИ_Д</Наименование>
						<Порядок>15350</Порядок>
						<Источник>НП15_РИ_Др_Переходные_НефтегазУценка</Источник>
						<Приемник>НП15_РИ_Др_Переходные_НефтегазУценка</Приемник>
					</Значение>
					<Значение>
						<Код>308</Код>
						<Наименование>НП15_РИ_Др_Переходные_РезервБанкаМинус --&gt; НП15_РИ</Наименование>
						<Порядок>15400</Порядок>
						<Источник>НП15_РИ_Др_Переходные_РезервБанкаМинус</Источник>
						<Приемник>НП15_РИ_Др_Переходные_РезервБанкаМинус</Приемник>
					</Значение>
					<Значение>
						<Код>309</Код>
						<Наименование>НП15_РИ_Др_Переходные_РезервБанкаПлюс --&gt; НП15_РИ_</Наименование>
						<Порядок>15450</Порядок>
						<Источник>НП15_РИ_Др_Переходные_РезервБанкаПлюс</Источник>
						<Приемник>НП15_РИ_Др_Переходные_РезервБанкаПлюс</Приемник>
					</Значение>
					<Значение>
						<Код>310</Код>
						<Наименование>НП15_РИ_Др_Переходные_РезервОтпусков --&gt; НП15_РИ_Д</Наименование>
						<Порядок>15500</Порядок>
						<Источник>НП15_РИ_Др_Переходные_РезервОтпусков</Источник>
						<Приемник>НП15_РИ_Др_Переходные_РезервОтпусков</Приемник>
					</Значение>
					<Значение>
						<Код>311</Код>
						<Наименование>НП15_РИ_Др_Страховики_ --&gt; НП15_РИ_Др_Страховики_</Наименование>
						<Порядок>15550</Порядок>
						<Источник>НП15_РИ_Др_Страховики_</Источник>
						<Приемник>НП15_РИ_Др_Страховики_</Приемник>
					</Значение>
					<Значение>
						<Код>312</Код>
						<Наименование>НП15_РИ_Др_Страховики_РезервБУ --&gt; НП15_РИ_Др_Стра</Наименование>
						<Порядок>15600</Порядок>
						<Источник>НП15_РИ_Др_Страховики_РезервБУ</Источник>
						<Приемник>НП15_РИ_Др_Страховики_РезервБУ</Приемник>
					</Значение>
					<Значение>
						<Код>313</Код>
						<Наименование>НП15_РИ_Др_Страховики_РезервБУКорректировка --&gt; НП</Наименование>
						<Порядок>15650</Порядок>
						<Источник>НП15_РИ_Др_Страховики_РезервБУКорректировка</Источник>
						<Приемник>НП15_РИ_Др_Страховики_РезервБУКорректировка</Приемник>
					</Значение>
					<Значение>
						<Код>314</Код>
						<Наименование>НП15_РИ_Др_Страховики_РезервНУ --&gt; НП15_РИ_Др_Стра</Наименование>
						<Порядок>15700</Порядок>
						<Источник>НП15_РИ_Др_Страховики_РезервНУ</Источник>
						<Приемник>НП15_РИ_Др_Страховики_РезервНУ</Приемник>
					</Значение>
					<Значение>
						<Код>315</Код>
						<Наименование>НП15_РИ_Др_Страховики_РезервНУКорректировка --&gt; НП</Наименование>
						<Порядок>15750</Порядок>
						<Источник>НП15_РИ_Др_Страховики_РезервНУКорректировка</Источник>
						<Приемник>НП15_РИ_Др_Страховики_РезервНУКорректировка</Приемник>
					</Значение>
					<Значение>
						<Код>316</Код>
						<Наименование>НП15_РИ_Др_ЦП_ --&gt; НП15_РИ_Др_ЦП_</Наименование>
						<Порядок>15800</Порядок>
						<Источник>НП15_РИ_Др_ЦП_</Источник>
						<Приемник>НП15_РИ_Др_ЦП_</Приемник>
					</Значение>
					<Значение>
						<Код>317</Код>
						<Наименование>НП15_РИ_Др_ЦП_Уценка --&gt; НП15_РИ_Др_ЦП_Уценка</Наименование>
						<Порядок>15850</Порядок>
						<Источник>НП15_РИ_Др_ЦП_Уценка</Источник>
						<Приемник>НП15_РИ_Др_ЦП_Уценка</Приемник>
					</Значение>
					<Значение>
						<Код>318</Код>
						<Наименование>НП15_РИ_Др_ЦП_ФинрезМинус --&gt; НП15_РИ_Др_ЦП_Финрез</Наименование>
						<Порядок>15900</Порядок>
						<Источник>НП15_РИ_Др_ЦП_ФинрезМинус</Источник>
						<Приемник>НП15_РИ_Др_ЦП_ФинрезМинус</Приемник>
					</Значение>
					<Значение>
						<Код>319</Код>
						<Наименование>НП15_РИ_Др_ЦП_ФинрезПлюсБУ --&gt; НП15_РИ_Др_ЦП_Финре</Наименование>
						<Порядок>15950</Порядок>
						<Источник>НП15_РИ_Др_ЦП_ФинрезПлюсБУ</Источник>
						<Приемник>НП15_РИ_Др_ЦП_ФинрезПлюсБУ</Приемник>
					</Значение>
					<Значение>
						<Код>320</Код>
						<Наименование>НП15_РИ_Резерв_ --&gt; НП15_РИ_Резерв_</Наименование>
						<Порядок>16000</Порядок>
						<Источник>НП15_РИ_Резерв_</Источник>
						<Приемник>НП15_РИ_Резерв_</Приемник>
					</Значение>
					<Значение>
						<Код>321</Код>
						<Наименование>НП15_РИ_Резерв_38_ --&gt; НП15_РИ_Резерв_38_</Наименование>
						<Порядок>16050</Порядок>
						<Источник>НП15_РИ_Резерв_38_</Источник>
						<Приемник>НП15_РИ_Резерв_38_</Приемник>
					</Значение>
					<Значение>
						<Код>322</Код>
						<Наименование>НП15_РИ_Резерв_38_Задолж --&gt; НП15_РИ_Резерв_38_Зад</Наименование>
						<Порядок>16100</Порядок>
						<Источник>НП15_РИ_Резерв_38_Задолж</Источник>
						<Приемник>НП15_РИ_Резерв_38_Задолж</Приемник>
					</Значение>
					<Значение>
						<Код>323</Код>
						<Наименование>НП15_РИ_Резерв_38_Корректировка --&gt; НП15_РИ_Резерв</Наименование>
						<Порядок>16150</Порядок>
						<Источник>НП15_РИ_Резерв_38_Корректировка</Источник>
						<Приемник>НП15_РИ_Резерв_38_Корректировка</Приемник>
					</Значение>
					<Значение>
						<Код>324</Код>
						<Наименование>НП15_РИ_Резерв_38_Приход --&gt; НП15_РИ_Резерв_38_При</Наименование>
						<Порядок>16200</Порядок>
						<Источник>НП15_РИ_Резерв_38_Приход</Источник>
						<Приемник>НП15_РИ_Резерв_38_Приход</Приемник>
					</Значение>
					<Значение>
						<Код>325</Код>
						<Наименование>НП15_РИ_Резерв_47_ --&gt; НП15_РИ_Резерв_47_</Наименование>
						<Порядок>16250</Порядок>
						<Источник>НП15_РИ_Резерв_47_</Источник>
						<Приемник>НП15_РИ_Резерв_47_</Приемник>
					</Значение>
					<Значение>
						<Код>326</Код>
						<Наименование>НП15_РИ_Резерв_47_Корректировка --&gt; НП15_РИ_Резерв</Наименование>
						<Порядок>16300</Порядок>
						<Источник>НП15_РИ_Резерв_47_Корректировка</Источник>
						<Приемник>НП15_РИ_Резерв_47_Корректировка</Приемник>
					</Значение>
					<Значение>
						<Код>327</Код>
						<Наименование>НП15_РИ_Резерв_47_Приход --&gt; НП15_РИ_Резерв_47_При</Наименование>
						<Порядок>16350</Порядок>
						<Источник>НП15_РИ_Резерв_47_Приход</Источник>
						<Приемник>НП15_РИ_Резерв_47_Приход</Приемник>
					</Значение>
					<Значение>
						<Код>328</Код>
						<Наименование>НП15_РИ_Резерв_47_Расход --&gt; НП15_РИ_Резерв_47_Рас</Наименование>
						<Порядок>16400</Порядок>
						<Источник>НП15_РИ_Резерв_47_Расход</Источник>
						<Приемник>НП15_РИ_Резерв_47_Расход</Приемник>
					</Значение>
					<Значение>
						<Код>329</Код>
						<Наименование>НП15_РИ_Резерв_Банк_ --&gt; НП15_РИ_Резерв_Банк_</Наименование>
						<Порядок>16450</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_</Приемник>
					</Значение>
					<Значение>
						<Код>330</Код>
						<Наименование>НП15_РИ_Резерв_Банк_БезнЗадолж --&gt; НП15_РИ_Резерв_</Наименование>
						<Порядок>16500</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_БезнЗадолж</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_БезнЗадолж</Приемник>
					</Значение>
					<Значение>
						<Код>331</Код>
						<Наименование>НП15_РИ_Резерв_Банк_КорректирЗадолж --&gt; НП15_РИ_Ре</Наименование>
						<Порядок>16550</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_КорректирЗадолж</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_КорректирЗадолж</Приемник>
					</Значение>
					<Значение>
						<Код>332</Код>
						<Наименование>НП15_РИ_Резерв_Банк_Корректировка --&gt; НП15_РИ_Резе</Наименование>
						<Порядок>16600</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_Корректировка</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_Корректировка</Приемник>
					</Значение>
					<Значение>
						<Код>333</Код>
						<Наименование>НП15_РИ_Резерв_Банк_НебезнЗадолж --&gt; НП15_РИ_Резер</Наименование>
						<Порядок>16650</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_НебезнЗадолж</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_НебезнЗадолж</Приемник>
					</Значение>
					<Значение>
						<Код>334</Код>
						<Наименование>НП15_РИ_Резерв_Банк_Погашение --&gt; НП15_РИ_Резерв_Б</Наименование>
						<Порядок>16700</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_Погашение</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_Погашение</Приемник>
					</Значение>
					<Значение>
						<Код>335</Код>
						<Наименование>НП15_РИ_Резерв_Банк_Свехлимит --&gt; НП15_РИ_Резерв_Б</Наименование>
						<Порядок>16750</Порядок>
						<Источник>НП15_РИ_Резерв_Банк_Свехлимит</Источник>
						<Приемник>НП15_РИ_Резерв_Банк_Свехлимит</Приемник>
					</Значение>
					<Значение>
						<Код>336</Код>
						<Наименование>НП15_РИ_Фин_ --&gt; НП15_РИ_Фин_</Наименование>
						<Порядок>16800</Порядок>
						<Источник>НП15_РИ_Фин_</Источник>
						<Приемник>НП15_РИ_Фин_</Приемник>
					</Значение>
					<Значение>
						<Код>337</Код>
						<Наименование>НП15_РИ_Фин_Безоплатн --&gt; НП15_РИ_Фин_Безоплатн</Наименование>
						<Порядок>16850</Порядок>
						<Источник>НП15_РИ_Фин_Безоплатн</Источник>
						<Приемник>НП15_РИ_Фин_Безоплатн</Приемник>
					</Значение>
					<Значение>
						<Код>338</Код>
						<Наименование>НП15_РИ_Фин_Дивиденды --&gt; НП15_РИ_Фин_Дивиденды</Наименование>
						<Порядок>16900</Порядок>
						<Источник>НП15_РИ_Фин_Дивиденды</Источник>
						<Приемник>НП15_РИ_Фин_Дивиденды</Приемник>
					</Значение>
					<Значение>
						<Код>339</Код>
						<Наименование>НП15_РИ_Фин_Дооценка --&gt; НП15_РИ_Фин_Дооценка</Наименование>
						<Порядок>16950</Порядок>
						<Источник>НП15_РИ_Фин_Дооценка</Источник>
						<Приемник>НП15_РИ_Фин_Дооценка</Приемник>
					</Значение>
					<Значение>
						<Код>340</Код>
						<Наименование>НП15_РИ_Фин_ДоходКапитал --&gt; НП15_РИ_Фин_ДоходКапи</Наименование>
						<Порядок>17000</Порядок>
						<Источник>НП15_РИ_Фин_ДоходКапитал</Источник>
						<Приемник>НП15_РИ_Фин_ДоходКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>341</Код>
						<Наименование>НП15_РИ_Фин_Кредиты --&gt; НП15_РИ_Фин_Кредиты</Наименование>
						<Порядок>17050</Порядок>
						<Источник>НП15_РИ_Фин_Кредиты</Источник>
						<Приемник>НП15_РИ_Фин_Кредиты</Приемник>
					</Значение>
					<Значение>
						<Код>342</Код>
						<Наименование>НП15_РИ_Фин_КредитыАморт --&gt; НП15_РИ_Фин_КредитыАм</Наименование>
						<Порядок>17100</Порядок>
						<Источник>НП15_РИ_Фин_КредитыАморт</Источник>
						<Приемник>НП15_РИ_Фин_КредитыАморт</Приемник>
					</Значение>
					<Значение>
						<Код>343</Код>
						<Наименование>НП15_РИ_Фин_Неприбыльные --&gt; НП15_РИ_Фин_Неприбыль</Наименование>
						<Порядок>17150</Порядок>
						<Источник>НП15_РИ_Фин_Неприбыльные</Источник>
						<Приемник>НП15_РИ_Фин_Неприбыльные</Приемник>
					</Значение>
					<Значение>
						<Код>344</Код>
						<Наименование>НП15_РИ_Фин_Оффшор --&gt; НП15_РИ_Фин_Оффшор</Наименование>
						<Порядок>17200</Порядок>
						<Источник>НП15_РИ_Фин_Оффшор</Источник>
						<Приемник>НП15_РИ_Фин_Оффшор</Приемник>
					</Значение>
					<Значение>
						<Код>345</Код>
						<Наименование>НП15_РИ_Фин_ПотериКапитал --&gt; НП15_РИ_Фин_ПотериКа</Наименование>
						<Порядок>17250</Порядок>
						<Источник>НП15_РИ_Фин_ПотериКапитал</Источник>
						<Приемник>НП15_РИ_Фин_ПотериКапитал</Приемник>
					</Значение>
					<Значение>
						<Код>346</Код>
						<Наименование>НП15_РИ_Фин_Роялти --&gt; НП15_РИ_Фин_Роялти</Наименование>
						<Порядок>17300</Порядок>
						<Источник>НП15_РИ_Фин_Роялти</Источник>
						<Приемник>НП15_РИ_Фин_Роялти</Приемник>
					</Значение>
					<Значение>
						<Код>347</Код>
						<Наименование>НП15_РИ_Фин_Убыток --&gt; НП15_РИ_Фин_Убыток</Наименование>
						<Порядок>17350</Порядок>
						<Источник>НП15_РИ_Фин_Убыток</Источник>
						<Приемник>НП15_РИ_Фин_Убыток</Приемник>
					</Значение>
					<Значение>
						<Код>348</Код>
						<Наименование>НП15_РИ_Фин_Уценка --&gt; НП15_РИ_Фин_Уценка</Наименование>
						<Порядок>17400</Порядок>
						<Источник>НП15_РИ_Фин_Уценка</Источник>
						<Приемник>НП15_РИ_Фин_Уценка</Приемник>
					</Значение>
					<Значение>
						<Код>349</Код>
						<Наименование>НПНК_ --&gt; НПНК_</Наименование>
						<Порядок>17450</Порядок>
						<Источник>НПНК_</Источник>
						<Приемник>НПНК_</Приемник>
					</Значение>
					<Значение>
						<Код>350</Код>
						<Наименование>НПНК_АВ_ --&gt; НПНК_АВ_</Наименование>
						<Порядок>17500</Порядок>
						<Источник>НПНК_АВ_</Источник>
						<Приемник>НПНК_АВ_</Приемник>
					</Значение>
					<Значение>
						<Код>351</Код>
						<Наименование>НПНК_АВ_Банк --&gt; НПНК_АВ_Банк</Наименование>
						<Порядок>17550</Порядок>
						<Источник>НПНК_АВ_Банк</Источник>
						<Приемник>НПНК_АВ_Банк</Приемник>
					</Значение>
					<Значение>
						<Код>352</Код>
						<Наименование>НПНК_АВ_Взносы --&gt; НПНК_АВ_Взносы</Наименование>
						<Порядок>17600</Порядок>
						<Источник>НПНК_АВ_Взносы</Источник>
						<Приемник>НПНК_АВ_Взносы</Приемник>
					</Значение>
					<Значение>
						<Код>353</Код>
						<Наименование>НПНК_АВ_Другие --&gt; НПНК_АВ_Другие</Наименование>
						<Порядок>17650</Порядок>
						<Источник>НПНК_АВ_Другие</Источник>
						<Приемник>НПНК_АВ_Другие</Приемник>
					</Значение>
					<Значение>
						<Код>354</Код>
						<Наименование>НПНК_АВ_Зарплата --&gt; НПНК_АВ_Зарплата</Наименование>
						<Порядок>17700</Порядок>
						<Источник>НПНК_АВ_Зарплата</Источник>
						<Приемник>НПНК_АВ_Зарплата</Приемник>
					</Значение>
					<Значение>
						<Код>355</Код>
						<Наименование>НПНК_АВ_Командировки --&gt; НПНК_АВ_Командировки</Наименование>
						<Порядок>17750</Порядок>
						<Источник>НПНК_АВ_Командировки</Источник>
						<Приемник>НПНК_АВ_Командировки</Приемник>
					</Значение>
					<Значение>
						<Код>356</Код>
						<Наименование>НПНК_АВ_Консультационные --&gt; НПНК_АВ_Консультацион</Наименование>
						<Порядок>17800</Порядок>
						<Источник>НПНК_АВ_Консультационные</Источник>
						<Приемник>НПНК_АВ_Консультационные</Приемник>
					</Значение>
					<Значение>
						<Код>357</Код>
						<Наименование>НПНК_АВ_Корпоратив --&gt; НПНК_АВ_Корпоратив</Наименование>
						<Порядок>17850</Порядок>
						<Источник>НПНК_АВ_Корпоратив</Источник>
						<Приемник>НПНК_АВ_Корпоратив</Приемник>
					</Значение>
					<Значение>
						<Код>358</Код>
						<Наименование>НПНК_АВ_Связь --&gt; НПНК_АВ_Связь</Наименование>
						<Порядок>17900</Порядок>
						<Источник>НПНК_АВ_Связь</Источник>
						<Приемник>НПНК_АВ_Связь</Приемник>
					</Значение>
					<Значение>
						<Код>359</Код>
						<Наименование>НПНК_АВ_СодержаниеОС --&gt; НПНК_АВ_СодержаниеОС</Наименование>
						<Порядок>17950</Порядок>
						<Источник>НПНК_АВ_СодержаниеОС</Источник>
						<Приемник>НПНК_АВ_СодержаниеОС</Приемник>
					</Значение>
					<Значение>
						<Код>360</Код>
						<Наименование>НПНК_АВ_Страхование --&gt; НПНК_АВ_Страхование</Наименование>
						<Порядок>18000</Порядок>
						<Источник>НПНК_АВ_Страхование</Источник>
						<Приемник>НПНК_АВ_Страхование</Приемник>
					</Значение>
					<Значение>
						<Код>361</Код>
						<Наименование>НПНК_АВ_Суды --&gt; НПНК_АВ_Суды</Наименование>
						<Порядок>18050</Порядок>
						<Источник>НПНК_АВ_Суды</Источник>
						<Приемник>НПНК_АВ_Суды</Приемник>
					</Значение>
					<Значение>
						<Код>362</Код>
						<Наименование>НПНК_АМ_ --&gt; НПНК_АМ_</Наименование>
						<Порядок>18100</Порядок>
						<Источник>НПНК_АМ_</Источник>
						<Приемник>НПНК_АМ_</Приемник>
					</Значение>
					<Значение>
						<Код>363</Код>
						<Наименование>НПНК_АМ_ВР --&gt; НПНК_АМ_ВР</Наименование>
						<Порядок>18150</Порядок>
						<Источник>НПНК_АМ_ВР</Источник>
						<Приемник>НПНК_АМ_ВР</Приемник>
					</Значение>
					<Значение>
						<Код>364</Код>
						<Наименование>НПНК_АМ_НА_АВ --&gt; НПНК_АМ_НА_АВ</Наименование>
						<Порядок>18200</Порядок>
						<Источник>НПНК_АМ_НА_АВ</Источник>
						<Приемник>НПНК_АМ_НА_АВ</Приемник>
					</Значение>
					<Значение>
						<Код>365</Код>
						<Наименование>НПНК_АМ_НА_ВЗ --&gt; НПНК_АМ_НА_ВЗ</Наименование>
						<Порядок>18250</Порядок>
						<Источник>НПНК_АМ_НА_ВЗ</Источник>
						<Приемник>НПНК_АМ_НА_ВЗ</Приемник>
					</Значение>
					<Значение>
						<Код>366</Код>
						<Наименование>НПНК_АМ_НА_ЗВ --&gt; НПНК_АМ_НА_ЗВ</Наименование>
						<Порядок>18300</Порядок>
						<Источник>НПНК_АМ_НА_ЗВ</Источник>
						<Приемник>НПНК_АМ_НА_ЗВ</Приемник>
					</Значение>
					<Значение>
						<Код>367</Код>
						<Наименование>НПНК_АМ_НА_ИВ_Информация --&gt; НПНК_АМ_НА_ИВ_Информа</Наименование>
						<Порядок>18350</Порядок>
						<Источник>НПНК_АМ_НА_ИВ_Информация</Источник>
						<Приемник>НПНК_АМ_НА_ИВ_Информация</Приемник>
					</Значение>
					<Значение>
						<Код>368</Код>
						<Наименование>НПНК_АМ_ОС_ --&gt; НПНК_АМ_ОС_</Наименование>
						<Порядок>18400</Порядок>
						<Источник>НПНК_АМ_ОС_</Источник>
						<Приемник>НПНК_АМ_ОС_</Приемник>
					</Значение>
					<Значение>
						<Код>369</Код>
						<Наименование>НПНК_АМ_ОС_АВ --&gt; НПНК_АМ_ОС_АВ</Наименование>
						<Порядок>18450</Порядок>
						<Источник>НПНК_АМ_ОС_АВ</Источник>
						<Приемник>НПНК_АМ_ОС_АВ</Приемник>
					</Значение>
					<Значение>
						<Код>370</Код>
						<Наименование>НПНК_АМ_ОС_ВЗ --&gt; НПНК_АМ_ОС_ВЗ</Наименование>
						<Порядок>18500</Порядок>
						<Источник>НПНК_АМ_ОС_ВЗ</Источник>
						<Приемник>НПНК_АМ_ОС_ВЗ</Приемник>
					</Значение>
					<Значение>
						<Код>371</Код>
						<Наименование>НПНК_АМ_ОС_ЗВ --&gt; НПНК_АМ_ОС_ЗВ</Наименование>
						<Порядок>18550</Порядок>
						<Источник>НПНК_АМ_ОС_ЗВ</Источник>
						<Приемник>НПНК_АМ_ОС_ЗВ</Приемник>
					</Значение>
					<Значение>
						<Код>372</Код>
						<Наименование>НПНК_АМ_ОС_ИВ --&gt; НПНК_АМ_ОС_ИВ</Наименование>
						<Порядок>18600</Порядок>
						<Источник>НПНК_АМ_ОС_ИВ</Источник>
						<Приемник>НПНК_АМ_ОС_ИВ</Приемник>
					</Значение>
					<Значение>
						<Код>373</Код>
						<Наименование>НПНК_АМ_ОС_ИВ_Аренда --&gt; НПНК_АМ_ОС_ИВ_Аренда</Наименование>
						<Порядок>18650</Порядок>
						<Источник>НПНК_АМ_ОС_ИВ_Аренда</Источник>
						<Приемник>НПНК_АМ_ОС_ИВ_Аренда</Приемник>
					</Значение>
					<Значение>
						<Код>374</Код>
						<Наименование>НПНК_АМ_ОС_ИВ_Информация --&gt; НПНК_АМ_ОС_ИВ_Информа</Наименование>
						<Порядок>18700</Порядок>
						<Источник>НПНК_АМ_ОС_ИВ_Информация</Источник>
						<Приемник>НПНК_АМ_ОС_ИВ_Информация</Приемник>
					</Значение>
					<Значение>
						<Код>375</Код>
						<Наименование>НПНК_АМ_ОС_ИВ_Природоохранные --&gt; НПНК_АМ_ОС_ИВ_Пр</Наименование>
						<Порядок>18750</Порядок>
						<Источник>НПНК_АМ_ОС_ИВ_Природоохранные</Источник>
						<Приемник>НПНК_АМ_ОС_ИВ_Природоохранные</Приемник>
					</Значение>
					<Значение>
						<Код>376</Код>
						<Наименование>НПНК_АМ_Ремонт_ --&gt; НПНК_АМ_Ремонт_</Наименование>
						<Порядок>18800</Порядок>
						<Источник>НПНК_АМ_Ремонт_</Источник>
						<Приемник>НПНК_АМ_Ремонт_</Приемник>
					</Значение>
					<Значение>
						<Код>377</Код>
						<Наименование>НПНК_АМ_Ремонт_АВ --&gt; НПНК_АМ_Ремонт_АВ</Наименование>
						<Порядок>18850</Порядок>
						<Источник>НПНК_АМ_Ремонт_АВ</Источник>
						<Приемник>НПНК_АМ_Ремонт_АВ</Приемник>
					</Значение>
					<Значение>
						<Код>378</Код>
						<Наименование>НПНК_АМ_Ремонт_ВЗ --&gt; НПНК_АМ_Ремонт_ВЗ</Наименование>
						<Порядок>18900</Порядок>
						<Источник>НПНК_АМ_Ремонт_ВЗ</Источник>
						<Приемник>НПНК_АМ_Ремонт_ВЗ</Приемник>
					</Значение>
					<Значение>
						<Код>379</Код>
						<Наименование>НПНК_АМ_Ремонт_ЗВ --&gt; НПНК_АМ_Ремонт_ЗВ</Наименование>
						<Порядок>18950</Порядок>
						<Источник>НПНК_АМ_Ремонт_ЗВ</Источник>
						<Приемник>НПНК_АМ_Ремонт_ЗВ</Приемник>
					</Значение>
					<Значение>
						<Код>380</Код>
						<Наименование>НПНК_АМ_Ремонт_ИВ --&gt; НПНК_АМ_Ремонт_ИВ</Наименование>
						<Порядок>19000</Порядок>
						<Источник>НПНК_АМ_Ремонт_ИВ</Источник>
						<Приемник>НПНК_АМ_Ремонт_ИВ</Приемник>
					</Значение>
					<Значение>
						<Код>381</Код>
						<Наименование>НПНК_АМ_Ремонт_ИВ_Аренда --&gt; НПНК_АМ_Ремонт_ИВ_Аре</Наименование>
						<Порядок>19050</Порядок>
						<Источник>НПНК_АМ_Ремонт_ИВ_Аренда</Источник>
						<Приемник>НПНК_АМ_Ремонт_ИВ_Аренда</Приемник>
					</Значение>
					<Значение>
						<Код>382</Код>
						<Наименование>НПНК_АМ_Ремонт_ИВ_Информация --&gt; НПНК_АМ_Ремонт_ИВ</Наименование>
						<Порядок>19100</Порядок>
						<Источник>НПНК_АМ_Ремонт_ИВ_Информация</Источник>
						<Приемник>НПНК_АМ_Ремонт_ИВ_Информация</Приемник>
					</Значение>
					<Значение>
						<Код>383</Код>
						<Наименование>НПНК_АМ_Ремонт_ИВ_Природоохранные --&gt; НПНК_АМ_Ремо</Наименование>
						<Порядок>19150</Порядок>
						<Источник>НПНК_АМ_Ремонт_ИВ_Природоохранные</Источник>
						<Приемник>НПНК_АМ_Ремонт_ИВ_Природоохранные</Приемник>
					</Значение>
					<Значение>
						<Код>384</Код>
						<Наименование>НПНК_ВЗ_ --&gt; НПНК_ВЗ_</Наименование>
						<Порядок>19200</Порядок>
						<Источник>НПНК_ВЗ_</Источник>
						<Приемник>НПНК_ВЗ_</Приемник>
					</Значение>
					<Значение>
						<Код>385</Код>
						<Наименование>НПНК_ВЗ_Взносы --&gt; НПНК_ВЗ_Взносы</Наименование>
						<Порядок>19250</Порядок>
						<Источник>НПНК_ВЗ_Взносы</Источник>
						<Приемник>НПНК_ВЗ_Взносы</Приемник>
					</Значение>
					<Значение>
						<Код>386</Код>
						<Наименование>НПНК_ВЗ_Гарантийные --&gt; НПНК_ВЗ_Гарантийные</Наименование>
						<Порядок>19300</Порядок>
						<Источник>НПНК_ВЗ_Гарантийные</Источник>
						<Приемник>НПНК_ВЗ_Гарантийные</Приемник>
					</Значение>
					<Значение>
						<Код>387</Код>
						<Наименование>НПНК_ВЗ_Доставка --&gt; НПНК_ВЗ_Доставка</Наименование>
						<Порядок>19350</Порядок>
						<Источник>НПНК_ВЗ_Доставка</Источник>
						<Приемник>НПНК_ВЗ_Доставка</Приемник>
					</Значение>
					<Значение>
						<Код>388</Код>
						<Наименование>НПНК_ВЗ_Другие --&gt; НПНК_ВЗ_Другие</Наименование>
						<Порядок>19400</Порядок>
						<Источник>НПНК_ВЗ_Другие</Источник>
						<Приемник>НПНК_ВЗ_Другие</Приемник>
					</Значение>
					<Значение>
						<Код>389</Код>
						<Наименование>НПНК_ВЗ_Зарплата --&gt; НПНК_ВЗ_Зарплата</Наименование>
						<Порядок>19450</Порядок>
						<Источник>НПНК_ВЗ_Зарплата</Источник>
						<Приемник>НПНК_ВЗ_Зарплата</Приемник>
					</Значение>
					<Значение>
						<Код>390</Код>
						<Наименование>НПНК_ВЗ_Командировки --&gt; НПНК_ВЗ_Командировки</Наименование>
						<Порядок>19500</Порядок>
						<Источник>НПНК_ВЗ_Командировки</Источник>
						<Приемник>НПНК_ВЗ_Командировки</Приемник>
					</Значение>
					<Значение>
						<Код>391</Код>
						<Наименование>НПНК_ВЗ_Комиссионные --&gt; НПНК_ВЗ_Комиссионные</Наименование>
						<Порядок>19550</Порядок>
						<Источник>НПНК_ВЗ_Комиссионные</Источник>
						<Приемник>НПНК_ВЗ_Комиссионные</Приемник>
					</Значение>
					<Значение>
						<Код>392</Код>
						<Наименование>НПНК_ВЗ_Предпродажная --&gt; НПНК_ВЗ_Предпродажная</Наименование>
						<Порядок>19600</Порядок>
						<Источник>НПНК_ВЗ_Предпродажная</Источник>
						<Приемник>НПНК_ВЗ_Предпродажная</Приемник>
					</Значение>
					<Значение>
						<Код>393</Код>
						<Наименование>НПНК_ВЗ_Реклама_ --&gt; НПНК_ВЗ_Реклама_</Наименование>
						<Порядок>19650</Порядок>
						<Источник>НПНК_ВЗ_Реклама_</Источник>
						<Приемник>НПНК_ВЗ_Реклама_</Приемник>
					</Значение>
					<Значение>
						<Код>394</Код>
						<Наименование>НПНК_ВЗ_Реклама_Нерезиденты --&gt; НПНК_ВЗ_Реклама_Не</Наименование>
						<Порядок>19700</Порядок>
						<Источник>НПНК_ВЗ_Реклама_Нерезиденты</Источник>
						<Приемник>НПНК_ВЗ_Реклама_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>395</Код>
						<Наименование>НПНК_ВЗ_РемонтТары --&gt; НПНК_ВЗ_РемонтТары</Наименование>
						<Порядок>19750</Порядок>
						<Источник>НПНК_ВЗ_РемонтТары</Источник>
						<Приемник>НПНК_ВЗ_РемонтТары</Приемник>
					</Значение>
					<Значение>
						<Код>396</Код>
						<Наименование>НПНК_ВЗ_СодержаниеОС --&gt; НПНК_ВЗ_СодержаниеОС</Наименование>
						<Порядок>19800</Порядок>
						<Источник>НПНК_ВЗ_СодержаниеОС</Источник>
						<Приемник>НПНК_ВЗ_СодержаниеОС</Приемник>
					</Значение>
					<Значение>
						<Код>397</Код>
						<Наименование>НПНК_ВЗ_Страхование --&gt; НПНК_ВЗ_Страхование</Наименование>
						<Порядок>19850</Порядок>
						<Источник>НПНК_ВЗ_Страхование</Источник>
						<Приемник>НПНК_ВЗ_Страхование</Приемник>
					</Значение>
					<Значение>
						<Код>398</Код>
						<Наименование>НПНК_ВЗ_Тара --&gt; НПНК_ВЗ_Тара</Наименование>
						<Порядок>19900</Порядок>
						<Источник>НПНК_ВЗ_Тара</Источник>
						<Приемник>НПНК_ВЗ_Тара</Приемник>
					</Значение>
					<Значение>
						<Код>399</Код>
						<Наименование>НПНК_ВЗ_Транспортировка --&gt; НПНК_ВЗ_Транспортировк</Наименование>
						<Порядок>19950</Порядок>
						<Источник>НПНК_ВЗ_Транспортировка</Источник>
						<Приемник>НПНК_ВЗ_Транспортировка</Приемник>
					</Значение>
					<Значение>
						<Код>400</Код>
						<Наименование>НПНК_ДО_ --&gt; НПНК_ДО_</Наименование>
						<Порядок>20000</Порядок>
						<Источник>НПНК_ДО_</Источник>
						<Приемник>НПНК_ДО_</Приемник>
					</Значение>
					<Значение>
						<Код>401</Код>
						<Наименование>НПНК_ЗВ_ --&gt; НПНК_ЗВ_</Наименование>
						<Порядок>20050</Порядок>
						<Источник>НПНК_ЗВ_</Источник>
						<Приемник>НПНК_ЗВ_</Приемник>
					</Значение>
					<Значение>
						<Код>402</Код>
						<Наименование>НПНК_ЗВ_Другие --&gt; НПНК_ЗВ_Другие</Наименование>
						<Порядок>20100</Порядок>
						<Источник>НПНК_ЗВ_Другие</Источник>
						<Приемник>НПНК_ЗВ_Другие</Приемник>
					</Значение>
					<Значение>
						<Код>403</Код>
						<Наименование>НПНК_ЗВ_Месторождения --&gt; НПНК_ЗВ_Месторождения</Наименование>
						<Порядок>20150</Порядок>
						<Источник>НПНК_ЗВ_Месторождения</Источник>
						<Приемник>НПНК_ЗВ_Месторождения</Приемник>
					</Значение>
					<Значение>
						<Код>404</Код>
						<Наименование>НПНК_ЗВ_ОхранаТруда --&gt; НПНК_ЗВ_ОхранаТруда</Наименование>
						<Порядок>20200</Порядок>
						<Источник>НПНК_ЗВ_ОхранаТруда</Источник>
						<Приемник>НПНК_ЗВ_ОхранаТруда</Приемник>
					</Значение>
					<Значение>
						<Код>405</Код>
						<Наименование>НПНК_ЗВ_Помещения --&gt; НПНК_ЗВ_Помещения</Наименование>
						<Порядок>20250</Порядок>
						<Источник>НПНК_ЗВ_Помещения</Источник>
						<Приемник>НПНК_ЗВ_Помещения</Приемник>
					</Значение>
					<Значение>
						<Код>406</Код>
						<Наименование>НПНК_ЗВ_Процесс --&gt; НПНК_ЗВ_Процесс</Наименование>
						<Порядок>20300</Порядок>
						<Источник>НПНК_ЗВ_Процесс</Источник>
						<Приемник>НПНК_ЗВ_Процесс</Приемник>
					</Значение>
					<Значение>
						<Код>407</Код>
						<Наименование>НПНК_ЗВ_Сертификация --&gt; НПНК_ЗВ_Сертификация</Наименование>
						<Порядок>20350</Порядок>
						<Источник>НПНК_ЗВ_Сертификация</Источник>
						<Приемник>НПНК_ЗВ_Сертификация</Приемник>
					</Значение>
					<Значение>
						<Код>408</Код>
						<Наименование>НПНК_ЗВ_СодержаниеОС --&gt; НПНК_ЗВ_СодержаниеОС</Наименование>
						<Порядок>20400</Порядок>
						<Источник>НПНК_ЗВ_СодержаниеОС</Источник>
						<Приемник>НПНК_ЗВ_СодержаниеОС</Приемник>
					</Значение>
					<Значение>
						<Код>409</Код>
						<Наименование>НПНК_ЗВ_Страхование --&gt; НПНК_ЗВ_Страхование</Наименование>
						<Порядок>20450</Порядок>
						<Источник>НПНК_ЗВ_Страхование</Источник>
						<Приемник>НПНК_ЗВ_Страхование</Приемник>
					</Значение>
					<Значение>
						<Код>410</Код>
						<Наименование>НПНК_ЗВ_Технология --&gt; НПНК_ЗВ_Технология</Наименование>
						<Порядок>20500</Порядок>
						<Источник>НПНК_ЗВ_Технология</Источник>
						<Приемник>НПНК_ЗВ_Технология</Приемник>
					</Значение>
					<Значение>
						<Код>411</Код>
						<Наименование>НПНК_ЗВ_Управление_ --&gt; НПНК_ЗВ_Управление_</Наименование>
						<Порядок>20550</Порядок>
						<Источник>НПНК_ЗВ_Управление_</Источник>
						<Приемник>НПНК_ЗВ_Управление_</Приемник>
					</Значение>
					<Значение>
						<Код>412</Код>
						<Наименование>НПНК_ЗВ_Управление_Взносы --&gt; НПНК_ЗВ_Управление_В</Наименование>
						<Порядок>20600</Порядок>
						<Источник>НПНК_ЗВ_Управление_Взносы</Источник>
						<Приемник>НПНК_ЗВ_Управление_Взносы</Приемник>
					</Значение>
					<Значение>
						<Код>413</Код>
						<Наименование>НПНК_ЗВ_Управление_Зарплата --&gt; НПНК_ЗВ_Управление</Наименование>
						<Порядок>20650</Порядок>
						<Источник>НПНК_ЗВ_Управление_Зарплата</Источник>
						<Приемник>НПНК_ЗВ_Управление_Зарплата</Приемник>
					</Значение>
					<Значение>
						<Код>414</Код>
						<Наименование>НПНК_ЗВ_Управление_Командировки --&gt; НПНК_ЗВ_Управл</Наименование>
						<Порядок>20700</Порядок>
						<Источник>НПНК_ЗВ_Управление_Командировки</Источник>
						<Приемник>НПНК_ЗВ_Управление_Командировки</Приемник>
					</Значение>
					<Значение>
						<Код>415</Код>
						<Наименование>НПНК_ЗП_ --&gt; НПНК_ЗП_</Наименование>
						<Порядок>20750</Порядок>
						<Источник>НПНК_ЗП_</Источник>
						<Приемник>НПНК_ЗП_</Приемник>
					</Значение>
					<Значение>
						<Код>416</Код>
						<Наименование>НПНК_ЗП_Аванс --&gt; НПНК_ЗП_Аванс</Наименование>
						<Порядок>20800</Порядок>
						<Источник>НПНК_ЗП_Аванс</Источник>
						<Приемник>НПНК_ЗП_Аванс</Приемник>
					</Значение>
					<Значение>
						<Код>417</Код>
						<Наименование>НПНК_ЗП_АвансПриВыплатеДивидентов --&gt; НПНК_ЗП_Аван</Наименование>
						<Порядок>20850</Порядок>
						<Источник>НПНК_ЗП_АвансПриВыплатеДивидентов</Источник>
						<Приемник>НПНК_ЗП_АвансПриВыплатеДивидентов</Приемник>
					</Значение>
					<Значение>
						<Код>418</Код>
						<Наименование>НПНК_ЗП_НалогНаЗемлюСХоборота --&gt; НПНК_ЗП_НалогНаЗ</Наименование>
						<Порядок>20900</Порядок>
						<Источник>НПНК_ЗП_НалогНаЗемлюСХоборота</Источник>
						<Приемник>НПНК_ЗП_НалогНаЗемлюСХоборота</Приемник>
					</Значение>
					<Значение>
						<Код>419</Код>
						<Наименование>НПНК_ЗП_УплаченныйНалогЗаГраницей --&gt; НПНК_ЗП_Упла</Наименование>
						<Порядок>20950</Порядок>
						<Источник>НПНК_ЗП_УплаченныйНалогЗаГраницей</Источник>
						<Приемник>НПНК_ЗП_УплаченныйНалогЗаГраницей</Приемник>
					</Значение>
					<Значение>
						<Код>420</Код>
						<Наименование>НПНК_ИВ_ --&gt; НПНК_ИВ_</Наименование>
						<Порядок>21000</Порядок>
						<Источник>НПНК_ИВ_</Источник>
						<Приемник>НПНК_ИВ_</Приемник>
					</Значение>
					<Значение>
						<Код>421</Код>
						<Наименование>НПНК_ИВ_Аренда --&gt; НПНК_ИВ_Аренда</Наименование>
						<Порядок>21050</Порядок>
						<Источник>НПНК_ИВ_Аренда</Источник>
						<Приемник>НПНК_ИВ_Аренда</Приемник>
					</Значение>
					<Значение>
						<Код>422</Код>
						<Наименование>НПНК_ИВ_БезнадежнаяЗадолженность --&gt; НПНК_ИВ_Безна</Наименование>
						<Порядок>21100</Порядок>
						<Источник>НПНК_ИВ_БезнадежнаяЗадолженность</Источник>
						<Приемник>НПНК_ИВ_БезнадежнаяЗадолженность</Приемник>
					</Значение>
					<Значение>
						<Код>423</Код>
						<Наименование>НПНК_ИВ_БезоплатноБюджет --&gt; НПНК_ИВ_БезоплатноБюд</Наименование>
						<Порядок>21150</Порядок>
						<Источник>НПНК_ИВ_БезоплатноБюджет</Источник>
						<Приемник>НПНК_ИВ_БезоплатноБюджет</Приемник>
					</Значение>
					<Значение>
						<Код>424</Код>
						<Наименование>НПНК_ИВ_БезоплатноВзносы --&gt; НПНК_ИВ_БезоплатноВзн</Наименование>
						<Порядок>21200</Порядок>
						<Источник>НПНК_ИВ_БезоплатноВзносы</Источник>
						<Приемник>НПНК_ИВ_БезоплатноВзносы</Приемник>
					</Значение>
					<Значение>
						<Код>425</Код>
						<Наименование>НПНК_ИВ_БезоплатноКинематограф --&gt; НПНК_ИВ_Безопла</Наименование>
						<Порядок>21250</Порядок>
						<Источник>НПНК_ИВ_БезоплатноКинематограф</Источник>
						<Приемник>НПНК_ИВ_БезоплатноКинематограф</Приемник>
					</Значение>
					<Значение>
						<Код>426</Код>
						<Наименование>НПНК_ИВ_БезоплатноКультура --&gt; НПНК_ИВ_БезоплатноК</Наименование>
						<Порядок>21300</Порядок>
						<Источник>НПНК_ИВ_БезоплатноКультура</Источник>
						<Приемник>НПНК_ИВ_БезоплатноКультура</Приемник>
					</Значение>
					<Значение>
						<Код>427</Код>
						<Наименование>НПНК_ИВ_БезоплатноПрофсоюзы --&gt; НПНК_ИВ_Безоплатно</Наименование>
						<Порядок>21350</Порядок>
						<Источник>НПНК_ИВ_БезоплатноПрофсоюзы</Источник>
						<Приемник>НПНК_ИВ_БезоплатноПрофсоюзы</Приемник>
					</Значение>
					<Значение>
						<Код>428</Код>
						<Наименование>НПНК_ИВ_БезоплатноУголь --&gt; НПНК_ИВ_БезоплатноУгол</Наименование>
						<Порядок>21400</Порядок>
						<Источник>НПНК_ИВ_БезоплатноУголь</Источник>
						<Приемник>НПНК_ИВ_БезоплатноУголь</Приемник>
					</Значение>
					<Значение>
						<Код>429</Код>
						<Наименование>НПНК_ИВ_БезоплатноЧернобыльские --&gt; НПНК_ИВ_Безопл</Наименование>
						<Порядок>21450</Порядок>
						<Источник>НПНК_ИВ_БезоплатноЧернобыльские</Источник>
						<Приемник>НПНК_ИВ_БезоплатноЧернобыльские</Приемник>
					</Значение>
					<Значение>
						<Код>430</Код>
						<Наименование>НПНК_ИВ_ВзносыДобровольные --&gt; НПНК_ИВ_ВзносыДобро</Наименование>
						<Порядок>21500</Порядок>
						<Источник>НПНК_ИВ_ВзносыДобровольные</Источник>
						<Приемник>НПНК_ИВ_ВзносыДобровольные</Приемник>
					</Значение>
					<Значение>
						<Код>431</Код>
						<Наименование>НПНК_ИВ_ВыплатыРаботникам --&gt; НПНК_ИВ_ВыплатыРабот</Наименование>
						<Порядок>21550</Порядок>
						<Источник>НПНК_ИВ_ВыплатыРаботникам</Источник>
						<Приемник>НПНК_ИВ_ВыплатыРаботникам</Приемник>
					</Значение>
					<Значение>
						<Код>432</Код>
						<Наименование>НПНК_ИВ_ДолгосрочДог --&gt; НПНК_ИВ_ДолгосрочДог</Наименование>
						<Порядок>21600</Порядок>
						<Источник>НПНК_ИВ_ДолгосрочДог</Источник>
						<Приемник>НПНК_ИВ_ДолгосрочДог</Приемник>
					</Значение>
					<Значение>
						<Код>433</Код>
						<Наименование>НПНК_ИВ_ДолгТреб --&gt; НПНК_ИВ_ДолгТреб</Наименование>
						<Порядок>21650</Порядок>
						<Источник>НПНК_ИВ_ДолгТреб</Источник>
						<Приемник>НПНК_ИВ_ДолгТреб</Приемник>
					</Значение>
					<Значение>
						<Код>434</Код>
						<Наименование>НПНК_ИВ_Другие_ --&gt; НПНК_ИВ_Другие_</Наименование>
						<Порядок>21700</Порядок>
						<Источник>НПНК_ИВ_Другие_</Источник>
						<Приемник>НПНК_ИВ_Другие_</Приемник>
					</Значение>
					<Значение>
						<Код>435</Код>
						<Наименование>НПНК_ИВ_Земля --&gt; НПНК_ИВ_Земля</Наименование>
						<Порядок>21750</Порядок>
						<Источник>НПНК_ИВ_Земля</Источник>
						<Приемник>НПНК_ИВ_Земля</Приемник>
					</Значение>
					<Значение>
						<Код>436</Код>
						<Наименование>НПНК_ИВ_ИзменениеСуммыКомпенсации --&gt; НПНК_ИВ_Изме</Наименование>
						<Порядок>21800</Порядок>
						<Источник>НПНК_ИВ_ИзменениеСуммыКомпенсации</Источник>
						<Приемник>НПНК_ИВ_ИзменениеСуммыКомпенсации</Приемник>
					</Значение>
					<Значение>
						<Код>437</Код>
						<Наименование>НПНК_ИВ_Инжиниринг_ --&gt; НПНК_ИВ_Инжиниринг_</Наименование>
						<Порядок>21850</Порядок>
						<Источник>НПНК_ИВ_Инжиниринг_</Источник>
						<Приемник>НПНК_ИВ_Инжиниринг_</Приемник>
					</Значение>
					<Значение>
						<Код>438</Код>
						<Наименование>НПНК_ИВ_Инжиниринг_Нерезиденты --&gt; НПНК_ИВ_Инжинир</Наименование>
						<Порядок>21900</Порядок>
						<Источник>НПНК_ИВ_Инжиниринг_Нерезиденты</Источник>
						<Приемник>НПНК_ИВ_Инжиниринг_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>439</Код>
						<Наименование>НПНК_ИВ_Информация --&gt; НПНК_ИВ_Информация</Наименование>
						<Порядок>21950</Порядок>
						<Источник>НПНК_ИВ_Информация</Источник>
						<Приемник>НПНК_ИВ_Информация</Приемник>
					</Значение>
					<Значение>
						<Код>440</Код>
						<Наименование>НПНК_ИВ_Консалтинг_ --&gt; НПНК_ИВ_Консалтинг_</Наименование>
						<Порядок>22000</Порядок>
						<Источник>НПНК_ИВ_Консалтинг_</Источник>
						<Приемник>НПНК_ИВ_Консалтинг_</Приемник>
					</Значение>
					<Значение>
						<Код>441</Код>
						<Наименование>НПНК_ИВ_Консалтинг_Нерезиденты --&gt; НПНК_ИВ_Консалт</Наименование>
						<Порядок>22050</Порядок>
						<Источник>НПНК_ИВ_Консалтинг_Нерезиденты</Источник>
						<Приемник>НПНК_ИВ_Консалтинг_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>442</Код>
						<Наименование>НПНК_ИВ_КурсРазницы --&gt; НПНК_ИВ_КурсРазницы</Наименование>
						<Порядок>22100</Порядок>
						<Источник>НПНК_ИВ_КурсРазницы</Источник>
						<Приемник>НПНК_ИВ_КурсРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>443</Код>
						<Наименование>НПНК_ИВ_Ликвидация --&gt; НПНК_ИВ_Ликвидация</Наименование>
						<Порядок>22150</Порядок>
						<Источник>НПНК_ИВ_Ликвидация</Источник>
						<Приемник>НПНК_ИВ_Ликвидация</Приемник>
					</Значение>
					<Значение>
						<Код>444</Код>
						<Наименование>НПНК_ИВ_Лицензии --&gt; НПНК_ИВ_Лицензии</Наименование>
						<Порядок>22200</Порядок>
						<Источник>НПНК_ИВ_Лицензии</Источник>
						<Приемник>НПНК_ИВ_Лицензии</Приемник>
					</Значение>
					<Значение>
						<Код>445</Код>
						<Наименование>НПНК_ИВ_Налоги --&gt; НПНК_ИВ_Налоги</Наименование>
						<Порядок>22250</Порядок>
						<Источник>НПНК_ИВ_Налоги</Источник>
						<Приемник>НПНК_ИВ_Налоги</Приемник>
					</Значение>
					<Значение>
						<Код>446</Код>
						<Наименование>НПНК_ИВ_ОС --&gt; НПНК_ИВ_ОС</Наименование>
						<Порядок>22300</Порядок>
						<Источник>НПНК_ИВ_ОС</Источник>
						<Приемник>НПНК_ИВ_ОС</Приемник>
					</Значение>
					<Значение>
						<Код>447</Код>
						<Наименование>НПНК_ИВ_ОтменаДоговора --&gt; НПНК_ИВ_ОтменаДоговора</Наименование>
						<Порядок>22350</Порядок>
						<Источник>НПНК_ИВ_ОтменаДоговора</Источник>
						<Приемник>НПНК_ИВ_ОтменаДоговора</Приемник>
					</Значение>
					<Значение>
						<Код>448</Код>
						<Наименование>НПНК_ИВ_ОтступТребПервое --&gt; НПНК_ИВ_ОтступТребПер</Наименование>
						<Порядок>22400</Порядок>
						<Источник>НПНК_ИВ_ОтступТребПервое</Источник>
						<Приемник>НПНК_ИВ_ОтступТребПервое</Приемник>
					</Значение>
					<Значение>
						<Код>449</Код>
						<Наименование>НПНК_ИВ_Офшор --&gt; НПНК_ИВ_Офшор</Наименование>
						<Порядок>22450</Порядок>
						<Источник>НПНК_ИВ_Офшор</Источник>
						<Приемник>НПНК_ИВ_Офшор</Приемник>
					</Значение>
					<Значение>
						<Код>450</Код>
						<Наименование>НПНК_ИВ_Пенсии --&gt; НПНК_ИВ_Пенсии</Наименование>
						<Порядок>22500</Порядок>
						<Источник>НПНК_ИВ_Пенсии</Источник>
						<Приемник>НПНК_ИВ_Пенсии</Приемник>
					</Значение>
					<Значение>
						<Код>451</Код>
						<Наименование>НПНК_ИВ_ПродажаЗемли --&gt; НПНК_ИВ_ПродажаЗемли</Наименование>
						<Порядок>22550</Порядок>
						<Источник>НПНК_ИВ_ПродажаЗемли</Источник>
						<Приемник>НПНК_ИВ_ПродажаЗемли</Приемник>
					</Значение>
					<Значение>
						<Код>452</Код>
						<Наименование>НПНК_ИВ_Регистрация --&gt; НПНК_ИВ_Регистрация</Наименование>
						<Порядок>22600</Порядок>
						<Источник>НПНК_ИВ_Регистрация</Источник>
						<Приемник>НПНК_ИВ_Регистрация</Приемник>
					</Значение>
					<Значение>
						<Код>453</Код>
						<Наименование>НПНК_ИВ_Роялти_ --&gt; НПНК_ИВ_Роялти_</Наименование>
						<Порядок>22650</Порядок>
						<Источник>НПНК_ИВ_Роялти_</Источник>
						<Приемник>НПНК_ИВ_Роялти_</Приемник>
					</Значение>
					<Значение>
						<Код>454</Код>
						<Наименование>НПНК_ИВ_Роялти_Нерезиденты --&gt; НПНК_ИВ_Роялти_Нере</Наименование>
						<Порядок>22700</Порядок>
						<Источник>НПНК_ИВ_Роялти_Нерезиденты</Источник>
						<Приемник>НПНК_ИВ_Роялти_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>455</Код>
						<Наименование>НПНК_ИВ_СБ --&gt; НПНК_ИВ_СБ</Наименование>
						<Порядок>22750</Порядок>
						<Источник>НПНК_ИВ_СБ</Источник>
						<Приемник>НПНК_ИВ_СБ</Приемник>
					</Значение>
					<Значение>
						<Код>456</Код>
						<Наименование>НПНК_ИВ_СписаниеБезнадежДебЗадолж --&gt; НПНК_ИВ_Спис</Наименование>
						<Порядок>22800</Порядок>
						<Источник>НПНК_ИВ_СписаниеБезнадежДебЗадолж</Источник>
						<Приемник>НПНК_ИВ_СписаниеБезнадежДебЗадолж</Приемник>
					</Значение>
					<Значение>
						<Код>457</Код>
						<Наименование>НПНК_ИВ_СтраховойРезервНебанкФинОрг --&gt; НПНК_ИВ_Ст</Наименование>
						<Порядок>22850</Порядок>
						<Источник>НПНК_ИВ_СтраховойРезервНебанкФинОрг</Источник>
						<Приемник>НПНК_ИВ_СтраховойРезервНебанкФинОрг</Приемник>
					</Значение>
					<Значение>
						<Код>458</Код>
						<Наименование>НПНК_ИВ_УпрИмуществом --&gt; НПНК_ИВ_УпрИмуществом</Наименование>
						<Порядок>22900</Порядок>
						<Источник>НПНК_ИВ_УпрИмуществом</Источник>
						<Приемник>НПНК_ИВ_УпрИмуществом</Приемник>
					</Значение>
					<Значение>
						<Код>459</Код>
						<Наименование>НПНК_ИВ_ФинПомВозврат_ --&gt; НПНК_ИВ_ФинПомВозврат_</Наименование>
						<Порядок>22950</Порядок>
						<Источник>НПНК_ИВ_ФинПомВозврат_</Источник>
						<Приемник>НПНК_ИВ_ФинПомВозврат_</Приемник>
					</Значение>
					<Значение>
						<Код>460</Код>
						<Наименование>НПНК_ИВ_Экология --&gt; НПНК_ИВ_Экология</Наименование>
						<Порядок>23000</Порядок>
						<Источник>НПНК_ИВ_Экология</Источник>
						<Приемник>НПНК_ИВ_Экология</Приемник>
					</Значение>
					<Значение>
						<Код>461</Код>
						<Наименование>НПНК_ИД_ --&gt; НПНК_ИД_</Наименование>
						<Порядок>23050</Порядок>
						<Источник>НПНК_ИД_</Источник>
						<Приемник>НПНК_ИД_</Приемник>
					</Значение>
					<Значение>
						<Код>462</Код>
						<Наименование>НПНК_ИД_Аренда --&gt; НПНК_ИД_Аренда</Наименование>
						<Порядок>23100</Порядок>
						<Источник>НПНК_ИД_Аренда</Источник>
						<Приемник>НПНК_ИД_Аренда</Приемник>
					</Значение>
					<Значение>
						<Код>463</Код>
						<Наименование>НПНК_ИД_БезнадежКредиторская --&gt; НПНК_ИД_БезнадежК</Наименование>
						<Порядок>23150</Порядок>
						<Источник>НПНК_ИД_БезнадежКредиторская</Источник>
						<Приемник>НПНК_ИД_БезнадежКредиторская</Приемник>
					</Значение>
					<Значение>
						<Код>464</Код>
						<Наименование>НПНК_ИД_ВладДолгТреб --&gt; НПНК_ИД_ВладДолгТреб</Наименование>
						<Порядок>23200</Порядок>
						<Источник>НПНК_ИД_ВладДолгТреб</Источник>
						<Приемник>НПНК_ИД_ВладДолгТреб</Приемник>
					</Значение>
					<Значение>
						<Код>465</Код>
						<Наименование>НПНК_ИД_Дивиденды --&gt; НПНК_ИД_Дивиденды</Наименование>
						<Порядок>23250</Порядок>
						<Источник>НПНК_ИД_Дивиденды</Источник>
						<Приемник>НПНК_ИД_Дивиденды</Приемник>
					</Значение>
					<Значение>
						<Код>466</Код>
						<Наименование>НПНК_ИД_ДолгосрочДог --&gt; НПНК_ИД_ДолгосрочДог</Наименование>
						<Порядок>23300</Порядок>
						<Источник>НПНК_ИД_ДолгосрочДог</Источник>
						<Приемник>НПНК_ИД_ДолгосрочДог</Приемник>
					</Значение>
					<Значение>
						<Код>467</Код>
						<Наименование>НПНК_ИД_Дотации --&gt; НПНК_ИД_Дотации</Наименование>
						<Порядок>23350</Порядок>
						<Источник>НПНК_ИД_Дотации</Источник>
						<Приемник>НПНК_ИД_Дотации</Приемник>
					</Значение>
					<Значение>
						<Код>468</Код>
						<Наименование>НПНК_ИД_Другие_ --&gt; НПНК_ИД_Другие_</Наименование>
						<Порядок>23400</Порядок>
						<Источник>НПНК_ИД_Другие_</Источник>
						<Приемник>НПНК_ИД_Другие_</Приемник>
					</Значение>
					<Значение>
						<Код>469</Код>
						<Наименование>НПНК_ИД_ИзменениеСуммыКомпенсации --&gt; НПНК_ИД_Изме</Наименование>
						<Порядок>23450</Порядок>
						<Источник>НПНК_ИД_ИзменениеСуммыКомпенсации</Источник>
						<Приемник>НПНК_ИД_ИзменениеСуммыКомпенсации</Приемник>
					</Значение>
					<Значение>
						<Код>470</Код>
						<Наименование>НПНК_ИД_КурсРазницы --&gt; НПНК_ИД_КурсРазницы</Наименование>
						<Порядок>23500</Порядок>
						<Источник>НПНК_ИД_КурсРазницы</Источник>
						<Приемник>НПНК_ИД_КурсРазницы</Приемник>
					</Значение>
					<Значение>
						<Код>471</Код>
						<Наименование>НПНК_ИД_Ликвидация --&gt; НПНК_ИД_Ликвидация</Наименование>
						<Порядок>23550</Порядок>
						<Источник>НПНК_ИД_Ликвидация</Источник>
						<Приемник>НПНК_ИД_Ликвидация</Приемник>
					</Значение>
					<Значение>
						<Код>472</Код>
						<Наименование>НПНК_ИД_Налоги --&gt; НПНК_ИД_Налоги</Наименование>
						<Порядок>23600</Порядок>
						<Источник>НПНК_ИД_Налоги</Источник>
						<Приемник>НПНК_ИД_Налоги</Приемник>
					</Значение>
					<Значение>
						<Код>473</Код>
						<Наименование>НПНК_ИД_ОтменаДоговора --&gt; НПНК_ИД_ОтменаДоговора</Наименование>
						<Порядок>23650</Порядок>
						<Источник>НПНК_ИД_ОтменаДоговора</Источник>
						<Приемник>НПНК_ИД_ОтменаДоговора</Приемник>
					</Значение>
					<Значение>
						<Код>474</Код>
						<Наименование>НПНК_ИД_ОтступДолгТреб --&gt; НПНК_ИД_ОтступДолгТреб</Наименование>
						<Порядок>23700</Порядок>
						<Источник>НПНК_ИД_ОтступДолгТреб</Источник>
						<Приемник>НПНК_ИД_ОтступДолгТреб</Приемник>
					</Значение>
					<Значение>
						<Код>475</Код>
						<Наименование>НПНК_ИД_ОтступТребПервое --&gt; НПНК_ИД_ОтступТребПер</Наименование>
						<Порядок>23750</Порядок>
						<Источник>НПНК_ИД_ОтступТребПервое</Источник>
						<Приемник>НПНК_ИД_ОтступТребПервое</Приемник>
					</Значение>
					<Значение>
						<Код>476</Код>
						<Наименование>НПНК_ИД_ПродажаЗемли --&gt; НПНК_ИД_ПродажаЗемли</Наименование>
						<Порядок>23800</Порядок>
						<Источник>НПНК_ИД_ПродажаЗемли</Источник>
						<Приемник>НПНК_ИД_ПродажаЗемли</Приемник>
					</Значение>
					<Значение>
						<Код>477</Код>
						<Наименование>НПНК_ИД_ПродажаОС --&gt; НПНК_ИД_ПродажаОС</Наименование>
						<Порядок>23850</Порядок>
						<Источник>НПНК_ИД_ПродажаОС</Источник>
						<Приемник>НПНК_ИД_ПродажаОС</Приемник>
					</Значение>
					<Значение>
						<Код>478</Код>
						<Наименование>НПНК_ИД_Проценты --&gt; НПНК_ИД_Проценты</Наименование>
						<Порядок>23900</Порядок>
						<Источник>НПНК_ИД_Проценты</Источник>
						<Приемник>НПНК_ИД_Проценты</Приемник>
					</Значение>
					<Значение>
						<Код>479</Код>
						<Наименование>НПНК_ИД_Роялти --&gt; НПНК_ИД_Роялти</Наименование>
						<Порядок>23950</Порядок>
						<Источник>НПНК_ИД_Роялти</Источник>
						<Приемник>НПНК_ИД_Роялти</Приемник>
					</Значение>
					<Значение>
						<Код>480</Код>
						<Наименование>НПНК_ИД_СБ --&gt; НПНК_ИД_СБ</Наименование>
						<Порядок>24000</Порядок>
						<Источник>НПНК_ИД_СБ</Источник>
						<Приемник>НПНК_ИД_СБ</Приемник>
					</Значение>
					<Значение>
						<Код>481</Код>
						<Наименование>НПНК_ИД_Страховка --&gt; НПНК_ИД_Страховка</Наименование>
						<Порядок>24050</Порядок>
						<Источник>НПНК_ИД_Страховка</Источник>
						<Приемник>НПНК_ИД_Страховка</Приемник>
					</Значение>
					<Значение>
						<Код>482</Код>
						<Наименование>НПНК_ИД_СудПошлина --&gt; НПНК_ИД_СудПошлина</Наименование>
						<Порядок>24100</Порядок>
						<Источник>НПНК_ИД_СудПошлина</Источник>
						<Приемник>НПНК_ИД_СудПошлина</Приемник>
					</Значение>
					<Значение>
						<Код>483</Код>
						<Наименование>НПНК_ИД_ТоварыБеспл --&gt; НПНК_ИД_ТоварыБеспл</Наименование>
						<Порядок>24150</Порядок>
						<Источник>НПНК_ИД_ТоварыБеспл</Источник>
						<Приемник>НПНК_ИД_ТоварыБеспл</Приемник>
					</Значение>
					<Значение>
						<Код>484</Код>
						<Наименование>НПНК_ИД_УпрИмуществом --&gt; НПНК_ИД_УпрИмуществом</Наименование>
						<Порядок>24200</Порядок>
						<Источник>НПНК_ИД_УпрИмуществом</Источник>
						<Приемник>НПНК_ИД_УпрИмуществом</Приемник>
					</Значение>
					<Значение>
						<Код>485</Код>
						<Наименование>НПНК_ИД_ФинПомВозврат_ --&gt; НПНК_ИД_ФинПомВозврат_</Наименование>
						<Порядок>24250</Порядок>
						<Источник>НПНК_ИД_ФинПомВозврат_</Источник>
						<Приемник>НПНК_ИД_ФинПомВозврат_</Приемник>
					</Значение>
					<Значение>
						<Код>486</Код>
						<Наименование>НПНК_ИД_ФинПомНевозврат_ --&gt; НПНК_ИД_ФинПомНевозвр</Наименование>
						<Порядок>24300</Порядок>
						<Источник>НПНК_ИД_ФинПомНевозврат_</Источник>
						<Приемник>НПНК_ИД_ФинПомНевозврат_</Приемник>
					</Значение>
					<Значение>
						<Код>487</Код>
						<Наименование>НПНК_ИД_ФинПомНевозврат_Проценты --&gt; НПНК_ИД_ФинПо</Наименование>
						<Порядок>24350</Порядок>
						<Источник>НПНК_ИД_ФинПомНевозврат_Проценты</Источник>
						<Приемник>НПНК_ИД_ФинПомНевозврат_Проценты</Приемник>
					</Значение>
					<Значение>
						<Код>488</Код>
						<Наименование>НПНК_ИД_Штрафы --&gt; НПНК_ИД_Штрафы</Наименование>
						<Порядок>24400</Порядок>
						<Источник>НПНК_ИД_Штрафы</Источник>
						<Приемник>НПНК_ИД_Штрафы</Приемник>
					</Значение>
					<Значение>
						<Код>489</Код>
						<Наименование>НПНК_НеУчитывать --&gt; НПНК_НеУчитывать</Наименование>
						<Порядок>24450</Порядок>
						<Источник>НПНК_НеУчитывать</Источник>
						<Приемник>НПНК_НеУчитывать</Приемник>
					</Значение>
					<Значение>
						<Код>490</Код>
						<Наименование>НПНК_Патенты --&gt; НПНК_Патенты</Наименование>
						<Порядок>24500</Порядок>
						<Источник>НПНК_Патенты</Источник>
						<Приемник>НПНК_Патенты</Приемник>
					</Значение>
					<Значение>
						<Код>491</Код>
						<Наименование>НПНК_ПЗ_ --&gt; НПНК_ПЗ_</Наименование>
						<Порядок>24550</Порядок>
						<Источник>НПНК_ПЗ_</Источник>
						<Приемник>НПНК_ПЗ_</Приемник>
					</Значение>
					<Значение>
						<Код>492</Код>
						<Наименование>НПНК_ПЗ_АмортизацияНА --&gt; НПНК_ПЗ_АмортизацияНА</Наименование>
						<Порядок>24600</Порядок>
						<Источник>НПНК_ПЗ_АмортизацияНА</Источник>
						<Приемник>НПНК_ПЗ_АмортизацияНА</Приемник>
					</Значение>
					<Значение>
						<Код>493</Код>
						<Наименование>НПНК_ПЗ_АмортизацияОС --&gt; НПНК_ПЗ_АмортизацияОС</Наименование>
						<Порядок>24650</Порядок>
						<Источник>НПНК_ПЗ_АмортизацияОС</Источник>
						<Приемник>НПНК_ПЗ_АмортизацияОС</Приемник>
					</Значение>
					<Значение>
						<Код>494</Код>
						<Наименование>НПНК_ПЗ_Взносы --&gt; НПНК_ПЗ_Взносы</Наименование>
						<Порядок>24700</Порядок>
						<Источник>НПНК_ПЗ_Взносы</Источник>
						<Приемник>НПНК_ПЗ_Взносы</Приемник>
					</Значение>
					<Значение>
						<Код>495</Код>
						<Наименование>НПНК_ПЗ_Другие --&gt; НПНК_ПЗ_Другие</Наименование>
						<Порядок>24750</Порядок>
						<Источник>НПНК_ПЗ_Другие</Источник>
						<Приемник>НПНК_ПЗ_Другие</Приемник>
					</Значение>
					<Значение>
						<Код>496</Код>
						<Наименование>НПНК_ПЗ_Зарплата --&gt; НПНК_ПЗ_Зарплата</Наименование>
						<Порядок>24800</Порядок>
						<Источник>НПНК_ПЗ_Зарплата</Источник>
						<Приемник>НПНК_ПЗ_Зарплата</Приемник>
					</Значение>
					<Значение>
						<Код>497</Код>
						<Наименование>НПНК_ПЗ_Инжиниринг_ --&gt; НПНК_ПЗ_Инжиниринг_</Наименование>
						<Порядок>24850</Порядок>
						<Источник>НПНК_ПЗ_Инжиниринг_</Источник>
						<Приемник>НПНК_ПЗ_Инжиниринг_</Приемник>
					</Значение>
					<Значение>
						<Код>498</Код>
						<Наименование>НПНК_ПЗ_Инжиниринг_Нерезиденты --&gt; НПНК_ПЗ_Инжинир</Наименование>
						<Порядок>24900</Порядок>
						<Источник>НПНК_ПЗ_Инжиниринг_Нерезиденты</Источник>
						<Приемник>НПНК_ПЗ_Инжиниринг_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>499</Код>
						<Наименование>НПНК_ПЗ_Консалтинг_ --&gt; НПНК_ПЗ_Консалтинг_</Наименование>
						<Порядок>24950</Порядок>
						<Источник>НПНК_ПЗ_Консалтинг_</Источник>
						<Приемник>НПНК_ПЗ_Консалтинг_</Приемник>
					</Значение>
					<Значение>
						<Код>500</Код>
						<Наименование>НПНК_ПЗ_Консалтинг_Нерезиденты --&gt; НПНК_ПЗ_Консалт</Наименование>
						<Порядок>25000</Порядок>
						<Источник>НПНК_ПЗ_Консалтинг_Нерезиденты</Источник>
						<Приемник>НПНК_ПЗ_Консалтинг_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>501</Код>
						<Наименование>НПНК_ПЗ_Материалы_ --&gt; НПНК_ПЗ_Материалы_</Наименование>
						<Порядок>25050</Порядок>
						<Источник>НПНК_ПЗ_Материалы_</Источник>
						<Приемник>НПНК_ПЗ_Материалы_</Приемник>
					</Значение>
					<Значение>
						<Код>502</Код>
						<Наименование>НПНК_ПЗ_Материалы_Отходы --&gt; НПНК_ПЗ_Материалы_Отх</Наименование>
						<Порядок>25100</Порядок>
						<Источник>НПНК_ПЗ_Материалы_Отходы</Источник>
						<Приемник>НПНК_ПЗ_Материалы_Отходы</Приемник>
					</Значение>
					<Значение>
						<Код>503</Код>
						<Наименование>НПНК_ПЗ_Офшор --&gt; НПНК_ПЗ_Офшор</Наименование>
						<Порядок>25150</Порядок>
						<Источник>НПНК_ПЗ_Офшор</Источник>
						<Приемник>НПНК_ПЗ_Офшор</Приемник>
					</Значение>
					<Значение>
						<Код>504</Код>
						<Наименование>НПНК_ПЗ_Пф --&gt; НПНК_ПЗ_Пф</Наименование>
						<Порядок>25200</Порядок>
						<Источник>НПНК_ПЗ_Пф</Источник>
						<Приемник>НПНК_ПЗ_Пф</Приемник>
					</Значение>
					<Значение>
						<Код>505</Код>
						<Наименование>НПНК_ПЗ_Ремонт --&gt; НПНК_ПЗ_Ремонт</Наименование>
						<Порядок>25250</Порядок>
						<Источник>НПНК_ПЗ_Ремонт</Источник>
						<Приемник>НПНК_ПЗ_Ремонт</Приемник>
					</Значение>
					<Значение>
						<Код>506</Код>
						<Наименование>НПНК_ПЗ_Роялти_ --&gt; НПНК_ПЗ_Роялти_</Наименование>
						<Порядок>25300</Порядок>
						<Источник>НПНК_ПЗ_Роялти_</Источник>
						<Приемник>НПНК_ПЗ_Роялти_</Приемник>
					</Значение>
					<Значение>
						<Код>507</Код>
						<Наименование>НПНК_ПЗ_Роялти_Нерезиденты --&gt; НПНК_ПЗ_Роялти_Нере</Наименование>
						<Порядок>25350</Порядок>
						<Источник>НПНК_ПЗ_Роялти_Нерезиденты</Источник>
						<Приемник>НПНК_ПЗ_Роялти_Нерезиденты</Приемник>
					</Значение>
					<Значение>
						<Код>508</Код>
						<Наименование>НПНК_ПЗ_Страхование --&gt; НПНК_ПЗ_Страхование</Наименование>
						<Порядок>25400</Порядок>
						<Источник>НПНК_ПЗ_Страхование</Источник>
						<Приемник>НПНК_ПЗ_Страхование</Приемник>
					</Значение>
					<Значение>
						<Код>509</Код>
						<Наименование>НПНК_ПЗ_Услуги --&gt; НПНК_ПЗ_Услуги</Наименование>
						<Порядок>25450</Порядок>
						<Источник>НПНК_ПЗ_Услуги</Источник>
						<Приемник>НПНК_ПЗ_Услуги</Приемник>
					</Значение>
					<Значение>
						<Код>510</Код>
						<Наименование>НПНК_СВ_ --&gt; НПНК_СВ_</Наименование>
						<Порядок>25500</Порядок>
						<Источник>НПНК_СВ_</Источник>
						<Приемник>НПНК_СВ_</Приемник>
					</Значение>
					<Значение>
						<Код>511</Код>
						<Наименование>НПНК_СВ_ПродукцияУслуги --&gt; НПНК_СВ_ПродукцияУслуг</Наименование>
						<Порядок>25550</Порядок>
						<Источник>НПНК_СВ_ПродукцияУслуги</Источник>
						<Приемник>НПНК_СВ_ПродукцияУслуги</Приемник>
					</Значение>
					<Значение>
						<Код>512</Код>
						<Наименование>НПНК_СВ_Товары --&gt; НПНК_СВ_Товары</Наименование>
						<Порядок>25600</Порядок>
						<Источник>НПНК_СВ_Товары</Источник>
						<Приемник>НПНК_СВ_Товары</Приемник>
					</Значение>
					<Значение>
						<Код>513</Код>
						<Наименование>НПНК_ФВ_ --&gt; НПНК_ФВ_</Наименование>
						<Порядок>25650</Порядок>
						<Источник>НПНК_ФВ_</Источник>
						<Приемник>НПНК_ФВ_</Приемник>
					</Значение>
					<Значение>
						<Код>514</Код>
						<Наименование>НПНК_ФВ_Проценты --&gt; НПНК_ФВ_Проценты</Наименование>
						<Порядок>25700</Порядок>
						<Источник>НПНК_ФВ_Проценты</Источник>
						<Приемник>НПНК_ФВ_Проценты</Приемник>
					</Значение>
					<Значение>
						<Код>515</Код>
						<Наименование>НПНК_ЦП_ --&gt; НПНК_ЦП_</Наименование>
						<Порядок>25750</Порядок>
						<Источник>НПНК_ЦП_</Источник>
						<Приемник>НПНК_ЦП_</Приемник>
					</Значение>
					<Значение>
						<Код>516</Код>
						<Наименование>НПНК_ЦП_АкцииДоход --&gt; НПНК_ЦП_АкцииДоход</Наименование>
						<Порядок>25800</Порядок>
						<Источник>НПНК_ЦП_АкцииДоход</Источник>
						<Приемник>НПНК_ЦП_АкцииДоход</Приемник>
					</Значение>
					<Значение>
						<Код>517</Код>
						<Наименование>НПНК_ЦП_АкцииЗатраты --&gt; НПНК_ЦП_АкцииЗатраты</Наименование>
						<Порядок>25850</Порядок>
						<Источник>НПНК_ЦП_АкцииЗатраты</Источник>
						<Приемник>НПНК_ЦП_АкцииЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>518</Код>
						<Наименование>НПНК_ЦП_ВекселиДоход --&gt; НПНК_ЦП_ВекселиДоход</Наименование>
						<Порядок>25900</Порядок>
						<Источник>НПНК_ЦП_ВекселиДоход</Источник>
						<Приемник>НПНК_ЦП_ВекселиДоход</Приемник>
					</Значение>
					<Значение>
						<Код>519</Код>
						<Наименование>НПНК_ЦП_ВекселиЗатраты --&gt; НПНК_ЦП_ВекселиЗатраты</Наименование>
						<Порядок>25950</Порядок>
						<Источник>НПНК_ЦП_ВекселиЗатраты</Источник>
						<Приемник>НПНК_ЦП_ВекселиЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>520</Код>
						<Наименование>НПНК_ЦП_ДериватыДоход --&gt; НПНК_ЦП_ДериватыДоход</Наименование>
						<Порядок>26000</Порядок>
						<Источник>НПНК_ЦП_ДериватыДоход</Источник>
						<Приемник>НПНК_ЦП_ДериватыДоход</Приемник>
					</Значение>
					<Значение>
						<Код>521</Код>
						<Наименование>НПНК_ЦП_ДериватыЗатраты --&gt; НПНК_ЦП_ДериватыЗатрат</Наименование>
						<Порядок>26050</Порядок>
						<Источник>НПНК_ЦП_ДериватыЗатраты</Источник>
						<Приемник>НПНК_ЦП_ДериватыЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>522</Код>
						<Наименование>НПНК_ЦП_ДругиеЦБДоход --&gt; НПНК_ЦП_ДругиеЦБДоход</Наименование>
						<Порядок>26100</Порядок>
						<Источник>НПНК_ЦП_ДругиеЦБДоход</Источник>
						<Приемник>НПНК_ЦП_ДругиеЦБДоход</Приемник>
					</Значение>
					<Значение>
						<Код>523</Код>
						<Наименование>НПНК_ЦП_ДругиеЦБЗатраты --&gt; НПНК_ЦП_ДругиеЦБЗатрат</Наименование>
						<Порядок>26150</Порядок>
						<Источник>НПНК_ЦП_ДругиеЦБЗатраты</Источник>
						<Приемник>НПНК_ЦП_ДругиеЦБЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>524</Код>
						<Наименование>НПНК_ЦП_ИпотечСертДоход --&gt; НПНК_ЦП_ИпотечСертДохо</Наименование>
						<Порядок>26200</Порядок>
						<Источник>НПНК_ЦП_ИпотечСертДоход</Источник>
						<Приемник>НПНК_ЦП_ИпотечСертДоход</Приемник>
					</Значение>
					<Значение>
						<Код>525</Код>
						<Наименование>НПНК_ЦП_ИпотечСертЗатраты --&gt; НПНК_ЦП_ИпотечСертЗа</Наименование>
						<Порядок>26250</Порядок>
						<Источник>НПНК_ЦП_ИпотечСертЗатраты</Источник>
						<Приемник>НПНК_ЦП_ИпотечСертЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>526</Код>
						<Наименование>НПНК_ЦП_ОблигацииДоход --&gt; НПНК_ЦП_ОблигацииДоход</Наименование>
						<Порядок>26300</Порядок>
						<Источник>НПНК_ЦП_ОблигацииДоход</Источник>
						<Приемник>НПНК_ЦП_ОблигацииДоход</Приемник>
					</Значение>
					<Значение>
						<Код>527</Код>
						<Наименование>НПНК_ЦП_ОблигацииЗатраты --&gt; НПНК_ЦП_ОблигацииЗатр</Наименование>
						<Порядок>26350</Порядок>
						<Источник>НПНК_ЦП_ОблигацииЗатраты</Источник>
						<Приемник>НПНК_ЦП_ОблигацииЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>528</Код>
						<Наименование>НПНК_ЦП_СертФОНДоход --&gt; НПНК_ЦП_СертФОНДоход</Наименование>
						<Порядок>26400</Порядок>
						<Источник>НПНК_ЦП_СертФОНДоход</Источник>
						<Приемник>НПНК_ЦП_СертФОНДоход</Приемник>
					</Значение>
					<Значение>
						<Код>529</Код>
						<Наименование>НПНК_ЦП_СертФОНЗатраты --&gt; НПНК_ЦП_СертФОНЗатраты</Наименование>
						<Порядок>26450</Порядок>
						<Источник>НПНК_ЦП_СертФОНЗатраты</Источник>
						<Приемник>НПНК_ЦП_СертФОНЗатраты</Приемник>
					</Значение>
					<Значение>
						<Код>530</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_ --&gt; ОтчетОбИс</Наименование>
						<Порядок>26500</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_</Приемник>
					</Значение>
					<Значение>
						<Код>531</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноВр</Наименование>
						<Порядок>26550</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноВременнаяНетрудоспособность</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноВременнаяНетрудоспособность</Приемник>
					</Значение>
					<Значение>
						<Код>532</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноВС</Наименование>
						<Порядок>26600</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноВСвязиСРаботойНаДругомПредприятии</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноВСвязиСРаботойНаДругомПредприятии</Приемник>
					</Значение>
					<Значение>
						<Код>533</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноДр</Наименование>
						<Порядок>26650</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноДругиеПричины</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноДругиеПричины</Приемник>
					</Значение>
					<Значение>
						<Код>534</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноЕж</Наименование>
						<Порядок>26700</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноЕжегодныеОтпуска</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноЕжегодныеОтпуска</Приемник>
					</Значение>
					<Значение>
						<Код>535</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноМа</Наименование>
						<Порядок>26750</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноМасовыйНеВыход</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноМасовыйНеВыход</Приемник>
					</Значение>
					<Значение>
						<Код>536</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноНе</Наименование>
						<Порядок>26800</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноНеявкаСвязаннаяСПереводомНаСокращенныйГрафик</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноНеявкаСвязаннаяСПереводомНаСокращенныйГрафик</Приемник>
					</Значение>
					<Значение>
						<Код>537</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноНе</Наименование>
						<Порядок>26850</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноНеявкаСРазрешенияАдминистрации</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноНеявкаСРазрешенияАдминистрации</Приемник>
					</Значение>
					<Значение>
						<Код>538</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноОт</Наименование>
						<Порядок>26900</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноОтпускПоИнициативеАдминистрации</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноОтпускПоИнициативеАдминистрации</Приемник>
					</Значение>
					<Значение>
						<Код>539</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноПр</Наименование>
						<Порядок>26950</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноПростои</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноПростои</Приемник>
					</Значение>
					<Значение>
						<Код>540</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_НеОтработаноУч</Наименование>
						<Порядок>27000</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноУчебныеОтпуска</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_НеОтработаноУчебныеОтпуска</Приемник>
					</Значение>
					<Значение>
						<Код>541</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_Отработано --&gt;</Наименование>
						<Порядок>27050</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_Отработано</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_Отработано</Приемник>
					</Значение>
					<Значение>
						<Код>542</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени_ОтработаноСвер</Наименование>
						<Порядок>27100</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени_ОтработаноСверхурочно</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени_ОтработаноСверхурочно</Приемник>
					</Значение>
					<Значение>
						<Код>543</Код>
						<Наименование>ОтчетПоТруду_ --&gt; ОтчетПоТруду_</Наименование>
						<Порядок>27150</Порядок>
						<Источник>ОтчетПоТруду_</Источник>
						<Приемник>ОтчетПоТруду_</Приемник>
					</Значение>
					<Значение>
						<Код>544</Код>
						<Наименование>ОтчетПоТруду_БольничныеПредприятие --&gt; ОтчетПоТруд</Наименование>
						<Порядок>27200</Порядок>
						<Источник>ОтчетПоТруду_БольничныеПредприятие</Источник>
						<Приемник>ОтчетПоТруду_БольничныеПредприятие</Приемник>
					</Значение>
					<Значение>
						<Код>545</Код>
						<Наименование>ОтчетПоТруду_ДивидендыНеШтатн --&gt; ОтчетПоТруду_Див</Наименование>
						<Порядок>27250</Порядок>
						<Источник>ОтчетПоТруду_ДивидендыНеШтатн</Источник>
						<Приемник>ОтчетПоТруду_ДивидендыНеШтатн</Приемник>
					</Значение>
					<Значение>
						<Код>546</Код>
						<Наименование>ОтчетПоТруду_ДивидендыШтатн --&gt; ОтчетПоТруду_Дивид</Наименование>
						<Порядок>27300</Порядок>
						<Источник>ОтчетПоТруду_ДивидендыШтатн</Источник>
						<Приемник>ОтчетПоТруду_ДивидендыШтатн</Приемник>
					</Значение>
					<Значение>
						<Код>547</Код>
						<Наименование>ОтчетПоТруду_КомпенНевыплачЗП --&gt; ОтчетПоТруду_Ком</Наименование>
						<Порядок>27350</Порядок>
						<Источник>ОтчетПоТруду_КомпенНевыплачЗП</Источник>
						<Приемник>ОтчетПоТруду_КомпенНевыплачЗП</Приемник>
					</Значение>
					<Значение>
						<Код>548</Код>
						<Наименование>ОтчетПоТруду_КомпенРостЦен --&gt; ОтчетПоТруду_Компен</Наименование>
						<Порядок>27400</Порядок>
						<Источник>ОтчетПоТруду_КомпенРостЦен</Источник>
						<Приемник>ОтчетПоТруду_КомпенРостЦен</Приемник>
					</Значение>
					<Значение>
						<Код>549</Код>
						<Наименование>ОтчетПоТруду_МатПомощь --&gt; ОтчетПоТруду_МатПомощь</Наименование>
						<Порядок>27450</Порядок>
						<Источник>ОтчетПоТруду_МатПомощь</Источник>
						<Приемник>ОтчетПоТруду_МатПомощь</Приемник>
					</Значение>
					<Значение>
						<Код>550</Код>
						<Наименование>ОтчетПоТруду_НадбавкиКОкладам --&gt; ОтчетПоТруду_Над</Наименование>
						<Порядок>27500</Порядок>
						<Источник>ОтчетПоТруду_НадбавкиКОкладам</Источник>
						<Приемник>ОтчетПоТруду_НадбавкиКОкладам</Приемник>
					</Значение>
					<Значение>
						<Код>551</Код>
						<Наименование>ОтчетПоТруду_НеФОТ --&gt; ОтчетПоТруду_НеФОТ</Наименование>
						<Порядок>27550</Порядок>
						<Источник>ОтчетПоТруду_НеФОТ</Источник>
						<Приемник>ОтчетПоТруду_НеФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>552</Код>
						<Наименование>ОтчетПоТруду_Отпуск --&gt; ОтчетПоТруду_Отпуск</Наименование>
						<Порядок>27600</Порядок>
						<Источник>ОтчетПоТруду_Отпуск</Источник>
						<Приемник>ОтчетПоТруду_Отпуск</Приемник>
					</Значение>
					<Значение>
						<Код>553</Код>
						<Наименование>ОтчетПоТруду_Премии --&gt; ОтчетПоТруду_Премии</Наименование>
						<Порядок>27650</Порядок>
						<Источник>ОтчетПоТруду_Премии</Источник>
						<Приемник>ОтчетПоТруду_Премии</Приемник>
					</Значение>
					<Значение>
						<Код>554</Код>
						<Наименование>ОтчетПоТруду_СоцЛьготы --&gt; ОтчетПоТруду_СоцЛьготы</Наименование>
						<Порядок>27700</Порядок>
						<Источник>ОтчетПоТруду_СоцЛьготы</Источник>
						<Приемник>ОтчетПоТруду_СоцЛьготы</Приемник>
					</Значение>
					<Значение>
						<Код>555</Код>
						<Наименование>ОтчетПоТруду_Соцстрах --&gt; ОтчетПоТруду_Соцстрах</Наименование>
						<Порядок>27750</Порядок>
						<Источник>ОтчетПоТруду_Соцстрах</Источник>
						<Приемник>ОтчетПоТруду_Соцстрах</Приемник>
					</Значение>
					<Значение>
						<Код>556</Код>
						<Наименование>ОтчетПоТруду_ФОТ --&gt; ОтчетПоТруду_ФОТ</Наименование>
						<Порядок>27800</Порядок>
						<Источник>ОтчетПоТруду_ФОТ</Источник>
						<Приемник>ОтчетПоТруду_ФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>557</Код>
						<Наименование>ОтчетПоТруду_ФОТ_ДополнЗП --&gt; ОтчетПоТруду_ФОТ_Доп</Наименование>
						<Порядок>27850</Порядок>
						<Источник>ОтчетПоТруду_ФОТ_ДополнЗП</Источник>
						<Приемник>ОтчетПоТруду_ФОТ_ДополнЗП</Приемник>
					</Значение>
					<Значение>
						<Код>558</Код>
						<Наименование>ОтчетПоТруду_ФОТ_Компенсация --&gt; ОтчетПоТруду_ФОТ_</Наименование>
						<Порядок>27900</Порядок>
						<Источник>ОтчетПоТруду_ФОТ_Компенсация</Источник>
						<Приемник>ОтчетПоТруду_ФОТ_Компенсация</Приемник>
					</Значение>
					<Значение>
						<Код>559</Код>
						<Наименование>ОтчетПоТруду_ФОТ_НеотработанноеВремя --&gt; ОтчетПоТр</Наименование>
						<Порядок>27950</Порядок>
						<Источник>ОтчетПоТруду_ФОТ_НеотработанноеВремя</Источник>
						<Приемник>ОтчетПоТруду_ФОТ_НеотработанноеВремя</Приемник>
					</Значение>
					<Значение>
						<Код>560</Код>
						<Наименование>ПФ_ --&gt; ПФ_</Наименование>
						<Порядок>28000</Порядок>
						<Источник>ПФ_</Источник>
						<Приемник>ПФ_</Приемник>
					</Значение>
					<Значение>
						<Код>561</Код>
						<Наименование>ПФ_Декр --&gt; ПФ_Декр</Наименование>
						<Порядок>28050</Порядок>
						<Источник>ПФ_Декр</Источник>
						<Приемник>ПФ_Декр</Приемник>
					</Значение>
					<Значение>
						<Код>562</Код>
						<Наименование>ПФ_Орг32 --&gt; ПФ_Орг32</Наименование>
						<Порядок>28100</Порядок>
						<Источник>ПФ_Орг32</Источник>
						<Приемник>ПФ_Орг32</Приемник>
					</Значение>
					<Значение>
						<Код>563</Код>
						<Наименование>ПФ_Орг4 --&gt; ПФ_Орг4</Наименование>
						<Порядок>28150</Порядок>
						<Источник>ПФ_Орг4</Источник>
						<Приемник>ПФ_Орг4</Приемник>
					</Значение>
					<Значение>
						<Код>564</Код>
						<Наименование>ПФ_Орг42 --&gt; ПФ_Орг42</Наименование>
						<Порядок>28200</Порядок>
						<Источник>ПФ_Орг42</Источник>
						<Приемник>ПФ_Орг42</Приемник>
					</Значение>
					<Значение>
						<Код>565</Код>
						<Наименование>ПФ_Сотр15 --&gt; ПФ_Сотр15</Наименование>
						<Порядок>28250</Порядок>
						<Источник>ПФ_Сотр15</Источник>
						<Приемник>ПФ_Сотр15</Приемник>
					</Значение>
					<Значение>
						<Код>566</Код>
						<Наименование>ФССБезработ_ --&gt; ФССБезработ_</Наименование>
						<Порядок>28300</Порядок>
						<Источник>ФССБезработ_</Источник>
						<Приемник>ФССБезработ_</Приемник>
					</Значение>
					<Значение>
						<Код>567</Код>
						<Наименование>ФССБезработ_ДоначислАкт --&gt; ФССБезработ_ДоначислАк</Наименование>
						<Порядок>28350</Порядок>
						<Источник>ФССБезработ_ДоначислАкт</Источник>
						<Приемник>ФССБезработ_ДоначислАкт</Приемник>
					</Значение>
					<Значение>
						<Код>568</Код>
						<Наименование>ФССБезработ_ДоначислСамост --&gt; ФССБезработ_Доначис</Наименование>
						<Порядок>28400</Порядок>
						<Источник>ФССБезработ_ДоначислСамост</Источник>
						<Приемник>ФССБезработ_ДоначислСамост</Приемник>
					</Значение>
					<Значение>
						<Код>569</Код>
						<Наименование>ФССБезработ_Орг --&gt; ФССБезработ_Орг</Наименование>
						<Порядок>28450</Порядок>
						<Источник>ФССБезработ_Орг</Источник>
						<Приемник>ФССБезработ_Орг</Приемник>
					</Значение>
					<Значение>
						<Код>570</Код>
						<Наименование>ФССБезработ_Пеня --&gt; ФССБезработ_Пеня</Наименование>
						<Порядок>28500</Порядок>
						<Источник>ФССБезработ_Пеня</Источник>
						<Приемник>ФССБезработ_Пеня</Приемник>
					</Значение>
					<Значение>
						<Код>571</Код>
						<Наименование>ФССБезработ_Сотр --&gt; ФССБезработ_Сотр</Наименование>
						<Порядок>28550</Порядок>
						<Источник>ФССБезработ_Сотр</Источник>
						<Приемник>ФССБезработ_Сотр</Приемник>
					</Значение>
					<Значение>
						<Код>572</Код>
						<Наименование>ФССБезработ_Штраф --&gt; ФССБезработ_Штраф</Наименование>
						<Порядок>28600</Порядок>
						<Источник>ФССБезработ_Штраф</Источник>
						<Приемник>ФССБезработ_Штраф</Приемник>
					</Значение>
					<Значение>
						<Код>573</Код>
						<Наименование>ФССНесчСлуч_ --&gt; ФССНесчСлуч_</Наименование>
						<Порядок>28650</Порядок>
						<Источник>ФССНесчСлуч_</Источник>
						<Приемник>ФССНесчСлуч_</Приемник>
					</Значение>
					<Значение>
						<Код>574</Код>
						<Наименование>ФССНесчСлуч_ВремНетрудосп --&gt; ФССНесчСлуч_ВремНетр</Наименование>
						<Порядок>28700</Порядок>
						<Источник>ФССНесчСлуч_ВремНетрудосп</Источник>
						<Приемник>ФССНесчСлуч_ВремНетрудосп</Приемник>
					</Значение>
					<Значение>
						<Код>575</Код>
						<Наименование>ФССНесчСлуч_ДоначислАкт --&gt; ФССНесчСлуч_ДоначислАк</Наименование>
						<Порядок>28750</Порядок>
						<Источник>ФССНесчСлуч_ДоначислАкт</Источник>
						<Приемник>ФССНесчСлуч_ДоначислАкт</Приемник>
					</Значение>
					<Значение>
						<Код>576</Код>
						<Наименование>ФССНесчСлуч_ДоначислСамост --&gt; ФССНесчСлуч_Доначис</Наименование>
						<Порядок>28800</Порядок>
						<Источник>ФССНесчСлуч_ДоначислСамост</Источник>
						<Приемник>ФССНесчСлуч_ДоначислСамост</Приемник>
					</Значение>
					<Значение>
						<Код>577</Код>
						<Наименование>ФССНесчСлуч_ЕжемесПомощь --&gt; ФССНесчСлуч_ЕжемесПом</Наименование>
						<Порядок>28850</Порядок>
						<Источник>ФССНесчСлуч_ЕжемесПомощь</Источник>
						<Приемник>ФССНесчСлуч_ЕжемесПомощь</Приемник>
					</Значение>
					<Значение>
						<Код>578</Код>
						<Наименование>ФССНесчСлуч_ЕжемесПомСмерть --&gt; ФССНесчСлуч_Ежемес</Наименование>
						<Порядок>28900</Порядок>
						<Источник>ФССНесчСлуч_ЕжемесПомСмерть</Источник>
						<Приемник>ФССНесчСлуч_ЕжемесПомСмерть</Приемник>
					</Значение>
					<Значение>
						<Код>579</Код>
						<Наименование>ФССНесчСлуч_ЛегкРабота --&gt; ФССНесчСлуч_ЛегкРабота</Наименование>
						<Порядок>28950</Порядок>
						<Источник>ФССНесчСлуч_ЛегкРабота</Источник>
						<Приемник>ФССНесчСлуч_ЛегкРабота</Приемник>
					</Значение>
					<Значение>
						<Код>580</Код>
						<Наименование>ФССНесчСлуч_МедПомощь --&gt; ФССНесчСлуч_МедПомощь</Наименование>
						<Порядок>29000</Порядок>
						<Источник>ФССНесчСлуч_МедПомощь</Источник>
						<Приемник>ФССНесчСлуч_МедПомощь</Приемник>
					</Значение>
					<Значение>
						<Код>581</Код>
						<Наименование>ФССНесчСлуч_НеПринятоКЗачет --&gt; ФССНесчСлуч_НеПрин</Наименование>
						<Порядок>29050</Порядок>
						<Источник>ФССНесчСлуч_НеПринятоКЗачет</Источник>
						<Приемник>ФССНесчСлуч_НеПринятоКЗачет</Приемник>
					</Значение>
					<Значение>
						<Код>582</Код>
						<Наименование>ФССНесчСлуч_ОднПомПрофПриг --&gt; ФССНесчСлуч_ОднПомП</Наименование>
						<Порядок>29100</Порядок>
						<Источник>ФССНесчСлуч_ОднПомПрофПриг</Источник>
						<Приемник>ФССНесчСлуч_ОднПомПрофПриг</Приемник>
					</Значение>
					<Значение>
						<Код>583</Код>
						<Наименование>ФССНесчСлуч_ОднПомСмерть --&gt; ФССНесчСлуч_ОднПомСме</Наименование>
						<Порядок>29150</Порядок>
						<Источник>ФССНесчСлуч_ОднПомСмерть</Источник>
						<Приемник>ФССНесчСлуч_ОднПомСмерть</Приемник>
					</Значение>
					<Значение>
						<Код>584</Код>
						<Наименование>ФССНесчСлуч_Орг --&gt; ФССНесчСлуч_Орг</Наименование>
						<Порядок>29200</Порядок>
						<Источник>ФССНесчСлуч_Орг</Источник>
						<Приемник>ФССНесчСлуч_Орг</Приемник>
					</Значение>
					<Значение>
						<Код>585</Код>
						<Наименование>ФССНесчСлуч_Пеня --&gt; ФССНесчСлуч_Пеня</Наименование>
						<Порядок>29250</Порядок>
						<Источник>ФССНесчСлуч_Пеня</Источник>
						<Приемник>ФССНесчСлуч_Пеня</Приемник>
					</Значение>
					<Значение>
						<Код>586</Код>
						<Наименование>ФССНесчСлуч_Погребение --&gt; ФССНесчСлуч_Погребение</Наименование>
						<Порядок>29300</Порядок>
						<Источник>ФССНесчСлуч_Погребение</Источник>
						<Приемник>ФССНесчСлуч_Погребение</Приемник>
					</Значение>
					<Значение>
						<Код>587</Код>
						<Наименование>ФССНесчСлуч_ПрофРеабилит --&gt; ФССНесчСлуч_ПрофРеаби</Наименование>
						<Порядок>29350</Порядок>
						<Источник>ФССНесчСлуч_ПрофРеабилит</Источник>
						<Приемник>ФССНесчСлуч_ПрофРеабилит</Приемник>
					</Значение>
					<Значение>
						<Код>588</Код>
						<Наименование>ФССНесчСлуч_Ущерб --&gt; ФССНесчСлуч_Ущерб</Наименование>
						<Порядок>29400</Порядок>
						<Источник>ФССНесчСлуч_Ущерб</Источник>
						<Приемник>ФССНесчСлуч_Ущерб</Приемник>
					</Значение>
					<Значение>
						<Код>589</Код>
						<Наименование>ФССНесчСлуч_Штраф --&gt; ФССНесчСлуч_Штраф</Наименование>
						<Порядок>29450</Порядок>
						<Источник>ФССНесчСлуч_Штраф</Источник>
						<Приемник>ФССНесчСлуч_Штраф</Приемник>
					</Значение>
					<Значение>
						<Код>590</Код>
						<Наименование>ФССУтратаТрудосп_ --&gt; ФССУтратаТрудосп_</Наименование>
						<Порядок>29500</Порядок>
						<Источник>ФССУтратаТрудосп_</Источник>
						<Приемник>ФССУтратаТрудосп_</Приемник>
					</Значение>
					<Значение>
						<Код>591</Код>
						<Наименование>ФССУтрТрудосп_Берем --&gt; ФССУтрТрудосп_Берем</Наименование>
						<Порядок>29550</Порядок>
						<Источник>ФССУтрТрудосп_Берем</Источник>
						<Приемник>ФССУтрТрудосп_Берем</Приемник>
					</Значение>
					<Значение>
						<Код>592</Код>
						<Наименование>ФССУтрТрудосп_ВремНетрудосп --&gt; ФССУтрТрудосп_Врем</Наименование>
						<Порядок>29600</Порядок>
						<Источник>ФССУтрТрудосп_ВремНетрудосп</Источник>
						<Приемник>ФССУтрТрудосп_ВремНетрудосп</Приемник>
					</Значение>
					<Значение>
						<Код>593</Код>
						<Наименование>ФССУтрТрудосп_ВремНетрудоспУход --&gt; ФССУтрТрудосп_</Наименование>
						<Порядок>29650</Порядок>
						<Источник>ФССУтрТрудосп_ВремНетрудоспУход</Источник>
						<Приемник>ФССУтрТрудосп_ВремНетрудоспУход</Приемник>
					</Значение>
					<Значение>
						<Код>594</Код>
						<Наименование>ФССУтрТрудосп_ДоначислАкт --&gt; ФССУтрТрудосп_Доначи</Наименование>
						<Порядок>29700</Порядок>
						<Источник>ФССУтрТрудосп_ДоначислАкт</Источник>
						<Приемник>ФССУтрТрудосп_ДоначислАкт</Приемник>
					</Значение>
					<Значение>
						<Код>595</Код>
						<Наименование>ФССУтрТрудосп_ДоначислАкт_Взнос --&gt; ФССУтрТрудосп_</Наименование>
						<Порядок>29750</Порядок>
						<Источник>ФССУтрТрудосп_ДоначислАкт_Взнос</Источник>
						<Приемник>ФССУтрТрудосп_ДоначислАкт_Взнос</Приемник>
					</Значение>
					<Значение>
						<Код>596</Код>
						<Наименование>ФССУтрТрудосп_ДоначислАкт_Пеня --&gt; ФССУтрТрудосп_Д</Наименование>
						<Порядок>29800</Порядок>
						<Источник>ФССУтрТрудосп_ДоначислАкт_Пеня</Источник>
						<Приемник>ФССУтрТрудосп_ДоначислАкт_Пеня</Приемник>
					</Значение>
					<Значение>
						<Код>597</Код>
						<Наименование>ФССУтрТрудосп_ДоначислСамост --&gt; ФССУтрТрудосп_Дон</Наименование>
						<Порядок>29850</Порядок>
						<Источник>ФССУтрТрудосп_ДоначислСамост</Источник>
						<Приемник>ФССУтрТрудосп_ДоначислСамост</Приемник>
					</Значение>
					<Значение>
						<Код>598</Код>
						<Наименование>ФССУтрТрудосп_ДоначислСамост_Взнос --&gt; ФССУтрТрудо</Наименование>
						<Порядок>29900</Порядок>
						<Источник>ФССУтрТрудосп_ДоначислСамост_Взнос</Источник>
						<Приемник>ФССУтрТрудосп_ДоначислСамост_Взнос</Приемник>
					</Значение>
					<Значение>
						<Код>599</Код>
						<Наименование>ФССУтрТрудосп_ДоначислСамост_Пеня --&gt; ФССУтрТрудос</Наименование>
						<Порядок>29950</Порядок>
						<Источник>ФССУтрТрудосп_ДоначислСамост_Пеня</Источник>
						<Приемник>ФССУтрТрудосп_ДоначислСамост_Пеня</Приемник>
					</Значение>
					<Значение>
						<Код>600</Код>
						<Наименование>ФССУтрТрудосп_Другое --&gt; ФССУтрТрудосп_Другое</Наименование>
						<Порядок>30000</Порядок>
						<Источник>ФССУтрТрудосп_Другое</Источник>
						<Приемник>ФССУтрТрудосп_Другое</Приемник>
					</Значение>
					<Значение>
						<Код>601</Код>
						<Наименование>ФССУтрТрудосп_НеПринятоКЗачет --&gt; ФССУтрТрудосп_Не</Наименование>
						<Порядок>30050</Порядок>
						<Источник>ФССУтрТрудосп_НеПринятоКЗачет</Источник>
						<Приемник>ФССУтрТрудосп_НеПринятоКЗачет</Приемник>
					</Значение>
					<Значение>
						<Код>602</Код>
						<Наименование>ФССУтрТрудосп_ОплПутев --&gt; ФССУтрТрудосп_ОплПутев</Наименование>
						<Порядок>30100</Порядок>
						<Источник>ФССУтрТрудосп_ОплПутев</Источник>
						<Приемник>ФССУтрТрудосп_ОплПутев</Приемник>
					</Значение>
					<Значение>
						<Код>603</Код>
						<Наименование>ФССУтрТрудосп_Орг29 --&gt; ФССУтрТрудосп_Орг29</Наименование>
						<Порядок>30150</Порядок>
						<Источник>ФССУтрТрудосп_Орг29</Источник>
						<Приемник>ФССУтрТрудосп_Орг29</Приемник>
					</Значение>
					<Значение>
						<Код>604</Код>
						<Наименование>ФССУтрТрудосп_Пеня --&gt; ФССУтрТрудосп_Пеня</Наименование>
						<Порядок>30200</Порядок>
						<Источник>ФССУтрТрудосп_Пеня</Источник>
						<Приемник>ФССУтрТрудосп_Пеня</Приемник>
					</Значение>
					<Значение>
						<Код>605</Код>
						<Наименование>ФССУтрТрудосп_Погребен --&gt; ФССУтрТрудосп_Погребен</Наименование>
						<Порядок>30250</Порядок>
						<Источник>ФССУтрТрудосп_Погребен</Источник>
						<Приемник>ФССУтрТрудосп_Погребен</Приемник>
					</Значение>
					<Значение>
						<Код>606</Код>
						<Наименование>ФССУтрТрудосп_Рождение --&gt; ФССУтрТрудосп_Рождение</Наименование>
						<Порядок>30300</Порядок>
						<Источник>ФССУтрТрудосп_Рождение</Источник>
						<Приемник>ФССУтрТрудосп_Рождение</Приемник>
					</Значение>
					<Значение>
						<Код>607</Код>
						<Наименование>ФССУтрТрудосп_Рождение_Единораз --&gt; ФССУтрТрудосп_</Наименование>
						<Порядок>30350</Порядок>
						<Источник>ФССУтрТрудосп_Рождение_Единораз</Источник>
						<Приемник>ФССУтрТрудосп_Рождение_Единораз</Приемник>
					</Значение>
					<Значение>
						<Код>608</Код>
						<Наименование>ФССУтрТрудосп_Рождение_Ежемес --&gt; ФССУтрТрудосп_Ро</Наименование>
						<Порядок>30400</Порядок>
						<Источник>ФССУтрТрудосп_Рождение_Ежемес</Источник>
						<Приемник>ФССУтрТрудосп_Рождение_Ежемес</Приемник>
					</Значение>
					<Значение>
						<Код>609</Код>
						<Наименование>ФССУтрТрудосп_Сотр025 --&gt; ФССУтрТрудосп_Сотр025</Наименование>
						<Порядок>30450</Порядок>
						<Источник>ФССУтрТрудосп_Сотр025</Источник>
						<Приемник>ФССУтрТрудосп_Сотр025</Приемник>
					</Значение>
					<Значение>
						<Код>610</Код>
						<Наименование>ФССУтрТрудосп_Сотр05 --&gt; ФССУтрТрудосп_Сотр05</Наименование>
						<Порядок>30500</Порядок>
						<Источник>ФССУтрТрудосп_Сотр05</Источник>
						<Приемник>ФССУтрТрудосп_Сотр05</Приемник>
					</Значение>
					<Значение>
						<Код>611</Код>
						<Наименование>ФССУтрТрудосп_Сотр1 --&gt; ФССУтрТрудосп_Сотр1</Наименование>
						<Порядок>30550</Порядок>
						<Источник>ФССУтрТрудосп_Сотр1</Источник>
						<Приемник>ФССУтрТрудосп_Сотр1</Приемник>
					</Значение>
					<Значение>
						<Код>612</Код>
						<Наименование>ФССУтрТрудосп_УходРебенок --&gt; ФССУтрТрудосп_УходРе</Наименование>
						<Порядок>30600</Порядок>
						<Источник>ФССУтрТрудосп_УходРебенок</Источник>
						<Приемник>ФССУтрТрудосп_УходРебенок</Приемник>
					</Значение>
					<Значение>
						<Код>613</Код>
						<Наименование>ФССУтрТрудосп_ФинОздор --&gt; ФССУтрТрудосп_ФинОздор</Наименование>
						<Порядок>30650</Порядок>
						<Источник>ФССУтрТрудосп_ФинОздор</Источник>
						<Приемник>ФССУтрТрудосп_ФинОздор</Приемник>
					</Значение>
					<Значение>
						<Код>614</Код>
						<Наименование>ФССУтрТрудосп_ФинСанат --&gt; ФССУтрТрудосп_ФинСанат</Наименование>
						<Порядок>30700</Порядок>
						<Источник>ФССУтрТрудосп_ФинСанат</Источник>
						<Приемник>ФССУтрТрудосп_ФинСанат</Приемник>
					</Значение>
					<Значение>
						<Код>615</Код>
						<Наименование>ФССУтрТрудосп_Штраф --&gt; ФССУтрТрудосп_Штраф</Наименование>
						<Порядок>30750</Порядок>
						<Источник>ФССУтрТрудосп_Штраф</Источник>
						<Приемник>ФССУтрТрудосп_Штраф</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыНалоговыхДеклараций</Код>
				<Наименование>Перечисление: Виды налоговых деклараций</Наименование>
				<Порядок>800</Порядок>
				<Источник>ПеречислениеСсылка.ВидыНалоговыхДеклараций</Источник>
				<Приемник>ПеречислениеСсылка.ВидыНалоговыхДеклараций</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Безработица --&gt; Безработица</Наименование>
						<Порядок>50</Порядок>
						<Источник>Безработица</Источник>
						<Приемник>Безработица</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДекларацияОПрибыли --&gt; ДекларацияОПрибыли</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДекларацияОПрибыли</Источник>
						<Приемник>ДекларацияОПрибыли</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДекларацияПоАкцизномуНалогу --&gt; ДекларацияПоАкцизн</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДекларацияПоАкцизномуНалогу</Источник>
						<Приемник>ДекларацияПоАкцизномуНалогу</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДекларацияПоНалогуНаПрибыль2015 --&gt; ДекларацияПоНа</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДекларацияПоНалогуНаПрибыль2015</Источник>
						<Приемник>ДекларацияПоНалогуНаПрибыль2015</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ДекларацияПоНалогуНаПрибыльНКУ --&gt; ДекларацияПоНал</Наименование>
						<Порядок>250</Порядок>
						<Источник>ДекларацияПоНалогуНаПрибыльНКУ</Источник>
						<Приемник>ДекларацияПоНалогуНаПрибыльНКУ</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ДекларацияПоНДС --&gt; ДекларацияПоНДС</Наименование>
						<Порядок>300</Порядок>
						<Источник>ДекларацияПоНДС</Источник>
						<Приемник>ДекларацияПоНДС</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ЕдиныйНалог --&gt; ЕдиныйНалог</Наименование>
						<Порядок>350</Порядок>
						<Источник>ЕдиныйНалог</Источник>
						<Приемник>ЕдиныйНалог</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ЕСВ --&gt; ЕСВ</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЕСВ</Источник>
						<Приемник>ЕСВ</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>НесчастныйСлучай --&gt; НесчастныйСлучай</Наименование>
						<Порядок>450</Порядок>
						<Источник>НесчастныйСлучай</Источник>
						<Приемник>НесчастныйСлучай</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ОтчетОбИспользованииРабочегоВремени --&gt; ОтчетОбИсп</Наименование>
						<Порядок>500</Порядок>
						<Источник>ОтчетОбИспользованииРабочегоВремени</Источник>
						<Приемник>ОтчетОбИспользованииРабочегоВремени</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ОтчетПоТруду --&gt; ОтчетПоТруду</Наименование>
						<Порядок>550</Порядок>
						<Источник>ОтчетПоТруду</Источник>
						<Приемник>ОтчетПоТруду</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>Пенсионный --&gt; Пенсионный</Наименование>
						<Порядок>600</Порядок>
						<Источник>Пенсионный</Источник>
						<Приемник>Пенсионный</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>УтратаТрудоспобности --&gt; УтратаТрудоспобности</Наименование>
						<Порядок>650</Порядок>
						<Источник>УтратаТрудоспобности</Источник>
						<Приемник>УтратаТрудоспобности</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>Налоги</Код>
				<Наименование>Справочник: Налоги</Наименование>
				<Порядок>850</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Налоги</Источник>
				<Приемник>СправочникСсылка.Налоги</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Актуальность --&gt; Актуальность</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Актуальность" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="Актуальность" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Налоги"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Налоги"/>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Безработица --&gt; Безработица</Наименование>
						<Порядок>50</Порядок>
						<Источник>Безработица</Источник>
						<Приемник>Безработица</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>БезработицаФОТ --&gt; БезработицаФОТ</Наименование>
						<Порядок>100</Порядок>
						<Источник>БезработицаФОТ</Источник>
						<Приемник>БезработицаФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Взносы --&gt; Взносы</Наименование>
						<Порядок>150</Порядок>
						<Источник>Взносы</Источник>
						<Приемник>Взносы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ВзносыФОТ --&gt; ВзносыФОТ</Наименование>
						<Порядок>200</Порядок>
						<Источник>ВзносыФОТ</Источник>
						<Приемник>ВзносыФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ВоенныйСбор --&gt; ВоенныйСбор</Наименование>
						<Порядок>250</Порядок>
						<Источник>ВоенныйСбор</Источник>
						<Приемник>ВоенныйСбор</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ЕдиныйНалог --&gt; ЕдиныйНалог</Наименование>
						<Порядок>300</Порядок>
						<Источник>ЕдиныйНалог</Источник>
						<Приемник>ЕдиныйНалог</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ЕдНалог10 --&gt; ЕдНалог10</Наименование>
						<Порядок>350</Порядок>
						<Источник>ЕдНалог10</Источник>
						<Приемник>ЕдНалог10</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ЕдНалог6 --&gt; ЕдНалог6</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЕдНалог6</Источник>
						<Приемник>ЕдНалог6</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ЕСВБольничные --&gt; ЕСВБольничные</Наименование>
						<Порядок>450</Порядок>
						<Источник>ЕСВБольничные</Источник>
						<Приемник>ЕСВБольничные</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ЕСВГПХ --&gt; ЕСВГПХ</Наименование>
						<Порядок>500</Порядок>
						<Источник>ЕСВГПХ</Источник>
						<Приемник>ЕСВГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ЕСВДекретные --&gt; ЕСВДекретные</Наименование>
						<Порядок>550</Порядок>
						<Источник>ЕСВДекретные</Источник>
						<Приемник>ЕСВДекретные</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ЕСВИнвалидыУТОГУТОС --&gt; ЕСВИнвалидыУТОГУТОС</Наименование>
						<Порядок>600</Порядок>
						<Источник>ЕСВИнвалидыУТОГУТОС</Источник>
						<Приемник>ЕСВИнвалидыУТОГУТОС</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ЕСВЛетчики --&gt; ЕСВЛетчики</Наименование>
						<Порядок>650</Порядок>
						<Источник>ЕСВЛетчики</Источник>
						<Приемник>ЕСВЛетчики</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ЕСВМобилизованные --&gt; ЕСВМобилизованные</Наименование>
						<Порядок>700</Порядок>
						<Источник>ЕСВМобилизованные</Источник>
						<Приемник>ЕСВМобилизованные</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ЕСВРаботники --&gt; ЕСВРаботники</Наименование>
						<Порядок>750</Порядок>
						<Источник>ЕСВРаботники</Источник>
						<Приемник>ЕСВРаботники</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ЕСВРаботникиСР --&gt; ЕСВРаботникиСР</Наименование>
						<Порядок>800</Порядок>
						<Источник>ЕСВРаботникиСР</Источник>
						<Приемник>ЕСВРаботникиСР</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ЕСВФОТБольничные --&gt; ЕСВФОТБольничные</Наименование>
						<Порядок>850</Порядок>
						<Источник>ЕСВФОТБольничные</Источник>
						<Приемник>ЕСВФОТБольничные</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ЕСВФОТБольничныеИнвалиды --&gt; ЕСВФОТБольничныеИнвал</Наименование>
						<Порядок>900</Порядок>
						<Источник>ЕСВФОТБольничныеИнвалиды</Источник>
						<Приемник>ЕСВФОТБольничныеИнвалиды</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ЕСВФОТБольничныеИнвалиды50 --&gt; ЕСВФОТБольничныеИнв</Наименование>
						<Порядок>950</Порядок>
						<Источник>ЕСВФОТБольничныеИнвалиды50</Источник>
						<Приемник>ЕСВФОТБольничныеИнвалиды50</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ЕСВФОТБольничныеУТОГ --&gt; ЕСВФОТБольничныеУТОГ</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ЕСВФОТБольничныеУТОГ</Источник>
						<Приемник>ЕСВФОТБольничныеУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ЕСВФОТБюджетники --&gt; ЕСВФОТБюджетники</Наименование>
						<Порядок>1050</Порядок>
						<Источник>ЕСВФОТБюджетники</Источник>
						<Приемник>ЕСВФОТБюджетники</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ЕСВФОТГПХ --&gt; ЕСВФОТГПХ</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ЕСВФОТГПХ</Источник>
						<Приемник>ЕСВФОТГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ЕСВФОТГПХСудостр --&gt; ЕСВФОТГПХСудостр</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ЕСВФОТГПХСудостр</Источник>
						<Приемник>ЕСВФОТГПХСудостр</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ЕСВФОТГПХУТОГ --&gt; ЕСВФОТГПХУТОГ</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ЕСВФОТГПХУТОГ</Источник>
						<Приемник>ЕСВФОТГПХУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ЕСВФОТДекретные --&gt; ЕСВФОТДекретные</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ЕСВФОТДекретные</Источник>
						<Приемник>ЕСВФОТДекретные</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ЕСВФОТДекретныеИнвалиды --&gt; ЕСВФОТДекретныеИнвалид</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ЕСВФОТДекретныеИнвалиды</Источник>
						<Приемник>ЕСВФОТДекретныеИнвалиды</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ЕСВФОТДекретныеИнвалиды50 --&gt; ЕСВФОТДекретныеИнвал</Наименование>
						<Порядок>1350</Порядок>
						<Источник>ЕСВФОТДекретныеИнвалиды50</Источник>
						<Приемник>ЕСВФОТДекретныеИнвалиды50</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ЕСВФОТДекретныеУТОГ --&gt; ЕСВФОТДекретныеУТОГ</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ЕСВФОТДекретныеУТОГ</Источник>
						<Приемник>ЕСВФОТДекретныеУТОГ</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>ЕСВФОТИнвалиды --&gt; ЕСВФОТИнвалиды</Наименование>
						<Порядок>1450</Порядок>
						<Источник>ЕСВФОТИнвалиды</Источник>
						<Приемник>ЕСВФОТИнвалиды</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ЕСВФОТИнвалиды50 --&gt; ЕСВФОТИнвалиды50</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ЕСВФОТИнвалиды50</Источник>
						<Приемник>ЕСВФОТИнвалиды50</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ЕСВФОТИнвалидыСР --&gt; ЕСВФОТИнвалидыСР</Наименование>
						<Порядок>1550</Порядок>
						<Источник>ЕСВФОТИнвалидыСР</Источник>
						<Приемник>ЕСВФОТИнвалидыСР</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ЕСВФОТИнвалидыУТОГУТОС --&gt; ЕСВФОТИнвалидыУТОГУТОС</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ЕСВФОТИнвалидыУТОГУТОС</Источник>
						<Приемник>ЕСВФОТИнвалидыУТОГУТОС</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ЕСВФОТЛетчики --&gt; ЕСВФОТЛетчики</Наименование>
						<Порядок>1650</Порядок>
						<Источник>ЕСВФОТЛетчики</Источник>
						<Приемник>ЕСВФОТЛетчики</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>ЕСВФОТМобил --&gt; ЕСВФОТМобил</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ЕСВФОТМобил</Источник>
						<Приемник>ЕСВФОТМобил</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ЕСВФОТМобилКомп --&gt; ЕСВФОТМобилКомп</Наименование>
						<Порядок>1750</Порядок>
						<Источник>ЕСВФОТМобилКомп</Источник>
						<Приемник>ЕСВФОТМобилКомп</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ЕСВФОТРаботники --&gt; ЕСВФОТРаботники</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ЕСВФОТРаботники</Источник>
						<Приемник>ЕСВФОТРаботники</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ЕСВФОТРаботникиЗаПределами --&gt; ЕСВФОТРаботникиЗаПр</Наименование>
						<Порядок>1850</Порядок>
						<Источник>ЕСВФОТРаботникиЗаПределами</Источник>
						<Приемник>ЕСВФОТРаботникиЗаПределами</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>ЕСВФОТРаботникиИностранные --&gt; ЕСВФОТРаботникиИнос</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ЕСВФОТРаботникиИностранные</Источник>
						<Приемник>ЕСВФОТРаботникиИностранные</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>ЕСВФОТРаботникиСР --&gt; ЕСВФОТРаботникиСР</Наименование>
						<Порядок>1950</Порядок>
						<Источник>ЕСВФОТРаботникиСР</Источник>
						<Приемник>ЕСВФОТРаботникиСР</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>ЕСВФОТРаботникиУТОГУТОС --&gt; ЕСВФОТРаботникиУТОГУТО</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ЕСВФОТРаботникиУТОГУТОС</Источник>
						<Приемник>ЕСВФОТРаботникиУТОГУТОС</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>ЕСВФОТРаботникиФЛ --&gt; ЕСВФОТРаботникиФЛ</Наименование>
						<Порядок>2050</Порядок>
						<Источник>ЕСВФОТРаботникиФЛ</Источник>
						<Приемник>ЕСВФОТРаботникиФЛ</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ЕСВФОТСудостр --&gt; ЕСВФОТСудостр</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ЕСВФОТСудостр</Источник>
						<Приемник>ЕСВФОТСудостр</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>КоммунальныйНалог --&gt; КоммунальныйНалог</Наименование>
						<Порядок>2150</Порядок>
						<Источник>КоммунальныйНалог</Источник>
						<Приемник>КоммунальныйНалог</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>МестныеНалоги --&gt; МестныеНалоги</Наименование>
						<Порядок>2200</Порядок>
						<Источник>МестныеНалоги</Источник>
						<Приемник>МестныеНалоги</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>Пенсионный --&gt; Пенсионный</Наименование>
						<Порядок>2250</Порядок>
						<Источник>Пенсионный</Источник>
						<Приемник>Пенсионный</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>Пенсионный1_5 --&gt; Пенсионный1_5</Наименование>
						<Порядок>2300</Порядок>
						<Источник>Пенсионный1_5</Источник>
						<Приемник>Пенсионный1_5</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>ПенсионныйВалюта --&gt; ПенсионныйВалюта</Наименование>
						<Порядок>2350</Порядок>
						<Источник>ПенсионныйВалюта</Источник>
						<Приемник>ПенсионныйВалюта</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>ПенсионныйПрочие --&gt; ПенсионныйПрочие</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ПенсионныйПрочие</Источник>
						<Приемник>ПенсионныйПрочие</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>ПенсионныйФОТ --&gt; ПенсионныйФОТ</Наименование>
						<Порядок>2450</Порядок>
						<Источник>ПенсионныйФОТ</Источник>
						<Приемник>ПенсионныйФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>ПенсионныйФОТДекр --&gt; ПенсионныйФОТДекр</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ПенсионныйФОТДекр</Источник>
						<Приемник>ПенсионныйФОТДекр</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>ПенсионныйФОТИнв --&gt; ПенсионныйФОТИнв</Наименование>
						<Порядок>2550</Порядок>
						<Источник>ПенсионныйФОТИнв</Источник>
						<Приемник>ПенсионныйФОТИнв</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>ПенсионныйФОТЛет --&gt; ПенсионныйФОТЛет</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ПенсионныйФОТЛет</Источник>
						<Приемник>ПенсионныйФОТЛет</Приемник>
					</Значение>
					<Значение>
						<Код>53</Код>
						<Наименование>Соцстрах --&gt; Соцстрах</Наименование>
						<Порядок>2650</Порядок>
						<Источник>Соцстрах</Источник>
						<Приемник>Соцстрах</Приемник>
					</Значение>
					<Значение>
						<Код>54</Код>
						<Наименование>СоцстрахНесчФОТ --&gt; СоцстрахНесчФОТ</Наименование>
						<Порядок>2700</Порядок>
						<Источник>СоцстрахНесчФОТ</Источник>
						<Приемник>СоцстрахНесчФОТ</Приемник>
					</Значение>
					<Значение>
						<Код>55</Код>
						<Наименование>СоцстрахФОТ --&gt; СоцстрахФОТ</Наименование>
						<Порядок>2750</Порядок>
						<Источник>СоцстрахФОТ</Источник>
						<Приемник>СоцстрахФОТ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыЛьготПоНДФЛ</Код>
				<Наименование>Справочник: Виды льгот работников организаций</Наименование>
				<Порядок>900</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>СправочникСсылка.ВидыЛьготРаботниковОрганизаций</Источник>
				<Приемник>СправочникСсылка.ВидыЛьготПоНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>КодОтчетностиНДФЛ --&gt; КодОтчетностиНДФЛ</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="КодОтчетностиНДФЛ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодОтчетностиНДФЛ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>РазмерНДФЛ --&gt; РазмерНДФЛ</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="РазмерНДФЛ" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="РазмерНДФЛ" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>СпособПримененияНДФЛ --&gt; СпособПримененияНДФЛ</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="СпособПримененияНДФЛ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПримененияЛьготРаботников"/>
						<Приемник Имя="СпособПримененияНДФЛ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПримененияЛьготРаботников"/>
						<КодПравилаКонвертации>СпособыПримененияЛьготРаботников                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>НДФЛ_16912 --&gt; НДФЛ_16912</Наименование>
						<Порядок>50</Порядок>
						<Источник>НДФЛ_16912</Источник>
						<Приемник>НДФЛ_16912</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НДФЛ_16912ВР --&gt; НДФЛ_16912ВР</Наименование>
						<Порядок>100</Порядок>
						<Источник>НДФЛ_16912ВР</Источник>
						<Приемник>НДФЛ_16912ВР</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НДФЛ_16913е --&gt; НДФЛ_16913е</Наименование>
						<Порядок>150</Порядок>
						<Источник>НДФЛ_16913е</Источник>
						<Приемник>НДФЛ_16913е</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НДФЛ_612в --&gt; НДФЛ_612в</Наименование>
						<Порядок>200</Порядок>
						<Источник>НДФЛ_612в</Источник>
						<Приемник>НДФЛ_612в</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>НДФЛ_612г --&gt; НДФЛ_612г</Наименование>
						<Порядок>250</Порядок>
						<Источник>НДФЛ_612г</Источник>
						<Приемник>НДФЛ_612г</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>НДФЛ_613е --&gt; НДФЛ_613е</Наименование>
						<Порядок>300</Порядок>
						<Источник>НДФЛ_613е</Источник>
						<Приемник>НДФЛ_613е</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>НДФЛ_611 --&gt; НДФЛ_16911</Наименование>
						<Порядок>350</Порядок>
						<Источник>НДФЛ_611</Источник>
						<Приемник>НДФЛ_16911</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>НДФЛ_612а --&gt; НДФЛ_16913а</Наименование>
						<Порядок>400</Порядок>
						<Источник>НДФЛ_612а</Источник>
						<Приемник>НДФЛ_16913а</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>НДФЛ_612б --&gt; НДФЛ_16913б</Наименование>
						<Порядок>450</Порядок>
						<Источник>НДФЛ_612б</Источник>
						<Приемник>НДФЛ_16913б</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>НДФЛ_612д --&gt; НДФЛ_16913в</Наименование>
						<Порядок>500</Порядок>
						<Источник>НДФЛ_612д</Источник>
						<Приемник>НДФЛ_16913в</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>НДФЛ_612е --&gt; НДФЛ_16913г</Наименование>
						<Порядок>550</Порядок>
						<Источник>НДФЛ_612е</Источник>
						<Приемник>НДФЛ_16913г</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>НДФЛ_612ж --&gt; НДФЛ_16913д</Наименование>
						<Порядок>600</Порядок>
						<Источник>НДФЛ_612ж</Источник>
						<Приемник>НДФЛ_16913д</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>НДФЛ_612э --&gt; НДФЛ_16913ґ</Наименование>
						<Порядок>650</Порядок>
						<Источник>НДФЛ_612э</Источник>
						<Приемник>НДФЛ_16913ґ</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>НДФЛ_613а --&gt; НДФЛ_16914а</Наименование>
						<Порядок>700</Порядок>
						<Источник>НДФЛ_613а</Источник>
						<Приемник>НДФЛ_16914а</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>НДФЛ_613б --&gt; НДФЛ_16914б</Наименование>
						<Порядок>750</Порядок>
						<Источник>НДФЛ_613б</Источник>
						<Приемник>НДФЛ_16914б</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>НДФЛ_613в --&gt; НДФЛ_16914в</Наименование>
						<Порядок>800</Порядок>
						<Источник>НДФЛ_613в</Источник>
						<Приемник>НДФЛ_16914в</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>НДФЛ_613г --&gt; НДФЛ_16914г</Наименование>
						<Порядок>850</Порядок>
						<Источник>НДФЛ_613г</Источник>
						<Приемник>НДФЛ_16914г</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>НДФЛ_613д --&gt; НДФЛ_16914ґ</Наименование>
						<Порядок>900</Порядок>
						<Источник>НДФЛ_613д</Источник>
						<Приемник>НДФЛ_16914ґ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПримененияЛьготРаботников</Код>
				<Наименование>Перечисление: Способы применения льгот работников</Наименование>
				<Порядок>950</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПримененияЛьготРаботников</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПримененияЛьготРаботников</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>НаКаждогоРебенка --&gt; НаКаждогоРебенка</Наименование>
						<Порядок>50</Порядок>
						<Источник>НаКаждогоРебенка</Источник>
						<Приемник>НаКаждогоРебенка</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НаКаждогоРебенкаИнвалида --&gt; НаКаждогоРебенкаИнвал</Наименование>
						<Порядок>100</Порядок>
						<Источник>НаКаждогоРебенкаИнвалида</Источник>
						<Приемник>НаКаждогоРебенкаИнвалида</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НаТроихДетей --&gt; НаТроихДетей</Наименование>
						<Порядок>150</Порядок>
						<Источник>НаТроихДетей</Источник>
						<Приемник>НаТроихДетей</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Основной --&gt; Основной</Наименование>
						<Порядок>200</Порядок>
						<Источник>Основной</Источник>
						<Приемник>Основной</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПрофилиОфицеров</Код>
				<Наименование>Перечисление: Профили офицеров</Наименование>
				<Порядок>1000</Порядок>
				<Источник>ПеречислениеСсылка.ПрофилиОфицеров</Источник>
				<Приемник>ПеречислениеСсылка.ПрофилиОфицеров</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Ветеринарный --&gt; Ветеринарный</Наименование>
						<Порядок>50</Порядок>
						<Источник>Ветеринарный</Источник>
						<Приемник>Ветеринарный</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Инженерный --&gt; Инженерный</Наименование>
						<Порядок>100</Порядок>
						<Источник>Инженерный</Источник>
						<Приемник>Инженерный</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Командный --&gt; Командный</Наименование>
						<Порядок>150</Порядок>
						<Источник>Командный</Источник>
						<Приемник>Командный</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Медицинский --&gt; Медицинский</Наименование>
						<Порядок>200</Порядок>
						<Источник>Медицинский</Источник>
						<Приемник>Медицинский</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Технический --&gt; Технический</Наименование>
						<Порядок>250</Порядок>
						<Источник>Технический</Источник>
						<Приемник>Технический</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Юридический --&gt; Юридический</Наименование>
						<Порядок>300</Порядок>
						<Источник>Юридический</Источник>
						<Приемник>Юридический</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СведенияОЛицахСДополнительнымиГарантиями</Код>
				<Наименование>Регистр сведений: Сведения о лицах с дополнительными гарантиями</Наименование>
				<Порядок>1050</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>РегистрСведенийЗапись.СведенияОЛицахСДополнительнымиГарантиями</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОЛицахСДополнительнымиГарантиями</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>ВидГарантии --&gt; ВидГарантии</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ВидГарантии" Вид="Ресурс" Тип="СправочникСсылка.ДополнительныеГарантииВСодействииТрудоустройству"/>
						<Приемник Имя="ВидГарантии" Вид="Ресурс" Тип="СправочникСсылка.ДополнительныеГарантииВСодействииТрудоустройству"/>
						<КодПравилаКонвертации>ДополнительныеГарантииВСодействииТрудоустройс     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Комментарий" Вид="Ресурс" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НаличиеГарантий --&gt; НаличиеГарантий</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="НаличиеГарантий" Вид="Ресурс" Тип="Булево"/>
						<Приемник Имя="НаличиеГарантий" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Период --&gt; Период</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ФизЛицо --&gt; ФизическоеЛицо</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДополнительныеГарантииВСодействииТрудоустройс</Код>
				<Наименование>Справочник: Дополнительные гарантии в содействии трудоустройству</Наименование>
				<Порядок>1100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>СправочникСсылка.ДополнительныеГарантииВСодействииТрудоустройству</Источник>
				<Приемник>СправочникСсылка.ДополнительныеГарантииВСодействииТрудоустройству</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВпервыеТрудоустраивающаясяМолодежь --&gt; ВпервыеТруд</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВпервыеТрудоустраивающаясяМолодежь</Источник>
						<Приемник>ВпервыеТрудоустраивающаясяМолодежь</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ИнвалидыНеДостигшиеПенсионногоВозраста --&gt; Инвалид</Наименование>
						<Порядок>100</Порядок>
						<Источник>ИнвалидыНеДостигшиеПенсионногоВозраста</Источник>
						<Приемник>ИнвалидыНеДостигшиеПенсионногоВозраста</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>КомуДоПенсииПоПозрастуОсталось1ОиМеньшеЛет --&gt; Ком</Наименование>
						<Порядок>150</Порядок>
						<Источник>КомуДоПенсииПоПозрастуОсталось1ОиМеньшеЛет</Источник>
						<Приемник>КомуДоПенсииПоПозрастуОсталось1ОиМеньшеЛет</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Несовершеннолетние --&gt; Несовершеннолетние</Наименование>
						<Порядок>200</Порядок>
						<Источник>Несовершеннолетние</Источник>
						<Приемник>Несовершеннолетние</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>НесовершеннолетниеДетиСиротыИЛишенныеОпеки --&gt; Нес</Наименование>
						<Порядок>250</Порядок>
						<Источник>НесовершеннолетниеДетиСиротыИЛишенныеОпеки</Источник>
						<Приемник>НесовершеннолетниеДетиСиротыИЛишенныеОпеки</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ОсвобожденныеПослеОтбыванияНаказанияИлиПринудЛечен</Наименование>
						<Порядок>300</Порядок>
						<Источник>ОсвобожденныеПослеОтбыванияНаказанияИлиПринудЛечения</Источник>
						<Приемник>ОсвобожденныеПослеОтбыванияНаказанияИлиПринудЛечения</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>РодителиРебенкаДо6_14ЛетИлиИнвалида --&gt; РодителиРе</Наименование>
						<Порядок>350</Порядок>
						<Источник>РодителиРебенкаДо6_14ЛетИлиИнвалида</Источник>
						<Приемник>РодителиРебенкаДо6_14ЛетИлиИнвалида</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СведенияОПенсионерах</Код>
				<Наименование>Регистр сведений: Сведения о пенсионерах</Наименование>
				<Порядок>1150</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>РегистрСведенийЗапись.СведенияОПенсионерах</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОПенсионерах</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Комментарий" Вид="Ресурс" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Пенсионер --&gt; Пенсионер</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Пенсионер" Вид="Ресурс" Тип="Булево"/>
						<Приемник Имя="Пенсионер" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>СвидетельствоДатаВыдачи --&gt; СвидетельствоДатаВыдачи</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="СвидетельствоДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
						<Приемник Имя="СвидетельствоДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>СвидетельствоСерия --&gt; СвидетельствоСерия</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="СвидетельствоСерия" Вид="Ресурс" Тип="Строка"/>
						<Приемник Имя="СвидетельствоСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Период --&gt; Период</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Период" Вид="Свойство" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>ФизЛицо --&gt; ФизическоеЛицо</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<Приемник Имя="ФизическоеЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаТолькоСсылка                        </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГруппыУчетаНачисленийИУдержанийСтрокой</Код>
				<Наименование>: </Наименование>
				<Порядок>1200</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = Новый Структура("Наименование", Источник);</ПередВыгрузкой>
				<ПоследовательностьПолейПоиска>СсылкаНаОбъект = Справочники.ГруппыУчетаНачисленийИУдержаний.Зарплата;
// Отключим переустановку свойства Наименование для существующей группы ГруппыУчетаНачисленийИУдержаний - Зарплата
УстанавливатьУОбъектаВсеСвойстваПоиска = Ложь;</ПоследовательностьПолейПоиска>
				<Приемник>СправочникСсылка.ГруппыУчетаНачисленийИУдержаний</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>ОбщиеОбъекты</Код>
			<Наименование>Общие объекты</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>Организации</Код>
				<Наименование>Организации</Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Запрос.Текст = Запросы.Организации_Выборка.Текст;
ТаблицаОрганизации = Запрос.Выполнить().Выгрузить();
ТаблицаОрганизации.Колонки.Добавить("НаименованиеСокращенное");
ТаблицаОрганизации.Колонки.Добавить("ОбособленноеПодразделение");
ТаблицаОрганизации.Колонки.Добавить("ЮридическоеФизическоеЛицо");
ТаблицаОрганизации.Колонки.Добавить("КонтактнаяИнформация");

Запрос.Текст = СтрЗаменить(Запросы.КонтактнаяИнформацияОбъекта_Выборка.Текст, "#ИмяОбъекта", "Справочник.Организации");
ТаблицаКонтактнаяИнформация = Запрос.Выполнить().Выгрузить();

ВыборкаДанных = Новый Массив;
Отбор = Новый Структура("Объект");

//ЮрФизЛицо_ФизЛицо = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Организация_ЮрФизЛицо", Параметры.Алгоритмы, "ФизЛицо");
ЮрФизЛицо_ФизЛицо = Перечисления.ЮрФизЛицо["ФизЛицо"];

ОрганизацииТолькоСсылка = Новый Соответствие;

Для каждого Организация Из ТаблицаОрганизации Цикл
	
	Организация.НаименованиеСокращенное			= Организация.Наименование;
	Организация.ОбособленноеПодразделение		= ЗначениеЗаполнено(Организация.ГоловнаяОрганизация);
	Организация.ЮридическоеФизическоеЛицо		= ?(Организация.ЮрФизЛицо = ЮрФизЛицо_ФизЛицо, "ФизическоеЛицо", "ЮридическоеЛицо");
	//ОрганизацияСсылка = ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(Организация);
	//ОрганизацияСсылка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Организация);
	Если Не ЗначениеЗаполнено(Организация.ГоловнаяОрганизация)Тогда
		Организация.ГоловнаяОрганизация			= Организация.Ссылка;
	КонецЕсли;
	
	Отбор.Объект = Организация.Ссылка;
	СтрокиКИ = ТаблицаКонтактнаяИнформация.НайтиСтроки(Отбор);
	
	//КонтактнаяИнформация = ОбъектыПереносаДанных.ВыполнитьАлгоритм("КонтактнаяИнформация_Преобразовать", Параметры.Алгоритмы, СтрокиКИ);
	КонтактнаяИнформация = Новый ТаблицаЗначений;
	Выполнить(Алгоритмы.КонтактнаяИнформация_Преобразовать);
	Организация.КонтактнаяИнформация = КонтактнаяИнформация;
	
	//ВыборкаДанных.Добавить(ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(Организация));
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Организация));
	
	ОрганизацииТолькоСсылка.Вставить(Организация.Ссылка, Новый Структура("Наименование, КодПоЕДРПОУ", Организация.Наименование, Организация.КодПоЕДРПОУ));
	
КонецЦикла;

Параметры.ВременноеХранилище.Вставить("ОрганизацииТолькоСсылка", ОрганизацииТолькоСсылка);
</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование>Подразделения организации</Наименование>
				<Порядок>250</Порядок>
				<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ПодразделенияОрганизаций_Выбрать);
Выполнить(Алгоритмы.ПодразделенияОрганизаций_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>УчетнаяПолитикаОрганизаций</Код>
				<Наименование>Учетная политика организаций</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>УчетнаяПолитикаОрганизаций                        </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.УчетнаяПолитикаОрганизаций_Выбрать);
Выполнить(Алгоритмы.УчетнаяПолитикаОрганизаций_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций</Код>
				<Наименование>Учетная политика по расчету зарплаты организаций</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>УчетнаяПолитикаПоРасчетуЗарплаты                  </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	УчетнаяПолитика.Организация,
|	КоэффициентНочных * 100 КАК ПроцентДоплатыЗаРаботуВНочноеВремя,
|	КоэффициентВечерних * 100 КАК ПроцентДоплатыЗаРаботуВВечернееВремя
|ИЗ
|	РегистрСведений.ПараметрыРасчетаЗарплатыОрганизаций КАК УчетнаяПолитика
|
|УПОРЯДОЧИТЬ ПО
|	УчетнаяПолитика.Организация";

ТаблицаУчетнаяПолитикаПоРасчетуЗарплаты = Запрос.Выполнить().Выгрузить();

ВыборкаДанных = Новый Массив;

Для каждого СтрокаТЗ Из ТаблицаУчетнаяПолитикаПоРасчетуЗарплаты Цикл
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТЗ));
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>ФизическиеЛицаСотрудники</Код>
			<Наименование>Физические лица и сотрудники</Наименование>
			<Порядок>100</Порядок>
			<Правило Отключить="false">
				<Код>НастройкиВоинскогоУчета</Код>
				<Наименование>Настройки воинского учета</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>НастройкиВоинскогоУчета                           </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.НастройкиВоинскогоУчета_Выбрать);
Выполнить(Алгоритмы.НастройкиВоинскогоУчета_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ФизическиеЛица</Код>
				<Наименование>Физические лица</Наименование>
				<Порядок>150</Порядок>
				<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ФизическиеЛица_Выборка.Текст;
ТаблицаФизическиеЛица = Запрос.Выполнить().Выгрузить();
ТаблицаФизическиеЛица.Колонки.Добавить("ГруппаДоступа");
ТаблицаФизическиеЛица.Колонки.Добавить("КонтактнаяИнформация");

Запрос.Текст = СтрЗаменить(Запросы.КонтактнаяИнформацияОбъекта_Выборка.Текст, "#ИмяОбъекта", "Справочник.ФизическиеЛица");
ТаблицаКонтактнаяИнформация = Запрос.Выполнить().Выгрузить();
ТаблицаКонтактнаяИнформация.Индексы.Добавить("Объект");

ВыборкаДанных = Новый Массив;
Отбор = Новый Структура("Объект");

Для каждого ФизическоеЛицо Из ТаблицаФизическиеЛица Цикл
	
	ФизическоеЛицо.ГруппаДоступа = ФизическоеЛицо.ГруппаДоступаФизическогоЛица;
	
	Отбор.Объект = ФизическоеЛицо.Ссылка;
	СтрокиКИ = ТаблицаКонтактнаяИнформация.НайтиСтроки(Отбор);
	
	КонтактнаяИнформация = Новый ТаблицаЗначений;
	Выполнить(Алгоритмы.КонтактнаяИнформация_Преобразовать);
	ФизическоеЛицо.КонтактнаяИнформация = КонтактнаяИнформация;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ФизическоеЛицо));
	
КонецЦикла</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ВоинскийУчетФизическихЛиц</Код>
				<Наименование>Воинский учет физических лиц</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>ВоинскийУчетФизическихЛиц                         </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ВоинскийУчетФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ВоинскийУчетФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ГражданствоФизическихЛиц</Код>
				<Наименование>Гражданство физических лиц</Наименование>
				<Порядок>300</Порядок>
				<КодПравилаКонвертации>ГражданствоФизическихЛиц                          </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ГражданствоФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ГражданствоФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ДокументыФизическихЛиц</Код>
				<Наименование>Документы физических лиц</Наименование>
				<Порядок>350</Порядок>
				<КодПравилаКонвертации>ДокументыФизическихЛиц                            </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ДокументыФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ДокументыФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ЗнаниеЯзыковФизическихЛиц</Код>
				<Наименование>Знание языков физических лиц</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>ЗнаниеЯзыковФизическихЛиц                         </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ЗнаниеЯзыковФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ЗнаниеЯзыковФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ЛицевыеСчетаФизическихЛиц</Код>
				<Наименование>Лицевые счета физических лиц</Наименование>
				<Порядок>500</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ПериодЗаписи = Параметры.ДатаНачалаПереносаРасчетныхДанных;
Иначе
	ПериодЗаписи = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;
Запрос.Текст = 
"ВЫБРАТЬ
	|	ЛицевыеСчетаРаботниковОрганизации.Организация,
	|	ЛицевыеСчетаРаботниковОрганизации.Банк,
	|	ЛицевыеСчетаРаботниковОрганизации.Сотрудник.Физлицо КАК ФизЛицо,
	|	ЛицевыеСчетаРаботниковОрганизации.НомерКарточки КАК НомерЛицевогоСчета
	|ИЗ
	|	ВТФизическиеЛица КАК ФизическиеЛица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВыплатыЗПРаботников КАК ЛицевыеСчетаРаботниковОрганизации
	|		ПО ФизическиеЛица.Физлицо = ЛицевыеСчетаРаботниковОрганизации.Сотрудник.Физлицо";

Выборка = Запрос.Выполнить().Выбрать();

ВалютаПоУмолчанию = Константы.ВалютаРегламентированногоУчета.Получить();

ЛицевойСчет = Новый Структура;
ЛицевойСчет.Вставить("ФизическоеЛицо");
ЛицевойСчет.Вставить("ЗарплатныйПроект");
ЛицевойСчет.Вставить("Организация");
ЛицевойСчет.Вставить("Банк");
ЛицевойСчет.Вставить("НомерЛицевогоСчета");
ЛицевойСчет.Вставить("Период");

Пока Выборка.Следующий() Цикл
	
	ЛицевойСчет.ФизическоеЛицо = Выборка.ФизЛицо;
	ЛицевойСчет.Организация = Выборка.Организация;
	ЛицевойСчет.Банк = Выборка.Банк;
	ЛицевойСчет.НомерЛицевогоСчета = Выборка.НомерЛицевогоСчета;
	ЛицевойСчет.Период = ПериодЗаписи;
	
	//Если ЗначениеЗаполнено(Выборка.Документ) Тогда
	//	ЛицевойСчет.ЗарплатныйПроект	= Выборка.Документ;
	//Иначе
		
	ЗарплатныйПроект = Новый Структура;
	ЗарплатныйПроект.Вставить("Организация",	ЛицевойСчет.Организация);
	ЗарплатныйПроект.Вставить("Банк",	ЛицевойСчет.Банк);
	ЗарплатныйПроект.Вставить("НомерДоговора",	"");
	ЗарплатныйПроект.Вставить("Валюта",	ВалютаПоУмолчанию);
	
	ЛицевойСчет.ЗарплатныйПроект	= ЗарплатныйПроект;
		
	//КонецЕсли;
	
	ВыгрузитьПоПравилу(ЛицевойСчет, , , , "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам");
	
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ОбразованиеФизическихЛиц</Код>
				<Наименование>Образование физических лиц</Наименование>
				<Порядок>600</Порядок>
				<КодПравилаКонвертации>ОбразованиеФизическихЛиц                          </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = 
"ВЫБРАТЬ
|	ФизическиеЛицаОбразование.Ссылка КАК Владелец,
|	ФизическиеЛицаОбразование.ВидОбразования КАК ВидОбразования,
|	ФизическиеЛицаОбразование.УчебноеЗаведение,
|	ФизическиеЛицаОбразование.Специальность,
|	ФизическиеЛицаОбразование.Диплом,
|	ФизическиеЛицаОбразование.ГодОкончания,
|	ФизическиеЛицаОбразование.Квалификация,
|	0 КАК ЛетОбучения,
|	0 КАК МесяцевОбучения,
|	"""" КАК ВидПослевузовскогоОбразования
|ИЗ
|	Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
|ГДЕ
|	ФизическиеЛицаОбразование.Ссылка В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ФизическиеЛица.Физлицо
|			ИЗ
|				ВТФизическиеЛица КАК ФизическиеЛица)
|
|УПОРЯДОЧИТЬ ПО
|	Владелец,
|	ВидОбразования";
Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.СледующийПоЗначениюПоля("Владелец") Цикл
	
	Пока Выборка.Следующий() Цикл
		
		Образование = Новый Структура("
		|Владелец,
		|ОсновноеОбразование,
		|ВидДокумента,
		|ДатаВыдачи,
		|ВидОбразования,
		|ВидПослевузовскогоОбразования,
		|УчебноеЗаведение,
		|Специальность,
		|Серия,
		|Номер,
		|Окончание,
		|Квалификация,
		|ВидДополнительногоОбучения,
		|НаименованиеКурса,
		|КоличествоЧасов,
		|Начало");
		
		ЗаполнитьЗначенияСвойств(Образование, Выборка);
		Если Выборка.ВидОбразования = Справочники.ВидыОбразованияФизЛиц.АдъюнктураОрдинатура
			Или Выборка.ВидОбразования = Справочники.ВидыОбразованияФизЛиц.Аспирантура
			Или Выборка.ВидОбразования = Справочники.ВидыОбразованияФизЛиц.Докторантура Тогда
			
			Образование.ВидОбразования = Новый Структура("Идентификатор,Наименование","ПослевузовскоеОбразование","Послевузовское образование");
			Образование.ВидПослевузовскогоОбразования = Выборка.ВидОбразования;
			
		КонецЕсли;
		
		Образование.ВидДокумента = "Диплом";
		Образование.Номер		  = Выборка.Диплом;
		Если ЗначениеЗаполнено(Выборка.ГодОкончания) Тогда
			Образование.ДатаВыдачи	= Дата(Выборка.ГодОкончания, 1, 1);
		КонецЕсли;
		Образование.Окончание		= Образование.ДатаВыдачи;
		Образование.ОсновноеОбразование = Истина;
		
		ВыгрузитьПоПравилу(Образование, , , , "ОбразованиеФизическихЛиц");
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ПрофессииФизическихЛиц</Код>
				<Наименование>Профессии физических лиц</Наименование>
				<Порядок>650</Порядок>
				<КодПравилаКонвертации>ПрофессииФизическихЛиц                            </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ПрофессииФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ПрофессииФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СведенияОбИнвалидностиФизическихЛиц</Код>
				<Наименование>Сведения об инвалидности физических лиц</Наименование>
				<Порядок>700</Порядок>
				<КодПравилаКонвертации>СведенияОбИнвалидностиФизическихЛиц               </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.СведенияОбИнвалидностиФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.СведенияОбИнвалидностиФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СостоянияВБракеФизическихЛиц</Код>
				<Наименование>Состояния в браке физических лиц</Наименование>
				<Порядок>800</Порядок>
				<КодПравилаКонвертации>СостоянияВБракеФизическихЛиц                      </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = 
"ВЫБРАТЬ
|	СемейноеПоложениеФизЛиц.Период,
|	СемейноеПоложениеФизЛиц.ФизЛицо КАК ФизическоеЛицо,
|	СемейноеПоложениеФизЛиц.СемейноеПоложение КАК СостояниеВБраке
|ИЗ
|	РегистрСведений.СемейноеПоложениеФизЛиц КАК СемейноеПоложениеФизЛиц
|ГДЕ
|	СемейноеПоложениеФизЛиц.ФизЛицо В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ФизическиеЛица.Физлицо
|			ИЗ
|				ВТФизическиеЛица КАК ФизическиеЛица)
|
|УПОРЯДОЧИТЬ ПО
|	СемейноеПоложениеФизЛиц.ФизЛицо";

ВыборкаДанных = Запрос.Выполнить();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>РодственникиФизическихЛиц</Код>
				<Наименование>Составы семей физических лиц</Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = 
"ВЫБРАТЬ
|	ФизическиеЛицаСоставСемьи.Ссылка КАК Владелец,
|	ФизическиеЛицаСоставСемьи.СтепеньРодства,
|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ФизическиеЛицаСоставСемьи.ФизЛицо.Наименование) КАК Наименование,
|	ФизическиеЛицаСоставСемьи.ГодРождения
|ИЗ
|	Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
|				,
|				ФизЛицо В
|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
|						ФизическиеЛица.Физлицо
|					ИЗ
|						ВТФизическиеЛица КАК ФизическиеЛица)) КАК ФИОФизЛицСрезПоследних
|		ПО ФизическиеЛицаСоставСемьи.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
|ГДЕ
|	ФизическиеЛицаСоставСемьи.Ссылка В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ФизическиеЛица.Физлицо
|			ИЗ
|				ВТФизическиеЛица КАК ФизическиеЛица)
|
|УПОРЯДОЧИТЬ ПО
|	Владелец";

Выборка = Запрос.Выполнить().Выбрать();

РодственникиФизическихЛиц = Новый Структура("Владелец,СтепеньРодства,Наименование,ДатаРождения");

Пока Выборка.Следующий() Цикл
	
	ЗаполнитьЗначенияСвойств(РодственникиФизическихЛиц, Выборка);
	РодственникиФизическихЛиц.ДатаРождения = Дата(Выборка.ГодРождения,1,1);
	ВыгрузитьПоПравилу(РодственникиФизическихЛиц, , , , "РодственникиФизическихЛиц");
	
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СтажиФизическихЛиц</Код>
				<Наименование>Стажи физических лиц</Наименование>
				<Порядок>900</Порядок>
				<КодПравилаКонвертации>СтажиФизическихЛиц                                </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.СтажиФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ТрудоваяДеятельностьФизическихЛиц</Код>
				<Наименование>Трудовая деятельность физических лиц</Наименование>
				<Порядок>1050</Порядок>
				<КодПравилаКонвертации>ТрудоваяДеятельностьФизическихЛиц                 </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ТрудоваяДеятельностьФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ТрудоваяДеятельностьФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>УченыеСтепениФизическихЛиц</Код>
				<Наименование>Ученые степени физических лиц</Наименование>
				<Порядок>1150</Порядок>
				<КодПравилаКонвертации>УченыеСтепениФизическихЛиц                        </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.УченыеСтепениФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.УченыеСтепениФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ФИОФизическихЛиц</Код>
				<Наименование>ФИО физических лиц</Наименование>
				<Порядок>1200</Порядок>
				<КодПравилаКонвертации>ФИОФизическихЛиц                                  </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.ФИОФизическихЛиц_Выбрать);
Выполнить(Алгоритмы.ФИОФизическихЛиц_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>Сотрудники</Код>
				<Наименование>Сотрудники</Наименование>
				<Порядок>1250</Порядок>
				<КодПравилаКонвертации>Сотрудники                                        </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;
Запрос.Текст = Запросы.Сотрудники_Выборка.Текст;

ТаблицаСотрудники = Запрос.Выполнить().Выгрузить();

Для каждого СтрокаТЗ Из ТаблицаСотрудники Цикл
	
	Сотрудник = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТЗ);
	СотрудникСсылка = Сотрудник;
	Выполнить(Алгоритмы.Сотрудник_Преобразовать);
	
	ВыгрузитьПоПравилу(Сотрудник, , , , "Сотрудники");
	
КонецЦикла;</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>МестаВыплатыЗарплатыСотрудников</Код>
				<Наименование>Места выплаты зарплаты сотрудников</Наименование>
				<Порядок>1300</Порядок>
				<КодПравилаКонвертации>МестаВыплатыЗарплатыСотрудников                   </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.МестаВыплатыЗарплатыСотрудников_Выбрать);
Выполнить(Алгоритмы.МестаВыплатыЗарплатыСотрудников_Преобразовать);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СведенияОЛицахСДополнительнымиГарантиями</Код>
				<Наименование>Сведения о лицах с дополнительными гарантиями</Наименование>
				<Порядок>1350</Порядок>
				<КодПравилаКонвертации>СведенияОЛицахСДополнительнымиГарантиями          </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = 
"ВЫБРАТЬ
|	СведенияОЛицахСДополнительнымиГарантиями.Период,
|	СведенияОЛицахСДополнительнымиГарантиями.ФизЛицо,
|	СведенияОЛицахСДополнительнымиГарантиями.НаличиеГарантий,
|	СведенияОЛицахСДополнительнымиГарантиями.ВидГарантии,
|	СведенияОЛицахСДополнительнымиГарантиями.Комментарий
|ИЗ
|	РегистрСведений.СведенияОЛицахСДополнительнымиГарантиями КАК СведенияОЛицахСДополнительнымиГарантиями
|ГДЕ
|	СведенияОЛицахСДополнительнымиГарантиями.ФизЛицо В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ФизическиеЛица.Физлицо
|			ИЗ
|				ВТФизическиеЛица КАК ФизическиеЛица)
|УПОРЯДОЧИТЬ ПО
|	СведенияОЛицахСДополнительнымиГарантиями.ФизЛицо";

ВыборкаДанных = Запрос.Выполнить();</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СведенияОПенсионерах</Код>
				<Наименование>Сведения о пенсионерах                              </Наименование>
				<Порядок>1400</Порядок>
				<КодПравилаКонвертации>СведенияОПенсионерах                              </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = 
"ВЫБРАТЬ
|	СведенияОПенсионерах.Период,
|	СведенияОПенсионерах.ФизЛицо,
|	СведенияОПенсионерах.Пенсионер,
|	СведенияОПенсионерах.СвидетельствоСерия,
|	СведенияОПенсионерах.СвидетельствоДатаВыдачи,
|	СведенияОПенсионерах.Комментарий
|ИЗ
|	РегистрСведений.СведенияОПенсионерах КАК СведенияОПенсионерах
|ГДЕ
|	СведенияОПенсионерах.ФизЛицо В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ФизическиеЛица.Физлицо
|			ИЗ
|				ВТФизическиеЛица КАК ФизическиеЛица)
|
|УПОРЯДОЧИТЬ ПО
|	СведенияОПенсионерах.ФизЛицо";

ВыборкаДанных = Запрос.Выполнить();</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>КадровыеДанные_УпрощенныйПеренос</Код>
			<Наименование>Кадровые данные</Наименование>
			<Порядок>150</Порядок>
			<Правило Отключить="false">
				<Код>НачальнаяШтатнаяРасстановка</Код>
				<Наименование>Начальная штатная расстановка</Наименование>
				<Порядок>100</Порядок>
				<КодПравилаКонвертации>НачальнаяШтатнаяРасстановка_ПКО_УП                </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Не Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.НачальнаяШтатнаяРасстановка_Выгрузить);
Иначе
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>ВзаиморасчетыССотрудниками</Код>
			<Наименование>Взаиморасчеты с сотрудниками</Наименование>
			<Порядок>200</Порядок>
			<Правило Отключить="false">
				<Код>НачальнаяЗадолженностьПоЗарплате</Код>
				<Наименование>Начальная задолженность по зарплате</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Запрос = Новый Запрос;

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
	
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	ДатаПереноса);
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник.Физлицо КАК Физлицо,
	|	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник КАК Сотрудник,
	|	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Организация КАК Организация
	|ПОМЕСТИТЬ ВТФизлицаКОбработке
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|			&amp;ДатаНачалаПереносаРасчетныхДанных,
	|			Сотрудник В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Сотрудники.Сотрудник
	|				ИЗ
	|					ВТСотрудники КАК Сотрудники)) КАК ВзаиморасчетыСРаботникамиОрганизацийОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник.Физлицо,
	|	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник,
	|	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Организация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВзаиморасчетыСРаботникамиОрганизацийОстатки.СуммаВзаиморасчетовОстаток) &lt;&gt; 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(НачисленияРаботниковОрганизаций.ПериодРегистрации) КАК ПериодРегистрации,
	|	НачисленияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
	|	НачисленияРаботниковОрганизаций.Организация КАК Организация,
	|	НачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТПериодыНачисленийДляВзаиморасчетов
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|		ФизлицаКОбработке.Физлицо КАК ФизЛицо,
	|		ФизлицаКОбработке.Сотрудник КАК Сотрудник,
	|		ФизлицаКОбработке.Организация КАК Организация
	|	ИЗ
	|		ВТФизлицаКОбработке КАК ФизлицаКОбработке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|			ПО ФизлицаКОбработке.Сотрудник = Начисления.Сотрудник
	|				И ФизлицаКОбработке.Организация = Начисления.Организация
	|				И (Начисления.ПериодРегистрации &lt; &amp;ДатаНачалаПереносаРасчетныхДанных)) КАК НачисленияРаботниковОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияРаботниковОрганизаций.ФизЛицо,
	|	НачисленияРаботниковОрганизаций.Организация,
	|	НачисленияРаботниковОрганизаций.Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПериодРегистрации,
	|	ФизЛицо,
	|	Организация";
	Запрос.Выполнить();
	
Иначе
	
	ДатаПереноса = Параметры.МесяцНачалаЭксплуатации;
	
	Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;	

	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизации.ФизическоеЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаДляВзаиморасчетов
	|ИЗ
	|	ВТРаботникиОрганизации КАК РаботникиОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзаиморасчетыСРаботникамиОрганизаций.Сотрудник КАК Сотрудник,
	|	ВзаиморасчетыСРаботникамиОрганизаций.Организация КАК Организация,
	|	ВзаиморасчетыСРаботникамиОрганизаций.СчетУчета КАК СчетУчета,
	|	СУММА(ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетовОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
	|			&amp;ДатаНачалаПереносаРасчетныхДанных,
	|			Сотрудник.Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ФизическиеЛица.Физлицо
	|				ИЗ
	|					ВТФизическиеЛицаДляВзаиморасчетов КАК ФизическиеЛица)) КАК ВзаиморасчетыСРаботникамиОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСРаботникамиОрганизаций.Сотрудник,
	|	ВзаиморасчетыСРаботникамиОрганизаций.Организация,
	|	ВзаиморасчетыСРаботникамиОрганизаций.СчетУчета
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетовОстаток) &lt;&gt; 0";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизации.Физлицо КАК ФизическоеЛицо,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизации.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА 1
	|		КОГДА РаботникиОрганизации.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	ВТРаботникиОрганизации КАК РаботникиОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	Приоритет";
	
	СотрудникиФизлиц = Запрос.Выполнить().Выгрузить();

КонецЕсли;


Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда

	ПериодВзаиморасчетов	= ДобавитьМесяц(ДатаПереноса, -1);

	Запрос.Текст = Запросы.ВзаиморасчетыИБаза.Текст;
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БазаДляВзаиморасчетов.Организация КАК Организация,
	|	БазаДляВзаиморасчетов.Сотрудник,
	|	БазаДляВзаиморасчетов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БазаДляВзаиморасчетов.Подразделение,
	|	БазаДляВзаиморасчетов.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БазаДляВзаиморасчетов.СтатьяРасходов КАК СтатьяРасходов,
	|	БазаДляВзаиморасчетов.Сумма
	|ИЗ
	|	ВТБазаДляВзаиморасчетов КАК БазаДляВзаиморасчетов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ФизическоеЛицо,
	|	СтатьяФинансирования,
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Взаиморасчеты.ФизическоеЛицо,
	|	Взаиморасчеты.Сотрудник,
	|	Взаиморасчеты.Организация КАК Организация,
	|	Взаиморасчеты.СтатьяФинансирования,
	|	Взаиморасчеты.СтатьяРасходов,
	|	Взаиморасчеты.Сумма
	|ИЗ
	|	ВТВзаиморасчеты КАК Взаиморасчеты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Взаиморасчеты.ФизическоеЛицо
	|ИЗ
	|	ВТВзаиморасчеты КАК Взаиморасчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаДляВзаиморасчетов КАК База
	|		ПО Взаиморасчеты.ФизическоеЛицо = База.ФизическоеЛицо
	|ГДЕ
	|	База.Сумма ЕСТЬ NULL ";

	Результат = Запрос.ВыполнитьПакет();

	Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
		
		ФизическиеЛицаБезБазы = Результат[Результат.Количество()-1].Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
		
		Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	ДатаПереноса);
		Запрос.УстановитьПараметр("МассивФизическихЛиц",				ФизическиеЛицаБезБазы);
		Запрос.Текст = Запросы.СотрудникиФизическихЛиц_Выборка.Текст;
		
		СотрудникиФизлиц = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;

	База = Результат[Результат.Количество()-3].Выгрузить();

	ОтборПоБазе = Новый Структура("Организация,ФизическоеЛицо,СтатьяФинансирования,СтатьяРасходов");
	ОтборФизлиц = Новый Структура("ФизическоеЛицо");
	ОтборНулевыеСуммы = Новый Структура("Сумма", 0);
	ОтборСтатей = Новый Структура("СтатьяРасходов");

	Выборка = Результат[Результат.Количество()-2].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Организация = Выборка.Организация;
		
		ЗадолженностьПоЗарплате = Новый ТаблицаЗначений;
		ЗадолженностьПоЗарплате.Колонки.Добавить("Сотрудник");
		ЗадолженностьПоЗарплате.Колонки.Добавить("Подразделение");
		ЗадолженностьПоЗарплате.Колонки.Добавить("Сумма");
		ЗадолженностьПоЗарплате.Колонки.Добавить("СтатьяФинансирования");
		ЗадолженностьПоЗарплате.Колонки.Добавить("СтатьяРасходов");
		ЗадолженностьПоЗарплате.Колонки.Добавить("ГруппаУчетаНачислений");
		
		Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
			
			Таб = Новый ТаблицаЗначений;
			Таб.Колонки.Добавить("ФизическоеЛицо");
			Таб.Колонки.Добавить("Организация");
			Таб.Колонки.Добавить("СтатьяФинансирования");
			Таб.Колонки.Добавить("СтатьяРасходов");
			Таб.Колонки.Добавить("Сумма");
			
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Таб.Добавить(), Выборка);
			КонецЦикла;
			
			ВремТаб = Таб.Скопировать();
			ВремТаб.Свернуть("СтатьяРасходов", "Сумма");
			
			НулевыеСтроки = ВремТаб.НайтиСтроки(ОтборНулевыеСуммы);
			Для каждого СтрокаТЗ Из НулевыеСтроки Цикл
				ОтборСтатей.СтатьяРасходов = СтрокаТЗ.СтатьяРасходов;
				СтрокиКУдалению = Таб.НайтиСтроки(ОтборСтатей);
				Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
					Таб.Удалить(СтрокаКУдалению);
				КонецЦикла;
			КонецЦикла;
			
			Для каждого СтрокаТЗ Из Таб Цикл
				
				ЗаполнитьЗначенияСвойств(ОтборПоБазе, СтрокаТЗ);
				СтрокиБазы = База.НайтиСтроки(ОтборПоБазе);
				
				Коэффициенты = Неопределено;
				ПараметрыДляВыделенияКоэф = Новый Структура("МассивСтрок, ИмяКолонки", СтрокиБазы, "Сумма");
				Выполнить(Алгоритмы.ВыделитьКоэффициентыИзМассиваСтрок);
				
				МассивСумм = Неопределено;
				ПараметрыДляРаспределения = Новый Структура("ИсхСумма, МассивКоэф", СтрокаТЗ.Сумма, Коэффициенты);
				Выполнить(Алгоритмы.РаспределитьПропорционально);
				
				РезультатРаспределения	= МассивСумм;
				
				Если РезультатРаспределения.Количество() &gt; 0 Тогда
					
					Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
						
						СтрокаБазы = СтрокиБазы[СчСтрок-1];
						
						НоваяСтрока = ЗадолженностьПоЗарплате.Добавить();
						НоваяСтрока.СтатьяФинансирования	= СтрокаТЗ.СтатьяФинансирования;
						НоваяСтрока.СтатьяРасходов			= СтрокаТЗ.СтатьяРасходов;
						НоваяСтрока.ГруппаУчетаНачислений	= "Зарплата";
						
						НоваяСтрока.Сотрудник				= СтрокаБазы.Сотрудник;
						НоваяСтрока.Подразделение			= СтрокаБазы.Подразделение;
						НоваяСтрока.Сумма					= РезультатРаспределения[СчСтрок-1];
						
					КонецЦикла;
					
				Иначе
					
					ОтборФизлиц.ФизическоеЛицо = СтрокаТЗ.ФизическоеЛицо;
					МассивСотрудников = СотрудникиФизлиц.НайтиСтроки(ОтборФизлиц);
					
					Если МассивСотрудников.Количество() &gt; 0 Тогда
						
						НоваяСтрока = ЗадолженностьПоЗарплате.Добавить();
						НоваяСтрока.СтатьяФинансирования	= СтрокаТЗ.СтатьяФинансирования;
						НоваяСтрока.СтатьяРасходов			= СтрокаТЗ.СтатьяРасходов;
						НоваяСтрока.ГруппаУчетаНачислений	= "Зарплата";
						НоваяСтрока.Сумма					= СтрокаТЗ.Сумма;
						НоваяСтрока.Сотрудник				= МассивСотрудников[0].Сотрудник;
						НоваяСтрока.Подразделение			= МассивСотрудников[0].Подразделение;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ВыборкаПоДокументу = Новый Структура;
		ВыборкаПоДокументу.Вставить("Организация",					Организация);
		ВыборкаПоДокументу.Вставить("Месяц",						ПериодВзаиморасчетов);
		ВыборкаПоДокументу.Вставить("ЗадолженностьПоЗарплате",		ЗадолженностьПоЗарплате);
		
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "НачальнаяЗадолженностьПоЗарплате"); 
		
	КонецЦикла;
	
Иначе
	
	ПериодВзаиморасчетов	= ДобавитьМесяц(ДатаПереноса, -1);
	
	ОтборСотрудников = Новый Структура("Сотрудник");
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Организация = Выборка.Организация;
		
		ЗадолженностьПоЗарплате = Новый ТаблицаЗначений;
		ЗадолженностьПоЗарплате.Колонки.Добавить("Сотрудник");
		ЗадолженностьПоЗарплате.Колонки.Добавить("Подразделение");
		ЗадолженностьПоЗарплате.Колонки.Добавить("Сумма");
		ЗадолженностьПоЗарплате.Колонки.Добавить("СтатьяФинансирования");
		ЗадолженностьПоЗарплате.Колонки.Добавить("СтатьяРасходов");
		ЗадолженностьПоЗарплате.Колонки.Добавить("ГруппаУчетаНачислений");
		
		Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
			
			ОтборСотрудников.Сотрудник = Выборка.Сотрудник;
			МассивСотрудников = СотрудникиФизлиц.НайтиСтроки(ОтборСотрудников);
			
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				Подразделение	= МассивСотрудников[0].Подразделение;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Пока Выборка.СледующийПоЗначениюПоля("СчетУчета") Цикл
			
				НоваяСтрока = ЗадолженностьПоЗарплате.Добавить();
				Если Выборка.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоДругимВыплатам Тогда
					НоваяСтрока.ГруппаУчетаНачислений	= "ПрочиеВыплаты";
				Иначе
					НоваяСтрока.ГруппаУчетаНачислений	= "Зарплата";
				КонецЕсли;
						
				НоваяСтрока.Сотрудник				= Выборка.Сотрудник;
				НоваяСтрока.Подразделение			= Подразделение;
				НоваяСтрока.Сумма					= Выборка.Сумма;
						
			КонецЦикла;
					
		КонецЦикла;
			
		ВыборкаПоДокументу = Новый Структура;
		ВыборкаПоДокументу.Вставить("Организация",					Организация);
		ВыборкаПоДокументу.Вставить("Месяц",						ПериодВзаиморасчетов);
		ВыборкаПоДокументу.Вставить("ЗадолженностьПоЗарплате",		ЗадолженностьПоЗарплате);
		
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "НачальнаяЗадолженностьПоЗарплате"); 
		
	КонецЦикла;
	
КонецЕсли;	</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>УчетНДФЛ</Код>
			<Наименование>Учет НДФЛ</Наименование>
			<Порядок>250</Порядок>
			<Правило Отключить="false">
				<Код>РасчетыНалогоплательщиковСБюджетомПоНДФЛ_ПД</Код>
				<Наименование>Расчеты налогоплательщиков с бюджетом по НДФЛ</Наименование>
				<Порядок>300</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
	ДатаНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
	
	Запрос = Новый Запрос;
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.Период КАК Период,
	|	ВЫРАЗИТЬ(НДФЛРасчетыСБюджетом.Сотрудник КАК Справочник.СотрудникиОрганизаций).ФизЛицо КАК ФизЛицо,
	|	НДФЛРасчетыСБюджетом.ДоходНДФЛ КАК КодДохода,
	|	НДФЛРасчетыСБюджетом.ПериодВзаиморасчетов,
	|	НДФЛРасчетыСБюджетом.НалоговыйПериод,
	|	НДФЛРасчетыСБюджетом.Налог,
	|	НДФЛРасчетыСБюджетом.Доход,
	|	НДФЛРасчетыСБюджетом.Организация КАК ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.Организация КАК Организация,
	|	НДФЛРасчетыСБюджетом.ВидДвижения
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.Сотрудник В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Сотрудники.Сотрудник
	|			ИЗ
	|				ВТСотрудники КАК Сотрудники)
	|	И НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	|	И НДФЛРасчетыСБюджетом.Сотрудник ССЫЛКА Справочник.СотрудникиОрганизаций
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ФизЛицо";

	ДатаПереноса = ДатаНачалаПереноса;

	Пока ДатаПереноса &lt;= ДатаОкончания Цикл
		
		Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
		Запрос.Текст = ТекстЗапроса;
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
			
			Организация = Выборка.Организация;
			
			ВыборкаПоДокументу = Новый Структура;
			
			ВыборкаПоДокументу.Вставить("Номер",			 "НДФЛ");
			ВыборкаПоДокументу.Вставить("Организация",		 Организация);
			ВыборкаПоДокументу.Вставить("ПериодРегистрации", ДатаПереноса);
			
			Таб = Новый ТаблицаЗначений;
			Таб.Колонки.Добавить("ФизическоеЛицо");
			Таб.Колонки.Добавить("ГоловнаяОрганизация");
			Таб.Колонки.Добавить("Организация");
			Таб.Колонки.Добавить("Период");
			Таб.Колонки.Добавить("ВидДвижения");
			Таб.Колонки.Добавить("ПериодВзаиморасчетов");
			Таб.Колонки.Добавить("НалоговыйПериод");
			Таб.Колонки.Добавить("Налог");
			Таб.Колонки.Добавить("Доход");
			Таб.Колонки.Добавить("КодДохода");
			
			Пока Выборка.Следующий() Цикл
				
				НоваяСтрока = Таб.Добавить();
				НоваяСтрока.ФизическоеЛицо					= Выборка.ФизЛицо;
				НоваяСтрока.ГоловнаяОрганизация				= Выборка.ГоловнаяОрганизация;
				НоваяСтрока.Организация						= Выборка.Организация;
				НоваяСтрока.Период							= НачалоДня(Выборка.Период);
				НоваяСтрока.ВидДвижения						= Выборка.ВидДвижения;
				НоваяСтрока.ПериодВзаиморасчетов			= Выборка.ПериодВзаиморасчетов;
				НоваяСтрока.НалоговыйПериод					= Выборка.НалоговыйПериод;
				НоваяСтрока.Налог							= Выборка.Налог;
				НоваяСтрока.Доход							= Выборка.Доход;
				НоваяСтрока.КодДохода						= Выборка.КодДохода;
				//НоваяСтрока.Подразделение					= Выборка.ПодразделениеОрганизации; 		
				
			КонецЦикла;
			
			ВыборкаПоДокументу.Вставить("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Таб);
			
			ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "РасчетыНалогоплательщиковСБюджетомПоНДФЛ_ПД");
			
		КонецЦикла;
		
		
		ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
		
	КонецЦикла;
	
	
	
Иначе
	ДатаНачалаПереноса = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	ДатаОкончания = НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1));
	
	Запрос = Новый Запрос;
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(НДФЛРасчетыСБюджетом.Сотрудник КАК Справочник.СотрудникиОрганизаций).ФизЛицо КАК ФизЛицо,
	|	НДФЛРасчетыСБюджетом.ДоходНДФЛ КАК КодДохода,
	|	&amp;МесяцПеред КАК ПериодВзаиморасчетов,
	|	&amp;МесяцПеред КАК НалоговыйПериод,
	|	НДФЛРасчетыСБюджетом.НалогОстаток,
	|	НДФЛРасчетыСБюджетом.ДоходОстаток,
	|	НДФЛРасчетыСБюджетом.Организация КАК ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоНДФЛ.Остатки(&amp;ДатаПереносаРасчетныхДанных,
	|			Сотрудник В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Сотрудники.Сотрудник
	|			ИЗ
	|				ВТСотрудники КАК Сотрудники)) КАК НДФЛРасчетыСБюджетом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ФизЛицо";


    Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	Параметры.МесяцНачалаЭксплуатации);
	Запрос.УстановитьПараметр("МесяцПеред",	НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1)));
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();

	ДатаПереноса = Параметры.МесяцНачалаЭксплуатации;

	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
			
		Организация = Выборка.Организация;
			
		ВыборкаПоДокументу = Новый Структура;
			
		ВыборкаПоДокументу.Вставить("Номер",			 "НДФЛ");
		ВыборкаПоДокументу.Вставить("Организация",		 Организация);
		ВыборкаПоДокументу.Вставить("ПериодРегистрации", ДатаПереноса);
			
		Таб = Новый ТаблицаЗначений;
		Таб.Колонки.Добавить("ФизическоеЛицо");
		Таб.Колонки.Добавить("ГоловнаяОрганизация");
		Таб.Колонки.Добавить("Организация");
		Таб.Колонки.Добавить("ПериодВзаиморасчетов");
		Таб.Колонки.Добавить("НалоговыйПериод");
		Таб.Колонки.Добавить("Налог");
		Таб.Колонки.Добавить("Доход");
		Таб.Колонки.Добавить("КодДохода");
		Таб.Колонки.Добавить("Период");
		Таб.Колонки.Добавить("ВидДвижения");
		Таб.Колонки.Добавить("ГруппаУчетаУдержаний");
			
		Пока Выборка.Следующий() Цикл
				
			НоваяСтрока = Таб.Добавить();
			НоваяСтрока.ФизическоеЛицо					= Выборка.ФизЛицо;
			НоваяСтрока.ГоловнаяОрганизация				= Выборка.ГоловнаяОрганизация;
			НоваяСтрока.Организация						= Выборка.Организация;
			НоваяСтрока.Период							= ДатаПереноса;
			НоваяСтрока.ВидДвижения						= ВидДвиженияНакопления.Приход;
			НоваяСтрока.ПериодВзаиморасчетов			= Выборка.ПериодВзаиморасчетов;
			НоваяСтрока.НалоговыйПериод					= Выборка.НалоговыйПериод;
			НоваяСтрока.Налог							= Выборка.НалогОстаток;
			НоваяСтрока.Доход							= Выборка.ДоходОстаток;
			НоваяСтрока.КодДохода						= Выборка.КодДохода;
		
			Если Выборка.КодДохода = Справочники.ВидыДоходовНДФЛ.ВоенныйСбор Тогда
				НоваяСтрока.ГруппаУчетаУдержаний = "ВоенныйСбор";	
			Иначе
				НоваяСтрока.ГруппаУчетаУдержаний = "НДФЛ";
			КонецЕсли;
			
		КонецЦикла;
			
		ВыборкаПоДокументу.Вставить("РасчетыНалогоплательщиковСБюджетомПоНДФЛ", Таб);
			
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "РасчетыНалогоплательщиковСБюджетомПоНДФЛ_ПД");
			
	КонецЦикла;
	
КонецЕсли;

</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>ЛьготыФизическихЛицНДФЛ</Код>
				<Наименование>Льготы физических лиц НДФЛ</Наименование>
				<Порядок>400</Порядок>
				<КодПравилаКонвертации>ЛьготыФизическихЛицНДФЛ_ПД                        </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>//Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
//	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
//	ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
//	ДатаНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
//Иначе
//	ДатаНачалаПереноса = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
//	ДатаОкончания = НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1));
//КонецЕсли;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(Параметры.МесяцНачалаЭксплуатации));

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготыРаботниковОрганизаций.Период КАК Период,
	|	ЛьготыРаботниковОрганизаций.Организация КАК Организация,
	|	ЛьготыРаботниковОрганизаций.Сотрудник,
	|	ЛьготыРаботниковОрганизаций.Сотрудник.Физлицо КАК ФизическоеЛицо,
	|	ЛьготыРаботниковОрганизаций.Льгота,
	|	ЛьготыРаботниковОрганизаций.Актуальность
	|ИЗ
	|	РегистрСведений.ЛьготыРаботниковОрганизаций.СрезПоследних(&amp;ДатаНачала, 
	|			Сотрудник В (ВЫБРАТЬ
	|				ВТСотрудники.Сотрудник
	|			ИЗ
	|				ВТСотрудники)  
	|			И Льгота.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.Основной)) КАК ЛьготыРаботниковОрганизаций
	|ГДЕ
	|	ЛьготыРаботниковОрганизаций.Актуальность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ФизическоеЛицо";
	
Выборка = Запрос.Выполнить().Выбрать();	

Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
	Организация = Выборка.Организация;
		
	ВыборкаПоДокументу = Новый Структура;
		
	ВыборкаПоДокументу.Вставить("Номер",			 "НДФЛ_Льготы");
	ВыборкаПоДокументу.Вставить("Организация",		 Организация);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации", Параметры.МесяцНачалаЭксплуатации);
		
	Таб = Новый ТаблицаЗначений;
	Таб.Колонки.Добавить("Период");
	Таб.Колонки.Добавить("ФизическоеЛицо");
	Таб.Колонки.Добавить("Льгота");
	Таб.Колонки.Добавить("Актуальность");
		
	Пока Выборка.Следующий() Цикл
			
		НоваяСтрока = Таб.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Период = НачалоДня(Выборка.Период); 		
			
	КонецЦикла;
		
	ВыборкаПоДокументу.Вставить("ЛьготыФизическихЛицНДФЛ", Таб);
		
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ЛьготыФизическихЛицНДФЛ_ПД");
		
КонецЦикла;
</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>УчетСтраховыхВзносов</Код>
			<Наименование>Учет страховых взносов</Наименование>
			<Порядок>300</Порядок>
			<Правило Отключить="false">
				<Код>РасчетыСФондамиПоСтраховымВзносам_ПД</Код>
				<Наименование>Расчеты с фондами по страховым взносам</Наименование>
				<Порядок>400</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	Выполнить(Алгоритмы.СтраховыеВзносыРасчеты_Выбрать);
	Выполнить(Алгоритмы.СтраховыеВзносыРасчеты_Преобразовать);
	
Иначе
	
	Запрос = Новый Запрос;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&amp;МесяцПеред КАК ПериодВзаиморасчетов,
	|	ВзаиморасчетыПоВзносамВФонды.Налог,
	|	ВзаиморасчетыПоВзносамВФонды.РезультатОстаток,
	|	ВзаиморасчетыПоВзносамВФонды.Организация КАК Организация
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыПоВзносамВФонды.Остатки(&amp;ДатаПереносаРасчетныхДанных) КАК ВзаиморасчетыПоВзносамВФонды
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";

    Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	Параметры.МесяцНачалаЭксплуатации);
	Запрос.УстановитьПараметр("МесяцПеред",	НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1)));
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();

	ДатаПереноса = Параметры.МесяцНачалаЭксплуатации;

	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
			
		Организация = Выборка.Организация;
			
		ВыборкаПоДокументу = Новый Структура;
			
		ВыборкаПоДокументу.Вставить("Номер",			 "ВЗНОСЫ");
		ВыборкаПоДокументу.Вставить("Организация",		 Организация);
		ВыборкаПоДокументу.Вставить("ПериодРегистрации", ДатаПереноса);
			
		Таб = Новый ТаблицаЗначений;
		Таб.Колонки.Добавить("Организация");
		Таб.Колонки.Добавить("ПериодВзаиморасчетов");
		Таб.Колонки.Добавить("Налог");
		Таб.Колонки.Добавить("Сумма");
		Таб.Колонки.Добавить("Период");
		Таб.Колонки.Добавить("ВидДвижения");
			
		Пока Выборка.Следующий() Цикл
				
			НоваяСтрока = Таб.Добавить();
			НоваяСтрока.Организация						= Выборка.Организация;
			НоваяСтрока.Период							= ДатаПереноса;
			НоваяСтрока.ВидДвижения						= ВидДвиженияНакопления.Приход;
			НоваяСтрока.ПериодВзаиморасчетов			= Выборка.ПериодВзаиморасчетов;
			НоваяСтрока.Налог							= Выборка.Налог;
			НоваяСтрока.Сумма							= Выборка.РезультатОстаток;
			
		КонецЦикла;
			
		ВыборкаПоДокументу.Вставить("РасчетыСФондамиПоСтраховымВзносам", Таб);
			
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "РасчетыСФондамиПоСтраховымВзносам_ПД");
			
	КонецЦикла;
	
	
КонецЕсли;	</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>УчетСреднегоЗаработка</Код>
			<Наименование>Учет среднего заработка                             </Наименование>
			<Порядок>350</Порядок>
			<Правило Отключить="false">
				<Код>СведенияОНачисленияхДляРасчетаСреднегоЗаработкаФСС</Код>
				<Наименование>Начисления и время для расчета среднего (больничные)</Наименование>
				<Порядок>50</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.НачисленияДляРасчетаСреднегоЗаработкаФСС_Выгрузить);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СведенияОНачисленияхДляРасчетаСреднегоЗаработкаОтп</Код>
				<Наименование>Начисления и время для расчета среднего (отпуска)</Наименование>
				<Порядок>100</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.НачисленияДляРасчетаСреднегоЗаработкаОтп_Выгрузить);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>СведенияОНачисленияхДляРасчетаСреднегоЗаработкаПр</Код>
				<Наименование>Начисления и время для расчета среднего (прочие)</Наименование>
				<Порядок>150</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Выполнить(Алгоритмы.НачисленияДляРасчетаСреднегоЗаработкаПр_Выгрузить);</ПередОбработкойПравила>
			</Правило>
			<Правило Отключить="false">
				<Код>КоэффициентИндексацииЗаработка_ПД</Код>
				<Наименование>Коэффициент индексации заработка</Наименование>
				<Порядок>200</Порядок>
				<КодПравилаКонвертации>КоэффициентИндексацииЗаработка_ПД                 </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>	ДатаНачалаРаботыСПрограммой = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
	МесяцНачалаПереноса = ДобавитьМесяц(НачалоГода(ДатаНачалаРаботыСПрограммой), -12);
	МесяцОкончанияПереноса = КонецМесяца(ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -1));
	
	ВыборкаДанных = Новый Массив;
	
	Запрос = Новый Запрос;
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;
	
	Запрос.УстановитьПараметр("МесяцНачалаПереноса",МесяцНачалаПереноса);
	Запрос.УстановитьПараметр("МесяцОкончанияПереноса",МесяцОкончанияПереноса);
	
	 Запрос.Текст =
	"ВЫБРАТЬ
	|	КоэффициентИндексацииЗаработка.Сотрудник.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(КоэффициентИндексацииЗаработка.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	КоэффициентИндексацииЗаработка.Сотрудник КАК Сотрудник,
	|	КоэффициентИндексацииЗаработка.Период,
	|	КоэффициентИндексацииЗаработка.Коэффициент
	|ИЗ
	|	РегистрСведений.КоэффициентыПовышенияОкладов КАК КоэффициентИндексацииЗаработка
	|ГДЕ
	|	КоэффициентИндексацииЗаработка.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТСотрудники.Сотрудник
	|			ИЗ
	|				ВТСотрудники)
	|	И КоэффициентИндексацииЗаработка.Период МЕЖДУ &amp;МесяцНачалаПереноса И &amp;МесяцОкончанияПереноса
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодРегистрации,
	|	Сотрудник,
	|	КоэффициентИндексацииЗаработка.Период
	|ИТОГИ ПО
	|	Организация";
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, КоэффициентИндексацииЗаработка",
			"КИНД", Организация, Параметры.МесяцНачалаЭксплуатации, ДанныеПоОрганизации.Строки));	
	КонецЦикла;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="false">
			<Код>ИндексацияЗаработка</Код>
			<Наименование>Индексация заработка                              </Наименование>
			<Порядок>400</Порядок>
			<Правило Отключить="false">
				<Код>БазовыеПериодыИндексации_ПД</Код>
				<Наименование>Базовые периоды индексации</Наименование>
				<Порядок>450</Порядок>
				<КодПравилаКонвертации>БазовыеПериодыИндексации_ПД                       </КодПравилаКонвертации>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>	ВыборкаДанных = Новый Массив;
	
	Запрос = Новый Запрос;
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;
	
	Запрос.УстановитьПараметр("ДатаНачала",НачалоМесяца(Параметры.МесяцНачалаЭксплуатации));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыРасчетаИндексации.Организация КАК Организация,
	|	ПараметрыРасчетаИндексации.Сотрудник КАК Сотрудник,
	|	ПараметрыРасчетаИндексации.ПодразделениеОрганизации КАК Подразделение,
	|	ПараметрыРасчетаИндексации.Должность КАК Должность,
	|	ПараметрыРасчетаИндексации.Период
	|ИЗ
	|	РегистрСведений.ПараметрыРасчетаИндексации.СрезПоследних(&amp;ДатаНачала, 
	|			Сотрудник В (ВЫБРАТЬ
	|				ВТСотрудники.Сотрудник
	|			ИЗ
	|				ВТСотрудники)  
	|			ИЛИ Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)) КАК ПараметрыРасчетаИндексации
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	Сотрудник,
	|	Период
	|ИТОГИ ПО
	|	Организация";
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, БазовыеПериодыИндексации",
			"БПИ", Организация, Параметры.МесяцНачалаЭксплуатации, ДанныеПоОрганизации.Строки));	
	КонецЦикла;</ПередОбработкойПравила>
			</Правило>
		</Группа>
		<Группа Отключить="true">
			<Код>__ПолныйПереносНеГотово</Код>
			<Наименование>(не готово)</Наименование>
			<Порядок>450</Порядок>
			<Группа Отключить="false">
				<Код>РеестрыКадровыхДанных</Код>
				<Наименование>Реестры кадровых данных</Наименование>
				<Порядок>250</Порядок>
				<Правило Отключить="false">
					<Код>РеестрКадровыхПриказов</Код>
					<Наименование>РеестрКадровыхПриказов</Наименование>
					<Порядок>50</Порядок>
					<КодПравилаКонвертации>РеестрКадровыхПриказов                            </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Отказ = Истина;	
Иначе
	Выполнить(Алгоритмы.РеестрКадровыхПриказовВыгрузить);
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>РеестрОтпусков</Код>
					<Наименование>РеестрОтпусков</Наименование>
					<Порядок>100</Порядок>
					<КодПравилаКонвертации>РеестрОтпусков                                    </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Выполнить(Алгоритмы.РеестрОтпусковВыгрузить);</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>УчетРабочегоВремени_ПереносНачислений</Код>
				<Наименование>Учет рабочего времени</Наименование>
				<Порядок>250</Порядок>
				<Правило Отключить="false">
					<Код>ГрафикиРаботыСотрудников_ПН</Код>
					<Наименование>Графики работы сотрудников</Наименование>
					<Порядок>50</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы ССЫЛКА Справочник.ГрафикиРаботы
	|	И ГрафикиРаботыПоВидамВремени.План
	|	И ГрафикиРаботыПоВидамВремени.Месяц &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ГрафикиРаботыМассив = Новый Массив;
	ПараметрыАлгоритма = Новый Структура; //Чтобы не падало выполнение алгоритма ниже
	Выполнить(Алгоритмы.ГрафикиРаботы_Выгрузить);
	
	Для каждого ГрафикРаботы Из ГрафикиРаботыМассив Цикл
		
		ВыгрузитьПоПравилу(ГрафикРаботы, , , , "ГрафикиРаботыСотрудников");
		
		Выполнить(Алгоритмы.ГрафикиРаботыПоВидамВремени_Выгрузить);
				
	КонецЦикла;
	
Иначе
	Отказ = истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>РабочееВремяСотрудников_ПД</Код>
					<Наименование>Рабочее время сотрудников</Наименование>
					<Порядок>100</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Сотрудник",							Параметры.СотрудникДляОтладки);
	Запрос.УстановитьПараметр("ПоВсемСотрудникам",					Параметры.СотрудникДляОтладки.Пустая());
	Запрос.УстановитьПараметр("ФизическоеЛицо",						Параметры.ФизическоеЛицоДляОтладки);
	Запрос.УстановитьПараметр("ПоВсемФизическимЛицам",				Параметры.ФизическоеЛицоДляОтладки.Пустая());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РабочееВремяРаботниковОрганизаций.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(РабочееВремяРаботниковОрганизаций.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|	РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	РабочееВремяРаботниковОрганизаций.Период КАК Период,
	|	РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени КАК ВидУчетаВремени,
	|	РабочееВремяРаботниковОрганизаций.Дней КАК Дни,
	|	РабочееВремяРаботниковОрганизаций.Часов КАК Часы,
	|	РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод
	|ИЗ
	|	РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(РабочееВремяРаботниковОрганизаций.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	|	И (&amp;ПоВсемСотрудникам
	|			ИЛИ РабочееВремяРаботниковОрганизаций.Сотрудник = &amp;Сотрудник)
	|	И (&amp;ПоВсемФизическимЛицам
	|			ИЛИ РабочееВремяРаботниковОрганизаций.Сотрудник.Физлицо = &amp;ФизическоеЛицо)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодРегистрации,
	|	Сотрудник,
	|	Период
	|ИТОГИ ПО
	|	Организация,
	|	ПериодРегистрации";
	
	ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
	
	Пока ДатаПереноса &lt;= ДатаОкончания Цикл
		
		Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
		
		ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
			Организация = ДанныеПоОрганизации.Организация;
			Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
				
				ДокументДляВыгрузки = Новый Структура("Номер, Организация, ПериодРегистрации, ДанныеТабельногоУчетаРабочегоВремениСотрудников",
				"РВ", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки);
				
				ВыгрузитьПоПравилу(ДокументДляВыгрузки, , , , "РабочееВремяСотрудников_ПД");
				
			КонецЦикла;
		КонецЦикла;
		
		ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
		
	КонецЦикла;
	
Иначе
	
	Отказ = Истина;
	
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>ИсполнительныеДокументы</Код>
				<Наименование>Исполнительные документы</Наименование>
				<Порядок>300</Порядок>
				<Правило Отключить="false">
					<Код>ИсполнительныеДокументы_ПД</Код>
					<Наименование>Исполнительные документы</Наименование>
					<Порядок>50</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;
	
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
	Запрос.УстановитьПараметр("ФизическоеЛицо",						Параметры.ФизическоеЛицоДляОтладки);
	Запрос.УстановитьПараметр("ПоВсемФизическимЛицам",				Параметры.ФизическоеЛицоДляОтладки.Пустая());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдержанияПоИсполнительнымЛистам.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТИсполнительныеДокументы
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&amp;ДатаНачалаПереносаРасчетныхДанных,
	|			(&amp;ПоВсемФизическимЛицам
	|				ИЛИ Сотрудник.ФизЛицо = &amp;ФизическоеЛицо)
	|				И (ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела))
	|					ИЛИ ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ИсполнителныйЛистСУчетомОграничения))) КАК УдержанияПоИсполнительнымЛистам
	|ГДЕ
	|	УдержанияПоИсполнительнымЛистам.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И НЕ УдержанияПоИсполнительнымЛистам.ДокументОснование = ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдержанияРаботниковОрганизаций.ДокументОснование
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	|ГДЕ
	|	(&amp;ПоВсемФизическимЛицам
	|			ИЛИ УдержанияРаботниковОрганизаций.Сотрудник.Физлицо = &amp;ФизическоеЛицо)
	|	И НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	|	И УдержанияРаботниковОрганизаций.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И НЕ УдержанияРаботниковОрганизаций.ДокументОснование = ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсполнительныйЛист.Ссылка КАК Ссылка,
	|	ИсполнительныйЛист.Номер,
	|	ИсполнительныйЛист.Дата,
	|	ИсполнительныйЛист.Физлицо КАК ФизическоеЛицо,
	|	ИсполнительныйЛист.Организация,
	|	ИсполнительныйЛист.ВидИсполнительногоДокумента,
	|	ИсполнительныйЛист.РеквизитыИсполнительногоДокумента,
	|	ИсполнительныйЛист.СпособРасчетаИЛ,
	|	ИсполнительныйЛист.Получатель,
	|	ИсполнительныйЛист.ДатаНачала,
	|	ИсполнительныйЛист.ДатаОкончания,
	|	ИсполнительныйЛист.Размер,
	|	ИсполнительныйЛист.Предел,
	|	ИсполнительныйЛист.ДатаДействия,
	|	ИсполнительныйЛист.ТарифПочты,
	|	ИсполнительныйЛист.СпособПеречисления,
	|	ИсполнительныйЛист.Комментарий,
	|	ИсполнительныйЛист.СчетКонтрагента.Банк.Наименование КАК ПлатежныйАгентБанкНаименование,
	|	ИсполнительныйЛист.Дети.(
	|		ФизЛицо,
	|		ФизЛицо.ДатаРождения КАК ДатаРождения,
	|		ГодОкончания
	|	)
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсполнительныеДокументы КАК ИсполнительныеДокументы
	|		ПО ИсполнительныйЛист.Ссылка = ИсполнительныеДокументы.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Результаты = Запрос.ВыполнитьПакет();
	ИсполнительныеДокументы = Результаты[1].Выгрузить();
	//ИсполнительныеДокументыИзменения = Результаты[1].Выгрузить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ПериодРегистрации,
	|	Удержания.Организация,
	|	Удержания.Сотрудник,
	|	Удержания.Сотрудник.Физлицо КАК ФизЛицо,
	|	Удержания.Результат КАК СуммаУдержания,
	|	Удержания.ДокументОснование,
	|	Удержания.ДокументОснование.Получатель КАК Получатель,
	|	Удержания.ДокументОснование.СчетКонтрагента.Банк.Наименование КАК ПлатежныйАгент,
	|	Удержания.ДокументОснование.СпособПеречисления КАК СпособПеречисления
	|ПОМЕСТИТЬ ВТФактическиеУдержанияПоДокументам
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсполнительныеДокументы КАК ИсполнительныеДокументы
	|		ПО Удержания.ДокументОснование = ИсполнительныеДокументы.ДокументОснование
	|			И (Удержания.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ФактическиеУдержания.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ФактическиеУдержания.Организация КАК Организация,
	|	ФактическиеУдержания.ФизЛицо КАК ФизическоеЛицо,
	|	СУММА(УдержанияРаботниковОрганизаций.Результат) КАК СуммаВознагражденияПлатежногоАгента
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ФактическиеУдержания.ПериодРегистрации КАК ПериодРегистрации,
	|		ФактическиеУдержания.Организация КАК Организация,
	|		ФактическиеУдержания.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		ВТФактическиеУдержанияПоДокументам КАК ФактическиеУдержания) КАК ФактическиеУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	|		ПО ФактическиеУдержания.ПериодРегистрации = УдержанияРаботниковОрганизаций.ПериодРегистрации
	|			И ФактическиеУдержания.Организация = УдержанияРаботниковОрганизаций.Организация
	|			И ФактическиеУдержания.ФизЛицо = УдержанияРаботниковОрганизаций.Сотрудник.Физлицо
	|			И (УдержанияРаботниковОрганизаций.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ПочтовыйСбор))
	|
	|СГРУППИРОВАТЬ ПО
	|	ФактическиеУдержания.Организация,
	|	ФактическиеУдержания.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ФактическиеУдержания.ПериодРегистрации, МЕСЯЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ФактическиеУдержанияПоДокументам.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ФактическиеУдержанияПоДокументам.Организация КАК Организация,
	|	ФактическиеУдержанияПоДокументам.ФизЛицо КАК ФизическоеЛицо,
	|	ФактическиеУдержанияПоДокументам.СуммаУдержания,
	|	ФактическиеУдержанияПоДокументам.ДокументОснование КАК ИсполнительныйДокумент,
	|	ФактическиеУдержанияПоДокументам.Получатель,
	|	ФактическиеУдержанияПоДокументам.ПлатежныйАгент,
	|	ФактическиеУдержанияПоДокументам.СпособПеречисления
	|ИЗ
	|	ВТФактическиеУдержанияПоДокументам КАК ФактическиеУдержанияПоДокументам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Период,
	|	ФизическоеЛицо";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	УдержанияПоИЛВыборка = Результаты[2].Выбрать();
	УдержанияПоИЛИздержки = Результаты[1].Выгрузить();
	УдержанияПоИЛ = Результаты[2].Выгрузить();
	
Иначе
	
	ДатаПереноса = Параметры.МесяцНачалаЭксплуатации;
	
	Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;	
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаПереноса);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизации.ФизическоеЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТРаботникиОрганизации КАК РаботникиОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанияОрганизаций.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТУдержанияБезПредела
	|ИЗ
	|	ПланВидовРасчета.УдержанияОрганизаций КАК УдержанияОрганизаций
	|ГДЕ
	|	УдержанияОрганизаций.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммой))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанияОрганизаций.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТУдержанияДоПредела
	|ИЗ
	|	ПланВидовРасчета.УдержанияОрганизаций КАК УдержанияОрганизаций
	|ГДЕ
	|	УдержанияОрганизаций.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеУдержания.ДокументОснование
	|ПОМЕСТИТЬ ВТИсполнительныеДокументыБезПредела
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&amp;ДатаСреза,
	|			ВидРасчета В
	|					(ВЫБРАТЬ
	|						Удержания.Ссылка
	|					ИЗ
	|						ВТУдержанияБезПредела КАК Удержания)
	|				И Сотрудник.ФизЛицо В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.Физлицо
	|					ИЗ
	|						ВТФизическиеЛица КАК ФизическиеЛица)) КАК ПлановыеУдержания
	|ГДЕ
	|	ПлановыеУдержания.Действие &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ПлановыеУдержания.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И НЕ ПлановыеУдержания.ДокументОснование = ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеУдержания.ДокументОснование,
	|	ПлановыеУдержания.ВидРасчета
	|ПОМЕСТИТЬ ВТИсполнительныеДокументыДоПредела
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&amp;ДатаСреза,
	|			ВидРасчета В
	|					(ВЫБРАТЬ
	|						Удержания.Ссылка
	|					ИЗ
	|						ВТУдержанияДоПредела КАК Удержания)
	|				И Сотрудник.ФизЛицо В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.Физлицо
	|					ИЗ
	|						ВТФизическиеЛица КАК ФизическиеЛица)) КАК ПлановыеУдержания
	|ГДЕ
	|	ПлановыеУдержания.Действие &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|	И ПлановыеУдержания.ДокументОснование ССЫЛКА Документ.ИсполнительныйЛист
	|	И НЕ ПлановыеУдержания.ДокументОснование = ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыДоПредела.ДокументОснование
	|ПОМЕСТИТЬ ВТИсполнительныеДокументыДоПределаДействующие
	|ИЗ
	|	(ВЫБРАТЬ
	|		УдержанияРаботниковОрганизаций.ДокументОснование КАК ДокументОснование,
	|		СУММА(УдержанияРаботниковОрганизаций.Результат) КАК Результат,
	|		УдержанияРаботниковОрганизаций.ДокументОснование.Предел КАК ДокументОснованиеПредел
	|	ИЗ
	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	|	ГДЕ
	|		(УдержанияРаботниковОрганизаций.ВидРасчета, УдержанияРаботниковОрганизаций.ДокументОснование) В
	|				(ВЫБРАТЬ
	|					Удержания.ВидРасчета,
	|					Удержания.ДокументОснование
	|				ИЗ
	|					ВТИсполнительныеДокументыДоПредела КАК Удержания)
	|		И УдержанияРаботниковОрганизаций.ПериодРегистрации &lt; &amp;ДатаСреза
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УдержанияРаботниковОрганизаций.ДокументОснование,
	|		УдержанияРаботниковОрганизаций.ДокументОснование.Предел) КАК ДокументыДоПредела
	|ГДЕ
	|	ДокументыДоПредела.Результат &lt; ДокументыДоПредела.ДокументОснованиеПредел
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Удержания.ПериодРегистрации,
	|	Удержания.Организация,
	|	Удержания.Сотрудник.Физлицо КАК ФизЛицо,
	|	Удержания.Результат КАК СуммаУдержания,
	|	Удержания.ДокументОснование,
	|	Удержания.ДокументОснование.Получатель КАК Получатель,
	|	Удержания.ДокументОснование.СчетКонтрагента.Банк.Наименование КАК ПлатежныйАгент,
	|	Удержания.ДокументОснование.СпособПеречисления КАК СпособПеречисления
	|ПОМЕСТИТЬ ВТФактическиеУдержанияПоДокументам
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсполнительныеДокументыДоПределаДействующие КАК ВТИсполнительныеДокументыДоПредела
	|		ПО Удержания.ДокументОснование = ВТИсполнительныеДокументыДоПредела.ДокументОснование
	|			И (Удержания.ПериодРегистрации &lt; &amp;ДатаСреза)
	|			И (Удержания.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Удержания.ПериодРегистрации,
	|	Удержания.Организация,
	|	Удержания.Сотрудник.Физлицо,
	|	Удержания.Результат,
	|	Удержания.ДокументОснование
	|ИЗ
	|	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсполнительныеДокументыБезПредела КАК ВТИсполнительныеДокументыБезПредела
	|		ПО Удержания.ДокументОснование = ВТИсполнительныеДокументыБезПредела.ДокументОснование
	|			И (Удержания.ПериодРегистрации &lt; &amp;ДатаСреза)
	|			И (Удержания.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммой)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсполнительныеДокументыБезПредела.ДокументОснование
	|ПОМЕСТИТЬ ВТИсполнительныеДокументы
	|ИЗ
	|	ВТИсполнительныеДокументыБезПредела КАК ИсполнительныеДокументыБезПредела
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсполнительныеДокументыДоПределаДействующие.ДокументОснование
	|ИЗ
	|	ВТИсполнительныеДокументыДоПределаДействующие КАК ИсполнительныеДокументыДоПределаДействующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсполнительныйЛист.Ссылка КАК Ссылка,
	|	ИсполнительныйЛист.Номер,
	|	ИсполнительныйЛист.Дата,
	|	ИсполнительныйЛист.Физлицо КАК ФизическоеЛицо,
	|	ИсполнительныйЛист.Организация,
	|	ИсполнительныйЛист.ВидИсполнительногоДокумента,
	|	ИсполнительныйЛист.РеквизитыИсполнительногоДокумента,
	|	ИсполнительныйЛист.СпособРасчетаИЛ,
	|	ИсполнительныйЛист.Получатель,
	|	ИсполнительныйЛист.ДатаНачала,
	|	ИсполнительныйЛист.ДатаОкончания,
	|	ИсполнительныйЛист.Размер,
	|	ИсполнительныйЛист.Предел,
	|	ИсполнительныйЛист.ДатаДействия,
	|	ИсполнительныйЛист.ТарифПочты,
	|	ИсполнительныйЛист.СпособПеречисления,
	|	ИсполнительныйЛист.Комментарий,
	|	ИсполнительныйЛист.СчетКонтрагента.Банк.Наименование КАК ПлатежныйАгентБанкНаименование,
	|	ИсполнительныйЛист.Дети.(
	|		ФизЛицо,
	|		ФизЛицо.ДатаРождения КАК ДатаРождения,
	|		ГодОкончания
	|	)
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсполнительныеДокументы КАК ИсполнительныеДокументы
	|		ПО ИсполнительныйЛист.Ссылка = ИсполнительныеДокументы.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ФактическиеУдержания.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ФактическиеУдержания.Организация КАК Организация,
	|	ФактическиеУдержания.ФизЛицо КАК ФизическоеЛицо,
	|	СУММА(УдержанияРаботниковОрганизаций.Результат) КАК СуммаВознагражденияПлатежногоАгента
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ФактическиеУдержания.ПериодРегистрации КАК ПериодРегистрации,
	|		ФактическиеУдержания.Организация КАК Организация,
	|		ФактическиеУдержания.ФизЛицо КАК ФизЛицо
	|	ИЗ
	|		ВТФактическиеУдержанияПоДокументам КАК ФактическиеУдержания) КАК ФактическиеУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	|		ПО ФактическиеУдержания.ПериодРегистрации = УдержанияРаботниковОрганизаций.ПериодРегистрации
	|			И ФактическиеУдержания.Организация = УдержанияРаботниковОрганизаций.Организация
	|			И ФактическиеУдержания.ФизЛицо = УдержанияРаботниковОрганизаций.Сотрудник.Физлицо
	|			И (УдержанияРаботниковОрганизаций.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ПочтовыйСбор))
	|
	|СГРУППИРОВАТЬ ПО
	|	ФактическиеУдержания.Организация,
	|	ФактическиеУдержания.ФизЛицо,
	|	НАЧАЛОПЕРИОДА(ФактическиеУдержания.ПериодРегистрации, МЕСЯЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ФактическиеУдержанияПоДокументам.ПериодРегистрации, МЕСЯЦ) КАК Период,
	|	ФактическиеУдержанияПоДокументам.Организация КАК Организация,
	|	ФактическиеУдержанияПоДокументам.ФизЛицо КАК ФизическоеЛицо,
	|	ФактическиеУдержанияПоДокументам.СуммаУдержания,
	|	ФактическиеУдержанияПоДокументам.ДокументОснование КАК ИсполнительныйДокумент,
	|	ФактическиеУдержанияПоДокументам.Получатель,
	|	ФактическиеУдержанияПоДокументам.ПлатежныйАгент,
	|	ФактическиеУдержанияПоДокументам.СпособПеречисления
	|ИЗ
	|	ВТФактическиеУдержанияПоДокументам КАК ФактическиеУдержанияПоДокументам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Период,
	|	ФизическоеЛицо";
	
	Результаты = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результаты.Количество();
	
	УдержанияПоИЛВыборка = Результаты[КоличествоРезультатов - 1].Выбрать();
	УдержанияПоИЛИздержки = Результаты[КоличествоРезультатов - 2].Выгрузить();
	ИсполнительныеДокументы = Результаты[КоличествоРезультатов - 3].Выгрузить();
	//ИсполнительныеДокументыИзменения = Результаты[КоличествоРезультатов - 4].Выгрузить();
	
	УдержанияПоИЛ = Результаты[КоличествоРезультатов - 1].Выгрузить();
	
КонецЕсли;

УдержанияПоИЛ.Индексы.Добавить("Период,Организация,ФизическоеЛицо");
Отбор = Новый Структура("Период,Организация,ФизическоеЛицо");
ОтборСтрок = Новый Структура("Период,Организация");

ПрожиточныйМинимумДляВыгрузки = Новый Массив;

ПоляДляЗаполнения = "Ссылка,Организация,ФизическоеЛицо,Получатель,ДатаДействия,ДатаОкончания,Дата,Номер,РеквизитыИсполнительногоДокумента,Предел,Комментарий";
Для каждого СтрокаТЗ Из ИсполнительныеДокументы Цикл
	
	Запрос.Текст = 
	"";
	
	ИЛ = Новый Структура("
	|Ссылка,
	|Организация,
	|ФизическоеЛицо,
	|ВидИсполнительногоДокумента,
	|РеквизитыИсполнительногоДокумента,
	|АдресПолучателя,
	|АдресПолучателяПредставление,
	|Получатель,
	|ДатаДействия,
	|ДатаОкончания,
	|СпособРасчета,
	|ВидБазы,
	|Удержание,
	|Процент,
	|Сумма,
	|Числитель,
	|Знаменатель,
	|ПрожиточныйМинимум,
	|Предел,
	|УчитыватьБольничныеЛисты,
	|ПлатежныйАгент,
	|ТарифПлатежногоАгента,
	|УдержаниеВознагражденияПлатежногоАгента,
	|Комментарий,
	|Дата,
	|Номер");
	
	ЗаполнитьЗначенияСвойств(ИЛ, СтрокаТЗ, ПоляДляЗаполнения);
	ИЛ.ВидИсполнительногоДокумента = ?(Врег(СОКРЛП(СтрокаТЗ.ВидИсполнительногоДокумента)) = "ИСПОЛНИТЕЛЬНЫЙ ЛИСТ","ИсполнительныйЛист","СоглашениеОбУплатеАлиментов");
	ИЛ.УчитыватьБольничныеЛисты = Ложь;
	
	Если СтрокаТЗ.СпособРасчетаИЛ = 1 Тогда
		ИЛ.СпособРасчета = "Процентом";
		ИЛ.ВидБазы = "Заработок";
		ИЛ.Процент = СтрокаТЗ.Размер;	
		
	ИначеЕсли СтрокаТЗ.СпособРасчетаИЛ = 2 Тогда		
		ИЛ.СпособРасчета = "ФиксированнойСуммой";
		ИЛ.Сумма = СтрокаТЗ.Размер;
	КонецЕсли;
	
	Если СтрокаТЗ.СпособПеречисления = Перечисления.СпособыПеречисленияСуммПоИсполнительнымЛистам.ПочтовымПереводом Тогда
		ИЛ.ПлатежныйАгент = НСтр("ru='Почта Украины';uk='Пошта України'");
		ИЛ.ТарифПлатежногоАгента = СтрокаТЗ.ТарифПочты;
	ИначеЕсли СтрокаТЗ.СпособПеречисления = Перечисления.СпособыПеречисленияСуммПоИсполнительнымЛистам.ЧерезБанк Тогда
		ИЛ.ПлатежныйАгент = СтрокаТЗ.ПлатежныйАгентБанкНаименование;
		//ИЛ.ТарифПлатежногоАгента = СтрокаТЗ.ТарифБанкаНаДенежныеПереводы;
	КонецЕсли;
	
	ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ТолькоПлановыеУдержания");
	ПараметрыДляЗаполнения.Параметры = Параметры;
	ПараметрыДляЗаполнения.ТолькоПлановыеУдержания = Истина;
	ПараметрыДляЗаполнения.ВР = ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом;
	
	ОписаниеВР = Неопределено;
	Выполнить(Алгоритмы.ЗаполнитьОписаниеВР_Удержания);
	ИЛ.Удержание = ОписаниеВР;	
	//ИЛ.Удержание = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗаполнитьОписаниеВР_Удержания", Параметры.Алгоритмы, ПараметрыДляЗаполнения);
	
	//Если ЗначениеЗаполнено(ИЛ.ПлатежныйАгент) Тогда
	//	
	//	ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ТолькоПлановыеУдержания");
	//	ПараметрыДляЗаполнения.Параметры = Параметры;
	//	ПараметрыДляЗаполнения.ТолькоПлановыеУдержания = Истина;
	//	ПараметрыДляЗаполнения.ВР = ПланыВидовРасчета.УдержанияОрганизаций.ПочтовыйСборПоИЛ;
	//	ИЛ.УдержаниеВознагражденияПлатежногоАгента = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗаполнитьОписаниеВР_Удержания", Параметры.Алгоритмы, ПараметрыДляЗаполнения)
	//	
	//КонецЕсли;
	
	//Дети
	Дети = Новый ТаблицаЗначений;
	Дети.Колонки.Добавить("ФизическоеЛицо");
	Дети.Колонки.Добавить("ДатаОкончания");
	Дети.Колонки.Добавить("ДатаРождения");
	
	Для Каждого СтрокаДети Из СтрокаТЗ.Дети Цикл
		
		Ребенок = Дети.Добавить();
		
		Ребенок.ФизическоеЛицо = СтрокаДети.ФизЛицо;
		Ребенок.ДатаРождения   = СтрокаДети.ДатаРождения;
		Ребенок.ДатаОкончания  = Дата(СтрокаДети.ГодОкончания, 1, 1);
		
	КонецЦикла;
	Ил.Вставить("Дети", Дети);
	
	ВыгрузитьПоПравилу(ИЛ, , , , "ИсполнительныйЛист");
	
КонецЦикла;

//ПоляДляЗаполнения = "Ссылка,Дата,Номер,Организация,ФизическоеЛицо,ИсполнительныйЛист,Действие,ДатаИзменения,ДатаОкончания,Комментарий,Предел";
//Для каждого СтрокаТЗ Из ИсполнительныеДокументыИзменения Цикл
//	
//	ИЛ = Новый Структура("
//	|Ссылка,
//	|Организация,
//	|ФизическоеЛицо,
//	|ИсполнительныйЛист,
//	|Действие,
//	|ДатаИзменения,
//	|ДатаОкончания,
//	|СпособРасчета,
//	|ВидБазы,
//	|Удержание,
//	|Процент,
//	|Сумма,
//	|Числитель,
//	|Знаменатель,
//	|ПрожиточныйМинимум,
//	|Предел,
//	|УчитыватьБольничныеЛисты,
//	|ПлатежныйАгент,
//	|ТарифПлатежногоАгента,
//	|УдержаниеВознагражденияПлатежногоАгента,
//	|Комментарий,
//	|Дата,
//	|Номер");
//	
//	ЗаполнитьЗначенияСвойств(ИЛ, СтрокаТЗ, ПоляДляЗаполнения);
//	
//	Если СтрокаТЗ.СпособРасчетаУдержания = Перечисления.СпособыРасчетаУдержанийПоИЛ.ПроцентомОтЗаработка Тогда
//		ИЛ.СпособРасчета = "Процентом";
//		ИЛ.ВидБазы = "Заработок";
//		ИЛ.Процент = СтрокаТЗ.Размер;
//	ИначеЕсли СтрокаТЗ.СпособРасчетаУдержания = Перечисления.СпособыРасчетаУдержанийПоИЛ.ПроцентомОтЗаработкаСУчетомБольничныхЛистов Тогда
//		ИЛ.СпособРасчета = "Процентом";
//		ИЛ.ВидБазы = "Заработок";
//		ИЛ.Процент = СтрокаТЗ.Размер;
//		ИЛ.УчитыватьБольничныеЛисты = Истина;
//	ИначеЕсли СтрокаТЗ.СпособРасчетаУдержания = Перечисления.СпособыРасчетаУдержанийПоИЛ.КратноВеличинеПрожиточногоМинимума Тогда	
//		ИЛ.СпособРасчета = "Процентом";
//		ИЛ.ВидБазы = "ПрожиточныйМинимум";
//		ИЛ.Процент = СтрокаТЗ.Размер;
//		ИЛ.ПрожиточныйМинимум = СтрокаТЗ.ПрожиточныйМинимум;
//		
//		Если ПрожиточныйМинимумДляВыгрузки.Найти(СтрокаТЗ.ПрожиточныйМинимум) = Неопределено Тогда
//			ПрожиточныйМинимумДляВыгрузки.Добавить(СтрокаТЗ.ПрожиточныйМинимум);	
//		КонецЕсли;
//		
//	ИначеЕсли СтрокаТЗ.СпособРасчетаУдержания = Перечисления.СпособыРасчетаУдержанийПоИЛ.ФиксированнойСуммой Тогда		
//		ИЛ.СпособРасчета = "ФиксированнойСуммой";
//		ИЛ.Сумма = СтрокаТЗ.Размер;
//	КонецЕсли;
//	
//	Если СтрокаТЗ.СпособПеречисленияПоИсполнительномуЛисту = Перечисления.СпособыПеречисленийПоИсполнительномуЛисту.ПочтовыйПеревод Тогда
//		ИЛ.ПлатежныйАгент = "Почта России";
//		Если СтрокаТЗ.ПочтовыйСборРассчитыватьПроцентом Тогда
//			ИЛ.ТарифПлатежногоАгента = СтрокаТЗ.ПроцентПочтовогоСбора;
//		Иначе
//			ИЛ.ТарифПлатежногоАгента = СтрокаТЗ.Тариф;
//		КонецЕсли;
//	ИначеЕсли СтрокаТЗ.СпособПеречисленияПоИсполнительномуЛисту = Перечисления.СпособыПеречисленийПоИсполнительномуЛисту.БанковскийПеревод Тогда
//		ИЛ.ПлатежныйАгент = СтрокаТЗ.ПлатежныйАгентБанкНаименование;
//		ИЛ.ТарифПлатежногоАгента = СтрокаТЗ.ТарифБанкаНаДенежныеПереводы;
//	КонецЕсли;
//	
//	ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ТолькоПлановыеУдержания");
//	ПараметрыДляЗаполнения.Параметры = Параметры;
//	ПараметрыДляЗаполнения.ТолькоПлановыеУдержания = Истина;
//	ПараметрыДляЗаполнения.ВР = ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом;
//	ИЛ.Удержание = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗаполнитьОписаниеВР_Удержания", Параметры.Алгоритмы, ПараметрыДляЗаполнения);
//	
//	Если ЗначениеЗаполнено(ИЛ.ПлатежныйАгент) Тогда
//		
//		ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ТолькоПлановыеУдержания");
//		ПараметрыДляЗаполнения.Параметры = Параметры;
//		ПараметрыДляЗаполнения.ТолькоПлановыеУдержания = Истина;
//		ПараметрыДляЗаполнения.ВР = ПланыВидовРасчета.УдержанияОрганизаций.ПочтовыйСборПоИЛ;
//		ИЛ.УдержаниеВознагражденияПлатежногоАгента = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗаполнитьОписаниеВР_Удержания", Параметры.Алгоритмы, ПараметрыДляЗаполнения)
//		
//	КонецЕсли;
//	
//	ВыгрузитьПоПравилу(ИЛ, , , , "ИзменениеУсловийИсполнительногоЛиста");
	
//КонецЦикла;

//Для каждого ПрожиточныйМинимум Из ПрожиточныйМинимумДляВыгрузки Цикл
//	ВыгрузитьПоПравилу(ПрожиточныйМинимум, , , , "ПрожиточныеМинимумы");	
//КонецЦикла;

Таб = Новый ТаблицаЗначений;
Таб.Колонки.Добавить("Период");
Таб.Колонки.Добавить("Организация");
Таб.Колонки.Добавить("ФизическоеЛицо");
Таб.Колонки.Добавить("ИсполнительныйДокумент");
Таб.Колонки.Добавить("Получатель");
Таб.Колонки.Добавить("ПлатежныйАгент");
Таб.Колонки.Добавить("СуммаУдержания");
Таб.Колонки.Добавить("СуммаВознагражденияПлатежногоАгента");

Пока УдержанияПоИЛВыборка.СледующийПоЗначениюПоля("Организация") Цикл
	
	Организация = УдержанияПоИЛВыборка.Организация;
	
	Пока УдержанияПоИЛВыборка.СледующийПоЗначениюПоля("Период") Цикл
		
		Период = УдержанияПоИЛВыборка.Период;
		
		ВыборкаДокумент = Новый Структура;
		ВыборкаДокумент.Вставить("Организация", Организация);
		ВыборкаДокумент.Вставить("ПериодРегистрации", Период);
		ВыборкаДокумент.Вставить("Номер", "ИЛ");
		
		СтрокиДокумента = Таб.СкопироватьКолонки();
		
		Пока УдержанияПоИЛВыборка.Следующий() Цикл
			НоваяСтрока = СтрокиДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, УдержанияПоИЛВыборка);
			
			Если СтрокаТЗ.СпособПеречисления = Перечисления.СпособыПеречисленияСуммПоИсполнительнымЛистам.ПочтовымПереводом Тогда
				НоваяСтрока.ПлатежныйАгент = НСтр("ru='Почта Украины';uk='Пошта України'");
			КонецЕсли;
			
		КонецЦикла;
		
		ОтборСтрок.Организация = Организация;
		ОтборСтрок.Период = Период;
		СтрокиИздержек = УдержанияПоИЛИздержки.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаТЗ Из СтрокиИздержек Цикл
			
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаТЗ);
			НайденныеСтроки = УдержанияПоИЛ.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = СтрокиДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
			НоваяСтрока.ИсполнительныйДокумент = НайденныеСтроки[0].ИсполнительныйДокумент;
			
		КонецЦикла;
		
		СтрокиДокумента.Свернуть("Период,Организация,ФизическоеЛицо,ИсполнительныйДокумент,Получатель,ПлатежныйАгент","СуммаУдержания,СуммаВознагражденияПлатежногоАгента");
		
		ВыборкаДокумент.Вставить("УдержанияПоИсполнительнымДокументам", СтрокиДокумента);
		
		ВыгрузитьПоПравилу(ВыборкаДокумент, , , , "УдержанияПоИсполнительнымДокументам_ПД");
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>КадроваяИсторияНачисления_ПереносНачислений</Код>
				<Наименование>Кадровая история и плановые начисления / удержания</Наименование>
				<Порядок>300</Порядок>
				<Правило Отключить="false">
					<Код>ДоговорНаВыполнениеРаботСФЛ</Код>
					<Наименование>Плановые начисления по договорам</Наименование>
					<Порядок>50</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ДоговорНаВыполнениеРаботСФЛ_Выбрать);
	Выполнить(Алгоритмы.ДоговорНаВыполнениеРаботСФЛ_Преобразовать);
	Выполнить(Алгоритмы.ДоговорНаВыполнениеРаботСФЛ_ВыгрузитьПоПравилу);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ЗначенияПоказателейРасчетаЗарплаты_ПД</Код>
					<Наименование>Значения показателей расчета зарплаты</Наименование>
					<Порядок>100</Порядок>
					<КодПравилаКонвертации>ЗначенияПоказателейРасчетаЗарплаты_ПД             </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	ВыборкаДанных = Новый Массив;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
	
	Выполнить(Алгоритмы.НачисленияУдержания_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.НачисленияУдержания_ВременнаяТаблица;
	
	Запрос.Текст = Запросы.ПоказателиНачисленийУдержаний_ВременнаяТаблица.Текст;
	Запрос.Выполнить();
	
	Запрос.Текст = Запросы.ПериодическиеПоказателиОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, ЗначенияПериодическихПоказателейРасчетаЗарплатыОрганизаций",
			"ЗП_ЗнППРЗ", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки));
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.ПериодическиеПоказателиПодразделений_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, ЗначенияПериодическихПоказателейРасчетаЗарплатыПодразделений",
			"ЗП_ЗнППРЗ", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки));
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.РазовыеПоказателиОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, ЗначенияРазовыхПоказателейРасчетаЗарплатыОрганизаций",
			"ЗП_ЗнППРЗ", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки));
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.РазовыеПоказателиПодразделений_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, ЗначенияРазовыхПоказателейРасчетаЗарплатыПодразделений",
			"ЗП_ЗнППРЗ", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки));
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.РазовыеПоказателиСотрудников_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, ЗначенияРазовыхПоказателейРасчетаЗарплатыСотрудников",
			"ЗП_ЗнППРЗ", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки));
		КонецЦикла;
	КонецЦикла;
	
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ПриемНаРаботу</Код>
					<Наименование>Прием на работу</Наименование>
					<Порядок>150</Порядок>
					<КодПравилаКонвертации>ПриемНаРаботу                                     </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПриемНаРаботу_Выбрать);
	Выполнить(Алгоритмы.ПриемНаРаботу_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>КадровыйПеревод</Код>
					<Наименование>Кадровый перевод</Наименование>
					<Порядок>200</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.КадровыйПеревод_Выбрать);
	Выполнить(Алгоритмы.КадровыйПеревод_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ИзменениеОплатыТруда</Код>
					<Наименование>Изменение оплаты труда</Наименование>
					<Порядок>250</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ИзменениеОплатыТруда_Выбрать);
	Выполнить(Алгоритмы.ИзменениеОплатыТруда_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>Увольнение</Код>
					<Наименование>Увольнение</Наименование>
					<Порядок>300</Порядок>
					<КодПравилаКонвертации>Увольнение                                        </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.Увольнение_Выбрать);
	Выполнить(Алгоритмы.Увольнение_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ДанныеСостоянийСотрудников</Код>
					<Наименование>Данные состояний сотрудников</Наименование>
					<Порядок>350</Порядок>
					<КодПравилаКонвертации>ДанныеСостоянийСотрудников                        </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	ВыборкаДанных	= Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных", Параметры.ДатаНачалаПереносаРасчетныхДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеПоБольничномуЛисту.Ссылка КАК Ссылка,
	|	НачислениеПоБольничномуЛисту.ПерерассчитываемыйДокумент
	|ПОМЕСТИТЬ ВТБольничныеКОбработке
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|ГДЕ
	|	(НачислениеПоБольничномуЛисту.ПериодРегистрации &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	|			ИЛИ НачислениеПоБольничномуЛисту.ДатаОкончания &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных)
	|	И НачислениеПоБольничномуЛисту.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка
	|ПОМЕСТИТЬ ВТБольничные
	|ИЗ
	|	ВТБольничныеКОбработке КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБольничныеКОбработке КАК ДокументыПерерасчеты
	|		ПО Документы.Ссылка = ДокументыПерерасчеты.ПерерассчитываемыйДокумент
	|ГДЕ
	|	ДокументыПерерасчеты.Ссылка ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка,
	|	НачисленияБольничный.Сотрудник
	|ИЗ
	|	ВТБольничные КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачисленияБольничный
	|		ПО Документы.Ссылка = НачисленияБольничный.Ссылка
	|			И Документы.Ссылка.Сотрудник &lt;&gt; НачисленияБольничный.Сотрудник
	|ГДЕ
	|	НЕ НачисленияБольничный.Сотрудник ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеПоБольничномуЛисту.Сотрудник,
	|	НачислениеПоБольничномуЛисту.ДатаНачала,
	|	НачислениеПоБольничномуЛисту.ДатаОкончания,
	|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности,
	|	НачислениеПоБольничномуЛисту.ПериодРегистрации КАК ПериодРегистрации,
	|	НачислениеПоБольничномуЛисту.Организация КАК Организация,
	|	Документы.Ссылка
	|ИЗ
	|	ВТБольничные КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
	|		ПО Документы.Ссылка = НачислениеПоБольничномуЛисту.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ПериодРегистрации";
	
	Результат = Запрос.ВыполнитьПакет();
	КолРез = Результат.Количество();
	Выборка = Результат[КолРез-1].Выбрать();
	ТаблицаДругиеСотрудники = Результат[КолРез-2].Выгрузить();
	
	ОтборСтрок = Новый Структура("Ссылка");
	
	ДанныеСостояний = Новый ТаблицаЗначений;
	ДанныеСостояний.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
	ДанныеСостояний.Колонки.Добавить("Состояние", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(70)));
	ДанныеСостояний.Колонки.Добавить("Начало", Новый ОписаниеТипов("Дата"));
	ДанныеСостояний.Колонки.Добавить("Окончание", Новый ОписаниеТипов("Дата"));
	ДанныеСостояний.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ДанныеСостояний.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		ОрганизацияОтбор = Выборка.Организация;
		
		Пока Выборка.СледующийПоЗначениюПоля("ПериодРегистрации") Цикл
			
			ПериодОтбор = Выборка.ПериодРегистрации;
			
			Пока Выборка.Следующий() Цикл
				
				Если Выборка.ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
					
					НоваяСтрока = ДанныеСостояний.Добавить();
					НоваяСтрока.Сотрудник = Выборка.Сотрудник;
					НоваяСтрока.Состояние = "ОтпускПоБеременностиИРодам";
					НоваяСтрока.Начало = Выборка.ДатаНачала;
					НоваяСтрока.Окончание = Выборка.ДатаОкончания;
					НоваяСтрока.Организация = Выборка.Организация;
					НоваяСтрока.Период = Выборка.ПериодРегистрации;
					
				Иначе
					
					//Если Выборка.НеВыплачиватьПособие Тогда
					//	// Весь период без оплаты
					//	НоваяСтрока = ДанныеСостояний.Добавить();
					//	НоваяСтрока.Сотрудник = Выборка.Сотрудник;
					//	НоваяСтрока.Состояние = "БолезньБезОплаты";
					//	НоваяСтрока.Начало = Выборка.ДатаНачала;
					//	НоваяСтрока.Окончание = Выборка.ДатаОкончания;
					//	НоваяСтрока.Организация = Выборка.Организация;
					//	НоваяСтрока.Период = Выборка.ПериодРегистрации;
					//Иначе
					//	Если Выборка.ДатаНачала &lt; Выборка.ДатаНачалаОплаты Тогда
					//		// Если оплата начинается позже, то интервал перед - это болезнь без оплаты.
					//		НоваяСтрока = ДанныеСостояний.Добавить();
					//		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
					//		НоваяСтрока.Состояние = "БолезньБезОплаты";
					//		НоваяСтрока.Начало = Выборка.ДатаНачала;
					//		НоваяСтрока.Окончание = НачалоДня(Выборка.ДатаНачалаОплаты) - 1;
					//		НоваяСтрока.Организация = Выборка.Организация;
					//		НоваяСтрока.Период = Выборка.ПериодРегистрации;
					//	КонецЕсли;
					НоваяСтрока = ДанныеСостояний.Добавить();
					НоваяСтрока.Сотрудник = Выборка.Сотрудник;
					НоваяСтрока.Состояние = "Болезнь";
					НоваяСтрока.Начало = Выборка.ДатаНачала;
					НоваяСтрока.Окончание = Выборка.ДатаОкончания;
					НоваяСтрока.Организация = Выборка.Организация;
					НоваяСтрока.Период = Выборка.ПериодРегистрации;
					//КонецЕсли;
					
				КонецЕсли;
				
				ОтборСтрок.Ссылка = Выборка.Ссылка;
				ДругиеСотрудники = ТаблицаДругиеСотрудники.НайтиСтроки(ОтборСтрок);
				Для каждого СтрокаТЗ Из ДругиеСотрудники Цикл
					
					НоваяСтрока = ДанныеСостояний.Добавить();
					НоваяСтрока.Сотрудник = СтрокаТЗ.Сотрудник;
					НоваяСтрока.Состояние = "БолезньБезОплаты";
					НоваяСтрока.Начало = Выборка.ДатаНачала;
					НоваяСтрока.Окончание = Выборка.ДатаОкончания;
					НоваяСтрока.Организация = Выборка.Организация;
					НоваяСтрока.Период = Выборка.ПериодРегистрации;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОплатаПоСреднемуЗаработку.Ссылка КАК Ссылка,
	|	ОплатаПоСреднемуЗаработку.ПерерассчитываемыйДокумент
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.ОплатаПоСреднемуЗаработку КАК ОплатаПоСреднемуЗаработку
	|ГДЕ
	|	(ОплатаПоСреднемуЗаработку.ПериодРегистрации &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	|			ИЛИ ОплатаПоСреднемуЗаработку.ДатаОкончания &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных)
	|	И ОплатаПоСреднемуЗаработку.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОплатаПоСреднемуЗаработку.Сотрудник,
	|	ВЫБОР
	|		КОГДА ОплатаПоСреднемуЗаработку.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Командировка)
	|			ТОГДА ""Командировка""
	|		КОГДА ОплатаПоСреднемуЗаработку.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности)
	|			ТОГДА ""ВыполнениеГосударственныхОбязанностей""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Состояние,
	|	ОплатаПоСреднемуЗаработку.ДатаНачала КАК Начало,
	|	ОплатаПоСреднемуЗаработку.ДатаОкончания КАК Окончание,
	|	ОплатаПоСреднемуЗаработку.Организация КАК Организация,
	|	ОплатаПоСреднемуЗаработку.ПериодРегистрации КАК Период
	|ИЗ
	|	ВТДокументыКОбработке КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ДокументыПерерасчеты
	|		ПО Документы.Ссылка = ДокументыПерерасчеты.ПерерассчитываемыйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОплатаПоСреднемуЗаработку КАК ОплатаПоСреднемуЗаработку
	|		ПО Документы.Ссылка = ОплатаПоСреднемуЗаработку.Ссылка
	|ГДЕ
	|	ДокументыПерерасчеты.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ОплатаПоСреднемуЗаработку.ПериодРегистрации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("Период") Цикл
			
			Пока Выборка.Следующий() Цикл
				
				Если Не ПустаяСтрока(Выборка.Состояние) Тогда
					ЗаполнитьЗначенияСвойств(ДанныеСостояний.Добавить(), Выборка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.Ссылка КАК Ссылка,
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.Ссылка.ПерерассчитываемыйДокумент,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизацийОтпуска.ВидРасчета.ВидОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыОтпусков.ЕжегодныйОсновной)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновнойОтпуск,
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций.Отпуска КАК НачислениеОтпускаРаботникамОрганизацийОтпуска
	|ГДЕ
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.Ссылка.ПериодРегистрации &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизацийОтпуска.ВидРасчета.ВидОтпуска = ЗНАЧЕНИЕ(Справочник.ВидыОтпусков.ЕжегодныйОсновной)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.Ссылка,
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.Ссылка.ПерерассчитываемыйДокумент,
	|	НачислениеОтпускаРаботникамОрганизацийОтпуска.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеОтпуска.Сотрудник,
	|	""ОтпускОсновной"" КАК Состояние,
	|	НачислениеОтпуска.Организация КАК Организация,
	|	НачислениеОтпуска.ПериодРегистрации КАК Период,
	|	Документы.Ссылка
	|ИЗ
	|	ВТДокументыКОбработке КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпуска
	|		ПО Документы.Ссылка = НачислениеОтпуска.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ДокументыПерерасчеты
	|		ПО Документы.Ссылка = ДокументыПерерасчеты.ПерерассчитываемыйДокумент
	|ГДЕ
	|	ДокументыПерерасчеты.Ссылка ЕСТЬ NULL 
	|	И Документы.ОсновнойОтпуск
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеОтпуска.Сотрудник,
	|	ВЫБОР
	|		КОГДА Документы.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск)
	|			ТОГДА ""ДополнительныйОтпуск""
	|		КОГДА Документы.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение)
	|			ТОГДА ""ОтпускУчебныйОплачиваемый""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	НачислениеОтпуска.Организация,
	|	НачислениеОтпуска.ПериодРегистрации,
	|	Документы.Ссылка
	|ИЗ
	|	ВТДокументыКОбработке КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпуска
	|		ПО Документы.Ссылка = НачислениеОтпуска.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ДокументыПерерасчеты
	|		ПО Документы.Ссылка = ДокументыПерерасчеты.ПерерассчитываемыйДокумент
	|ГДЕ
	|	ДокументыПерерасчеты.Ссылка ЕСТЬ NULL 
	|	И НЕ Документы.ОсновнойОтпуск
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	НачислениеОтпуска.ПериодРегистрации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("Период") Цикл
			
			Пока Выборка.Следующий() Цикл
				
				Если Не ПустаяСтрока(Выборка.Состояние) Тогда
					ЗаполнитьЗначенияСвойств(ДанныеСостояний.Добавить(), Выборка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПричиныНевыхода = Новый Массив;
	ПричиныНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускЗаСвойСчет);
	ПричиныНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.НевыходРегл);
	ПричиныНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Прогул);
	ПричиныНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыУчебный);
	
	Запрос.УстановитьПараметр("ПричиныНевыхода", ПричиныНевыхода);
	
	Запрос.Текст = 		
	"ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка КАК ВидРасчета
	|ПОМЕСТИТЬ ВТВидыРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	НЕ ОсновныеНачисления.Предопределенный
	|	И ОсновныеНачисления.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.НулеваяСумма)
	|	И ОсновныеНачисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЦелодневноеНеотработанное)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.Ссылка В(&amp;ПричиныНевыхода)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Невыходы.Ссылка КАК Ссылка,
	|	Невыходы.НомерСтроки,
	|	Невыходы.СторнируемыйДокумент,
	|	Невыходы.Сотрудник,
	|	Невыходы.ВидРасчета,
	|	Невыходы.ДатаНачала,
	|	Невыходы.ДатаОкончания
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.НевыходыВОрганизациях.Начисления КАК Невыходы
	|ГДЕ
	|	(Невыходы.Ссылка.ПериодРегистрации &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	|			ИЛИ Невыходы.ДатаОкончания &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных)
	|	И Невыходы.Ссылка.Проведен
	|	И Невыходы.ВидРасчета В
	|			(ВЫБРАТЬ
	|				ВТВидыРасчета.ВидРасчета
	|			ИЗ
	|				ВТВидыРасчета)
	|	И Невыходы.Ссылка.СпособРегистрацииВремени = ЗНАЧЕНИЕ(Перечисление.СпособыРегистрацииВремени.РегистрацияДляЦелойСмены)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НевыходыВОрганизацияхНачисления.Сотрудник,
	|	НевыходыВОрганизацияхНачисления.ДатаНачала КАК Начало,
	|	НевыходыВОрганизацияхНачисления.ДатаОкончания КАК Окончание,
	|	НевыходыВОрганизацияхНачисления.Ссылка.Организация КАК Организация,
	|	НевыходыВОрганизацияхНачисления.Ссылка.ПериодРегистрации КАК Период,
	|	ВЫБОР
	|		КОГДА ВТДокументыКОбработке.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя)
	|			ТОГДА ""ОтпускНеоплачиваемыйПоРазрешениюРаботодателя""
	|		КОГДА ВТДокументыКОбработке.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый)
	|			ТОГДА ""ОтпускУчебныйНеоплачиваемый""
	|		КОГДА ВТДокументыКОбработке.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам)
	|			ТОГДА ""ОтсутствиеПоНевыясненнымПричинам""
	|		КОГДА ВТДокументыКОбработке.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ПростойПоВинеРаботника)
	|			ТОГДА ""ПростойПоВинеРаботника""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	ВТДокументыКОбработке КАК ВТДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ДокументыПерерасчеты
	|		ПО ВТДокументыКОбработке.Ссылка = ДокументыПерерасчеты.СторнируемыйДокумент
	|			И ВТДокументыКОбработке.Сотрудник = ДокументыПерерасчеты.Сотрудник
	|			И ВТДокументыКОбработке.ДатаНачала = ДокументыПерерасчеты.ДатаНачала
	|			И ВТДокументыКОбработке.ДатаОкончания = ДокументыПерерасчеты.ДатаОкончания
	|			И ВТДокументыКОбработке.ВидРасчета = ДокументыПерерасчеты.ВидРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НевыходыВОрганизациях.Начисления КАК НевыходыВОрганизацияхНачисления
	|		ПО ВТДокументыКОбработке.Ссылка = НевыходыВОрганизацияхНачисления.Ссылка
	|			И ВТДокументыКОбработке.НомерСтроки = НевыходыВОрганизацияхНачисления.НомерСтроки
	|ГДЕ
	|	ДокументыПерерасчеты.НомерСтроки ЕСТЬ NULL 
	|	И ВТДокументыКОбработке.СторнируемыйДокумент = НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Период";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("Период") Цикл
			
			Пока Выборка.Следующий() Цикл
				
				Если Не ПустаяСтрока(Выборка.Состояние) Тогда
					ЗаполнитьЗначенияСвойств(ДанныеСостояний.Добавить(), Выборка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрацияПростоев.Ссылка КАК Ссылка,
	|	РегистрацияПростоев.ПерерассчитываемыйДокумент
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.РегистрацияПростоевВОрганизациях КАК РегистрацияПростоев
	|ГДЕ
	|	(РегистрацияПростоев.ПериодРегистрации &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	|			ИЛИ РегистрацияПростоев.ДатаОкончания &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных)
	|	И РегистрацияПростоев.Проведен
	|	И НЕ РегистрацияПростоев.НеЦелодневныйПростой
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияПростоев.Сотрудник,
	|	РегистрацияПростоев.ДатаНачала КАК Начало,
	|	РегистрацияПростоев.ДатаОкончания КАК Окончание,
	|	РегистрацияПростоев.Организация,
	|	РегистрацияПростоев.ПериодРегистрации КАК Период,
	|	ВЫБОР
	|		КОГДА РегистрацияПростоев.ВидПростоя = ЗНАЧЕНИЕ(Перечисление.ВидыПростояРаботника.НеПоВинеРаботника)
	|			ТОГДА ""ПростойПоВинеРаботодателя""
	|		ИНАЧЕ ""ПростойНеЗависящийОтРаботодателяИРаботника""
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	ВТДокументыКОбработке КАК ВТДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыКОбработке КАК ДокументыПерерасчеты
	|		ПО ВТДокументыКОбработке.Ссылка = ДокументыПерерасчеты.ПерерассчитываемыйДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистрацияПростоевВОрганизациях КАК РегистрацияПростоев
	|		ПО ВТДокументыКОбработке.Ссылка = РегистрацияПростоев.Ссылка
	|			И ВТДокументыКОбработке.Ссылка = РегистрацияПростоев.Ссылка
	|ГДЕ
	|	ДокументыПерерасчеты.Ссылка ЕСТЬ NULL ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Пока Выборка.СледующийПоЗначениюПоля("Период") Цикл
			
			Пока Выборка.Следующий() Цикл
				
				Если Не ПустаяСтрока(Выборка.Состояние) Тогда
					ЗаполнитьЗначенияСвойств(ДанныеСостояний.Добавить(), Выборка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ДанныеСостояний", ДанныеСостояний);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеСостояний.Организация,
	|	ДанныеСостояний.Период,
	|	ДанныеСостояний.Сотрудник,
	|	ДанныеСостояний.Состояние,
	|	ДанныеСостояний.Начало,
	|	ДанныеСостояний.Окончание
	|ПОМЕСТИТЬ ВТДанныеСостояний
	|ИЗ
	|	&amp;ДанныеСостояний КАК ДанныеСостояний
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСостояний.Организация КАК Организация,
	|	ДанныеСостояний.Период КАК Период,
	|	ДанныеСостояний.Сотрудник,
	|	ДанныеСостояний.Состояние,
	|	ДанныеСостояний.Начало,
	|	ДанныеСостояний.Окончание
	|ИЗ
	|	ВТДанныеСостояний КАК ДанныеСостояний
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСостояний.Окончание,
	|	ДанныеСостояний.Начало,
	|	ДанныеСостояний.Состояние,
	|	ДанныеСостояний.Сотрудник,
	|	ДанныеСостояний.Период,
	|	ДанныеСостояний.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Период";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		ОрганизацияОтбор = Выборка.Организация;
		
		Пока Выборка.СледующийПоЗначениюПоля("Период") Цикл
			
			ДанныеСостояний = Новый ТаблицаЗначений;
			ДанныеСостояний.Колонки.Добавить("Сотрудник");
			ДанныеСостояний.Колонки.Добавить("Состояние");
			ДанныеСостояний.Колонки.Добавить("Начало");
			ДанныеСостояний.Колонки.Добавить("Окончание");
			
			ПериодОтбор = Выборка.Период;
			
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ДанныеСостояний.Добавить(), Выборка);
			КонецЦикла;
			
			ДанныеСостояний.Колонки.Добавить("ДокументОснование");
			
			ВыборкаПоДокументу = Новый Структура;
			ВыборкаПоДокументу.Вставить("Номер",					"ДнСост");
			ВыборкаПоДокументу.Вставить("Организация",				ОрганизацияОтбор);
			ВыборкаПоДокументу.Вставить("ПериодРегистрации",		ПериодОтбор);
			
			ДанныеСостояний.ЗаполнитьЗначения(ВыборкаПоДокументу, "ДокументОснование");
			
			ВыборкаПоДокументу.Вставить("ДанныеСостоянийСотрудников",	ДанныеСостояний);
			
			ВыборкаДанных.Добавить(ВыборкаПоДокументу);
			
		КонецЦикла;
		
	КонецЦикла;
	
Иначе
	
	Отказ = Истина;
	
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>___УчетПособийСоциальногоСтрахования</Код>
				<Наименование>Учет пособий социального страхования</Наименование>
				<Порядок>350</Порядок>
				<Правило Отключить="false">
					<Код>ОтпускПоУходуЗаРебенком</Код>
					<Наименование>Отпуск по уходу за ребенком</Наименование>
					<Порядок>50</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ОтпускПоУходуЗаРебенком_Выбрать);
	Выполнить(Алгоритмы.ОтпускПоУходуЗаРебенком_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>___ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком</Код>
					<Наименование>Изменение условий оплаты отпуска по уходу за ребенком</Наименование>
					<Порядок>100</Порядок>
					<КодПравилаКонвертации>ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком    </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ИзменениеОтпускаПоУходуЗаРебенком_Выбрать);
	Выполнить(Алгоритмы.ИзменениеОтпускаПоУходуЗаРебенком_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>___ВозвратИзОтпускаПоУходуЗаРебенком</Код>
					<Наименование>Возврат из отпуска по уходу за ребенком</Наименование>
					<Порядок>150</Порядок>
					<КодПравилаКонвертации>ВозвратИзОтпускаПоУходуЗаРебенком                 </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ВозвратИзОтпускаПоУходуЗаРебенком_Выбрать);
	Выполнить(Алгоритмы.ВозвратИзОтпускаПоУходуЗаРебенком_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>___УчетСреднегоЗаработка</Код>
				<Наименование>Учет среднего заработка</Наименование>
				<Порядок>350</Порядок>
				<Правило Отключить="false">
					<Код>___ДанныеСтрахователейДляРасчетаСреднегоФСС_ПД</Код>
					<Наименование>Данные страхователей для расчета среднего ФСС</Наименование>
					<Порядок>250</Порядок>
					<КодПравилаКонвертации>ДанныеДляРасчетаСреднегоФСС_ПД                    </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>ВыборкаДанных = Новый Массив;

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Сотрудники_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	СотрудникиОрганизаций.Физлицо КАК Физлицо
|ПОМЕСТИТЬ ВТФизлицаОтбор
|ИЗ
|	ВТСотрудники КАК Сотрудники
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
|		ПО Сотрудники.Сотрудник = СотрудникиОрганизаций.Ссылка
|ГДЕ
|	СотрудникиОрганизаций.ВидДоговора &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
|
|ИНДЕКСИРОВАТЬ ПО
|	Физлицо";
Запрос.Выполнить();


Запрос.Текст =
"ВЫБРАТЬ
|	ЗаработокСотрудниковУДругихСтрахователей.ГоловнаяОрганизация КАК Организация,
|	НАЧАЛОПЕРИОДА(ЗаработокСотрудниковУДругихСтрахователей.Регистратор.Дата, МЕСЯЦ) КАК ПериодРегистрации,
|	ЗаработокСотрудниковУДругихСтрахователей.ФизЛицо КАК ФизическоеЛицо,
|	ЗаработокСотрудниковУДругихСтрахователей.ГоловнаяОрганизация,
|	ЗаработокСотрудниковУДругихСтрахователей.Регистратор.Дата КАК Период,
|	ЗаработокСотрудниковУДругихСтрахователей.РасчетныйГод КАК Год,
|	ЗаработокСотрудниковУДругихСтрахователей.Страхователь,
|	ЗаработокСотрудниковУДругихСтрахователей.Заработок КАК Сумма,
|	ЗаработокСотрудниковУДругихСтрахователей.ДнейБолезниУходаЗаДетьми,
|	ЗаработокСотрудниковУДругихСтрахователей.ПериодРаботыС КАК НачалоПериода,
|	ЗаработокСотрудниковУДругихСтрахователей.ПериодРаботыПо КАК ОкончаниеПериода
|ИЗ
|	РегистрСведений.ЗаработокСотрудниковУДругихСтрахователей КАК ЗаработокСотрудниковУДругихСтрахователей
|ГДЕ
|	ЗаработокСотрудниковУДругихСтрахователей.ФизЛицо В
|			(ВЫБРАТЬ
|				ВТФизлицаОтбор.ФизЛицо
|			ИЗ
|				ВТФизлицаОтбор)
|
|УПОРЯДОЧИТЬ ПО
|	Организация,
|	ПериодРегистрации,
|	ФизическоеЛицо,
|	Период
|ИТОГИ ПО
|	Организация,
|	ПериодРегистрации";
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.Организация;
	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
		ВыборкаДанных.Добавить(Новый Структура("Номер, Организация, ПериодРегистрации, ДанныеСтрахователейДляРасчетаСреднегоЗаработкаФСС",
		"ЗП_СЗФСС", Организация, ДанныеПоПериодуРегистрации.ПериодРегистрации, ДанныеПоПериодуРегистрации.Строки));
	КонецЦикла;
КонецЦикла;

Запрос.Текст =
"УНИЧТОЖИТЬ ВТФизлицаОтбор"; 
Запрос.Выполнить();</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>___СведенияОВремениДляРасчетаСреднегоОбщий</Код>
					<Наименование>СведенияОВремениДляРасчетаСреднегоОбщий</Наименование>
					<Порядок>500</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Выполнить(Алгоритмы.СведенияОВремениДляРасчетаСреднегоОбщий_Выгрузить);</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>___ДанныеОВремениДляРасчетаСреднегоФСС_ПД</Код>
					<Наименование>СведенияОВремениДляРасчетаСреднегоФCC</Наименование>
					<Порядок>600</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Выполнить(Алгоритмы.ДанныеОВремениДляРасчетаСреднегоФСС_Выгрузить);</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>ПлановыеУдержания</Код>
				<Наименование>Плановые удержания</Наименование>
				<Порядок>350</Порядок>
				<Правило Отключить="false">
					<Код>ПлановыеУдержания_ПН</Код>
					<Наименование>Плановые удержания (история)</Наименование>
					<Порядок>350</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.Удержания_Выбрать);
	Выполнить(Алгоритмы.Удержания_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ПлановыеУдержания_НаДату</Код>
					<Наименование>Плановые удержания на дату</Наименование>
					<Порядок>400</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Не Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПлановыеУдержания_Выгрузить);	
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>ОстаткиОтпусков</Код>
				<Наименование>Остатки отпусков</Наименование>
				<Порядок>400</Порядок>
				<Правило Отключить="false">
					<Код>ФактическиеОтпуска_ПД</Код>
					<Наименование>Фактические отпуска</Наименование>
					<Порядок>150</Порядок>
					<КодПравилаКонвертации>ФактическиеОтпуска_ПД                             </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ФактическиеОтпуска_Выбрать);
	Выполнить(Алгоритмы.ФактическиеОтпуска_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>УчетДепонированнойЗарплаты_ПереносНачислений</Код>
				<Наименование>Учет депонированной зарплаты</Наименование>
				<Порядок>400</Порядок>
			</Группа>
			<Группа Отключить="false">
				<Код>ЗаймыСотрудникам</Код>
				<Наименование>Займы сотрудникам</Наименование>
				<Порядок>450</Порядок>
				<Правило Отключить="false">
					<Код>НастройкиЗаймовСотрудникам</Код>
					<Наименование>Настройки займов сотрудникам</Наименование>
					<Порядок>50</Порядок>
					<КодПравилаКонвертации>НастройкиЗаймовСотрудникам                        </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>
Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.НастройкиЗаймовСотрудникам_Выбрать);
	Выполнить(Алгоритмы.НастройкиЗаймовСотрудникам_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ДоговорЗаймаСотруднику</Код>
					<Наименование>Договор займа сотруднику</Наименование>
					<Порядок>100</Порядок>
					<КодПравилаКонвертации>ДоговорЗаймаСотруднику                            </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ДоговорЗаймаСотруднику_Выбрать);
	Выполнить(Алгоритмы.ДоговорЗаймаСотруднику_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ВзаиморасчетыПоЗаймамСотрудникам_ПД</Код>
					<Наименование>Взаиморасчеты по займам сотрудникам</Наименование>
					<Порядок>150</Порядок>
					<КодПравилаКонвертации>ВзаиморасчетыПоЗаймамСотрудникам_ПД               </КодПравилаКонвертации>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ВзаиморасчетыПоЗаймамСотрудникам_Выбрать);
	Выполнить(Алгоритмы.ВзаиморасчетыПоЗаймамСотрудникам_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>ОтражениеЗарплатыВБухучете_ПереносНачислений</Код>
				<Наименование>Отражение зарплаты в бухгалтерском учете</Наименование>
				<Порядок>450</Порядок>
				<Правило Отключить="false">
					<Код>БухучетЗарплатыОрганизаций</Код>
					<Наименование>Учреждения</Наименование>
					<Порядок>50</Порядок>
					<КодПравилаКонвертации>БухучетЗарплатыОрганизаций                        </КодПравилаКонвертации>
					<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
					<ОбъектВыборки>РегистрСведенийЗапись.УчетОсновногоЗаработкаОрганизации</ОбъектВыборки>
					<ПередОбработкойПравила>Если Не Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>РасчетЗарплаты_ПереносНачислений</Код>
				<Наименование>Расчет зарплаты</Наименование>
				<Порядок>500</Порядок>
				<Правило Отключить="false">
					<Код>ФактическиеНачисленияУдержания_ПД</Код>
					<Наименование>Фактические начисления и удержания</Наименование>
					<Порядок>400</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ФактическиеНачисленияУдержания_Выгрузить);
Иначе
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>УчетНачисленнойЗарплаты_ПереносНачислений</Код>
				<Наименование>Учет начисленной зарплаты</Наименование>
				<Порядок>550</Порядок>
				<Правило Отключить="false">
					<Код>НачисленияУдержанияПоСотрудникамАвансом_ПД</Код>
					<Наименование>Начисления и удержания по сотрудникам авансом</Наименование>
					<Порядок>50</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.НачисленияУдержанияПоСотрудникамАвансом_Выбрать);
	Выполнить(Алгоритмы.НачисленияУдержанияПоСотрудникам_Преобразовать);
Иначе
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ОтработанноеВремяПоСотрудникамАвансом_ПД</Код>
					<Наименование>Отработанное время по сотрудникам авансом</Наименование>
					<Порядок>100</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ОтработанноеВремяПоСотрудникамАвансом_Выбрать);
	Выполнить(Алгоритмы.ОтработанноеВремяПоСотрудникам_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>НачисленияУдержанияПоСотрудникам_ПД</Код>
					<Наименование>Начисления удержания по сотрудникам</Наименование>
					<Порядок>150</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.НачисленияУдержанияПоСотрудникам_Выбрать);
	Выполнить(Алгоритмы.НачисленияУдержанияПоСотрудникам_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ОтработанноеВремяПоСотрудникам_ПД</Код>
					<Наименование>Отработанное время по сотрудникам</Наименование>
					<Порядок>200</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ОтработанноеВремяПоСотрудникам_Выбрать);
	Выполнить(Алгоритмы.ОтработанноеВремяПоСотрудникам_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Правило Отключить="false">
				<Код>НачисленияУдержания_ПН</Код>
				<Наименование>Начисления и удержания</Наименование>
				<Порядок>850</Порядок>
				<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
				<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.НачисленияУдержания_Выбрать);
	Выполнить(Алгоритмы.НачисленияУдержания_Преобразовать);
	Выполнить(Алгоритмы.НачисленияУдержания_ВыгрузитьПоПравилу);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
			</Правило>
			<Группа Отключить="false">
				<Код>___ВзаиморасчетыССотрудниками</Код>
				<Наименование>ВзаиморасчетыССотрудниками                     </Наименование>
				<Порядок>900</Порядок>
				<Правило Отключить="false">
					<Код>___ЗарплатаКВыплатеАвансом_ПД</Код>
					<Наименование>Зарплата к выплате авансом</Наименование>
					<Порядок>100</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ЗарплатаКВыплатеАвансом_Выбрать);
	Выполнить(Алгоритмы.ЗарплатаКВыплате_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>ЗарплатаКВыплате_ПД</Код>
					<Наименование>Зарплата к выплате</Наименование>
					<Порядок>150</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ЗарплатаКВыплате_Выбрать);
	Выполнить(Алгоритмы.ЗарплатаКВыплате_Преобразовать);
Иначе	
	Отказ = Истина;
КонецЕсли;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>___УчетНДФЛ</Код>
				<Наименование>Учет НДФЛ</Наименование>
				<Порядок>950</Порядок>
				<Правило Отключить="false">
					<Код>ИсчисленныйНДФЛ_ПД</Код>
					<Наименование>Исчисленный НДФЛ                                   </Наименование>
					<Порядок>350</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
	ДатаНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
Иначе
	ДатаНачалаПереноса = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	ДатаОкончания = НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1));
КонецЕсли;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

ТекстЗапроса = 
"ВЫБРАТЬ
|	ИсчисленныйНДФЛ.Период КАК Период,
|	ИсчисленныйНДФЛ.Организация КАК Организация,
|	ВЫРАЗИТЬ(ИсчисленныйНДФЛ.Сотрудник КАК Справочник.СотрудникиОрганизаций).Физлицо КАК ФизическоеЛицо,
|	ИсчисленныйНДФЛ.НалоговыйПериод,
|	ИсчисленныйНДФЛ.ДоходНДФЛ КАК КодДохода,
|	ИсчисленныйНДФЛ.Налог,
|	ИсчисленныйНДФЛ.Доход,
|	ИсчисленныйНДФЛ.Льгота,
|	ИсчисленныйНДФЛ.КоличествоЛьгот,
|	ИсчисленныйНДФЛ.ВидСтавки,
|	ИсчисленныйНДФЛ.УвеличеннаяСтавка,
|	ИсчисленныйНДФЛ.ДоходПолный
|ИЗ
|	РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК ИсчисленныйНДФЛ
|ГДЕ
|	ИсчисленныйНДФЛ.Сотрудник В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				Сотрудники.Сотрудник
|			ИЗ
|				ВТСотрудники КАК Сотрудники)
|	И НАЧАЛОПЕРИОДА(ИсчисленныйНДФЛ.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
|	И ИсчисленныйНДФЛ.Сотрудник ССЫЛКА Справочник.СотрудникиОрганизаций
|	И ИсчисленныйНДФЛ.ВидДвижения = &amp;ВидДвиженияПриход
|
|УПОРЯДОЧИТЬ ПО
|	Организация,
|	ФизическоеЛицо";

ДатаПереноса = ДатаНачалаПереноса;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",				ВидДвиженияНакопления.Приход);
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		Организация = Выборка.Организация;
		
		ВыборкаПоДокументу = Новый Структура;
		
		ВыборкаПоДокументу.Вставить("Номер",			 "НДФЛИсч");
		ВыборкаПоДокументу.Вставить("Организация",		 Организация);
		ВыборкаПоДокументу.Вставить("ПериодРегистрации", ДатаПереноса);
		
		Таб = Новый ТаблицаЗначений;
		Таб.Колонки.Добавить("Период");
		Таб.Колонки.Добавить("Организация");
		Таб.Колонки.Добавить("ФизическоеЛицо");
		Таб.Колонки.Добавить("НалоговыйПериод");
		Таб.Колонки.Добавить("КодДохода");
		Таб.Колонки.Добавить("Налог");
		Таб.Колонки.Добавить("Доход");
		Таб.Колонки.Добавить("Льгота");
		Таб.Колонки.Добавить("КоличествоЛьгот");
		Таб.Колонки.Добавить("ВидСтавки");
		Таб.Колонки.Добавить("УвеличеннаяСтавка");
		Таб.Колонки.Добавить("ДоходПолный");
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = Таб.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			НоваяСтрока.Период = НачалоДня(Выборка.Период); 		
			
		КонецЦикла;
		
		ВыборкаПоДокументу.Вставить("ИсчисленныйНДФЛ", Таб);
		
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ИсчисленныйНДФЛ_ПД");
		
	КонецЦикла;
	
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</ПередОбработкойПравила>
				</Правило>
			</Группа>
			<Группа Отключить="false">
				<Код>__УчетСтраховыхВзносов</Код>
				<Наименование>Учет страховых взносов</Наименование>
				<Порядок>1000</Порядок>
				<Правило Отключить="false">
					<Код>___СведенияОДоходахСтраховыеВзносы_ПД</Код>
					<Наименование>Сведения о доходах страховые взносы</Наименование>
					<Порядок>300</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Выполнить(Алгоритмы.СтраховыеВзносыСведенияОДоходах_Выбрать);
Выполнить(Алгоритмы.СтраховыеВзносыСведенияОДоходах_Преобразовать);</ПередОбработкойПравила>
				</Правило>
				<Правило Отключить="false">
					<Код>___ИсчисленныеСтраховыеВзносы_ПД</Код>
					<Наименование>Исчисленные страховые взносы</Наименование>
					<Порядок>350</Порядок>
					<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
					<ПередОбработкойПравила>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ДатаОкончания = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПолучитьДатуОкончанияПоРегиструОсновныеНачисления", Параметры.Алгоритмы, Параметры);
	ДатаНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
Иначе
	ДатаНачалаПереноса = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	ДатаОкончания = НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1));
КонецЕсли;

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = 
"ВЫБРАТЬ
|	СтраховыеВзносыИсчисленные.Период,
|	СтраховыеВзносыИсчисленные.ФизЛицо КАК ФизическоеЛицо,
|	СтраховыеВзносыИсчисленные.Организация КАК ГоловнаяОрганизация,
|	СтраховыеВзносыИсчисленные.ОбособленноеПодразделение КАК Организация,
|	СтраховыеВзносыИсчисленные.ДатаПолученияДохода,
|	СтраховыеВзносыИсчисленные.ОснованиеДляДоначисления,
|	0 КАК ПФРДоПредельнойВеличины,
|	0 КАК ПФРДоПредельнойВеличиныЕНВД,
|	0 КАК ПФРСПревышения,
|	0 КАК ПФРСПревышенияЕНВД,
|	СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу,
|	СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД,
|	СтраховыеВзносыИсчисленные.ПФРСтраховая,
|	СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД,
|	СтраховыеВзносыИсчисленные.ПФРНакопительная,
|	СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД,
|	СтраховыеВзносыИсчисленные.ФСС,
|	СтраховыеВзносыИсчисленные.ФССЕНВД,
|	СтраховыеВзносыИсчисленные.ФФОМС,
|	СтраховыеВзносыИсчисленные.ФФОМСЕНВД,
|	СтраховыеВзносыИсчисленные.ТФОМС,
|	СтраховыеВзносыИсчисленные.ТФОМСЕНВД,
|	СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи,
|	СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу КАК ПФРНаДоплатуЛетчикам,
|	СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам КАК ПФРНаДоплатуШахтерам,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
|	СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
|	СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуСПревышения,
|	СтраховыеВзносыИсчисленные.ПФРСтраховаяСПревышения
|ИЗ
|	РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
|ГДЕ
|	СтраховыеВзносыИсчисленные.ФизЛицо В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ФизическиеЛица.Физлицо
|			ИЗ
|				ВТФизическиеЛица КАК ФизическиеЛица)
|	И НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
|
|УПОРЯДОЧИТЬ ПО
|	Организация";

ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("СтраховыеВзносыИсчисленные");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");

ДатаПереноса = ДатаНачалаПереноса;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
		
		ВыборкаДокумента = Новый Структура;
		ВыборкаДокумента.Вставить("Номер", "СВ");
		ВыборкаДокумента.Вставить("Организация", Выборка.Организация);
		ВыборкаДокумента.Вставить("ПериодРегистрации", ДатаПереноса);
		
		ИсчисленныеСтраховыеВзносы = Новый ТаблицаЗначений;
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ФизическоеЛицо");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ГоловнаяОрганизация");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("Организация");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("Период");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ДатаПолученияДохода");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ОснованиеДляДоначисления");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРДоПредельнойВеличины");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРДоПредельнойВеличиныЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРСПревышения");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРСПревышенияЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРПоСуммарномуТарифу");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРПоСуммарномуТарифуЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРСтраховая");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРСтраховаяЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРНакопительная");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРНакопительнаяЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ФСС");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ФССЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ФФОМС");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ФФОМСЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ТФОМС");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ТФОМСЕНВД");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ФССНесчастныеСлучаи");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРНаДоплатуЛетчикам");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРНаДоплатуШахтерам");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботах");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРПоСуммарномуТарифуСПревышения");
		ИсчисленныеСтраховыеВзносы.Колонки.Добавить("ПФРСтраховаяСПревышения");
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ИсчисленныеСтраховыеВзносы.Добавить(), Выборка);
		КонецЦикла;
		
		ВыборкаДокумента.Вставить("ИсчисленныеСтраховыеВзносы", ИсчисленныеСтраховыеВзносы);
		
		ВыгрузитьПоПравилу(ВыборкаДокумента, , , , "ИсчисленныеСтраховыеВзносы_ПД");
		
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</ПередОбработкойПравила>
				</Правило>
			</Группа>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Группа Имя="АлгоритмыВыборки">
			<Алгоритм Имя="Валюта_ПоУмолчанию" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы	= ВидСубконто;

Субконто = Константы.ВалютаРегламентированногоУчета.Получить();</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВзаиморасчетыПоЗаймамСотрудникам_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("ПогашениеЗаймовРаботникамиОрганизаций");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");

Выполнить(Алгоритмы.ДоговорыЗайма_ВременнаяТаблица);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ДоговорыЗайма_ВременнаяТаблица;

Запрос.Текст = Запросы.ПогашениеЗаймовРаботникамиОрганизаций_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
		НоваяСтрока = ИсходящиеДанные.Добавить();
		НоваяСтрока.Организация								= Организация;
		НоваяСтрока.ПериодРегистрации						= ДанныеПоПериодуРегистрации.ПериодОтбор;
		НоваяСтрока.ПогашениеЗаймовРаботникамиОрганизаций	= ДанныеПоПериодуРегистрации.Строки;
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВидДвиженияНакопления" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы	= ВидСубконто;
ВидДвижения	= ИсходящиеДанные;

Субконто	= ВидДвиженияНакопления[ВидДвижения];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВидРасчета_ПроизвольнаяФормула_Заполнить" ИспользуетсяПриЗагрузке="false">
				<Текст>ВходящиеДанные.ФормулаРасчета = ПроведениеРасчетов.ПолучитьHTLMКодФормулыРасчета(Источник.ФормулаРасчета, Источник.Показатели, "Текст", Истина);
ВходящиеДанные.ФормулаРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Формула_Преобразовать", Алгоритмы, ВходящиеДанные.ФормулаРасчета);

ЗапрашиваемыеПоказатели = Новый Массив;

ВидРасчетаЯвляетсяОсновным = ТипЗнч(Источник) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций") И Источник.ВидВремени = Перечисления.ВидыВремени.ОтработанноеВПределахНормы;

Идентификатор = "";
СтрНаименование = " для " + Источник.Наименование;
Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
Для Каждого СтрокаПоказателя Из Источник.Показатели Цикл
	Если СтрокаПоказателя.Показатель.ВидПоказателя &lt;&gt; Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный Тогда
		Продолжить;
	КонецЕсли;
	Если СтрокаПоказателя.ЗапрашиватьПриКадровыхПеремещениях И Не СтрокаПоказателя.Показатель.Предопределенный Или ВидРасчетаЯвляетсяОсновным И СтрокаПоказателя.Показатель.ТарифнаяСтавка Тогда
		Если ЗапрашиваемыеПоказатели.Найти(СтрокаПоказателя.Показатель.Идентификатор) = Неопределено Тогда
			ЗапрашиваемыеПоказатели.Добавить(СтрокаПоказателя.Показатель.Идентификатор);
		КонецЕсли;
	КонецЕсли;
	Если Не СтрокаПоказателя.Показатель.Предопределенный Тогда
		ВходящиеДанные.ФормулаРасчета = СтрЗаменить(ВходящиеДанные.ФормулаРасчета, СтрокаПоказателя.Показатель.Идентификатор, СтрокаПоказателя.Показатель.Идентификатор + Идентификатор);
	КонецЕсли;
КонецЦикла;

ВходящиеДанные.ЗапрашиваемыеПоказатели = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ЗапрашиваемыеПоказатели);
ВходящиеДанные.ЗапрашиваемыеПоказатели = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ИдентификаторПоказателя_Преобразовать", Алгоритмы, ВходящиеДанные.ЗапрашиваемыеПоказатели);</Текст>
				<Параметры>Источник, ВходящиеДанные</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВозвратИзОтпускаПоУходуЗаРебенком_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Сотрудники_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.РаботникиОрганизаций_Выборка.Текст;
ИсходящиеДанные.Вставить("РаботникиОрганизаций",	Запрос.Выполнить().Выгрузить());

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Период");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВоинскийУчетФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ВоинскийУчетФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ВоинскийУчетФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВременноПребывающие_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.ВременноПребывающие_Выборка.Текст;

ИсходящиеДанные.Вставить("ВременноПребывающие",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГоловнаяОрганизация" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы	= ВидСубконто;
Организация	= ИсходящиеДанные;

Субконто	= ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация);</Текст>
				<Параметры>Организация</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГПХ_ВидАвторскогоДоговора" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы			= ВидСубконто;
ДокументОснование	= ИсходящиеДанные;

Субконто = "";

Если ЗначениеЗаполнено(ДокументОснование.ВидРасчета) Тогда
	Субконто = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование.ВидРасчета, "КодДоходаНДФЛ");
КонецЕсли;</Текст>
				<Параметры>ДокументОснование</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГПХ_КодВычета" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы			= ВидСубконто;
ДокументОснование	= ИсходящиеДанные;

Субконто		= ДокументОснование.КодВычета;</Текст>
				<Параметры>ДокументОснование</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГПХ_Подразделение" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы			= ВидСубконто;
ДокументОснование	= ИсходящиеДанные;

Субконто	= ДокументОснование.ПодразделениеОрганизации;</Текст>
				<Параметры>ДокументОснование</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГПХ_СпособОтраженияЗарплатыВБухучете" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы			= ВидСубконто;
ДокументОснование	= ИсходящиеДанные;

Субконто		= ДокументОснование.СпособОтраженияВБухучете;</Текст>
				<Параметры>ДокументОснование</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГПХ_Студент" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы			= ВидСубконто;
ДокументОснование	= ИсходящиеДанные;

Субконто		= ДокументОснование.ЗаключенСоСтудентомРаботающимВСтудотряде;</Текст>
				<Параметры>ДокументОснование</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГражданствоФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ГражданствоФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ГражданствоФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГрафикРаботыПоВидамВремени_ВидУчетаВремени" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ВидыУчетаВремени[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДлинаСуток" ИспользуетсяПриЗагрузке="false">
				<Текст>ДлинаСуток = 86400;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ДоговорЗаймаСотруднику_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Выполнить(Алгоритмы.ДоговорыЗайма_ВременнаяТаблица);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ДоговорыЗайма_ВременнаяТаблица;

Запрос.Текст = Запросы.СведенияОЗаймах_Выборка.Текст;

ИсходящиеДанные.Вставить("СведенияОЗаймах",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДоговорНаВыполнениеРаботСФЛ_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.ПлановыеНачисленияПоДоговорам_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДоговорыЗайма_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
				<Текст>
ПринудительноОбновитьВременнуюТаблицу	= 0;

ДоговорыЗайма_ВременнаяТаблица = Неопределено;
Если ЗначениеЗаполнено(ПринудительноОбновитьВременнуюТаблицу) = 0 Тогда
	Параметры.ВременноеХранилище.Свойство("ДоговорыЗайма_ВременнаяТаблица", ДоговорыЗайма_ВременнаяТаблица);
КонецЕсли;

Если ДоговорыЗайма_ВременнаяТаблица = Неопределено Тогда
	Запрос = Новый Запрос;
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;
	
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
	Запрос.УстановитьПараметр("Сотрудник",							Параметры.СотрудникДляОтладки);
	Запрос.УстановитьПараметр("ПоВсемСотрудникам",					Параметры.СотрудникДляОтладки.Пустая());
	
	Запрос.Текст = Запросы.ДоговорыЗайма_ВременнаяТаблица.Текст;
	Запрос.Выполнить();
	
	ДоговорыЗайма_ВременнаяТаблица = Запрос.МенеджерВременныхТаблиц;
	
	Параметры.ВременноеХранилище.Вставить("ДоговорыЗайма_ВременнаяТаблица", ДоговорыЗайма_ВременнаяТаблица);
КонецЕсли;</Текст>
				<Параметры>ПринудительноОбновитьВременнуюТаблицу</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДокументыФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ДокументыФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ДокументыФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнитьОрганизацииТолькоСсылка" ИспользуетсяПриЗагрузке="false">
				<Текст>
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	Организации.Ссылка КАК Ссылка,
|	Организации.Наименование,
|	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ
|ИЗ
|	Справочник.Организации КАК Организации
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних КАК КодыОрганизацииСрезПоследних
|		ПО Организации.Ссылка = КодыОрганизацииСрезПоследних.Организация";

Выборка = Запрос.Выполнить().Выбрать();

ОрганизацииТолькоСсылка = Новый Соответствие;

Пока Выборка.Следующий() Цикл
	
	СтруктураОрганизацияСсылка = Новый Структура("Наименование, КодПоЕДРПОУ", Выборка.Наименование, Выборка.КодПоЕДРПОУ);
	ОрганизацииТолькоСсылка.Вставить(Выборка.Ссылка, СтруктураОрганизацияСсылка);
	
КонецЦикла;
	
Параметры.ВременноеХранилище.Вставить("ОрганизацииТолькоСсылка", ОрганизацииТолькоСсылка);</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗарплатаКВыплате_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПервичныеДанные = Новый ТаблицаЗначений;
ПервичныеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ПервичныеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ПервичныеДанные.Колонки.Добавить("ОсновныеНачисления");
//ПервичныеДанные.Колонки.Добавить("ДополнительныеНачисления");
ПервичныеДанные.Колонки.Добавить("НДФЛРасчетыСБюджетом");
ПервичныеДанные.Колонки.Добавить("ЗарплатаЗаМесяцОрганизаций");
//ПервичныеДанные.Колонки.Добавить("НДФЛКЗачету");
ПервичныеДанные.Колонки.Добавить("НеОчищатьДокумент");
ПервичныеДанные.Колонки.Добавить("Авансом");

ФизическиеЛицаСБазой	= Новый Массив;
ФизическиеЛицаБезБазы	= Новый Массив;

ДатаОкончания = Неопределено;
Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ПервичныеДанные.Добавить();
			НоваяСтрока.Авансом						= 0;
			НоваяСтрока.Организация					= Организация;
			НоваяСтрока.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
			//НоваяСтрока.ДополнительныеНачисления	= Новый ТаблицаЗначений;
			НоваяСтрока.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
			НоваяСтрока.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
			//НоваяСтрока.НДФЛКЗачету					= Новый ТаблицаЗначений;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаСБазой, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
		КонецЦикла;
	КонецЦикла;
	
	//Запрос.Текст = Запросы.ДопНачисленияРаботниковОрганизаций_Выборка.Текст;
	//ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Отбор = Новый Структура("Организация, ПериодРегистрации");
	//Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	//	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	//	Отбор.Организация = Организация;
	//	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
	//		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
	//		Строки = ПервичныеДанные.НайтиСтроки(Отбор);
	//		Если Строки.Количество() &gt; 0 Тогда
	//			СтрокаРезультатов = Строки[0];
	//		Иначе
	//			СтрокаРезультатов = ПервичныеДанные.Добавить();
	//			СтрокаРезультатов.Авансом						= 0;
	//			СтрокаРезультатов.Организация					= Организация;
	//			СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
	//			СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
	//		КонецЕсли;
	//		СтрокаРезультатов.ДополнительныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
	//		
	//		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаСБазой, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
	//	КонецЦикла;
	//КонецЦикла;
	
	Запрос.Текст = Запросы.НДФЛРасчетыСБюджетом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом						= 0;
				СтрокаРезультатов.Организация					= Организация;
				СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
				//СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
				//СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.НДФЛРасчетыСБюджетом				= ДанныеПоПериодуРегистрации.Строки;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаСБазой, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.ЗарплатаЗаМесяцОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом						= 0;
				СтрокаРезультатов.Организация					= Организация;
				СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
				//СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
				//СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций		= ДанныеПоПериодуРегистрации.Строки;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаБезБазы, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
		КонецЦикла;
	КонецЦикла;
	
	//Запрос.Текст = Запросы.НДФЛКЗачету_Выборка.Текст;
	//ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Отбор = Новый Структура("Организация, ПериодРегистрации");
	//Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	//	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	//	Отбор.Организация = Организация;
	//	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
	//		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
	//		Строки = ПервичныеДанные.НайтиСтроки(Отбор);
	//		Если Строки.Количество() &gt; 0 Тогда
	//			СтрокаРезультатов = Строки[0];
	//		Иначе
	//			СтрокаРезультатов = ПервичныеДанные.Добавить();
	//			СтрокаРезультатов.Авансом						= 0;
	//			СтрокаРезультатов.Организация					= Организация;
	//			СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
	//			СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
	//		КонецЕсли;
	//		СтрокаРезультатов.НДФЛКЗачету						= ДанныеПоПериодуРегистрации.Строки;
	//		
	//		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаБезБазы, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
	//	КонецЦикла;
	//КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;


ОбщегоНазначенияКлиентСервер.СократитьМассив(ФизическиеЛицаБезБазы, ФизическиеЛицаСБазой);
Запрос = Новый Запрос;
Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
Запрос.УстановитьПараметр("МассивФизическихЛиц",				ФизическиеЛицаБезБазы);
Запрос.Текст = Запросы.СотрудникиФизическихЛиц_Выборка.Текст;
ФизическиеЛицаБезБазы = Запрос.Выполнить().Выгрузить();

ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("ФизическиеЛицаБезБазы",	ФизическиеЛицаБезБазы);
ИсходящиеДанные.Вставить("ПервичныеДанные",			ПервичныеДанные);
ИсходящиеДанные.Вставить("ИмяПКО",			        "ЗарплатаКВыплате_ПД");</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗарплатаКВыплате_ХарактерВыплаты" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ХарактерВыплатыЗарплаты[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗарплатаКВыплатеАвансом_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПервичныеДанные = Новый ТаблицаЗначений;
ПервичныеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ПервичныеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ПервичныеДанные.Колонки.Добавить("ОсновныеНачисления");
//ПервичныеДанные.Колонки.Добавить("ДополнительныеНачисления");
ПервичныеДанные.Колонки.Добавить("НДФЛРасчетыСБюджетом");
ПервичныеДанные.Колонки.Добавить("ЗарплатаЗаМесяцОрганизаций");
//ПервичныеДанные.Колонки.Добавить("НДФЛКЗачету");
ПервичныеДанные.Колонки.Добавить("НеОчищатьДокумент");
ПервичныеДанные.Колонки.Добавить("Авансом");

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

ДатаОкончания = Неопределено;
Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизацийАвансом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ПервичныеДанные.Добавить();
			НоваяСтрока.Авансом						= 1;
			НоваяСтрока.Организация					= Организация;
			НоваяСтрока.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
			НоваяСтрока.ДополнительныеНачисления	= Новый ТаблицаЗначений;
			НоваяСтрока.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
			НоваяСтрока.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
			НоваяСтрока.НДФЛКЗачету					= Новый ТаблицаЗначений;
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.ДопНачисленияРаботниковОрганизацийАвансом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом						= 1;
				СтрокаРезультатов.Организация					= Организация;
				СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.ДополнительныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.НДФЛРасчетыСБюджетом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом						= 1;
				СтрокаРезультатов.Организация					= Организация;
				СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.НДФЛРасчетыСБюджетом				= ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.ЗарплатаЗаМесяцОрганизацийАвансом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом						= 1;
				СтрокаРезультатов.Организация					= Организация;
				СтрокаРезультатов.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ДополнительныеНачисления		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом			= Новый ТаблицаЗначений;
				СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций	= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛКЗачету					= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.ЗарплатаЗаМесяцОрганизаций		= ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;

ФизическиеЛицаБезБазы = Новый ТаблицаЗначений;
ФизическиеЛицаБезБазы.Колонки.Добавить("Сотрудник");
ФизическиеЛицаБезБазы.Колонки.Добавить("Подразделение");
ФизическиеЛицаБезБазы.Колонки.Добавить("ФизическоеЛицо");

ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("ФизическиеЛицаБезБазы",	ФизическиеЛицаБезБазы);
ИсходящиеДанные.Вставить("ПервичныеДанные",			ПервичныеДанные);
ИсходящиеДанные.Вставить("ИмяПКО",			        "ЗарплатаКВыплатеАвансом_ПД");</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗнаниеЯзыковФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ЗнаниеЯзыковФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ЗнаниеЯзыковФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ИзменениеОплатыТруда_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.Сотрудники_Выборка.Текст;
ИсходящиеДанные.Вставить("Сотрудники",	Запрос.Выполнить().Выгрузить());

Запрос.Текст = Запросы.РаботникиОрганизаций_Выборка.Текст;
РаботникиОрганизаций = Запрос.Выполнить().Выгрузить();
РаботникиОрганизаций.Индексы.Добавить("Сотрудник");
ИсходящиеДанные.Вставить("РаботникиОрганизаций",	РаботникиОрганизаций);

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);

Запрос.Текст = Запросы.ЕжегодныеОтпускаОбщие_Выборка.Текст;
ИсходящиеДанные.Вставить("ЕжегодныеОтпускаОбщие",	Запрос.Выполнить().Выгрузить());

//Запрос.Текст = Запросы.ЕжегодныеОтпускаДолжностей_Выборка.Текст;
//ВыборкаПоОтпускам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
//ЕжегодныеОтпускаДолжностей = Новый Соответствие;
//Для Каждого ЭлементВыборки Из ВыборкаПоОтпускам.Строки Цикл
//	ЕжегодныеОтпускаДолжностей.Вставить(ЭлементВыборки.Должность, ЭлементВыборки.Строки);
//КонецЦикла;
//ИсходящиеДанные.Вставить("ЕжегодныеОтпускаДолжностей",	ЕжегодныеОтпускаДолжностей);

Запрос.Текст = Запросы.ЕжегодныеОтпускаСотрудников_Выборка.Текст;
ВыборкаПоОтпускам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
ЕжегодныеОтпускаСотрудников = Новый Соответствие;
Для Каждого ЭлементВыборки Из ВыборкаПоОтпускам.Строки Цикл
	ЕжегодныеОтпускаСотрудников.Вставить(ЭлементВыборки.Сотрудник, ЭлементВыборки.Строки);
КонецЦикла;
ИсходящиеДанные.Вставить("ЕжегодныеОтпускаСотрудников",	ЕжегодныеОтпускаСотрудников);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ИзменениеОтпускаПоУходуЗаРебенком_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Сотрудники_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Период");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="КадровыйПеревод_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.РаботникиОрганизаций_Выборка.Текст;
ИсходящиеДанные.Вставить("РаботникиОрганизаций",	Запрос.Выполнить().Выгрузить());

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);

Запрос.Текст = Запросы.ЕжегодныеОтпускаОбщие_Выборка.Текст;
ИсходящиеДанные.Вставить("ЕжегодныеОтпускаОбщие",	Запрос.Выполнить().Выгрузить());

//Запрос.Текст = Запросы.ЕжегодныеОтпускаДолжностей_Выборка.Текст;
//ВыборкаПоОтпускам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
//ЕжегодныеОтпускаДолжностей = Новый Соответствие;
//Для Каждого ЭлементВыборки Из ВыборкаПоОтпускам.Строки Цикл
//	ЕжегодныеОтпускаДолжностей.Вставить(ЭлементВыборки.Должность, ЭлементВыборки.Строки);
//КонецЦикла;
//ИсходящиеДанные.Вставить("ЕжегодныеОтпускаДолжностей",	ЕжегодныеОтпускаДолжностей);

Запрос.Текст = Запросы.ЕжегодныеОтпускаСотрудников_Выборка.Текст;
ВыборкаПоОтпускам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
ЕжегодныеОтпускаСотрудников = Новый Соответствие;
Для Каждого ЭлементВыборки Из ВыборкаПоОтпускам.Строки Цикл
	ЕжегодныеОтпускаСотрудников.Вставить(ЭлементВыборки.Сотрудник, ЭлементВыборки.Строки);
КонецЦикла;
ИсходящиеДанные.Вставить("ЕжегодныеОтпускаСотрудников",	ЕжегодныеОтпускаСотрудников);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="МестаВыплатыЗарплатыСотрудников_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.МестаВыплатыЗарплатыСотрудников_Выборка.Текст;

ИсходящиеДанные.Вставить("МестаВыплатыЗарплатыСотрудников",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НаградыФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.НаградыФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("НаградыФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НастройкиВоинскогоУчета_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>НастройкиВоинскогоУчета = Новый Структура("ИспользоватьВоинскийУчет");

Запрос = Новый Запрос;
Запрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	ВоинскийУчет.Физлицо
|ИЗ
|	РегистрСведений.ВоинскийУчет КАК ВоинскийУчет";

НастройкиВоинскогоУчета.ИспользоватьВоинскийУчет = Не Запрос.Выполнить().Пустой();

ИсходящиеДанные = НастройкиВоинскогоУчета;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НастройкиЗаймовСотрудникам_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = Новый Массив;

НастройкиЗаймовСотрудникам = Новый Структура("ИспользоватьЗаймыСотрудникам");

Запрос = Новый Запрос;
Запрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	ДоговорЗайма.ФизЛицо
|ИЗ
|	Документ.ДоговорЗаймаСРаботником КАК ДоговорЗайма";

НастройкиЗаймовСотрудникам.ИспользоватьЗаймыСотрудникам = Не Запрос.Выполнить().Пустой();

ИсходящиеДанные = НастройкиЗаймовСотрудникам;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_ВидДействия" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ВидыДействияСНачислением[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_ВидПВРНовый" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы			= ВидСубконто;
//НачислениеУдержание	= ИсходящиеДанные;

Если ТипЗнч(НачислениеУдержание) = Тип("Строка") Тогда
	ВидПВР		= "ОсобыеНачисленияИУдержания";	
	
ИначеЕсли (НачислениеУдержание.Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодряда)
Или (НачислениеУдержание.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
Или (НачислениеУдержание.Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодрядаСПД)
Или (НачислениеУдержание.Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПриРожденииРебенка) Тогда
	ВидПВР		= "ОсобыеНачисленияИУдержания";
	
ИначеЕсли ТипЗнч(НачислениеУдержание.Ссылка) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций") Тогда
	ВидПВР		= "ОсновныеНачисления";
	
//ИначеЕсли ТипЗнч(НачислениеУдержание.Ссылка) = Тип("ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций") Тогда
//	ВидПВР		= "ДополнительныеНачисления";
	
ИначеЕсли ТипЗнч(НачислениеУдержание.Ссылка) = Тип("ПланВидовРасчетаСсылка.УдержанияОрганизаций") Тогда
	ВидПВР		= "Удержания";
	
Иначе
	ВидПВР		= "ОсобыеНачисленияИУдержания";
	
КонецЕсли;</Текст>
				<Параметры>НачислениеУдержание</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_ВидПособия" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ВидыПособийСоциальногоСтрахования[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_ВидПремии" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ВидыПремии[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_КодДоходаНДФЛ" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Справочники.ДоходыНДФЛ["Код"+Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_ОбозначениеВТабеле" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Справочники.КлассификаторИспользованияРабочегоВремени[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = Новый Структура;
СЗ.Вставить("Код", "");
СЗ.Вставить("Наименование", "");
СЗ.Вставить("КатегорияРасчета", "");
СЗ.Вставить("СпособРасчета", "");
СЗ.Вставить("ПроизвольнаяФормулаРасчета", 0);
СЗ.Вставить("ФормулаРасчета", "");
СЗ.Вставить("СтратегияОтраженияВУчете", "");
СЗ.Вставить("СтатьяФинансирования", "");
СЗ.Вставить("ВедущиеВидыРасчета", "");
СЗ.Вставить("БазовыеВидыРасчета", "");
СЗ.Вставить("Рассчитывается", 0);  

// Все начисления
СЗ.Вставить("СпособОтраженияВБухучете", "");
СЗ.Вставить("СтатьяРасходов", "");
//СЗ.Вставить("КОСГУ", "");
//СЗ.Вставить("ОтнесениеРасходовКДеятельностиЕНВД", "");
СЗ.Вставить("ЯвляетсяДоходомВНатуральнойФорме", 0);
СЗ.Вставить("ОтношениеКДенежномуСодержанию", "");
СЗ.Вставить("КодДоходаНДФЛ", "");
//СЗ.Вставить("КодДоходаЕСН", "");
//СЗ.Вставить("КодДоходаФСС_НС", "");
//СЗ.Вставить("КодДоходаСтраховыеВзносы", "");
//СЗ.Вставить("ВидНачисленияПоСт255НК", "");
СЗ.Вставить("ВидПособияСоциальногоСтрахования", "");
СЗ.Вставить("БазовыйПериодПрошлыйМесяц", 0);
СЗ.Вставить("ПериодДействияБазовый", "");
СЗ.Вставить("СреднийЗаработокОбщий", "");


// Основные начисления
СЗ.Вставить("ЗачетОтработанногоВремени", 0);
СЗ.Вставить("ЗачетНормыВремени", 0);
СЗ.Вставить("ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка", "");
СЗ.Вставить("ПериодРасчетаСреднегоЗаработка", "");
СЗ.Вставить("ВидСтажа", "");
СЗ.Вставить("КоэффициентСтажа", "");
СЗ.Вставить("ТребуетВводаТарифногоРазряда", 0);
СЗ.Вставить("ВидВремени", "");
СЗ.Вставить("ОбозначениеВТабелеУчетаРабочегоВремени", "");
СЗ.Вставить("ВидОтпуска", "");
//СЗ.Вставить("ВидСтажаСЗВ4", "");

// Дополнительные начисления
СЗ.Вставить("ВидПремии", "");
СЗ.Вставить("ЧислоМесяцев", 0);

// Удержания
СЗ.Вставить("ЯвляетсяДСВ", 0);
СЗ.Вставить("ЯвляетсяПрофвзносом", 0);

// Показатели
СЗ.Вставить("Показатели", "");
СЗ.Вставить("Показатель1", "");
СЗ.Вставить("Показатель1Запрашивать", "");
СЗ.Вставить("Показатель2", "");
СЗ.Вставить("Показатель2Запрашивать", "");
СЗ.Вставить("Показатель3", "");
СЗ.Вставить("Показатель3Запрашивать", "");
СЗ.Вставить("Показатель4", "");
СЗ.Вставить("Показатель4Запрашивать", "");
СЗ.Вставить("Показатель5", "");
СЗ.Вставить("Показатель5Запрашивать", "");
СЗ.Вставить("Показатель6", "");
СЗ.Вставить("Показатель6Запрашивать", "");

// Служебные
СЗ.Вставить("Ссылка", "");
СЗ.Вставить("КлючВыгружаемыхДанных", "");
СЗ.Вставить("ВР", "");
СЗ.Вставить("ВидПВР", "");
СЗ.Вставить("ИдентификаторЭлемента", "");
СЗ.Вставить("Предопределенный", 0);
СЗ.Вставить("НужнаБаза", 0);				// Нужно отдельно выгрузить базу
СЗ.Вставить("ЗависитОтТарифнойСтавки", 0);	// Если = 1, то при переносе в ЗУП/ЗБУ, необходимо величину переносить во второй показатель</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_Предопределенный" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;
ВидПВР			= ВходящиеДанные;

НачислениеУдержание = Неопределено;

Если ВидПВР = "ОсновныеНачисления" Тогда
	НачислениеУдержание	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций[Имя];
ИначеЕсли ВидПВР = "Удержания" Тогда
	НачислениеУдержание	= ПланыВидовРасчета.УдержанияОрганизаций[Имя];
ИначеЕсли ВидПВР = "СреднийЗаработок" Тогда
	НачислениеУдержание	= ПланыВидовРасчета.СреднийЗаработок[Имя];	
Иначе
	НачислениеУдержание = Имя;
	
КонецЕсли;</Текст>
				<Параметры>Имя, ВидПВР</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_СпособРасчета" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Если Метаданные.Перечисления.СпособыРасчетаОплатыТруда.ЗначенияПеречисления.Найти(Имя) = Неопределено Тогда
	Субконто	= Имя;
	
Иначе
	Субконто	= Перечисления.СпособыРасчетаОплатыТруда[Имя];
	
КонецЕсли;</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержания_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
				<Текст>ПринудительноОбновитьВременнуюТаблицу	= 0;

НачисленияУдержания_ВременнаяТаблица = Неопределено;
Если ЗначениеЗаполнено(ПринудительноОбновитьВременнуюТаблицу) = 0 Тогда
	Параметры.ВременноеХранилище.Свойство("НачисленияУдержания_ВременнаяТаблица", НачисленияУдержания_ВременнаяТаблица);
КонецЕсли;

Если НачисленияУдержания_ВременнаяТаблица = Неопределено Тогда
	Запрос = Новый Запрос;
	
	Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;
	
	Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
	
	Запрос.Текст = Запросы.НачисленияУдержания_ВременнаяТаблица.Текст;
	Запрос.Выполнить();
	
	НачисленияУдержания_ВременнаяТаблица = Запрос.МенеджерВременныхТаблиц;
	
	Параметры.ВременноеХранилище.Вставить("НачисленияУдержания_ВременнаяТаблица", НачисленияУдержания_ВременнаяТаблица);
КонецЕсли;</Текст>
				<Параметры>ПринудительноОбновитьВременнуюТаблицу</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержания_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.НачисленияУдержания_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.НачисленияУдержания_ВременнаяТаблица;

Запрос.Текст = Запросы.НачисленияУдержания_Выборка.Текст;
Выборка = Запрос.Выполнить().Выбрать();

ТаблицаНачисленияУдержания = Неопределено;
Выполнить(Алгоритмы.НачисленияУдержания_Описание);

Пока Выборка.Следующий() Цикл
	
	СтрокаНачисленияУдержания = ТаблицаНачисленияУдержания.Добавить();
	
	СтрокаНачисленияУдержания.Показатели = Новый ТаблицаЗначений;
	СтрокаНачисленияУдержания.Показатели.Колонки.Добавить("Показатель");
	СтрокаНачисленияУдержания.Показатели.Колонки.Добавить("ЗапрашиватьПриКадровыхПеремещениях");
	Для Каждого Показатель Из Выборка.ВидРасчета.Показатели Цикл
		ЗаполнитьЗначенияСвойств(СтрокаНачисленияУдержания.Показатели.Добавить(), Показатель);
	КонецЦикла;
	
	СтрокаНачисленияУдержания.ВидПВР = Выборка.ВидПВР;
	ЗаполнитьЗначенияСвойств(СтрокаНачисленияУдержания, Выборка.ВидРасчета, , "Показатели, ВедущиеВидыРасчета, БазовыеВидыРасчета");
	
	СтрокаНачисленияУдержания.ЯвляетсяПрофвзносом = Найти(НРег(СтрокаНачисленияУдержания.Наименование), "профвзносы") &lt;&gt; 0;
	
	СтрокаНачисленияУдержания.ВедущиеВидыРасчета	= Выборка.ВидРасчета.ВедущиеВидыРасчета.Выгрузить().ВыгрузитьКолонку("ВидРасчета");
	СтрокаНачисленияУдержания.БазовыеВидыРасчета	= Выборка.ВидРасчета.БазовыеВидыРасчета.Выгрузить().ВыгрузитьКолонку("ВидРасчета");
	
	СтрокаНачисленияУдержания.УчетВСреднемЗаработкеОбщий = Выборка.СоставнаяЧасть;
	СтрокаНачисленияУдержания.УчетВСреднемЗаработкеОбщийИндексируется = Выборка.Индексируется;
	
КонецЦикла;

ИсходящиеДанные.Вставить("НачисленияУдержания",	ТаблицаНачисленияУдержания);</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержания_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаНачисленияУдержания = Новый ТаблицаЗначений;
ТаблицаНачисленияУдержания.Колонки.Добавить("Код");
ТаблицаНачисленияУдержания.Колонки.Добавить("Наименование");
ТаблицаНачисленияУдержания.Колонки.Добавить("КатегорияРасчета");
ТаблицаНачисленияУдержания.Колонки.Добавить("СпособРасчета");
ТаблицаНачисленияУдержания.Колонки.Добавить("ПроизвольнаяФормулаРасчета");
ТаблицаНачисленияУдержания.Колонки.Добавить("ФормулаРасчета");
ТаблицаНачисленияУдержания.Колонки.Добавить("СтратегияОтраженияВУчете");
ТаблицаНачисленияУдержания.Колонки.Добавить("СтатьяФинансирования");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВедущиеВидыРасчета");
ТаблицаНачисленияУдержания.Колонки.Добавить("БазовыеВидыРасчета");
ТаблицаНачисленияУдержания.Колонки.Добавить("Рассчитывается");

// Все начисления
ТаблицаНачисленияУдержания.Колонки.Добавить("СпособОтраженияВБухучете");
ТаблицаНачисленияУдержания.Колонки.Добавить("СтатьяРасходов");
//ТаблицаНачисленияУдержания.Колонки.Добавить("КОСГУ");
//ТаблицаНачисленияУдержания.Колонки.Добавить("ОтнесениеРасходовКДеятельностиЕНВД");
ТаблицаНачисленияУдержания.Колонки.Добавить("ЯвляетсяДоходомВНатуральнойФорме");
ТаблицаНачисленияУдержания.Колонки.Добавить("ОтношениеКДенежномуСодержанию");
ТаблицаНачисленияУдержания.Колонки.Добавить("КодДоходаНДФЛ");
//ТаблицаНачисленияУдержания.Колонки.Добавить("КодДоходаЕСН");
//ТаблицаНачисленияУдержания.Колонки.Добавить("КодДоходаФСС_НС");
//ТаблицаНачисленияУдержания.Колонки.Добавить("КодДоходаСтраховыеВзносы");
//ТаблицаНачисленияУдержания.Колонки.Добавить("ВидНачисленияПоСт255НК");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВидПособияСоциальногоСтрахования");
ТаблицаНачисленияУдержания.Колонки.Добавить("БазовыйПериодПрошлыйМесяц");
ТаблицаНачисленияУдержания.Колонки.Добавить("ПериодДействияБазовый");
ТаблицаНачисленияУдержания.Колонки.Добавить("УчетВСреднемЗаработкеОбщий");
ТаблицаНачисленияУдержания.Колонки.Добавить("УчетВСреднемЗаработкеОбщийИндексируется");

// Основные начисления
ТаблицаНачисленияУдержания.Колонки.Добавить("ЗачетОтработанногоВремени");
ТаблицаНачисленияУдержания.Колонки.Добавить("ЗачетНормыВремени");
ТаблицаНачисленияУдержания.Колонки.Добавить("ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка");
ТаблицаНачисленияУдержания.Колонки.Добавить("ПериодРасчетаСреднегоЗаработка");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВидСтажа");
ТаблицаНачисленияУдержания.Колонки.Добавить("КоэффициентСтажа");
ТаблицаНачисленияУдержания.Колонки.Добавить("ТребуетВводаТарифногоРазряда");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВидВремени");
ТаблицаНачисленияУдержания.Колонки.Добавить("ОбозначениеВТабелеУчетаРабочегоВремени");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВидОтпуска");
//ТаблицаНачисленияУдержания.Колонки.Добавить("ВидСтажаСЗВ4");

// Дополнительные начисления
ТаблицаНачисленияУдержания.Колонки.Добавить("ВидПремии");
ТаблицаНачисленияУдержания.Колонки.Добавить("ЧислоМесяцев");

// Удержания
//ТаблицаНачисленияУдержания.Колонки.Добавить("ЯвляетсяДСВ");
ТаблицаНачисленияУдержания.Колонки.Добавить("ЯвляетсяПрофвзносом");

// Показатели
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатели");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель1");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель1Запрашивать");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель2");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель2Запрашивать");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель3");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель3Запрашивать");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель4");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель4Запрашивать");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель5");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель5Запрашивать");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель6");
ТаблицаНачисленияУдержания.Колонки.Добавить("Показатель6Запрашивать");

// Служебные
ТаблицаНачисленияУдержания.Колонки.Добавить("Ссылка");
ТаблицаНачисленияУдержания.Колонки.Добавить("КлючВыгружаемыхДанных");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВР");
ТаблицаНачисленияУдержания.Колонки.Добавить("ВидПВР");
//ТаблицаНачисленияУдержания.Колонки.Добавить("ИдентификаторЭлемента");
ТаблицаНачисленияУдержания.Колонки.Добавить("Предопределенный");
ТаблицаНачисленияУдержания.Колонки.Добавить("НужнаБаза");				// Нужно отдельно выгрузить базу
ТаблицаНачисленияУдержания.Колонки.Добавить("ЗависитОтТарифнойСтавки");	// Если = 1, то при переносе в ЗУП/ЗБУ, необходимо величину переносить во второй показатель</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержанияПоСотрудникам_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПервичныеДанные = Новый ТаблицаЗначений;
ПервичныеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ПервичныеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ПервичныеДанные.Колонки.Добавить("ОсновныеНачисления");
//ПервичныеДанные.Колонки.Добавить("ДополнительныеНачисления");
ПервичныеДанные.Колонки.Добавить("Удержания");
ПервичныеДанные.Колонки.Добавить("ПогашениеЗаймов");
ПервичныеДанные.Колонки.Добавить("НДФЛРасчетыСБюджетом");
ПервичныеДанные.Колонки.Добавить("НДФЛКЗачету");
ПервичныеДанные.Колонки.Добавить("НеОчищатьДокумент");
ПервичныеДанные.Колонки.Добавить("Авансом");

ФизическиеЛицаСБазой	= Новый Массив;
ФизическиеЛицаБезБазы	= Новый Массив;

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);

ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ПервичныеДанные.Добавить();
			НоваяСтрока.Авансом						= 0;
			НоваяСтрока.Организация					= Организация;
			НоваяСтрока.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
			//НоваяСтрока.ДополнительныеНачисления	= Новый ТаблицаЗначений;
			НоваяСтрока.Удержания					= Новый ТаблицаЗначений;
			НоваяСтрока.ПогашениеЗаймов				= Новый ТаблицаЗначений;
			НоваяСтрока.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
			НоваяСтрока.НДФЛКЗачету					= Новый ТаблицаЗначений;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаСБазой, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
		КонецЦикла;
	КонецЦикла;
		
	Запрос.Текст = Запросы.УдержанияРаботниковОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом					= 0;
				СтрокаРезультатов.Организация				= Организация;
				СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
				//СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
				СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
				СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.Удержания = ДанныеПоПериодуРегистрации.Строки;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаБезБазы, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст = Запросы.НДФЛРасчетыСБюджетом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом					= 0;
				СтрокаРезультатов.Организация				= Организация;
				СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
				//СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
				СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
				СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.НДФЛРасчетыСБюджетом = ДанныеПоПериодуРегистрации.Строки;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаБезБазы, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
		КонецЦикла;
	КонецЦикла;
	
	//Запрос.Текст = Запросы.НДФЛКЗачету_Выборка.Текст;
	//ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Отбор = Новый Структура("Организация, ПериодРегистрации");
	//Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	//	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	//	Отбор.Организация = Организация;
	//	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
	//		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
	//		Строки = ПервичныеДанные.НайтиСтроки(Отбор);
	//		Если Строки.Количество() &gt; 0 Тогда
	//			СтрокаРезультатов = Строки[0];
	//		Иначе
	//			СтрокаРезультатов = ПервичныеДанные.Добавить();
	//			СтрокаРезультатов.Авансом					= 0;
	//			СтрокаРезультатов.Организация				= Организация;
	//			СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
	//			СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
	//		КонецЕсли;
	//		СтрокаРезультатов.НДФЛКЗачету = ДанныеПоПериодуРегистрации.Строки;
	//		
	//		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаБезБазы, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
	//	КонецЦикла;
	//КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;

Выполнить(Алгоритмы.ДоговорыЗайма_ВременнаяТаблица);

Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ДоговорыЗайма_ВременнаяТаблица;;

Запрос.Текст = Запросы.ПогашениеЗаймовРаботникамиОрганизаций_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Отбор = Новый Структура("Организация, ПериодРегистрации");
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Отбор.Организация = Организация;
	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
		Строки = ПервичныеДанные.НайтиСтроки(Отбор);
		Если Строки.Количество() &gt; 0 Тогда
			СтрокаРезультатов = Строки[0];
		Иначе
			СтрокаРезультатов = ПервичныеДанные.Добавить();
			СтрокаРезультатов.Авансом					= 0;
			СтрокаРезультатов.Организация				= Организация;
			СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
			//СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
			СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
			СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
		КонецЕсли;
		СтрокаРезультатов.ПогашениеЗаймов = ДанныеПоПериодуРегистрации.Строки;
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ФизическиеЛицаБезБазы, ДанныеПоПериодуРегистрации.Строки.ВыгрузитьКолонку("Физлицо"), Истина);
	КонецЦикла;
КонецЦикла;


ОбщегоНазначенияКлиентСервер.СократитьМассив(ФизическиеЛицаБезБазы, ФизическиеЛицаСБазой);
Запрос = Новый Запрос;
Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
Запрос.УстановитьПараметр("МассивФизическихЛиц",				ФизическиеЛицаБезБазы);
Запрос.Текст = Запросы.СотрудникиФизическихЛиц_Выборка.Текст;
ФизическиеЛицаБезБазы = Запрос.Выполнить().Выгрузить();

ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("ФизическиеЛицаБезБазы",	ФизическиеЛицаБезБазы);
ИсходящиеДанные.Вставить("ПервичныеДанные",			ПервичныеДанные);
ИсходящиеДанные.Вставить("ИмяПКО",			        "НачисленияУдержанияПоСотрудникам_ПД");</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержанияПоСотрудникамАвансом_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПервичныеДанные = Новый ТаблицаЗначений;
ПервичныеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ПервичныеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ПервичныеДанные.Колонки.Добавить("ОсновныеНачисления");
//ПервичныеДанные.Колонки.Добавить("ДополнительныеНачисления");
ПервичныеДанные.Колонки.Добавить("Удержания");
ПервичныеДанные.Колонки.Добавить("ПогашениеЗаймов");
ПервичныеДанные.Колонки.Добавить("НДФЛРасчетыСБюджетом");
//ПервичныеДанные.Колонки.Добавить("НДФЛКЗачету");
ПервичныеДанные.Колонки.Добавить("НеОчищатьДокумент");
ПервичныеДанные.Колонки.Добавить("Авансом");

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);

Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизацийАвансом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ПервичныеДанные.Добавить();
			НоваяСтрока.Авансом						= 1;
			НоваяСтрока.Организация					= Организация;
			НоваяСтрока.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
			//НоваяСтрока.ДополнительныеНачисления	= Новый ТаблицаЗначений;
			НоваяСтрока.Удержания					= Новый ТаблицаЗначений;
			НоваяСтрока.ПогашениеЗаймов				= Новый ТаблицаЗначений;
			НоваяСтрока.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
			//НоваяСтрока.НДФЛКЗачету					= Новый ТаблицаЗначений;
		КонецЦикла;
	КонецЦикла;
		
	//Запрос.Текст = Запросы.УдержанияРаботниковОрганизацийАвансом_Выборка.Текст;
	//ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Отбор = Новый Структура("Организация, ПериодРегистрации");
	//Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	//	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	//	Отбор.Организация = Организация;
	//	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
	//		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
	//		Строки = ПервичныеДанные.НайтиСтроки(Отбор);
	//		Если Строки.Количество() &gt; 0 Тогда
	//			СтрокаРезультатов = Строки[0];
	//		Иначе
	//			СтрокаРезультатов = ПервичныеДанные.Добавить();
	//			СтрокаРезультатов.Авансом					= 1;
	//			СтрокаРезультатов.Организация				= Организация;
	//			СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
	//			СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
	//		КонецЕсли;
	//		СтрокаРезультатов.Удержания = ДанныеПоПериодуРегистрации.Строки;
	//	КонецЦикла;
	//КонецЦикла;
	
	Запрос.Текст = Запросы.НДФЛРасчетыСБюджетомАвансом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ПервичныеДанные.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ПервичныеДанные.Добавить();
				СтрокаРезультатов.Авансом					= 0;
				СтрокаРезультатов.Организация				= Организация;
				СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
				//СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
				СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
				СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
				СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
				//СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.НДФЛРасчетыСБюджетом = ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;

//Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ДоговорыЗайма_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

//Запрос.Текст = Запросы.ПогашениеЗаймовРаботникамиОрганизацийАванс_Выборка.Текст;
//ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
//Отбор = Новый Структура("Организация, ПериодРегистрации");
//Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
//	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
//	Отбор.Организация = Организация;
//	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
//		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
//		Строки = ПервичныеДанные.НайтиСтроки(Отбор);
//		Если Строки.Количество() &gt; 0 Тогда
//			СтрокаРезультатов = Строки[0];
//		Иначе
//			СтрокаРезультатов = ПервичныеДанные.Добавить();
//			СтрокаРезультатов.Авансом					= 0;
//			СтрокаРезультатов.Организация				= Организация;
//			СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
//			СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
//			СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
//			СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
//			СтрокаРезультатов.ПогашениеЗаймов			= Новый ТаблицаЗначений;
//			СтрокаРезультатов.НДФЛРасчетыСБюджетом		= Новый ТаблицаЗначений;
//			СтрокаРезультатов.НДФЛКЗачету				= Новый ТаблицаЗначений;
//		КонецЕсли;
//		СтрокаРезультатов.ПогашениеЗаймов = ДанныеПоПериодуРегистрации.Строки;
//	КонецЦикла;
//КонецЦикла;

ФизическиеЛицаБезБазы = Новый ТаблицаЗначений;
ФизическиеЛицаБезБазы.Колонки.Добавить("Сотрудник");
ФизическиеЛицаБезБазы.Колонки.Добавить("Подразделение");
ФизическиеЛицаБезБазы.Колонки.Добавить("ФизическоеЛицо");

ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("ФизическиеЛицаБезБазы",	ФизическиеЛицаБезБазы);
ИсходящиеДанные.Вставить("ПервичныеДанные",			ПервичныеДанные);
ИсходящиеДанные.Вставить("ИмяПКО",			        "НачисленияУдержанияПоСотрудникамАвансом_ПД");</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛДоходыПредыдущегоМестаРаботы_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.НДФЛДоходыПредыдущегоМестаРаботы_Выборка.Текст;

ИсходящиеДанные.Вставить("НДФЛДоходыПредыдущегоМестаРаботы",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛПредоставлениеСтандартныхВычетов_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("Физлицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
ИсходящиеДанные.Колонки.Добавить("НДФЛПрименениеВычетов");
ИсходящиеДанные.Колонки.Добавить("НДФЛСтандартныеВычетыФизлиц");
ИсходящиеДанные.Колонки.Добавить("НДФЛСтандартныеВычетыНаДетей");

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.НДФЛПрименениеВычетов_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Для Каждого ДанныеПоФизлицу Из ДанныеПоОрганизации.Строки Цикл
		НоваяСтрока = ИсходящиеДанные.Добавить();
		НоваяСтрока.Организация						= Организация;
		НоваяСтрока.Физлицо							= ДанныеПоФизлицу.ФизлицоОтбор;
		НоваяСтрока.НДФЛПрименениеВычетов			= ДанныеПоФизлицу.Строки;
		НоваяСтрока.НДФЛСтандартныеВычетыФизлиц		= Новый ТаблицаЗначений;
		НоваяСтрока.НДФЛСтандартныеВычетыНаДетей	= Новый ТаблицаЗначений;
	КонецЦикла;
КонецЦикла;

Запрос.Текст = Запросы.НДФЛСтандартныеВычетыФизлиц_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Отбор = Новый Структура("Организация, Физлицо");
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Отбор.Организация = Организация;
	Для Каждого ДанныеПоФизлицу Из ДанныеПоОрганизации.Строки Цикл
		Отбор.Физлицо = ДанныеПоФизлицу.ФизлицоОтбор;
		Строки = ИсходящиеДанные.НайтиСтроки(Отбор);
		Если Строки.Количество() &gt; 0 Тогда
			СтрокаРезультатов = Строки[0];
		Иначе
			СтрокаРезультатов = ИсходящиеДанные.Добавить();
			СтрокаРезультатов.Организация					= Организация;
			СтрокаРезультатов.Физлицо						= ДанныеПоФизлицу.ФизлицоОтбор;
			СтрокаРезультатов.НДФЛПрименениеВычетов			= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыФизлиц	= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыНаДетей	= Новый ТаблицаЗначений;
		КонецЕсли;
		СтрокаРезультатов.НДФЛСтандартныеВычетыФизлиц		= ДанныеПоФизлицу.Строки;
	КонецЦикла;
КонецЦикла;

Запрос.Текст = Запросы.НДФЛСтандартныеВычетыНаДетей_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Отбор.Организация = Организация;
	Для Каждого ДанныеПоФизлицу Из ДанныеПоОрганизации.Строки Цикл
		Отбор.Физлицо = ДанныеПоФизлицу.ФизлицоОтбор;
		Строки = ИсходящиеДанные.НайтиСтроки(Отбор);
		Если Строки.Количество() &gt; 0 Тогда
			СтрокаРезультатов = Строки[0];
		Иначе
			СтрокаРезультатов = ИсходящиеДанные.Добавить();
			СтрокаРезультатов.Организация					= Организация;
			СтрокаРезультатов.Физлицо						= ДанныеПоФизлицу.ФизлицоОтбор;
			СтрокаРезультатов.НДФЛПрименениеВычетов			= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыФизлиц	= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыНаДетей	= Новый ТаблицаЗначений;
		КонецЕсли;
		СтрокаРезультатов.НДФЛСтандартныеВычетыНаДетей		= ДанныеПоФизлицу.Строки;
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛПрекращениеСтандартныхВычетов_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("Физлицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
ИсходящиеДанные.Колонки.Добавить("НДФЛОтменаВычетов");
ИсходящиеДанные.Колонки.Добавить("НДФЛСтандартныеВычетыФизлиц");
ИсходящиеДанные.Колонки.Добавить("НДФЛСтандартныеВычетыНаДетей");

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.НДФЛОтменаВычетов_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Для Каждого ДанныеПоФизлицу Из ДанныеПоОрганизации.Строки Цикл
		НоваяСтрока = ИсходящиеДанные.Добавить();
		НоваяСтрока.Организация						= Организация;
		НоваяСтрока.Физлицо							= ДанныеПоФизлицу.ФизлицоОтбор;
		НоваяСтрока.НДФЛОтменаВычетов				= ДанныеПоФизлицу.Строки;
		НоваяСтрока.НДФЛСтандартныеВычетыФизлиц		= Новый ТаблицаЗначений;
		НоваяСтрока.НДФЛСтандартныеВычетыНаДетей	= Новый ТаблицаЗначений;
	КонецЦикла;
КонецЦикла;

Запрос.Текст = Запросы.НДФЛСтандартныеВычетыФизлиц_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Отбор = Новый Структура("Организация, Физлицо");
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Отбор.Организация = Организация;
	Для Каждого ДанныеПоФизлицу Из ДанныеПоОрганизации.Строки Цикл
		Отбор.Физлицо = ДанныеПоФизлицу.ФизлицоОтбор;
		Строки = ИсходящиеДанные.НайтиСтроки(Отбор);
		Если Строки.Количество() &gt; 0 Тогда
			СтрокаРезультатов = Строки[0];
		Иначе
			СтрокаРезультатов = ИсходящиеДанные.Добавить();
			СтрокаРезультатов.Организация					= Организация;
			СтрокаРезультатов.Физлицо						= ДанныеПоФизлицу.ФизлицоОтбор;
			СтрокаРезультатов.НДФЛОтменаВычетов				= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыФизлиц	= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыНаДетей	= Новый ТаблицаЗначений;
		КонецЕсли;
		СтрокаРезультатов.НДФЛСтандартныеВычетыФизлиц		= ДанныеПоФизлицу.Строки;
	КонецЦикла;
КонецЦикла;

Запрос.Текст = Запросы.НДФЛСтандартныеВычетыНаДетей_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Отбор.Организация = Организация;
	Для Каждого ДанныеПоФизлицу Из ДанныеПоОрганизации.Строки Цикл
		Отбор.Физлицо = ДанныеПоФизлицу.ФизлицоОтбор;
		Строки = ИсходящиеДанные.НайтиСтроки(Отбор);
		Если Строки.Количество() &gt; 0 Тогда
			СтрокаРезультатов = Строки[0];
		Иначе
			СтрокаРезультатов = ИсходящиеДанные.Добавить();
			СтрокаРезультатов.Организация					= Организация;
			СтрокаРезультатов.Физлицо						= ДанныеПоФизлицу.ФизлицоОтбор;
			СтрокаРезультатов.НДФЛОтменаВычетов				= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыФизлиц	= Новый ТаблицаЗначений;
			СтрокаРезультатов.НДФЛСтандартныеВычетыНаДетей	= Новый ТаблицаЗначений;
		КонецЕсли;
		СтрокаРезультатов.НДФЛСтандартныеВычетыНаДетей		= ДанныеПоФизлицу.Строки;
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛРасчетыСБюджетом_ВидСтроки" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.НДФЛРасчетыСБюджетомВидСтроки[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Организация_ЮрФизЛицо" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ЮрФизЛицо[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтветственныеЛицаОрганизаций_ОтветственноеЛицо" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ОтветственныеЛицаОрганизаций[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтношениеКЕНВДЗатратНаЗарплату" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто = "";
Если Имя = "ЕНВД" Тогда
	Субконто	= Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКЕНВД;
	
ИначеЕсли Имя = "НеЕНВД" Тогда
	Субконто	= Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыОтносятсяКнеЕНВД;
	
ИначеЕсли Имя = "ОпределяетсяЕжемесячноПроцентом" Тогда
	Субконто	= Перечисления.ОтнесениеРасходовКДеятельностиЕНВД.РасходыРаспределяются;
	
КонецЕсли;</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтпускПоУходуЗаРебенком_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Период");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);

Запрос.Текст = Запросы.СостояниеРаботниковОтпускПоУходуЗаРебенком_Выборка.Текст;
СостояниеРаботниковОтпускПоУходуЗаРебенком = Запрос.Выполнить().Выгрузить();
ИсходящиеДанные.Вставить("СостояниеРаботниковОтпускПоУходуЗаРебенком",	СостояниеРаботниковОтпускПоУходуЗаРебенком);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтпускПоУходуЗаРебенком_ДатаНачала" ИспользуетсяПриЗагрузке="false">
				<Текст>Если ТипЗнч(ИсходящиеДанные) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком") Тогда
	Субконто = ИсходящиеДанные.ДатаНачала;
Иначе
	Субконто = Дата(1, 1, 1);
КонецЕсли;</Текст>
				<Параметры>ОтпускПоУходуЗаРебенком</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтпускПоУходуЗаРебенком_ЕстьРеквизиты" ИспользуетсяПриЗагрузке="false">
				<Текст>Субконто = 1;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ОтработанноеВремяПоСотрудникам_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("ОсновныеНачисления");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");
ИсходящиеДанные.Колонки.Добавить("Авансом");
ИсходящиеДанные.Колонки.Добавить("ИмяПКО");

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);

ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ИсходящиеДанные.Добавить();
			НоваяСтрока.Авансом				= 0;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодРегистрации	= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления	= ДанныеПоПериодуРегистрации.Строки;
			НоваяСтрока.ИмяПКО              = "НачисленияУдержанияПоСотрудникам_ПД";
		КонецЦикла;
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтработанноеВремяПоСотрудникамАвансом_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("ОсновныеНачисления");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");
ИсходящиеДанные.Колонки.Добавить("Авансом");
ИсходящиеДанные.Колонки.Добавить("ИмяПКО");

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);

Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизацийАвансом_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Для Каждого СтрокаДокумента Из ДанныеПоПериодуРегистрации.Строки Цикл
				СтрокаДокумента.ВидУчетаВремени = ПроведениеРасчетов.ПолучитьВидУчетаВремени(СтрокаДокумента.ВидРасчетаСпособРасчета, Неопределено, Ложь);
			КонецЦикла;
			НоваяСтрока = ИсходящиеДанные.Добавить();
			НоваяСтрока.Авансом				= 1;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодРегистрации	= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления	= ДанныеПоПериодуРегистрации.Строки;
			НоваяСтрока.ИмяПКО				= "НачисленияУдержанияПоСотрудникамАвансом_ПД";
		КонецЦикла;
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПодразделенияОрганизаций_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>Запрос = Новый Запрос;
ПодразделенияКВыгрузке = Новый Массив;

Если Не Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиСрезПоследних.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&amp;ДатаСреза, ) КАК РаботникиСрезПоследних
	|ГДЕ
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка КАК Подразделение,
	|	ПодразделенияОрганизаций.Родитель КАК Родитель
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Подразделения = Результаты[0].Выгрузить().ВыгрузитьКолонку("Подразделение");
	СтруктураПодразделений = Результаты[1].Выгрузить();
	
	Для каждого Подразделение Из Подразделения Цикл
		
		Если Не ЗначениеЗаполнено(Подразделение) Тогда
			Продолжить;	
		КонецЕсли;	
		
		Если ПодразделенияКВыгрузке.Найти(Подразделение) = Неопределено Тогда
			ПодразделенияКВыгрузке.Добавить(Подразделение);
		КонецЕсли;
		
		СтрокаТЗ = СтруктураПодразделений.Найти(Подразделение, "Подразделение");
		Пока Истина Цикл
			
			Родитель = СтрокаТЗ.Родитель;
			Если ЗначениеЗаполнено(Родитель) Тогда
				Если ПодразделенияКВыгрузке.Найти(Родитель) = Неопределено Тогда
					ПодразделенияКВыгрузке.Добавить(Родитель);
				КонецЕсли;
				СтрокаТЗ = СтруктураПодразделений.Найти(Родитель, "Подразделение");
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецЕсли;

Запрос.УстановитьПараметр("ПодразделенияКВыгрузке", ПодразделенияКВыгрузке);
Запрос.УстановитьПараметр("ВсеПодразделения", Параметры.ПереноситьНачисленияПредыдущейПрограммы);

Запрос.Текст = 
"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.Ссылка,
	|	ПодразделенияОрганизаций.ПометкаУдаления,
	|	ПодразделенияОрганизаций.Владелец,
	|	ПодразделенияОрганизаций.Родитель,
	|	ПодразделенияОрганизаций.Код,
	|	ПодразделенияОрганизаций.Наименование,
	|	ПодразделенияОрганизаций.Порядок,
	|	ПодразделенияОрганизаций.Владелец.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	(&amp;ВсеПодразделения
	|			ИЛИ ПодразделенияОрганизаций.Ссылка В (&amp;ПодразделенияКВыгрузке))
	|	И ПодразделенияОрганизаций.Владелец &lt;&gt; ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";

ИсходящиеДанные = Запрос.Выполнить().Выгрузить();</Текст>
			</Алгоритм>
			<Алгоритм Имя="Показатели_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>Показатели = Новый ТаблицаЗначений;

Показатели.Колонки.Добавить("Показатель");
Показатели.Колонки.Добавить("ЗапрашиватьПриКадровыхПеремещениях");</Текст>
			</Алгоритм>
			<Алгоритм Имя="Показатель_ВидПоказателя" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ВидыПоказателейСхемМотивации[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Показатель_ИдентификаторПоНаименованию" ИспользуетсяПриЗагрузке="false">
				<Текст>
СтрНаименование	= СтруктураИдентификатора.Идентификатор;

Идентификатор = "";
БылРазделитель = Ложь;
Для НомСимвола = 1 По СтрДлина(СтрНаименование) Цикл
	Символ = Сред(СтрНаименование, НомСимвола, 1);
	Если ОбщегоНазначения.ТолькоЦифрыВСтроке(Символ) 
		И ПустаяСтрока(Идентификатор) Тогда
		// цифры в начале пропускаем
		Продолжить;
	КонецЕсли;
	Идентификатор = Идентификатор + Символ;
КонецЦикла;

Если СтрДлина(Идентификатор)&gt;100 Тогда
	Идентификатор = Лев(Идентификатор,100);
КонецЕсли;

СтруктураИдентификатора.Вставить("Идентификатор", Идентификатор);</Текст>
				<Параметры>СтрНаименование</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Показатель_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>Показатель = Новый Структура;
Показатель.Вставить("Ссылка",					"");
Показатель.Вставить("Наименование",				"");
Показатель.Вставить("Идентификатор",			"");
Показатель.Вставить("ВозможностьИзменения",		"НеИзменяется");
Показатель.Вставить("ТипПоказателя",			"Числовой");
Показатель.Вставить("ВидПоказателя",			"Индивидуальный");
Показатель.Вставить("Предопределенный",			0);
Показатель.Вставить("Процентный",				0);</Текст>
			</Алгоритм>
			<Алгоритм Имя="Показатель_ТипПоказателя" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ТипыПоказателейСхемМотивации[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПриемНаРаботу_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.РаботникиОрганизаций_Выборка.Текст;
ИсходящиеДанные.Вставить("РаботникиОрганизаций",	Запрос.Выполнить().Выгрузить());

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Период");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);

Запрос.Текст = Запросы.ЕжегодныеОтпускаОбщие_Выборка.Текст;
ИсходящиеДанные.Вставить("ЕжегодныеОтпускаОбщие",	Запрос.Выполнить().Выгрузить());

//У нас нет отпусов по должностям
//Запрос.Текст = Запросы.ЕжегодныеОтпускаДолжностей_Выборка.Текст;
//ВыборкаПоОтпускам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
//ЕжегодныеОтпускаДолжностей = Новый Соответствие;
//Для Каждого ЭлементВыборки Из ВыборкаПоОтпускам.Строки Цикл
//	ЕжегодныеОтпускаДолжностей.Вставить(ЭлементВыборки.Должность, ЭлементВыборки.Строки);
//КонецЦикла;
//ИсходящиеДанные.Вставить("ЕжегодныеОтпускаДолжностей",	ЕжегодныеОтпускаДолжностей);

Запрос.Текст = Запросы.ЕжегодныеОтпускаСотрудников_Выборка.Текст;
ВыборкаПоОтпускам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
ЕжегодныеОтпускаСотрудников = Новый Соответствие;
Для Каждого ЭлементВыборки Из ВыборкаПоОтпускам.Строки Цикл
	ЕжегодныеОтпускаСотрудников.Вставить(ЭлементВыборки.Сотрудник, ЭлементВыборки.Строки);
КонецЦикла;
ИсходящиеДанные.Вставить("ЕжегодныеОтпускаСотрудников",	ЕжегодныеОтпускаСотрудников);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПрименяемыеТарифыСтраховыхВзносов_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Запрос.Текст = Запросы.УчетнаяПолитикаОрганизаций_Выборка.Текст;
Если  Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.ДатаНачалаПереносаРасчетныхДанных);
Иначе
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;
ИсходящиеДанные.Вставить("УчетнаяПолитикаОрганизаций",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПрофессииФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ПрофессииФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ПрофессииФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="РаботникиОрганизации_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы								= Параметры.Алгоритмы;
//Параметры								= ИсходящиеДанные;
//Запросы									= ВходящиеДанные;
//ПринудительноОбновитьВременнуюТаблицу	= Источник;
ПринудительноОбновитьВременнуюТаблицу = 0;

РаботникиОрганизации_ВременнаяТаблица = Неопределено;
Если ЗначениеЗаполнено(ПринудительноОбновитьВременнуюТаблицу) = 0 Тогда
	Параметры.ВременноеХранилище.Свойство("РаботникиОрганизации_ВременнаяТаблица", РаботникиОрганизации_ВременнаяТаблица);
КонецЕсли;

Если РаботникиОрганизации_ВременнаяТаблица = Неопределено Тогда
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);
	Запрос.УстановитьПараметр("Сотрудник",							Параметры.СотрудникДляОтладки);
	Запрос.УстановитьПараметр("ПоВсемСотрудникам",					Параметры.СотрудникДляОтладки.Пустая());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиСрезПоследних.Организация КАК ГоловнаяОрганизация,
	|	РаботникиСрезПоследних.ОбособленноеПодразделение КАК Организация,
	|	РаботникиСрезПоследних.Сотрудник,
	|	РаботникиСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	РаботникиСрезПоследних.Должность КАК Должность,
	|	РаботникиСрезПоследних.ЗанимаемыхСтавок  КАК ЗанимаемыхСтавок,
	|	РаботникиСрезПоследних.ГрафикРаботы КАК ГрафикРаботы,
	|	РаботникиСрезПоследних.Сотрудник.ВидДоговора КАК ВидДоговора,
	|	РаботникиСрезПоследних.Сотрудник.ВидЗанятости КАК ВидЗанятости,
	|	РаботникиСрезПоследних.Сотрудник.Физлицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА АвансыРаботникамОрганизаций.СуммаАванса ЕСТЬ NULL 
	|				ИЛИ АвансыРаботникамОрганизаций.СуммаАванса = 0
	|			ТОГДА ""РасчетомЗаПервуюПоловинуМесяца""
	|		ИНАЧЕ ""ФиксированнойСуммой""
	|	КОНЕЦ КАК СпособРасчетаАванса,
	|	ЕСТЬNULL(АвансыРаботникамОрганизаций.СуммаАванса, 0) КАК СуммаАванса,
	|	РаботникиСрезПоследних.Сотрудник.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТРаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&amp;ДатаСреза, ) КАК РаботникиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АвансыРаботникамОрганизаций КАК АвансыРаботникамОрганизаций
	|		ПО РаботникиСрезПоследних.Сотрудник.Физлицо = АвансыРаботникамОрганизаций.Сотрудник.Физлицо
	|			И РаботникиСрезПоследних.ОбособленноеПодразделение = АвансыРаботникамОрганизаций.Организация
	|ГДЕ
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И (&amp;ПоВсемСотрудникам
	|			ИЛИ РаботникиСрезПоследних.Сотрудник = &amp;Сотрудник)
	|	И (РаботникиСрезПоследних.Сотрудник.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ИЛИ РаботникиСрезПоследних.Сотрудник.ДатаУвольнения &gt;= &amp;ДатаСреза)";
	Запрос.Выполнить();
	
	РаботникиОрганизации_ВременнаяТаблица = Запрос.МенеджерВременныхТаблиц;
	
	Параметры.ВременноеХранилище.Вставить("РаботникиОрганизации_ВременнаяТаблица", РаботникиОрганизации_ВременнаяТаблица);
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="РаботникиОрганизаций_ПричинаИзмененияСостояния" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ПричиныИзмененияСостояния[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="РабочееВремяСотрудников_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
Запрос.УстановитьПараметр("Сотрудник",							Параметры.СотрудникДляОтладки);
Запрос.УстановитьПараметр("ПоВсемСотрудникам",					Параметры.СотрудникДляОтладки.Пустая());
Запрос.УстановитьПараметр("ФизическоеЛицо",						Параметры.ФизическоеЛицоДляОтладки);
Запрос.УстановитьПараметр("ПоВсемФизическимЛицам",				Параметры.ФизическоеЛицоДляОтладки.Пустая());

Запрос.Текст = Запросы.РабочееВремяСотрудников_Выборка.Текст;

ИсходящиеДанные.Вставить("РабочееВремяСотрудников",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СведенияОбИнвалидностиФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.СведенияОбИнвалидностиФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("СведенияОбИнвалидностиФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СведенияОбОтветственныхЛицах_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Запрос.Текст = Запросы.ОтветственныеЛицаОрганизаций_Выборка.Текст;
Если  Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.ДатаНачалаПереносаРасчетныхДанных);
Иначе
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;
ИсходящиеДанные.Вставить("ОтветственныеЛицаОрганизаций",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СостояниеРаботниковОрганизации_Состояние" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.СостоянияРаботникаОрганизации[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Сотрудник_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = Новый Структура;
СЗ.Вставить("Ссылка",						"");
СЗ.Вставить("Код",							"");
СЗ.Вставить("Наименование",				"");
СЗ.Вставить("Актуальность",				"");
СЗ.Вставить("Физлицо",						"");
СЗ.Вставить("Организация",					"");
СЗ.Вставить("ОбособленноеПодразделение",	"");
СЗ.Вставить("ВидДоговора",					"");
СЗ.Вставить("ВидЗанятости",				"");
СЗ.Вставить("ПодразделениеОрганизации",	"");
СЗ.Вставить("Должность",					"");
СЗ.Вставить("ГрафикРаботы",				"");
СЗ.Вставить("ЗанимаемыхСтавок",			"");
СЗ.Вставить("ДатаНачала",					"");
СЗ.Вставить("ДатаОкончания",				"");
СЗ.Вставить("НомерДоговора",				"");
СЗ.Вставить("ДатаДоговора",				"");
СЗ.Вставить("ВидРасчета",					"");
СЗ.Вставить("ТарифнаяСтавка",				"");
СЗ.Вставить("ВалютаТарифнойСтавки",		"");
СЗ.Вставить("ЭтоГруппа",					"");
СЗ.Вставить("Родитель",					"");
СЗ.Вставить("ПостфиксНаименования",		"");
СЗ.Вставить("ДатаПриемаНаРаботу",		"");
</Текст>
			</Алгоритм>
			<Алгоритм Имя="Сотрудники_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
				<Текст>
ПринудительноОбновитьВременнуюТаблицу	= 0;

Сотрудники_ВременнаяТаблица = Неопределено;
Если ЗначениеЗаполнено(ПринудительноОбновитьВременнуюТаблицу) = 0 Тогда
	Параметры.ВременноеХранилище.Свойство("Сотрудники_ВременнаяТаблица", Сотрудники_ВременнаяТаблица);;
КонецЕсли;

Если Сотрудники_ВременнаяТаблица = Неопределено Тогда
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
		Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
		Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;
		
		Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
		Запрос.УстановитьПараметр("Сотрудник",							Параметры.СотрудникДляОтладки);
		Запрос.УстановитьПараметр("ПоВсемСотрудникам",					Параметры.СотрудникДляОтладки.Пустая());
		
		Запрос.Текст = Запросы.Сотрудники_ВременнаяТаблица.Текст;
		Запрос.Выполнить();
		
	Иначе
		
		Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);
		Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТРаботникиОрганизации.Сотрудник
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТРаботникиОрганизации КАК ВТРаботникиОрганизации";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Сотрудники_ВременнаяТаблица = Запрос.МенеджерВременныхТаблиц;
	Параметры.ВременноеХранилище.Вставить("Сотрудники_ВременнаяТаблица", Сотрудники_ВременнаяТаблица);
	
КонецЕсли;</Текст>
				<Параметры>ПринудительноОбновитьВременнуюТаблицу</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтавкаВзносаНаСтрахованиеОтНС_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Запрос.Текст = Запросы.СтавкаВзносаНаСтрахованиеОтНС_Выборка.Текст;
Если  Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.ДатаНачалаПереносаРасчетныхДанных);
Иначе
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;
ИсходящиеДанные.Вставить("СтавкаВзносаНаСтрахованиеОтНС",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтатусНДФЛФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = Запросы.СтатусНДФЛФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("СтатусНДФЛФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтраховыеВзносыРасчеты_ВидПлатежа" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Имя				= ИсходящиеДанные;

Субконто		= Перечисления.ВидыПлатежейВГосБюджет[Имя];</Текст>
				<Параметры>Имя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтраховыеВзносыРасчеты_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
	ДатаНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
Иначе
	ДатаНачалаПереноса = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	ДатаОкончания = НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1));
КонецЕсли;

Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("РасчетыПоСтраховымВзносам");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");

ДатаПереноса = ДатаНачалаПереноса;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.СтраховыеВзносыРасчеты_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ИсходящиеДанные.Добавить();
			НоваяСтрока.Организация					= Организация;
			НоваяСтрока.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.РасчетыПоСтраховымВзносам	= ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтраховыеВзносыСведенияОДоходах_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ДатаОкончания = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПолучитьДатуОкончанияПоРегиструОсновныеНачисления", Параметры.Алгоритмы, Параметры);
	ДатаНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
Иначе
	ДатаНачалаПереноса = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	ДатаОкончания = НачалоМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации, -1));
КонецЕсли;

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ФизическиеЛица_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("СтраховыеВзносыСведенияОДоходах");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");

ДатаПереноса = ДатаНачалаПереноса;

ТекстЗапроса = Запросы.СтраховыеВзносыСведенияОДоходах_Выборка.Текст;
Если НЕ Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,", "NULL КАК ВидРасчета,");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтраховыеВзносыСведенияОДоходах.ВидРасчета,", "");
КонецЕсли;
Запрос.Текст = ТекстЗапроса;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ИсходящиеДанные.Добавить();
			НоваяСтрока.Организация						= Организация;
			НоваяСтрока.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.СтраховыеВзносыСведенияОДоходах	= ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ТрудоваяДеятельностьФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ТрудоваяДеятельностьФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ТрудоваяДеятельностьФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Увольнение_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.РаботникиОрганизаций_Выборка.Текст;
ИсходящиеДанные.Вставить("РаботникиОрганизаций",	Запрос.Выполнить().Выгрузить());

Запрос.Текст = Запросы.ПлановыеНачисленияРаботниковОрганизаций_Выборка.Текст;
ПлановыеНачисленияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеНачисленияРаботниковОрганизаций.Индексы.Добавить("Сотрудник");
ИсходящиеДанные.Вставить("ПлановыеНачисленияРаботниковОрганизаций",	ПлановыеНачисленияРаботниковОрганизаций);

Запрос.Текст = Запросы.ПлановыеУдержанияРаботниковОрганизаций_Выборка.Текст;
ПлановыеУдержанияРаботниковОрганизаций = Запрос.Выполнить().Выгрузить();
ПлановыеУдержанияРаботниковОрганизаций.Индексы.Добавить("ФизЛицо");
ПлановыеУдержанияРаботниковОрганизаций.Индексы.Добавить("Организация");
ИсходящиеДанные.Вставить("ПлановыеУдержанияРаботниковОрганизаций",	ПлановыеУдержанияРаботниковОрганизаций);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Удержание_ЯвляетсяПрофвзносом" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Удержание		= ИсходящиеДанные;

Субконто = 0;
Если (Найти(НРег(ОбъектыПереносаДанных.Структура_Получить(Удержание, "Наименование")), "профвзнос") &lt;&gt; 0)
Или (Найти(НРег(ОбъектыПереносаДанных.Структура_Получить(Удержание, "Наименование")), "профсоюз") &lt;&gt; 0) Тогда
	Субконто = 1;
КонецЕсли;</Текст>
				<Параметры>Удержание</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Удержания_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СпособыОтраженияЗарплатыВРеглУчете.Ссылка,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт1
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт2
	|		КОГДА СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт3
	|		ИНАЧЕ ""Контрагент""
	|	КОНЕЦ КАК Контрагент
	|ПОМЕСТИТЬ ВТКонтрагенты
	|ИЗ
	|	Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК СпособыОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|	(СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|			ИЛИ СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|			ИЛИ СпособыОтраженияЗарплатыВРеглУчете.СубконтоКт3 ССЫЛКА Справочник.Контрагенты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|	РаботникиОрганизаций.Сотрудник,
	|	РаботникиОрганизаций.Организация КАК Организация,
	|	ПлановыеУдержанияРаботниковОрганизаций.Период КАК Период,
	|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодСреза
	|ПОМЕСТИТЬ ВТРаботникиОрганизацийСрезПоследних
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ПлановыеУдержанияРаботниковОрганизаций.Сотрудник = РаботникиОрганизаций.Сотрудник
	|			И ПлановыеУдержанияРаботниковОрганизаций.Организация = РаботникиОрганизаций.Организация
	|			И ПлановыеУдержанияРаботниковОрганизаций.Период &gt;= РаботникиОрганизаций.Период
	|			И (ПлановыеУдержанияРаботниковОрганизаций.Сотрудник.Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ФизическиеЛица.Физлицо
	|				ИЗ
	|					ВТФизическиеЛица КАК ФизическиеЛица))
	|			И (РаботникиОрганизаций.Сотрудник.ВидЗанятости &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизаций.Сотрудник.Физлицо,
	|	РаботникиОрганизаций.Сотрудник,
	|	РаботникиОрганизаций.Организация,
	|	ПлановыеУдержанияРаботниковОрганизаций.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановыеУдержанияРаботниковОрганизаций.Организация КАК Организация,
	|	ПлановыеУдержанияРаботниковОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|	ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	|	РаботникиОрганизаций.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор,
	|	ПлановыеУдержанияРаботниковОрганизаций.НомерСтроки,
	|	ПлановыеУдержанияРаботниковОрганизаций.Период КАК Период,
	|	ПлановыеУдержанияРаботниковОрганизаций.Действие,
	|	ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.ДействиеЗавершения,
	|	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор КАК ПервичныйДокумент,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Дата КАК ПервичныйДокумент_Дата,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Номер КАК ПервичныйДокумент_Номер,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Ответственный КАК ПервичныйДокумент_Ответственный,
	|	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Комментарий КАК ПервичныйДокумент_Комментарий,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель1,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта1,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель2,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта2,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель3,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта3,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель4,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта4,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель5,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта5,
	|	ПлановыеУдержанияРаботниковОрганизаций.Показатель6,
	|	ПлановыеУдержанияРаботниковОрганизаций.Валюта6,
	|	ВЫБОР
	|		КОГДА ВТКонтрагенты.Контрагент = ""Контрагент""
	|			ТОГДА ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета.Наименование
	|		ИНАЧЕ ВТКонтрагенты.Контрагент
	|	КОНЕЦ КАК Контрагент
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРаботникиОрганизацийСрезПоследних КАК РаботникиОрганизацийСрезПоследних
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО РаботникиОрганизацийСрезПоследних.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|				И РаботникиОрганизацийСрезПоследних.Организация = РаботникиОрганизаций.Организация
	|				И РаботникиОрганизацийСрезПоследних.ПериодСреза = РаботникиОрганизаций.Период
	|				И (РаботникиОрганизаций.Сотрудник.ВидЗанятости &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|		ПО ПлановыеУдержанияРаботниковОрганизаций.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|			И ПлановыеУдержанияРаботниковОрганизаций.Организация = РаботникиОрганизацийСрезПоследних.Организация
	|			И ПлановыеУдержанияРаботниковОрганизаций.Период = РаботникиОрганизацийСрезПоследних.Период
	|			И (ПлановыеУдержанияРаботниковОрганизаций.Сотрудник.Физлицо В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ФизическиеЛица.Физлицо
	|				ИЗ
	|					ВТФизическиеЛица КАК ФизическиеЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКонтрагенты КАК ВТКонтрагенты
	|		ПО ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета.СпособОтраженияВБухучете = ВТКонтрагенты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ВидРасчета,
	|	ФизЛицо,
	|	Период
	|ИТОГИ ПО
	|	Организация,
	|	ФизЛицо,
	|	ВидРасчета";
	
	ИсходящиеДанные = Новый Структура;
	
	ПлановыеУдержания = Новый ТаблицаЗначений;
	ПлановыеУдержания.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ПлановыеУдержания.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ПлановыеУдержания.Колонки.Добавить("ВидРасчета");
	ПлановыеУдержания.Колонки.Добавить("ПлановыеУдержания");
	
	Запрос = Новый Запрос;
	Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);	
	Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;
	//Запрос.УстановитьПараметр("ДатаСреза", НачалоГода(Параметры.ДатаНачалаПереносаРасчетныхДанных));
	//Запрос.Текст = Запросы.УчетнаяПолитикаПоНДФЛ_Выборка.Текст;
	//
	//ИсходящиеДанные.Вставить("УчетнаяПолитикаПоНДФЛ",	Запрос.Выполнить().Выгрузить());
	
	Запрос.Текст = ТекстЗапроса;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.Организация;
		Для Каждого ДанныеПоФизЛицу Из ДанныеПоОрганизации.Строки Цикл
			ФизЛицо = ДанныеПоФизЛицу.ФизЛицо;
			Для Каждого ДанныеПоВидуРасчета Из ДанныеПоФизЛицу.Строки Цикл
				ВидРасчета = ДанныеПоВидуРасчета.ВидРасчета;
				НоваяСтрока = ПлановыеУдержания.Добавить();
				НоваяСтрока.Организация		= Организация;
				НоваяСтрока.ФизЛицо			= ФизЛицо;
				НоваяСтрока.ПлановыеУдержания = ДанныеПоВидуРасчета.Строки;
				НоваяСтрока.ВидРасчета = ВидРасчета;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ИсходящиеДанные.Вставить("ПлановыеУдержания", ПлановыеУдержания);</Текст>
			</Алгоритм>
			<Алгоритм Имя="УченыеЗванияФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.УченыеЗванияФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("УченыеЗванияФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="УченыеСтепениФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.УченыеСтепениФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("УченыеСтепениФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="УчетнаяПолитикаОрганизаций_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Запрос.Текст = Запросы.УчетнаяПолитикаОрганизаций_Выборка.Текст;
Если  Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.ДатаНачалаПереносаРасчетныхДанных);
Иначе
	Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;
ИсходящиеДанные.Вставить("УчетнаяПолитикаОрганизаций",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="УчетнаяПолитикаПоНДФЛ_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Запрос.Текст = Запросы.УчетнаяПолитикаПоНДФЛ_Выборка.Текст;
Если  Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Запрос.УстановитьПараметр("ДатаСреза", НачалоГода(Параметры.ДатаНачалаПереносаРасчетныхДанных));
Иначе
	Запрос.УстановитьПараметр("ДатаСреза", НачалоГода(Параметры.МесяцНачалаЭксплуатации));
КонецЕсли;

ИсходящиеДанные.Вставить("УчетнаяПолитикаПоНДФЛ",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ФактическиеОтпуска_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый ТаблицаЗначений;
ИсходящиеДанные.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИсходящиеДанные.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
ИсходящиеДанные.Колонки.Добавить("ФактическиеОтпускаОрганизаций");
ИсходящиеДанные.Колонки.Добавить("НеОчищатьДокумент");

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.Текст = Запросы.ФактическиеОтпускаОрганизаций_Выборка.Текст;
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
		НоваяСтрока = ИсходящиеДанные.Добавить();
		НоваяСтрока.Организация						= Организация;
		НоваяСтрока.ПериодРегистрации				= ДанныеПоПериодуРегистрации.ПериодОтбор;
		НоваяСтрока.ФактическиеОтпускаОрганизаций	= ДанныеПоПериодуРегистрации.Строки;
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ФизическиеЛица_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы								= Параметры.Алгоритмы;
//Параметры								= ИсходящиеДанные;
//Запросы									= ВходящиеДанные;
ПринудительноОбновитьВременнуюТаблицу	= 0;

ФизическиеЛица_ВременнаяТаблица = Неопределено;
Если ЗначениеЗаполнено(ПринудительноОбновитьВременнуюТаблицу) = 0 Тогда
	Параметры.ВременноеХранилище.Свойство("ФизическиеЛица_ВременнаяТаблица", ФизическиеЛица_ВременнаяТаблица);
КонецЕсли;

Если ФизическиеЛица_ВременнаяТаблица = Неопределено Тогда
	
	Запрос = Новый Запрос;
	
	Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);
		Запрос.УстановитьПараметр("Сотрудник",							Параметры.СотрудникДляОтладки);
		Запрос.УстановитьПараметр("ПоВсемСотрудникам",					Параметры.СотрудникДляОтладки.Пустая());
		Запрос.УстановитьПараметр("ФизическоеЛицо",						Параметры.ФизическоеЛицоДляОтладки);
		Запрос.УстановитьПараметр("ПоВсемФизическимЛицам",				Параметры.ФизическоеЛицоДляОтладки.Пустая());
		
		Запрос.Текст = Запросы.ФизическиеЛица_ВременнаяТаблица.Текст;
		Запрос.Выполнить();
		
	Иначе
		
		//Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("РаботникиОрганизации_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);
		Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);
		Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;
		//Запрос.УстановитьПараметр("ДатаСреза",		КонецМесяца(ДобавитьМесяц(Параметры.МесяцНачалаЭксплуатации,-1)));
		//Запрос.УстановитьПараметр("НачалогоГода",	НачалоГода(Параметры.МесяцНачалаЭксплуатации));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТРаботникиОрганизации.ФизическоеЛицо КАК Физлицо
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	ВТРаботникиОрганизации КАК ВТРаботникиОрганизации";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	ФизическиеЛица_ВременнаяТаблица = Запрос.МенеджерВременныхТаблиц;
	
	Параметры.ВременноеХранилище.Вставить("ФизическиеЛица_ВременнаяТаблица", ФизическиеЛица_ВременнаяТаблица);
	
КонецЕсли;</Текст>
				<Параметры>ПринудительноОбновитьВременнуюТаблицу</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ФИОФизическихЛиц_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходящиеДанные = Новый Структура;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;

Запрос.Текст = Запросы.ФИОФизическихЛиц_Выборка.Текст;

ИсходящиеДанные.Вставить("ФИОФизическихЛиц",	Запрос.Выполнить().Выгрузить());</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
		</Группа>
		<Группа Имя="АлгоритмыДляЗагрузки">
			<Алгоритм Имя="ВидИспользованияРабочегоВремени_Записать" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбновитьПовторноИспользуемыеЗначения();

СсылкаНаОбъект = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени." + ОписаниеВидаВремени.ИмяПредопределенныхДанных);

Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
	ВидВремениОбъект = Справочники.ВидыИспользованияРабочегоВремени.СоздатьЭлемент();
	ВидВремениСсылка = Справочники.ВидыИспользованияРабочегоВремени.ПолучитьСсылку();
	ВидВремениОбъект.УстановитьСсылкуНового(ВидВремениСсылка);
	
	ЗаполнитьЗначенияСвойств(ВидВремениОбъект, ОписаниеВидаВремени);
	
	Если Не ЗначениеЗаполнено(ВидВремениОбъект.ОсновноеВремя) Тогда
		ВидВремениОбъект.ОсновноеВремя = ВидВремениСсылка;
	КонецЕсли;
	
	ВидВремениОбъект.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	СсылкаНаОбъект = ВидВремениСсылка;
КонецЕсли;</Текст>
				<Параметры>ОписаниеВидаВремени</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВидИспользованияРабочегоВремени_Описание" ИспользуетсяПриЗагрузке="true">
				<Текст>ОписаниеВидаВремени = Новый Структура("ИмяПредопределенныхДанных, БуквенныйКод, Наименование, ЦифровойКод, ПолноеНаименование, РабочееВремя, Целосменное, ОсновноеВремя");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВидОтпуска_Записать" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбновитьПовторноИспользуемыеЗначения();

ВидОтпускаСсылка = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыОтпусков." + ОписаниеВидаОтпуска.ИмяПредопределенныхДанных);

Если Не ЗначениеЗаполнено(ВидОтпускаСсылка) Тогда 
	ВидОтпускаОбъект = Справочники.ВидыОтпусков.СоздатьЭлемент();

	ЗаполнитьЗначенияСвойств(ВидОтпускаОбъект, ОписаниеВидаОтпуска);
	ВидОтпускаОбъект.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	ВидОтпускаСсылка = ВидОтпускаОбъект.Ссылка;
КонецЕсли;

Если ИмяПредопределенныхДанных = ОписаниеВидаОтпуска.ИмяПредопределенныхДанных Тогда
	СсылкаНаОбъект = ВидОтпускаСсылка;
КонецЕсли;</Текст>
				<Параметры>ОписаниеВидаОтпуска</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВидОтпуска_Описание" ИспользуетсяПриЗагрузке="true">
				<Текст>ОписаниеВидаОтпуска = Новый Структура(
"Наименование,
|НаименованиеПолное,
|ОтпускБезОплаты,
|ОтпускЯвляетсяЕжегодным,
|ПредоставлятьОтпускВсемСотрудникам,
|КоличествоДнейВГод,
|СпособРасчетаОтпуска,
|ПредопределенныйВидОтпуска,
|ИмяПредопределенныхДанных,
|ОсновнойОтпуск");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВидыИспользованияРабочегоВремени_ПоляПоиска" ИспользуетсяПриЗагрузке="true">
				<Текст>ИмяПредопределенныхДанных = "";
Наименование = СвойстваПоиска.Получить("Наименование");
Если Найти(Наименование, "{ИмяПредопределенныхДанных}") = 1 Тогда
	Наименование = Сред(Наименование, 28);
	СвойстваПоиска.Вставить("Наименование", Наименование);
	ИмяПредопределенныхДанных	= Наименование;
КонецЕсли;

Если Не ПустаяСтрока(ИмяПредопределенныхДанных) Тогда
	ОписаниеВидаВремени = "";
	Выполнить(Алгоритмы.ВидИспользованияРабочегоВремени_Описание);
	
	Если ИмяПредопределенныхДанных = "РаботаНочныеЧасы" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "РаботаНочныеЧасы";
		ОписаниеВидаВремени.Наименование				= "Ночные часы";
		ОписаниеВидаВремени.БуквенныйКод				= "Н";
		ОписаниеВидаВремени.ЦифровойКод					= "02";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Ночные часы';uk='Нічні години'");
		ОписаниеВидаВремени.РабочееВремя				= Истина;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "РаботаВечерниеЧасы" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "РаботаВечерниеЧасы";
		ОписаниеВидаВремени.Наименование				= "Вечерние часы";
		ОписаниеВидаВремени.БуквенныйКод				= "ВЧ";
		ОписаниеВидаВремени.ЦифровойКод					= "41";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Вечерние часы';uk='Вечірні години'");
		ОписаниеВидаВремени.РабочееВремя				= Истина;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	Иначе
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= ИмяПредопределенныхДанных;
		
	КонецЕсли;
	
	ОписаниеВидаВремени.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
	Выполнить(Алгоритмы.ВидИспользованияРабочегоВремени_Записать);
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВидыИспользованияРабочегоВремениКФ_ПоляПоиска" ИспользуетсяПриЗагрузке="true">
				<Текст>ИмяПредопределенныхДанных = "";
Наименование = СвойстваПоиска.Получить("Наименование");
Если Найти(Наименование, "{ИмяПредопределенныхДанных}") = 1 Тогда
	Наименование = Сред(Наименование, 28);
	СвойстваПоиска.Вставить("Наименование", Наименование);
	ИмяПредопределенныхДанных	= Наименование;
КонецЕсли;

Если Не ПустаяСтрока(ИмяПредопределенныхДанных) Тогда
	ОписаниеВидаВремени = "";
	Выполнить(Алгоритмы.ВидИспользованияРабочегоВремени_Описание);
	
	Если ИмяПредопределенныхДанных = "РаботаНочныеЧасы" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "РаботаНочныеЧасы";
		ОписаниеВидаВремени.Наименование				= "Ночные часы";
		ОписаниеВидаВремени.БуквенныйКод				= "Н";
		ОписаниеВидаВремени.ЦифровойКод					= "02";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Ночные часы';uk='Нічні години'");
		ОписаниеВидаВремени.РабочееВремя				= Истина;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "Праздники" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "Праздники";
		ОписаниеВидаВремени.Наименование				= "Праздники";
		ОписаниеВидаВремени.БуквенныйКод				= "РВ";
		ОписаниеВидаВремени.ЦифровойКод					= "03";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Праздники';uk='Свята'");
		ОписаниеВидаВремени.РабочееВремя				= Истина;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "Сверхурочные" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "Сверхурочные";
		ОписаниеВидаВремени.Наименование				= "Сверхурочно";
		ОписаниеВидаВремени.БуквенныйКод				= "С";
		ОписаниеВидаВремени.ЦифровойКод					= "04";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Продолжительность сверхурочной работы';uk='Тривалість понаднормової роботи'");
		ОписаниеВидаВремени.РабочееВремя				= Истина;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "ОтпускНаОбучениеНеоплачиваемый" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "ОтпускНаОбучениеНеоплачиваемый";
		ОписаниеВидаВремени.Наименование				= "Отпуск дополнительный (неоплачиваемый учебный)";
		ОписаниеВидаВремени.БуквенныйКод				= "УД";
		ОписаниеВидаВремени.ЦифровойКод					= "13";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Отпуск дополнительный (неоплачиваемый учебный)';uk='Відпустка додаткова (неоплачувана навчальна)'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "НеоплачиваемыйОтпускПоРазрешениюРаботодателя" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "НеоплачиваемыйОтпускПоРазрешениюРаботодателя";
		ОписаниеВидаВремени.Наименование				= "Отпуск неоплачиваемый с разрешения работодателя";
		ОписаниеВидаВремени.БуквенныйКод				= "ДО";
		ОписаниеВидаВремени.ЦифровойКод					= "16";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Отпуск неоплачиваемый с разрешения работодателя';uk='Неоплачувана відпустка з дозволу роботодавця'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "НеоплачиваемыйОтпускПоЗаконодательству" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "НеоплачиваемыйОтпускПоЗаконодательству";
		ОписаниеВидаВремени.Наименование				= "Отпуск неоплачиваемый в соответствии с законом";
		ОписаниеВидаВремени.БуквенныйКод				= "ОЗ";
		ОписаниеВидаВремени.ЦифровойКод					= "17";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Отпуск неоплачиваемый в соответствии с законом';uk='Відпустка неоплачувана згідно з законом'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "НеоплачиваемыйДополнительныйОтпуск" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "НеоплачиваемыйДополнительныйОтпуск";
		ОписаниеВидаВремени.Наименование				= "Доп. отпуск без сохранения заработной платы";
		ОписаниеВидаВремени.БуквенныйКод				= "ДБ";
		ОписаниеВидаВремени.ЦифровойКод					= "18";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Доп. отпуск без сохранения заработной платы';uk='Дод. відпустка без збереження заробітної плати'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "Прогулы" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "Прогулы";
		ОписаниеВидаВремени.Наименование				= "Прогул";
		ОписаниеВидаВремени.БуквенныйКод				= "ПР";
		ОписаниеВидаВремени.ЦифровойКод					= "24";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Прогул';uk='Прогул'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "НеявкиПоНевыясненнымПричинам" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "НеявкиПоНевыясненнымПричинам";
		ОписаниеВидаВремени.Наименование				= "Неявки по невыясненным причинам";
		ОписаниеВидаВремени.БуквенныйКод				= "НН";
		ОписаниеВидаВремени.ЦифровойКод					= "30";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Неявки по невыясненным причинам';uk='Неявки з нез''ясованих причин'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "ПростойПоВинеРаботодателя" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "ПростойПоВинеРаботодателя";
		ОписаниеВидаВремени.Наименование				= "Время простоя по вине работодателя";
		ОписаниеВидаВремени.БуквенныйКод				= "РП";
		ОписаниеВидаВремени.ЦифровойКод					= "31";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Время простоя по вине работодателя';uk='Час простою з вини роботодавця'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "Простой" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "Простой";
		ОписаниеВидаВремени.Наименование				= "Простой, не зависящий от работодателя и работника";
		ОписаниеВидаВремени.БуквенныйКод				= "НП";
		ОписаниеВидаВремени.ЦифровойКод					= "32";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Простой, не зависящий от работодателя и работника';uk='Простій, не залежний від роботодавця і працівника'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "ПростойПоВинеРаботника" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "ПростойПоВинеРаботника";
		ОписаниеВидаВремени.Наименование				= "Простой по вине работника";
		ОписаниеВидаВремени.БуквенныйКод				= "ВП";
		ОписаниеВидаВремени.ЦифровойКод					= "33";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Простой по вине работника';uk='Простій з вини працівника'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "КормлениеРебенка" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "КормлениеРебенка";
		ОписаниеВидаВремени.Наименование				= "Перерывы для кормления ребенка";
		ОписаниеВидаВремени.БуквенныйКод				= "КР";
		ОписаниеВидаВремени.ЦифровойКод					= "37";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Перерывы для кормления ребенка, предоставляемые работающим женщинам, имеющим детей в возрасте до полутора лет';uk='Перерви для годування дитини, які надаються працюючим жінкам, які мають дітей віком до півтора років'");
		ОписаниеВидаВремени.РабочееВремя				= Ложь;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	ИначеЕсли ИмяПредопределенныхДанных = "РаботаВечерниеЧасы" Тогда
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= "РаботаВечерниеЧасы";
		ОписаниеВидаВремени.Наименование				= "Вечерние часы";
		ОписаниеВидаВремени.БуквенныйКод				= "ВЧ";
		ОписаниеВидаВремени.ЦифровойКод					= "41";
		ОписаниеВидаВремени.ПолноеНаименование			= НСтр("ru='Вечерние часы';uk='Вечірні години'");
		ОписаниеВидаВремени.РабочееВремя				= Истина;
		ОписаниеВидаВремени.Целосменное					= Ложь;
		
	Иначе
		ОписаниеВидаВремени.ИмяПредопределенныхДанных	= ИмяПредопределенныхДанных;
		
	КонецЕсли;
	
	Выполнить(Алгоритмы.ВидИспользованияРабочегоВремени_Записать);
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВидыОтпусков_ПоляПоиска" ИспользуетсяПриЗагрузке="true">
				<Текст>ИмяПредопределенныхДанных = "";
Наименование = СвойстваПоиска.Получить("Наименование");
Если Найти(Наименование, "{ИмяПредопределенныхДанных}") = 1 Тогда
	Наименование = Сред(Наименование, 28);
	СвойстваПоиска.Вставить("Наименование", Наименование);
	ИмяПредопределенныхДанных	= Наименование;
КонецЕсли;

Если Не ПустаяСтрока(ИмяПредопределенныхДанных) Тогда
	Если ИмяПредопределенныхДанных = "ОтпускБезОплатыПоТКРФ"
	Или ИмяПредопределенныхДанных = "ОтпускЗаСвойСчет"
	Или ИмяПредопределенныхДанных = "ОтпускБезОплатыУчебный" Тогда
		ОписаниеВидаОтпуска = "";
		Выполнить(Алгоритмы.ВидОтпуска_Описание);
		ОписаниеВидаОтпуска.ПредопределенныйВидОтпуска	= Истина;
		ОписаниеВидаОтпуска.ИмяПредопределенныхДанных	= "ОтпускБезОплатыПоТКРФ";
		ОписаниеВидаОтпуска.Наименование				= НСтр("ru='Отпуск без оплаты';uk='Відпустка без оплати'");
		ОписаниеВидаОтпуска.НаименованиеПолное			= НСтр("ru='Отпуск без оплаты';uk='Відпустка без оплати'");
		ОписаниеВидаОтпуска.ОтпускБезОплаты				= Истина;
		Выполнить(Алгоритмы.ВидОтпуска_Записать);
		
		ОписаниеВидаОтпуска = "";
		Выполнить(Алгоритмы.ВидОтпуска_Описание);
		ОписаниеВидаОтпуска.ПредопределенныйВидОтпуска	= Истина;
		ОписаниеВидаОтпуска.ИмяПредопределенныхДанных	= "ОтпускЗаСвойСчет";
		ОписаниеВидаОтпуска.Наименование				= НСтр("ru='Отпуск за свой счет';uk='Відпустка за свій рахунок'");
		ОписаниеВидаОтпуска.НаименованиеПолное			= НСтр("ru='Отпуск за свой счет';uk='Відпустка за свій рахунок'");
		ОписаниеВидаОтпуска.ОтпускБезОплаты				= Истина;
		Выполнить(Алгоритмы.ВидОтпуска_Записать);
		
		ОписаниеВидаОтпуска = "";
		Выполнить(Алгоритмы.ВидОтпуска_Описание);
		ОписаниеВидаОтпуска.ПредопределенныйВидОтпуска	= Истина;
		ОписаниеВидаОтпуска.ИмяПредопределенныхДанных	= "ОтпускБезОплатыУчебный";
		ОписаниеВидаОтпуска.Наименование				= НСтр("ru='Дополнительный учебный отпуск без оплаты';uk='Додаткова навчальна відпустка без оплати'");
		ОписаниеВидаОтпуска.НаименованиеПолное			= НСтр("ru='Дополнительный учебный отпуск без оплаты';uk='Додаткова навчальна відпустка без оплати'");
		ОписаниеВидаОтпуска.ОтпускБезОплаты				= Истина;
		Выполнить(Алгоритмы.ВидОтпуска_Записать);
		
	ИначеЕсли ИмяПредопределенныхДанных = "ОтпускУчебный" Тогда
		ОписаниеВидаОтпуска = "";
		Выполнить(Алгоритмы.ВидОтпуска_Описание);
		ОписаниеВидаОтпуска.ПредопределенныйВидОтпуска	= Истина;
		ОписаниеВидаОтпуска.ИмяПредопределенныхДанных	= "ОтпускУчебный";
		ОписаниеВидаОтпуска.Наименование				= НСтр("ru='Дополнительный учебный отпуск (оплачиваемый)';uk='Додаткова навчальна відпустка (оплачувана)'");
		ОписаниеВидаОтпуска.НаименованиеПолное			= НСтр("ru='Дополнительный учебный отпуск (оплачиваемый)';uk='Додаткова навчальна відпустка (оплачувана)'");
		ОписаниеВидаОтпуска.СпособРасчетаОтпуска		= Перечисления.СпособыРасчетаОтпуска.ВКалендарныхДнях;
		ОписаниеВидаОтпуска.ОтпускБезОплаты				= Ложь;
		ОписаниеВидаОтпуска.ОтпускЯвляетсяЕжегодным		= Ложь;
		Выполнить(Алгоритмы.ВидОтпуска_Записать);
		
	ИначеЕсли ИмяПредопределенныхДанных = "ОтпускПострадавшимВАварииЧАЭС" Тогда
		ОписаниеВидаОтпуска = "";
		Выполнить(Алгоритмы.ВидОтпуска_Описание);
		ОписаниеВидаОтпуска.ПредопределенныйВидОтпуска	= Истина;
		ОписаниеВидаОтпуска.ИмяПредопределенныхДанных	= "ОтпускПострадавшимВАварииЧАЭС";
		ОписаниеВидаОтпуска.Наименование				= НСтр("ru='Дополнительный отпуск пострадавшим на ЧАЭС';uk='Додаткова відпустка постраждалим на ЧАЕС'");
		ОписаниеВидаОтпуска.НаименованиеПолное			= НСтр("ru='Дополнительный отпуск пострадавшим в аварии на ЧАЭС';uk='Додаткова відпустка постраждалим в аварії на ЧАЕС'");
		ОписаниеВидаОтпуска.СпособРасчетаОтпуска		= Перечисления.СпособыРасчетаОтпуска.ВКалендарныхДнях;
		ОписаниеВидаОтпуска.ОтпускБезОплаты				= Истина;
		ОписаниеВидаОтпуска.ОтпускЯвляетсяЕжегодным		= Истина;
		Выполнить(Алгоритмы.ВидОтпуска_Записать);
		
	Иначе
		ОписаниеВидаОтпуска = "";
		Выполнить(Алгоритмы.ВидОтпуска_Описание);
		ОписаниеВидаОтпуска.ПредопределенныйВидОтпуска	= Истина;
		ОписаниеВидаОтпуска.ИмяПредопределенныхДанных	= ИмяПредопределенныхДанных;
		Выполнить(Алгоритмы.ВидОтпуска_Записать);
		
	КонецЕсли;
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВидыРасчета_УстановитьОчередностьРасчета" ИспользуетсяПриЗагрузке="true">
				<Текст>ПакетВидовРасчета = Новый Соответствие;

Запрос = Новый Запрос;

Запрос.Текст =
"ВЫБРАТЬ
|	Начисления.Ссылка КАК ВидРасчета
|ИЗ
|	ПланВидовРасчета.Начисления КАК Начисления
|ГДЕ
|	НЕ Начисления.КатегорияНачисленияИлиНеоплаченногоВремени = ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ЗаработокНаВремяТрудоустройства)";
Результат = Запрос.Выполнить();

Если Не Результат.Пустой() Тогда
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПакетВидовРасчета.Вставить(Выборка.ВидРасчета, Выборка.ВидРасчета.ПолучитьОбъект());
	КонецЦикла;
	
	РасчетЗарплатыРасширенный.ДозаполнитьВидыРасчета(ПакетВидовРасчета);
	
	РасчетЗарплатыРасширенный.ЗаписатьПакетВидовРасчета(ПакетВидовРасчета, Ложь);
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВыполнитьОбновлениеНастроекПрограммы" ИспользуетсяПриЗагрузке="true">
				<Текст>
Обновить = Ложь;

Если Параметры.ОбновитьНастройкиПрограммы = 1 Тогда
	
	ПараметрыНастроекЗК = ЗарплатаКадрыРасширенный.ПараметрыНастройкиЗарплатаКадрыПоУмолчанию();
	ПараметрыНастроекЗК.НастройкиШтатногоРасписания.ИспользоватьШтатноеРасписание = Ложь;
	Обновить = Истина;
	
ИначеЕсли Параметры.ОбновитьНастройкиПрограммы = 2 Тогда  // упрощенный перенос
	
	ПараметрыНастроекЗК = ЗарплатаКадрыРасширенный.ОписаниеПараметровНастройкиЗарплатаКадры();
	Обновить = Истина;
	
КонецЕсли;

Если Обновить Тогда
	
	ПараметрыНастроекЗК.ПараметрыПланВидовРасчета = РасчетЗарплатыРасширенный.ОписаниеПараметровПланаВидовРасчета();
	ПараметрыНастроекЗК.ПараметрыПланВидовРасчета.НачальнаяНастройкаПрограммы = Истина;
	
	// СохраненныеНастройкиХранилище = Константы.НачальнаяНастройкаПрограммыОтветыПользователя.Получить();
	Настройки = Неопределено;
	
	Если Настройки = Неопределено Тогда
		Настройки = Новый Структура;
	Иначе
		
		Если Настройки.Свойство("СсылкиНачисленийУдержаний") Тогда
			ЗаполнитьЗначенияСвойств(ПараметрыНастроекЗК.ПараметрыПланВидовРасчета.СсылкиНачисленийУдержаний, Настройки.СсылкиНачисленийУдержаний);
		КонецЕсли;
		
		Если Настройки.Свойство("СсылкиВидыДокументовВводДанныхДляРасчетаЗарплаты") Тогда
			ЗаполнитьЗначенияСвойств(ПараметрыНастроекЗК.ПараметрыПланВидовРасчета.СсылкиВидыДокументовВводДанныхДляРасчетаЗарплаты, Настройки.СсылкиВидыДокументовВводДанныхДляРасчетаЗарплаты);
		КонецЕсли;
		
		Если Настройки.Свойство("СсылкиПоказателиРасчетаЗарплаты") Тогда
			ЗаполнитьЗначенияСвойств(ПараметрыНастроекЗК.ПараметрыПланВидовРасчета.СсылкиПоказателиРасчетаЗарплаты, Настройки.СсылкиПоказателиРасчетаЗарплаты);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ЗаписатьНастройкиЗарплатаКадры(ПараметрыНастроекЗК);
	
	ПараметрыПланВидовРасчета = ПараметрыНастроекЗК.ПараметрыПланВидовРасчета;
	
	Настройки.Вставить("СсылкиНачисленийУдержаний", Новый ФиксированнаяСтруктура(ПараметрыПланВидовРасчета.СсылкиНачисленийУдержаний));
	Настройки.Вставить("СсылкиВидыДокументовВводДанныхДляРасчетаЗарплаты", Новый ФиксированнаяСтруктура(ПараметрыПланВидовРасчета.СсылкиВидыДокументовВводДанныхДляРасчетаЗарплаты));
	Настройки.Вставить("СсылкиПоказателиРасчетаЗарплаты", Новый ФиксированнаяСтруктура(ПараметрыПланВидовРасчета.СсылкиПоказателиРасчетаЗарплаты));
	
	//СохраняемыеЗначения = Новый ХранилищеЗначения(Настройки);
	//Константы.НачальнаяНастройкаПрограммыОтветыПользователя.Установить(СохраняемыеЗначения);
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="Документ_ПриЗагрузке" ИспользуетсяПриЗагрузке="true">
				<Текст>Для Каждого Регистр Из Объект.Движения Цикл
	Регистр.ОбменДанными.Загрузка	= Истина;
	Регистр.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
	Регистр.Записывать				= Истина;
КонецЦикла;</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Документ_РассчитатьФОТ" ИспользуетсяПриЗагрузке="true">
				<Текст>Документы[Объект.Метаданные().Имя].РассчитатьФОТПоДокументу(Объект);</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗаписатьНастройкиШтатногоРасписания" ИспользуетсяПриЗагрузке="true">
				<Текст>НастройкиШтатногоРасписания = Новый Структура("ИспользоватьШтатноеРасписание,НеИспользоватьШтатноеРасписание");
НастройкиШтатногоРасписания.ИспользоватьШтатноеРасписание = 1;
НастройкиШтатногоРасписания.НеИспользоватьШтатноеРасписание = 0;

Настройки = РегистрыСведений.НастройкиШтатногоРасписания.СоздатьМенеджерЗаписи();
ЗаполнитьЗначенияСвойств(Настройки, НастройкиШтатногоРасписания);
УправлениеШтатнымРасписанием.ЗаписатьНастройкиШтатногоРасписания(Настройки);</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗаполнитьПервоначальныеДанныеУчет" ИспользуетсяПриЗагрузке="true">
				<Текст>
Модуль = ОбщегоНазначения.ОбщийМодуль("УчетСтажаПФРРасширенный"); 
Модуль.ЗаполнитьПервоначальныеДанныеУчета();</Текст>
			</Алгоритм>
			<Алгоритм Имя="КонтактнаяИнформация_ПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбъектМодифицирован = Истина;

ДанныеЗаполнения = Новый ТаблицаЗначений;
ДанныеЗаполнения.Колонки.Добавить("Приемник");
ДанныеЗаполнения.Колонки.Добавить("ВидКИ");
ДанныеЗаполнения.Колонки.Добавить("СтруктураКИ");
ДанныеЗаполнения.Колонки.Добавить("КлючСтроки");

Для Каждого КИ Из Объект.КонтактнаяИнформация Цикл
	СтрокаЗаполнения = ДанныеЗаполнения.Добавить();
	СтрокаЗаполнения.Приемник		= Объект;
	СтрокаЗаполнения.ВидКИ			= КИ.Вид;
	СтрокаЗаполнения.СтруктураКИ	= УправлениеКонтактнойИнформациейКлиентСервер.СтруктураЗначенийПолей(КИ.ЗначенияПолей, КИ.Вид);
КонецЦикла;

УправлениеКонтактнойИнформацией.ЗаполнитьКонтактнуюИнформациюОбъектов(ДанныеЗаполнения);</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Начисление_ПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбъектМодифицирован = Истина;

СвойстваПоКатегориям	= Новый ФиксированноеСоответствие(ПланыВидовРасчета.Начисления.СвойстваНачисленийПоКатегориям());
СвойстваНачисления		= СвойстваПоКатегориям.Получить(Объект.КатегорияНачисленияИлиНеоплаченногоВремени);

Если Объект.СпособВыполненияНачисления = ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ЕжемесячноПриОкончательномРасчете")
	Или Объект.СпособВыполненияНачисления = ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ВЗаданныхМесяцахПриОкончательномРасчете") Тогда
	Объект.ВключатьВФОТ = Истина;
КонецЕсли;

ВыполнятьАлгоритм = Истина;

Если СвойстваНачисления = Неопределено Тогда
	// если не нашлось для соответствующей категории используем свойства по умолчанию
	СвойстваНачисления = СвойстваПоКатегориям.Получить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПустаяСсылка());
	ЗаполнитьЗначенияСвойств(Объект, СвойстваНачисления, , "СреднийЗаработокОбщий");
	ВыполнятьАлгоритм = Ложь;
КонецЕсли;

// Начиная с 22 версии показатели переименованы, соответственно переименуем их в формуле.
НомерРелизаПриемника = 0;
Выполнить(Алгоритмы.НомерРелизаКонфигурацииПриемника);
Если НомерРелизаПриемника &gt;= 22 Тогда
	Объект.ФормулаРасчета = СтрЗаменить(Объект.ФормулаРасчета, "НормаВремениВДнях", "НормаДнейПоГрафикуПолногоРабочегоВремени");
	Объект.ФормулаРасчета = СтрЗаменить(Объект.ФормулаРасчета, "НормаВремениВЧасах", "НормаЧасов");
КонецЕсли;

// Если категория определена, то свойства, которые она определяет недоступны для изменения пользователем
Если ВыполнятьАлгоритм И Не ЗначениеЗаполнено(Объект.КатегорияНачисленияИлиНеоплаченногоВремени) Тогда
	ВыполнятьАлгоритм = Ложь;
КонецЕсли;

// Поля структуры свойств, которые не являются непосредственно свойствами ПВР, 
// но содержат инструкции и/или другие сведения о категории начисления
Если ВыполнятьАлгоритм Тогда
	
	Инструкции = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СвойстваНачисления.ИменаИнструкций);
	НедоступныеСвойства = СвойстваНачисления.НедоступныеСвойства;
	
	Если Объект.КатегорияНачисленияИлиНеоплаченногоВремени = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда") Тогда 
		Если Объект.СпособВыполненияНачисления = ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ПоОтдельномуДокументуДоОкончательногоРасчета") Тогда 
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(НедоступныеСвойства, "ВключатьВСреднийЗаработокОбщий");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(НедоступныеСвойства, "СреднийЗаработокОбщий");
		Иначе 
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(НедоступныеСвойства, "ВидВремени");
		КонецЕсли;
	КонецЕсли;
	
	Объект.СреднийЗаработокФСС.Очистить();
	
	Для Каждого КлючИЗначение Из СвойстваНачисления Цикл
		ИмяСвойства = КлючИЗначение.Ключ;
		Если Инструкции.Найти(ИмяСвойства) &lt;&gt; Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если ИмяСвойства = "СреднийЗаработокОбщий" Тогда
						
		ИначеЕсли ИмяСвойства = "ВключатьВСреднийЗаработокОбщий" Тогда
						
		ИначеЕсли ИмяСвойства = "ВключатьВСреднийЗаработокФСС" Тогда
			
			Если КлючИЗначение.Значение Тогда
				НоваяСтрока = Объект.СреднийЗаработокФСС.Добавить();
				НоваяСтрока.ПорядокРасчета	= Перечисления.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2011;
				НоваяСтрока.Значение		= Перечисления.УчетНачисленийВСреднемЗаработкеФСС.Включать;
			КонецЕсли;
			
		//ИначеЕсли ИмяСвойства = "ВключатьВСреднийЗаработокФСС2010" Тогда
		//	
		//	ВключатьВСреднийЗаработокФСС = КлючИЗначение.Значение;
		//	Если ВключатьВСреднийЗаработокФСС = Неопределено Тогда
		//		ВключатьВСреднийЗаработокФСС = СвойстваНачисления.ВключатьВСреднийЗаработокФСС;	
		//	КонецЕсли;
		//	
		//	Если ВключатьВСреднийЗаработокФСС Тогда
		//		НоваяСтрока = Объект.СреднийЗаработокФСС.Добавить();
		//		НоваяСтрока.ПорядокРасчета	= Перечисления.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2010;
		//		НоваяСтрока.Значение		= Перечисления.УчетНачисленийВСреднемЗаработкеФСС.Включать;
		//	КонецЕсли
			
		ИначеЕсли ИмяСвойства = "ПериодРасчетаБазовыхНачислений" Тогда
			Если Не ЗначениеЗаполнено(Объект[ИмяСвойства]) Тогда
				Объект[ИмяСвойства] = Перечисления.ПериодыРасчетаБазовыхНачислений.ТекущийМесяц;
			КонецЕсли;
			
		ИначеЕсли ИмяСвойства = "ИндексируетсяСреднийЗаработокОбщий" Тогда
			
		ИначеЕсли НедоступныеСвойства.Найти(ИмяСвойства) &lt;&gt; Неопределено Тогда
			// Недоступные свойства пользователь изменять не может
			Объект[ИмяСвойства] = КлючИЗначение.Значение;
			
		ИначеЕсли (ИмяСвойства = "КодДоходаНДФЛ") Тогда	//И (ИмяСвойства = "ВидНачисленияДляНУ") Тогда
			// Эти свойства всегда переносятся, если они не находятся в списке недоступных
			
		Иначе
			// Остальные заполняются только если не заполнены в старой программе
			Попытка
				Если Не ЗначениеЗаполнено(Объект[ИмяСвойства]) Тогда
					Объект[ИмяСвойства] = КлючИЗначение.Значение;
				КонецЕсли;
			Исключение
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

ЗапрашиваемыеПоказатели = Новый Массив;
Для Каждого СтрокаПоказателя Из Объект.Показатели Цикл
	Если Не СтрокаПоказателя.ЗапрашиватьПриВводе Тогда
		Продолжить;
	КонецЕсли;
	ЗапрашиваемыеПоказатели.Добавить(СтрокаПоказателя.Показатель.Идентификатор);
КонецЦикла;

Объект.Показатели.Очистить();
РасчетЗарплатыРасширенный.ЗаполнитьТаблицуПоказателейВидаРасчета(Объект);

БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

Если ЗапрашиваемыеПоказатели.Количество() &gt; 0 Тогда
	ЗарплатаКадрыРасширенный.ОтметитьЗапрашиваемыеПоказатели(Объект, ЗапрашиваемыеПоказатели);
	
Иначе
	Если РасчетЗарплатыРасширенный.СпособРасчетаИспользуетФормулу(Объект.СпособРасчета) Тогда
		ПоказателиФормулы = ЗарплатаКадрыРасширенный.ПоказателиФормулы(Объект.ФормулаРасчета);
	Иначе
		ПоказателиФормулы = РасчетЗарплатыРасширенный.ПоказателиПредопределенногоСпособаРасчета(Объект.СпособРасчета);
	КонецЕсли;
	ЗапрашиваемыеПоказатели = ЗарплатаКадрыРасширенный.ЗапрашиваемыеПоказателиВидаРасчетаПоУмолчанию(Объект.Ссылка, ПоказателиФормулы);
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьОтметкуЗапрашиватьПриВводе(ЗапрашиваемыеПоказатели, Объект.Показатели);
	
КонецЕсли;</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НомерРелизаКонфигурацииПриемника" ИспользуетсяПриЗагрузке="true">
				<Текст>	
НомерРелизаПриемника = 23;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ОбновитьДанныеКорректировкиДнейДляРасчетаСреднего" ИспользуетсяПриЗагрузке="true">
				<Текст>
Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ВложенныйЗапрос.Сотрудник,
|	ВложенныйЗапрос.Период КАК Месяц
|ПОМЕСТИТЬ ВТСотрудникиМесяцы
|ИЗ
|	(ВЫБРАТЬ
|		Начисления.Сотрудник КАК Сотрудник,
|		Начисления.ПериодДействия КАК Период
|	ИЗ
|		РегистрРасчета.Начисления КАК Начисления
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ДанныеОВремениДляРасчетаСреднегоОбщий.Сотрудник,
|		НАЧАЛОПЕРИОДА(ДанныеОВремениДляРасчетаСреднегоОбщий.Период, МЕСЯЦ)
|	ИЗ
|		РегистрНакопления.ДанныеОВремениДляРасчетаСреднегоОбщий КАК ДанныеОВремениДляРасчетаСреднегоОбщий) КАК ВложенныйЗапрос";

Запрос.Выполнить();

УчетСреднегоЗаработка.ОбновитьДанныеКорректировкиДнейДляРасчетаОбщегоСреднегоЗаработка(Запрос.МенеджерВременныхТаблиц);</Текст>
			</Алгоритм>
			<Алгоритм Имя="ОбновитьУчетСтраховыхВзносов" ИспользуетсяПриЗагрузке="true">
				<Текст>Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ИсчисленныеСтраховыеВзносы.Регистратор,
|	ИсчисленныеСтраховыеВзносы.Организация,
|	НАЧАЛОПЕРИОДА(ИсчисленныеСтраховыеВзносы.Период, МЕСЯЦ) КАК Месяц
|ПОМЕСТИТЬ ВТВсеРегистраторы
|ИЗ
|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК ИсчисленныеСтраховыеВзносы
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Регистраторы.Регистратор КАК Регистратор,
|	Регистраторы.Месяц КАК Месяц,
|	Регистраторы.Организация
|ПОМЕСТИТЬ ВТРегистраторыКОбработке
|ИЗ
|	ВТВсеРегистраторы КАК Регистраторы
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносыПоФизическимЛицам
|		ПО Регистраторы.Регистратор = СтраховыеВзносыПоФизическимЛицам.Регистратор
|ГДЕ
|	СтраховыеВзносыПоФизическимЛицам.ОблагаетсяЕНВД ЕСТЬ NULL 
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ИсчисленныеСтраховыеВзносы.Регистратор,
|	ИсчисленныеСтраховыеВзносы.ФизическоеЛицо,
|	ИсчисленныеСтраховыеВзносы.Период,
|	ИсчисленныеСтраховыеВзносы.Организация
|ПОМЕСТИТЬ ВТФизическиеЛицаКОбработке
|ИЗ
|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК ИсчисленныеСтраховыеВзносы
|ГДЕ
|	ИсчисленныеСтраховыеВзносы.Регистратор В
|			(ВЫБРАТЬ
|				ВТРегистраторыКОбработке.Регистратор
|			ИЗ
|				ВТРегистраторыКОбработке)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ИсчисленныеСтраховыеВзносы.Регистратор КАК Регистратор,
|	НАЧАЛОПЕРИОДА(ИсчисленныеСтраховыеВзносы.Период, МЕСЯЦ) КАК Месяц,
|	ИсчисленныеСтраховыеВзносы.Организация КАК Организация
|ИЗ
|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК ИсчисленныеСтраховыеВзносы
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизическиеЛицаКОбработке КАК ФизическиеЛицаКОбработке
|		ПО ИсчисленныеСтраховыеВзносы.Период = ФизическиеЛицаКОбработке.Период
|			И ИсчисленныеСтраховыеВзносы.ФизическоеЛицо = ФизическиеЛицаКОбработке.ФизическоеЛицо
|			И (НЕ ИсчисленныеСтраховыеВзносы.Регистратор В
|					(ВЫБРАТЬ
|						ВТРегистраторыКОбработке.Регистратор
|					ИЗ
|						ВТРегистраторыКОбработке))
|			И ИсчисленныеСтраховыеВзносы.Организация = ФизическиеЛицаКОбработке.Организация
|ГДЕ
|	НЕ ФизическиеЛицаКОбработке.Регистратор ЕСТЬ NULL 
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	РегистраторыКОбработке.Регистратор,
|	РегистраторыКОбработке.Месяц,
|	РегистраторыКОбработке.Организация
|ИЗ
|	ВТРегистраторыКОбработке КАК РегистраторыКОбработке
|
|УПОРЯДОЧИТЬ ПО
|	Организация,
|	Месяц,
|	Регистратор";

Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
	
	Организация = Выборка.Организация;
	
	Пока Выборка.СледующийПоЗначениюПоля("Месяц") Цикл
		
		ПериодРегистрации = Выборка.Месяц;
		
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			
			Регистратор = Выборка.Регистратор;
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("Ссылка", Регистратор);
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо
			|ПОМЕСТИТЬ ВТФизическиеЛица
			|ИЗ
			|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК Начисления
			|ГДЕ
			|	Начисления.Регистратор = &amp;Ссылка";
			Запрос.Выполнить();
			
			УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОВзносах(Организация, ПериодРегистрации, Регистратор, Запрос.МенеджерВременныхТаблиц);
			СтраховыеВзносыПоФизическимЛицам = УчетСтраховыхВзносов.СтраховыеВзносыПоФизическимЛицам(Организация, ПериодРегистрации, Регистратор, Запрос.МенеджерВременныхТаблиц);
			
			НаборЗаписей = РегистрыНакопления.СтраховыеВзносыПоФизическимЛицам.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
			Для каждого СтрокаДанных Из СтраховыеВзносыПоФизическимЛицам Цикл
				НоваяСтрока = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
				НоваяСтрока.Организация = Организация;
				НоваяСтрока.Период = ПериодРегистрации;
			КонецЦикла;
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
						
		КонецЦикла;
		
	КонецЦикла;
	
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="Объект_ПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбъектМодифицирован = Ложь;
Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПереносДанных_ПриЗагрузке" ИспользуетсяПриЗагрузке="true">
				<Текст>Объект.Дата = ТекущаяДатаСеанса();

Объект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");

Для Каждого ИмяРегистра Из СписокРегистров Цикл
	Если Объект.ТаблицаРегистров.Найти(ИмяРегистра, "Имя") = Неопределено Тогда
		Объект.ТаблицаРегистров.Добавить().Имя = ИмяРегистра;
	КонецЕсли;
	Объект.Движения[ИмяРегистра].ОбменДанными.Загрузка	= Истина;
	Если ИмяРегистра = "ПлановыеНачисленияПоДоговорам" Или ИмяРегистра = "Начисления" Тогда
	Иначе	
		Объект.Движения[ИмяРегистра].ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
	КонецЕсли;
КонецЦикла;

Объект.Заполнить(Неопределено);</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПоказателиРасчетаЗарплаты_ПоляПоиска" ИспользуетсяПриЗагрузке="true">
				<Текст>Идентификатор = СвойстваПоиска.Получить("Идентификатор");

Если Идентификатор = "РазмерДоплатыЗаСовмещение" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РазмерДоплатыЗаСовмещение";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "РазмерДоплатыЗаСовмещение";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Размер доплаты за совмещение';uk='Розмір доплати за сумісництво'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='За совмещ.';uk='За сумісн.'");
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ОтработаноСверхурочно" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ОтработаноСверхурочно";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ОтработаноСверхурочно";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Отработано сверхурочно';uk='Відпрацьовано понаднормово'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Сверхурочно (всего)';uk='Понаднормово (всього)'");
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ОтработаноСверхурочноВПределах2Часов" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ОтработаноСверхурочноВПределах2Часов";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ОтработаноСверхурочноВПределах2Часов";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Отработано сверхурочно в пределах 2 часов';uk='Відпрацьовано понаднормово в межах 2 годин'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Сверхурочно (до 2 ч)';uk='Понаднормово (до 2 год)'");
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "СдельныйЗаработок" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "СдельныйЗаработок";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "СдельныйЗаработок";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Сдельный заработок';uk='Відрядний заробіток'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Сдельно';uk='Відрядно'");
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособВводаЗначений		= Перечисления.СпособыВводаЗначенийПоказателейРасчетаЗарплаты.НакапливаетсяПоОтдельнымЗначениям;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентЕжемесячнойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентЕжемесячнойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент ежемесячной премии';uk='Відсоток щомісячної премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% прем.';uk='% прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РазмерЕжемесячнойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РазмерЕжемесячнойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Сумма ежемесячной премии';uk='Сума щомісячної премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Сумма прем.';uk='Сума прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Разовое;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РазмерГодовойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РазмерГодовойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Сумма годовой премии';uk='Сума річної премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Сумма прем.';uk='Сума прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентГодовойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентГодовойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент годовой премии';uk='Відсоток річної премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% прем.';uk='% прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РазмерКвартальнойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор		= "РазмерКвартальнойПремии";
	ОписаниеПоказателя.Наименование			= НСтр("ru='Сумма квартальной премии';uk='Сума квартальної премії'");
	ОписаниеПоказателя.КраткоеНаименование	= НСтр("ru='Сумма прем.';uk='Сума прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.ТипПоказателя		= Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.Точность				= 2;
	ОписаниеПоказателя.Предопределенный		= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентКвартальнойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентКвартальнойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент квартальной премии';uk='Відсоток квартальної премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% прем.';uk='% прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РазмерРазовойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РазмерРазовойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Размер разовой премии';uk='Розмір разової премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Сумма прем.';uk='Сума прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентРазовойПремии" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентРазовойПремии";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент разовой премии';uk='Відсоток разової премії'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% прем.';uk='% прем.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Предопределенный			= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "Выручка" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "Выручка";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "Выручка";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Выручка';uk='Виторг'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Выручка';uk='Виторг'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентДоплатыЗаВыручку" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентДоплатыЗаВыручку";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ПроцентДоплатыЗаВыручку";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент доплаты за выручку';uk='Відсоток доплати за виторг'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% за выручку';uk='% за виторг'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.НазначениеПоказателя		= Перечисления.НазначенияПоказателейРасчетаЗарплаты.ДляОрганизации;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Числовой;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ВыполнениеПлана" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ВыполнениеПлана";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ВыполнениеПлана";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Выполнение плана';uk='Виконання плану'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Вып. плана';uk='Вик. плану'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Числовой;
	ОписаниеПоказателя.Точность					= 2;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "План" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "План";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "План";
	ОписаниеПоказателя.Наименование				= НСтр("ru='План';uk='План'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='План';uk='План'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.НазначениеПоказателя		= Перечисления.НазначенияПоказателейРасчетаЗарплаты.ДляПодразделения;
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Числовой;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентПрофсоюзныхВзносов" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентПрофсоюзныхВзносов";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ПроцентПрофсоюзныхВзносов";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент профсоюзных взносов';uk='Відсоток профспілкових внесків'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% профвзносов';uk='% профвнесків'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РасчетнаяБазаСтраховыеВзносы" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РасчетнаяБазаСтраховыеВзносы";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "РасчетнаяБазаСтраховыеВзносы";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Расчетная база страховых взносов';uk='Розрахункова база страхових внесків'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Расч. база ДСВ';uk='Розрах. база ДСВ'");
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентДСВ" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентДСВ";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ПроцентДСВ";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент добровольных страховых взносов';uk='Відсоток добровільних страхових внесків'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% ДСВ';uk='% ДСВ'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентНПФ" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентНПФ";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ПроцентНПФ";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент добровольных взносов в НПФ';uk='Відсоток добровільних внесків у НПФ'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% взносов в НПФ';uk='% внесків в НПФ'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РазмерВозмещенияУщерба" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РазмерВозмещенияУщерба";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "РазмерВозмещенияУщерба";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Размер возмещения ущерба';uk='Розмір відшкодування збитків'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='сум. возм. ущерба';uk='сум. відш. збитку'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.Точность					= 2;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ВремяВЧасах" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ВремяВЧасах";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ВремяВЧасах";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Время в часах';uk='Час в годинах'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления	= Ложь;
	ОписаниеПоказателя.Точность					= 3;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ВремяВДняхЧасах" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ВремяВДняхЧасах";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ВремяВДняхЧасах";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Время в днях (или часах)';uk='Час в днях (або годинах)'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Время в днях (часах)';uk='Час в днях (годинах)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления	= Ложь;
	ОписаниеПоказателя.Точность					= 3;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ТарифнаяСтавкаЧасовая" Тогда
	ПараметрыПланаВидовРасчета = РасчетЗарплатыРасширенный.ОписаниеПараметровПланаВидовРасчета();
	ПараметрыПоказателей = ПараметрыПланаВидовРасчета.ПараметрыПоказателей;
	
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ТарифнаяСтавкаЧасовая";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ТарифнаяСтавкаЧасовая";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Тарифная ставка (часовая)';uk='Тарифна ставка (годинна)'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Час. тариф';uk='Год. тариф'");
	ОписаниеПоказателя.ТипПоказателя			= Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность					= ПараметрыПоказателей.ОкладТарифЧасовойТочность;
	ОписаниеПоказателя.ВидТарифнойСтавки		= Перечисления.ВидыТарифныхСтавок.ЧасоваяТарифнаяСтавка;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "НормаВремениВЧасах" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	
	НомерРелизаПриемника = 0;
	Выполнить(Алгоритмы.НомерРелизаКонфигурацииПриемника);
	Если НомерРелизаПриемника &gt;= 22 Тогда
		ОписаниеПоказателя.Идентификатор 			= "НормаЧасов";
		ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "НормаВремениВЧасах";
		ОписаниеПоказателя.Наименование 			= НСтр("ru='Норма часов';uk='Норма годин'");
		ОписаниеПоказателя.КраткоеНаименование 		= ОписаниеПоказателя.Наименование;
	Иначе
		ОписаниеПоказателя.Идентификатор			= "НормаВремениВЧасах";
		ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "НормаВремениВЧасах";
		ОписаниеПоказателя.Наименование				= НСтр("ru='Норма времени в часах';uk='Норма часу в годинах'");
		ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Норма (час.)';uk='Норма (год.)'");
	КонецЕсли;	
	ОписаниеПоказателя.ОтображатьВДокументахНачисления	= Ложь;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "НормаВремениВДнях" Тогда      
	НомерРелизаПриемника = 0;
	Выполнить(Алгоритмы.НомерРелизаКонфигурацииПриемника);
	Если НомерРелизаПриемника &gt;= 22 Тогда
		ОписаниеПоказателя = "";
		Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
		ОписаниеПоказателя.Идентификатор 			= "НормаДнейПоГрафикуПолногоРабочегоВремени";
		ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "НормаВремениВДнях";
		ОписаниеПоказателя.Наименование 			= НСтр("ru='Норма дней по графику полного рабочего времени';uk='Норма днів за графіком повного робочого часу'");
		ОписаниеПоказателя.КраткоеНаименование 		= ОписаниеПоказателя.Наименование;
		Выполнить(Алгоритмы.Показатель_Записать);
	КонецЕсли;	
	
ИначеЕсли Идентификатор = "ОтработаноЧасов" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ОтработаноЧасов";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ОтработаноЧасов";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Отработано часов, в т.ч. сверхурочно';uk='Відпрацьовано годин, в т. ч. понаднормово'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Отраб. (час.)';uk='Відпрац. (год.)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления	= Ложь;
	ОписаниеПоказателя.Точность					= 3;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ВремяВЧасах" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ВремяВЧасах";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ВремяВЧасах";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Время в часах';uk='Час в годинах'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления	= Ложь;
	ОписаниеПоказателя.Точность					= 3;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "РайонныйКоэффициент" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "РайонныйКоэффициент";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "РайонныйКоэффициент";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Районный коэффициент';uk='Районний коефіцієнт'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='Районн. коэфф.';uk='Район. коеф.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность = 2;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "СевернаяНадбавка" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "СевернаяНадбавка";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "СевернаяНадбавка";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Северная надбавка';uk='Північна надбавка'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% сев. надб.';uk='% півн. надб.'");
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентДоплатыЗаРаботуВВечернееВремя" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентДоплатыЗаРаботуВВечернееВремя";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ПроцентДоплатыЗаРаботуВВечернееВремя";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент доплаты за работу в вечернее время';uk='Відсоток доплати за роботу у вечірній час'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% допл. за вечерн.';uk='% допл. за вечірн.'");
	ОписаниеПоказателя.НазначениеПоказателя		= Перечисления.НазначенияПоказателейРасчетаЗарплаты.ДляОрганизации;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "ПроцентДоплатыЗаРаботуВНочноеВремя" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор			= "ПроцентДоплатыЗаРаботуВНочноеВремя";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "ПроцентДоплатыЗаРаботуВНочноеВремя";
	ОписаниеПоказателя.Наименование				= НСтр("ru='Процент доплаты за работу в ночное время';uk='Відсоток доплати за роботу в нічний час'");
	ОписаниеПоказателя.КраткоеНаименование		= НСтр("ru='% допл. за ночн.';uk='% допл. за нічн.'");
	ОписаниеПоказателя.НазначениеПоказателя		= Перечисления.НазначенияПоказателейРасчетаЗарплаты.ДляОрганизации;
	ОписаниеПоказателя.СпособПримененияЗначений	= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	Выполнить(Алгоритмы.Показатель_Записать);
	
ИначеЕсли Идентификатор = "СтоимостьДняЧаса" Тогда
	ОписаниеПоказателя = "";
	Выполнить(Алгоритмы.Показатель_Описание_ДляЗагрузки);
	ОписаниеПоказателя.Идентификатор		= "СтоимостьДняЧаса";
	ОписаниеПоказателя.ИмяПредопределенногоПоказателя 	= "СтоимостьДняЧаса";
	ОписаниеПоказателя.Наименование			= НСтр("ru='Стоимость часа (или дня)';uk='Вартість години (або дня)'");
	ОписаниеПоказателя.КраткоеНаименование	= НСтр("ru='Час. или дн. стоим.';uk='Год. або дн. варт.'");
	ОписаниеПоказателя.Точность				= 3;
	Выполнить(Алгоритмы.Показатель_Записать);
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="Показатель_Записать" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбновитьПовторноИспользуемыеЗначения();

Если ОписаниеПоказателя.Предопределенный Тогда
	СсылкаНаОбъект = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты." + ОписаниеПоказателя.ИмяПредопределенногоПоказателя);
Иначе 
	СсылкаНаОбъект = ЗарплатаКадрыРасширенный.ПоказательПоИдентификатору(ОписаниеПоказателя.Идентификатор);
КонецЕсли;

Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
	ПоказательОбъект = Справочники.ПоказателиРасчетаЗарплаты.СоздатьЭлемент();
	Если ОписаниеПоказателя.Предопределенный Тогда 
		ПоказательОбъект.ИмяПредопределенныхДанных		= ОписаниеПоказателя.ИмяПредопределенногоПоказателя;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПоказательОбъект, ОписаниеПоказателя);
	ПоказательОбъект.Наименование							= ?(ПустаяСтрока(ОписаниеПоказателя.Наименование), ОписаниеПоказателя.Идентификатор, ОписаниеПоказателя.Наименование);
	ПоказательОбъект.КраткоеНаименование					= ?(ПустаяСтрока(ОписаниеПоказателя.КраткоеНаименование), ПоказательОбъект.Наименование, ОписаниеПоказателя.КраткоеНаименование);
	ПоказательОбъект.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	СсылкаНаОбъект = ПоказательОбъект.Ссылка;
КонецЕсли;</Текст>
				<Параметры>ОписаниеПоказателя</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Показатель_Описание_ДляЗагрузки" ИспользуетсяПриЗагрузке="true">
				<Текст>ОписаниеПоказателя = Новый Структура("
|Наименование,
|КраткоеНаименование,
|Идентификатор,
|ИмяПредопределенногоПоказателя,
|НазначениеПоказателя,
|СпособПримененияЗначений,
|ТипПоказателя,
|СпособВводаЗначений,
|ВидСтажа,
|Точность,
|ОтображатьВДокументахНачисления,
|ЗначениеРассчитываетсяАвтоматически,
|ВидТарифнойСтавки,
|НачальнаяНастройка,
|Предопределенный");

ОписаниеПоказателя.НазначениеПоказателя					= Перечисления.НазначенияПоказателейРасчетаЗарплаты.ДляСотрудника;
ОписаниеПоказателя.ТипПоказателя						= Перечисления.ТипыПоказателейРасчетаЗарплаты.Числовой;
ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически	= Истина;
ОписаниеПоказателя.СпособПримененияЗначений				= Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Разовое;
ОписаниеПоказателя.СпособВводаЗначений					= Перечисления.СпособыВводаЗначенийПоказателейРасчетаЗарплаты.ВводитсяЕдиновременно;
ОписаниеПоказателя.ОтображатьВДокументахНачисления		= Истина;
ОписаниеПоказателя.НачальнаяНастройка					= Ложь;
ОписаниеПоказателя.Предопределенный						= Истина;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПроцентыСевернойНадбавкиФЛ_Преобразовать" ИспользуетсяПриЗагрузке="true">
				<Текст>	Если ПараметрыОбъекта &lt;&gt; Неопределено тогда
		
		ФизическоеЛицо			= Объект.ФизическоеЛицо;
		ТаблицаПроцентовСН		= ЗначениеИзСтрокиВнутр(ПараметрыОбъекта.Получить("ТаблицаПроцентовСН"));
		
		// Создаём набор записей СН по Физлицу.
		НаборЗаписейДанныхОПроцентеСН = РегистрыСведений.ПроцентыСевернойНадбавкиФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписейДанныхОПроцентеСН.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		
		Для каждого СтрокаТП Из ТаблицаПроцентовСН Цикл
			
			// Удаляем все записи с периодом больше текущего
			МассивУдаляемыхЗаписей = Новый Массив;
			Для Каждого Запись Из НаборЗаписейДанныхОПроцентеСН Цикл
				Если Запись.Период &gt;= СтрокаТП.Период  Тогда
					МассивУдаляемыхЗаписей.Добавить(Запись);
				КонецЕсли;
			КонецЦикла;
			
			Для каждого Запись Из МассивУдаляемыхЗаписей Цикл
				НаборЗаписейДанныхОПроцентеСН.Удалить(Запись);
			КонецЦикла;
			
			// Формируем текущую запись регистра
			НоваяЗапись = НаборЗаписейДанныхОПроцентеСН.Добавить();
			НоваяЗапись.ФизическоеЛицо 						= ФизическоеЛицо;
			НоваяЗапись.Период 								= СтрокаТП.Период;
			НоваяЗапись.ПроцентСевернойНадбавки 			= СтрокаТП.Процент;
			
			// Получаем массив изменений процента СевернойНадбавки.
			ПорядокНачисления 		= СтрокаТП.ПорядокИсчисленияПроцентаСевернойНадбавки;
			ПроцентНадбавки 		= СтрокаТП.Процент; 
			Период 					= СтрокаТП.Период;

			МассивПериодов = Новый Массив;
			
			// Расчитываем проценты северного стажа
			ОписаниеШкалы = Перечисления.ПорядокНачисленияСеверныхНадбавок.ОписаниеШкалыПоПорядкуНачисления(ПорядокНачисления);
			Для каждого УчастокШкалы Из ОписаниеШкалы Цикл
				Пока ПроцентНадбавки &lt; УчастокШкалы.Ограничение Цикл
					Период = ДобавитьМесяц(Период, УчастокШкалы.РазмерПериода);
					ПроцентНадбавки = Мин(ПроцентНадбавки + УчастокШкалы.РазмерПрироста, УчастокШкалы.Ограничение);
					Элемент = Новый Структура("Период, Процент", Период, ПроцентНадбавки);
					МассивПериодов.Добавить(Элемент);
				КонецЦикла;
			КонецЦикла;
			МассивИзмененийПроцента = МассивПериодов;
			
			
			// Формируем новые записи регистра.								
			Для каждого Элемент Из МассивИзмененийПроцента Цикл
				НоваяЗапись = НаборЗаписейДанныхОПроцентеСН.Добавить();
				НоваяЗапись.ФизическоеЛицо 						= ФизическоеЛицо;
				НоваяЗапись.Период 								= Элемент.Период;
				НоваяЗапись.ПроцентСевернойНадбавки 			= Элемент.Процент;
			КонецЦикла;
		КонецЦикла;
		
		// Записываем набор.
		НаборЗаписейДанныхОПроцентеСН.Записать();
		
	КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="Регистр_ПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбъектМодифицирован = Ложь;
НаборЗаписей.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");</Текст>
				<Параметры>НаборЗаписей</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Удержание_ПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
				<Текст>ОбъектМодифицирован = Истина;

СвойстваПоКатегориям	= Новый ФиксированноеСоответствие(ПланыВидовРасчета.Удержания.СвойстваУдержанийПоКатегориям());
СвойстваУдержания		= СвойстваПоКатегориям.Получить(Объект.КатегорияУдержания);

ВыполнятьАлгоритм = Истина;

Если СвойстваУдержания = Неопределено Тогда
	// если не нашлось для соответствующей категории используем свойства по умолчанию
	СвойстваУдержания = СвойстваПоКатегориям.Получить(Перечисления.КатегорииУдержаний.ПустаяСсылка());
	ВыполнятьАлгоритм = Ложь;
КонецЕсли;

Если ВыполнятьАлгоритм Тогда
	Инструкции = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СвойстваУдержания.ИменаИнструкций);
	НедоступныеСвойства = СвойстваУдержания.НедоступныеСвойства;
	
	Для Каждого КлючИЗначение Из СвойстваУдержания Цикл
		ИмяСвойства = КлючИЗначение.Ключ;
		Если Инструкции.Найти(ИмяСвойства) &lt;&gt; Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НедоступныеСвойства.Найти(ИмяСвойства) &lt;&gt; Неопределено Тогда
			// Недоступные свойства пользователь изменять не может
			Объект[ИмяСвойства] = КлючИЗначение.Значение;
			
		Иначе
			// Остальные заполняются только если не заполнены в старой программе
			Если Не ЗначениеЗаполнено(Объект[ИмяСвойства]) Тогда
				Объект[ИмяСвойства] = КлючИЗначение.Значение;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

ЗапрашиваемыеПоказатели = Новый Массив;
Для Каждого СтрокаПоказателя Из Объект.Показатели Цикл
	Если Не СтрокаПоказателя.ЗапрашиватьПриВводе Тогда
		Продолжить;
	КонецЕсли;
	ЗапрашиваемыеПоказатели.Добавить(СтрокаПоказателя.Показатель.Идентификатор);
КонецЦикла;

Объект.Показатели.Очистить();
РасчетЗарплатыРасширенный.ЗаполнитьТаблицуПоказателейВидаРасчета(Объект);

// Определяем нужна ли сама настройка (есть ли показатель среднего заработка)
ЕстьПоказателиСреднегоЗаработка = Ложь;
ПоказателиСреднегоЗаработка = УчетСреднегоЗаработкаКлиентСервер.ПоказателиРасчетаСреднегоЗаработка();
СреднийЗаработокОбщий = ПоказателиСреднегоЗаработка["СреднийЗаработокОбщий"];
Для Каждого СтрокаПоказателя Из Объект.Показатели Цикл
	Если СтрокаПоказателя.Показатель = СреднийЗаработокОбщий Тогда
		ЕстьПоказателиСреднегоЗаработка = Истина;
		Прервать;
	КонецЕсли;
КонецЦикла;
Если ЕстьПоказателиСреднегоЗаработка Тогда
	Если Не ЗначениеЗаполнено(Объект.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка) Тогда
		Объект.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоТрудовомуЗаконодательству;
	КонецЕсли;
	
	// Определяем доступность ввода произвольного периода
	ДоступностьВвода = Объект.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = Перечисления.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка.ПоКолдоговору;
	
	Если Не ДоступностьВвода Тогда
		Объект.КоличествоМесяцевРасчетаСреднегоЗаработка = 12;
	КонецЕсли;
КонецЕсли;

БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

Если ЗапрашиваемыеПоказатели.Количество() &gt; 0 Тогда
	ЗарплатаКадрыРасширенный.ОтметитьЗапрашиваемыеПоказатели(Объект, ЗапрашиваемыеПоказатели);
	
Иначе
	Если РасчетЗарплатыРасширенный.СпособРасчетаИспользуетФормулу(Объект.СпособРасчета) Тогда
		ПоказателиФормулы = ЗарплатаКадрыРасширенный.ПоказателиФормулы(Объект.ФормулаРасчета);
	Иначе
		ПоказателиФормулы = РасчетЗарплатыРасширенный.ПоказателиПредопределенногоСпособаРасчета(Объект.СпособРасчета);
	КонецЕсли;
	ЗапрашиваемыеПоказатели = ЗарплатаКадрыРасширенный.ЗапрашиваемыеПоказателиВидаРасчетаПоУмолчанию(Объект.Ссылка, ПоказателиФормулы);
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьОтметкуЗапрашиватьПриВводе(ЗапрашиваемыеПоказатели, Объект.Показатели);
	
КонецЕсли;</Текст>
				<Параметры>Объект</Параметры>
			</Алгоритм>
		</Группа>
		<Группа Имя="АлгоритмыДляПКОиПКС">
			<Алгоритм Имя="ВидыОтпусков_ПередВыгрузкой" ИспользуетсяПриЗагрузке="false">
				<Текст>ВходящиеДанные = Новый Структура("Наименование, ОтпускЯвляетсяЕжегодным, СпособРасчетаОтпуска, ПредоставлятьОтпускВсемСотрудникам, КоличествоДнейВГод");

Если ТипЗнч(Источник) = Тип("СправочникСсылка.ВидыОтпусков") Тогда
	Отпуск	= ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтп, "ВидОтпуска");
	
	Если Источник = Отпуск Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}Основной";
	Иначе
		ВходящиеДанные.Наименование	= Источник.Наименование;
	КонецЕсли;
	
	ВходящиеДанные.ОтпускЯвляетсяЕжегодным				= 1;
	ВходящиеДанные.СпособРасчетаОтпуска					= Неопределено;
	ВходящиеДанные.ПредоставлятьОтпускВсемСотрудникам	= Истина;
	ВходящиеДанные.КоличествоДнейВГод					= 0;
	
ИначеЕсли ТипЗнч(Источник) = Тип("Строка") Тогда
	
	Если (Источник = "ДополнительныйЕжегодныйОтпуск")
		Или (Источник = "ДополнительныйНаДетей")
		Или (Источник = "ДополнительныйПрочий")
		Или (Источник = "ОтпускЗаСвойСчет")
		Или (Источник = "ОтпускЗаСвойСчетПоСоглашению") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}" + Источник;
		
	ИначеЕсли (Источник = "ЕжегодныйОсновной") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}Основной";
		
	ИначеЕсли (Источник = "УчебныйОтпуск") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}ОтпускУчебный";
		
	ИначеЕсли (Источник = "УчебныйОтпускБезОплаты") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}ОтпускБезОплатыУчебный";
		
	ИначеЕсли (Источник = "ЧернобыльскийОтпуск") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}ОтпускПострадавшимВАварииЧАЭС";
		
	Иначе
		ВходящиеДанные.Наименование	= Источник;
	КонецЕсли;

	Если (Источник = "УчебныйОтпуск")
	Или (Источник = "УчебныйОтпускБезОплаты")
	Или (Источник = "ОтпускЗаСвойСчет")
	Или (Источник = "ОтпускЗаСвойСчетПоСоглашению") Тогда
		ВходящиеДанные.ОтпускЯвляетсяЕжегодным	= Ложь;
	Иначе
		ВходящиеДанные.ОтпускЯвляетсяЕжегодным	= Истина;
	КонецЕсли;
	
Иначе
	
	Если (Источник.Наименование = "ДополнительныйЕжегодныйОтпуск")
		Или (Источник.Наименование = "ДополнительныйНаДетей")
		Или (Источник.Наименование = "ДополнительныйПрочий")
		Или (Источник.Наименование = "ОтпускЗаСвойСчет")
		Или (Источник.Наименование = "ОтпускЗаСвойСчетПоСоглашению") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}" + Источник.Наименование;
		
	ИначеЕсли (Источник.Наименование = "ЕжегодныйОсновной") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}Основной";
		
	ИначеЕсли (Источник.Наименование = "УчебныйОтпуск") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}ОтпускУчебный";
		
	ИначеЕсли (Источник.Наименование = "УчебныйОтпускБезОплаты") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}ОтпускБезОплатыУчебный";
		
	ИначеЕсли (Источник.Наименование = "ЧернобыльскийОтпуск") Тогда
		ВходящиеДанные.Наименование	= "{ИмяПредопределенныхДанных}ОтпускПострадавшимВАварииЧАЭС";
		
	Иначе
		ВходящиеДанные.Наименование	= Источник.Наименование;
	КонецЕсли;

	ВходящиеДанные.ОтпускЯвляетсяЕжегодным				= 1;
	ВходящиеДанные.СпособРасчетаОтпуска					= Источник.СпособРасчетаОтпуска;
	ВходящиеДанные.ПредоставлятьОтпускВсемСотрудникам	= Источник.ПредоставлятьОтпускВсемСотрудникам;
	ВходящиеДанные.КоличествоДнейВГод					= Источник.КоличествоДнейВГод;

КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ИсполнительныйЛист_ТарифПлатежногоАгента_ПКО" ИспользуетсяПриЗагрузке="false">
				<Текст>Если ТипЗнч(Источник.ТарифПлатежногоАгента) = Тип("СправочникСсылка.ТарифыБанковНаДенежныеПереводы") Тогда
	ИмяПКО	= "ТарифыПлатежныхАгентов_ДенежныйПереводЧерезБанк";
	
ИначеЕсли ТипЗнч(Источник.ТарифПлатежногоАгента) = Тип("СправочникСсылка.ТарифыПочтовогоСбора") Тогда
	ИмяПКО	= "ТарифыПлатежныхАгентов_ПочтовыйСбор";
	
Иначе
	ИмяПКО	= "ТарифыПлатежныхАгентов_Число";
	
КонецЕсли;</Текст>
				<Параметры>Источник, ИмяПКО</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_ВидРасчета_ПКО" ИспользуетсяПриЗагрузке="false">
				<Текст>Если Не ЗначениеЗаполнено(РеквизитОбъекта) Или ТипЗнч(РеквизитОбъекта) = Тип("Строка") Тогда
	ТипПриемника	= "ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний";
	
Иначе
	НачислениеУдержание = РеквизитОбъекта;
	ВидПВР = "";
	Выполнить(Алгоритмы.НачислениеУдержание_ВидПВРНовый);

	Если ВидПВР = "ДополнительныеНачисления" Тогда
		ИмяПКО			= "Начисления_ДополнительныеТолькоСсылка";
		
	ИначеЕсли ВидПВР = "Удержания" Тогда
		ИмяПКО			= "УдержанияТолькоСсылка";
		
	ИначеЕсли ВидПВР = "ОсобыеНачисленияИУдержания" Тогда
		ТипПриемника		= "ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний";
		НачислениеУдержание = Неопределено;
		НачислениеУдержаниеСсылка = РеквизитОбъекта; 
		Выполнить(Алгоритмы.НачислениеУдержание_Преобразовать);
		Значение			= НачислениеУдержание.Наименование;
		
	Иначе
		ИмяПКО			= "Начисления_ОсновныеТолькоСсылка";
		
	КонецЕсли;

КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержания_ПередОбработкой" ИспользуетсяПриЗагрузке="false">
				<Текст>БазовыеВидыРасчета	= Источник.БазовыеВидыРасчета;

КоллекцияОбъектов	= Новый ТаблицаЗначений;
КоллекцияОбъектов.Колонки.Добавить("ВидРасчета");

ВыгруженныеВидыРасчета = Параметры.ВременноеХранилище.ВыгруженныеВидыРасчета;

Если ВыгруженныеВидыРасчета &lt;&gt; Неопределено Тогда
	
	Для НомерСтроки = 1 По ВыгруженныеВидыРасчета.Количество() Цикл
		ВыгруженныйВР = ВыгруженныеВидыРасчета[НомерСтроки-1];
		
		Если БазовыеВидыРасчета.Найти(ВыгруженныйВР.Ссылка) &lt;&gt; Неопределено Тогда
			СтрокаТЧ = КоллекцияОбъектов.Добавить();
			СтрокаТЧ.ВидРасчета	= ВыгруженныйВР;
		КонецЕсли;
	КонецЦикла;
	
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="Удержание_ДокументОснование_ПКО" ИспользуетсяПриЗагрузке="false">
				<Текст>Если ТипЗнч(ОбъектКоллекции.ДокументОснование) = Тип("ДокументСсылка.ИсполнительныйЛист") Тогда
	ИмяПКО	= "ИсполнительныйЛистТолькоСсылка";
	
Иначе
	Отказ = Истина;
	
КонецЕсли;</Текст>
				<Параметры>ОбъектКоллекции</Параметры>
			</Алгоритм>
		</Группа>
		<Группа Имя="АлгоритмыОбъектыПереносаДанных">
			<Алгоритм Имя="Структура_Получить" ИспользуетсяПриЗагрузке="false">
				<Текст>Попытка
	Возврат Структура[ИмяРеквизита];
Исключение
	Возврат Неопределено;
КонецПопытки;</Текст>
				<Параметры>Структура,ИмяРеквизита</Параметры>
			</Алгоритм>
		</Группа>
		<Группа Имя="АлгоритмыПреобразования">
			<Алгоритм Имя="ВзаиморасчетыПоЗаймамСотрудникам_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ВзаиморасчетыПоЗаймамСотрудникам = Новый ТаблицаЗначений;
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ДоговорЗайма");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("Организация");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ФизическоеЛицо");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("Период");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("СуммаЗайма");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("Проценты");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ВнеочередноеПогашение");
ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ВидДвижения");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВзаиморасчетыПоЗаймамСотрудникам_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = Новый Массив;

ВидДвиженияПриход	= ВидДвиженияНакопления.Приход;

Для СчРезультатов = 1 По ИсходящиеДанные.Количество() Цикл 
	СтрокаТаблицыРезультатов = ИсходящиеДанные[СчРезультатов-1];
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
	
	ПогашениеЗаймов	= СтрокаТаблицыРезультатов.ПогашениеЗаймовРаботникамиОрганизаций;
	
	ВзаиморасчетыПоЗаймамСотрудникам = Новый ТаблицаЗначений;
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ДоговорЗайма");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ФизическоеЛицо");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("Организация");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("Период");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("СуммаЗайма");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("Проценты");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ВнеочередноеПогашение");
	ВзаиморасчетыПоЗаймамСотрудникам.Колонки.Добавить("ВидДвижения");
	
	Для Сч = 1 По ПогашениеЗаймов.Количество() Цикл
		СтрокаТаблицы = ПогашениеЗаймов[Сч-1];
		
		Если (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) И (СтрокаТаблицы.ОсновнойДолг &lt;&gt; 0) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ВзаиморасчетыПоЗаймамСотрудникам.Добавить();
		НоваяСтрока.ДоговорЗайма			= СтрокаТаблицы.ДоговорЗайма;
		НоваяСтрока.ФизическоеЛицо			= СтрокаТаблицы.ФизЛицо;
		НоваяСтрока.Организация				= СтрокаТаблицы.Организация;
		НоваяСтрока.Период					= СтрокаТаблицы.Период;
		НоваяСтрока.СуммаЗайма				= СтрокаТаблицы.ОсновнойДолг;
		НоваяСтрока.Проценты				= СтрокаТаблицы.Проценты;
		НоваяСтрока.ВнеочередноеПогашение	= ?(СтрокаТаблицы.УдержаноИзЗарплаты = 1, 0, 1);
		НоваяСтрока.ВидДвижения				= СтрокаТаблицы.ВидДвижения;
	КонецЦикла;
	
	Если ВзаиморасчетыПоЗаймамСотрудникам.Количество() = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ВыборкаПоДокументу = Новый Структура;
	ВыборкаПоДокументу.Вставить("Номер",							"ЗС");
	ВыборкаПоДокументу.Вставить("Организация",						ОрганизацияОтбор);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации",				ПериодОтбор);
	ВыборкаПоДокументу.Вставить("ВзаиморасчетыПоЗаймамСотрудникам",	ВзаиморасчетыПоЗаймамСотрудникам);
	ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",				СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыборкаДанных.Добавить(ВыборкаПоДокументу);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВозвратИзОтпускаПоУходуЗаРебенком_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = ОбъектыПереносаДанных.НовыйОбъект("Структура");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ОсновнойСотрудник",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сотрудник",												"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Организация",												"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаВозврата",											"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДокументОснование",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ИзменитьНачисления",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "НачисленияУтверждены",									"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Ответственный",											"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Комментарий",												"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Дата",													"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Номер",													"");

Субконто = СЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ВозвратИзОтпускаПоУходуЗаРебенком_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеНачисленияРаботниковОрганизаций	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "ПлановыеНачисленияРаботниковОрганизаций");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ПлановыеНачисленияПоСотрудникам = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "Сотрудник");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ДатаСобытия");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ПлановыеНачисления");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ЯвляетсяОтпускомПоУходуЗаребенком");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ПособиеПоУходуЗаРебенкомДо1_5Лет");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ПособиеПоУходуЗаРебенкомДо3Лет");

ДлинаСуток		= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ДлинаСуток", Параметры.Алгоритмы);

ТекущийСотрудник				= "";
ТекущаяДатаСобытия				= "";
ПлановоеНачислениеПоСотруднику	= "";
Для НомерВыборки = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПлановыеНачисленияРаботниковОрганизаций) Цикл
	ПлановоеНачисление = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ПлановыеНачисленияРаботниковОрганизаций, НомерВыборки);
	
	Сотрудник = ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачисление.Сотрудник, "Ссылка");
	
	Если (ТекущийСотрудник &lt;&gt; Сотрудник) Или (ТекущаяДатаСобытия &lt;&gt; ПлановоеНачисление.Период) Тогда
		ПлановоеНачислениеПоСотруднику = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПлановыеНачисленияПоСотрудникам);
		ПлановоеНачислениеПоСотруднику.Сотрудник			= ПлановоеНачисление.Сотрудник;
		ПлановоеНачислениеПоСотруднику.ДатаСобытия			= ПлановоеНачисление.Период;
		ПлановоеНачислениеПоСотруднику.ПлановыеНачисления	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_Описание", Параметры.Алгоритмы);
		ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 0;
		
		ТекущийСотрудник	= Сотрудник;
		ТекущаяДатаСобытия	= ПлановоеНачисление.Период;
	КонецЕсли;
	
	Начисление		= ПлановоеНачисление.ВидРасчета;
	Ссылка			= ОбъектыПереносаДанных.Структура_Получить(Начисление, "Ссылка");
	СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(Начисление, "СпособРасчета");
	
	Если (ПлановоеНачисление.Действие = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_ВидДействия", Параметры.Алгоритмы, "Прекратить")) Тогда
		Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
		Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет")) Тогда
			ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 1;
			ПлановоеНачислениеПоСотруднику.ПособиеПоУходуЗаРебенкомДо1_5Лет		= ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(ПлановоеНачисление);
			
		ИначеЕсли (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет", "ОсновныеНачисления"))
		Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет")) Тогда
			ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 1;
			ПлановоеНачислениеПоСотруднику.ПособиеПоУходуЗаРебенкомДо3Лет		= ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(ПлановоеНачисление);
			
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПлановоеНачислениеПоСотруднику.ПлановыеНачисления), ПлановоеНачисление);
КонецЦикла;
	
Для НомерВыборки = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПлановыеНачисленияПоСотрудникам) Цикл
	СтрокаОтпускаПоУходуЗаРебенком = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ПлановыеНачисленияПоСотрудникам, НомерВыборки);
	
	Если СтрокаОтпускаПоУходуЗаРебенком.ЯвляетсяОтпускомПоУходуЗаребенком = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ВозвратИзОтпускаПоУходуЗаРебенком = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ВозвратИзОтпускаПоУходуЗаРебенком_Описание", Параметры.Алгоритмы);
	ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ДатаВозврата",											СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия);
	
	ПособиеПоУходуЗаРебенкомДо1_5Лет	= СтрокаОтпускаПоУходуЗаРебенком.ПособиеПоУходуЗаРебенкомДо1_5Лет;
	ПособиеПоУходуЗаРебенкомДо3Лет		= СтрокаОтпускаПоУходуЗаРебенком.ПособиеПоУходуЗаРебенкомДо3Лет;
	ВозвратИзОтпускаПоУходуЗаРебенком_СтраховойСлучай			= "";
	ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо			= "";
	ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение	= "";
	ВозвратИзОтпускаПоУходуЗаРебенком_ДатаОкончания				= Дата(1, 1, 1);
	Если ЗначениеЗаполнено(ПособиеПоУходуЗаРебенкомДо1_5Лет) = 1 Тогда
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Дата",												ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Дата"));
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Номер",											ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Номер"));
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Ответственный",									ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Ответственный"));
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Комментарий",										ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Комментарий"));
		
		ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо			= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "Сотрудник_Физлицо");
		ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ОбособленноеПодразделение");
		
		ПервичныйДокумент	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент");
		Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком") Тогда
			ВозвратИзОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент.ДокументОснование;
		Иначе
			ВозвратИзОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ПособиеПоУходуЗаРебенкомДо3Лет) = 1 Тогда
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Дата",												ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Дата"));
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Номер",											ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Номер"));
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Ответственный",									ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Ответственный"));
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Комментарий",										ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Комментарий"));
		
		ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо			= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "Сотрудник_Физлицо");
		ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ОбособленноеПодразделение");
		
		ПервичныйДокумент	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент");
		Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком") Тогда
			ВозвратИзОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент.ДокументОснование;
		Иначе
			ВозвратИзОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ОсновнойСотрудник",									СтрокаОтпускаПоУходуЗаРебенком.Сотрудник);
	ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Сотрудник",											ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо);
	ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Организация",											ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение);
	ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "НачисленияУтверждены",									1);
	
	СтраховойСлучай = ОбъектыПереносаДанных.НовыйОбъект("Структура");
	ОбъектыПереносаДанных.Структура_Установить(СтраховойСлучай, "Сотрудник",		ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо);
	ОбъектыПереносаДанных.Структура_Установить(СтраховойСлучай, "Организация",	ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение);
	ОбъектыПереносаДанных.Структура_Установить(СтраховойСлучай, "ДатаНачала",		ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтпускПоУходуЗаРебенком_ДатаНачала", Параметры.Алгоритмы, ВозвратИзОтпускаПоУходуЗаРебенком_СтраховойСлучай));
	ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ДокументОснование",									СтраховойСлучай);
	
	ПлановыеНачисленияСотрудника = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(ПлановыеНачисленияРаботниковОрганизаций, "Сотрудник, Период", СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия);
	Если ОбъектыПереносаДанных.Массив_Количество(ПлановыеНачисленияСотрудника) &lt;&gt; 0 Тогда
		ПлановыеНачисления				= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_Описание", Параметры.Алгоритмы);
		ПрименениеПлановыхНачислений	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПрименениеПлановыхНачислений_Описание", Параметры.Алгоритмы);
		Для Номер = 1 По ОбъектыПереносаДанных.Массив_Количество(ПлановыеНачисленияСотрудника) Цикл
			ПлановоеНачислениеСотрудника = ОбъектыПереносаДанных.Массив_Получить(ПлановыеНачисленияСотрудника, Номер);
			
			Начисление		= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачислениеСотрудника, "ВидРасчета");
			Ссылка			= ОбъектыПереносаДанных.Структура_Получить(Начисление, "Ссылка");
			СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(Начисление, "СпособРасчета");
			
			Если СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПоДоговоруФиксированнойСуммой") Тогда
				Продолжить;
			КонецЕсли;
			
			Если Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ОтпускПоУходуЗаРебенкомБезОплаты", "ОсновныеНачисления") Тогда
				ПрименениеНачислений = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПрименениеПлановыхНачислений);
				ПрименениеНачислений.Сотрудник				= СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
				ПрименениеНачислений.Период					= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
				ПрименениеНачислений.Применение				= 1;
				
				Продолжить;
			КонецЕсли;
			
			ПрекратитьНачисление = 1;
			Если (Ссылка &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
			И (СпособРасчета &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет"))
			И (Ссылка &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет", "ОсновныеНачисления"))
			И (СпособРасчета &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет")) Тогда
				ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ИзменитьНачисления",	1);
				ПрекратитьНачисление = 0;
			КонецЕсли;
			
			ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ОбновитьНачисление", Параметры.Алгоритмы,
				ПлановоеНачислениеСотрудника, ПлановыеНачисления, Номер,
				СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо, ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение,
				СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия, Дата(1, 1, 1),
				ПрекратитьНачисление);
		КонецЦикла;
		
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисления, "РабочееМесто");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисления, "ЯвляетсяОтпускомПоУходуЗаРебенком");
		Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПлановыеНачисления) Цикл
			ПлановоеНачисление = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ПлановыеНачисления, Номер);
			
			Ссылка			= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачисление.Начисление, "Ссылка");
			СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачисление.Начисление, "СпособРасчета");
			
			ЯвляетсяОтпускомПоУходуЗаРебенком = 0;
			Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
			Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет"))
			Или (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет", "ОсновныеНачисления"))
			Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет")) Тогда
				ЯвляетсяОтпускомПоУходуЗаРебенком = 1;
			КонецЕсли;
			
			ПлановоеНачисление.РабочееМесто							= ПлановоеНачисление.Сотрудник;
			ПлановоеНачисление.ЯвляетсяОтпускомПоУходуЗаРебенком	= ЯвляетсяОтпускомПоУходуЗаРебенком;
		КонецЦикла;
		
		ПоказателиДокумента					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы);
		ПоказателиРегистра					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы); // Для изменения обособленного подразделения
		ЗначенияСовокупныхТарифныхСтавок	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияСовокупныхТарифныхСтавок_Описание", Параметры.Алгоритмы);
		ПрименениеПоказателей				= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПрименениеПоказателей_Описание", Параметры.Алгоритмы);
		ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ЗаполнитьПоказатели", Параметры.Алгоритмы,
			ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
			СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, ВозвратИзОтпускаПоУходуЗаРебенком_ФизическоеЛицо, ВозвратИзОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение,
			СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия);
		
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Начисления",	ПлановыеНачисления);
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "Показатели",	ПоказателиДокумента);
		
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ПлановыеНачисления",															ПлановыеНачисления);
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ПрименениеПлановыхНачислений",													ПрименениеПлановыхНачислений);
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников",					ПоказателиРегистра);
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ЗначенияСовокупныхТарифныхСтавокСотрудников",									ЗначенияСовокупныхТарифныхСтавок);
		ОбъектыПереносаДанных.Структура_Установить(ВозвратИзОтпускаПоУходуЗаРебенком, "ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников",	ПрименениеПоказателей);
	КонецЕсли;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ВозвратИзОтпускаПоУходуЗаРебенком);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВоинскийУчетФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаВоинскийУчетФизическихЛиц	= ИсходящиеДанные.ВоинскийУчетФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаВоинскийУчетФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
Для Номер = 1 По ТаблицаВоинскийУчетФизическихЛиц.Количество() Цикл
	ВоинскийУчет = ТаблицаВоинскийУчетФизическихЛиц[Номер-1];
	
	ВоинскийУчет.ФизическоеЛицо	= ВоинскийУчет.ФизЛицо;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ВоинскийУчет));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВременноПребывающие_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаВременноПребывающие	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "ВременноПребывающие");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаВременноПребывающие, "ФизическоеЛицо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаВременноПребывающие, "ДействуетДо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаВременноПребывающие, "ГоловнаяОрганизация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаВременноПребывающие, "ПринятПоДолгосрочномуДоговоруПоОкончании");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаВременноПребывающие) Цикл
	ВременноПребывающий = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаВременноПребывающие, Номер);
	
	ВременноПребывающий.ФизическоеЛицо								= ВременноПребывающий.ФизЛицо;
	ВременноПребывающий.ДействуетДо									= ВременноПребывающий.ПериодЗавершения;
	ВременноПребывающий.ГоловнаяОрганизация							= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГоловнаяОрганизация", Параметры.Алгоритмы, ВременноПребывающий.Организация);
	ВременноПребывающий.ПринятПоДолгосрочномуДоговоруПоОкончании	= ?(ВременноПребывающий.ПринятПоДолгосрочномуДоговору = 1, 0, 1);
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(ВременноПребывающий));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВремяНачалаИОкончанияПоПериоду" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы				= ВидСубконто;
//ВремяНачалаПериода		= ПериодСменыСуточный.ВремяНачала;
//ВремяОкончанияПериода	= ПериодСменыСуточный.ВремяОкончания;
//ВремяНачалаГрафика		= НачалоВечерних1;
//ВремяОкончанияГрафика	= ОкончаниеВечерних1;

Если ВремяНачалаПериода &gt; ВремяОкончанияГрафика Тогда
	РезультатНачало		= НачалоДня(Дата(1, 1, 1));
	
ИначеЕсли ВремяОкончанияПериода &lt; ВремяНачалаГрафика Тогда
	РезультатНачало		= НачалоДня(Дата(1, 1, 1));
	
ИначеЕсли ВремяНачалаПериода &lt; ВремяНачалаГрафика Тогда
	РезультатНачало		= ВремяНачалаГрафика;
	
Иначе
	РезультатНачало		= ВремяНачалаПериода;
	
КонецЕсли;

Если ВремяНачалаПериода &gt; ВремяОкончанияГрафика Тогда
	РезультатОкончание	= НачалоДня(Дата(1, 1, 1));
	
ИначеЕсли ВремяОкончанияПериода &lt; ВремяНачалаГрафика Тогда
	РезультатОкончание	= НачалоДня(Дата(1, 1, 1));
	
ИначеЕсли ВремяОкончанияПериода &gt; ВремяОкончанияГрафика Тогда
	РезультатОкончание	= ВремяОкончанияГрафика;
	
Иначе
	РезультатОкончание	= ВремяОкончанияПериода;
	
КонецЕсли;

Результат = Новый Структура;
Результат.Вставить("Начало", 	РезультатНачало);
Результат.Вставить("Окончание", РезультатОкончание);</Текст>
				<Параметры>ВремяНачалаПериода, ВремяОкончанияПериода, ВремяНачалаГрафика, ВремяОкончанияГрафика</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ВыделитьКоэффициентыИзМассиваСтрок" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы	= ВидСубконто;
МассивСтрок	= ПараметрыДляВыделенияКоэф.МассивСтрок;
ИмяКолонки	= ПараметрыДляВыделенияКоэф.ИмяКолонки;

Коэффициенты = Новый Массив;

Для К = 1 По МассивСтрок.Количество() Цикл
	СтрокаИзМассива = МассивСтрок[К-1];
	ЗначениеКоэффициента = СтрокаИзМассива[ИмяКолонки];
	Коэффициенты.Добавить(ЗначениеКоэффициента);
КонецЦикла; </Текст>
				<Параметры>МассивСтрок, ИмяКолонки</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ГражданствоФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаГражданствоФизическихЛиц	= ИсходящиеДанные.ГражданствоФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаГражданствоФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
Для Номер = 1 По ТаблицаГражданствоФизическихЛиц.Количество() Цикл
	Гражданство = ТаблицаГражданствоФизическихЛиц[Номер-1];
	
	Гражданство.ФизическоеЛицо	= Гражданство.ФизЛицо;
	
	ВыборкаДанных.Добавить(Гражданство);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДоговорАвторскогоЗаказа_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = ОбъектыПереносаДанных.НовыйОбъект("Структура");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сотрудник",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ФизическоеЛицо",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Организация",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Подразделение",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ВидАвторскогоДоговора",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаНачала",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаОкончания",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "МесяцНачисления",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сумма",								"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "КодВычета",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "СпособОтраженияЗарплатыВБухучете",	"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ОтношениеКЕНВД",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "СуммаЕНВД",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Дата",								"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Номер",								"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Ответственный",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Комментарий",							"");

Субконто = СЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ДоговорЗаймаСотруднику_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ДоговорЗаймаСотруднику = Новый Структура;
договорЗаймаСотруднику.Вставить("Организация",							"");
договорЗаймаСотруднику.Вставить("ФизическоеЛицо",						"");
договорЗаймаСотруднику.Вставить("СпособПредоставления",					"");
договорЗаймаСотруднику.Вставить("Сумма",								"");
договорЗаймаСотруднику.Вставить("ДатаПредоставления",					"");
договорЗаймаСотруднику.Вставить("ДатаОкончания",						"");
договорЗаймаСотруднику.Вставить("ПроцентнаяСтавка",						"");
договорЗаймаСотруднику.Вставить("СпособПогашения",						"");
договорЗаймаСотруднику.Вставить("ВидПлатежей",							"");
договорЗаймаСотруднику.Вставить("РазмерПлатежа",						"");
договорЗаймаСотруднику.Вставить("РазмерПогашения",						"");
договорЗаймаСотруднику.Вставить("ДатаНачалаПогашения",					"");
договорЗаймаСотруднику.Вставить("ОграничениеПлатежа",					"");
договорЗаймаСотруднику.Вставить("МатериальнаяВыгодаОблагаетсяНДФЛ",		"");
договорЗаймаСотруднику.Вставить("ЗаемПоДоговоруВыданПолностью",			"");
договорЗаймаСотруднику.Вставить("ДатаВыдачи",							"");
договорЗаймаСотруднику.Вставить("ФормаРасчетов",						"");
договорЗаймаСотруднику.Вставить("ЗаемЧастичноПогашен",					"");
договорЗаймаСотруднику.Вставить("ПогашеннаяСуммаЗайма",					"");
договорЗаймаСотруднику.Вставить("ПогашенныеПроценты",					"");
договорЗаймаСотруднику.Вставить("Руководитель",							"");
договорЗаймаСотруднику.Вставить("ДолжностьРуководителя",				"");
договорЗаймаСотруднику.Вставить("Дата",									"");
договорЗаймаСотруднику.Вставить("Номер",								"");
договорЗаймаСотруднику.Вставить("Ответственный",						"");
договорЗаймаСотруднику.Вставить("Комментарий",							"");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ДоговорЗаймаСотруднику_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>СведенияОЗаймах					= ИсходящиеДанные.СведенияОЗаймах;

ВыборкаДанных	= Новый Массив;

ДлинаСуток = 86400;

Для НомерВыборки = 1 По СведенияОЗаймах.Количество() Цикл
	ЗаймСотруднику = СведенияОЗаймах[НомерВыборки-1];
	
	ДоговорЗаймаСотруднику = Неопределено;
	Выполнить(Алгоритмы.ДоговорЗаймаСотруднику_Описание);
	ДоговорЗаймаСотруднику.Вставить("Ссылка",								ЗаймСотруднику.Ссылка);
	ДоговорЗаймаСотруднику.Вставить("Организация",							ЗаймСотруднику.Организация);
	ДоговорЗаймаСотруднику.Вставить("ФизическоеЛицо",						ЗаймСотруднику.ФизЛицо);
	ДоговорЗаймаСотруднику.Вставить("СпособПредоставления",					"Единовременно");
	ДоговорЗаймаСотруднику.Вставить("Сумма",								ЗаймСотруднику.СуммаЗайма * ?(ЗаймСотруднику.КурсДокумента = 0, 1, ЗаймСотруднику.КурсДокумента) / ?(ЗаймСотруднику.КратностьДокумента = 0, 1, ЗаймСотруднику.КратностьДокумента));
	ДоговорЗаймаСотруднику.Вставить("ДатаПредоставления",					ЗаймСотруднику.НачалоПогашения);
	ДоговорЗаймаСотруднику.Вставить("ДатаОкончания",						ДобавитьМесяц(ЗаймСотруднику.НачалоПогашения, ЗаймСотруднику.СрокПогашения - 1));
	ДоговорЗаймаСотруднику.Вставить("ПроцентнаяСтавка",						ЗаймСотруднику.ПроцентЗаПользованиеЗаймом);
	ДоговорЗаймаСотруднику.Вставить("СпособПогашения",						ЗаймСотруднику.ПорядокПогашенияЗайма);
	ДоговорЗаймаСотруднику.Вставить("ВидПлатежей",							"ДифференцированныеПлатежи");
	ДоговорЗаймаСотруднику.Вставить("РазмерПогашения",						ЗаймСотруднику.СуммаЗайма / ?(ЗаймСотруднику.СрокПогашения = 0, 1, ЗаймСотруднику.СрокПогашения));
	ДоговорЗаймаСотруднику.Вставить("МатериальнаяВыгодаОблагаетсяНДФЛ",		0);
	ДоговорЗаймаСотруднику.Вставить("ЗаемПоДоговоруВыданПолностью",			1);
	ДоговорЗаймаСотруднику.Вставить("ДатаВыдачи",							НачалоДня(ЗаймСотруднику.Дата));
	ДоговорЗаймаСотруднику.Вставить("ФормаРасчетов",						"Наличная");
	ДоговорЗаймаСотруднику.Вставить("Дата",									ЗаймСотруднику.Дата);
	ДоговорЗаймаСотруднику.Вставить("Номер",								ЗаймСотруднику.Номер);
	ДоговорЗаймаСотруднику.Вставить("Ответственный",						ЗаймСотруднику.Ответственный);
	ДоговорЗаймаСотруднику.Вставить("Комментарий",							ЗаймСотруднику.Комментарий);
		
	УсловияДоговораЗаймаСотруднику = Неопределено;
	Выполнить(Алгоритмы.УсловияДоговораЗаймаСотруднику_Описание);
	УсловияДоговора = УсловияДоговораЗаймаСотруднику.Добавить();
	УсловияДоговора.ДоговорЗайма						= ЗаймСотруднику.Ссылка;
	УсловияДоговора.Организация							= ДоговорЗаймаСотруднику.Организация;
	УсловияДоговора.Период								= ДоговорЗаймаСотруднику.ДатаПредоставления;
	УсловияДоговора.Сумма								= ДоговорЗаймаСотруднику.Сумма;
	УсловияДоговора.ДатаОкончания						= ДоговорЗаймаСотруднику.ДатаОкончания;
	УсловияДоговора.ПроцентнаяСтавка					= ДоговорЗаймаСотруднику.ПроцентнаяСтавка;
	УсловияДоговора.РазмерПогашения						= ДоговорЗаймаСотруднику.РазмерПогашения;
	УсловияДоговора.МатериальнаяВыгодаОблагаетсяНДФЛ	= ДоговорЗаймаСотруднику.МатериальнаяВыгодаОблагаетсяНДФЛ;
	ДоговорЗаймаСотруднику.Вставить("УсловияДоговораЗаймаСотруднику",	УсловияДоговораЗаймаСотруднику);
	
	ВзаиморасчетыПоЗаймамСотрудникам = Неопределено;
	Выполнить(Алгоритмы.ВзаиморасчетыПоЗаймамСотрудникам_Описание);
	ВзаиморасчетыПоЗайму = ВзаиморасчетыПоЗаймамСотрудникам.Добавить();
	ВзаиморасчетыПоЗайму.ДоговорЗайма			= ЗаймСотруднику.Ссылка;
	ВзаиморасчетыПоЗайму.Организация			= ДоговорЗаймаСотруднику.Организация;
	ВзаиморасчетыПоЗайму.ФизическоеЛицо			= ДоговорЗаймаСотруднику.ФизическоеЛицо;
	ВзаиморасчетыПоЗайму.Период					= ДоговорЗаймаСотруднику.ДатаПредоставления;
	ВзаиморасчетыПоЗайму.СуммаЗайма				= ДоговорЗаймаСотруднику.Сумма;
	ВзаиморасчетыПоЗайму.ВнеочередноеПогашение	= 1;
	ВзаиморасчетыПоЗайму.ВидДвижения			= ВидДвиженияНакопления.Приход;
	ДоговорЗаймаСотруднику.Вставить("ВзаиморасчетыПоЗаймамСотрудникам",	ВзаиморасчетыПоЗаймамСотрудникам);
	
	ВыборкаДанных.Добавить(ДоговорЗаймаСотруднику);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДоговорНаВыполнениеРаботСФЛ_ВыгрузитьПоПравилу" ИспользуетсяПриЗагрузке="false">
				<Текст>Для Номер = 1 По ВыборкаДанных.Количество() Цикл
	ДанныеДляВыгрузки = ВыборкаДанных[Номер-1];
	
	АвторскийДоговор = ДанныеДляВыгрузки.ПВД_АвторскийДоговор;
	
	Если АвторскийДоговор = 1 Тогда
		ВыгрузитьПоПравилу(ДанныеДляВыгрузки, , , , "ДоговорАвторскогоЗаказа");
		
	Иначе
		ВыгрузитьПоПравилу(ДанныеДляВыгрузки, , , , "ДоговорРаботыУслуги");
		
	КонецЕсли;
КонецЦикла;

Отказ = 1;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДоговорНаВыполнениеРаботСФЛ_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеНачисленияРаботниковОрганизаций	= ИсходящиеДанные.ПлановыеНачисленияРаботниковОрганизаций;

ВыборкаДанных	= Новый Массив;

ДлинаСуток = 86400;

Для НомерВыборки = 1 По ПлановыеНачисленияРаботниковОрганизаций.Количество() Цикл
	ПлановоеНачислениеСотрудника = ПлановыеНачисленияРаботниковОрганизаций[НомерВыборки-1];
	
	Начисление		= ПлановоеНачислениеСотрудника.ВидРасчета;
	Ссылка			= Начисление["Ссылка"];
	СпособРасчета	= Начисление["СпособРасчета"];
	
	Если (Ссылка &lt;&gt; ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодряда) И (Ссылка &lt;&gt; ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодрядаСПД) Тогда
		Продолжить;
	КонецЕсли;
	
	КодДохода					= Начисление["ДоходНДФЛ"];
	//КодДоходаСтраховыеВзносы	= ОбъектыПереносаДанных.Структура_Получить(Начисление, "КодДоходаСтраховыеВзносы");
	
	АвторскийДоговор = 0;
	//Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "АвторскийДоговор", "ДополнительныеНачисления"))
	//Или (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ЛицензионныйДоговор", "ДополнительныеНачисления")) Тогда
	//	АвторскийДоговор = 1;
	//КонецЕсли;
	
	//Если АвторскийДоговор = 1 Тогда
	//	ДоговорНаВыполнениеРабот = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ДоговорАвторскогоЗаказа_Описание", Параметры.Алгоритмы);
	//Иначе
	ДоговорРаботыУслуг = Неопределено;
	Выполнить(Алгоритмы.ДоговорРаботыУслуги_Описание);
	ДоговорНаВыполнениеРабот = ДоговорРаботыУслуг;
	//КонецЕсли;
	
	Подразделение								= "";
	СпособОтраженияЗарплатыВБухучете			= "";
	//ОтношениеКЕНВД							= "";
	//ВидАвторскогоДоговора						= "";
	//КодВычета									= "";
	ЗаключенСоСтудентомРаботающимВСтудотряде	= 0;
	Если ТипЗнч(ПлановоеНачислениеСотрудника.ПервичныйДокумент) = Тип("ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом") Тогда
		Подразделение 						= ПлановоеНачислениеСотрудника.ПервичныйДокумент.ПодразделениеОрганизации;
		СпособОтраженияЗарплатыВБухучете 	= ПлановоеНачислениеСотрудника.ПервичныйДокумент.СпособОтраженияВБухучете;
		
		Попытка 
			Если ЗначениеЗаполнено(ПлановоеНачислениеСотрудника.ПервичныйДокумент.ВидРасчета) Тогда
				КодДохода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПлановоеНачислениеСотрудника.ПервичныйДокумент.ВидРасчета, "ДоходНДФЛ");
			КонецЕсли;
		Исключение
			//КодДохода = Неопределено;	
		КонецПопытки;
		ЗаключенСоСтудентомРаботающимВСтудотряде = Ложь;
		
		//Подразделение								= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГПХ_Подразделение", Параметры.Алгоритмы, ПлановоеНачислениеСотрудника.ПервичныйДокумент);
		//СпособОтраженияЗарплатыВБухучете			= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГПХ_СпособОтраженияЗарплатыВБухучете", Параметры.Алгоритмы, ПлановоеНачислениеСотрудника.ПервичныйДокумент);
		////ОтношениеКЕНВД								= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГПХ_ОтношениеКЕНВД", Параметры.Алгоритмы, ПлановоеНачислениеСотрудника.ПервичныйДокумент);
		//ВидАвторскогоДоговора						= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГПХ_ВидАвторскогоДоговора", Параметры.Алгоритмы, ПлановоеНачислениеСотрудника.ПервичныйДокумент);
		//КодВычета									= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГПХ_КодВычета", Параметры.Алгоритмы, ПлановоеНачислениеСотрудника.ПервичныйДокумент);
		//ЗаключенСоСтудентомРаботающимВСтудотряде	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГПХ_Студент", Параметры.Алгоритмы, ПлановоеНачислениеСотрудника.ПервичныйДокумент);
	КонецЕсли;
	
	ДоговорНаВыполнениеРабот.Вставить("ПВД_АвторскийДоговор",						0);
	ДоговорНаВыполнениеРабот.Вставить("Ссылка",										ПлановоеНачислениеСотрудника.ПервичныйДокумент);
	ДоговорНаВыполнениеРабот.Вставить("Сотрудник",									ПлановоеНачислениеСотрудника.Сотрудник);
	ДоговорНаВыполнениеРабот.Вставить("ФизическоеЛицо",								ПлановоеНачислениеСотрудника.Сотрудник_Физлицо);
	ДоговорНаВыполнениеРабот.Вставить("Организация",								ПлановоеНачислениеСотрудника.ОбособленноеПодразделение);
	ДоговорНаВыполнениеРабот.Вставить("Подразделение",								Подразделение);
	ДоговорНаВыполнениеРабот.Вставить("ДатаНачала",									ПлановоеНачислениеСотрудника.Период);
	ДоговорНаВыполнениеРабот.Вставить("ДатаОкончания",								"");
	ДоговорНаВыполнениеРабот.Вставить("Сумма",										ПлановоеНачислениеСотрудника.Показатель1);
	ДоговорНаВыполнениеРабот.Вставить("СпособОтраженияЗарплатыВБухучете",			СпособОтраженияЗарплатыВБухучете);
	//ДоговорНаВыполнениеРабот.Вставить("ОтношениеКЕНВД",								ОтношениеКЕНВД);
	//Если ОтношениеКЕНВД = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтношениеКЕНВДЗатратНаЗарплату", Параметры.Алгоритмы, "ЕНВД") Тогда
	//	ДоговорНаВыполнениеРабот.Вставить("СуммаЕНВД",									ПлановоеНачислениеСотрудника.Показатель1);
	//КонецЕсли;
	ДоговорНаВыполнениеРабот.Вставить("Дата",										ПлановоеНачислениеСотрудника.ПервичныйДокумент_Дата);
	ДоговорНаВыполнениеРабот.Вставить("Номер",										ПлановоеНачислениеСотрудника.ПервичныйДокумент_Номер);
	ДоговорНаВыполнениеРабот.Вставить("Ответственный",								ПлановоеНачислениеСотрудника.ПервичныйДокумент_Ответственный);
	ДоговорНаВыполнениеРабот.Вставить("Комментарий",								ПлановоеНачислениеСотрудника.ПервичныйДокумент_Комментарий);
	
	//Если АвторскийДоговор = 1 Тогда
	//	ДоговорНаВыполнениеРабот.Вставить("ВидАвторскогоДоговора",						ВидАвторскогоДоговора);
	//	ДоговорНаВыполнениеРабот.Вставить("КодВычета",									КодВычета);
	//Иначе
	ДоговорНаВыполнениеРабот.Вставить("КодДохода",									КодДохода);
	ДоговорНаВыполнениеРабот.Вставить("ЗаключенСоСтудентомРаботающимВСтудотряде",	ЗаключенСоСтудентомРаботающимВСтудотряде);
	//КонецЕсли;
	
	Если ТипЗнч(ПлановоеНачислениеСотрудника.ПервичныйДокумент) = Тип("ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом") Тогда
		Договор = ПлановоеНачислениеСотрудника.ПервичныйДокумент;
		
	Иначе
		Договор = Новый Структура;
		Договор.Вставить("Дата",			ПлановоеНачислениеСотрудника.ПервичныйДокумент_Дата);
		Договор.Вставить("Номер",			ПлановоеНачислениеСотрудника.ПервичныйДокумент_Номер);
		Договор.Вставить("Сотрудник",		ПлановоеНачислениеСотрудника.Сотрудник);
		Договор.Вставить("Организация",		ПлановоеНачислениеСотрудника.ОбособленноеПодразделение);
		Договор.Вставить("ДатаНачала",		ПлановоеНачислениеСотрудника.Период);
		
	КонецЕсли;
	
	ПериодыДействияДоговоровГПХ = Неопределено;
	Выполнить(Алгоритмы.ПериодыДействияДоговоровГПХ_Описание);
	
	ПериодДействияДоговора = ПериодыДействияДоговоровГПХ.Добавить();
	ЗаполнитьЗначенияСвойств(ПериодДействияДоговора, ДоговорНаВыполнениеРабот);
	ПериодДействияДоговора.ДокументОснование	= Договор;
	ДоговорНаВыполнениеРабот.Вставить("ПериодыДействияДоговоровГражданскоПравовогоХарактера",	ПериодыДействияДоговоровГПХ);
	
	ПлановыеНачисленияПоДоговорам = Неопределено;
	Выполнить(Алгоритмы.ПлановыеНачисленияПоДоговорам_Описание);
	
	ПлановоеНачислениеПоДоговору = ПлановыеНачисленияПоДоговорам.Добавить();
	ЗаполнитьЗначенияСвойств(ПлановоеНачислениеПоДоговору, ДоговорНаВыполнениеРабот);
	ПлановоеНачислениеПоДоговору.Договор					= Договор;
	ПлановоеНачислениеПоДоговору.ДоговорАкт					= Договор;
	ПлановоеНачислениеПоДоговору.КодДохода					= КодДохода;
	ПлановоеНачислениеПоДоговору.КодДоходаСтраховыеВзносы	= "";
	ДоговорНаВыполнениеРабот.Вставить("ПлановыеНачисленияПоДоговорам",	ПлановыеНачисленияПоДоговорам);
	
	ВыборкаДанных.Добавить(ДоговорНаВыполнениеРабот);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ДоговорРаботыУслуги_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ДоговорРаботыУслуг = Новый Структура;
ДоговорРаботыУслуг.Вставить("Сотрудник",									"");
ДоговорРаботыУслуг.Вставить("ФизическоеЛицо",								"");
ДоговорРаботыУслуг.Вставить("Организация",									"");
ДоговорРаботыУслуг.Вставить("Подразделение",								"");
ДоговорРаботыУслуг.Вставить("ДатаНачала",									"");
ДоговорРаботыУслуг.Вставить("ДатаОкончания",								"");
ДоговорРаботыУслуг.Вставить("МесяцНачисления",								"");
ДоговорРаботыУслуг.Вставить("Сумма",										"");
ДоговорРаботыУслуг.Вставить("ЗаключенСоСтудентомРаботающимВСтудотряде",		"");
ДоговорРаботыУслуг.Вставить("СпособОтраженияЗарплатыВБухучете",				"");
//ДоговорРаботыУслуг.Вставить("ОтношениеКЕНВД",								"");
//ДоговорРаботыУслуг.Вставить("СуммаЕНВД",									"");
ДоговорРаботыУслуг.Вставить("Дата",											"");
ДоговорРаботыУслуг.Вставить("Номер",										"");
ДоговорРаботыУслуг.Вставить("Ответственный",								"");
ДоговорРаботыУслуг.Вставить("Комментарий",									"");
ДоговорРаботыУслуг.Вставить("КодДохода",									"");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ДокументыФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаДокументыФизическихЛиц	= ИсходящиеДанные.ДокументыФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаДокументыФизическихЛиц.Колонки.Добавить("ВидДокумента");
ТаблицаДокументыФизическихЛиц.Колонки.Добавить("Серия");
ТаблицаДокументыФизическихЛиц.Колонки.Добавить("Номер");
ТаблицаДокументыФизическихЛиц.Колонки.Добавить("ДатаВыдачи");
ТаблицаДокументыФизическихЛиц.Колонки.Добавить("КемВыдан");
ТаблицаДокументыФизическихЛиц.Колонки.Добавить("ЯвляетсяДокументомУдостоверяющимЛичность");
ТаблицаДокументыФизическихЛиц.Колонки.Добавить("Представление");

Для Номер = 1 По ТаблицаДокументыФизическихЛиц.Количество() Цикл
	Документ = ТаблицаДокументыФизическихЛиц[Номер-1];
	
	Представление = "";
	Если ЗначениеЗаполнено(Документ.ДокументВид) = 1 Тогда
		Представление	= ""
			+ Документ.ДокументВид
			+ ?(ЗначениеЗаполнено(Документ.ДокументСерия) = 1, ", серия: " + Документ.ДокументСерия, "")
			+ ?(ЗначениеЗаполнено(Документ.ДокументНомер) = 1, ", № " + Документ.ДокументНомер, "")
			+ ?(ЗначениеЗаполнено(Документ.ДокументДатаВыдачи) = 1, ", выдан: " + Формат(Документ.ДокументДатаВыдачи, "ДФ=dd.MM.yyyy") + " года", "")
			+ ?(ЗначениеЗаполнено(Документ.ДокументКемВыдан) = 1, ", " + Документ.ДокументКемВыдан, "");
	КонецЕсли;
	
	Документ.ВидДокумента								= Документ.ДокументВид;
	Документ.Серия										= Документ.ДокументСерия;
	Документ.Номер										= Документ.ДокументНомер;
	Документ.ДатаВыдачи									= Документ.ДокументДатаВыдачи;
	Документ.КемВыдан									= Документ.ДокументКемВыдан;
	Документ.ЯвляетсяДокументомУдостоверяющимЛичность	= 1;
	Документ.Представление								= Представление;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Документ));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЕжегодныеОтпуска_Заполнить" ИспользуетсяПриЗагрузке="false">
				<Текст>
ЕжегодныеОтпускаДокумента	= СтруктураПараметров.ЕжегодныеОтпускаДокумента;
Сотрудник					= СтруктураПараметров.Сотрудник;
Период						= СтруктураПараметров.Период;
ЕжегодныеОтпуска_Выборка	= СтруктураПараметров.ЕжегодныеОтпуска_Выборка;
Должность					= СтруктураПараметров.Должность;
ПредыдущаяДолжность			= "";
СтруктураПараметров.Свойство("ПредыдущаяДолжность", ПредыдущаяДолжность);
Если СтруктураПараметров.Свойство("ИзменитьЕжегодныеОтпуска") Тогда
	ИзменитьЕжегодныеОтпуска = СтруктураПараметров.ИзменитьЕжегодныеОтпуска;
Иначе
	ИзменитьЕжегодныеОтпуска = 0;
КонецЕсли;


ЕжегодныеОтпускаОбщие		= ЕжегодныеОтпуска_Выборка["ЕжегодныеОтпускаОбщие"];
//ЕжегодныеОтпускаДолжностей	= ОбъектыПереносаДанных.Структура_Получить(ЕжегодныеОтпуска_Выборка, "ЕжегодныеОтпускаДолжностей");
ЕжегодныеОтпускаСотрудников	= ЕжегодныеОтпуска_Выборка["ЕжегодныеОтпускаСотрудников"];

//Если (ЗначениеЗаполнено(ПредыдущаяДолжность) = 1) И (Должность &lt;&gt; ПредыдущаяДолжность) Тогда
//	ЕжегодныеОтпускаПоДолжности = ОбъектыПереносаДанных.Структура_Получить(ЕжегодныеОтпускаДолжностей, ПредыдущаяДолжность);
//	Если ЗначениеЗаполнено(ЕжегодныеОтпускаПоДолжности) = 1 Тогда
//		ИзменитьЕжегодныеОтпуска = 1;
//		
//		Для НомерОтпуска = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ЕжегодныеОтпускаПоДолжности) Цикл
//			СтрокаОтпуска = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ЕжегодныеОтпускаПоДолжности, НомерОтпуска);
//			
//			СуществующийОтпуск = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(ЕжегодныеОтпускаДокумента, "ВидЕжегодногоОтпуска", СтрокаОтпуска.ВидЕжегодногоОтпуска);
//			Если ОбъектыПереносаДанных.Массив_Количество(СуществующийОтпуск) = 0 Тогда
//				ЕжегодныйОтпуск = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ЕжегодныеОтпускаДокумента);
//				ЕжегодныйОтпуск.Сотрудник				= Сотрудник;
//				ЕжегодныйОтпуск.Период					= Период;
//				ЕжегодныйОтпуск.ВидЕжегодногоОтпуска	= СтрокаОтпуска.ВидЕжегодногоОтпуска;
//			Иначе
//				ЕжегодныйОтпуск = ОбъектыПереносаДанных.ТаблицаЗначений_НайденнаяСтрокаПоИндексу(ЕжегодныеОтпускаДокумента, СуществующийОтпуск, 1);
//				
//			КонецЕсли;
//				
//			ЕжегодныйОтпуск.Действие					= "Отменить";
//			ЕжегодныйОтпуск.КоличествоДнейВГод			= СтрокаОтпуска.КоличествоДнейОтпускаВГод;
//		КонецЦикла;
//	КонецЕсли;
//КонецЕсли;

Для НомерОтпуска = 1 По ЕжегодныеОтпускаОбщие.Количество() Цикл
	СтрокаОтпуска = ЕжегодныеОтпускаОбщие[НомерОтпуска-1];
	
	СуществующийОтпуск = ЕжегодныеОтпускаДокумента.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска", СтрокаОтпуска.ВидЕжегодногоОтпуска));
	Если СуществующийОтпуск.Количество() = 0 Тогда
		ЕжегодныйОтпуск = ЕжегодныеОтпускаДокумента.Добавить();
		ЕжегодныйОтпуск.Сотрудник				= Сотрудник;
		ЕжегодныйОтпуск.Период					= Период;
		ЕжегодныйОтпуск.ВидЕжегодногоОтпуска	= СтрокаОтпуска.ВидЕжегодногоОтпуска;
	Иначе
		ЕжегодныйОтпуск = СуществующийОтпуск[0];
		
	КонецЕсли;
	
	ЕжегодныйОтпуск.Действие					= "Утвердить";
	ЕжегодныйОтпуск.КоличествоДнейВГод			= СтрокаОтпуска.КоличествоДнейОтпускаВГод;
КонецЦикла;

//Если ЗначениеЗаполнено(Должность) = 1 Тогда
//	ЕжегодныеОтпускаПоДолжности = ОбъектыПереносаДанных.Структура_Получить(ЕжегодныеОтпускаДолжностей, Должность);
//	Если ЗначениеЗаполнено(ЕжегодныеОтпускаПоДолжности) = 1 Тогда
//		ИзменитьЕжегодныеОтпуска = 1;
//		
//		Для НомерОтпуска = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ЕжегодныеОтпускаПоДолжности) Цикл
//			СтрокаОтпуска = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ЕжегодныеОтпускаПоДолжности, НомерОтпуска);
//			
//			СуществующийОтпуск = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(ЕжегодныеОтпускаДокумента, "ВидЕжегодногоОтпуска", СтрокаОтпуска.ВидЕжегодногоОтпуска);
//			Если ОбъектыПереносаДанных.Массив_Количество(СуществующийОтпуск) = 0 Тогда
//				ЕжегодныйОтпуск = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ЕжегодныеОтпускаДокумента);
//				ЕжегодныйОтпуск.Сотрудник				= Сотрудник;
//				ЕжегодныйОтпуск.Период					= Период;
//				ЕжегодныйОтпуск.ВидЕжегодногоОтпуска	= СтрокаОтпуска.ВидЕжегодногоОтпуска;
//			Иначе
//				ЕжегодныйОтпуск = ОбъектыПереносаДанных.ТаблицаЗначений_НайденнаяСтрокаПоИндексу(ЕжегодныеОтпускаДокумента, СуществующийОтпуск, 1);
//				
//			КонецЕсли;
//				
//			ЕжегодныйОтпуск.Действие					= "Утвердить";
//			ЕжегодныйОтпуск.КоличествоДнейВГод			= СтрокаОтпуска.КоличествоДнейОтпускаВГод;
//		КонецЦикла;
//	КонецЕсли;
//КонецЕсли;

ЕжегодныеОтпускаПоСотруднику = ЕжегодныеОтпускаСотрудников[Сотрудник];
Если ЗначениеЗаполнено(ЕжегодныеОтпускаПоСотруднику) = 1 Тогда
	Для НомерОтпуска = 1 По ЕжегодныеОтпускаПоСотруднику.Количество() Цикл
		СтрокаОтпуска = ЕжегодныеОтпускаПоСотруднику[НомерОтпуска-1];
		
		СуществующийОтпуск = ЕжегодныеОтпускаДокумента.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска", СтрокаОтпуска.ВидЕжегодногоОтпуска));
		Если СуществующийОтпуск.Количество() = 0 Тогда
			ЕжегодныйОтпуск = ЕжегодныеОтпускаДокумента.Добавить();
			ЕжегодныйОтпуск.Сотрудник				= Сотрудник;
			ЕжегодныйОтпуск.Период					= Период;
			ЕжегодныйОтпуск.ВидЕжегодногоОтпуска	= СтрокаОтпуска.ВидЕжегодногоОтпуска;
		Иначе
			ЕжегодныйОтпуск = СуществующийОтпуск[0];
			
		КонецЕсли;
			
		ЕжегодныйОтпуск.Действие					= "Утвердить";
		ЕжегодныйОтпуск.КоличествоДнейВГод			= СтрокаОтпуска.КоличествоДнейОтпускаВГод;
	КонецЦикла;
КонецЕсли;

//ИсходящиеДанные	= ЕжегодныеОтпускаДокумента;
//Пусто			= ИзменитьЕжегодныеОтпуска;</Текст>
				<Параметры>Сотрудник, Период, Должность, ЕжегодныеОтпуска_Выборка</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЕжегодныеОтпуска_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ЕжегодныеОтпуска = Новый ТаблицаЗначений;
ЕжегодныеОтпуска.Колонки.Добавить("Сотрудник");
ЕжегодныеОтпуска.Колонки.Добавить("ВидЕжегодногоОтпуска");
ЕжегодныеОтпуска.Колонки.Добавить("Действие");
ЕжегодныеОтпуска.Колонки.Добавить("Период");
ЕжегодныеОтпуска.Колонки.Добавить("КоличествоДнейВГод");
</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗарплатаКВыплате_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ФизическиеЛицаБезБазы	= ИсходящиеДанные.ФизическиеЛицаБезБазы;
ПервичныеДанные			= ИсходящиеДанные.ПервичныеДанные;
ИмяПравилКонвертации    = ИсходящиеДанные.ИмяПКО;

ВидДвиженияПриход	= ВидДвиженияНакопления["Приход"];
ВидДвиженияРасход	= ВидДвиженияНакопления["Расход"];

Для СчРезультатов = 1 По ПервичныеДанные.Количество() Цикл 
	СтрокаТаблицыРезультатов = ПервичныеДанные[СчРезультатов-1];
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
	
	ОсновныеНачисленияРаботниковОрганизаций			= СтрокаТаблицыРезультатов.ОсновныеНачисления;
	//ДополнительныеНачисленияРаботниковОрганизаций	= СтрокаТаблицыРезультатов.ДополнительныеНачисления;
	НДФЛРасчетыСБюджетом							= СтрокаТаблицыРезультатов.НДФЛРасчетыСБюджетом;
	ЗарплатаЗаМесяцОрганизаций						= СтрокаТаблицыРезультатов.ЗарплатаЗаМесяцОрганизаций;
	//НДФЛКЗачету										= СтрокаТаблицыРезультатов.НДФЛКЗачету;
	
	ВзаиморасчетыССотрудниками = Новый ТаблицаЗначений;
	ВзаиморасчетыССотрудниками.Колонки.Добавить("Сотрудник");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("Период");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ФизическоеЛицо");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("Организация");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("Подразделение");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("СуммаВзаиморасчетов");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ВидВзаиморасчетов");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ГруппаНачисленияУдержанияВыплаты");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ВидДвижения");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ПериодВзаиморасчетов");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ХарактерВыплаты");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("СтатьяФинансирования");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("ГруппаУчетаНачислений");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("СтатьяРасходов");
	ВзаиморасчетыССотрудниками.Колонки.Добавить("СуммаКВыплате");
	
	БазаНачислений = Новый ТаблицаЗначений;
	БазаНачислений.Колонки.Добавить("ФизическоеЛицо");
	БазаНачислений.Колонки.Добавить("Сотрудник");
	БазаНачислений.Колонки.Добавить("Подразделение");
	БазаНачислений.Колонки.Добавить("СтатьяФинансирования");
	БазаНачислений.Колонки.Добавить("СтатьяРасходов");
	БазаНачислений.Колонки.Добавить("Сумма");
	БазаНачислений.Колонки.Добавить("СуммаДляНДФЛ");
	БазаНачислений.Колонки.Добавить("Регистратор");
	
	Для Сч = 1 По ОсновныеНачисленияРаботниковОрганизаций.Количество() Цикл 
		СтрокаТаблицы = ОсновныеНачисленияРаботниковОрганизаций[Сч-1];
		
		Начисление		= СтрокаТаблицы.ВидРасчета;
		Ссылка			= Начисление["Ссылка"];
		СпособРасчета	= Начисление["СпособРасчета"];
		
		Если Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = БазаНачислений.Добавить();
		НоваяСтрока.ФизическоеЛицо			= СтрокаТаблицы.ФизЛицо;
		НоваяСтрока.Сотрудник				= СтрокаТаблицы.Сотрудник;
		НоваяСтрока.Подразделение			= СтрокаТаблицы.ПодразделениеОрганизации;
		НоваяСтрока.СтатьяФинансирования	= СтрокаТаблицы.СтатьяФинансирования;
		НоваяСтрока.СтатьяРасходов			= СтрокаТаблицы.СтатьяРасходов;
		НоваяСтрока.Сумма					= СтрокаТаблицы.Результат;
		КодДоходаНДФЛ = СтрокаТаблицы.ВидРасчета["ДоходНДФЛ"];
		Если ЗначениеЗаполнено(КодДоходаНДФЛ) = 0 Тогда
			НоваяСтрока.СуммаДляНДФЛ		= 0;
		Иначе
			НоваяСтрока.СуммаДляНДФЛ		= СтрокаТаблицы.Результат;
		КонецЕсли;
		НоваяСтрока.Регистратор				= СтрокаТаблицы.Регистратор;
	КонецЦикла;
	
	//Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ДополнительныеНачисленияРаботниковОрганизаций) Цикл
	//	СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ДополнительныеНачисленияРаботниковОрганизаций, Сч);
	//	
	//	Начисление		= СтрокаТаблицы.ВидРасчета;
	//	Ссылка			= ОбъектыПереносаДанных.Структура_Получить(Начисление, "Ссылка");
	//	СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(Начисление, "СпособРасчета");
	//	
	//	Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ДивидендыАкционеров", "ДополнительныеНачисления"))
	//		Или (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ДивидендыРаботников", "ДополнительныеНачисления")) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(БазаНачислений);
	//	НоваяСтрока.ФизическоеЛицо			= СтрокаТаблицы.ФизЛицо;
	//	НоваяСтрока.Сотрудник				= СтрокаТаблицы.Сотрудник;
	//	НоваяСтрока.Подразделение			= СтрокаТаблицы.ПодразделениеОрганизации;
	//	НоваяСтрока.СтатьяФинансирования	= СтрокаТаблицы.СтатьяФинансирования;
	//	НоваяСтрока.СтатьяРасходов			= СтрокаТаблицы.КОСГУ;
	//	НоваяСтрока.Сумма					= СтрокаТаблицы.Результат;
	//	КодДоходаНДФЛ = ОбъектыПереносаДанных.Структура_Получить(СтрокаТаблицы.ВидРасчета, "КодДоходаНДФЛ");
	//	Если ЗначениеЗаполнено(КодДоходаНДФЛ) = 0 Тогда
	//		НоваяСтрока.СуммаДляНДФЛ		= 0;
	//	ИначеЕсли КодДоходаНДФЛ = Код2760 Тогда
	//		НоваяСтрока.СуммаДляНДФЛ		= Макс(0, СтрокаТаблицы.Результат - 4000);
	//	Иначе
	//		НоваяСтрока.СуммаДляНДФЛ		= СтрокаТаблицы.Результат;
	//	КонецЕсли;
	//	НоваяСтрока.Регистратор				= СтрокаТаблицы.Регистратор;
	//КонецЦикла;
	
	БазаНачислений.Свернуть("ФизическоеЛицо, Сотрудник, Подразделение, Регистратор, СтатьяФинансирования, СтатьяРасходов", "Сумма, СуммаДляНДФЛ");
	Для Сч = 1 По БазаНачислений.Количество() Цикл
		СтрокаТаблицы = БазаНачислений[Сч-1];
		Если СтрокаТаблицы.Сумма = 0 Тогда
			СтрокаТаблицы.Регистратор	= "";
		КонецЕсли;
	КонецЦикла;
	БазаНачислений.Свернуть("ФизическоеЛицо, Сотрудник, Подразделение, Регистратор, СтатьяФинансирования, СтатьяРасходов", "Сумма, СуммаДляНДФЛ");
	
	БазаБезРегистратора = Новый ТаблицаЗначений;
	БазаБезРегистратора.Колонки.Добавить("ФизическоеЛицо");
	БазаБезРегистратора.Колонки.Добавить("Сотрудник");
	БазаБезРегистратора.Колонки.Добавить("Подразделение");
	БазаБезРегистратора.Колонки.Добавить("СтатьяФинансирования");
	БазаБезРегистратора.Колонки.Добавить("СтатьяРасходов");
	БазаБезРегистратора.Колонки.Добавить("Сумма");
	БазаБезРегистратора.Колонки.Добавить("СуммаДляНДФЛ");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(БазаНачислений, БазаБезРегистратора);
	БазаБезРегистратора.Свернуть("ФизическоеЛицо, Сотрудник, Подразделение, СтатьяФинансирования, СтатьяРасходов", "Сумма, СуммаДляНДФЛ");
	
	БазаСХарактеромВыплаты = Новый ТаблицаЗначений;
	БазаСХарактеромВыплаты.Колонки.Добавить("ФизическоеЛицо");
	БазаСХарактеромВыплаты.Колонки.Добавить("Сотрудник");
	БазаСХарактеромВыплаты.Колонки.Добавить("Подразделение");
	БазаСХарактеромВыплаты.Колонки.Добавить("СтатьяФинансирования");
	БазаСХарактеромВыплаты.Колонки.Добавить("СтатьяРасходов");
	БазаСХарактеромВыплаты.Колонки.Добавить("Сумма");
	БазаСХарактеромВыплаты.Колонки.Добавить("ХарактерВыплаты");
	
	Для Сч = 1 По ЗарплатаЗаМесяцОрганизаций.Количество() Цикл
		СтрокаТаблицы = ЗарплатаЗаМесяцОрганизаций[Сч-1];
		
		ЯвляетсяЗарплатойКВыплате	= ?(ТипЗнч(СтрокаТаблицы.Регистратор) = Тип("ДокументСсылка.ЗарплатаКВыплатеОрганизаций"), 1, 0);
		
		Если (ЯвляетсяЗарплатойКВыплате = 1) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			ВидДвижения = ВидДвиженияРасход;
			
		Иначе
			ВидДвижения = СтрокаТаблицы.ВидДвижения;
			
		КонецЕсли;
		
		Если ВидДвижения &lt;&gt; ВидДвиженияПриход Тогда
			Продолжить;
		КонецЕсли;
		
		ХарактерВыплатыДокумента	= СтрокаТаблицы.ХарактерВыплаты;
		
		ВидВзаиморасчетов = "";
		Если (ЯвляетсяЗарплатойКВыплате = 0) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			
		ИначеЕсли (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Аванс) Тогда
			ВидВзаиморасчетов = "ВыплатаАванса";
			
		ИначеЕсли (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Зарплата) Тогда
			ВидВзаиморасчетов = "ВыплатаЗарплаты";
			
		ИначеЕсли (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Отпускные)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Командировочные)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Премии)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.ПрочиеРазовыеНачисления) Тогда
			ВидВзаиморасчетов = "ВыплатаВМежрасчетныйПериод";
			
		КонецЕсли;
		
		ХарактерВыплаты = "Межрасчет";
		Если (СтрокаТаблицы.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс) Тогда
			ХарактерВыплаты = "Аванс";
			
		ИначеЕсли (СтрокаТаблицы.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата) Тогда
			ХарактерВыплаты = "Зарплата";
			
		КонецЕсли;
		
		Если (ЯвляетсяЗарплатойКВыплате = 0) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			ГруппаНачисленияУдержанияВыплаты = "Начислено";
			
		Иначе
			ГруппаНачисленияУдержанияВыплаты = "Выплачено";
			
		КонецЕсли;
		
		Организация		= СтрокаТаблицы.Организация;
		Период			= НачалоДня(СтрокаТаблицы.Период);
		ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
		
		Если (ЯвляетсяЗарплатойКВыплате = 1) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			СтрокаТаблицы.СуммаВзаиморасчетов = -1 * СтрокаТаблицы.СуммаВзаиморасчетов;
		КонецЕсли;
		
		СтрокиБазы = Новый Массив;
		Если (ЯвляетсяЗарплатойКВыплате = 0) И (СтрокаТаблицы.СуммаВзаиморасчетов &gt; 0) Тогда
			СтрокиБазы	= БазаНачислений.НайтиСтроки(Новый Структура("ФизическоеЛицо, Регистратор, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.Регистратор, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		КонецЕсли;
		Если СтрокиБазы.Количество() = 0 Тогда
			СтрокиБазы	= БазаБезРегистратора.НайтиСтроки(Новый Структура("ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		КонецЕсли;
		
		Коэффициенты = Неопределено;
		ПараметрыДляВыделенияКоэф = Новый Структура("МассивСтрок, ИмяКолонки", СтрокиБазы, ?((ЯвляетсяЗарплатойКВыплате = 0) И (СтрокаТаблицы.СуммаВзаиморасчетов &lt; 0), "СуммаДляНДФЛ", "Сумма"));
		Выполнить(Алгоритмы.ВыделитьКоэффициентыИзМассиваСтрок);
		
		МассивСумм = Неопределено;
		ПараметрыДляРаспределения = Новый Структура("ИсхСумма, МассивКоэф", СтрокаТаблицы.СуммаВзаиморасчетов, Коэффициенты);
		Выполнить(Алгоритмы.РаспределитьПропорционально);
		РезультатРаспределения = МассивСумм;
		
		Если РезультатРаспределения.Количество() &gt; 0 Тогда
			Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
				СтрокаБазы = СтрокиБазы[СчСтрок-1];
				
				НоваяСтрока = ВзаиморасчетыССотрудниками.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ВидВзаиморасчетов					= ВидВзаиморасчетов;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ГруппаНачисленияУдержанияВыплаты;
				НоваяСтрока.ВидДвижения							= ВидДвижения;
				НоваяСтрока.ПериодВзаиморасчетов				= ?(ЗначениеЗаполнено(СтрокаТаблицы.ПериодВзаиморасчетов) = 1, НачалоМесяца(СтрокаТаблицы.ПериодВзаиморасчетов), НачалоМесяца(Период));
				НоваяСтрока.ХарактерВыплаты						= ХарактерВыплаты;
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				НоваяСтрока.ГруппаУчетаНачислений				= "Зарплата";
				
				НоваяСтрока.Сотрудник							= СтрокаБазы["Сотрудник"];
				НоваяСтрока.Подразделение						= СтрокаБазы["Подразделение"];
				НоваяСтрока.СуммаВзаиморасчетов					= РезультатРаспределения[СчСтрок-1];
				НоваяСтрока.СуммаКВыплате						= РезультатРаспределения[СчСтрок-1];
				
				СтрокаБазы = БазаСХарактеромВыплаты.Добавить();
				СтрокаБазы.ФизическоеЛицо	= ФизическоеЛицо;
				СтрокаБазы.Сотрудник		= НоваяСтрока.Сотрудник;
				СтрокаБазы.Подразделение	= НоваяСтрока.Подразделение;
				СтрокаБазы.Сумма			= НоваяСтрока.СуммаВзаиморасчетов * ?(ВидДвижения = ВидДвиженияРасход, -1, 1);
				СтрокаБазы.ХарактерВыплаты	= ХарактерВыплатыДокумента;
			КонецЦикла;
			
		Иначе
			МассивСотрудников = ФизическиеЛицаБезБазы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				СтрокаСотрудника = МассивСотрудников[0];
				
				НоваяСтрока = ВзаиморасчетыССотрудниками.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ВидВзаиморасчетов					= ВидВзаиморасчетов;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ГруппаНачисленияУдержанияВыплаты;
				НоваяСтрока.ВидДвижения							= ВидДвижения;
				НоваяСтрока.ПериодВзаиморасчетов				= ?(ЗначениеЗаполнено(СтрокаТаблицы.ПериодВзаиморасчетов) = 1, НачалоМесяца(СтрокаТаблицы.ПериодВзаиморасчетов), НачалоМесяца(Период));
				НоваяСтрока.ХарактерВыплаты						= ХарактерВыплаты;
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				НоваяСтрока.ГруппаУчетаНачислений				= "Зарплата";
				
				НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
				НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
				НоваяСтрока.СуммаВзаиморасчетов					= СтрокаТаблицы.СуммаВзаиморасчетов;
				НоваяСтрока.СуммаКВыплате						= СтрокаТаблицы.СуммаВзаиморасчетов;
				
				СтрокаБазы = БазаСХарактеромВыплаты.Добавить();
				СтрокаБазы.ФизическоеЛицо	= ФизическоеЛицо;
				СтрокаБазы.Сотрудник		= НоваяСтрока.Сотрудник;
				СтрокаБазы.Подразделение	= НоваяСтрока.Подразделение;
				СтрокаБазы.Сумма			= НоваяСтрока.СуммаВзаиморасчетов * ?(ВидДвижения = ВидДвиженияРасход, -1, 1);
				СтрокаБазы.ХарактерВыплаты	= ХарактерВыплатыДокумента;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Для Сч = 1 По ЗарплатаЗаМесяцОрганизаций.Количество() Цикл
		СтрокаТаблицы = ЗарплатаЗаМесяцОрганизаций[Сч-1];
		
		ЯвляетсяЗарплатойКВыплате	= ?(ТипЗнч(СтрокаТаблицы.Регистратор) = Тип("ДокументСсылка.ЗарплатаКВыплатеОрганизаций"), 1, 0);
		
		Если (ЯвляетсяЗарплатойКВыплате = 1) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			ВидДвижения = ВидДвиженияРасход;
			
		Иначе
			ВидДвижения = СтрокаТаблицы.ВидДвижения;
			
		КонецЕсли;
		
		Если ВидДвижения &lt;&gt; ВидДвиженияРасход Тогда
			Продолжить;
		КонецЕсли;
		
		ХарактерВыплатыДокумента	= СтрокаТаблицы.ХарактерВыплаты;
		
		ВидВзаиморасчетов = "";
		Если (ЯвляетсяЗарплатойКВыплате = 0) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			
		ИначеЕсли (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Аванс) Тогда
			ВидВзаиморасчетов = "ВыплатаАванса";
			
		ИначеЕсли (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Зарплата) Тогда
			ВидВзаиморасчетов = "ВыплатаЗарплаты";
			
		ИначеЕсли (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Отпускные)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Командировочные)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.Премии)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении)
			Или (ХарактерВыплатыДокумента = Перечисления.ХарактерВыплатыЗарплаты.ПрочиеРазовыеНачисления) Тогда
			ВидВзаиморасчетов = "ВыплатаВМежрасчетныйПериод";
			
		КонецЕсли;
		
		ХарактерВыплаты = "Межрасчет";
		Если (СтрокаТаблицы.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс) Тогда
			ХарактерВыплаты = "Аванс";
			
		ИначеЕсли (СтрокаТаблицы.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата) Тогда
			ХарактерВыплаты = "Зарплата";
			
		КонецЕсли;
		
		Если (ЯвляетсяЗарплатойКВыплате = 0) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			ГруппаНачисленияУдержанияВыплаты = "Начислено";
			
		Иначе
			ГруппаНачисленияУдержанияВыплаты = "Выплачено";
			
		КонецЕсли;
		
		Организация		= СтрокаТаблицы.Организация;
		Период			= НачалоДня(СтрокаТаблицы.Период);
		ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
		
		Если (ЯвляетсяЗарплатойКВыплате = 1) И (СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход) Тогда
			СтрокаТаблицы.СуммаВзаиморасчетов = -1 * СтрокаТаблицы.СуммаВзаиморасчетов;
		КонецЕсли;
		
		СтрокиБазы = Новый Массив;
		СтрокиБазы	= БазаСХарактеромВыплаты.НайтиСтроки(Новый Структура("ФизическоеЛицо, ХарактерВыплаты, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.ХарактерВыплаты, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		Если СтрокиБазы.Количество() = 0 Тогда
			СтрокиБазы	= БазаБезРегистратора.НайтиСтроки(Новый Структура("ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		КонецЕсли;
		
		Коэффициенты = Неопределено;
		ПараметрыДляВыделенияКоэф = Новый Структура("МассивСтрок, ИмяКолонки", СтрокиБазы, "Сумма");
		Выполнить(Алгоритмы.ВыделитьКоэффициентыИзМассиваСтрок);
		
		МассивСумм = Неопределено;
		ПараметрыДляРаспределения = Новый Структура("ИсхСумма, МассивКоэф", СтрокаТаблицы.СуммаВзаиморасчетов, Коэффициенты);
		Выполнить(Алгоритмы.РаспределитьПропорционально);
		РезультатРаспределения = МассивСумм; 
		
		Если РезультатРаспределения.Количество() &gt; 0 Тогда
			Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
				СтрокаБазы = СтрокиБазы[СчСтрок-1];
				
				НоваяСтрока = ВзаиморасчетыССотрудниками.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ВидВзаиморасчетов					= ВидВзаиморасчетов;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ГруппаНачисленияУдержанияВыплаты;
				НоваяСтрока.ВидДвижения							= ВидДвижения;
				НоваяСтрока.ПериодВзаиморасчетов				= ?(ЗначениеЗаполнено(СтрокаТаблицы.ПериодВзаиморасчетов) = 1, НачалоМесяца(СтрокаТаблицы.ПериодВзаиморасчетов), НачалоМесяца(Период));
				НоваяСтрока.ХарактерВыплаты						= ХарактерВыплаты;
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				НоваяСтрока.ГруппаУчетаНачислений				= "Зарплата";
				
				НоваяСтрока.Сотрудник							= СтрокаБазы["Сотрудник"];
				НоваяСтрока.Подразделение						= СтрокаБазы["Подразделение"];
				НоваяСтрока.СуммаВзаиморасчетов					= РезультатРаспределения[СчСтрок-1];
				НоваяСтрока.СуммаКВыплате						= РезультатРаспределения[СчСтрок-1];
			КонецЦикла;
			
		Иначе
			МассивСотрудников = ФизическиеЛицаБезБазы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				СтрокаСотрудника = МассивСотрудников[0];
				
				НоваяСтрока = ВзаиморасчетыССотрудниками.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ВидВзаиморасчетов					= ВидВзаиморасчетов;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ГруппаНачисленияУдержанияВыплаты;
				НоваяСтрока.ВидДвижения							= ВидДвижения;
				НоваяСтрока.ПериодВзаиморасчетов				= ?(ЗначениеЗаполнено(СтрокаТаблицы.ПериодВзаиморасчетов) = 1, НачалоМесяца(СтрокаТаблицы.ПериодВзаиморасчетов), НачалоМесяца(Период));
				НоваяСтрока.ХарактерВыплаты						= ХарактерВыплаты;
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				НоваяСтрока.ГруппаУчетаНачислений				= "Зарплата";
				
				НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
				НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
				НоваяСтрока.СуммаВзаиморасчетов					= СтрокаТаблицы.СуммаВзаиморасчетов;
				НоваяСтрока.СуммаКВыплате						= СтрокаТаблицы.СуммаВзаиморасчетов;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	
	//Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛКЗачету) Цикл 
	//	СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(НДФЛКЗачету, Сч);
	//	
	//	Если СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход Тогда
	//		ГруппаНачисленияУдержанияВыплаты = "Начислено";
	//		
	//	Иначе
	//		ГруппаНачисленияУдержанияВыплаты = "Выплачено";
	//		
	//	КонецЕсли;
	//	Организация		= СтрокаТаблицы.Организация;
	//	Период			= НачалоДня(СтрокаТаблицы.Период);
	//	ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
	//	
	//	СтрокиБазы				= ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(БазаБезРегистратора, "ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.КОСГУ);
	//	Коэффициенты			= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ВыделитьКоэффициентыИзМассиваСтрок", Параметры.Алгоритмы, СтрокиБазы, "Сумма");
	//	РезультатРаспределения	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("РаспределитьПропорционально", Параметры.Алгоритмы, СтрокаТаблицы.СуммаНДФЛКЗачету, Коэффициенты);
	//	
	//	Если ОбъектыПереносаДанных.Массив_Количество(РезультатРаспределения) &gt; 0 Тогда
	//		Для СчСтрок = 1 По ОбъектыПереносаДанных.Массив_Количество(РезультатРаспределения) Цикл
	//			СтрокаБазы = ОбъектыПереносаДанных.Массив_Получить(СтрокиБазы,СчСтрок);
	//			
	//			НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ВзаиморасчетыССотрудниками);
	//			НоваяСтрока.Период								= Период;
	//			НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
	//			НоваяСтрока.Организация							= Организация;
	//			НоваяСтрока.ВидВзаиморасчетов					= "";
	//			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ГруппаНачисленияУдержанияВыплаты;
	//			НоваяСтрока.ВидДвижения							= СтрокаТаблицы.ВидДвижения;
	//			НоваяСтрока.ПериодВзаиморасчетов				= НачалоМесяца(Период);
	//			НоваяСтрока.ХарактерВыплаты						= "Зарплата";
	//			НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
	//			НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.КОСГУ;
	//			
	//			НоваяСтрока.Сотрудник							= ОбъектыПереносаДанных.Структура_Получить(СтрокаБазы, "Сотрудник");
	//			НоваяСтрока.Подразделение						= ОбъектыПереносаДанных.Структура_Получить(СтрокаБазы, "Подразделение");
	//			НоваяСтрока.СуммаВзаиморасчетов					= ОбъектыПереносаДанных.Массив_Получить(РезультатРаспределения, СчСтрок);
	//		КонецЦикла;
	//		
	//	Иначе
	//		МассивСотрудников = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(ФизическиеЛицаБезБазы, "ФизическоеЛицо", ФизическоеЛицо);
	//		Если ОбъектыПереносаДанных.Массив_Количество(МассивСотрудников) &gt; 0 Тогда
	//			СтрокаСотрудника = ОбъектыПереносаДанных.ТаблицаЗначений_НайденнаяСтрокаПоИндексу(ФизическиеЛицаБезБазы, МассивСотрудников, 1);
	//			
	//			НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ВзаиморасчетыССотрудниками);
	//			НоваяСтрока.Период								= Период;
	//			НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
	//			НоваяСтрока.Организация							= Организация;
	//			НоваяСтрока.ВидВзаиморасчетов					= "";
	//			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ГруппаНачисленияУдержанияВыплаты;
	//			НоваяСтрока.ВидДвижения							= СтрокаТаблицы.ВидДвижения;
	//			НоваяСтрока.ПериодВзаиморасчетов				= НачалоМесяца(Период);
	//			НоваяСтрока.ХарактерВыплаты						= "Зарплата";
	//			НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
	//			НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.КОСГУ;
	//			
	//			НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
	//			НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
	//			НоваяСтрока.СуммаВзаиморасчетов					= СтрокаТаблицы.СуммаНДФЛКЗачету;
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	Если ВзаиморасчетыССотрудниками.Количество() = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ВыборкаПоДокументу = Новый Структура;
	ВыборкаПоДокументу.Вставить("Номер",							"ВЗ");
	ВыборкаПоДокументу.Вставить("Организация",						ОрганизацияОтбор);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации",				ПериодОтбор);
	Если СтрокаТаблицыРезультатов.Авансом = 0 Тогда
		ВыборкаПоДокументу.Вставить("ВзаиморасчетыССотрудниками",	ВзаиморасчетыССотрудниками);
		ВыборкаПоДокументу.Вставить("ЗарплатаКВыплате",				ВзаиморасчетыССотрудниками);
	Иначе
		ВыборкаПоДокументу.Вставить("ЗарплатаКВыплатеАвансом",		ВзаиморасчетыССотрудниками);
	КонецЕсли;
	ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",				СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , ИмяПравилКонвертации);  
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗнаниеЯзыковФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаЗнаниеЯзыковФизическихЛиц	= ИсходящиеДанные.ЗнаниеЯзыковФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаЗнаниеЯзыковФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
Для Номер = 1 По ТаблицаЗнаниеЯзыковФизическихЛиц.Количество() Цикл
	ЗнаниеЯзыка = ТаблицаЗнаниеЯзыковФизическихЛиц[Номер-1];
	
	ЗнаниеЯзыка.ФизическоеЛицо	= ЗнаниеЯзыка.ФизЛицо;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ЗнаниеЯзыка));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ЗначенияПоказателей_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ЗначенияПоказателей = Новый ТаблицаЗначений;
ЗначенияПоказателей.Колонки.Добавить("Сотрудник");
ЗначенияПоказателей.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
ЗначенияПоказателей.Колонки.Добавить("Показатель");
ЗначенияПоказателей.Колонки.Добавить("Период");
ЗначенияПоказателей.Колонки.Добавить("ФизическоеЛицо");
ЗначенияПоказателей.Колонки.Добавить("Организация");
ЗначенияПоказателей.Колонки.Добавить("Значение");
ЗначенияПоказателей.Колонки.Добавить("ДействуетДо");
ЗначенияПоказателей.Колонки.Добавить("ЗначениеПоОкончании");
ЗначенияПоказателей.Колонки.Добавить("ДокументОснование");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ЗначенияСовокупныхТарифныхСтавок_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ЗначенияСовокупныхТарифныхСтавок = Новый ТаблицаЗначений;
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("Сотрудник");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("ФизическоеЛицо");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("Период");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("ВидТарифнойСтавки");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("Значение");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("ДействуетДо");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("ВидТарифнойСтавкиПоОкончании");
ЗначенияСовокупныхТарифныхСтавок.Колонки.Добавить("ЗначениеПоОкончании"); </Текст>
			</Алгоритм>
			<Алгоритм Имя="ИдентификаторПоказателя_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>Идентификатор = ?(Идентификатор = "ВремяВКалендарныхДнях", "КалендарныеДни", Идентификатор);
Идентификатор = ?(Идентификатор = "КалендарныхДнейВмесяце", "КалендарныеДниМесяца", Идентификатор);
Идентификатор = ?(Идентификатор = "ОтработаноВремениВДнях", "ОтработаноДней", Идентификатор);
Идентификатор = ?(Идентификатор = "ОтработаноВремениВЧасах", "ОтработаноЧасов", Идентификатор);
Идентификатор = ?(Идентификатор = "СдельнаяВыработка", "СдельныйЗаработок", Идентификатор);
Идентификатор = ?(Идентификатор = "ТарифнаяСтавкаМесячная", "Оклад", Идентификатор);</Текст>
			</Алгоритм>
			<Алгоритм Имя="ИзменениеОплатыТруда_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = ОбъектыПереносаДанных.НовыйОбъект("Структура");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сотрудник",			"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаИзменения",		"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Организация",			"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ФизическоеЛицо",		"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ИзменитьНачисления",	"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Дата",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Номер",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Ответственный",		"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Комментарий",			"");

Субконто = СЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ИзменениеОплатыТруда_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>Сотрудники								= ИсходящиеДанные.Сотрудники;
РаботникиОрганизаций					= ИсходящиеДанные.РаботникиОрганизаций;
ПлановыеНачисленияРаботниковОрганизаций	= ИсходящиеДанные.ПлановыеНачисленияРаботниковОрганизаций;


ДлинаСуток = 86400;

Для НомерСотрудника = 1 По Сотрудники.Количество() Цикл
	Сотрудник = Сотрудники[НомерСотрудника-1];
	
	ИзмененияОплатыТруда = ПлановыеНачисленияРаботниковОрганизаций.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник.Ссылка));
	КоличествоИзменений = ИзмененияОплатыТруда.Количество();
	Если КоличествоИзменений = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ПлановыеНачисленияСотрудника = Новый Массив;
	Для Номер = 1 По ИзмененияОплатыТруда.Количество() Цикл
		ПлановыеНачисленияСотрудника.Добавить(ИзмененияОплатыТруда[Номер-1]);
	КонецЦикла;
	КоличествоПлановыхНачислений = ПлановыеНачисленияСотрудника.Количество();
	
	КадровыеИзмененияСотрудника = РаботникиОрганизаций.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник.Ссылка));
	КоличествоКадровых	= КадровыеИзмененияСотрудника.Количество();
	
	Для НомерВыборки = 1 По КоличествоИзменений Цикл
		ИзменениеОплатыТруда = ИзмененияОплатыТруда[НомерВыборки-1];
		
		ПереноситьИзменение = 1;
		Для НомерКадровый = 1 По КоличествоКадровых Цикл
			КадровоеИзменениеСотрудника = КадровыеИзмененияСотрудника[НомерКадровый-1];
			Если КадровоеИзменениеСотрудника["Период"] &lt;&gt; ИзменениеОплатыТруда["Период"] Тогда
				Продолжить;
			КонецЕсли;
			
			ПереноситьИзменение = 0;
			Прервать;
		КонецЦикла;
		
		Если ПереноситьИзменение = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИзменениеОплатыТруда_Сотрудник					= ИзменениеОплатыТруда["Сотрудник"];
		ИзменениеОплатыТруда_Сотрудник_Физлицо			= ИзменениеОплатыТруда["Сотрудник_Физлицо"];
		ИзменениеОплатыТруда_Период						= ИзменениеОплатыТруда["Период"];
		//ИзменениеОплатыТруда_ПериодЗавершения			= ИзменениеОплатыТруда["ПериодЗавершения"];
		ИзменениеОплатыТруда_ОбособленноеПодразделение	= ИзменениеОплатыТруда["ОбособленноеПодразделение"];
		
		КадровыйПеревод = Неопределено;
		Выполнить(Алгоритмы.КадровыйПеревод_Описание);
		ДокИзменениеОплатыТруда = КадровыйПеревод;
		ДокИзменениеОплатытруда.Вставить("Сотрудник",					ИзменениеОплатыТруда_Сотрудник);
		ДокИзменениеОплатытруда.Вставить("ДатаНачала",					ИзменениеОплатыТруда_Период);
		ДокИзменениеОплатытруда.Вставить("Организация",					ИзменениеОплатыТруда["Организация"]);
		ДокИзменениеОплатытруда.Вставить("ОбособленноеПодразделение",	ИзменениеОплатыТруда_ОбособленноеПодразделение);
		ДокИзменениеОплатытруда.Вставить("ФизическоеЛицо",				ИзменениеОплатыТруда_Сотрудник_Физлицо);
		ДокИзменениеОплатытруда.Вставить("ДатаОкончания",				"");
		ДокИзменениеОплатытруда.Вставить("НачисленияУтверждены",		1);
		ДокИзменениеОплатытруда.Вставить("ИзменитьНачисления",			0);
		ДокИзменениеОплатытруда.Вставить("Дата",						ИзменениеОплатыТруда["ПервичныйДокумент_Дата"]);
		ДокИзменениеОплатытруда.Вставить("Ответственный",				ИзменениеОплатыТруда["ПервичныйДокумент_Ответственный"]);
		ДокИзменениеОплатытруда.Вставить("Комментарий",					ИзменениеОплатыТруда["ПервичныйДокумент_Комментарий"]);
		
		ИзменитьНачисления				= 0;
		Если КоличествоПлановыхНачислений &lt;&gt; 0 Тогда
			ПлановыеНачисления = Неопределено;
			Выполнить(Алгоритмы.ПлановыеНачисления_Описание);
			
			Для Номер = 1 По КоличествоПлановыхНачислений Цикл
				ПлановоеНачислениеСотрудника = ПлановыеНачисленияСотрудника[Номер-1];
				
				Период					= ПлановоеНачислениеСотрудника["Период"];
				Если Период &gt; ИзменениеОплатыТруда_Период Тогда // Будущие начисления не обрабатываем
					Прервать;
				КонецЕсли;
				
				Начисление		= ПлановоеНачислениеСотрудника["ВидРасчета"];
				Ссылка			= Начисление["Ссылка"];
				СпособРасчета	= Начисление["СпособРасчета"];
				
				Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
				Или (СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой) Тогда
					Продолжить;
				КонецЕсли;
								
				Если Период = ИзменениеОплатыТруда_Период Тогда
					ИзменитьНачисления = 1;
				КонецЕсли;
				
				Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет) Тогда
					Если ИзменитьНачисления = 0 Тогда
						Продолжить;
					Иначе
						ИзменитьНачисления = 0;
						Прервать;
					КонецЕсли;
				КонецЕсли;
				
				СтруктураДляПлановогоНачисления = Новый Структура(
					"ПлановоеНачислениеСотрудника,ПлановыеНачисления,ИдентификаторСтрокиВидаРасчета,Документ_Сотрудник,Документ_Сотрудник_Физлицо,Документ_ОбособленноеПодразделение,Документ_Период",
					ПлановоеНачислениеСотрудника,ПлановыеНачисления,Номер,
					ИзменениеОплатыТруда_Сотрудник, ИзменениеОплатыТруда_Сотрудник_Физлицо, ИзменениеОплатыТруда_ОбособленноеПодразделение, 
					ИзменениеОплатыТруда_Период);
				Выполнить(Алгоритмы.ПлановыеНачисления_ОбновитьНачисление);
				
				//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ОбновитьНачисление", Параметры.Алгоритмы,
				//ПлановоеНачислениеСотрудника, ПлановыеНачисления, Номер,
				//ИзменениеОплатыТруда_Сотрудник, ИзменениеОплатыТруда_Сотрудник_Физлицо, ИзменениеОплатыТруда_ОбособленноеПодразделение,
				//ИзменениеОплатыТруда_Период, ИзменениеОплатыТруда_ПериодЗавершения);
			КонецЦикла;
			
			ЗначенияПоказателей = Неопределено;
			Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
			ПоказателиДокумента = ЗначенияПоказателей;
			
			ЗначенияПоказателей = Неопределено;
			Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
			ПоказателиРегистра = ЗначенияПоказателей;                  // Для изменения обособленного подразделения
			
			ЗначенияСовокупныхТарифныхСтавок = Неопределено;
			Выполнить(Алгоритмы.ЗначенияСовокупныхТарифныхСтавок_Описание);
			
			ПрименениеПоказателей = Неопределено;
			Выполнить(Алгоритмы.ПрименениеПоказателей_Описание);
			
			СтруктураПараметров = Новый Структура("ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
			|Документ_Сотрудник, Документ_Сотрудник_Физлицо, Документ_ОбособленноеПодразделение, Документ_Период",
			ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
			ИзменениеОплатыТруда_Сотрудник, ИзменениеОплатыТруда_Сотрудник_Физлицо, ИзменениеОплатыТруда_ОбособленноеПодразделение,
			ИзменениеОплатыТруда_Период);
			Выполнить(Алгоритмы.ПлановыеНачисления_ЗаполнитьПоказатели);
			
			//ПоказателиДокумента					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы);
			//ПоказателиРегистра					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы); // Для изменения обособленного подразделения
			//ЗначенияСовокупныхТарифныхСтавок	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияСовокупныхТарифныхСтавок_Описание", Параметры.Алгоритмы);
			//ПрименениеПоказателей				= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПрименениеПоказателей_Описание", Параметры.Алгоритмы);
			//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ЗаполнитьПоказатели", Параметры.Алгоритмы,
			//ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
			//ИзменениеОплатыТруда_Сотрудник, ИзменениеОплатыТруда_Сотрудник_Физлицо, ИзменениеОплатыТруда_ОбособленноеПодразделение,
			//ИзменениеОплатыТруда_Период, ИзменениеОплатыТруда_ПериодЗавершения);
			
			ДокИзменениеОплатыТруда.Вставить("Начисления",	ПлановыеНачисления);
			ДокИзменениеОплатыТруда.Вставить("Показатели",	ПоказателиДокумента);
			
			Если ИзменитьНачисления = 1 Тогда
				ДокИзменениеОплатыТруда.Вставить("ИзменитьНачисления",   1);
			КонецЕсли;
		КонецЕсли;
		
		Если ИзменитьНачисления = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЕжегодныеОтпуска = Неопределено;
		Выполнить(Алгоритмы.ЕжегодныеОтпуска_Описание);
		ЕжегодныеОтпускаДокумента = ЕжегодныеОтпуска;
		
		СтруктураПараметров = Новый Структура("ЕжегодныеОтпускаДокумента, Сотрудник, Период, ЕжегодныеОтпуска_Выборка, Должность, ПредыдущаяДолжность, ИзменитьЕжегодныеОтпуска",
			ЕжегодныеОтпускаДокумента, ИзменениеОплатыТруда_Сотрудник, ИзменениеОплатыТруда_Период, ИсходящиеДанные, "");
		Выполнить(Алгоритмы.ЕжегодныеОтпуска_Заполнить);
		
		ДокИзменениеОплатыТруда.Вставить("ЕжегодныеОтпуска",	ЕжегодныеОтпускаДокумента);
		
		ВыгрузитьПоПравилу(ДокИзменениеОплатыТруда, , , , "КадровыйПеревод");
		
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ИзменениеОтпускаПоУходуЗаРебенком_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = ОбъектыПереносаДанных.НовыйОбъект("Структура");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ОсновнойСотрудник",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сотрудник",												"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Организация",												"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаИзменения",											"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДокументОснование",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаОкончанияПособияДоПолутораЛет",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДатаОкончанияПособияДоТрехЛет",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "СреднийДневнойЗаработок",									"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "КоличествоДетей",											"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "КоличествоПервыхДетей",									"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ВыплачиватьПособиеДоПолутораЛет",							"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ПособиеДоПолутораЛет",									"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ВыплачиватьПособиеДоТрехЛет",								"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ПособиеДоТрехЛет",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ПериодРасчетаСреднегоЗаработкаНачало",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ПериодРасчетаСреднегоЗаработкаОкончание",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ПрименятьЛьготыПриНачисленииПособия",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ПереноситьДанныеВДругойУчетСреднегоЗаработка",			"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "УчитыватьЗаработокПредыдущихСтрахователей",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "РасчетПоПравилам2010Года",								"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ФинансированиеФедеральнымБюджетом",						"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ДоляНеполногоВремени",									"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "РайонныйКоэффициентРФнаНачалоСобытия",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска",	"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ИзменитьНачисления",										"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "НачисленияУтверждены",									"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Ответственный",											"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Комментарий",												"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Дата",													"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Номер",													"");

Субконто = СЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ИзменениеОтпускаПоУходуЗаРебенком_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеНачисленияРаботниковОрганизаций	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "ПлановыеНачисленияРаботниковОрганизаций");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ПлановыеНачисленияПоСотрудникам = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "Сотрудник");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ДатаСобытия");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ПлановыеНачисления");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ЯвляетсяОтпускомПоУходуЗаребенком");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ПособиеПоУходуЗаРебенкомДо1_5Лет");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисленияПоСотрудникам, "ПособиеПоУходуЗаРебенкомДо3Лет");

ДлинаСуток		= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ДлинаСуток", Параметры.Алгоритмы);
ЕстьРеквизиты	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтпускПоУходуЗаРебенком_ЕстьРеквизиты", Параметры.Алгоритмы);

ТекущийСотрудник				= "";
ТекущаяДатаСобытия				= "";
ПлановоеНачислениеПоСотруднику	= "";
Для НомерВыборки = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПлановыеНачисленияРаботниковОрганизаций) Цикл
	ПлановоеНачисление = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ПлановыеНачисленияРаботниковОрганизаций, НомерВыборки);
	
	Сотрудник = ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачисление.Сотрудник, "Ссылка");
	
	Если (ТекущийСотрудник &lt;&gt; Сотрудник) Или (ТекущаяДатаСобытия &lt;&gt; ПлановоеНачисление.Период) Тогда
		ПлановоеНачислениеПоСотруднику = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПлановыеНачисленияПоСотрудникам);
		ПлановоеНачислениеПоСотруднику.Сотрудник			= ПлановоеНачисление.Сотрудник;
		ПлановоеНачислениеПоСотруднику.ДатаСобытия			= ПлановоеНачисление.Период;
		ПлановоеНачислениеПоСотруднику.ПлановыеНачисления	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_Описание", Параметры.Алгоритмы);
		ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 0;
		
		ТекущийСотрудник	= Сотрудник;
		ТекущаяДатаСобытия	= ПлановоеНачисление.Период;
	КонецЕсли;
	
	Начисление		= ПлановоеНачисление.ВидРасчета;
	Ссылка			= ОбъектыПереносаДанных.Структура_Получить(Начисление, "Ссылка");
	СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(Начисление, "СпособРасчета");
	
	Если (ПлановоеНачисление.Действие = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_ВидДействия", Параметры.Алгоритмы, "Изменить")) Тогда
		Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
		Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет")) Тогда
			ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 1;
			ПлановоеНачислениеПоСотруднику.ПособиеПоУходуЗаРебенкомДо1_5Лет		= ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(ПлановоеНачисление);
			
		ИначеЕсли (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет", "ОсновныеНачисления"))
		Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет")) Тогда
			ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 1;
			ПлановоеНачислениеПоСотруднику.ПособиеПоУходуЗаРебенкомДо3Лет		= ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(ПлановоеНачисление);
			
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПлановоеНачислениеПоСотруднику.ПлановыеНачисления), ПлановоеНачисление);
КонецЦикла;
	
Для НомерВыборки = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПлановыеНачисленияПоСотрудникам) Цикл
	СтрокаОтпускаПоУходуЗаРебенком = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ПлановыеНачисленияПоСотрудникам, НомерВыборки);
	
	Если СтрокаОтпускаПоУходуЗаРебенком.ЯвляетсяОтпускомПоУходуЗаребенком = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ИзменениеОтпускаПоУходуЗаРебенком = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ИзменениеОтпускаПоУходуЗаРебенком_Описание", Параметры.Алгоритмы);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ДатаИзменения",										СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия);
	
	ПособиеПоУходуЗаРебенкомДо1_5Лет	= СтрокаОтпускаПоУходуЗаРебенком.ПособиеПоУходуЗаРебенкомДо1_5Лет;
	ПособиеПоУходуЗаРебенкомДо3Лет		= СтрокаОтпускаПоУходуЗаРебенком.ПособиеПоУходуЗаРебенкомДо3Лет;
	ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай			= "";
	ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо			= "";
	ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение	= "";
	Если ЗначениеЗаполнено(ПособиеПоУходуЗаРебенкомДо1_5Лет) = 1 Тогда
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Дата",												ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Дата"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Номер",											ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Номер"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Ответственный",									ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Ответственный"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Комментарий",										ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент_Комментарий"));
		
		ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо			= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "Сотрудник_Физлицо");
		ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ОбособленноеПодразделение");
		
		ПервичныйДокумент	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПервичныйДокумент");
		Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком") Тогда
			ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент.ДокументОснование;
		Иначе
			ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ПособиеПоУходуЗаРебенкомДо3Лет) = 1 Тогда
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Дата",												ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Дата"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Номер",											ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Номер"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Ответственный",									ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Ответственный"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Комментарий",										ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент_Комментарий"));
		
		ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо			= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "Сотрудник_Физлицо");
		ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ОбособленноеПодразделение");
		
		ПервичныйДокумент	= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПервичныйДокумент");
		Если ТипЗнч(ПервичныйДокумент) = Тип("ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком") Тогда
			ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент.ДокументОснование;
		Иначе
			ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай	= ПервичныйДокумент;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ОсновнойСотрудник",									СтрокаОтпускаПоУходуЗаРебенком.Сотрудник);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Сотрудник",											ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Организация",											ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "НачисленияУтверждены",									1);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска",	0);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ДоляНеполногоВремени",									1);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "РайонныйКоэффициентРФнаНачалоСобытия",					1);
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПереноситьДанныеВДругойУчетСреднегоЗаработка",			1);
	Если ЕстьРеквизиты = 1 Тогда
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ФинансированиеФедеральнымБюджетом",				ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо.ЛьготаПриНачисленииПособий);
	КонецЕсли;
	
	ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончания						= Дата(1, 1, 1);
	ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончанияПособияДоПолутораЛет	= Дата(1, 1, 1);
	Если ЗначениеЗаполнено(ПособиеПоУходуЗаРебенкомДо1_5Лет) = 1 Тогда
		ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончания						= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ПериодЗавершения");
		ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончанияПособияДоПолутораЛет	= ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончания;
		
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ДатаОкончанияПособияДоПолутораЛет",				ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончанияПособияДоПолутораЛет - ДлинаСуток);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "СреднийДневнойЗаработок",							ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "Показатель1"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "КоличествоДетей",									ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "Показатель2"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "КоличествоПервыхДетей",							ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "Показатель3"));
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ВыплачиватьПособиеДоПолутораЛет",					1);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПособиеДоПолутораЛет",								ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо1_5Лет, "ВидРасчета"));
	КонецЕсли;
	Если ЗначениеЗаполнено(ПособиеПоУходуЗаРебенкомДо3Лет) = 1 Тогда
		ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончания						= ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ПериодЗавершения");
		
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ДатаОкончанияПособияДоТрехЛет",					ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончания - ДлинаСуток);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ВыплачиватьПособиеДоТрехЛет",						1);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПособиеДоТрехЛет",									ОбъектыПереносаДанных.Структура_Получить(ПособиеПоУходуЗаРебенкомДо3Лет, "ВидРасчета"));
	КонецЕсли;
	
	Если ТипЗнч(ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком") Тогда
		Если ЕстьРеквизиты = 1 Тогда
			ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПериодРасчетаСреднегоЗаработкаНачало",			ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.ПериодРасчетаСреднегоЗаработкаНачало);
			ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПериодРасчетаСреднегоЗаработкаОкончание",		ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.ПериодРасчетаСреднегоЗаработкаОкончание);
			ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПериодРасчетаСреднегоЗаработкаПервыйГод",		Год(ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.ПериодРасчетаСреднегоЗаработкаНачало));
			ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПериодРасчетаСреднегоЗаработкаВторойГод",		Год(ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.ПериодРасчетаСреднегоЗаработкаОкончание));
			ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПрименятьЛьготыПриНачисленииПособия",			ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.ПрименятьЛьготыПриНачисленииПособия);
		КонецЕсли;
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "УчитыватьЗаработокПредыдущихСтрахователей",		ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.УчитыватьЗаработокПредыдущихСтрахователей);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "РасчетПоПравилам2010Года",							ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай.РасчетПоПравилам2010Года);
	КонецЕсли;
	
	СтраховойСлучай = ОбъектыПереносаДанных.НовыйОбъект("Структура");
	ОбъектыПереносаДанных.Структура_Установить(СтраховойСлучай, "Сотрудник",		ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо);
	ОбъектыПереносаДанных.Структура_Установить(СтраховойСлучай, "Организация",	ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение);
	ОбъектыПереносаДанных.Структура_Установить(СтраховойСлучай, "ДатаНачала",		ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтпускПоУходуЗаРебенком_ДатаНачала", Параметры.Алгоритмы, ИзменениеОтпускаПоУходуЗаРебенком_СтраховойСлучай));
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ДокументОснование",									СтраховойСлучай);
	
	УсловияОплатыОтпускаПоУходуЗаРебенком = ОбъектыПереносаДанных.ВыполнитьАлгоритм("УсловияОплатыОтпускаПоУходуЗаРебенком_Описание", Параметры.Алгоритмы);
	УсловиеОплаты = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(УсловияОплатыОтпускаПоУходуЗаРебенком);
	ЗаполнитьЗначенияСвойств(УсловиеОплаты, ИзменениеОтпускаПоУходуЗаРебенком);
	УсловиеОплаты.Сотрудник				= СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
	УсловиеОплаты.ФизическоеЛицо		= ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо;
	УсловиеОплаты.Период				= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
	УсловиеОплаты.ДатаНачалаСобытия		= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
	УсловиеОплаты.СтраховойСлучай		= СтраховойСлучай;
	ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "УсловияОплатыОтпускаПоУходуЗаРебенком",	УсловияОплатыОтпускаПоУходуЗаРебенком);
	
	ПлановыеНачисленияСотрудника = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(ПлановыеНачисленияРаботниковОрганизаций, "Сотрудник, Период", СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия);
	Если ОбъектыПереносаДанных.Массив_Количество(ПлановыеНачисленияСотрудника) &lt;&gt; 0 Тогда
		ПлановыеНачисления				= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_Описание", Параметры.Алгоритмы);
		ПрименениеПлановыхНачислений	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПрименениеПлановыхНачислений_Описание", Параметры.Алгоритмы);
		Для Номер = 1 По ОбъектыПереносаДанных.Массив_Количество(ПлановыеНачисленияСотрудника) Цикл
			ПлановоеНачислениеСотрудника = ОбъектыПереносаДанных.Массив_Получить(ПлановыеНачисленияСотрудника, Номер);
			
			Начисление		= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачислениеСотрудника, "ВидРасчета");
			Ссылка			= ОбъектыПереносаДанных.Структура_Получить(Начисление, "Ссылка");
			СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(Начисление, "СпособРасчета");
			
			Если СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПоДоговоруФиксированнойСуммой") Тогда
				Продолжить;
			КонецЕсли;
			
			Если Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ОтпускПоУходуЗаРебенкомБезОплаты", "ОсновныеНачисления") Тогда
				ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска",	1);
				
				ПрименениеНачислений = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПрименениеПлановыхНачислений);
				ПрименениеНачислений.Сотрудник				= СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
				ПрименениеНачислений.РабочееМесто           = СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
				ПрименениеНачислений.Период					= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
				ПрименениеНачислений.Применение				= 0;
				
				Продолжить;
			КонецЕсли;
			
			ПрекратитьНачисление = 0;
			Если (Ссылка &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
			И (СпособРасчета &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет"))
			И (Ссылка &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет", "ОсновныеНачисления"))
			И (СпособРасчета &lt;&gt; ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет")) Тогда
				ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ИзменитьНачисления",	1);
				ПрекратитьНачисление = 1;
			КонецЕсли;
			
			Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
			Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет")) Тогда
				ДатаОкончанияНачисления = ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончанияПособияДоПолутораЛет;
			Иначе
				ДатаОкончанияНачисления = ИзменениеОтпускаПоУходуЗаРебенком_ДатаОкончания;
			КонецЕсли;
			
			ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ОбновитьНачисление", Параметры.Алгоритмы,
				ПлановоеНачислениеСотрудника, ПлановыеНачисления, Номер,
				СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо, ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение,
				СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия, ДатаОкончанияНачисления,
				ПрекратитьНачисление);
		КонецЦикла;
		
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисления, "РабочееМесто");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПлановыеНачисления, "ЯвляетсяОтпускомПоУходуЗаРебенком");
		Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПлановыеНачисления) Цикл
			ПлановоеНачисление = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ПлановыеНачисления, Номер);
			
			Ссылка			= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачисление.Начисление, "Ссылка");
			СпособРасчета	= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачисление.Начисление, "СпособРасчета");
			
			ЯвляетсяОтпускомПоУходуЗаРебенком = 0;
			Если (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет", "ОсновныеНачисления"))
			Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо1_5Лет"))
			Или (Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет", "ОсновныеНачисления"))
			Или (СпособРасчета = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_СпособРасчета", Параметры.Алгоритмы, "ПособиеПоУходуЗаРебенкомДо3Лет")) Тогда
				ЯвляетсяОтпускомПоУходуЗаРебенком = 1;
			КонецЕсли;
			
			ПлановоеНачисление.РабочееМесто							= ПлановоеНачисление.Сотрудник;
			ПлановоеНачисление.ЯвляетсяОтпускомПоУходуЗаРебенком	= ЯвляетсяОтпускомПоУходуЗаРебенком;
		КонецЦикла;
		
		Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ПрименениеПлановыхНачислений) = 0 Тогда
				
				ПрименениеНачислений = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПрименениеПлановыхНачислений);
				ПрименениеНачислений.Сотрудник				= СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
				ПрименениеНачислений.РабочееМесто           = СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
				ПрименениеНачислений.Период					= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
				ПрименениеНачислений.Применение				= 0;
				
		КонецЕсли;
		
		ПоказателиДокумента					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы);
		ПоказателиРегистра					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы); // Для изменения обособленного подразделения
		ЗначенияСовокупныхТарифныхСтавок	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияСовокупныхТарифныхСтавок_Описание", Параметры.Алгоритмы);
		ПрименениеПоказателей				= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПрименениеПоказателей_Описание", Параметры.Алгоритмы);
		ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ЗаполнитьПоказатели", Параметры.Алгоритмы,
			ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
				СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, ИзменениеОтпускаПоУходуЗаРебенком_ФизическоеЛицо, ИзменениеОтпускаПоУходуЗаРебенком_ОбособленноеПодразделение,
				СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия, ОбъектыПереносаДанных.Структура_Получить(ИзменениеОтпускаПоУходуЗаРебенком, "ДатаОкончания"));
		
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Начисления",	ПлановыеНачисления);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "Показатели",	ПоказателиДокумента);
		
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПлановыеНачисления",															ПлановыеНачисления);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПрименениеПлановыхНачислений",													ПрименениеПлановыхНачислений);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников",					ПоказателиРегистра);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ЗначенияСовокупныхТарифныхСтавокСотрудников",									ЗначенияСовокупныхТарифныхСтавок);
		ОбъектыПереносаДанных.Структура_Установить(ИзменениеОтпускаПоУходуЗаРебенком, "ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников",	ПрименениеПоказателей);
	КонецЕсли;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ИзменениеОтпускаПоУходуЗаРебенком);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="КадроваяИсторияСотрудников_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ТЗ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Сотрудник");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Период");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ГоловнаяОрганизация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ФизическоеЛицо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Организация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Подразделение");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ВидСобытия");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Должность");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "КоличествоСтавок");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ВидЗанятости");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ДействуетДо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ОрганизацияПоОкончании");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ПодразделениеПоОкончании");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ВидСобытияПоОкончании");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ДолжностьПоОкончании");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "КоличествоСтавокПоОкончании");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ВидЗанятостиПоОкончании");

Субконто = ТЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="КадровыйПеревод_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>КадровыйПеревод = Новый Структура;
КадровыйПеревод.Вставить("Сотрудник",						"");
КадровыйПеревод.Вставить("ДатаНачала",						"");
КадровыйПеревод.Вставить("Организация",						"");
КадровыйПеревод.Вставить("Подразделение",					"");
КадровыйПеревод.Вставить("ОбособленноеПодразделение",		"");
КадровыйПеревод.Вставить("ФизическоеЛицо",					"");
КадровыйПеревод.Вставить("Должность",						"");
КадровыйПеревод.Вставить("ГрафикРаботы",					"");
КадровыйПеревод.Вставить("КоличествоСтавок",				"");
КадровыйПеревод.Вставить("ДатаОкончания",					"");
КадровыйПеревод.Вставить("ВидЗанятости",					"");
КадровыйПеревод.Вставить("ВидДоговора",						"");
КадровыйПеревод.Вставить("НачисленияУтверждены",			"");
КадровыйПеревод.Вставить("ИзменитьПодразделениеИДолжность",	"");
КадровыйПеревод.Вставить("ИзменитьГрафикРаботы",			"");
КадровыйПеревод.Вставить("ИзменитьНачисления",				"");
КадровыйПеревод.Вставить("ИзменитьЕжегодныеОтпуска",		"");
КадровыйПеревод.Вставить("Дата",							"");
КадровыйПеревод.Вставить("Номер",							"");
КадровыйПеревод.Вставить("Ответственный",					"");
КадровыйПеревод.Вставить("Комментарий",						"");</Текст>
			</Алгоритм>
			<Алгоритм Имя="КадровыйПеревод_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>РаботникиОрганизаций					= ИсходящиеДанные.РаботникиОрганизаций;
ПлановыеНачисленияРаботниковОрганизаций	= ИсходящиеДанные.ПлановыеНачисленияРаботниковОрганизаций;

ДлинаСуток = 86400;

ДействиеСНачислением_Прекратить = Перечисления.ВидыДействияСНачислением.Прекратить;

ПредыдущиеДолжностиСотрудников = Новый Соответствие;

Для НомерВыборки = 1 По РаботникиОрганизаций.Количество() Цикл
	РаботникОрганизации = РаботникиОрганизаций[НомерВыборки-1];
	
	Если РаботникОрганизации.ПричинаИзмененияСостояния &lt;&gt; Перечисления.ПричиныИзмененияСостояния.Перемещение Тогда
		ПредыдущиеДолжностиСотрудников.Вставить(РаботникОрганизации.Сотрудник, РаботникОрганизации.Должность);
		Продолжить;
	КонецЕсли;
	
	КадровыйПеревод = Неопределено;
	Выполнить(Алгоритмы.КадровыйПеревод_Описание);
	КадровыйПеревод.Вставить("Сотрудник",							РаботникОрганизации.Сотрудник);
	КадровыйПеревод.Вставить("ДатаНачала",							РаботникОрганизации.Период);
	КадровыйПеревод.Вставить("Организация",							РаботникОрганизации.Организация);
	КадровыйПеревод.Вставить("Подразделение",						РаботникОрганизации.ПодразделениеОрганизации);
	КадровыйПеревод.Вставить("ОбособленноеПодразделение",			РаботникОрганизации.ОбособленноеПодразделение);
	КадровыйПеревод.Вставить("ФизическоеЛицо",						РаботникОрганизации.Сотрудник_Физлицо);
	КадровыйПеревод.Вставить("Должность",							РаботникОрганизации.Должность);
	КадровыйПеревод.Вставить("ГрафикРаботы",						РаботникОрганизации.ГрафикРаботы);
	КадровыйПеревод.Вставить("КоличествоСтавок",					РаботникОрганизации.ЗанимаемыхСтавок);
	КадровыйПеревод.Вставить("ДатаОкончания",						"");
	КадровыйПеревод.Вставить("ВидЗанятости",						РаботникОрганизации.Сотрудник_ВидЗанятости);
	КадровыйПеревод.Вставить("ВидДоговора",							РаботникОрганизации.Сотрудник_ВидДоговора);
	КадровыйПеревод.Вставить("НачисленияУтверждены",				1);
	КадровыйПеревод.Вставить("ИзменитьПодразделениеИДолжность",		1);
	КадровыйПеревод.Вставить("ИзменитьГрафикРаботы",				1);
	КадровыйПеревод.Вставить("ИзменитьНачисления",					0);
	КадровыйПеревод.Вставить("ИзменитьЕжегодныеОтпуска",			0);
	КадровыйПеревод.Вставить("Дата",								РаботникОрганизации.ПервичныйДокумент_Дата);
	КадровыйПеревод.Вставить("Ответственный",						РаботникОрганизации.ПервичныйДокумент_Ответственный);
	КадровыйПеревод.Вставить("Комментарий",							РаботникОрганизации.ПервичныйДокумент_Комментарий);
	
	ИзменитьНачисления	= 0;
	ПлановыеНачисленияСотрудника = ПлановыеНачисленияРаботниковОрганизаций.НайтиСтроки(Новый Структура("Сотрудник", РаботникОрганизации.Сотрудник));
	Если ПлановыеНачисленияСотрудника.Количество() &lt;&gt; 0 Тогда
		ПлановыеНачисления = Неопределено;
		Выполнить(Алгоритмы.ПлановыеНачисления_Описание);
		
		Для Номер = 1 По ПлановыеНачисленияСотрудника.Количество() Цикл
			ПлановоеНачислениеСотрудника = ПлановыеНачисленияСотрудника[Номер-1];
			
			Период			= ПлановоеНачислениеСотрудника["Период"];
			Если Период &gt; РаботникОрганизации.Период Тогда // Будущие начисления не обрабатываем
				Прервать;
			КонецЕсли;
			
			Начисление		= ПлановоеНачислениеСотрудника["ВидРасчета"];
			Ссылка			= Начисление["Ссылка"];
			СпособРасчета	= Начисление["СпособРасчета"];
			
			Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
			Или (СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
			Или (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Период = РаботникОрганизации.Период Тогда
				ИзменитьНачисления = 1;
			КонецЕсли;
			
			СтруктураДляПлановогоНачисления = Новый Структура(
				"ПлановоеНачислениеСотрудника,ПлановыеНачисления,ИдентификаторСтрокиВидаРасчета,Документ_Сотрудник,Документ_Сотрудник_Физлицо,Документ_ОбособленноеПодразделение,Документ_Период",
				ПлановоеНачислениеСотрудника,ПлановыеНачисления,
				Номер,
				РаботникОрганизации.Сотрудник,
				РаботникОрганизации.Сотрудник_Физлицо,
				РаботникОрганизации.ОбособленноеПодразделение,
				РаботникОрганизации.Период);
			Выполнить(Алгоритмы.ПлановыеНачисления_ОбновитьНачисление);
			
			//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ОбновитьНачисление", Параметры.Алгоритмы,
			//ПлановоеНачислениеСотрудника, ПлановыеНачисления, Номер,
			//РаботникОрганизации.Сотрудник, РаботникОрганизации.Сотрудник_Физлицо, РаботникОрганизации.ОбособленноеПодразделение,
			//РаботникОрганизации.Период, РаботникОрганизации.ПериодЗавершения);
		КонецЦикла;
		
		ЗначенияПоказателей = Неопределено;
		Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
		ПоказателиДокумента = ЗначенияПоказателей;
		
		ЗначенияПоказателей = Неопределено;
		Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
		ПоказателиРегистра = ЗначенияПоказателей;                  // Для изменения обособленного подразделения
		
		ЗначенияСовокупныхТарифныхСтавок = Неопределено;
		Выполнить(Алгоритмы.ЗначенияСовокупныхТарифныхСтавок_Описание);
		
		ПрименениеПоказателей = Неопределено;
		Выполнить(Алгоритмы.ПрименениеПоказателей_Описание);
		
		СтруктураПараметров = Новый Структура("ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
		|Документ_Сотрудник, Документ_Сотрудник_Физлицо, Документ_ОбособленноеПодразделение, Документ_Период",
		ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
		РаботникОрганизации.Сотрудник, РаботникОрганизации.Сотрудник_Физлицо, РаботникОрганизации.ОбособленноеПодразделение, РаботникОрганизации.Период);
		Выполнить(Алгоритмы.ПлановыеНачисления_ЗаполнитьПоказатели);
		
		КадровыйПеревод.Вставить("Начисления",	ПлановыеНачисления);
		КадровыйПеревод.Вставить("Показатели",	ПоказателиДокумента);
		
		Если ИзменитьНачисления = 1 Тогда
			КадровыйПеревод.Вставить("ИзменитьНачисления",															1);
		КонецЕсли;
	КонецЕсли;
	
	ПредыдущаяДолжность = ПредыдущиеДолжностиСотрудников[РаботникОрганизации.Сотрудник];
	
	ИзменитьЕжегодныеОтпуска	= 0;
	
	ЕжегодныеОтпуска = Неопределено;
	Выполнить(Алгоритмы.ЕжегодныеОтпуска_Описание);
	ЕжегодныеОтпускаДокумента = ЕжегодныеОтпуска;
	
	СтруктураПараметров = Новый Структура("ЕжегодныеОтпускаДокумента, Сотрудник, Период, ЕжегодныеОтпуска_Выборка, Должность, ПредыдущаяДолжность, ИзменитьЕжегодныеОтпуска",
		ЕжегодныеОтпускаДокумента, РаботникОрганизации.Сотрудник, РаботникОрганизации.Период, ИсходящиеДанные, РаботникОрганизации.Должность, ПредыдущаяДолжность, ИзменитьЕжегодныеОтпуска);
	Выполнить(Алгоритмы.ЕжегодныеОтпуска_Заполнить);
	
	КадровыйПеревод.Вставить("ЕжегодныеОтпуска",						ЕжегодныеОтпускаДокумента);
	Если ИзменитьЕжегодныеОтпуска = 1 Тогда
		КадровыйПеревод.Вставить("ИзменитьЕжегодныеОтпуска",			1);
	КонецЕсли;
	
	ПредыдущиеДолжностиСотрудников.Вставить(РаботникОрганизации.Сотрудник, РаботникОрганизации.Должность);
	
	ВыгрузитьПоПравилу(КадровыйПеревод, , , , "КадровыйПеревод");
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="КонтактнаяИнформация_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы		= ВидСубконто;
//СтрокиКИ		= ИсходящиеДанные;

КонтактнаяИнформация = Новый ТаблицаЗначений;
КонтактнаяИнформация.Колонки.Добавить("Вид");
КонтактнаяИнформация.Колонки.Добавить("Тип");
КонтактнаяИнформация.Колонки.Добавить("ЗначенияПолей");
КонтактнаяИнформация.Колонки.Добавить("Предопределенный");

Для каждого СтрокаКИ Из СтрокиКИ Цикл
	
	ВидКИ_Структура = Новый Структура;
	ВидКИ_Структура.Вставить("Тип");
	ВидКИ_Структура.Вставить("Значение", "");
	ВидКИ_Структура.Вставить("Наименование");
	ВидКИ_Структура.Вставить("Родитель");
	ВидКИ_Структура.Вставить("Предопределенный", Ложь);
	ВидКИ_Структура.Вставить("Используется", Истина);
	
	ВидКИ = СтрокаКИ.Вид;
	ТипКИ = СтрокаКИ.Тип;
	
	Предопределенный = Ложь;
	// Вид может иметь тип "Строка" и быть пустым
	Если Не ЗначениеЗаполнено(ВидКИ) Тогда
		Продолжить;
	ИначеЕсли ТипЗнч(ВидКИ) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
		ВидКИ_Структура.Предопределенный = ВидКИ.Предопределенный;
		ВидКИ_Структура.Значение = ?(ВидКИ_Структура.Предопределенный, ВидКИ,"");
		ВидКИ_Структура.Наименование = ВидКИ.Наименование;
	Иначе
		ВидКИ_Структура.Наименование = ВидКИ;
	КонецЕсли;
	
	Если ТипЗнч(СтрокаКИ.Объект) = Тип("СправочникСсылка.Организации") Тогда
		ВидКИ_Структура.Родитель = Перечисления.ВидыОбъектовКонтактнойИнформации.Организации;
	ИначеЕсли ТипЗнч(СтрокаКИ.Объект) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ВидКИ_Структура.Родитель = Перечисления.ВидыОбъектовКонтактнойИнформации.ФизическиеЛица;
	ИначеЕсли ТипЗнч(СтрокаКИ.Объект) = Тип("СправочникСсылка.Пользователи") Тогда
		ВидКИ_Структура.Родитель = Перечисления.ВидыОбъектовКонтактнойИнформации.Пользователи;
	Иначе
		ВидКИ_Структура.Родитель = Перечисления.ВидыОбъектовКонтактнойИнформации.Организации;
	КонецЕсли;
	
	Если ВидКИ = Справочники.ВидыКонтактнойИнформации.ФаксОрганизации Тогда
		ТипКИ	= "Факс";
	КонецЕсли;
	
	Если Не ВидКИ_Структура.Предопределенный Тогда
		ВидКИ_Структура.Тип = ТипКИ;
	КонецЕсли;
	
	ЗначенияПолей = Новый Структура;
	Если ВидКИ = Справочники.ВидыКонтактнойИнформации.ИнострАдресФизЛица Тогда
		
		ЗначенияПолей.Вставить("Представление",				СтрокаКИ.Представление);
		ЗначенияПолей.Вставить("Страна",					СтрокаКИ.Поле1);
		ЗначенияПолей.Вставить("КодСтраны",					"");
		ЗначенияПолей.Вставить("Индекс",					"");
		ЗначенияПолей.Вставить("Регион",					"");
		ЗначенияПолей.Вставить("КодРегиона",				"");
		ЗначенияПолей.Вставить("РегионСокращение",			"");
		ЗначенияПолей.Вставить("Район",						"");
		ЗначенияПолей.Вставить("РайонСокращение",			"");
		ЗначенияПолей.Вставить("Город",						"");
		ЗначенияПолей.Вставить("ГородСокращение",			"");
		ЗначенияПолей.Вставить("НаселенныйПункт",			"");
		ЗначенияПолей.Вставить("НаселенныйПунктСокращение",	"");
		ЗначенияПолей.Вставить("Улица",						"");
		ЗначенияПолей.Вставить("УлицаСокращение",			"");
		ЗначенияПолей.Вставить("ТипДома",					"");
		ЗначенияПолей.Вставить("Дом",						"");
		ЗначенияПолей.Вставить("ТипКорпуса",				"");
		ЗначенияПолей.Вставить("Корпус",					"");
		ЗначенияПолей.Вставить("ТипКвартиры",				"");
		ЗначенияПолей.Вставить("Квартира",					"");
		ЗначенияПолей.Вставить("Комментарий",				СтрокаКИ.Комментарий);
		
	ИначеЕсли ТипКИ = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		
		ЗначенияПолей.Вставить("Представление",				СтрокаКИ.Представление);
		ЗначенияПолей.Вставить("Страна",					"Украина");
		ЗначенияПолей.Вставить("КодСтраны",					"804");
		ЗначенияПолей.Вставить("Индекс",					СтрокаКИ.Поле1);
		ЗначенияПолей.Вставить("Регион",					СтрокаКИ.Поле2);
		ЗначенияПолей.Вставить("КодРегиона",				"");
		ЗначенияПолей.Вставить("РегионСокращение",			"");
		ЗначенияПолей.Вставить("Район",						СтрокаКИ.Поле3);
		ЗначенияПолей.Вставить("РайонСокращение",			"");
		ЗначенияПолей.Вставить("Город",						СтрокаКИ.Поле4);
		ЗначенияПолей.Вставить("ГородСокращение",			"");
		ЗначенияПолей.Вставить("НаселенныйПункт",			СтрокаКИ.Поле5);
		ЗначенияПолей.Вставить("НаселенныйПунктСокращение",	"");
		ЗначенияПолей.Вставить("Улица",						СтрокаКИ.Поле6);
		ЗначенияПолей.Вставить("УлицаСокращение",			"");
		ЗначенияПолей.Вставить("ТипДома",					?(ЗначениеЗаполнено(СтрокаКИ.ТипДома),Метаданные.Перечисления.ТипыДомов.ЗначенияПеречисления.Получить(Перечисления.ТипыДомов.Индекс(СтрокаКИ.ТипДома)).Имя,"")); 
		ЗначенияПолей.Вставить("Дом",						СтрокаКИ.Поле7);
		ЗначенияПолей.Вставить("ТипКорпуса",				?(ЗначениеЗаполнено(СтрокаКИ.ТипКорпуса),Метаданные.Перечисления.ТипыКорпусов.ЗначенияПеречисления.Получить(Перечисления.ТипыКорпусов.Индекс(СтрокаКИ.ТипКорпуса)).Имя,""));
		ЗначенияПолей.Вставить("Корпус",					СтрокаКИ.Поле8);
		ЗначенияПолей.Вставить("ТипКвартиры",				?(ЗначениеЗаполнено(СтрокаКИ.ТипКвартиры),Метаданные.Перечисления.ТипыКвартир.ЗначенияПеречисления.Получить(Перечисления.ТипыКвартир.Индекс(СтрокаКИ.ТипКвартиры)).Имя,""));
		ЗначенияПолей.Вставить("Квартира",					СтрокаКИ.Поле9);
		ЗначенияПолей.Вставить("Комментарий",				СтрокаКИ.Комментарий);
		
	ИначеЕсли ТипКИ = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		
		ЗначенияПолей.Вставить("Представление",				СтрокаКИ.Представление);
		ЗначенияПолей.Вставить("КодСтраны",					СтрокаКИ.Поле1);
		ЗначенияПолей.Вставить("КодГорода",					СтрокаКИ.Поле2);
		ЗначенияПолей.Вставить("НомерТелефона",				СтрокаКИ.Поле3);
		ЗначенияПолей.Вставить("Добавочный",				СтрокаКИ.Поле4);
		ЗначенияПолей.Вставить("Комментарий",				СтрокаКИ.Комментарий);
		
	Иначе  
		
		ЗначенияПолей.Вставить("Представление",				СтрокаКИ.Представление);
		ЗначенияПолей.Вставить("Комментарий",				СтрокаКИ.Комментарий);
		
	КонецЕсли;
	
	Результат = "";
	Для Каждого КлючИЗначение Из ЗначенияПолей Цикл
		Если ПустаяСтрока(КлючИЗначение.Значение) Тогда
			Продолжить;
		КонецЕсли;
		Результат = Результат + ?(Результат = "", "", Символы.ПС)+ КлючИЗначение.Ключ + "=" + СтрЗаменить(КлючИЗначение.Значение, Символы.ПС, Символы.ПС + Символы.Таб);
	КонецЦикла;
	
	НоваяСтрокаКИ = КонтактнаяИнформация.Добавить();
	НоваяСтрокаКИ.Вид				= ВидКИ_Структура;
	НоваяСтрокаКИ.Тип				= ТипКИ;
	НоваяСтрокаКИ.ЗначенияПолей		= Результат;
	
КонецЦикла;

//Субконто		= КонтактнаяИнформация;</Текст>
				<Параметры>СтрокаКИ, ВидКИ, ЗначенияПолей</Параметры>
			</Алгоритм>
			<Алгоритм Имя="МестаВыплатыЗарплатыСотрудников_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаМестаВыплатыЗарплатыСотрудников	= ИсходящиеДанные.МестаВыплатыЗарплатыСотрудников;

ВыборкаДанных	= Новый Массив;

ВалютаПоУмолчанию = Константы.ВалютаРегламентированногоУчета.Получить();

ТаблицаМестаВыплатыЗарплатыСотрудников.Колонки.Добавить("Вид");
ТаблицаМестаВыплатыЗарплатыСотрудников.Колонки.Добавить("МестоВыплаты");
Для Номер = 1 По ТаблицаМестаВыплатыЗарплатыСотрудников.Количество() Цикл
	МестоВыплатыЗарплаты = ТаблицаМестаВыплатыЗарплатыСотрудников[Номер-1];
	
	МестоВыплатыЗарплаты.Вид				= "ЗарплатныйПроект";
	
	ЗарплатныйПроект = Новый Структура;
	ЗарплатныйПроект.Вставить("Организация",	МестоВыплатыЗарплаты.Организация);
	ЗарплатныйПроект.Вставить("Банк",			МестоВыплатыЗарплаты.Банк);
	ЗарплатныйПроект.Вставить("НомерДоговора",	"");
	ЗарплатныйПроект.Вставить("Валюта",			ВалютаПоУмолчанию);
	
	МестоВыплатыЗарплаты.МестоВыплаты	= ЗарплатныйПроект;
			
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(МестоВыплатыЗарплаты));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НаградыФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаНаградыФизическихЛиц	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "НаградыФизическихЛиц");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаНаградыФизическихЛиц, "ФизическоеЛицо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаНаградыФизическихЛиц, "НомерПоПорядку");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаНаградыФизическихЛиц, "НаименованиеПриказа");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаНаградыФизическихЛиц) Цикл
	Награда = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаНаградыФизическихЛиц, Номер);
	
	Награда.ФизическоеЛицо		= Награда.ФизЛицо;
	Награда.НомерПоПорядку		= Награда.НомерСтроки;
	Награда.НаименованиеПриказа	= Награда.ЧейПриказ;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(Награда));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НастройкиВоинскогоУчета_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = Новый Массив;

НастройкиВоинскогоУчета = ИсходящиеДанные;

ВыборкаДанных.Добавить(НастройкиВоинскогоУчета);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НастройкиЗаймовСотрудникам_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = Новый Массив;

ИспользоватьЗаймыСотрудникам = ИсходящиеДанные;

ВыборкаДанных.Добавить(ИспользоватьЗаймыСотрудникам);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачальныеОстаткиОтпусков_Выбрать" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы								= ВидСубконто;
//Параметры								= ИсходящиеДанные;
//Запросы									= ВходящиеДанные;

ДатаПолученияОстатков = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;

Запрос = Новый Запрос;
Запрос.УстановитьПараметр("ДатаНачалаРаботыСПрограммой", ДатаПолученияОстатков);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблиц;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	Сотрудники.Сотрудник
|ИЗ
|	ВТСотрудники КАК Сотрудники";
ТабСотрудников = Запрос.Выполнить().Выгрузить();
МассивСотрудников = ТабСотрудников.ВыгрузитьКолонку("Сотрудник");

// Получаем рассчитанные данные.
ТаблицаДанных = ОстаткиОтпусков.ОписаниеТаблицыДанных();
Для Каждого Сотрудник Из МассивСотрудников Цикл
	Строка = ТаблицаДанных.Добавить();
	Строка.Сотрудник				= Сотрудник;
	Строка.ДатаОстатков				= НачалоДня(ДатаПолученияОстатков);
КонецЦикла;

РезультатОстатковОтпусков = ОстаткиОтпусков.ОстаткиОтпусков(ТаблицаДанных);

// Описываем возвращаемые значения.
// Первая табличная часть.
ЕжегодныеОтпуска = Новый ТаблицаЗначений;
ЕжегодныеОтпуска.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
ЕжегодныеОтпуска.Колонки.Добавить("ВидЕжегодногоОтпуска", Новый ОписаниеТипов("СправочникСсылка.ВидыЕжегодныхОтпусков"));
ЕжегодныеОтпуска.Колонки.Добавить("КоличествоДнейВГод", Новый ОписаниеТипов("Число"));
ЕжегодныеОтпуска.Колонки.Добавить("ДатаОстатка", Новый ОписаниеТипов("Дата"));
ЕжегодныеОтпуска.Колонки.Добавить("КоличествоДней", Новый ОписаниеТипов("Число"));

// Вторая табличная часть.
ОстаткиОтпусковПоРабочимГодам = Новый ТаблицаЗначений;
ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("ВидЕжегодногоОтпуска", Новый ОписаниеТипов("СправочникСсылка.ВидыЕжегодныхОтпусков"));
ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("ДатаОстатка", Новый ОписаниеТипов("Дата"));
ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("РабочийГодНачало", Новый ОписаниеТипов("Дата"));
ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("РабочийГодОкончание", Новый ОписаниеТипов("Дата"));
ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("Остаток", Новый ОписаниеТипов("Число"));

// Итоговая таблица.
ИтоговаяТаблица = Новый ТаблицаЗначений;   
ИтоговаяТаблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
ИтоговаяТаблица.Колонки.Добавить("ВидДоговора", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДоговоровСФизЛицами"));
ИтоговаяТаблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
ИтоговаяТаблица.Колонки.Добавить("ЕжегодныеОтпуска", Новый ОписаниеТипов("ТаблицаЗначений"));
ИтоговаяТаблица.Колонки.Добавить("ОстаткиОтпусковПоРабочимГодам", Новый ОписаниеТипов("ТаблицаЗначений"));

Результат = Новый ТаблицаЗначений;
Результат.Колонки.Добавить("Сотрудник");
Результат.Колонки.Добавить("ОстатокНаДату");
Результат.Колонки.Добавить("РабочийГодС");
Результат.Колонки.Добавить("РабочийГодПо");
Результат.Колонки.Добавить("Примечание");
Результат.Колонки.Добавить("ОстаткиВРазрезеВидовОтпусков");
Результат.Колонки.Добавить("ОстаткиВРазрезеРабочихЛетИВидовОтпусков");
Результат.Колонки.Добавить("ПравоНаОтпускПриПриемеНаРаботу");

Для Каждого СтрокаРезультата Из РезультатОстатковОтпусков Цикл
	ОстаткиВРазрезеРабочихЛетИВидовОтпусков = Новый Массив;
	Для Каждого РабочийГод Из СтрокаРезультата.ДанныеРасчета Цикл
		Если РабочийГод.ДоступноДляСписанияВЭтомГоду = 0 Тогда
			Продолжить;
		КонецЕсли;
		ОстаткиВРазрезеРабочихЛетИВидовОтпусков.Добавить(Новый Структура("ВидЕжегодногоОтпуска, ОсталосьДней, РабочийГодС, РабочийГодПо, ПоследнийРабочийГод",
		РабочийГод.ВидЕжегодногоОтпуска, РабочийГод.ДоступноДляСписанияВЭтомГоду, РабочийГод.ДатаНачала, РабочийГод.ДатаОкончания, РабочийГод.ПоследнийРабочийГод));
	КонецЦикла;
	
	Строка = Результат.Добавить();
	Строка.Сотрудник								= СтрокаРезультата.Сотрудник;
	Строка.ОстатокНаДату							= СтрокаРезультата.ОстатокНаДату;
	Строка.РабочийГодС								= СтрокаРезультата.РабочийГодС;
	Строка.РабочийГодПо								= СтрокаРезультата.РабочийГодПо;
	Строка.Примечание								= СтрокаРезультата.Примечание;
	Строка.ОстаткиВРазрезеВидовОтпусков				= СтрокаРезультата.ОстатокНаДатуПоВидамЕжегодныхОтпусков;
	Строка.ОстаткиВРазрезеРабочихЛетИВидовОтпусков	= ОстаткиВРазрезеРабочихЛетИВидовОтпусков;
	Строка.ПравоНаОтпускПриПриемеНаРаботу	= СтрокаРезультата.ПравоНаОтпускПриПриемеНаРаботу;
КонецЦикла;

// Обрабатываем их.
Для Каждого СтрокаСотрудника Из Результат Цикл
	
	// Заполняем информацию по остаткам отпусков в разрезе лет.
	ОстаткиОтпусковСотрудника = ОстаткиОтпусковПоРабочимГодам.СкопироватьКолонки();
	Если НЕ СтрокаСотрудника.ОстаткиВРазрезеРабочихЛетИВидовОтпусков = Неопределено
		И СтрокаСотрудника.ОстаткиВРазрезеРабочихЛетИВидовОтпусков.Количество() &gt; 0 Тогда
		
		Для каждого ОстатокОтпуска Из СтрокаСотрудника.ОстаткиВРазрезеРабочихЛетИВидовОтпусков Цикл
			НовыйОстаток = ОстаткиОтпусковСотрудника.Добавить();
			НовыйОстаток.Сотрудник = СтрокаСотрудника.Сотрудник;
			НовыйОстаток.ВидЕжегодногоОтпуска = ОстатокОтпуска.ВидЕжегодногоОтпуска;
			НовыйОстаток.ДатаОстатка = ДатаПолученияОстатков;
			НовыйОстаток.РабочийГодНачало = ОстатокОтпуска.РабочийГодС;
			НовыйОстаток.РабочийГодОкончание = ОстатокОтпуска.РабочийГодПо;
			НовыйОстаток.Остаток = ОстатокОтпуска.ОсталосьДней;
		КонецЦикла;
		Для каждого ОстатокОтпуска Из ОстаткиОтпусковСотрудника Цикл
			ЗаполнитьЗначенияСвойств(ОстаткиОтпусковПоРабочимГодам.Добавить(), ОстатокОтпуска);
		КонецЦикла; 
		ОстаткиОтпусковСотрудника.Свернуть("Сотрудник, ВидЕжегодногоОтпуска", "Остаток");
		
		// Заполняем ежегодные отпуска - сводную информацию по остаткам + права на отпуска.
		Для каждого ОстатокОтпуска Из ОстаткиОтпусковСотрудника Цикл
			Если ОстатокОтпуска.Остаток &gt; 0 Тогда
				ОстатокИПраво = ЕжегодныеОтпуска.Добавить();
				ЗаполнитьЗначенияСвойств(ОстатокИПраво, ОстатокОтпуска);
				ОстатокИПраво.КоличествоДней = ОстатокОтпуска.Остаток;
				ОстатокИПраво.ДатаОстатка = ДатаПолученияОстатков;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ СтрокаСотрудника.ПравоНаОтпускПриПриемеНаРаботу = Неопределено
		И СтрокаСотрудника.ПравоНаОтпускПриПриемеНаРаботу.Количество() &gt; 0 Тогда
		
		Для каждого ПравоНаОтпуск Из СтрокаСотрудника.ПравоНаОтпускПриПриемеНаРаботу Цикл
			НайденныеСтроки = ЕжегодныеОтпуска.НайтиСтроки(Новый Структура("Сотрудник, ВидЕжегодногоОтпуска", СтрокаСотрудника.Сотрудник, ПравоНаОтпуск.ВидЕжегодногоОтпуска)); 
			Если НайденныеСтроки.Количество() = 0 Тогда
				ОстатокИПраво = ЕжегодныеОтпуска.Добавить();
				ОстатокИПраво.Сотрудник = СтрокаСотрудника.Сотрудник;
				ОстатокИПраво.ВидЕжегодногоОтпуска = ПравоНаОтпуск.ВидЕжегодногоОтпуска;
				ОстатокИПраво.ДатаОстатка = ДатаПолученияОстатков;
				ОстатокИПраво.КоличествоДней = 0;
			Иначе
				ОстатокИПраво = НайденныеСтроки[0];
			КонецЕсли;
			ОстатокИПраво.КоличествоДнейВГод = ПравоНаОтпуск.КоличествоДнейОтпускаВГод;
		КонецЦикла;
		
	КонецЕсли;
	
КонецЦикла;

// Далее сортируем сотрудников по организациям (обособленным подразделениям)
// Формируем возвращаемое значение
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	РаботникиОрганизацийСрезПоследних.Сотрудник,
|	ВЫБОР
|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения &lt;= &amp;ДатаПолученияОстатков
|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения &lt;&gt; ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
|			ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
|	КОНЕЦ КАК Организация,
|	ВЫБОР
|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения &lt;= &amp;ДатаПолученияОстатков
|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения &lt;&gt; ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
|	КОНЕЦ КАК ПодразделениеОрганизации,
|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидДоговора КАК ВидДоговора
|ИЗ
|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&amp;ДатаПолученияОстатков, Сотрудник В (&amp;МассивСотрудников)) КАК РаботникиОрганизацийСрезПоследних
|
|УПОРЯДОЧИТЬ ПО
|	Организация,
|	ВидДоговора,
|	ПодразделениеОрганизации
|ИТОГИ ПО
|	Организация,
|	ВидДоговора,
|	ПодразделениеОрганизации";

Запрос.УстановитьПараметр("ДатаПолученияОстатков", ДатаПолученияОстатков);
Запрос.УстановитьПараметр("МассивСотрудников", ЕжегодныеОтпуска.ВыгрузитьКолонку("Сотрудник"));
РезультатЗапроса = Запрос.Выполнить();

ВыборкаОрганизации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Пока ВыборкаОрганизации.Следующий() Цикл
	
	ВыборкаВидДоговора = ВыборкаОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВидДоговора.Следующий() Цикл
		
		ВыборкаПодразделения = ВыборкаВидДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПодразделения.Следующий() Цикл
			
			НоваяСтрокаОтпусков = ИтоговаяТаблица.Добавить();
			НоваяСтрокаОтпусков.Организация = ВыборкаОрганизации.Организация;
			НоваяСтрокаОтпусков.ВидДоговора = ВыборкаВидДоговора.ВидДоговора;
			НоваяСтрокаОтпусков.Подразделение = ВыборкаПодразделения.ПодразделениеОрганизации;
			
			ЕжегодныеОтпускаОрганизации = ЕжегодныеОтпуска.СкопироватьКолонки();
			ОстаткиОтпусковПоРабочимГодамОрганизации = ОстаткиОтпусковПоРабочимГодам.СкопироватьКолонки();
			
			ВыборкаДетальныеЗаписи = ВыборкаПодразделения.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ЕжегодныеОтпускаСотрудника = ЕжегодныеОтпуска.НайтиСтроки(Новый Структура("Сотрудник", ВыборкаДетальныеЗаписи.Сотрудник));
				Для каждого СтрокаЕжегодныеОтпускаСотрудника Из ЕжегодныеОтпускаСотрудника Цикл
					ЗаполнитьЗначенияСвойств(ЕжегодныеОтпускаОрганизации.Добавить(), СтрокаЕжегодныеОтпускаСотрудника);
				КонецЦикла; 
				ОстаткиСотрудникаОтпусковПоРабочимГодам = ОстаткиОтпусковПоРабочимГодам.НайтиСтроки(Новый Структура("Сотрудник", ВыборкаДетальныеЗаписи.Сотрудник));
				Для каждого СтрокаОстаткиСотрудникаОтпусковПоРабочимГодам Из ОстаткиСотрудникаОтпусковПоРабочимГодам Цикл
					ЗаполнитьЗначенияСвойств(ОстаткиОтпусковПоРабочимГодамОрганизации.Добавить(), СтрокаОстаткиСотрудникаОтпусковПоРабочимГодам);
				КонецЦикла; 
				
			КонецЦикла;
			
			НоваяСтрокаОтпусков.ЕжегодныеОтпуска = ЕжегодныеОтпускаОрганизации;
			НоваяСтрокаОтпусков.ОстаткиОтпусковПоРабочимГодам = ОстаткиОтпусковПоРабочимГодамОрганизации;
			
		КонецЦикла;	
		
	КонецЦикла;
	
КонецЦикла;

Субконто = ИтоговаяТаблица;</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_Показатели" ИспользуетсяПриЗагрузке="false">
				<Текст>//НачислениеУдержаниеСсылка	= Удержание;
//ФормулаРасчета				= "";

СЗ = Новый Структура;
Выполнить(Алгоритмы.НачислениеУдержание_Описание);
НачислениеУдержание = СЗ;
ЗаполнитьЗначенияСвойств(НачислениеУдержание, НачислениеУдержаниеСсылка);

Ссылка				= НачислениеУдержание.Ссылка;
СпособРасчета		= НачислениеУдержание.СпособРасчета;
ПоказателиОбъект	= НачислениеУдержание.Показатели;

Показатели = Неопределено;
Выполнить(Алгоритмы.Показатели_Описание);

Если ТипЗнч(ПоказателиОбъект) &lt;&gt; Тип("ТаблицаЗначений") Тогда
	Для НомерПоказателя = 1 По ПоказателиОбъект.Количество() Цикл
		ПоказательИзОбъекта = ПоказателиОбъект[НомерПоказателя-1];
	
		НовыйПоказатель = Показатели.Добавить();
		
		Показатель = Неопределено;
		Выполнить(Алгоритмы.Показатель_Описание);
		НовыйПоказатель.Показатель = Показатель;
		ЗаполнитьЗначенияСвойств(НовыйПоказатель.Показатель, ПоказательИзОбъекта.Показатель);
				
		Идентификатор = ПоказательИзОбъекта.Показатель.Идентификатор;
		Выполнить(Алгоритмы.ПереставитьПервуюЦифруИдентификатора);
		НовыйПоказатель.Показатель.Идентификатор = Идентификатор; 

		НовыйПоказатель.Показатель.Вставить("Процентный", ?(НовыйПоказатель.Показатель.ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Процентный, 1, 0));
		НовыйПоказатель.ЗапрашиватьПриКадровыхПеремещениях = ПоказательИзОбъекта.ЗапрашиватьПриКадровыхПеремещениях;
	КонецЦикла;
	
Иначе
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПоказателиОбъект, Показатели);
	
КонецЕсли;

Показатели.Колонки.Добавить("ЗапрашиватьПриВводе");
Выполнить(Алгоритмы.Формула_Преобразовать);

ОчиститьТаблицуПоказателей = 0;
Показатель1	= НачислениеУдержание.Показатель1;
Показатель2	= НачислениеУдержание.Показатель2;
Показатель3	= НачислениеУдержание.Показатель3;
Показатель4	= НачислениеУдержание.Показатель4;
Показатель5	= НачислениеУдержание.Показатель5;
Показатель6	= НачислениеУдержание.Показатель6;
Показатель1Запрашивать	= НачислениеУдержание.Показатель1Запрашивать;
Показатель2Запрашивать	= НачислениеУдержание.Показатель2Запрашивать;
Показатель3Запрашивать	= НачислениеУдержание.Показатель3Запрашивать;
Показатель4Запрашивать	= НачислениеУдержание.Показатель4Запрашивать;
Показатель5Запрашивать	= НачислениеУдержание.Показатель5Запрашивать;
Показатель6Запрашивать	= НачислениеУдержание.Показатель6Запрашивать;
Если ЗначениеЗаполнено(Показатель1) = 1 Тогда
	СтруктураПоказатель = Новый Структура;
	СтруктураПоказатель.Вставить("ПоказательСсылка", 		Показатель1);
	СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	Показатель1Запрашивать);
	СтруктураПоказатель.Вставить("НомерПоказателя", 		1);
	СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
	СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
	Выполнить(Алгоритмы.Показатель_Преобразовать);
	Показатель1	= СтруктураПоказатель.Показатель;
	ОчиститьТаблицуПоказателей = 1;
КонецЕсли;
Если ЗначениеЗаполнено(Показатель2) = 1 Тогда
	СтруктураПоказатель = Новый Структура;
	СтруктураПоказатель.Вставить("ПоказательСсылка", 		Показатель2);
	СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	Показатель2Запрашивать);
	СтруктураПоказатель.Вставить("НомерПоказателя", 		2);
	СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
	СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
	Выполнить(Алгоритмы.Показатель_Преобразовать);
	Показатель2	= СтруктураПоказатель.Показатель;
	ОчиститьТаблицуПоказателей = 1;
КонецЕсли;
Если ЗначениеЗаполнено(Показатель3) = 1 Тогда
	СтруктураПоказатель = Новый Структура;
	СтруктураПоказатель.Вставить("ПоказательСсылка", 		Показатель3);
	СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	Показатель3Запрашивать);
	СтруктураПоказатель.Вставить("НомерПоказателя", 		3);
	СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
	СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
	Выполнить(Алгоритмы.Показатель_Преобразовать);
	Показатель3	= СтруктураПоказатель.Показатель;
	ОчиститьТаблицуПоказателей = 1;
КонецЕсли;
Если ЗначениеЗаполнено(Показатель4) = 1 Тогда
	СтруктураПоказатель = Новый Структура;
	СтруктураПоказатель.Вставить("ПоказательСсылка", 		Показатель4);
	СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	Показатель4Запрашивать);
	СтруктураПоказатель.Вставить("НомерПоказателя", 		4);
	СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
	СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
	Выполнить(Алгоритмы.Показатель_Преобразовать);
	Показатель4	= СтруктураПоказатель.Показатель;
	ОчиститьТаблицуПоказателей = 1;
КонецЕсли;
Если ЗначениеЗаполнено(Показатель5) = 1 Тогда
	СтруктураПоказатель = Новый Структура;
	СтруктураПоказатель.Вставить("ПоказательСсылка", 		Показатель5);
	СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	Показатель5Запрашивать);
	СтруктураПоказатель.Вставить("НомерПоказателя", 		5);
	СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
	СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
	Выполнить(Алгоритмы.Показатель_Преобразовать);
	Показатель5	= СтруктураПоказатель.Показатель;
	ОчиститьТаблицуПоказателей = 1;
КонецЕсли;
Если ЗначениеЗаполнено(Показатель6) = 1 Тогда
	СтруктураПоказатель = Новый Структура;
	СтруктураПоказатель.Вставить("ПоказательСсылка", 		Показатель6);
	СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	Показатель6Запрашивать);
	СтруктураПоказатель.Вставить("НомерПоказателя", 		6);
	СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
	СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
	Выполнить(Алгоритмы.Показатель_Преобразовать);
	Показатель6	= СтруктураПоказатель.Показатель;
	ОчиститьТаблицуПоказателей = 1;
КонецЕсли;


НачислениеДоплатаЗаВечерниеЧасы 		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаВечерниеЧасы;
НачислениеДоплатаЗаНочныеЧасы 			= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаНочныеЧасы;
НачислениеДоплатаЗаПраздничныеИВыходные = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаПраздничныеИВыходные;
НачислениеОкладПоДням 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням;
НачислениеОкладПоЧасам 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоЧасам;
НачислениеТарифДневной 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифДневной;
НачислениеТарифЧасовой 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифЧасовой;
НачислениеОплатаПраздничныхИВыходных 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных;
НачислениеОплатаСверхурочных 			= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных;
НачислениеСдельнаяОплата 				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СдельнаяОплата;
НачислениеОплатаПоСреднему 				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднему;
НачислениеКвартальная 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Квартальная;
НачислениеМесячная 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Месячная;
НачислениеГодовая 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Годовая;

СпособРасчетаДоплатаЗаВечерниеЧасы 				= Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы;
СпособРасчетаДоплатаЗаНочныеЧасы 				= Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы;
СпособРасчетаПоМесячнойТарифнойСтавкеПоДням 	= Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням;
СпособРасчетаПоМесячнойТарифнойСтавкеПоЧасам 	= Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам;
СпособРасчетаПоДневнойТарифнойСтавке 			= Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке;
СпособРасчетаПоЧасовойТарифнойСтавке 			= Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке;
СпособРасчетаСдельныйЗаработок 					= Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок;
СпособРасчетаПоСреднемуЗаработку 				= Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку;
СпособРасчетаПоСреднемуЗаработкуДляОтпуска 		= Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска;
СпособРасчетаПроцентом					 		= Перечисления.СпособыРасчетаОплатыТруда.Процентом;
СпособРасчетаФиксированнойСуммой                = Перечисления.СпособыРасчетаОплатыТруда.ФиксированнойСуммой;
СпособРасчетаПроизвольнаяФормула                = Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула;

Если (Ссылка = НачислениеДоплатаЗаВечерниеЧасы)
Или (СпособРасчета = СпособРасчетаДоплатаЗаВечерниеЧасы) Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ВремяВЧасах";
	Идентификатор = "ВремяВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
	Наименование  = "ПроцентДоплатыЗаРаботуВВечернееВремя";
	Идентификатор = "ПроцентДоплатыЗаРаботуВВечернееВремя";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель3	= Показатель;
	
ИначеЕсли (Ссылка = НачислениеДоплатаЗаНочныеЧасы)
Или (СпособРасчета = СпособРасчетаДоплатаЗаНочныеЧасы) Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ВремяВЧасах";
	Идентификатор = "ВремяВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
	Наименование  = "ПроцентДоплатыЗаРаботуВНочноеВремя";
	Идентификатор = "ПроцентДоплатыЗаРаботуВНочноеВремя";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель3	= Показатель;
	
ИначеЕсли Ссылка = НачислениеДоплатаЗаПраздничныеИВыходные Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ВремяВДняхЧасах";
	Идентификатор = "ВремяВДняхЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
	Наименование  = "СтоимостьДняЧаса";
	Идентификатор = "СтоимостьДняЧаса";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
ИначеЕсли (Ссылка = НачислениеОкладПоДням) Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "Оклад";
	Идентификатор = "Оклад";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
ИначеЕсли СпособРасчета = СпособРасчетаПоМесячнойТарифнойСтавкеПоДням Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование = НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		= СтруктураИдентификатора.Идентификатор;
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать = 1;	
	
ИначеЕсли Ссылка = НачислениеОкладПоЧасам Тогда
	ОчиститьТаблицуПоказателей = 1;
	
	Наименование  = "Оклад";
	Идентификатор = "Оклад";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
	Наименование  = "ВремяВЧасах";
	Идентификатор = "ВремяВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
	Наименование  = "НормаВремениВЧасах";
	Идентификатор = "НормаВремениВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель3	= Показатель;
	
ИначеЕсли СпособРасчета = СпособРасчетаПоМесячнойТарифнойСтавкеПоЧасам Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование = НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		= СтруктураИдентификатора.Идентификатор;
	
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;	
	Показатель1Запрашивать					= 1;
		
	Наименование  = "ВремяВЧасах";
	Идентификатор = "ВремяВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
	Наименование  = "НормаВремениВЧасах";
	Идентификатор = "НормаВремениВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель3	= Показатель;	
	
ИначеЕсли (Ссылка = НачислениеТарифДневной)
Или (СпособРасчета = СпособРасчетаПоДневнойТарифнойСтавке) Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ТарифнаяСтавкаДневная";
	Идентификатор = "ТарифнаяСтавкаДневная";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
ИначеЕсли (Ссылка = НачислениеТарифЧасовой)
Или (СпособРасчета = СпособРасчетаПоЧасовойТарифнойСтавке) Тогда
	ОчиститьТаблицуПоказателей = 1;
	
	Наименование  = "ТарифнаяСтавкаЧасовая";
	Идентификатор = "ТарифнаяСтавкаЧасовая";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
	Наименование  = "ТарифнаяСтавкаЧасовая";
	Идентификатор = "ТарифнаяСтавкаЧасовая";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
ИначеЕсли Ссылка = НачислениеОплатаПраздничныхИВыходных Тогда
	ОчиститьТаблицуПоказателей = 1;
	
	Наименование  = "ВремяВДняхЧасах";
	Идентификатор = "ВремяВДняхЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
	Наименование  = "СтоимостьДняЧаса";
	Идентификатор = "СтоимостьДняЧаса";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
ИначеЕсли Ссылка = НачислениеОплатаСверхурочных Тогда
	ОчиститьТаблицуПоказателей = 1;
	
	Наименование  = "ОтработаноСверхурочноВПределах2Часов";
	Идентификатор = "ОтработаноСверхурочноВПределах2Часов";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
	Наименование  = "ОтработаноСверхурочно";
	Идентификатор = "ОтработаноСверхурочно";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
ИначеЕсли (Ссылка = НачислениеСдельнаяОплата)
Или (СпособРасчета = СпособРасчетаСдельныйЗаработок) Тогда
	ОчиститьТаблицуПоказателей = 1;
	
	Наименование  = "ТарифнаяСтавкаЧасовая";
	Идентификатор = "ТарифнаяСтавкаЧасовая";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
	Наименование  = "СдельныйЗаработок";
	Идентификатор = "СдельныйЗаработок";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель2	= Показатель;
	
	Наименование  = "НормаВремениВЧасах";
	Идентификатор = "НормаВремениВЧасах";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель3	= Показатель;
	
	Наименование  = "ВремяВЧасах";
	Идентификатор = "ВремяВЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель4	= Показатель;
	
ИначеЕсли (Ссылка = НачислениеОплатаПоСреднему)
Или (СпособРасчета = СпособРасчетаПоСреднемуЗаработку) Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ВремяВДняхЧасах";
	Идентификатор = "ВремяВДняхЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
ИначеЕсли Ссылка = НачислениеКвартальная Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ПроцентКвартальнойПремии";
	Идентификатор = "ПроцентКвартальнойПремии";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 1;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
ИначеЕсли Ссылка = НачислениеМесячная Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ПроцентЕжемесячнойПремии";
	Идентификатор = "ПроцентЕжемесячнойПремии";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 1;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
ИначеЕсли Ссылка = НачислениеГодовая Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ПроцентГодовойПремии";
	Идентификатор = "ПроцентГодовойПремии";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 1;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
// Новые начисления, не зависящие от способа расчета, вставлять перед этим комментарием
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоСреднемуЗаработку) Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование  = "ВремяВДняхЧасах";
	Идентификатор = "ВремяВДняхЧасах";
	ЗапрашиватьПоказатель = 0;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоСреднемуЗаработкуДляОтпуска) Тогда
	Если ЗначениеЗаполнено(НачислениеУдержание.ВидОтпуска) = 0 Тогда
		ОчиститьТаблицуПоказателей = 1;
		Наименование  = "ВремяВДняхЧасах";
		Идентификатор = "ВремяВДняхЧасах";
		ЗапрашиватьПоказатель = 0;
		Процентный			  = 0;
		ТипПоказателя = "";
		ЗначениеПоказателя = "";
		Показатель = Неопределено;
		Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
		Показатель1	= Показатель;
	КонецЕсли;
	
ИначеЕсли СпособРасчета = СпособРасчетаПроцентом Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование	= "Процент " + НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		= СтруктураИдентификатора.Идентификатор;
	ФормулаРасчета							= Идентификатор + " / 100 * РасчетнаяБаза";
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
ИначеЕсли СпособРасчета = СпособРасчетаФиксированнойСуммой Тогда
	ОчиститьТаблицуПоказателей = 1;
	Наименование	= "" + НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		  = СтруктураИдентификатора.Идентификатор;
	ФормулаРасчета		  = Идентификатор;
	ЗапрашиватьПоказатель = 1;
	Процентный			  = 0;
	ТипПоказателя = "Денежный";
	ЗначениеПоказателя = "";
	Показатель = Неопределено;
	Выполнить(Алгоритмы.ПоказательНовый_Заполнить);
	Показатель1	= Показатель;
	Показатель1Запрашивать					= 1;
	
ИначеЕсли СпособРасчета = СпособРасчетаПроизвольнаяФормула Тогда
	// Показатели преобразуются в алгоритме Показатель_Преобразовать
	
КонецЕсли;


Если ОчиститьТаблицуПоказателей = 1 Тогда
	Показатели.Очистить();

	Если ЗначениеЗаполнено(Показатель1) = 1 Тогда
		Показатель = Показатели.Добавить();
		Показатель.Показатель			= Показатель1;
		Показатель.ЗапрашиватьПриВводе	= Показатель1Запрашивать;
	КонецЕсли;
	Если ЗначениеЗаполнено(Показатель2) = 1 Тогда
		Показатель = Показатели.Добавить();
		Показатель.Показатель			= Показатель2;
		Показатель.ЗапрашиватьПриВводе	= Показатель2Запрашивать;
	КонецЕсли;
	Если ЗначениеЗаполнено(Показатель3) = 1 Тогда
		Показатель = Показатели.Добавить();
		Показатель.Показатель			= Показатель3;
		Показатель.ЗапрашиватьПриВводе	= Показатель3Запрашивать;
	КонецЕсли;
	Если ЗначениеЗаполнено(Показатель4) = 1 Тогда
		Показатель = Показатели.Добавить();
		Показатель.Показатель			= Показатель4;
		Показатель.ЗапрашиватьПриВводе	= Показатель4Запрашивать;
	КонецЕсли;
	Если ЗначениеЗаполнено(Показатель5) = 1 Тогда
		Показатель = Показатели.Добавить();
		Показатель.Показатель			= Показатель5;
		Показатель.ЗапрашиватьПриВводе	= Показатель5Запрашивать;
	КонецЕсли;
	Если ЗначениеЗаполнено(Показатель6) = 1 Тогда
		Показатель = Показатели.Добавить();
		Показатель.Показатель			= Показатель6;
		Показатель.ЗапрашиватьПриВводе	= Показатель6Запрашивать;
	КонецЕсли;
	
Иначе
	Для НомерПоказателя = 1 По Показатели.Количество() Цикл
		ПоказательСтрока = Показатели[НомерПоказателя-1];
		СтруктураПоказатель = Новый Структура;
		СтруктураПоказатель.Вставить("ПоказательСсылка", 		ПоказательСтрока.Показатель);
		СтруктураПоказатель.Вставить("ЗапрашиватьПоказатель",	ПоказательСтрока.ЗапрашиватьПриКадровыхПеремещениях);
		СтруктураПоказатель.Вставить("НомерПоказателя", 		НомерПоказателя);
		СтруктураПоказатель.Вставить("ФормулаРасчета", 			ФормулаРасчета);
		СтруктураПоказатель.Вставить("НачислениеУдержание", 	НачислениеУдержание);
		Выполнить(Алгоритмы.Показатель_Преобразовать);
		ПоказательСтрока.Показатель	= СтруктураПоказатель.Показатель;
		ПоказательСтрока.ЗапрашиватьПриВводе	= ПоказательСтрока.ЗапрашиватьПриКадровыхПеремещениях;
		
	КонецЦикла;
	
КонецЕсли;
</Текст>
				<Параметры>НачислениеУдержание</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачислениеУдержание_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>
СЗ = Неопределено;
Выполнить(Алгоритмы.НачислениеУдержание_Описание);

НачислениеУдержание = СЗ;
ЗаполнитьЗначенияСвойств(НачислениеУдержание, НачислениеУдержаниеСсылка);

Ссылка								= НачислениеУдержание.Ссылка;
СпособРасчета						= НачислениеУдержание.СпособРасчета;
ВидПремии							= НачислениеУдержание.ВидПремии;
СтатьяФинансирования				= НачислениеУдержание.СтатьяФинансирования;
СтатьяРасходов						= НачислениеУдержание.СтатьяРасходов;
//ОтнесениеРасходовКЕНВД				= ОбъектыПереносаДанных.Структура_Получить(НачислениеУдержание, "ОтнесениеРасходовКДеятельностиЕНВД");
ФормулаРасчета						= НачислениеУдержание.ФормулаРасчета;
Предопределенный					= НачислениеУдержание.Предопределенный;
ВидПособияСоциальногоСтрахования	= НачислениеУдержание.ВидПособияСоциальногоСтрахования;
КоличествоМесяцевБазовогоПериода	= НачислениеУдержание.ЧислоМесяцев;
БазовыйПериодПрошлыйМесяц			= НачислениеУдержание.БазовыйПериодПрошлыйМесяц;
УчетВСреднемЗаработкеОбщий          = НачислениеУдержаниеСсылка.УчетВСреднемЗаработкеОбщий;
УчетВСреднемЗаработкеОбщийИндексируется = НачислениеУдержаниеСсылка.УчетВСреднемЗаработкеОбщийИндексируется;

СреднийЗаработокОбщий = Новый ТаблицаЗначений;
СреднийЗаработокОбщий.Колонки.Добавить("ПорядокРасчета");
СреднийЗаработокОбщий.Колонки.Добавить("Значение");
СреднийЗаработокОбщий.Колонки.Добавить("Индексируется");
Если (ЗначениеЗаполнено(УчетВСреднемЗаработкеОбщий) = 1) И (УчетВСреднемЗаработкеОбщий&lt;&gt;"НеВключать") Тогда
	СтрокаСреднийЗаработокОбщий = СреднийЗаработокОбщий.Добавить();
	СтрокаСреднийЗаработокОбщий["ПорядокРасчета"] = ""; 	//"Постановление2010");
	СтрокаСреднийЗаработокОбщий["Значение"] = УчетВСреднемЗаработкеОбщий;
	СтрокаСреднийЗаработокОбщий["Индексируется"] = УчетВСреднемЗаработкеОбщийИндексируется;		
КонецЕсли;
НачислениеУдержание.Вставить("СреднийЗаработокОбщий", СреднийЗаработокОбщий);

//ОтнесениеРасходовКДеятельностиЕНВД = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтнесениеРасходовКДеятельностиЕНВД_Строка", Алгоритмы, ОтнесениеРасходовКЕНВД);

Если (ЗначениеЗаполнено(ВидПремии) = 1) И (ВидПремии &lt;&gt; Перечисления.ВидыПремии.НеПремия) Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"Премия");
	БазовыйПериодПрошлыйМесяц = 1;
	
ИначеЕсли ЗначениеЗаполнено(НачислениеУдержание.КодДоходаНДФЛ) = 0 Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"Прочее");
	
Иначе
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ПовременнаяОплатаТруда");
	
КонецЕсли;
НачислениеУдержание.Вставить("КатегорияУдержания",								"ПрочееУдержаниеВПользуТретьихЛиц");
НачислениеУдержание.Вставить("Рассчитывается",									1);
	НачислениеУдержание.Вставить("ВидОтпуска",									НачислениеУдержание.ВидОтпуска);
НачислениеУдержание.Вставить("НачисляетсяПриРасчетеПервойПоловиныМесяца",		1);
//НачислениеУдержание.Вставить("ВидНачисленияДляНУ",								ОбъектыПереносаДанных.Структура_Получить(НачислениеУдержание, "ВидНачисленияПоСт255НК"));
НачислениеУдержание.Вставить("КоличествоМесяцевРасчетаСреднегоЗаработка",		НачислениеУдержание.ПериодРасчетаСреднегоЗаработка);
//НачислениеУдержание.Вставить("ВидСтажаСЗВ",									ОбъектыПереносаДанных.Структура_Получить(НачислениеУдержание, "ВидСтажаСЗВ4"));
НачислениеУдержание.Вставить("КоличествоМесяцевБазовогоПериода",				КоличествоМесяцевБазовогоПериода);
НачислениеУдержание.Вставить("ПериодРасчетаБазовыхНачислений",					"ТекущийМесяц");

Если (КоличествоМесяцевБазовогоПериода = 12) Или (ВидПремии = Перечисления.ВидыПремии.ГодоваяПремия) Тогда
	НачислениеУдержание.Вставить("ПериодРасчетаБазовыхНачислений",				?(БазовыйПериодПрошлыйМесяц = 1, "ПредыдущийГод", "ТекущийГод"));
	
ИначеЕсли КоличествоМесяцевБазовогоПериода = 3 Тогда
	НачислениеУдержание.Вставить("ПериодРасчетаБазовыхНачислений",				?(БазовыйПериодПрошлыйМесяц = 1, "ПредыдущийКвартал", "ТекущийКвартал"));
	
ИначеЕсли КоличествоМесяцевБазовогоПериода = 1 Тогда
	НачислениеУдержание.Вставить("ПериодРасчетаБазовыхНачислений",				?(БазовыйПериодПрошлыйМесяц = 1, "ПредыдущийМесяц", "ТекущийМесяц"));
	
ИначеЕсли ЗначениеЗаполнено(КоличествоМесяцевБазовогоПериода) = 1 Тогда
	НачислениеУдержание.Вставить("ПериодРасчетаБазовыхНачислений",				"НесколькоПредыдущихМесяцев");
	
КонецЕсли;
Если ЗначениеЗаполнено(СтатьяРасходов) = 1 Тогда
	НачислениеУдержание.Вставить("СпособОтраженияЗарплатыВБухучете",			СтатьяРасходов);
Иначе
	НачислениеУдержание.Вставить("СпособОтраженияЗарплатыВБухучете",			НачислениеУдержание.СпособОтраженияВБухучете);
КонецЕсли;
НачислениеУдержание.Вставить("ОчередностьРасчета",								0);
НачислениеУдержание.Вставить("ВАрхиве",											0);

Если НачислениеУдержание.ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.Работа Тогда
	НачислениеУдержание.Вставить("ОбозначениеВТабелеУчетаРабочегоВремени",		"Явка");
КонецЕсли;

НачислениеУдержаниеСсылка	= НачислениеУдержание;

Показатели = Неопределено;
Выполнить(Алгоритмы.НачислениеУдержание_Показатели);
НачислениеУдержание.Вставить("Показатели",		Показатели);
НачислениеУдержание.Вставить("ФормулаРасчета",	ФормулаРасчета);

НачислениеОплатаПраздничныхИВыходных 		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных; 
НачислениеОплатаСверхурочных 		 		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных;
НачислениеОплатаПоСреднемуОтп 		 		= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтп;
НачислениеОтпускЗаСвойСчет 		 			= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускЗаСвойСчет;
НачислениеОтпускБезОплатыУчебный 			= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыУчебный;
НачислениеПрогул 							= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Прогул;
НачислениеНевыходРегл 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.НевыходРегл;
НачислениеДниНеоплачиваемыеСогласноТабелю 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю;
НачислениеПростойПоСредней					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойПоСредней;
НачислениеПростой							= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Простой;
НачислениеПочасовойПростойПоСредней			= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПочасовойПростойПоСредней;
НачислениеПочасовойПростой					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПочасовойПростой;
НачислениеДоплатаЗаПраздничныеИВыходные 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаПраздничныеИВыходные;
НачислениеОтпускПоБеременностиИРодам	 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоБеременностиИРодам;
НачислениеОплатаПоСреднемуБЛ			 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуБЛ;
НачислениеОплатаБЛПоТравмеНаПроизводстве	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаБЛПоТравмеНаПроизводстве;
НачислениеДоплатаДоСреднего					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаДоСреднего;
НачислениеКвартальная 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Квартальная;
НачислениеМесячная 							= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Месячная;
НачислениеГодовая 							= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Годовая;
НачислениеКомпенсацияОтпуска 				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.КомпенсацияОтпуска;
НачислениеВыходноеПособие 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ВыходноеПособие;
НачислениеДоговорПодряда 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодряда;
НачислениеДоговорПодрядаСПД 				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодрядаСПД;
НачислениеПриРожденииРебенка 				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПриРожденииРебенка;
НачислениеДоплатаЗаВечерниеЧасы 			= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаВечерниеЧасы;
НачислениеДоплатаЗаНочныеЧасы 				= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаНочныеЧасы;
НачислениеОкладПоДням 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням;
НачислениеОкладПоЧасам 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоЧасам;
НачислениеТарифДневной 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифДневной;
НачислениеТарифЧасовой 						= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифЧасовой;
НачислениеСдельнаяОплата 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СдельнаяОплата;
НачислениеОплатаПоСреднему 					= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднему;
НачислениеПособиеПоУходуЗаРебенкомДо3Лет 	= ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет;
//НачислениеПоЧасовойТарифнойСтавке           = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПоЧасовойТарифнойСтавке;

УдержаниеИЛПроцентом 							= ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом;
УдержаниеИЛПроцентомДоПредела					= ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела;
УдержаниеИЛФиксированнойСуммой 					= ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой;
УдержаниеИЛФиксированнойСуммойДоПредела 		= ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела;
УдержаниеАлиментыПроцентом 						= ПланыВидовРасчета.УдержанияОрганизаций.АлиментыПроцентом;
УдержаниеАлиментыПроцентомДоПредела				= ПланыВидовРасчета.УдержанияОрганизаций.АлиментыПроцентомДоПредела;
УдержаниеАлиментыФиксированнойСуммой 			= ПланыВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммой;
УдержаниеАлиментыФиксированнойСуммойДоПредела 	= ПланыВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела;
УдержаниеПочтовыйСбор 							= ПланыВидовРасчета.УдержанияОрганизаций.ПочтовыйСбор;
УдержаниеИндексацияАлиментов 					= ПланыВидовРасчета.УдержанияОрганизаций.ИндексацияАлиментов;
УдержаниеПодотчетныхДС 							= ПланыВидовРасчета.УдержанияОрганизаций.УдержаниеПодотчетныхДС;

СпособРасчетаДоплатаЗаВечерниеЧасы 				= Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы;
СпособРасчетаДоплатаЗаНочныеЧасы 				= Перечисления.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы;
СпособРасчетаПоМесячнойТарифнойСтавкеПоДням 	= Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням;
СпособРасчетаПоМесячнойТарифнойСтавкеПоЧасам 	= Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам;
СпособРасчетаПоДневнойТарифнойСтавке 			= Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке;
СпособРасчетаПоЧасовойТарифнойСтавке 			= Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке;
СпособРасчетаСдельныйЗаработок 					= Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок;
СпособРасчетаПоСреднемуЗаработку 				= Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку;
СпособРасчетаПоСреднемуЗаработкуДляОтпуска 		= Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска;
СпособРасчетаПоСреднемуЗаработкуФСС             = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС;
СпособРасчетаПоДоговоруФиксированнойСуммой		= Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой;
СпособРасчетаНулеваяСумма                       = Перечисления.СпособыРасчетаОплатыТруда.НулеваяСумма;
СпособРасчетаНулеваяПроцентом                   = Перечисления.СпособыРасчетаОплатыТруда.Процентом;
СпособРасчетаВзносы                   			= Перечисления.СпособыРасчетаОплатыТруда.Взносы;
СпособРасчетаВзносыФОТ                   		= Перечисления.СпособыРасчетаОплатыТруда.ВзносыФОТ;
СпособРасчетаПроцентом                          = Перечисления.СпособыРасчетаОплатыТруда.Процентом;
СпособРасчетаФиксированнойСуммой                = Перечисления.СпособыРасчетаОплатыТруда.ФиксированнойСуммой;
СпособРасчетаПроизвольнаяФормула                = Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула;

Если Ссылка = НачислениеОплатаПраздничныхИВыходных Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата работы в праздничные и выходные дни");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ВремяВДняхЧасах * СтоимостьДняЧаса * 2");
	НачислениеУдержание.Вставить("СпособВыполненияНачисления",					"ПоЗначениюВидаВремениПриОкончательномРасчете");
	
ИначеЕсли Ссылка = НачислениеОплатаСверхурочных Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата сверхурочных часов");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"(ОтработаноСверхурочноВПределах2Часов * 1.5 + (ОтработаноСверхурочно - ОтработаноСверхурочноВПределах2Часов) * 2) * СтоимостьЧаса");
	НачислениеУдержание.Вставить("СпособВыполненияНачисления",					"ПоЗначениюВидаВремениПриОкончательномРасчете");
	
ИначеЕсли (Ссылка = НачислениеОплатаПоСреднемуОтп) Тогда
	НачислениеУдержание.Вставить("Наименование",								"Отпуск основной");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаОтпуска");
	НачислениеУдержание.Вставить("ВидОтпуска",									"Основной");
	
ИначеЕсли Ссылка = НачислениеОтпускЗаСвойСчет Тогда
	НачислениеУдержание.Вставить("Наименование",								"Отпуск за свой счет");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОтпускБезОплаты");
	НачислениеУдержание.Вставить("ВидОтпуска",									"ОтпускЗаСвойСчет");
	
ИначеЕсли Ссылка = НачислениеОтпускБезОплатыУчебный Тогда
	НачислениеУдержание.Вставить("Наименование",								"Дополнительный учебный отпуск без оплаты");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОтпускБезОплаты");
	НачислениеУдержание.Вставить("ВидОтпуска",									"ОтпускБезОплатыУчебный");
	
ИначеЕсли Ссылка = НачислениеПрогул Тогда
	НачислениеУдержание.Вставить("Наименование",								"Прогул");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"Прогул");
	
ИначеЕсли Ссылка = НачислениеНевыходРегл  Тогда
	НачислениеУдержание.Вставить("Наименование",								"Отсутствие по невыясненной причине");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"НеявкаПоНевыясненнымПричинам");
	
ИначеЕсли Ссылка = НачислениеДниНеоплачиваемыеСогласноТабелю Тогда
	НачислениеУдержание.Вставить("Наименование",								"Дни неоплачиваемые согласно табелю");  
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"НеявкаПоНевыясненнымПричинам");	
	
ИначеЕсли Ссылка = НачислениеПростойПоСредней Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата простоя по среднему заработку");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаПростояПоВинеРаботодателя");
	
ИначеЕсли Ссылка = НачислениеПочасовойПростойПоСредней Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата часового простоя по среднему заработку");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаПростояПоВинеРаботодателя");
	
ИначеЕсли Ссылка = НачислениеПростой Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата простоя по независящим от работодателя причинам");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаПростояПоНезависящимОтРаботодателяПричинам");
	
ИначеЕсли Ссылка = НачислениеПочасовойПростой Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата часового простоя от оклада по часам");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаПростояПоНезависящимОтРаботодателяПричинам");
	
ИначеЕсли Ссылка = НачислениеДоплатаЗаПраздничныеИВыходные Тогда
	НачислениеУдержание.Вставить("Наименование",								"Доплата за работу в праздничные и выходные дни");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ВремяВДняхЧасах * СтоимостьДняЧаса");
	НачислениеУдержание.Вставить("СпособВыполненияНачисления",					"ПоЗначениюВидаВремениПриОкончательномРасчете");
	
ИначеЕсли Ссылка = НачислениеОтпускПоБеременностиИРодам Тогда
	НачислениеУдержание.Вставить("Наименование",								"Отпуск по беременности и родам");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОтпускПоБеременностиИРодам");
	
ИначеЕсли Ссылка = НачислениеОплатаПоСреднемуБЛ Тогда
	НачислениеУдержание.Вставить("Наименование",								"Больничный");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаБольничногоЛиста");
	
ИначеЕсли Ссылка = НачислениеОплатаБЛПоТравмеНаПроизводстве Тогда
	НачислениеУдержание.Вставить("Наименование",								"Больничный при травме на производстве");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаБольничногоНесчастныйСлучайНаПроизводстве");
	
ИначеЕсли Ссылка = НачислениеДоплатаДоСреднего Тогда
	НачислениеУдержание.Вставить("Наименование",								"Доплата до среднего");
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ДоплатаДоСреднегоЗаработка");
	
ИначеЕсли Ссылка = НачислениеКвартальная Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"Премия");
	НачислениеУдержание.Вставить("Наименование",								"Премия за квартал (процентом)");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ПроцентКвартальнойПремии / 100 * РасчетнаяБаза");
	
ИначеЕсли Ссылка = НачислениеМесячная Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"Премия");
	НачислениеУдержание.Вставить("Наименование",								"Премия ежемесячная процентом");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ПроцентЕжемесячнойПремии / 100 * РасчетнаяБаза");
	
ИначеЕсли Ссылка = НачислениеГодовая Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"Премия");
	НачислениеУдержание.Вставить("Наименование",								"Премия за год (процентом)");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ПроцентГодовойПремии / 100 * РасчетнаяБаза");
	
ИначеЕсли Ссылка = НачислениеКомпенсацияОтпуска Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"КомпенсацияОтпуска");
	НачислениеУдержание.Вставить("Наименование",								"Компенсация отпуска (Отпуск основной)");
	НачислениеУдержание.Вставить("ВидОтпуска",									"Основной");
	
ИначеЕсли Ссылка = НачислениеВыходноеПособие Тогда
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ВыходноеПособие");
	НачислениеУдержание.Вставить("Наименование",								"Компенсация при увольнении (выходное пособие)");
	
ИначеЕсли (Ссылка = УдержаниеИЛПроцентом) Или (Ссылка = УдержаниеИЛПроцентомДоПредела) Или (Ссылка = УдержаниеИЛФиксированнойСуммой) Или (Ссылка = УдержаниеИЛФиксированнойСуммойДоПредела) Тогда
	НачислениеУдержание.Вставить("КатегорияУдержания",							"ИсполнительныйЛист");
	НачислениеУдержание.Вставить("Наименование",								"Удержание по исполнительному документу");
	
ИначеЕсли (Ссылка = УдержаниеАлиментыПроцентом) Или (Ссылка = УдержаниеАлиментыПроцентомДоПредела) Или (Ссылка = УдержаниеАлиментыФиксированнойСуммой) 
	Или (Ссылка = УдержаниеАлиментыФиксированнойСуммойДоПредела) Или (Ссылка = УдержаниеИндексацияАлиментов) Тогда
	НачислениеУдержание.Вставить("КатегорияУдержания",							"ПрочееУдержаниеВПользуТретьихЛиц");
	НачислениеУдержание.Вставить("Наименование",								"Удержание алиментов");	
		
ИначеЕсли Ссылка = НачислениеПриРожденииРебенка Тогда
	НачислениеУдержание.Вставить("Наименование",				"ПособиеПриРожденииРебенка");
	
// Новые начисления, не зависящие от способа расчета, вставлять перед этим комментарием
	
ИначеЕсли (Ссылка = НачислениеДоплатаЗаВечерниеЧасы) Или (СпособРасчета = СпособРасчетаДоплатаЗаВечерниеЧасы) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Доплата за работу в вечернее время");
	КонецЕсли;
	НачислениеУдержание.Вставить("ФормулаРасчета",								"СтоимостьЧаса * ВремяВЧасах * ПроцентДоплатыЗаРаботуВВечернееВремя / 100");
	НачислениеУдержание.Вставить("СпособВыполненияНачисления",					"ПоЗначениюВидаВремениПриОкончательномРасчете");
	
ИначеЕсли (Ссылка = НачислениеДоплатаЗаНочныеЧасы) Или (СпособРасчета = СпособРасчетаДоплатаЗаНочныеЧасы) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Доплата за работу в ночное время");
	КонецЕсли;
	НачислениеУдержание.Вставить("ФормулаРасчета",								"СтоимостьЧаса * ВремяВЧасах * ПроцентДоплатыЗаРаботуВНочноеВремя / 100");
	НачислениеУдержание.Вставить("СпособВыполненияНачисления",					"ПоЗначениюВидаВремениПриОкончательномРасчете");
	
ИначеЕсли (Ссылка = НачислениеОкладПоДням) Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата по окладу");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"Оклад * ВремяВДнях / НормаВремениВДнях");
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоМесячнойТарифнойСтавкеПоДням) Тогда
	Наименование = НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		= СтруктураИдентификатора.Идентификатор;
	НачислениеУдержание.Вставить("ФормулаРасчета", 								""+ Идентификатор +" * ВремяВДнях / НормаВремениВДнях");
	
ИначеЕсли (Ссылка = НачислениеОкладПоЧасам) Тогда
	НачислениеУдержание.Вставить("Наименование",								"Оплата по окладу (по часам)");
	НачислениеУдержание.Вставить("ФормулаРасчета",								"Оклад * ВремяВЧасах / НормаВремениВЧасах");
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоМесячнойТарифнойСтавкеПоЧасам) Тогда
	Наименование = НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		= СтруктураИдентификатора.Идентификатор;
	НачислениеУдержание.Вставить("ФормулаРасчета",								"" + Идентификатор + " * ВремяВЧасах / НормаВремениВЧасах");
	
ИначеЕсли (Ссылка = НачислениеТарифДневной) Или (СпособРасчета = СпособРасчетаПоДневнойТарифнойСтавке) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Оплата по дневному тарифу");
	КонецЕсли;
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ТарифнаяСтавкаДневная * ВремяВДнях");
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоЧасовойТарифнойСтавке) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Оплата по часовому тарифу");
	КонецЕсли;
	НачислениеУдержание.Вставить("ФормулаРасчета",								"ТарифнаяСтавкаЧасовая * ВремяВЧасах");
	
ИначеЕсли (Ссылка = НачислениеСдельнаяОплата) Или (СпособРасчета = СпособРасчетаСдельныйЗаработок) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Сдельный заработок");
	КонецЕсли;
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"СдельнаяОплатаТруда");
		
ИначеЕсли (Ссылка = НачислениеОплатаПоСреднему) Или (СпособРасчета = СпособРасчетаПоСреднемуЗаработку) Тогда
	Если НачислениеУдержание.ОбозначениеВТабелеУчетаРабочегоВремени = Справочники.КлассификаторИспользованияРабочегоВремени.Командировка Тогда
		Если Предопределенный = 1 Тогда
			НачислениеУдержание.Вставить("Наименование",							"Командировка");
		КонецЕсли;
		НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаКомандировки");
	Иначе
		НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаПоСреднемуЗаработку");
	КонецЕсли;
				
ИначеЕсли (Ссылка = НачислениеПособиеПоУходуЗаРебенкомДо3Лет) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Пособие по уходу за ребенком до трех лет");
	КонецЕсли;
	НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ПособиеПоУходуЗаРебенкомДоТрехЛет");
	
ИначеЕсли (Ссылка = УдержаниеПочтовыйСбор) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Вознаграждение платежного агента");
	КонецЕсли;
	НачислениеУдержание.Вставить("КатегорияУдержания",							"ВознаграждениеПлатежногоАгента");
	
ИначеЕсли (Ссылка = УдержаниеПодотчетныхДС) Тогда
	Если Предопределенный = 1 Тогда
		НачислениеУдержание.Вставить("Наименование",							"Удержание подотчетных лиц");
	КонецЕсли;
	НачислениеУдержание.Вставить("КатегорияУдержания",							"УдержаниеВСчетРасчетовПоПрочимОперациям");
	
ИначеЕсли (Ссылка = НачислениеДоговорПодряда) Или (Ссылка = НачислениеДоговорПодрядаСПД)
Или (СпособРасчета = СпособРасчетаПоДоговоруФиксированнойСуммой) Тогда
	НачислениеУдержание.Вставить("Наименование",				"ДоговорРаботыУслуги");
	
ИначеЕсли (СпособРасчета = СпособРасчетаНулеваяСумма) Или (ЗначениеЗаполнено(СпособРасчета) = 0) Тогда
	НачислениеУдержание.Вставить("ФормулаРасчета",								"0");
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоСреднемуЗаработку) Тогда
	НачислениеУдержание.Вставить("ФормулаРасчета",								"СреднийЗаработокОбщий * ВремяВДняхЧасах");
	
ИначеЕсли (СпособРасчета = СпособРасчетаПоСреднемуЗаработкуДляОтпуска) Тогда
	Если ЗначениеЗаполнено(НачислениеУдержание.ВидОтпуска) = 1 Тогда
		НачислениеУдержание.Вставить("КатегорияНачисленияИлиНеоплаченногоВремени",	"ОплатаОтпуска");
	Иначе
		НачислениеУдержание.Вставить("ФормулаРасчета",							"СреднийЗаработокОбщий * ВремяВДняхЧасах");
	КонецЕсли;
	
ИначеЕсли СпособРасчета = СпособРасчетаПоСреднемуЗаработкуФСС Тогда
	НачислениеУдержание.Вставить("ФормулаРасчета",								"СреднийЗаработокФСС * КалендарныеДни");
	
ИначеЕсли (СпособРасчета = СпособРасчетаПроцентом) Тогда
	Наименование	= "Процент " + НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор	= СтруктураИдентификатора.Идентификатор;
	НачислениеУдержание.Вставить("ФормулаРасчета",								Идентификатор + " / 100 * РасчетнаяБаза");
		
ИначеЕсли (СпособРасчета = СпособРасчетаФиксированнойСуммой) Или (СпособРасчета = СпособРасчетаВзносы) Или (СпособРасчета = СпособРасчетаВзносыФОТ) Тогда
	Наименование	= "" + НачислениеУдержание.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", Наименование);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор	= СтруктураИдентификатора.Идентификатор;
	НачислениеУдержание.Вставить("ФормулаРасчета",								Идентификатор);
			
ИначеЕсли СпособРасчета = СпособРасчетаПроизвольнаяФормула Тогда
	// Показатели конвертируются отдельным алгоритмом
	
КонецЕсли;</Текст>
				<Параметры>НачислениеУдержание</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияДляРасчетаСреднегоЗаработкаОтп_Выгрузить" ИспользуетсяПриЗагрузке="false">
				<Текст>Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	

	
Иначе
	
	ДатаНачалаРаботыСПрограммой = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
	МесяцНачалаПереноса = ДобавитьМесяц(НачалоГода(ДатаНачалаРаботыСПрограммой), -12);
	МесяцОкончанияПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -1);
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаНачалаРаботыСПрограммой);
	Запрос.УстановитьПараметр("ПериодРасчетаСреднегоНачало", МесяцНачалаПереноса);
	Запрос.УстановитьПараметр("ПериодРасчетаСреднегоКонец", МесяцОкончанияПереноса);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиСрезПоследних.Сотрудник,
	|	РаботникиСрезПоследних.Сотрудник.Физлицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСведенияОСотрудниках
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&amp;ДатаСреза, ) КАК РаботникиСрезПоследних
	|ГДЕ
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|ПОМЕСТИТЬ ВТБазаПоЗаработку
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуДляОтпуска)";
	Запрос.Выполнить();
	
	Запрос.Текст ="ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК Период,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Сумма,
	|	&amp;ПустаяДата КАК ДатаНачалаБазовогоПериода,
	|	&amp;ПустаяДата КАК ДатаОкончанияБазовогоПериода,
	|	""ОбщийЗаработок"" КАК СоставнаяЧасть,
	|	0 КАК КоличествоМесяцев,
	|	0 КАК Год,
	|	Истина КАК Индексируется,
	| ""Постановление100Отпускные"" КАК ПорядокРасчета
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазаПоЗаработку КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	""ПремияПроцентом"",
	|	РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец, МЕСЯЦ) + 1,
	|	0,
	|	Истина КАК Индексируется,
	| ""Постановление100Отпускные""
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник	
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямОтпуска)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	""ПремияПроцентом"",
	|	РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец, МЕСЯЦ) + 1,
	|	0,
	|	Истина КАК Индексируется,
	| ""Постановление100Отпускные""
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник	
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямОтпуска)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	| ""ПремияГодоваяПроцентом"",	              
	|	12,
	|	ГОД(ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало),
	|	Истина КАК Индексируется,
	| ""Постановление100Отпускные""
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник	
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремии)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	СведенияОСотрудниках.Сотрудник,
	|	ПериодДействия
	|ИТОГИ ПО
	|	Организация";
	
КонецЕсли;

	
ВыборкаПоНачислениям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);


Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	

	
Иначе
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА НЕ Начисления.Сторно
	|				ТОГДА ВЫБОР
	|						КОГДА Начисления.ГрафикРаботы.СокращатьКалендарныеДни
	|								И Начисления.ВидРасчета.ЭтоОтпуск
	|							ТОГДА Начисления.КалендарныеДни
	|						ИНАЧЕ Начисления.ПроизводственныйКалендарьКалендарныеДниСПраздникамиФактическийПериодДействия
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА Начисления.ГрафикРаботы.СокращатьКалендарныеДни
	|							И Начисления.ВидРасчета.ЭтоОтпуск
	|						ТОГДА Начисления.КалендарныеДни
	|					ИНАЧЕ -Начисления.ПроизводственныйКалендарьКалендарныеДниСПраздникамиФактическийПериодДействия
	|				КОНЕЦ
	|		КОНЕЦ) КАК ОтработаноДнейКалендарных,
	|	0 КАК ОтработаноДней,
	|	0 КАК ОтработаноЧасов,
	|	Начисления.ПериодДействия КАК Период,
	|	СведенияОСотрудниках.Сотрудник,
	|	Начисления.Организация КАК Организация,
	|	""Постановление100Отпускные"" КАК ПорядокРасчета
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
	|			ПериодДействияНачало &lt;= &amp;ПериодРасчетаСреднегоКонец
	|				И ПериодДействияКонец &gt;= &amp;ПериодРасчетаСреднегоНачало
	|				И ВидРасчета.ЗачетНормыВремени
	|				И ВидРасчета.ЗачетКалендарных) КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазаПоЗаработку КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО Начисления.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО Начисления.Сотрудник = СведенияОСотрудниках.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	Начисления.Организация
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	СведенияОСотрудниках.Сотрудник,
	|	Период
	|ИТОГИ ПО
	|	Организация";

КонецЕсли;

ВыборкаПоВремени = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

Для Каждого ДанныеПоОрганизации Из ВыборкаПоНачислениям.Строки Цикл
	Организация = ДанныеПоОрганизации.Организация;
	
	Для Каждого ДанныеПоОрганизацииВремя Из ВыборкаПоВремени.Строки Цикл
		Если ДанныеПоОрганизацииВремя.Организация = Организация Тогда
			ВыборкаПоДокументу = Новый Структура("Номер, Организация, ПериодРегистрации, ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий, ДанныеОВремениДляРасчетаСреднегоОбщий",
					"СЗ_Отпуск", Организация, НачалоМесяца(Параметры.МесяцНачалаЭксплуатации), ДанныеПоОрганизации.Строки, ДанныеПоОрганизацииВремя.Строки);
			ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ДанныеДляРасчетаСреднегоОбщий_ПД");
		КонецЕсли;	
	КонецЦикла;
	
КонецЦикла;


Запрос.Текст =
"УНИЧТОЖИТЬ ВТСведенияОСотрудниках; УНИЧТОЖИТЬ ВТБазаПоЗаработку"; 
Запрос.Выполнить();</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачисленияДляРасчетаСреднегоЗаработкаПр_Выгрузить" ИспользуетсяПриЗагрузке="false">
				<Текст>Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	

	
Иначе
	
	ДатаНачалаРаботыСПрограммой = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
	МесяцНачалаПереноса = ДобавитьМесяц(НачалоГода(ДатаНачалаРаботыСПрограммой), -12);
	МесяцОкончанияПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -1);
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаНачалаРаботыСПрограммой);
	Запрос.УстановитьПараметр("ПериодРасчетаСреднегоНачало", МесяцНачалаПереноса);
	Запрос.УстановитьПараметр("ПериодРасчетаСреднегоКонец", МесяцОкончанияПереноса);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиСрезПоследних.Сотрудник,
	|	РаботникиСрезПоследних.Сотрудник.Физлицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСведенияОСотрудниках
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&amp;ДатаСреза, ) КАК РаботникиСрезПоследних
	|ГДЕ
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|ПОМЕСТИТЬ ВТБазаПоЗаработку
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработку)";
	Запрос.Выполнить();
	
	Запрос.Текст ="ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК Период,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Сумма,
	|	&amp;ПустаяДата КАК ДатаНачалаБазовогоПериода,
	|	&amp;ПустаяДата КАК ДатаОкончанияБазовогоПериода,
	|	""ОбщийЗаработок"" КАК СоставнаяЧасть,
	|	0 КАК КоличествоМесяцев,
	|	0 КАК Год,
	|	Истина КАК Индексируется,
	| 	""Постановление2010"" КАК ПорядокРасчета
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазаПоЗаработку КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	""ПремияПроцентом"",
	|	РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец, МЕСЯЦ) + 1,
	|	0,
	|	Истина КАК Индексируется,
	| ""Постановление2010""
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник	
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиям)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	|	""ПремияФиксированнойСуммой"",
	|	РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало, ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец, МЕСЯЦ) + 1,
	|	0,
	|	Истина КАК Индексируется,
	| ""Постановление2010""
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник	
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиям)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат),
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	| ""ПремияГодоваяФиксированнойСуммой"",	              
	|	12,
	|	ГОД(ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало),
	|	Истина КАК Индексируется,
	| ""Постановление2010""
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник	
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремии)
	|	И ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;ПериодРасчетаСреднегоНачало И &amp;ПериодРасчетаСреднегоКонец
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	|	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	СведенияОСотрудниках.Сотрудник,
	|	ПериодДействия
	|ИТОГИ ПО
	|	Организация";
	
КонецЕсли;

	
ВыборкаПоНачислениям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);


Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	

	
Иначе
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Начисления.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(Начисления.ОтработаноЧасов) КАК ОтработаноЧасов,
	|	0 КАК ОтработаноДнейКалендарных,
	|	Начисления.ПериодДействия КАК Период,
	|	СведенияОСотрудниках.Сотрудник,
	|	Начисления.Организация КАК Организация,
	|	""Постановление2010"" КАК ПорядокРасчета
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазаПоЗаработку КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО Начисления.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО Начисления.Сотрудник = СведенияОСотрудниках.Сотрудник
	|
	|ГДЕ
	|	Начисления.ПериодДействияНачало &lt;= &amp;ПериодРасчетаСреднегоКонец
	|	И Начисления.ПериодДействияКонец &gt;= &amp;ПериодРасчетаСреднегоНачало
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ПериодДействия,
	|	СведенияОСотрудниках.Сотрудник,
	|	Начисления.Организация
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	СведенияОСотрудниках.Сотрудник,
	|	Период
	|ИТОГИ ПО
	|	Организация";

КонецЕсли;

ВыборкаПоВремени = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

Для Каждого ДанныеПоОрганизации Из ВыборкаПоНачислениям.Строки Цикл
	Организация = ДанныеПоОрганизации.Организация;
	
	Для Каждого ДанныеПоОрганизацииВремя Из ВыборкаПоВремени.Строки Цикл
		Если ДанныеПоОрганизацииВремя.Организация = Организация Тогда
			ВыборкаПоДокументу = Новый Структура("Номер, Организация, ПериодРегистрации, ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаОбщий, ДанныеОВремениДляРасчетаСреднегоОбщий",
					"СЗ_Прочие", Организация, НачалоМесяца(Параметры.МесяцНачалаЭксплуатации), ДанныеПоОрганизации.Строки, ДанныеПоОрганизацииВремя.Строки);
			ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ДанныеДляРасчетаСреднегоОбщий_ПД");
		КонецЕсли;	
	КонецЦикла;
	
КонецЦикла;


Запрос.Текст =
"УНИЧТОЖИТЬ ВТСведенияОСотрудниках; УНИЧТОЖИТЬ ВТБазаПоЗаработку"; 
Запрос.Выполнить();</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачисленияДляРасчетаСреднегоЗаработкаФСС_Выгрузить" ИспользуетсяПриЗагрузке="false">
				<Текст>
Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	

	
Иначе
	
	ДатаНачалаРаботыСПрограммой = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
	МесяцНачалаПереноса = ДобавитьМесяц(НачалоГода(ДатаНачалаРаботыСПрограммой), -12);
	МесяцОкончанияПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -1);
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаНачалаРаботыСПрограммой);
	Запрос.УстановитьПараметр("МесяцНачалаПереноса", МесяцНачалаПереноса);
	Запрос.УстановитьПараметр("МесяцОкончанияПереноса", МесяцОкончанияПереноса);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаботникиСрезПоследних.Сотрудник,
	|	РаботникиСрезПоследних.Сотрудник.Физлицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСведенияОСотрудниках
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&amp;ДатаСреза, ) КАК РаботникиСрезПоследних
	|ГДЕ
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)";
	Запрос.Выполнить();
	
	
	Запрос.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|ПОМЕСТИТЬ ВТБазовыеВидыРасчета 
	|ИЗ
	|	ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|ГДЕ
	|	СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛФСС)
	|";
	Запрос.Выполнить();
	
	Запрос.Текст ="ВЫБРАТЬ
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК Период,
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия КАК НалоговыйПериод,
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация КАК ГоловнаяОрганизация,
	|	""Постановление2010"" КАК ПорядокРасчета,
	|	СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Сумма
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = СведенияОСотрудниках.Сотрудник
	|ГДЕ
	|	ОсновныеНачисленияРаботниковОрганизаций.Результат &lt;&gt; 0
	|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия МЕЖДУ &amp;МесяцНачалаПереноса И &amp;МесяцОкончанияПереноса
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	СведенияОСотрудниках.Сотрудник,
	|	ОсновныеНачисленияРаботниковОрганизаций.Организация
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	СведенияОСотрудниках.Сотрудник,
	|	НалоговыйПериод
	|ИТОГИ ПО
	|	ГоловнаяОрганизация";
	
КонецЕсли;

	
ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	Организация = ДанныеПоОрганизации.ГоловнаяОрганизация;
	ВыборкаПоДокументу = Новый Структура("Номер, Организация, ПериодРегистрации, ДанныеОНачисленияхДляРасчетаСреднегоЗаработкаФСС",
			"СЗ_ФСС", Организация, НачалоМесяца(Параметры.МесяцНачалаЭксплуатации), ДанныеПоОрганизации.Строки);
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ДанныеДляРасчетаСреднегоФСС_ПД");
КонецЦикла;


Запрос.Текст = 
"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.Сторно
	|				ТОГДА -Начисления.ПроизводственныйКалендарьКалендарныеДниСПраздникамиФактическийПериодДействия
	|			ИНАЧЕ Начисления.ПроизводственныйКалендарьКалендарныеДниСПраздникамиФактическийПериодДействия
	|		КОНЕЦ) КАК КалендарныеДни,
	|	СведенияОСотрудниках.Сотрудник КАК Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.Организация КАК Организация,
	|	Начисления.ПериодДействия КАК Период
	|ПОМЕСТИТЬ ВТКалендарныеДни
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
	|			ПериодДействияНачало &lt;= &amp;МесяцОкончанияПереноса
	|				И ПериодДействияКонец &gt;= &amp;МесяцНачалаПереноса) КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО Начисления.ВидРасчета = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (Начисления.ПериодДействияНачало &lt;= &amp;МесяцОкончанияПереноса)
	|			И (Начисления.ПериодДействияКонец &gt;= &amp;МесяцНачалаПереноса)
	|			И (НЕ Начисления.ВидРасчета.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеНеотработанное), ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЧасовоеОтработанноеВПределахНормы)))
	|			И (Начисления.ВидРасчета.ЗачетКалендарных)
	|			И (Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ЛОЖЬ)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО Начисления.Сотрудник = СведенияОСотрудниках.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	Начисления.Организация,
	|	Начисления.ПериодДействия
	|
	|; 
	|
	|ВЫБРАТЬ
	|	Начисления.Организация КАК Организация,
	|	СведенияОСотрудниках.Сотрудник КАК Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.ПериодДействия КАК Период,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.Сторно
	|				ТОГДА -Начисления.ПроизводственныйКалендарьКалендарныеДниСПраздникамиФактическийПериодДействия
	|			ИНАЧЕ Начисления.ПроизводственныйКалендарьКалендарныеДниСПраздникамиФактическийПериодДействия
	|		КОНЕЦ) КАК ДнейБолезниУходаЗаДетьми
	|ПОМЕСТИТЬ ВТДнейБолезниУходаЗаДетьми
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
	|			ПериодДействияНачало &lt;= &amp;МесяцОкончанияПереноса
	|				И ПериодДействияКонец &gt;= &amp;МесяцНачалаПереноса) КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОСотрудниках КАК СведенияОСотрудниках
	|		ПО Начисления.Сотрудник = СведенияОСотрудниках.Сотрудник
	|
	|ГДЕ
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени.УважительнаяПричинаДляБольничных = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОСотрудниках.Сотрудник,
	|	СведенияОСотрудниках.ФизическоеЛицо,
	|	Начисления.Организация,
	|	Начисления.ПериодДействия
	|;
	|	
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТКалендарныеДни.Организация, ВТДнейБолезниУходаЗаДетьми.Организация) КАК ГоловнаяОрганизация,
	|	ЕСТЬNULL(ВТКалендарныеДни.Сотрудник, ВТДнейБолезниУходаЗаДетьми.Сотрудник) КАК Сотрудник,
	|	ЕСТЬNULL(ВТКалендарныеДни.ФизическоеЛицо, ВТДнейБолезниУходаЗаДетьми.ФизическоеЛицо) КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ВТКалендарныеДни.КалендарныеДни, 0) КАК ОтработаноДнейКалендарных,
	|	ЕСТЬNULL(ВТДнейБолезниУходаЗаДетьми.ДнейБолезниУходаЗаДетьми,0) КАК ДнейБолезниУходаЗаДетьми,
	|	0 КАК УчитываетсяДнейБолезниУходаЗаДетьми,
	|	ЕСТЬNULL(ВТКалендарныеДни.Период, ВТДнейБолезниУходаЗаДетьми.Период) КАК Месяц
	|ИЗ
	|	ВТКалендарныеДни КАК ВТКалендарныеДни
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТДнейБолезниУходаЗаДетьми КАК ВТДнейБолезниУходаЗаДетьми
	|		ПО ВТКалендарныеДни.Сотрудник = ВТДнейБолезниУходаЗаДетьми.Сотрудник
	|			И ВТКалендарныеДни.Организация = ВТДнейБолезниУходаЗаДетьми.Организация
	|			И ВТКалендарныеДни.Период = ВТДнейБолезниУходаЗаДетьми.Период
	|УПОРЯДОЧИТЬ ПО
	|	ЕСТЬNULL(ВТКалендарныеДни.Организация, ВТДнейБолезниУходаЗаДетьми.Организация),
	|	ЕСТЬNULL(ВТКалендарныеДни.Сотрудник, ВТДнейБолезниУходаЗаДетьми.Сотрудник),
	|	ЕСТЬNULL(ВТКалендарныеДни.Период, ВТДнейБолезниУходаЗаДетьми.Период)";
	
Выборка = Запрос.Выполнить().Выбрать();

Пока Выборка.Следующий() Цикл
	ВыгрузитьПоПравилу(Выборка, , , , "СведенияОВремениДляРасчетаСреднегоФCC");
КонецЦикла;

Запрос.Текст =
"УНИЧТОЖИТЬ ВТСведенияОСотрудниках; УНИЧТОЖИТЬ ВТБазовыеВидыРасчета; УНИЧТОЖИТЬ ВТКалендарныеДни; УНИЧТОЖИТЬ ВТДнейБолезниУходаЗаДетьми"; 
Запрос.Выполнить();</Текст>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержания_ВыгрузитьПоПравилу" ИспользуетсяПриЗагрузке="false">
				<Текст>Для Номер = 1 По ВыборкаДанных.Количество() Цикл
	ВР = ВыборкаДанных[Номер-1];
	
	ВидПВР = ВР.ВидПВР;
	
	//Если ВидПВР = "ДополнительныеНачисления" Тогда
	//	ВыгрузитьПоПравилу(ВР, , , , "Начисления_Дополнительные");
	//	
	//ИначеЕсли ВидПВР = "Удержания" Тогда
	Если ВидПВР = "Удержания" Тогда
		ВыгрузитьПоПравилу(ВР, , , , "Удержания");
		
	Иначе
		ВыгрузитьПоПравилу(ВР, , , , "Начисления_Основные");
		
	КонецЕсли;
КонецЦикла;

Отказ = 1;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержания_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаНачисленияУдержания	= ИсходящиеДанные.НачисленияУдержания;

ВыборкаДанных			= Новый Массив;
ВыгруженныеВидыРасчета	= Новый Массив;

Для Номер = 1 По ТаблицаНачисленияУдержания.Количество() Цикл
	НачислениеУдержание = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаНачисленияУдержания[Номер-1]);
	
	Идентификатор = НачислениеУдержание.Наименование; 
	Выполнить(Алгоритмы.ПереставитьПервуюЦифруИдентификатора);
	НачислениеУдержание.Вставить("Наименование", Идентификатор);

	ВыгруженныеВидыРасчета.Добавить(НачислениеУдержание);
	
	НачислениеУдержаниеСсылка = НачислениеУдержание;
	Выполнить(Алгоритмы.НачислениеУдержание_Преобразовать);
	ВыборкаДанных.Добавить(НачислениеУдержание);
КонецЦикла;

Параметры.ВременноеХранилище.Вставить("ВыгруженныеВидыРасчета", ВыгруженныеВидыРасчета);</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НачисленияУдержанияПоСотрудникам_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ФизическиеЛицаБезБазы	= ИсходящиеДанные.ФизическиеЛицаБезБазы;
ПервичныеДанные			= ИсходящиеДанные.ПервичныеДанные;
ИмяПравилКонвертации    = ИсходящиеДанные.ИмяПКО;

ВидДвиженияПриход	= ВидДвиженияНакопления.Приход;

Для СчРезультатов = 1 По ПервичныеДанные.Количество() Цикл 
	СтрокаТаблицыРезультатов = ПервичныеДанные[СчРезультатов-1];
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
	
	ОсновныеНачисленияРаботниковОрганизаций			= СтрокаТаблицыРезультатов.ОсновныеНачисления;
	//ДополнительныеНачисленияРаботниковОрганизаций	= СтрокаТаблицыРезультатов.ДополнительныеНачисления;
	УдержанияРаботниковОрганизаций					= СтрокаТаблицыРезультатов.Удержания;
	ПогашениеЗаймовРаботникамиОрганизаций			= СтрокаТаблицыРезультатов.ПогашениеЗаймов;
	НДФЛРасчетыСБюджетом							= СтрокаТаблицыРезультатов.НДФЛРасчетыСБюджетом;
	//НДФЛКЗачету										= СтрокаТаблицыРезультатов.НДФЛКЗачету;
	
	НачисленияУдержанияПоСотрудникам = Новый ТаблицаЗначений;
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("Период");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("Организация");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("ФизическоеЛицо");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("Сотрудник");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("Подразделение");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("НачислениеУдержание");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("Сумма");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("ГруппаНачисленияУдержанияВыплаты");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("ПериодДействия");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("ДокументОснование");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("Контрагент");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("ДатаНачала");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("ДатаОкончания");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("СтатьяФинансирования");
	НачисленияУдержанияПоСотрудникам.Колонки.Добавить("СтатьяРасходов");
	
	НачисленияБаза = Новый ТаблицаЗначений;
	НачисленияБаза.Колонки.Добавить("ФизическоеЛицо");
	НачисленияБаза.Колонки.Добавить("Сотрудник");
	НачисленияБаза.Колонки.Добавить("Подразделение");
	НачисленияБаза.Колонки.Добавить("СтатьяФинансирования");
	НачисленияБаза.Колонки.Добавить("СтатьяРасходов");
	НачисленияБаза.Колонки.Добавить("Сумма");
	
	Для Сч = 1 По ОсновныеНачисленияРаботниковОрганизаций.Количество() Цикл 
		СтрокаТаблицы = ОсновныеНачисленияРаботниковОрганизаций[Сч-1];
		
		Начисление		= СтрокаТаблицы.ВидРасчета;
		Ссылка			= Начисление["Ссылка"];
		
		Если Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты Тогда
			Продолжить;
		КонецЕсли;
		
		Организация = СтрокаТаблицы.Организация;
		
		НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
		НоваяСтрока.Период								= НачалоДня(СтрокаТаблицы.ПериодРегистрации);
		НоваяСтрока.Организация							= Организация;
		НоваяСтрока.ФизическоеЛицо						= СтрокаТаблицы.ФизЛицо;
		НоваяСтрока.Сотрудник							= СтрокаТаблицы.Сотрудник;
		НоваяСтрока.Подразделение						= СтрокаТаблицы.ПодразделениеОрганизации;
		НоваяСтрока.Сумма								= СтрокаТаблицы.Результат;
		НоваяСтрока.ПериодДействия						= НачалоДня(СтрокаТаблицы.ПериодДействияНачало);
		НоваяСтрока.ДатаНачала							= СтрокаТаблицы.ПериодДействияНачало;
		НоваяСтрока.ДатаОкончания						= СтрокаТаблицы.ПериодДействияКонец;
		НоваяСтрока.НачислениеУдержание					= Начисление;
		НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Начислено";
		НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
		НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
		
		НоваяСтрока = НачисленияБаза.Добавить();
		НоваяСтрока.ФизическоеЛицо			= СтрокаТаблицы.ФизЛицо;
		НоваяСтрока.Сотрудник				= СтрокаТаблицы.Сотрудник;
		НоваяСтрока.Подразделение			= СтрокаТаблицы.ПодразделениеОрганизации;
		НоваяСтрока.СтатьяФинансирования	= СтрокаТаблицы.СтатьяФинансирования;
		НоваяСтрока.СтатьяРасходов			= СтрокаТаблицы.СтатьяРасходов;
		НоваяСтрока.Сумма					= СтрокаТаблицы.Результат;
	КонецЦикла;
		
	НачисленияБаза.Свернуть("ФизическоеЛицо, Сотрудник, Подразделение, СтатьяФинансирования, СтатьяРасходов", "Сумма");
	
	Для Сч = 1 По УдержанияРаботниковОрганизаций.Количество() Цикл 
		СтрокаТаблицы = УдержанияРаботниковОрганизаций[Сч-1];
		
		Организация		= СтрокаТаблицы.Организация;
		Период			= НачалоДня(СтрокаТаблицы.ПериодРегистрации);
		ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
		
		СтрокиБазы				= НачисленияБаза.НайтиСтроки(Новый Структура("ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		
		Коэффициенты = Неопределено;
		ПараметрыДляВыделенияКоэф = Новый Структура("МассивСтрок, ИмяКолонки", СтрокиБазы, "Сумма");
		Выполнить(Алгоритмы.ВыделитьКоэффициентыИзМассиваСтрок);
		
		МассивСумм = Неопределено;
		ПараметрыДляРаспределения = Новый Структура("ИсхСумма,МассивКоэф", СтрокаТаблицы.Результат, Коэффициенты);
		Выполнить(Алгоритмы.РаспределитьПропорционально);
		РезультатРаспределения	= МассивСумм;
		
		Если РезультатРаспределения.Количество() &gt; 0 Тогда
			Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
				СтрокаБазы = СтрокиБазы[СчСтрок-1];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				//НоваяСтрока.Контрагент							= СтрокаТаблицы.Получатель;
				НоваяСтрока.ДокументОснование					= СтрокаТаблицы.ДокументОснование;  
				НоваяСтрока.НачислениеУдержание					= СтрокаТаблицы.ВидРасчета;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Удержано";
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаБазы["Сотрудник"];
				НоваяСтрока.Подразделение						= СтрокаБазы["Подразделение"];
				НоваяСтрока.Сумма								= РезультатРаспределения[СчСтрок-1];
			КонецЦикла;
			
		Иначе
			МассивСотрудников = ФизическиеЛицаБезБазы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				СтрокаСотрудника = МассивСотрудников[0];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				//НоваяСтрока.Контрагент							= СтрокаТаблицы.Получатель;
				НоваяСтрока.ДокументОснование					= СтрокаТаблицы.ДокументОснование;  
				НоваяСтрока.НачислениеУдержание					= СтрокаТаблицы.ВидРасчета;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Удержано";
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
				НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
				НоваяСтрока.Сумма								= СтрокаТаблицы.Результат;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Для Сч = 1 По ПогашениеЗаймовРаботникамиОрганизаций.Количество() Цикл
		СтрокаТаблицы = ПогашениеЗаймовРаботникамиОрганизаций[Сч-1];
		
		Если СтрокаТаблицы.УдержаноИзЗарплаты &lt;&gt; 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтоПриход = ?(СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход, 1, 0);
		
		Организация		= СтрокаТаблицы.Организация;
		Период			= НачалоДня(СтрокаТаблицы.Период);
		ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
		
		СтрокиБазы				= НачисленияБаза.НайтиСтроки(Новый Структура("ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		
		Коэффициенты = Неопределено;
		ПараметрыДляВыделенияКоэф = Новый Структура("МассивСтрок, ИмяКолонки", СтрокиБазы, "Сумма");
		Выполнить(Алгоритмы.ВыделитьКоэффициентыИзМассиваСтрок);
		
		МассивСумм = Неопределено;
		ПараметрыДляРаспределения = Новый Структура("ИсхСумма,МассивКоэф", СтрокаТаблицы.ОсновнойДолг, Коэффициенты);
		Выполнить(Алгоритмы.РаспределитьПропорционально);
		РезультатРаспределения	= МассивСумм;
		
		Если РезультатРаспределения.Количество() &gt; 0 Тогда
			Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
				СтрокаБазы = СтрокиБазы[СчСтрок-1];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				НоваяСтрока.НачислениеУдержание					= "ПогашениеЗаймаИзЗарплаты";
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Удержано";
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаБазы["Сотрудник"];
				НоваяСтрока.Подразделение						= СтрокаБазы["Подразделение"];
				НоваяСтрока.Сумма								= РезультатРаспределения[СчСтрок-1];
			КонецЦикла;
			
		Иначе
			МассивСотрудников = ФизическиеЛицаБезБазы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				СтрокаСотрудника = МассивСотрудников[0];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				НоваяСтрока.НачислениеУдержание					= "ПогашениеЗаймаИзЗарплаты";
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Удержано";
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
				НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
				НоваяСтрока.Сумма								= СтрокаТаблицы.ОсновнойДолг;
			КонецЕсли;
			
		КонецЕсли;
		
		МассивСумм = Неопределено;
		ПараметрыДляРаспределения = Новый Структура("ИсхСумма,МассивКоэф", СтрокаТаблицы.Проценты, Коэффициенты);
		Выполнить(Алгоритмы.РаспределитьПропорционально);
		РезультатРаспределения	= МассивСумм;
		
		Если РезультатРаспределения.Количество() &gt; 0 Тогда
			Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
				СтрокаБазы = СтрокиБазы[СчСтрок-1];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				НоваяСтрока.НачислениеУдержание					= ?(ЭтоПриход = 1, "НачисленоПроцентовПоЗайму", "ПроцентыПоЗайму");
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ?(ЭтоПриход = 1, "Справочно", "Удержано");
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаБазы["Сотрудник"];
				НоваяСтрока.Подразделение						= СтрокаБазы["Подразделение"];
				НоваяСтрока.Сумма								= РезультатРаспределения[СчСтрок-1];
			КонецЦикла;
			
		Иначе
			МассивСотрудников = ФизическиеЛицаБезБазы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				СтрокаСотрудника = МассивСотрудников[0];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				НоваяСтрока.НачислениеУдержание					= ?(ЭтоПриход = 1, "НачисленоПроцентовПоЗайму", "ПроцентыПоЗайму");
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= ?(ЭтоПриход = 1, "Справочно", "Удержано");
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
				НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
				НоваяСтрока.Сумма								= СтрокаТаблицы.Проценты;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Для Сч = 1 По НДФЛРасчетыСБюджетом.Количество() Цикл 
		СтрокаТаблицы = НДФЛРасчетыСБюджетом[Сч-1];
		
		НачислениеУдержание = "НДФЛ";
		//Если СтрокаТаблицы.ВидСтроки = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НДФЛРасчетыСБюджетом_ВидСтроки", Параметры.Алгоритмы, "Начисление") Тогда
		//	НачислениеУдержание = "НДФЛ";
		//	
		//ИначеЕсли СтрокаТаблицы.ВидСтроки = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НДФЛРасчетыСБюджетом_ВидСтроки", Параметры.Алгоритмы, "ПереданоНаВзыскание") Тогда
		//	НачислениеУдержание = "НДФЛПередачаЗадолженностиВНалоговыйОрган";
		//	
		//ИначеЕсли СтрокаТаблицы.ВидСтроки = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НДФЛРасчетыСБюджетом_ВидСтроки", Параметры.Алгоритмы, "ВозвратНалога") Тогда
		//	НачислениеУдержание = "НДФЛ";
		//	
		//Иначе
		//	Продолжить;
		//	
		//КонецЕсли;
		
		Организация					= СтрокаТаблицы.Организация;
		
		Период						= НачалоДня(СтрокаТаблицы.Период);
		ФизическоеЛицо				= СтрокаТаблицы.ФизЛицо;
		
		СтрокиБазы					= НачисленияБаза.НайтиСтроки(Новый Структура("ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.СтатьяРасходов));
		
		Коэффициенты = Неопределено;
		ПараметрыДляВыделенияКоэф = Новый Структура("МассивСтрок, ИмяКолонки", СтрокиБазы, "Сумма");
		Выполнить(Алгоритмы.ВыделитьКоэффициентыИзМассиваСтрок);
		
		МассивСумм = Неопределено;
		ПараметрыДляРаспределения = Новый Структура("ИсхСумма,МассивКоэф", СтрокаТаблицы.Налог, Коэффициенты);
		Выполнить(Алгоритмы.РаспределитьПропорционально);
		РезультатРаспределения	= МассивСумм;
		
		Если РезультатРаспределения.Количество() &gt; 0 Тогда
			Для СчСтрок = 1 По РезультатРаспределения.Количество() Цикл
				СтрокаБазы = СтрокиБазы[СчСтрок-1];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				НоваяСтрока.НачислениеУдержание					= НачислениеУдержание;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Удержано";
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаБазы["Сотрудник"];
				НоваяСтрока.Подразделение						= СтрокаБазы["Подразделение"];
				НоваяСтрока.Сумма								= РезультатРаспределения[СчСтрок-1];
			КонецЦикла;
			
		Иначе
			МассивСотрудников = ФизическиеЛицаБезБазы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
			Если МассивСотрудников.Количество() &gt; 0 Тогда
				СтрокаСотрудника = МассивСотрудников[0];
				
				НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
				НоваяСтрока.Период								= Период;
				НоваяСтрока.Организация							= Организация;
				НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
				НоваяСтрока.ПериодДействия						= Период;
				НоваяСтрока.НачислениеУдержание					= НачислениеУдержание;
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Удержано";
				НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.СтатьяРасходов;
				
				НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
				НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
				НоваяСтрока.Сумма								= СтрокаТаблицы.Налог;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	//Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛКЗачету) Цикл 
	//	СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(НДФЛКЗачету, Сч);
	//	
	//	Если СтрокаТаблицы.ВидДвижения = ВидДвиженияПриход Тогда
	//		НачислениеУдержание = "НДФЛКЗачету";
	//		
	//	Иначе
	//		НачислениеУдержание = "НДФЛЗачтено";
	//		
	//	КонецЕсли;
	//	Организация		= СтрокаТаблицы.Организация;
	//	Период			= НачалоДня(СтрокаТаблицы.Период);
	//	ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
	//	
	//	СтрокиБазы				= ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(НачисленияБаза, "ФизическоеЛицо, СтатьяФинансирования, СтатьяРасходов", ФизическоеЛицо, СтрокаТаблицы.СтатьяФинансирования, СтрокаТаблицы.КОСГУ);
	//	Коэффициенты			= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ВыделитьКоэффициентыИзМассиваСтрок", Параметры.Алгоритмы, СтрокиБазы, "Сумма");
	//	РезультатРаспределения	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("РаспределитьПропорционально", Параметры.Алгоритмы, СтрокаТаблицы.СуммаНДФЛКЗачету, Коэффициенты, 0);
	//	
	//	Если ОбъектыПереносаДанных.Массив_Количество(РезультатРаспределения) &gt; 0 Тогда
	//		Для СчСтрок = 1 По ОбъектыПереносаДанных.Массив_Количество(РезультатРаспределения) Цикл
	//			СтрокаБазы = ОбъектыПереносаДанных.Массив_Получить(СтрокиБазы,СчСтрок);
	//			
	//			НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(НачисленияУдержанияПоСотрудникам);
	//			НоваяСтрока.Период								= Период;
	//			НоваяСтрока.Организация							= Организация;
	//			НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
	//			НоваяСтрока.ПериодДействия						= Период;
	//			НоваяСтрока.НачислениеУдержание					= НачислениеУдержание;
	//			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Справочно";
	//			НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
	//			НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.КОСГУ;
	//			
	//			НоваяСтрока.Сотрудник							= ОбъектыПереносаДанных.Структура_Получить(СтрокаБазы, "Сотрудник");
	//			НоваяСтрока.Подразделение						= ОбъектыПереносаДанных.Структура_Получить(СтрокаБазы, "Подразделение");
	//			НоваяСтрока.Сумма								= ОбъектыПереносаДанных.Массив_Получить(РезультатРаспределения, СчСтрок);
	//		КонецЦикла;
	//		
	//	Иначе
	//		МассивСотрудников = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(ФизическиеЛицаБезБазы, "ФизическоеЛицо", ФизическоеЛицо);
	//		Если ОбъектыПереносаДанных.Массив_Количество(МассивСотрудников) &gt; 0 Тогда
	//			СтрокаСотрудника = ОбъектыПереносаДанных.ТаблицаЗначений_НайденнаяСтрокаПоИндексу(ФизическиеЛицаБезБазы, МассивСотрудников, 1);
	//			
	//			НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(НачисленияУдержанияПоСотрудникам);
	//			НоваяСтрока.Период								= Период;
	//			НоваяСтрока.Организация							= Организация;
	//			НоваяСтрока.ФизическоеЛицо						= ФизическоеЛицо;
	//			НоваяСтрока.ПериодДействия						= Период;
	//			НоваяСтрока.НачислениеУдержание					= НачислениеУдержание;
	//			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Справочно";
	//			НоваяСтрока.СтатьяФинансирования				= СтрокаТаблицы.СтатьяФинансирования;
	//			НоваяСтрока.СтатьяРасходов						= СтрокаТаблицы.КОСГУ;
	//			
	//			НоваяСтрока.Сотрудник							= СтрокаСотрудника.Сотрудник;
	//			НоваяСтрока.Подразделение						= СтрокаСотрудника.Подразделение;
	//			НоваяСтрока.Сумма								= СтрокаТаблицы.СуммаНДФЛКЗачету;
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	ВыборкаПоДокументу = Новый Структура;
	ВыборкаПоДокументу.Вставить("Номер",										"НЗП");
	ВыборкаПоДокументу.Вставить("Организация",									ОрганизацияОтбор);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации",							ПериодОтбор);
	Если СтрокаТаблицыРезультатов.Авансом = 1 Тогда
		ВыборкаПоДокументу.Вставить("НачисленияУдержанияПоСотрудникамАвансом",	НачисленияУдержанияПоСотрудникам);
	Иначе
		ВыборкаПоДокументу.Вставить("НачисленияУдержанияПоСотрудникам",			НачисленияУдержанияПоСотрудникам);
	КонецЕсли;
	ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",							СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , ИмяПравилКонвертации);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛДоходыПредыдущегоМестаРаботы_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ДоходыПредыдущегоМестаРаботыНДФЛ	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "НДФЛДоходыПредыдущегоМестаРаботы");

ВыборкаДанных = ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ДоходыПредыдущегоМестаРаботыНДФЛ, "ГоловнаяОрганизация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ДоходыПредыдущегоМестаРаботыНДФЛ, "ФизическоеЛицо");

Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ДоходыПредыдущегоМестаРаботыНДФЛ) Цикл
	СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ДоходыПредыдущегоМестаРаботыНДФЛ, Сч);
	
	СтрокаТаблицы.ГоловнаяОрганизация	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ГоловнаяОрганизация", Параметры.Алгоритмы, СтрокаТаблицы.Организация);
	СтрокаТаблицы.ФизическоеЛицо		= СтрокаТаблицы.ФизЛицо;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицы));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛПредоставлениеСтандартныхВычетов_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = ОбъектыПереносаДанных.НовыйОбъект("Структура");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сотрудник",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Организация",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Месяц",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ИзменитьЛичныйВычет",		"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "КодВычетаЛичный",			"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "ИзменитьВычетыНаДетей",	"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Дата",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Номер",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Ответственный",			"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Комментарий",				"");

Субконто = СЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="НДФЛПредоставлениеСтандартныхВычетов_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = ОбъектыПереносаДанных.НовыйОбъект("Массив");

Для СчРезультатов = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ИсходящиеДанные) Цикл 
	СтрокаТаблицыРезультатов = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ИсходящиеДанные, СчРезультатов);
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	
	Если Не ЗначениеЗаполнено(ОрганизацияОтбор) Тогда
		Продолжить;
	КонецЕсли;	
	
	ФизлицоОтбор		= СтрокаТаблицыРезультатов.Физлицо;
	
	НДФЛПрименениеВычетов			= СтрокаТаблицыРезультатов.НДФЛПрименениеВычетов;
	НДФЛСтандартныеВычетыФизлиц		= СтрокаТаблицыРезультатов.НДФЛСтандартныеВычетыФизлиц;
	НДФЛСтандартныеВычетыНаДетей	= СтрокаТаблицыРезультатов.НДФЛСтандартныеВычетыНаДетей;
	
	МесяцыРегистрации = ОбъектыПереносаДанных.НовыйОбъект("Массив");
	Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛПрименениеВычетов) Цикл 
		СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(НДФЛПрименениеВычетов, Сч);
		МесяцРегистрации = НачалоМесяца(СтрокаТаблицы.Период);
		Если ОбъектыПереносаДанных.Массив_Найти(МесяцыРегистрации, МесяцРегистрации) &lt;&gt; 0 Тогда
			Продолжить;
		КонецЕсли;
		ОбъектыПереносаДанных.Массив_Добавить(МесяцыРегистрации, МесяцРегистрации);
	КонецЦикла;
	Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛСтандартныеВычетыФизлиц) Цикл 
		СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(НДФЛСтандартныеВычетыФизлиц, Сч);
		МесяцРегистрации = НачалоМесяца(СтрокаТаблицы.Период);
		Если ОбъектыПереносаДанных.Массив_Найти(МесяцыРегистрации, МесяцРегистрации) &lt;&gt; 0 Тогда
			Продолжить;
		КонецЕсли;
		ОбъектыПереносаДанных.Массив_Добавить(МесяцыРегистрации, МесяцРегистрации);
	КонецЦикла;
	Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛСтандартныеВычетыНаДетей) Цикл 
		СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(НДФЛСтандартныеВычетыНаДетей, Сч);
		МесяцРегистрации = НачалоМесяца(СтрокаТаблицы.Период);
		Если ОбъектыПереносаДанных.Массив_Найти(МесяцыРегистрации, МесяцРегистрации) &lt;&gt; 0 Тогда
			Продолжить;
		КонецЕсли;
		ОбъектыПереносаДанных.Массив_Добавить(МесяцыРегистрации, МесяцРегистрации);
	КонецЦикла;
	
	Для НомерЭлемента = 1 По ОбъектыПереносаДанных.Массив_Количество(МесяцыРегистрации) Цикл
		МесяцРегистрации = ОбъектыПереносаДанных.Массив_Получить(МесяцыРегистрации, НомерЭлемента);
		
		ПрименениеСтандартныхВычетовПоНДФЛ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПрименениеСтандартныхВычетовПоНДФЛ, "ФизическоеЛицо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПрименениеСтандартныхВычетовПоНДФЛ, "ГоловнаяОрганизация");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПрименениеСтандартныхВычетовПоНДФЛ, "Период");
		
		СтандартныеВычетыФизическихЛицНДФЛ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "ФизическоеЛицо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "Период");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "КодВычетаЛичный");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "Основание");
		
		ВычетыНаДетей = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ВычетыНаДетей, "КодВычета");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ВычетыНаДетей, "ДействуетДо");
		
		СтандартныеВычетыНаДетейНДФЛ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "ФизическоеЛицо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "МесяцРегистрации");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "КодВычета");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "ДатаДействия");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "КоличествоДетей");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "ДействуетДо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "КоличествоДетейПоОкончании");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "Основание");
		
		НДФЛПредоставлениеСтандартныхВычетов = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НДФЛПредоставлениеСтандартныхВычетов_Описание", Параметры.Алгоритмы);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Сотрудник",				ФизлицоОтбор);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Организация",			ОрганизацияОтбор);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Месяц",					МесяцРегистрации);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Дата",					МесяцРегистрации);
		
		НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПрименениеСтандартныхВычетовПоНДФЛ);
		НоваяСтрока.ФизическоеЛицо		= ФизлицоОтбор;
		НоваяСтрока.ГоловнаяОрганизация	= ОрганизацияОтбор;
		НоваяСтрока.Период				= МесяцРегистрации;
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "ПрименениеСтандартныхВычетовПоНДФЛ",	ПрименениеСтандартныхВычетовПоНДФЛ);
		
		ИзменитьЛичныйВычет = 0;
		Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛСтандартныеВычетыФизлиц) &gt; 0 Тогда
			Измерения = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			Ресурсы = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "КодВычетаЛичный");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "Основание");
			ТаблицаСреза = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ТаблицаЗначений_СрезПоследних", Параметры.Алгоритмы, НДФЛСтандартныеВычетыФизлиц, МесяцРегистрации, Измерения, Ресурсы);
			Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаСреза) &gt; 0 Тогда
				СтрокаСреза = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаСреза, 1);
				
				ИзменитьЛичныйВычет = 1;
				ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "КодВычетаЛичный",		СтрокаСреза.КодВычетаЛичный);
				
				НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(СтандартныеВычетыФизическихЛицНДФЛ);
				НоваяСтрока.ФизическоеЛицо		= ФизлицоОтбор;
				НоваяСтрока.Период				= МесяцРегистрации;
				НоваяСтрока.КодВычетаЛичный		= СтрокаСреза.КодВычетаЛичный;
				НоваяСтрока.Основание			= СтрокаСреза.Основание;
				ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "СтандартныеВычетыФизическихЛицНДФЛ",	СтандартныеВычетыФизическихЛицНДФЛ);
			КонецЕсли;
		КонецЕсли;
		
		ИзменитьВычетыНаДетей = 0;
		Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛСтандартныеВычетыНаДетей) &gt; 0 Тогда
			Измерения = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			ОбъектыПереносаДанных.Массив_Добавить(Измерения, "КодВычета");
			Ресурсы = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "КоличествоДетей");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "ПериодЗавершения");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "КоличествоДетейЗавершения");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "Основание");
			ТаблицаСреза = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ТаблицаЗначений_СрезПоследних", Параметры.Алгоритмы, НДФЛСтандартныеВычетыНаДетей, МесяцРегистрации, Измерения, Ресурсы);
			КоличествоСтрокСреза = ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаСреза);
			Если КоличествоСтрокСреза &gt; 0 Тогда
				
				Для НомерСтрокиСреза = 1 По КоличествоСтрокСреза Цикл
					СтрокаСреза = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаСреза, НомерСтрокиСреза);
					
					ПериодЗавершения = СтрокаСреза.ПериодЗавершения;
					
					Если ЗначениеЗаполнено(ПериодЗавершения) = 0 Тогда
						ПериодЗавершения = НачалоМесяца(КонецГода(ТекущаяДата()));
						
					Иначе
						Если ПериодЗавершения &lt;= МесяцРегистрации Тогда
							Продолжить;
						КонецЕсли;
						
					КонецЕсли;
					
					ИзменитьВычетыНаДетей = 1;
					
					Для НомерРебенка = 1 По СтрокаСреза.КоличествоДетей Цикл
						НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ВычетыНаДетей);
						НоваяСтрока.КодВычета	= СтрокаСреза.КодВычета;
						НоваяСтрока.ДействуетДо	= ПериодЗавершения;
					КонецЦикла;
					
					НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(СтандартныеВычетыНаДетейНДФЛ);
					НоваяСтрока.ФизическоеЛицо				= ФизлицоОтбор;
					НоваяСтрока.МесяцРегистрации			= МесяцРегистрации;
					НоваяСтрока.КодВычета					= СтрокаСреза.КодВычета;
					НоваяСтрока.ДатаДействия				= МесяцРегистрации;
					НоваяСтрока.КоличествоДетей				= СтрокаСреза.КоличествоДетей;
					НоваяСтрока.ДействуетДо					= ПериодЗавершения;
					НоваяСтрока.КоличествоДетейПоОкончании	= СтрокаСреза.КоличествоДетейЗавершения;
					НоваяСтрока.Основание					= СтрокаСреза.Основание;
				КонецЦикла;
				
				ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "ВычетыНаДетей",					ВычетыНаДетей);
				ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "СтандартныеВычетыНаДетейНДФЛ",	СтандартныеВычетыНаДетейНДФЛ);
			КонецЕсли;
		КонецЕсли;
		
		Если (ИзменитьЛичныйВычет = 0) И (ИзменитьВычетыНаДетей = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "ИзменитьЛичныйВычет",	ИзменитьЛичныйВычет);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "ИзменитьВычетыНаДетей",	ИзменитьВычетыНаДетей);
		
		ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, НДФЛПредоставлениеСтандартныхВычетов);
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="НДФЛПрекращениеСтандартныхВычетов_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>СЗ = ОбъектыПереносаДанных.НовыйОбъект("Структура");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Сотрудник",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Организация",				"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Месяц",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Дата",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Номер",					"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Ответственный",			"");
ОбъектыПереносаДанных.Структура_Установить(СЗ, "Комментарий",				"");

Субконто = СЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="НДФЛПрекращениеСтандартныхВычетов_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = ОбъектыПереносаДанных.НовыйОбъект("Массив");

Для СчРезультатов = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ИсходящиеДанные) Цикл 
	СтрокаТаблицыРезультатов = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ИсходящиеДанные, СчРезультатов);
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ФизлицоОтбор		= СтрокаТаблицыРезультатов.Физлицо;
	
	НДФЛОтменаВычетов				= СтрокаТаблицыРезультатов.НДФЛОтменаВычетов;
	НДФЛСтандартныеВычетыФизлиц		= СтрокаТаблицыРезультатов.НДФЛСтандартныеВычетыФизлиц;
	НДФЛСтандартныеВычетыНаДетей	= СтрокаТаблицыРезультатов.НДФЛСтандартныеВычетыНаДетей;
	
	МесяцыРегистрации = ОбъектыПереносаДанных.НовыйОбъект("Массив");
	Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛОтменаВычетов) Цикл 
		СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(НДФЛОтменаВычетов, Сч);
		МесяцРегистрации = НачалоМесяца(СтрокаТаблицы.Период);
		Если ОбъектыПереносаДанных.Массив_Найти(МесяцыРегистрации, МесяцРегистрации) &lt;&gt; 0 Тогда
			Продолжить;
		КонецЕсли;
		ОбъектыПереносаДанных.Массив_Добавить(МесяцыРегистрации, МесяцРегистрации);
	КонецЦикла;
	
	Для НомерЭлемента = 1 По ОбъектыПереносаДанных.Массив_Количество(МесяцыРегистрации) Цикл
		МесяцРегистрации = ОбъектыПереносаДанных.Массив_Получить(МесяцыРегистрации, НомерЭлемента);
		
		ПрименениеСтандартныхВычетовПоНДФЛ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПрименениеСтандартныхВычетовПоНДФЛ, "ФизическоеЛицо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПрименениеСтандартныхВычетовПоНДФЛ, "ГоловнаяОрганизация");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ПрименениеСтандартныхВычетовПоНДФЛ, "Период");
		
		СтандартныеВычетыФизическихЛицНДФЛ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "ФизическоеЛицо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "Период");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "КодВычетаЛичный");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыФизическихЛицНДФЛ, "Основание");
		
		СтандартныеВычетыНаДетейНДФЛ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "ФизическоеЛицо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "МесяцРегистрации");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "КодВычета");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "ДатаДействия");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "КоличествоДетей");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "ДействуетДо");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "КоличествоДетейПоОкончании");
		ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СтандартныеВычетыНаДетейНДФЛ, "Основание");
		
		НДФЛПредоставлениеСтандартныхВычетов = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НДФЛПредоставлениеСтандартныхВычетов_Описание", Параметры.Алгоритмы);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Сотрудник",				ФизлицоОтбор);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Организация",			ОрганизацияОтбор);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Месяц",					МесяцРегистрации);
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "Дата",					МесяцРегистрации);
		
		НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ПрименениеСтандартныхВычетовПоНДФЛ);
		НоваяСтрока.ФизическоеЛицо		= ФизлицоОтбор;
		НоваяСтрока.ГоловнаяОрганизация	= ОрганизацияОтбор;
		НоваяСтрока.Период				= МесяцРегистрации;
		ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "ПрименениеСтандартныхВычетовПоНДФЛ",	ПрименениеСтандартныхВычетовПоНДФЛ);
		
		Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛСтандартныеВычетыФизлиц) &gt; 0 Тогда
			Измерения = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			Ресурсы = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "КодВычетаЛичный");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "Основание");
			ТаблицаСреза = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ТаблицаЗначений_СрезПоследних", Параметры.Алгоритмы, НДФЛСтандартныеВычетыФизлиц, МесяцРегистрации, Измерения, Ресурсы);
			Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаСреза) &gt; 0 Тогда
				НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(СтандартныеВычетыФизическихЛицНДФЛ);
				НоваяСтрока.ФизическоеЛицо		= ФизлицоОтбор;
				НоваяСтрока.Период				= МесяцРегистрации;
				ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "СтандартныеВычетыФизическихЛицНДФЛ",	СтандартныеВычетыФизическихЛицНДФЛ);
			КонецЕсли;
		КонецЕсли;
		
		Если ОбъектыПереносаДанных.ТаблицаЗначений_Количество(НДФЛСтандартныеВычетыНаДетей) &gt; 0 Тогда
			Измерения = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			ОбъектыПереносаДанных.Массив_Добавить(Измерения, "КодВычета");
			Ресурсы = ОбъектыПереносаДанных.НовыйОбъект("Массив");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "КоличествоДетей");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "ПериодЗавершения");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "КоличествоДетейЗавершения");
			ОбъектыПереносаДанных.Массив_Добавить(Ресурсы, "Основание");
			ТаблицаСреза = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ТаблицаЗначений_СрезПоследних", Параметры.Алгоритмы, НДФЛСтандартныеВычетыНаДетей, МесяцРегистрации, Измерения, Ресурсы);
			КоличествоСтрокСреза = ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаСреза);
			Если КоличествоСтрокСреза &gt; 0 Тогда
				
				Для НомерСтрокиСреза = 1 По КоличествоСтрокСреза Цикл
					СтрокаСреза = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаСреза, НомерСтрокиСреза);
					
					ПериодЗавершения = СтрокаСреза.ПериодЗавершения;
					
					Если ЗначениеЗаполнено(ПериодЗавершения) = 0 Тогда
						ПериодЗавершения = НачалоМесяца(КонецГода(ТекущаяДата()));
						
					Иначе
						Если ПериодЗавершения &lt;= МесяцРегистрации Тогда
							Продолжить;
						КонецЕсли;
						
					КонецЕсли;
					
					НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(СтандартныеВычетыНаДетейНДФЛ);
					НоваяСтрока.ФизическоеЛицо				= ФизлицоОтбор;
					НоваяСтрока.МесяцРегистрации			= МесяцРегистрации;
					НоваяСтрока.КодВычета					= СтрокаСреза.КодВычета;
					НоваяСтрока.ДатаДействия				= МесяцРегистрации;
				КонецЦикла;
				
				ОбъектыПереносаДанных.Структура_Установить(НДФЛПредоставлениеСтандартныхВычетов, "СтандартныеВычетыНаДетейНДФЛ",	СтандартныеВычетыНаДетейНДФЛ);
			КонецЕсли;
		КонецЕсли;
		
		ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, НДФЛПредоставлениеСтандартныхВычетов);
	КонецЦикла;
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтнесениеРасходовКДеятельностиЕНВД_Строка" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы					= ВидСубконто;
ОтнесениеРасходовКДеятельностиЕНВД	= ИсходящиеДанные;

Если ЗначениеЗаполнено(ОтнесениеРасходовКДеятельностиЕНВД) Тогда
	Субконто = ОтнесениеРасходовКДеятельностиЕНВД.Метаданные().Имя;
Иначе
	Субконто = "";
КонецЕсли;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ОтпускПоУходуЗаРебенком_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ОтпускПоУходуЗаРебенком = Новый Структура;
ОтпускПоУходуЗаребенком.Вставить("ОсновнойСотрудник",										"");
ОтпускПоУходуЗаребенком.Вставить("Сотрудник",												"");
ОтпускПоУходуЗаребенком.Вставить("Организация",												"");
ОтпускПоУходуЗаребенком.Вставить("ПериодРегистрации",										"");
ОтпускПоУходуЗаребенком.Вставить("ДатаНачала",												"");
ОтпускПоУходуЗаребенком.Вставить("ДатаОкончания",											"");
ОтпускПоУходуЗаребенком.Вставить("ДатаОкончанияПособияДоТрехЛет",							"");
//ОтпускПоУходуЗаребенком.Вставить("СреднийДневнойЗаработок",									"");
//ОтпускПоУходуЗаребенком.Вставить("КоличествоДетей",											"");
//ОтпускПоУходуЗаребенком.Вставить("КоличествоПервыхДетей",									"");
//ОтпускПоУходуЗаребенком.Вставить("ВыплачиватьПособиеДоПолутораЛет",							"");
//ОтпускПоУходуЗаребенком.Вставить("ПособиеДоПолутораЛет",									"");
ОтпускПоУходуЗаребенком.Вставить("ВыплачиватьПособиеДоТрехЛет",								"");
ОтпускПоУходуЗаребенком.Вставить("ПособиеДоТрехЛет",										"");
//ОтпускПоУходуЗаребенком.Вставить("ПериодРасчетаСреднегоЗаработкаНачало",					"");
//ОтпускПоУходуЗаребенком.Вставить("ПериодРасчетаСреднегоЗаработкаОкончание",					"");
//ОтпускПоУходуЗаребенком.Вставить("ПериодРасчетаСреднегоЗаработкаПервыйГод",					"");
//ОтпускПоУходуЗаребенком.Вставить("ПериодРасчетаСреднегоЗаработкаВторойГод",					"");
//ОтпускПоУходуЗаребенком.Вставить("ПрименятьЛьготыПриНачисленииПособия",						"");
//ОтпускПоУходуЗаребенком.Вставить("ПереноситьДанныеВДругойУчетСреднегоЗаработка",			"");
//ОтпускПоУходуЗаребенком.Вставить("УчитыватьЗаработокПредыдущихСтрахователей",				"");
//ОтпускПоУходуЗаребенком.Вставить("РасчетПоПравилам2010Года",								"");
//ОтпускПоУходуЗаребенком.Вставить("ФинансированиеФедеральнымБюджетом",						"");
//ОтпускПоУходуЗаребенком.Вставить("ДоляНеполногоВремени",									"");
//ОтпускПоУходуЗаребенком.Вставить("РайонныйКоэффициентРФнаНачалоСобытия",					"");
ОтпускПоУходуЗаребенком.Вставить("НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска",	"");
ОтпускПоУходуЗаребенком.Вставить("ИзменитьНачисления",										"");
ОтпускПоУходуЗаребенком.Вставить("НачисленияУтверждены",									"");
ОтпускПоУходуЗаребенком.Вставить("ВидОтпуска",												"");
ОтпускПоУходуЗаребенком.Вставить("Ответственный",											"");
ОтпускПоУходуЗаребенком.Вставить("Комментарий",												"");
ОтпускПоУходуЗаребенком.Вставить("Дата",													"");
ОтпускПоУходуЗаребенком.Вставить("Номер",													"");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ОтпускПоУходуЗаРебенком_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеНачисленияРаботниковОрганизаций		= ИсходящиеДанные.ПлановыеНачисленияРаботниковОрганизаций;
СостояниеРаботниковОтпускПоУходуЗаРебенком 	= ИсходящиеДанные.СостояниеРаботниковОтпускПоУходуЗаРебенком;

ПлановыеНачисленияПоСотрудникам = Новый ТаблицаЗначений;
ПлановыеНачисленияПоСотрудникам.Колонки.Добавить("Сотрудник");
ПлановыеНачисленияПоСотрудникам.Колонки.Добавить("ДатаСобытия");
ПлановыеНачисленияПоСотрудникам.Колонки.Добавить("ПлановыеНачисления");
ПлановыеНачисленияПоСотрудникам.Колонки.Добавить("ЯвляетсяОтпускомПоУходуЗаребенком");
ПлановыеНачисленияПоСотрудникам.Колонки.Добавить("ОтпускПоУходуЗаРебенкомБезОплаты");

ДлинаСуток		= 86400;
ЕстьРеквизиты	= 1;

ТекущийСотрудник				= "";
ТекущаяДатаСобытия				= "";
ПлановоеНачислениеПоСотруднику	= "";
Для НомерВыборки = 1 По ПлановыеНачисленияРаботниковОрганизаций.Количество() Цикл
	ПлановоеНачисление = ПлановыеНачисленияРаботниковОрганизаций[НомерВыборки-1];
	
	Сотрудник = ПлановоеНачисление.Сотрудник["Ссылка"];
	
	Если (ТекущийСотрудник &lt;&gt; Сотрудник) Или (ТекущаяДатаСобытия &lt;&gt; ПлановоеНачисление.Период) Тогда
		ПлановоеНачислениеПоСотруднику = ПлановыеНачисленияПоСотрудникам.Добавить();
		ПлановоеНачислениеПоСотруднику.Сотрудник			= ПлановоеНачисление.Сотрудник;
		ПлановоеНачислениеПоСотруднику.ДатаСобытия			= ПлановоеНачисление.Период;
		
		ПлановыеНачисления = Неопределено;
		Выполнить(Алгоритмы.ПлановыеНачисления_Описание);
		
		ПлановоеНачислениеПоСотруднику.ПлановыеНачисления	= ПлановыеНачисления;
		ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 0;
		
		ТекущийСотрудник	= Сотрудник;
		ТекущаяДатаСобытия	= ПлановоеНачисление.Период;
	КонецЕсли;
	
	Начисление		= ПлановоеНачисление.ВидРасчета;
	Ссылка			= Начисление["Ссылка"];
	СпособРасчета	= Начисление["СпособРасчета"];
	
	Если (ПлановоеНачисление.Действие = Перечисления.ВидыДействияСНачислением.Начать)
		Или (ПлановоеНачисление.Действие = Перечисления.ВидыДействияСНачислением.ПустаяСсылка())
		Тогда
		
		Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты) Тогда
			ПлановоеНачислениеПоСотруднику.ЯвляетсяОтпускомПоУходуЗаребенком	= 1;
			ПлановоеНачислениеПоСотруднику.ОтпускПоУходуЗаРебенкомБезОплаты		= ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ПлановоеНачисление);			
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПлановоеНачислениеПоСотруднику.ПлановыеНачисления.Добавить(), ПлановоеНачисление);
КонецЦикла;

Для НомерВыборки = 1 По ПлановыеНачисленияПоСотрудникам.Количество() Цикл
	СтрокаОтпускаПоУходуЗаРебенком = ПлановыеНачисленияПоСотрудникам[НомерВыборки-1];
	
	Если СтрокаОтпускаПоУходуЗаРебенком.ЯвляетсяОтпускомПоУходуЗаребенком = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ОтпускПоУходуЗаРебенком = Неопределено;
	Выполнить(Алгоритмы.ОтпускПоУходуЗаРебенком_Описание);

	ОтпускПоУходуЗаРебенком.Вставить("ПериодРегистрации",										НачалоМесяца(СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия));
	ОтпускПоУходуЗаРебенком.Вставить("ДатаНачала",												СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия);
	
	ОтпускПоУходуЗаРебенкомБезОплаты	= СтрокаОтпускаПоУходуЗаРебенком.ОтпускПоУходуЗаРебенкомБезОплаты;
	ОтпускПоУходуЗаРебенком_СтраховойСлучай				= "";
	ОтпускПоУходуЗаРебенком_ФизическоеЛицо				= "";
	ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение	= "";
	Если ЗначениеЗаполнено(ОтпускПоУходуЗаРебенкомБезОплаты) = 1 Тогда
		ОтпускПоУходуЗаРебенком.Вставить("Дата",					ОтпускПоУходуЗаРебенкомБезОплаты["ПервичныйДокумент_Дата"]);
		ОтпускПоУходуЗаРебенком.Вставить("Номер",					ОтпускПоУходуЗаРебенкомБезОплаты["ПервичныйДокумент_Номер"]);
		ОтпускПоУходуЗаРебенком.Вставить("Ответственный",			ОтпускПоУходуЗаРебенкомБезОплаты["ПервичныйДокумент_Ответственный"]);
		ОтпускПоУходуЗаРебенком.Вставить("Комментарий",				ОтпускПоУходуЗаРебенкомБезОплаты["ПервичныйДокумент_Комментарий"]);
		
		ОтпускПоУходуЗаРебенком_ФизическоеЛицо				= ОтпускПоУходуЗаРебенкомБезОплаты["Сотрудник_Физлицо"];
		ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение	= ОтпускПоУходуЗаРебенкомБезОплаты["ОбособленноеПодразделение"];
		ОтпускПоУходуЗаРебенком_СтраховойСлучай				= ОтпускПоУходуЗаРебенкомБезОплаты["ПервичныйДокумент"];
		
	КонецЕсли;
	
	ОтпускПоУходуЗаРебенком.Вставить("ОсновнойСотрудник",										СтрокаОтпускаПоУходуЗаРебенком.Сотрудник);
	ОтпускПоУходуЗаРебенком.Вставить("Сотрудник",												ОтпускПоУходуЗаРебенком_ФизическоеЛицо);
	ОтпускПоУходуЗаРебенком.Вставить("Организация",												ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение);
	ОтпускПоУходуЗаРебенком.Вставить("НачисленияУтверждены",									1);
	ОтпускПоУходуЗаРебенком.Вставить("НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска",	0);
	
	ОтпускПоУходуЗаРебенком_ДатаОкончания = Дата(1, 1, 1);
	
	Если ЗначениеЗаполнено(ОтпускПоУходуЗаРебенкомБезОплаты) = 1 Тогда
		
		СтрокиСостоянияРаботника = СостояниеРаботниковОтпускПоУходуЗаРебенком.НайтиСтроки(
			Новый Структура("Регистратор, Состояние", ОтпускПоУходуЗаРебенкомБезОплаты.ПервичныйДокумент, Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком));
			
		Если СтрокиСостоянияРаботника.Количество() &gt; 0 Тогда
			ОтпускПоУходуЗаРебенком_ДатаОкончания	= СтрокиСостоянияРаботника[0].ПериодЗавершения;
		КонецЕсли;
		
		ОтпускПоУходуЗаРебенком.Вставить("ДатаОкончанияПособияДоТрехЛет",						ОтпускПоУходуЗаРебенком_ДатаОкончания - ДлинаСуток);
		ОтпускПоУходуЗаРебенком.Вставить("ВыплачиватьПособиеДоТрехЛет",							1);
		ОтпускПоУходуЗаРебенком.Вставить("ПособиеДоТрехЛет",									ОтпускПоУходуЗаРебенкомБезОплаты["ВидРасчета"]);
	КонецЕсли;
	ОтпускПоУходуЗаРебенком.Вставить("ДатаОкончания",											ОтпускПоУходуЗаРебенком_ДатаОкончания - ДлинаСуток);
	
	СтраховойСлучай = Новый Структура;
	СтраховойСлучай.Вставить("Сотрудник",		ОтпускПоУходуЗаРебенком_ФизическоеЛицо);
	СтраховойСлучай.Вставить("Организация",		ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение);
	СтраховойСлучай.Вставить("ДатаНачала",		ОтпускПоУходуЗаРебенком_СтраховойСлучай.ДатаНачала);
	
	УсловияОплатыОтпускаПоУходуЗаРебенком = Неопределено;
	Выполнить(Алгоритмы.УсловияОплатыОтпускаПоУходуЗаРебенком_Описание);
	
	УсловиеОплаты = УсловияОплатыОтпускаПоУходуЗаРебенком.Добавить();
	ЗаполнитьЗначенияСвойств(УсловиеОплаты, ОтпускПоУходуЗаРебенком);
	УсловиеОплаты.Сотрудник				= СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
	УсловиеОплаты.Организация			= ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение;
	УсловиеОплаты.ФизическоеЛицо		= ОтпускПоУходуЗаРебенком_ФизическоеЛицо;
	УсловиеОплаты.Период				= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
	УсловиеОплаты.ДатаНачалаСобытия		= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
	УсловиеОплаты.СтраховойСлучай		= СтраховойСлучай;
	ОтпускПоУходуЗаРебенком.Вставить("УсловияОплатыОтпускаПоУходуЗаРебенком",	УсловияОплатыОтпускаПоУходуЗаРебенком);
	
	ПлановыеНачисленияСотрудника = ПлановыеНачисленияРаботниковОрганизаций.НайтиСтроки(Новый Структура("Сотрудник, Период", СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия));
	Если ПлановыеНачисленияСотрудника.Количество() &lt;&gt; 0 Тогда
		ПлановыеНачисления = Неопределено;
		Выполнить(Алгоритмы.ПлановыеНачисления_Описание);
		
		ПрименениеПлановыхНачислений = Неопределено;
		Выполнить(Алгоритмы.ПрименениеПлановыхНачислений_Описание);
		
		Для Номер = 1 По ПлановыеНачисленияСотрудника.Количество() Цикл
			ПлановоеНачислениеСотрудника = ПлановыеНачисленияСотрудника[Номер-1];
			
			Начисление		= ПлановоеНачислениеСотрудника["ВидРасчета"];
			Ссылка			= Начисление["Ссылка"];
			СпособРасчета	= Начисление["СпособРасчета"];
			
			Если СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой Тогда
				Продолжить;
			КонецЕсли;
			
			Если Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты Тогда
				ОтпускПоУходуЗаРебенком.Вставить("НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска",	1);
				
				ПрименениеНачислений = ПрименениеПлановыхНачислений.Добавить();
				ПрименениеНачислений.Сотрудник				= СтрокаОтпускаПоУходуЗаРебенком.Сотрудник;
				ПрименениеНачислений.Период					= СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия;
				ПрименениеНачислений.Применение				= 0;
				ПрименениеНачислений.ДействуетДо			= ОтпускПоУходуЗаРебенком_ДатаОкончания;
				ПрименениеНачислений.ПрименениеПоОкончании	= 1;
				
				Продолжить;
			КонецЕсли;
			
			ПрекратитьНачисление = 0;
			Если (СпособРасчета &lt;&gt; ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты) Тогда
				ОтпускПоУходуЗаРебенком.Вставить("ИзменитьНачисления",	1);
				ПрекратитьНачисление = 1;
			КонецЕсли;
			
			ДатаОкончанияНачисления = ОтпускПоУходуЗаРебенком_ДатаОкончания;
			
			СтруктураДляПлановогоНачисления = Новый Структура(
					"ПлановоеНачислениеСотрудника,ПлановыеНачисления,ИдентификаторСтрокиВидаРасчета,Документ_Сотрудник,Документ_Сотрудник_Физлицо,Документ_ОбособленноеПодразделение,Документ_Период,Документ_ПериодЗавершения,ПрекратитьНачисление",
					ПлановоеНачислениеСотрудника,ПлановыеНачисления,Номер,
					СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, ОтпускПоУходуЗаРебенком_ФизическоеЛицо, ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение, 
					СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия,ДатаОкончанияНачисления,ПрекратитьНачисление);
					
			Выполнить(Алгоритмы.ПлановыеНачисления_ОбновитьНачисление);
			
		КонецЦикла;
		
		ПлановыеНачисления.Колонки.Добавить("РабочееМесто");
		ПлановыеНачисления.Колонки.Добавить("ЯвляетсяОтпускомПоУходуЗаРебенком");
		Для Номер = 1 По ПлановыеНачисления.Количество() Цикл
			ПлановоеНачисление = ПлановыеНачисления[Номер-1];
			
			Ссылка			= ПлановоеНачисление.Начисление["Ссылка"];
			СпособРасчета	= ПлановоеНачисление.Начисление["СпособРасчета"];
			
			ЯвляетсяОтпускомПоУходуЗаРебенком = 0;
			Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
				Или (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет) Тогда
				ЯвляетсяОтпускомПоУходуЗаРебенком = 1;
			КонецЕсли;
			
			ПлановоеНачисление.РабочееМесто							= ПлановоеНачисление.Сотрудник;
			ПлановоеНачисление.ЯвляетсяОтпускомПоУходуЗаРебенком	= ЯвляетсяОтпускомПоУходуЗаРебенком;
		КонецЦикла;
		
		
		ЗначенияПоказателей = Неопределено;
		Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
		ПоказателиДокумента = ЗначенияПоказателей;
		
		ЗначенияПоказателей = Неопределено;
		Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
		ПоказателиРегистра = ЗначенияПоказателей; 			// Для изменения обособленного подразделения
		
		ЗначенияСовокупныхТарифныхСтавок = Неопределено;
		Выполнить(Алгоритмы.ЗначенияСовокупныхТарифныхСтавок_Описание);
		
		ПрименениеПоказателей = Неопределено;
		Выполнить(Алгоритмы.ПрименениеПоказателей_Описание);
		
		СтруктураПараметров = Новый Структура("ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
			|Документ_Сотрудник, Документ_Сотрудник_Физлицо, Документ_ОбособленноеПодразделение, Документ_Период, Документ_ПериодЗавершения",
			ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
			СтрокаОтпускаПоУходуЗаРебенком.Сотрудник, ОтпускПоУходуЗаРебенком_ФизическоеЛицо, ОтпускПоУходуЗаРебенком_ОбособленноеПодразделение,
			СтрокаОтпускаПоУходуЗаРебенком.ДатаСобытия, ОтпускПоУходуЗаРебенком["ДатаОкончания"]);
			Выполнить(Алгоритмы.ПлановыеНачисления_ЗаполнитьПоказатели);
				
		ОтпускПоУходуЗаРебенком.Вставить("Начисления",	ПлановыеНачисления);
		ОтпускПоУходуЗаРебенком.Вставить("Показатели",	ПоказателиДокумента);
		
		ОтпускПоУходуЗаРебенком.Вставить("ПлановыеНачисления",															ПлановыеНачисления);
		ОтпускПоУходуЗаРебенком.Вставить("ПрименениеПлановыхНачислений",												ПрименениеПлановыхНачислений);
		ОтпускПоУходуЗаРебенком.Вставить("ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников",					ПоказателиРегистра);
		ОтпускПоУходуЗаРебенком.Вставить("ЗначенияСовокупныхТарифныхСтавокСотрудников",									ЗначенияСовокупныхТарифныхСтавок);
		ОтпускПоУходуЗаРебенком.Вставить("ПрименениеДополнительныхПериодическихПоказателейРасчетаЗарплатыСотрудников",	ПрименениеПоказателей);
		ОтпускПоУходуЗаРебенком.Вставить("ВидОтпуска",																	"ПособиеПоУходуЗаРебенкомДоТрехЛет");
	КонецЕсли;
	
	ВыгрузитьПоПравилу(ОтпускПоУходуЗаРебенком, , , , "ОтпускПоУходуЗаРебенком");
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ОтработанноеВремяПоСотрудникам_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>Для СчРезультатов = 1 По ИсходящиеДанные.Количество() Цикл 
	ОтработанноеВремяПоСотрудникам = Новый ТаблицаЗначений;
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("Период");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("Организация");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ФизическоеЛицо");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("Сотрудник");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("Подразделение");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("Начисление");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ОтработаноДней");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ОтработаноЧасов");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ОплаченоДней");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ОплаченоЧасов");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ГруппаНачисленияУдержанияВыплаты");
	ОтработанноеВремяПоСотрудникам.Колонки.Добавить("ПериодДействия");
	
	СтрокаТаблицыРезультатов = ИсходящиеДанные[СчРезультатов-1];
	ОрганизацияОтбор = СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор = СтрокаТаблицыРезультатов.ПериодРегистрации;
	ИмяПравилКонвертации = СтрокаТаблицыРезультатов.ИмяПКО;
	
	ОсновныеНачисленияРаботниковОрганизаций = СтрокаТаблицыРезультатов.ОсновныеНачисления;
	
	КоличествоСтрок = ОсновныеНачисленияРаботниковОрганизаций.Количество();
	Для Сч = 1 По КоличествоСтрок Цикл 
		СтрокаТаблицы = ОсновныеНачисленияРаботниковОрганизаций[Сч-1];
		
		Начисление		= СтрокаТаблицы.ВидРасчета;
		Ссылка			= Начисление["Ссылка"];
		
		Если Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты Тогда
			Продолжить;
		КонецЕсли;
		
		Организация = СтрокаТаблицы.Организация;
		
		ОплаченоДней	= 0;
		ОплаченоЧасов	= 0;
		Если СтрокаТаблицы.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням Тогда
			ОплаченоДней = СтрокаТаблицы.ОплаченоДнейЧасов;
			
		ИначеЕсли СтрокаТаблицы.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоЧасам Тогда
			ОплаченоЧасов = СтрокаТаблицы.ОплаченоДнейЧасов;
			
		КонецЕсли;
		
		НоваяСтрока = ОтработанноеВремяПоСотрудникам.Добавить();
		НоваяСтрока.Период			= НачалоДня(СтрокаТаблицы.ПериодРегистрации);
		НоваяСтрока.Организация		= Организация;
		НоваяСтрока.ФизическоеЛицо	= СтрокаТаблицы.ФизЛицо;
		НоваяСтрока.Сотрудник		= СтрокаТаблицы.Сотрудник;
		НоваяСтрока.Подразделение	= СтрокаТаблицы.ПодразделениеОрганизации;
		
		НоваяСтрока.ОтработаноДней	= СтрокаТаблицы.ОтработаноДней;
		НоваяСтрока.ОтработаноЧасов	= СтрокаТаблицы.ОтработаноЧасов;
		НоваяСтрока.ОплаченоДней	= ОплаченоДней;
		НоваяСтрока.ОплаченоЧасов	= ОплаченоЧасов;
		
		НоваяСтрока.Начисление							= Начисление;
		НоваяСтрока.ПериодДействия						= НачалоДня(СтрокаТаблицы.ПериодДействияНачало);
		НоваяСтрока.ГруппаНачисленияУдержанияВыплаты	= "Начислено";
	КонецЦикла;
	
	ВыборкаПоДокументу = Новый Структура;
	ВыборкаПоДокументу.Вставить("Номер",										"НЗП");
	ВыборкаПоДокументу.Вставить("Организация",									ОрганизацияОтбор);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации",							ПериодОтбор);
	Если СтрокаТаблицыРезультатов.Авансом = 1 Тогда
		ВыборкаПоДокументу.Вставить("ОтработанноеВремяПоСотрудникамАвансом",	ОтработанноеВремяПоСотрудникам);
	Иначе
		ВыборкаПоДокументу.Вставить("ОтработанноеВремяПоСотрудникам",			ОтработанноеВремяПоСотрудникам);
	КонецЕсли;
	ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",							СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , ИмяПравилКонвертации);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПереставитьПервуюЦифруИдентификатора" ИспользуетсяПриЗагрузке="false">
				<Текст>Если Найти("0123456789", Лев(Идентификатор,1)) &lt;&gt; 0 Тогда
	ДлинаИдентификатора = СтрДлина(Идентификатор);
	// Сперва попробуем переставить цифры в конец идентификатора.
	Для НомерСимвола = 1 По ДлинаИдентификатора Цикл
		Символ = Лев(Идентификатор,1);
		Если Найти("0123456789", Символ) = 0 Тогда
			Прервать;
		КонецЕсли;
		Идентификатор = "" + Прав(Идентификатор,ДлинаИдентификатора-1) + Символ;
	КонецЦикла;
	
	// А если весь идентификатор цифровой, то добавим "а" вначале.
	Если Найти("0123456789", Лев(Идентификатор,1)) &lt;&gt; 0 Тогда
		Идентификатор = "а" + Идентификатор;
	КонецЕсли;
	
КонецЕсли;</Текст>
				<Параметры>Идентификатор</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПериодыДействияДоговоровГПХ_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПериодыДействияДоговоровГПХ = Новый ТаблицаЗначений;
ПериодыДействияДоговоровГПХ.Колонки.Добавить("Сотрудник");
ПериодыДействияДоговоровГПХ.Колонки.Добавить("ДокументОснование");
ПериодыДействияДоговоровГПХ.Колонки.Добавить("ФизическоеЛицо");
ПериодыДействияДоговоровГПХ.Колонки.Добавить("Организация");
ПериодыДействияДоговоровГПХ.Колонки.Добавить("Подразделение");
ПериодыДействияДоговоровГПХ.Колонки.Добавить("ДатаНачала");
ПериодыДействияДоговоровГПХ.Колонки.Добавить("ДатаОкончания");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПлановыеАвансы_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ТЗ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Сотрудник");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Период");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "СпособРасчетаАванса");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Аванс");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ФизическоеЛицо");

Субконто = ТЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПлановыеНачисления_ЗаполнитьПоказатели" ИспользуетсяПриЗагрузке="false">
				<Текст>
ПлановыеНачисления					= СтруктураПараметров.ПлановыеНачисления;
ПоказателиДокумента					= СтруктураПараметров.ПоказателиДокумента;
ПоказателиРегистра					= СтруктураПараметров.ПоказателиРегистра;
ЗначенияСовокупныхТарифныхСтавок	= СтруктураПараметров.ЗначенияСовокупныхТарифныхСтавок;
ПрименениеПоказателей				= СтруктураПараметров.ПрименениеПоказателей;
Документ_Сотрудник					= СтруктураПараметров.Документ_Сотрудник;
Документ_Сотрудник_Физлицо			= СтруктураПараметров.Документ_Сотрудник_Физлицо;
Документ_ОбособленноеПодразделение	= СтруктураПараметров.Документ_ОбособленноеПодразделение;
Документ_Период						= СтруктураПараметров.Документ_Период;
Документ_ПериодЗавершения			= Дата(1,1,1);
Если СтруктураДляПлановогоНачисления.Свойство("Документ_ПериодЗавершения") Тогда
	Документ_ПериодЗавершения = СтруктураДляПлановогоНачисления.Документ_ПериодЗавершения;
Конецесли;

Для Номер = 1 По ПлановыеНачисления.Количество() Цикл
	ПлановоеНачисление = ПлановыеНачисления[Номер-1];
	
	ФормулаРасчета = "";
	НачислениеУдержаниеСсылка = ПлановоеНачисление.Начисление;
	Показатели = Неопределено;
	Выполнить(Алгоритмы.НачислениеУдержание_Показатели);
	ПоказателиНачисления = Показатели;
	//ПоказателиНачисления = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Показатели", Алгоритмы, ПлановоеНачисление.Начисление);
	Для НомерПоказателя = 1 По ПоказателиНачисления.Количество() Цикл
		СтрокаПоказателя = ПоказателиНачисления[НомерПоказателя-1];
		
		ИдПоказателя = "Показатель" + Строка(НомерПоказателя);
		
		МассивПоказателей = ПоказателиДокумента.НайтиСтроки(Новый Структура(
			"Организация, ИдентификаторСтрокиВидаРасчета, Показатель, Период",
			ПлановоеНачисление.Организация, ПлановоеНачисление.ИдентификаторСтрокиВидаРасчета, СтрокаПоказателя.Показатель, ПлановоеНачисление.Период));
		Если МассивПоказателей.Количество() = 0 Тогда
			ПоказательДокумента = ПоказателиДокумента.Добавить();
			ПоказательДокумента.Сотрудник						= ПлановоеНачисление.Сотрудник;
			ПоказательДокумента.Организация						= ПлановоеНачисление.Организация;
			ПоказательДокумента.ИдентификаторСтрокиВидаРасчета	= ПлановоеНачисление.ИдентификаторСтрокиВидаРасчета;
			ПоказательДокумента.Показатель						= СтрокаПоказателя.Показатель;
			ПоказательДокумента.Период							= ПлановоеНачисление.Период;
			ПоказательДокумента.ФизическоеЛицо					= ПлановоеНачисление.ФизическоеЛицо;
			ПоказательДокумента.Значение						= 0;
			ПоказательДокумента.ЗначениеПоОкончании				= 0;
			
		Иначе
			ПоказательДокумента = МассивПоказателей[0];
			
		КонецЕсли;
		
		Если ПлановоеНачисление.Используется = 1 Тогда
			ЗначениеПоказателя		= ПлановоеНачисление.ИсходныеДанные[ИдПоказателя];
			
			ПоказательДокумента.Значение						= ЗначениеПоказателя;
		КонецЕсли;
		
		Если ПлановоеНачисление.ИспользуетсяПоОкончании = 1 Тогда
			Если ЗначениеЗаполнено(ПлановоеНачисление.ИсходныеДанныеПоОкончании) = 1 Тогда
				ЗначениеПоказателяПоОкончании		= ПлановоеНачисление.ИсходныеДанныеПоОкончании.ИдПоказателя;
			Иначе
				ЗначениеПоказателяПоОкончании		= 0;	//ПлановоеНачисление.ИсходныеДанные[ИдПоказателя + "Завершения"];
			КонецЕсли;
			
			ПоказательДокумента.ЗначениеПоОкончании				= ЗначениеПоказателяПоОкончании;
		КонецЕсли;
		
		ПоказательДокумента.ДействуетДо							= ПлановоеНачисление.ДействуетДо;
		
		МассивПоказателей = ПоказателиРегистра.НайтиСтроки(Новый Структура("Организация, Показатель, Период", ПлановоеНачисление.Организация, СтрокаПоказателя.Показатель, ПлановоеНачисление.Период));
		Если МассивПоказателей.Количество() = 0 Тогда
			ПоказательРегистра = ПоказателиРегистра.Добавить();
			
		Иначе
			ПоказательРегистра = МассивПоказателей[0];
			
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ПоказательРегистра, ПоказательДокумента);
		
		Если ЗначениеЗаполнено(ПлановоеНачисление.ИсходныеДанныеПоОкончании) = 1 Тогда
			ОбособленноеПодразделениеПредыдущее = ПлановоеНачисление.ИсходныеДанныеПоОкончании["ОбособленноеПодразделение"];
			Если ОбособленноеПодразделениеПредыдущее &lt;&gt; ПлановоеНачисление.Организация Тогда
				ПоказательРегистра = ПоказателиРегистра.Добавить();
				ПоказательРегистра.Сотрудник			= ПоказательДокумента.Сотрудник;
				ПоказательРегистра.Показатель			= СтрокаПоказателя.Показатель;
				ПоказательРегистра.Период				= ПоказательДокумента.Период;
				ПоказательРегистра.ФизическоеЛицо		= ПоказательДокумента.ФизическоеЛицо;
				ПоказательРегистра.Организация			= ОбособленноеПодразделениеПредыдущее;
				ПоказательРегистра.Значение				= 0;
				ПоказательРегистра.ДействуетДо			= ПлановоеНачисление.ДействуетДо;
				ПоказательРегистра.ЗначениеПоОкончании	= ?(ЗначениеЗаполнено(ПлановоеНачисление.ДействуетДо) = 1, ПоказательДокумента.Значение, 0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

СовокупнаяТарифнаяСтавка = ЗначенияСовокупныхТарифныхСтавок.Добавить();
СовокупнаяТарифнаяСтавка.Сотрудник						= Документ_Сотрудник;
СовокупнаяТарифнаяСтавка.ФизическоеЛицо					= Документ_Сотрудник_Физлицо;
СовокупнаяТарифнаяСтавка.Период							= Документ_Период;
СовокупнаяТарифнаяСтавка.ДействуетДо					= Документ_ПериодЗавершения;

Для НомерПоказателя = 1 По ПоказателиРегистра.Количество() Цикл
	СтрокаПоказателя = ПоказателиРегистра[НомерПоказателя-1];
	
	Применение				= ?(СтрокаПоказателя.Значение = 0, 0, 1);
	ПрименениеПоОкончании	= ?(СтрокаПоказателя.ЗначениеПоОкончании = 0, 0, 1);

	СсылкаНаПоказатель = СтрокаПоказателя.Показатель["Идентификатор"];
	Если (СсылкаНаПоказатель = "Оклад") Или (СсылкаНаПоказатель = "ТарифнаяСтавкаДневная") Или (СсылкаНаПоказатель = "ТарифнаяСтавкаЧасовая") Тогда
		ВидТарифнойСтавки = Неопределено;
		Выполнить(Алгоритмы.СовокупнаяТарифнаяСтавка_ВидТарифнойСтавки);
		//ВидТарифнойСтавки	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("СовокупнаяТарифнаяСтавка_ВидТарифнойСтавки", Алгоритмы, СсылкаНаПоказатель);
		
		Если Применение = 1 Тогда
			СовокупнаяТарифнаяСтавка.ВидТарифнойСтавки				= ВидТарифнойСтавки;
			СовокупнаяТарифнаяСтавка.Значение						= СтрокаПоказателя.Значение;
		КонецЕсли;
		Если ПрименениеПоОкончании = 1 Тогда
			СовокупнаяТарифнаяСтавка.ВидТарифнойСтавкиПоОкончании	= ВидТарифнойСтавки;
			СовокупнаяТарифнаяСтавка.ЗначениеПоОкончании			= СтрокаПоказателя.ЗначениеПоОкончании;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;

//ВходящиеДанные	= ПоказателиДокумента;
//Источник		= ПоказателиРегистра;
//Приемник		= ЗначенияСовокупныхТарифныхСтавок;
//ТипПриемника	= ПрименениеПоказателей;</Текст>
				<Параметры>ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПлановыеНачисления_ОбновитьНачисление" ИспользуетсяПриЗагрузке="false">
				<Текст>
ПлановоеНачислениеСотрудника		= СтруктураДляПлановогоНачисления.ПлановоеНачислениеСотрудника;
ПлановыеНачисления					= СтруктураДляПлановогоНачисления.ПлановыеНачисления;
ИдентификаторСтрокиВидаРасчета		= СтруктураДляПлановогоНачисления.ИдентификаторСтрокиВидаРасчета;
Документ_Сотрудник					= СтруктураДляПлановогоНачисления.Документ_Сотрудник;
Документ_Сотрудник_Физлицо			= СтруктураДляПлановогоНачисления.Документ_Сотрудник_Физлицо;
Документ_ОбособленноеПодразделение	= СтруктураДляПлановогоНачисления.Документ_ОбособленноеПодразделение;
Документ_Период						= СтруктураДляПлановогоНачисления.Документ_Период;

Документ_ПериодЗавершения			= Дата(1,1,1);
Если СтруктураДляПлановогоНачисления.Свойство("Документ_ПериодЗавершения") Тогда
	Документ_ПериодЗавершения = СтруктураДляПлановогоНачисления.Документ_ПериодЗавершения;
Конецесли;
	
ПрекратитьНачисление				= 0;
Если СтруктураДляПлановогоНачисления.Свойство("ПрекратитьНачисление") Тогда
	ПрекратитьНачисление = СтруктураДляПлановогоНачисления.ПрекратитьНачисление;
Конецесли;


ДействиеСНачислением_Прекратить = Перечисления.ВидыДействияСНачислением.Прекратить;

Начисление					= ПлановоеНачислениеСотрудника.ВидРасчета;
Начисление_Ссылка			= Начисление.Ссылка;

ЯвляетсяОсновнымНачислением	= ?(ЗначениеЗаполнено(ПлановоеНачислениеСотрудника.ВидРасчетаИзмерение) = 0, 1, 0);

Период						= ПлановоеНачислениеСотрудника.Период;
ПериодЗавершения			= Дата(1,1,1);
Действие					= ПлановоеНачислениеСотрудника.Действие;
//ДействиеЗавершения			= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачислениеСотрудника, "ДействиеЗавершения");

ПлановоеНачисление_Используется			= 1;
ПлановоеНачисление_НеИспользуется		= 0;
ПлановоеНачисление_ДействиеУтвердить	= "Утвердить";
ПлановоеНачисление_ДействиеОтменить		= "Отменить";
Если ПрекратитьНачисление = 1 Тогда
	ПлановоеНачисление_Используется			= 0;
	ПлановоеНачисление_НеИспользуется		= 1;
	ПлановоеНачисление_ДействиеУтвердить	= "Отменить";
	ПлановоеНачисление_ДействиеОтменить		= "Утвердить";
КонецЕсли;

Если Период &lt;&gt; Документ_Период Тогда // Начисления до даты события
	Если ЯвляетсяОсновнымНачислением = 1 Тогда
		ДействующееНачисление = ПлановыеНачисления.НайтиСтроки(Новый Структура("ЯвляетсяОсновнымНачислением", 1));
	Иначе
		ДействующееНачисление = ПлановыеНачисления.НайтиСтроки(Новый Структура("Начисление", Начисление));
	КонецЕсли;
	
	ПрекратитьВыполнение = 0;
	НовоеНачисление = 0;
	Если ДействующееНачисление.Количество() = 0 Тогда // Новое начисление
		// Если начисление прекращается до даты события, ничего добавлять не нужно
		Если ((Действие = ДействиеСНачислением_Прекратить) И (ЗначениеЗаполнено(ПериодЗавершения) = 0)) Тогда
			ПрекратитьВыполнение = 1;
		КонецЕсли;
		
		Если ПрекратитьВыполнение = 0 Тогда
			НовоеНачисление = 1;
			
			ПлановоеНачисление = ПлановыеНачисления.Добавить();
			ПлановоеНачисление.Сотрудник						= Документ_Сотрудник;
			ПлановоеНачисление.Организация						= Документ_ОбособленноеПодразделение;
			ПлановоеНачисление.ФизическоеЛицо					= Документ_Сотрудник_Физлицо;
			ПлановоеНачисление.ЯвляетсяОсновнымНачислением		= ЯвляетсяОсновнымНачислением;
			ПлановоеНачисление.Действие							= ПлановоеНачисление_ДействиеУтвердить;
			ПлановоеНачисление.Период							= Документ_Период;
			ПлановоеНачисление.Используется						= ПлановоеНачисление_Используется;
			ПлановоеНачисление.ДействуетДо						= Документ_ПериодЗавершения;
			ПлановоеНачисление.ИспользуетсяПоОкончании			= ПлановоеНачисление_НеИспользуется;
		КонецЕсли;
		
	Иначе // Уже существующее
		ПлановоеНачисление = ДействующееНачисление[0];
		
		//// Если начисление временное и заканчивается до даты действия документа, такое начисление игнорируем
		//Если (ЗначениеЗаполнено(ПериодЗавершения) = 1) И (ПериодЗавершения &lt; Документ_Период) Тогда
		//	Если ДействиеЗавершения = ДействиеСНачислением_Прекратить Тогда
		//		ОбъектыПереносаДанных.ТаблицаЗначений_УдалитьСтроку(ПлановоеНачисление);
		//	КонецЕсли;
		//	ПрекратитьВыполнение = 1;
		//	
		//// Если начисление прекращается, то его необходимо удалить
		//ИначеЕсли (Действие = ДействиеСНачислением_Прекратить) И (ЗначениеЗаполнено(ПериодЗавершения) = 0) Тогда
		Если (Действие = ДействиеСНачислением_Прекратить) И (ЗначениеЗаполнено(ПериодЗавершения) = 0) Тогда
			ПлановоеНачисление.Владелец().Удалить(ПлановоеНачисление);
			ПрекратитьВыполнение = 1;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ПрекратитьВыполнение = 0 Тогда
		Если ЗначениеЗаполнено(Документ_ПериодЗавершения) = 1 Тогда
			ПлановоеНачисление.ИспользуетсяПоОкончании		= ПлановоеНачисление.Используется;
		КонецЕсли;
		ПлановоеНачисление.ИсходныеДанныеПоОкончании		= ?(НовоеНачисление = 0, ПлановоеНачисление.ИсходныеДанные, ПлановоеНачислениеСотрудника); // Для заполнения связанных данных
		
		ПлановоеНачисление.Начисление						= Начисление;
		ПлановоеНачисление.ИдентификаторСтрокиВидаРасчета	= ИдентификаторСтрокиВидаРасчета;
		ПлановоеНачисление.ИсходныеДанные					= ПлановоеНачислениеСотрудника; // Для заполнения связанных данных
	КонецЕсли;
	
Иначе // Начисления на дату события
	Если ЯвляетсяОсновнымНачислением = 1 Тогда
		// Удаление недействующего основного начисления
		ОсновныеНачисления = ПлановыеНачисления.НайтиСтроки(Новый Структура("ЯвляетсяОсновнымНачислением, Используется", 1, ПлановоеНачисление_НеИспользуется));
		Если ОсновныеНачисления.Количество() &lt;&gt; 0 Тогда
			ОсновноеНачисление = ОсновныеНачисления[0];
			ПлановыеНачисления.Удалить(ОсновноеНачисление);
		КонецЕсли;
		
		ДобавитьНовоеНачисление = 1;
		ДействующееНачисление = ПлановыеНачисления.НайтиСтроки(Новый Структура("ЯвляетсяОсновнымНачислением", 1));
		Если ДействующееНачисление.Количество() = 1 Тогда
			ПлановоеНачисление = ДействующееНачисление[0];
			
			Если ЗначениеЗаполнено(Документ_ПериодЗавершения) = 1 Тогда
				ПлановоеНачисление.ИспользуетсяПоОкончании	= ПлановоеНачисление.Используется;
			КонецЕсли;
			
			Если ПлановоеНачисление.Начисление.Ссылка = Начисление_Ссылка Тогда // Изменить существующее начисление
				ДобавитьНовоеНачисление = 0;
				
				ПлановоеНачисление.ИсходныеДанныеПоОкончании	= ПлановоеНачисление.ИсходныеДанные; // Для заполнения связанных данных
				ПлановоеНачисление.ИсходныеДанные				= ПлановоеНачислениеСотрудника; // Для заполнения связанных данных
				
			Иначе // Сделать сущесвующее начисление недействующим
				ПлановоеНачисление.Действие						= ПлановоеНачисление_ДействиеОтменить;
				ПлановоеНачисление.Используется					= ПлановоеНачисление_НеИспользуется;
				ПлановоеНачисление.ИсходныеДанныеПоОкончании	= ПлановоеНачислениеСотрудника; // Для заполнения связанных данных
				
			КонецЕсли;
		КонецЕсли;
		
		Если ДобавитьНовоеНачисление = 1 Тогда
			ПлановоеНачисление = ПлановыеНачисления.Добавить();
			ПлановоеНачисление.Сотрудник						= Документ_Сотрудник;
			ПлановоеНачисление.Организация						= Документ_ОбособленноеПодразделение;
			ПлановоеНачисление.ФизическоеЛицо					= Документ_Сотрудник_Физлицо;
			ПлановоеНачисление.ЯвляетсяОсновнымНачислением		= ЯвляетсяОсновнымНачислением;
			ПлановоеНачисление.Период							= Документ_Период;
			
			ПлановоеНачисление.Начисление						= Начисление;
			ПлановоеНачисление.ИдентификаторСтрокиВидаРасчета	= ИдентификаторСтрокиВидаРасчета;
			
			ПлановоеНачисление.Действие							= ?(Действие = ДействиеСНачислением_Прекратить, "Отменить", "Утвердить");
			ПлановоеНачисление.Используется						= ?(Действие = ДействиеСНачислением_Прекратить, 0, 1);
			ПлановоеНачисление.ДействуетДо						= Документ_ПериодЗавершения;
			ПлановоеНачисление.ИспользуетсяПоОкончании			= ПлановоеНачисление_НеИспользуется;
			
			ПлановоеНачисление.ИсходныеДанные					= ПлановоеНачислениеСотрудника; // Для заполнения связанных данных
		КонецЕсли;
		
	Иначе
		ДействующееНачисление = ПлановыеНачисления.НайтиСтроки(Новый Структура("Начисление", Начисление));
		
		Если ДействующееНачисление.Количество() = 0 Тогда // Новое начисление
			ПлановоеНачисление = ПлановыеНачисления.Добавить();
			ПлановоеНачисление.Сотрудник						= Документ_Сотрудник;
			ПлановоеНачисление.Организация						= Документ_ОбособленноеПодразделение;
			ПлановоеНачисление.ФизическоеЛицо					= Документ_Сотрудник_Физлицо;
			ПлановоеНачисление.ЯвляетсяОсновнымНачислением		= ЯвляетсяОсновнымНачислением;
			ПлановоеНачисление.Период							= Документ_Период;
			ПлановоеНачисление.ДействуетДо						= Документ_ПериодЗавершения;
			ПлановоеНачисление.ИспользуетсяПоОкончании			= ПлановоеНачисление_НеИспользуется;
			
		Иначе // Уже существующее
			ПлановоеНачисление = ДействующееНачисление[0];
			
			Если ЗначениеЗаполнено(Документ_ПериодЗавершения) = 1 Тогда
				ПлановоеНачисление.ИспользуетсяПоОкончании		= ПлановоеНачисление.Используется;
			КонецЕсли;
			
			ПлановоеНачисление.ИсходныеДанныеПоОкончании		= ПлановоеНачисление.ИсходныеДанные; // Для заполнения связанных данных
			
		КонецЕсли;
		
		ПлановоеНачисление.Начисление						= Начисление;
		ПлановоеНачисление.ИдентификаторСтрокиВидаРасчета	= ИдентификаторСтрокиВидаРасчета;
		
		ПлановоеНачисление.Действие							= ?(Действие = ДействиеСНачислением_Прекратить, "Отменить", "Утвердить");
		ПлановоеНачисление.Используется						= ?(Действие = ДействиеСНачислением_Прекратить, 0, 1);
		
		ПлановоеНачисление.ИсходныеДанные					= ПлановоеНачислениеСотрудника; // Для заполнения связанных данных
		
	КонецЕсли;
	
КонецЕсли;

ВходящиеДанные	= ПлановыеНачисления;</Текст>
				<Параметры>ПлановоеНачислениеСотрудника, ПлановыеНачисления, ИдентификаторСтрокиВидаРасчета, Документ_Сотрудник, Документ_Сотрудник_Физлицо, Документ_ОбособленноеПодразделение, Документ_Период, Документ_ПериодЗавершения, ПрекратитьНачисление</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПлановыеНачисления_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеНачисления = Новый ТаблицаЗначений;
ПлановыеНачисления.Колонки.Добавить("Сотрудник");
ПлановыеНачисления.Колонки.Добавить("Организация");
ПлановыеНачисления.Колонки.Добавить("ФизическоеЛицо");
ПлановыеНачисления.Колонки.Добавить("Начисление");
ПлановыеНачисления.Колонки.Добавить("ЯвляетсяОсновнымНачислением");
ПлановыеНачисления.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");

ПлановыеНачисления.Колонки.Добавить("Действие");

ПлановыеНачисления.Колонки.Добавить("Период");
ПлановыеНачисления.Колонки.Добавить("Используется");
ПлановыеНачисления.Колонки.Добавить("ДействуетДо");
ПлановыеНачисления.Колонки.Добавить("ИспользуетсяПоОкончании");

ПлановыеНачисления.Колонки.Добавить("ИсходныеДанные");
ПлановыеНачисления.Колонки.Добавить("ИсходныеДанныеПоОкончании");

ПлановыеНачисления.Колонки.Добавить("Регистратор");
ПлановыеНачисления.Колонки.Добавить("НомерСтрокиЗаписи");
</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПлановыеНачисленияПоДоговорам_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеНачисленияПоДоговорам = Новый ТаблицаЗначений;
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("Сотрудник");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("Договор");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("ДоговорАкт");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("МесяцНачисления");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("Организация");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("Подразделение");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("ДатаНачала");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("ДатаОкончания");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("ЗаключенСоСтудентомРаботающимВСтудотряде");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("Сумма");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("КодДохода");
//ПлановыеНачисленияПоДоговорам.Колонки.Добавить("КодВычета");
//ПлановыеНачисленияПоДоговорам.Колонки.Добавить("СуммаВычета");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("КодДоходаСтраховыеВзносы");
ПлановыеНачисленияПоДоговорам.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете");
//ПлановыеНачисленияПоДоговорам.Колонки.Добавить("ОтношениеКЕНВД");
//ПлановыеНачисленияПоДоговорам.Колонки.Добавить("СуммаЕНВД");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПлановыеУдержания_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеУдержания = Новый ТаблицаЗначений;
ПлановыеУдержания.Колонки.Добавить("ФизическоеЛицо");
ПлановыеУдержания.Колонки.Добавить("Организация");
ПлановыеУдержания.Колонки.Добавить("Удержание");
ПлановыеУдержания.Колонки.Добавить("Период");
ПлановыеУдержания.Колонки.Добавить("Используется");
ПлановыеУдержания.Колонки.Добавить("ДействуетДо");
ПлановыеУдержания.Колонки.Добавить("ИспользуетсяПоОкончании");
ПлановыеУдержания.Колонки.Добавить("ДокументОснование");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПодразделенияОрганизаций_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>
ВыборкаДанных	= Новый Массив;

ТаблицаПодразделения = ИсходящиеДанные;
ТаблицаПодразделения.Колонки.Добавить("ДатаСоздания");
ТаблицаПодразделения.Колонки.Добавить("Сформировано");
ТаблицаПодразделения.Колонки.Добавить("РеквизитДопУпорядочивания");

Для Номер = 1 По ТаблицаПодразделения.Количество() Цикл
	
	Подразделение = ТаблицаПодразделения[Номер-1];
	
	Подразделение.Сформировано = ?(Подразделение.ПометкаУдаления = 1, 0, 1);
	Подразделение.ДатаСоздания = ?(Параметры.ПереноситьНачисленияПредыдущейПрограммы,Параметры.ДатаНачалаПереносаРасчетныхДанных,НачалоГода(Параметры.МесяцНачалаЭксплуатации));
	Подразделение.РеквизитДопУпорядочивания = Подразделение.Порядок;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Подразделение));
	
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="Показатель_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы				= ВидСубконто;
ПоказательСсылка		= СтруктураПоказатель.ПоказательСсылка;
ЗапрашиватьПоказатель	= СтруктураПоказатель.ЗапрашиватьПоказатель;
НомерПоказателя			= СтруктураПоказатель.НомерПоказателя;
ФормулаРасчета			= СтруктураПоказатель.ФормулаРасчета;
НачислениеУдержание		= СтруктураПоказатель.НачислениеУдержание;

Показатель = Неопределено;
Выполнить(Алгоритмы.Показатель_Описание);
ЗаполнитьЗначенияСвойств(Показатель, ПоказательСсылка);

Наименование			= Показатель.Наименование;
ИдентификаторИсходный	= Показатель.Идентификатор;

Идентификатор = ИдентификаторИсходный;
Выполнить(Алгоритмы.ПереставитьПервуюЦифруИдентификатора);

ВидПоказателяОбщий 			 = Перечисления.ВидыПоказателейСхемМотивации.Общий;
ВидПоказателяПоПодразделению = Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению;

НазначениеПоказателя = Показатель.ВидПоказателя;
Если НазначениеПоказателя = ВидПоказателяОбщий Тогда
	НазначениеПоказателя	= "ДляОрганизации";
	
ИначеЕсли НазначениеПоказателя = ВидПоказателяПоПодразделению Тогда
	НазначениеПоказателя	= "ДляПодразделения";
	
Иначе
	НазначениеПоказателя	= "ДляСотрудника";
	
КонецЕсли;

Если Показатель.Предопределенный &lt;&gt; 1 Тогда
	
	НаименованиеДляВсех = "";
	Если НазначениеПоказателя	= "ДляСотрудника" Тогда
		ВозможностьИзменения = Показатель.ВозможностьИзменения;
		Если ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется и НачислениеУдержание &lt;&gt; "" Тогда
			НаименованиеДляВсех	= " для " + НачислениеУдержание.Наименование;
		КонецЕсли;
	КонецЕсли;
	Наименование		= Наименование + НаименованиеДляВсех;
	СтруктураИдентификатора = Новый Структура("Идентификатор", НаименованиеДляВсех);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор		= Идентификатор + СтруктураИдентификатора.Идентификатор;
	
Иначе
	Выполнить(Алгоритмы.ИдентификаторПоказателя_Преобразовать);
КонецЕсли;

СтрокаСИсходнымПоказателем = "ИсходныеДанные.Показатель"+Строка(НомерПоказателя);
Если Найти(ФормулаРасчета, СтрокаСИсходнымПоказателем) &lt;&gt; 0 Тогда
	ФормулаРасчета = СтрЗаменить(ФормулаРасчета, СтрокаСИсходнымПоказателем, Идентификатор);
	
Иначе
	ФормулаРасчетаСловами = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ФормулаРасчета, " ");
	ФормулаРасчета = "";
	Для НомерСлова = 1 По ФормулаРасчетаСловами.Количество() Цикл
		СловоФормулы = ФормулаРасчетаСловами[НомерСлова-1];
		
		Если СловоФормулы = ИдентификаторИсходный Тогда
			ФормулаРасчета = ФормулаРасчета + Идентификатор;
		Иначе
			ФормулаРасчета = ФормулаРасчета + СловоФормулы;
		КонецЕсли;
	КонецЦикла;
	
КонецЕсли;

Процентный = 0;
ТипПоказателя = Показатель.ТипПоказателя;
Если ТипПоказателя	= Перечисления.ТипыПоказателейСхемМотивации.Денежный Тогда
	ТипПоказателя	= "Денежный";
	
ИначеЕсли ТипПоказателя	= Перечисления.ТипыПоказателейСхемМотивации.Процентный Тогда
	ТипПоказателя	= "Числовой";
	Процентный = 1;
	Если (ЗначениеЗаполнено(ФормулаРасчета) = 1) И (Найти(ФормулаРасчета, "/ 100") = 0) Тогда
		ФормулаРасчета = "" + ФормулаРасчета + " / 100";
	КонецЕсли;
	
Иначе
	ТипПоказателя	= "Числовой";
	
КонецЕсли;

Показатель.Вставить("Наименование",							Наименование);
Показатель.Вставить("Идентификатор",						Идентификатор);
Показатель.Вставить("ТипПоказателя",						ТипПоказателя);
Показатель.Вставить("Процентный",							Процентный);
Показатель.Вставить("НазначениеПоказателя",					НазначениеПоказателя);
Показатель.Вставить("ЗначениеРассчитываетсяАвтоматически",	0);
Показатель.Вставить("ОтображатьВДокументахНачисления",		1);
Показатель.Вставить("СпособПримененияЗначений",				?(ЗапрашиватьПоказатель = 1, "Постоянное", "Разовое"));
Показатель.Вставить("СпособВводаЗначений",					"ВводитсяЕдиновременно");

Показатель.Вставить("Ссылка",								Идентификатор);

//Если СОКРЛП(Идентификатор) = "ОкладЗаКлассныйЧин" Тогда
//	ЗапрашиватьПоказатель = 0;
//КонецЕсли; 

СтруктураПоказатель.Вставить("Показатель", Показатель);
//Приемник	= ФормулаРасчета;
//Субконто	= Показатель;
</Текст>
				<Параметры>Показатель, ФормулаРасчета</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПоказательНовый_Заполнить" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы				= ВидСубконто;
//Наименование			= ИсходящиеДанные;
//Идентификатор			= ВходящиеДанные;
//ЗапрашиватьПоказатель	= Источник;
//Процентный				= Приемник;
//ТипПоказателя			= ТипПриемника;
//НазначениеПоказателя	= Значение;
//Пока установлю в этом алгоритме, так как во всех местах где вызывалось я не видил, чтобы передавали этот параметр, то-есть он по умолчанию
НазначениеПоказателя = "";

Если (ЗначениеЗаполнено(Идентификатор) = 0) И (ЗначениеЗаполнено(Наименование) = 1) Тогда
	СтруктураИдентификатора = Новый Структура("Идентификатор", Идентификатор);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	Идентификатор = СтруктураИдентификатора.Идентификатор;
ИначеЕсли ЗначениеЗаполнено(Идентификатор) = 1 Тогда
	Выполнить(Алгоритмы.ПереставитьПервуюЦифруИдентификатора);
КонецЕсли;
Если ЗначениеЗаполнено(ТипПоказателя) = 0 Тогда
	ТипПоказателя			= "Числовой";
КонецЕсли;
Если ЗначениеЗаполнено(НазначениеПоказателя) = 0 Тогда
	НазначениеПоказателя	= "ДляСотрудника";
КонецЕсли;

Показатель = Новый Структура;
Показатель.Вставить("Ссылка",								Идентификатор);
Показатель.Вставить("Наименование",							Наименование);
Показатель.Вставить("Идентификатор",						Идентификатор);
Показатель.Вставить("ТипПоказателя",						ТипПоказателя);
Показатель.Вставить("Процентный",							Процентный);
Показатель.Вставить("НазначениеПоказателя",					НазначениеПоказателя);
Показатель.Вставить("ЗначениеРассчитываетсяАвтоматически",	0);
Показатель.Вставить("ОтображатьВДокументахНачисления",		1);
Показатель.Вставить("СпособПримененияЗначений",				?(ЗапрашиватьПоказатель = 1, "Постоянное", "Разовое"));
Показатель.Вставить("СпособВводаЗначений",					"ВводитсяЕдиновременно");</Текст>
				<Параметры>Наименование, Идентификатор, Предопределенный, Процентный, ТипПоказателя, НазначениеПоказателя, ВозможностьИзменения</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПолучитьДатуОкончанияПоРегиструОсновныеНачисления" ИспользуетсяПриЗагрузке="false">
				<Текст>
ДатаОкончания = Неопределено;
Параметры.ВременноеХранилище.Свойство("ДатаОкончанияПоРегиструОсновныеНачисления", ДатаОкончания);

Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
	
	Запрос = Новый Запрос;     
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВложенныйЗапрос.ПериодРегистрации) КАК ПериодРегистрации
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОсновныеНачисления.ПериодРегистрации) КАК ПериодРегистрации
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления) КАК ВложенныйЗапрос";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если ЗначениеЗаполнено(Выборка.ПериодРегистрации) Тогда
		ДатаОкончания = НачалоМесяца(Выборка.ПериодРегистрации);
	Иначе
		ДатаОкончания = Параметры.ДатаНачалаПереносаРасчетныхДанных;
	КонецЕсли;
	
	Параметры.ВременноеХранилище.Вставить("ДатаОкончанияПоРегиструОсновныеНачисления", ДатаОкончания);
	
КонецЕсли;</Текст>
				<Параметры>Параметры</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПредоставлениеСоцВычетовУРаботодателя_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ТЗ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ФизическоеЛицо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ГоловнаяОрганизация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ДокументОснование");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "КатегорияВзносов");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Период");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "НеПредоставлятьВычет");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ДействуетДо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "НеПредоставлятьВычетПоОкончании");

Субконто = ТЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПриемНаРаботу_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПриемНаРаботу = Новый Структура;
ПриемНаРаботу.Вставить("Организация",						"");
ПриемНаРаботу.Вставить("Подразделение",					"");
ПриемНаРаботу.Вставить("Сотрудник",						"");
ПриемНаРаботу.Вставить("ФизическоеЛицо",					"");
ПриемНаРаботу.Вставить("Должность",						"");
ПриемНаРаботу.Вставить("ДатаПриема",						"");
ПриемНаРаботу.Вставить("КоличествоСтавок",				"");
ПриемНаРаботу.Вставить("ВидЗанятости",					"");
ПриемНаРаботу.Вставить("ДлительностьИспытательногоСрока",	"");
ПриемНаРаботу.Вставить("ГрафикРаботы",					"");
ПриемНаРаботу.Вставить("СпособРасчетаАванса",				"");
ПриемНаРаботу.Вставить("Аванс",							"");
ПриемНаРаботу.Вставить("НачисленияУтверждены",			"");
ПриемНаРаботу.Вставить("ВидДоговора",						"");
ПриемНаРаботу.Вставить("ТрудовойДоговорНомер",			"");
ПриемНаРаботу.Вставить("ТрудовойДоговорДата",				"");
ПриемНаРаботу.Вставить("СрочныйДоговор",					"");
ПриемНаРаботу.Вставить("ДатаЗавершенияТрудовогоДоговора",	"");
ПриемНаРаботу.Вставить("Ответственный",					"");
ПриемНаРаботу.Вставить("Комментарий",						"");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПриемНаРаботу_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>РаботникиОрганизаций					= ИсходящиеДанные.РаботникиОрганизаций;
ПлановыеНачисленияРаботниковОрганизаций	= ИсходящиеДанные.ПлановыеНачисленияРаботниковОрганизаций;

ВыборкаДанных	= Новый Массив;

ДлинаСуток = 86400;

Для НомерВыборки = 1 По РаботникиОрганизаций.Количество() Цикл
	
	РаботникОрганизации = РаботникиОрганизаций[НомерВыборки-1];
	
	Если РаботникОрганизации.ПричинаИзмененияСостояния &lt;&gt; Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу Тогда
		Продолжить;
	КонецЕсли;
	
	ПриемНаРаботу = Неопределено;
	Выполнить(Алгоритмы.ПриемНаРаботу_Описание);
	
	СрочныйДоговор = 0;
	
	ПриемНаРаботу.Вставить("Организация",						РаботникОрганизации.ОбособленноеПодразделение);
	ПриемНаРаботу.Вставить("Подразделение",						РаботникОрганизации.ПодразделениеОрганизации);
	ПриемНаРаботу.Вставить("Сотрудник",							РаботникОрганизации.Сотрудник);
	ПриемНаРаботу.Вставить("ФизическоеЛицо",					РаботникОрганизации.Сотрудник_Физлицо);
	ПриемНаРаботу.Вставить("Должность",							РаботникОрганизации.Должность);
	ПриемНаРаботу.Вставить("ДатаПриема",						РаботникОрганизации.Период);
	ПриемНаРаботу.Вставить("КоличествоСтавок",					РаботникОрганизации.ЗанимаемыхСтавок);
	ПриемНаРаботу.Вставить("ДлительностьИспытательногоСрока",	РаботникОрганизации.ИспытательныйСрок);
	ПриемНаРаботу.Вставить("ГрафикРаботы",						РаботникОрганизации.ГрафикРаботы);
	ПриемНаРаботу.Вставить("СпособРасчетаАванса",				РаботникОрганизации.Сотрудник_СпособРасчетаАванса);
	ПриемНаРаботу.Вставить("Аванс",								РаботникОрганизации.Сотрудник_Аванс);
	ПриемНаРаботу.Вставить("НачисленияУтверждены",				1);
	ПриемНаРаботу.Вставить("ВидЗанятости",						РаботникОрганизации.Сотрудник_ВидЗанятости);
	ПриемНаРаботу.Вставить("ВидДоговора",						РаботникОрганизации.Сотрудник_ВидДоговора);
	ПриемНаРаботу.Вставить("СрочныйДоговор",					СрочныйДоговор);
	ПриемНаРаботу.Вставить("ДатаЗавершенияТрудовогоДоговора",	"");
	ПриемНаРаботу.Вставить("ТрудовойДоговорДата",				РаботникОрганизации.Сотрудник_ДатаДоговора);
	ПриемНаРаботу.Вставить("ТрудовойДоговорНомер",				РаботникОрганизации.Сотрудник_НомерДоговора);
	ПриемНаРаботу.Вставить("Дата",								РаботникОрганизации.ПервичныйДокумент_Дата);
	ПриемНаРаботу.Вставить("Ответственный",						РаботникОрганизации.ПервичныйДокумент_Ответственный);
	ПриемНаРаботу.Вставить("Комментарий",						РаботникОрганизации.ПервичныйДокумент_Комментарий);
	
	
	ПлановыеНачисленияСотрудника = ПлановыеНачисленияРаботниковОрганизаций.НайтиСтроки(Новый Структура("Сотрудник, Период", РаботникОрганизации.Сотрудник, РаботникОрганизации.Период));
	КоличествоПлановыхНачислений = ПлановыеНачисленияСотрудника.Количество();
	Если КоличествоПлановыхНачислений &lt;&gt; 0 Тогда
		ПлановыеНачисления = Неопределено;
		Выполнить(Алгоритмы.ПлановыеНачисления_Описание);
		Для Номер = 1 По КоличествоПлановыхНачислений Цикл
			ПлановоеНачислениеСотрудника = ПлановыеНачисленияСотрудника[Номер-1];
			
			Начисление		= ПлановоеНачислениеСотрудника.ВидРасчета;
			Ссылка			= Начисление.Ссылка;
			СпособРасчета	= Начисление.СпособРасчета;
			
			Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
			Или (СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
			Или (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураДляПлановогоНачисления = Новый Структура(
				"ПлановоеНачислениеСотрудника,ПлановыеНачисления,ИдентификаторСтрокиВидаРасчета,Документ_Сотрудник,Документ_Сотрудник_Физлицо,Документ_ОбособленноеПодразделение,Документ_Период",
				ПлановоеНачислениеСотрудника,ПлановыеНачисления,
				Номер,
				РаботникОрганизации.Сотрудник,
				РаботникОрганизации.Сотрудник_Физлицо,
				РаботникОрганизации.ОбособленноеПодразделение,
				РаботникОрганизации.Период);
			Выполнить(Алгоритмы.ПлановыеНачисления_ОбновитьНачисление);
			//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ОбновитьНачисление", Параметры.Алгоритмы,
			//	ПлановоеНачислениеСотрудника, ПлановыеНачисления, Номер,
			//	РаботникОрганизации.Сотрудник, РаботникОрганизации.Сотрудник_Физлицо, РаботникОрганизации.ОбособленноеПодразделение,
			//	РаботникОрганизации.Период, РаботникОрганизации.ПериодЗавершения);
		КонецЦикла;
		
		ЗначенияПоказателей = Неопределено;
		Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
		ПоказателиДокумента = ЗначенияПоказателей;
		
		ЗначенияПоказателей = Неопределено;
		Выполнить(Алгоритмы.ЗначенияПоказателей_Описание);
		ПоказателиРегистра = ЗначенияПоказателей;                  // Для изменения обособленного подразделения
		
		ЗначенияСовокупныхТарифныхСтавок = Неопределено;
		Выполнить(Алгоритмы.ЗначенияСовокупныхТарифныхСтавок_Описание);
		
		ПрименениеПоказателей = Неопределено;
		Выполнить(Алгоритмы.ПрименениеПоказателей_Описание);
		
		//ПоказателиДокумента					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы);
		//ПоказателиРегистра					= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПоказателей_Описание", Параметры.Алгоритмы); // Для изменения обособленного подразделения
		//ЗначенияСовокупныхТарифныхСтавок	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияСовокупныхТарифныхСтавок_Описание", Параметры.Алгоритмы);
		//ПрименениеПоказателей				= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПрименениеПоказателей_Описание", Параметры.Алгоритмы);
		
		СтруктураПараметров = Новый Структура("ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
		|Документ_Сотрудник, Документ_Сотрудник_Физлицо, Документ_ОбособленноеПодразделение, Документ_Период",
		ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
		РаботникОрганизации.Сотрудник, РаботникОрганизации.Сотрудник_Физлицо, РаботникОрганизации.ОбособленноеПодразделение, РаботникОрганизации.Период);
		Выполнить(Алгоритмы.ПлановыеНачисления_ЗаполнитьПоказатели);
		//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПлановыеНачисления_ЗаполнитьПоказатели", Параметры.Алгоритмы,
		//	ПлановыеНачисления, ПоказателиДокумента, ПоказателиРегистра, ЗначенияСовокупныхТарифныхСтавок, ПрименениеПоказателей,
		//	РаботникОрганизации.Сотрудник, РаботникОрганизации.Сотрудник_Физлицо, РаботникОрганизации.ОбособленноеПодразделение,
		//	РаботникОрганизации.Период, РаботникОрганизации.ПериодЗавершения);
		
		ПриемНаРаботу.Вставить("Начисления",	ПлановыеНачисления);
		ПриемНаРаботу.Вставить("Показатели",	ПоказателиДокумента);
		
		
	КонецЕсли;
	
	ЕжегодныеОтпуска = Неопределено;
	Выполнить(Алгоритмы.ЕжегодныеОтпуска_Описание);
	ЕжегодныеОтпускаДокумента = ЕжегодныеОтпуска;
	//ЕжегодныеОтпускаДокумента	= ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЕжегодныеОтпуска_Описание", Параметры.Алгоритмы);
	СтруктураПараметров = Новый Структура("ЕжегодныеОтпускаДокумента, Сотрудник, Период, ЕжегодныеОтпуска_Выборка, Должность",
		ЕжегодныеОтпускаДокумента, РаботникОрганизации.Сотрудник, РаботникОрганизации.Период, ИсходящиеДанные, РаботникОрганизации.Должность);
	Выполнить(Алгоритмы.ЕжегодныеОтпуска_Заполнить);	
	//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЕжегодныеОтпуска_Заполнить", Параметры.Алгоритмы,
	//	ЕжегодныеОтпускаДокумента,
	//	РаботникОрганизации.Сотрудник, РаботникОрганизации.Период, ИсходящиеДанные,
	//	РаботникОрганизации.Должность);
	ПриемНаРаботу.Вставить("ЕжегодныеОтпуска",					ЕжегодныеОтпускаДокумента);
	
	
	ВыборкаДанных.Добавить(ПриемНаРаботу);
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПрименениеПлановыхНачислений_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПрименениеПлановыхНачислений = Новый ТаблицаЗначений;
ПрименениеПлановыхНачислений.Колонки.Добавить("Сотрудник");
ПрименениеПлановыхНачислений.Колонки.Добавить("РабочееМесто");
ПрименениеПлановыхНачислений.Колонки.Добавить("Период");
ПрименениеПлановыхНачислений.Колонки.Добавить("Применение");
ПрименениеПлановыхНачислений.Колонки.Добавить("ДействуетДо");
ПрименениеПлановыхНачислений.Колонки.Добавить("ПрименениеПоОкончании");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПрименениеПоказателей_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ПрименениеПоказателей = Новый ТаблицаЗначений;
ПрименениеПоказателей.Колонки.Добавить("Сотрудник");
ПрименениеПоказателей.Колонки.Добавить("Показатель");
ПрименениеПоказателей.Колонки.Добавить("Период");
ПрименениеПоказателей.Колонки.Добавить("ФизическоеЛицо");
ПрименениеПоказателей.Колонки.Добавить("Организация");
ПрименениеПоказателей.Колонки.Добавить("Применение");
ПрименениеПоказателей.Колонки.Добавить("ДействуетДо");
ПрименениеПоказателей.Колонки.Добавить("ПрименениеПоОкончании");</Текст>
			</Алгоритм>
			<Алгоритм Имя="ПрименяемыеТарифыСтраховыхВзносов_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаУчетнаяПолитикаОрганизаций			= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "УчетнаяПолитикаОрганизаций");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаУчетнаяПолитикаОрганизаций, "ГоловнаяОрганизация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаУчетнаяПолитикаОрганизаций, "ВидТарифа");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаУчетнаяПолитикаОрганизаций) Цикл
	УчетнаяПолитикаОрганизаций = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаУчетнаяПолитикаОрганизаций, Номер);
	
	Если ЗначениеЗаполнено(УчетнаяПолитикаОрганизаций.ВидТарифаСтраховыхВзносов) = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	УчетнаяПолитикаОрганизаций.ГоловнаяОрганизация	= УчетнаяПолитикаОрганизаций.Организация;
	УчетнаяПолитикаОрганизаций.ВидТарифа			= УчетнаяПолитикаОрганизаций.ВидТарифаСтраховыхВзносов;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(УчетнаяПолитикаОрганизаций));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ПрофессииФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаПрофессииФизическихЛиц	= ИсходящиеДанные.ПрофессииФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаПрофессииФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
Для Номер = 1 По ТаблицаПрофессииФизическихЛиц.Количество() Цикл
	Профессия = ТаблицаПрофессииФизическихЛиц[Номер-1];
	
	Профессия.ФизическоеЛицо	= Профессия.ФизЛицо;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Профессия));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="РабочееВремяСотрудников_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаРабочееВремяСотрудников	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "РабочееВремяСотрудников");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаРабочееВремяСотрудников, "ВидУчетаВремени");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаРабочееВремяСотрудников) Цикл
	Гражданство = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаРабочееВремяСотрудников, Номер);
	
	Гражданство.ВидУчетаВремени	= Гражданство.ВидИспользованияРабочегоВремени;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(Гражданство));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="РаспределитьПропорционально" ИспользуетсяПриЗагрузке="false">
				<Текст>//Алгоритмы	= ВидСубконто;
ИсхСумма	= ПараметрыДляРаспределения.ИсхСумма;
МассивКоэф	= ПараметрыДляРаспределения.МассивКоэф;
Точность	= "";

Если ЗначениеЗаполнено(Точность) = 0 Тогда
	Точность = 2;
КонецЕсли;

КоличествоЭлементовМассива = МассивКоэф.Количество();
МассивСумм = Новый Массив;

Если (КоличествоЭлементовМассива &gt; 0) И (ИсхСумма &lt;&gt; 0) Тогда
	ИндексМакс = 0;
	МаксЗнач   = 0;
	РаспрСумма = 0;
	СуммаКоэф  = 0;
	
	Для К = 1 По КоличествоЭлементовМассива Цикл
		
		ЗначениеКоэффициента = МассивКоэф[К-1]; 
		
		МодульЧисла = ?(ЗначениеКоэффициента &gt; 0, ЗначениеКоэффициента, - ЗначениеКоэффициента);
		
		Если МаксЗнач &lt; МодульЧисла Тогда
			МаксЗнач = МодульЧисла;
			ИндексМакс = К;
		КонецЕсли;
		
		СуммаКоэф = СуммаКоэф + ЗначениеКоэффициента;
		
	КонецЦикла;
	
	Если СуммаКоэф &lt;&gt; 0 Тогда
		Для К = 1 По КоличествоЭлементовМассива Цикл
			ЗначениеКоэффициента = Окр(ИсхСумма * МассивКоэф[К-1] / СуммаКоэф, Точность, 1);
			МассивСумм.Добавить(ЗначениеКоэффициента);
			РаспрСумма = РаспрСумма + ЗначениеКоэффициента;
		КонецЦикла;
		
		// Погрешности округления отнесем на коэффициент с максимальным весом
		Если РаспрСумма &lt;&gt; ИсхСумма Тогда
			НоваяСумма = МассивСумм[ИндексМакс-1] + ИсхСумма - РаспрСумма;
			МассивСумм[ИндексМакс-1] = НоваяСумма;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;</Текст>
				<Параметры>ИсхСумма, МассивКоэф, Точность</Параметры>
			</Алгоритм>
			<Алгоритм Имя="РегистрацияВНалоговомОргане_Заполнить" ИспользуетсяПриЗагрузке="false">
				<Текст>Алгоритмы		= ВидСубконто;
Владелец		= ИсходящиеДанные;
Подразделение	= ВходящиеДанные;
КодПоОКТМО		= Источник;
КодПоОКАТО		= Приемник;
КПП				= ТипПриемника;

Если НЕ ЗначениеЗаполнено(КодПоОКТМО) Тогда
	КодПоОКТМО = ОбъектыПереносаДанных.Структура_Получить(Подразделение, "КодПоОКТМО");
	Если Не ЗначениеЗаполнено(КодПоОКТМО) Тогда
		КодПоОКТМО = ОбъектыПереносаДанных.Структура_Получить(Владелец, "КодПоОКТМО");	
	КонецЕсли;	
КонецЕсли;

Если НЕ ЗначениеЗаполнено(КодПоОКАТО) Тогда
	КодПоОКАТО = ОбъектыПереносаДанных.Структура_Получить(Подразделение, "КодПоОКАТО");
	Если Не ЗначениеЗаполнено(КодПоОКАТО) Тогда
		КодПоОКАТО = ОбъектыПереносаДанных.Структура_Получить(Владелец, "КодПоОКАТО");	
	КонецЕсли;	
КонецЕсли;

Если НЕ ЗначениеЗаполнено(КПП) Тогда
	КПП = ОбъектыПереносаДанных.Структура_Получить(Подразделение, "КПП");
	Если Не ЗначениеЗаполнено(КПП) Тогда
		КПП = ОбъектыПереносаДанных.Структура_Получить(Владелец, "КПП");	
	КонецЕсли;	
КонецЕсли;

Если ЗначениеЗаполнено(КодПоОКТМО) Или ЗначениеЗаполнено(КодПоОКАТО) Или ЗначениеЗаполнено(КПП) Тогда
	РегистрацияВНалоговомОргане = ОбъектыПереносаДанных.НовыйОбъект("Структура");
	ОбъектыПереносаДанных.Структура_Установить(РегистрацияВНалоговомОргане, "Владелец",		Владелец);
	ОбъектыПереносаДанных.Структура_Установить(РегистрацияВНалоговомОргане, "КодПоОКТМО",		КодПоОКТМО);
	ОбъектыПереносаДанных.Структура_Установить(РегистрацияВНалоговомОргане, "КодПоОКАТО",		КодПоОКАТО);
	ОбъектыПереносаДанных.Структура_Установить(РегистрацияВНалоговомОргане, "КПП",			КПП);
Иначе
	РегистрацияВНалоговомОргане = "";
КонецЕсли;

Субконто = РегистрацияВНалоговомОргане;</Текст>
				<Параметры>Владелец, Подразделение, КодПоОКАТО, КодПоОКТМО, КПП</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СведенияОбИнвалидностиФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаСведенияОбИнвалидностиФизическихЛиц	= ИсходящиеДанные.СведенияОбИнвалидностиФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаСведенияОбИнвалидностиФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
Для Номер = 1 По ТаблицаСведенияОбИнвалидностиФизическихЛиц.Количество() Цикл
	Инвалидность = ТаблицаСведенияОбИнвалидностиФизическихЛиц[Номер-1];
	
	Инвалидность.ФизическоеЛицо	= Инвалидность.ФизЛицо;
	
	ВыборкаДанных.добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Инвалидность));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СведенияОбОтветственныхЛицах_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаОтветственныеЛицаОрганизаций	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "ОтветственныеЛицаОрганизаций");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

СведенияОбОтветственныхЛицах = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "Организация");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "Период");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "Руководитель");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "ДолжностьРуководителя");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "ГлавныйБухгалтер");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "РуководительКадровойСлужбы");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "ДолжностьРуководителяКадровойСлужбы");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "Кассир");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОбОтветственныхЛицах, "ДолжностьКассира");

// Для каждой организации определим список всех дат, на которые устанавливалось какое-либо ответственное лицо
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаОтветственныеЛицаОрганизаций) Цикл
	ОтветственныеЛицаОрганизаций = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаОтветственныеЛицаОрганизаций, Номер);
	
	ОрганизацияИПериод = ОбъектыПереносаДанных.ТаблицаЗначений_НайтиСтроки(СведенияОбОтветственныхЛицах, "Организация, Период", ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница, ОтветственныеЛицаОрганизаций.Период);
	Если ОбъектыПереносаДанных.Массив_Количество(ОрганизацияИПериод) &lt;&gt; 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ОрганизацияИПериод = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(СведенияОбОтветственныхЛицах);
	ОрганизацияИПериод.Организация	= ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница;
	ОрганизацияИПериод.Период		= ОтветственныеЛицаОрганизаций.Период;
КонецЦикла;

// Для каждой даты заполним ответственных лиц из таблицы
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(СведенияОбОтветственныхЛицах) Цикл
	СведениеОбОтветственныхЛицах = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(СведенияОбОтветственныхЛицах, Номер);
	
	Для НомерОтв = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаОтветственныеЛицаОрганизаций) Цикл
		ОтветственныеЛицаОрганизаций = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаОтветственныеЛицаОрганизаций, НомерОтв);
		Если (ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница &lt;&gt; СведениеОбОтветственныхЛицах.Организация)
			Или (ОтветственныеЛицаОрганизаций.Период &gt; СведениеОбОтветственныхЛицах.Период) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтветственныеЛицаОрганизаций_ОтветственноеЛицо", Параметры.Алгоритмы, "Руководитель") Тогда
			СведениеОбОтветственныхЛицах.Руководитель							= ОтветственныеЛицаОрганизаций.ФизическоеЛицо;
			СведениеОбОтветственныхЛицах.ДолжностьРуководителя					= ОтветственныеЛицаОрганизаций.Должность;
			
		ИначеЕсли ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтветственныеЛицаОрганизаций_ОтветственноеЛицо", Параметры.Алгоритмы, "ГлавныйБухгалтер") Тогда
			СведениеОбОтветственныхЛицах.ГлавныйБухгалтер						= ОтветственныеЛицаОрганизаций.ФизическоеЛицо;
			
		ИначеЕсли ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтветственныеЛицаОрганизаций_ОтветственноеЛицо", Параметры.Алгоритмы, "РуководительКадровойСлужбы") Тогда
			СведениеОбОтветственныхЛицах.РуководительКадровойСлужбы				= ОтветственныеЛицаОрганизаций.ФизическоеЛицо;
			СведениеОбОтветственныхЛицах.ДолжностьРуководителяКадровойСлужбы	= ОтветственныеЛицаОрганизаций.Должность;
			
		ИначеЕсли ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОтветственныеЛицаОрганизаций_ОтветственноеЛицо", Параметры.Алгоритмы, "Кассир") Тогда
			СведениеОбОтветственныхЛицах.Кассир									= ОтветственныеЛицаОрганизаций.ФизическоеЛицо;
			СведениеОбОтветственныхЛицах.ДолжностьКассира						= ОтветственныеЛицаОрганизаций.Должность;
			
		КонецЕсли;
	КонецЦикла;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(СведениеОбОтветственныхЛицах));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СведенияОВремениДляРасчетаСреднегоОбщий_Выгрузить" ИспользуетсяПриЗагрузке="false">
				<Текст>
Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	ДатаОкончания = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПолучитьДатуОкончанияПоРегиструОсновныеНачисления", Параметры.Алгоритмы, Параметры);
	ДатаНачалаРаботыСПрограммой = ДобавитьМесяц(ДатаОкончания, 1);
	МесяцНачалаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;
	МесяцОкончанияПереноса = ДатаОкончания;
	
Иначе
	
	ДатаНачалаРаботыСПрограммой = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
	МесяцНачалаПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -16);
	МесяцОкончанияПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -1);
	
КонецЕсли;

ВидыВремени = Новый Массив;
ВидыВремени.Добавить(Перечисления.ВидыВремени.ОтработанноеВПределахНормы);


ТекстЗапроса = 
"ВЫБРАТЬ
|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
|	РабочееВремя.Дней КАК Дней,
|	РабочееВремя.Часов КАК Часов,
|	ОсновныеНачисления.ПериодДействияНачало,
|	ОсновныеНачисления.ПериодДействияКонец,
|	ОсновныеНачисления.Организация
|ПОМЕСТИТЬ ВТПрогулыПоТабелюФПД
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
|			ПериодДействия = &amp;ТекущийМесяц
|				И ПериодРегистрации &lt; &amp;ДатаНачалаРаботыСПрограммой
|				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ДниНеоплачиваемыеСогласноТабелю)
|				И Сотрудник В
|					(ВЫБРАТЬ
|						ВТСотрудники.Сотрудник
|					ИЗ
|						ВТСотрудники)) КАК ОсновныеНачисления
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремя
|		ПО ОсновныеНачисления.Сотрудник = РабочееВремя.Сотрудник
|			И (РабочееВремя.Период МЕЖДУ ОсновныеНачисления.ПериодДействияНачало И ОсновныеНачисления.ПериодДействияКонец)
|			И (РабочееВремя.ВидИспользованияРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы))
|
|ИНДЕКСИРОВАТЬ ПО
|	Сотрудник,
|	ПериодДействия
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
|	СУММА(ОсновныеНачисления.НормаДней) КАК ОтработаноДней,
|	СУММА(ОсновныеНачисления.НормаЧасов) КАК ОтработаноЧасов,
|	ОсновныеНачисления.Организация
|ПОМЕСТИТЬ ВТПрогулы
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
|ГДЕ
|	ОсновныеНачисления.ПериодДействия = &amp;ТекущийМесяц
|	И ОсновныеНачисления.ПериодРегистрации &lt; &amp;ДатаНачалаРаботыСПрограммой
|	И ОсновныеНачисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы)
|	И ОсновныеНачисления.Сотрудник В
|			(ВЫБРАТЬ
|				ВТСотрудники.Сотрудник
|			ИЗ
|				ВТСотрудники)
|
|СГРУППИРОВАТЬ ПО
|	ОсновныеНачисления.ПериодДействия,
|	ОсновныеНачисления.Сотрудник,
|	ОсновныеНачисления.ВидРасчета,
|	ОсновныеНачисления.Организация
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ПрогулыПоТабелю.ПериодДействия,
|	ПрогулыПоТабелю.Сотрудник,
|	СУММА(ПрогулыПоТабелю.Дней),
|	СУММА(ПрогулыПоТабелю.Часов),
|	ПрогулыПоТабелю.Организация
|ИЗ
|	ВТПрогулыПоТабелюФПД КАК ПрогулыПоТабелю
|
|СГРУППИРОВАТЬ ПО
|	ПрогулыПоТабелю.Сотрудник,
|	ПрогулыПоТабелю.ПериодДействия,
|	ПрогулыПоТабелю.Организация
|
|ИНДЕКСИРОВАТЬ ПО
|	ПериодДействия,
|	Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
|	СУММА(ОсновныеНачисления.ОтработаноДней) КАК ОтработаноДней,
|	СУММА(ОсновныеНачисления.ОтработаноЧасов) КАК ОтработаноЧасов,
|	СУММА(ОсновныеНачисления.ОтработаноДнейПоПятидневке) КАК ОтработаноДнейПоПятидневке,
|	СУММА(ОсновныеНачисления.ОтработаноЧасовПоПятидневке) КАК ОтработаноЧасовПоПятидневке,
|	ОсновныеНачисления.ВидРасчета,
|	ОсновныеНачисления.Организация
|ПОМЕСТИТЬ ВТОтработанноеВремя
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
|ГДЕ
|	ОсновныеНачисления.ПериодДействия = &amp;ТекущийМесяц
|	И ОсновныеНачисления.ПериодРегистрации &lt; &amp;ДатаНачалаРаботыСПрограммой
|	И ОсновныеНачисления.ВидРасчета.ВидВремени В(&amp;ВидыВремени)
|	И ОсновныеНачисления.Сотрудник В
|			(ВЫБРАТЬ
|				ВТСотрудники.Сотрудник
|			ИЗ
|				ВТСотрудники)
|
|СГРУППИРОВАТЬ ПО
|	ОсновныеНачисления.ПериодДействия,
|	ОсновныеНачисления.Сотрудник,
|	ОсновныеНачисления.ВидРасчета,
|	ОсновныеНачисления.Организация
|
|ИНДЕКСИРОВАТЬ ПО
|	ПериодДействия,
|	Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДанныеГрафика.ПериодДействия КАК ПериодДействия,
|	ДанныеГрафика.Сотрудник КАК Сотрудник,
|	СУММА(ДанныеГрафика.ПроизводственныйКалендарьШестидневкаФактическийПериодДействия * ВЫБОР
|			КОГДА ДанныеГрафика.Сторно
|				ТОГДА -1
|			ИНАЧЕ 1
|		КОНЕЦ) КАК ОтработаноДнейШестидневка,
|	ДанныеГрафика.Организация
|ПОМЕСТИТЬ ВТДанныеШестидневка
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ДанныеГрафика(
|			ПериодДействия = &amp;ТекущийМесяц
|				И ПериодРегистрации &lt; &amp;ДатаНачалаРаботыСПрограммой
|				И (Сотрудник, ВидРасчета) В
|					(ВЫБРАТЬ
|						ВТОтработанноеВремя.Сотрудник,
|						ВТОтработанноеВремя.ВидРасчета
|					ИЗ
|						ВТОтработанноеВремя)) КАК ДанныеГрафика
|
|СГРУППИРОВАТЬ ПО
|	ДанныеГрафика.ПериодДействия,
|	ДанныеГрафика.Сотрудник,
|	ДанныеГрафика.Организация
|
|ИНДЕКСИРОВАТЬ ПО
|	ПериодДействия,
|	Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
|	ОсновныеНачисления.ПериодДействияНачало,
|	ОсновныеНачисления.ПериодДействияКонец,
|	ОсновныеНачисления.ПериодРегистрации,
|	ОсновныеНачисления.Сторно,
|	ОсновныеНачисления.Организация
|ПОМЕСТИТЬ ВТОсновныеНачисленияФПД
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
|			ПериодДействия = &amp;ТекущийМесяц
|				И ПериодРегистрации &lt; &amp;ДатаНачалаРаботыСПрограммой
|				И (Сотрудник, ВидРасчета) В
|					(ВЫБРАТЬ
|						ВТОтработанноеВремя.Сотрудник,
|						ВТОтработанноеВремя.ВидРасчета
|					ИЗ
|						ВТОтработанноеВремя)) КАК ОсновныеНачисления
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ОсновныеНачисления.ПериодДействия,
|	ОсновныеНачисления.Сотрудник,
|	ОсновныеНачисления.ПериодДействияНачало,
|	ОсновныеНачисления.ПериодДействияКонец,
|	NULL,
|	ЛОЖЬ,
|	ОсновныеНачисления.Организация
|ИЗ
|	ВТПрогулыПоТабелюФПД КАК ОсновныеНачисления
|
|ИНДЕКСИРОВАТЬ ПО
|	ПериодДействия,
|	Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОсновныеНачисления.ПериодДействия КАК ПериодДействия,
|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
|	СУММА(РАЗНОСТЬДАТ(ОсновныеНачисления.ПериодДействияНачало, ДОБАВИТЬКДАТЕ(ОсновныеНачисления.ПериодДействияКонец, СЕКУНДА, 1), ДЕНЬ) * ВЫБОР
|			КОГДА ОсновныеНачисления.Сторно
|				ТОГДА -1
|			ИНАЧЕ 1
|		КОНЕЦ) КАК ОтработаноДнейКалендарных,
|	ОсновныеНачисления.Организация
|ПОМЕСТИТЬ ВТДанныеКалендарныеДни
|ИЗ
|	ВТОсновныеНачисленияФПД КАК ОсновныеНачисления
|
|СГРУППИРОВАТЬ ПО
|	ОсновныеНачисления.ПериодДействия,
|	ОсновныеНачисления.Сотрудник,
|	ОсновныеНачисления.Организация
|
|ИНДЕКСИРОВАТЬ ПО
|	ПериодДействия,
|	Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	""Постановление2010"" КАК ПорядокРасчета,
|	ДанныеВремя.Месяц КАК Период,
|	ДанныеВремя.Сотрудник КАК Сотрудник,
|	СУММА(ДанныеВремя.ОтработаноДней) КАК ОтработаноДней,
|	СУММА(ДанныеВремя.ОтработаноЧасов) КАК ОтработаноЧасов,
|	СУММА(ДанныеВремя.ОтработаноДнейПоПятидневке) КАК ОтработаноДнейПятидневка,
|	СУММА(ДанныеВремя.ОтработаноЧасовПоПятидневке) КАК ОтработаноЧасовПятидневка,
|	СУММА(ДанныеВремя.ОтработаноДнейКалендарных) КАК ОтработаноДнейКалендарных,
|	СУММА(ДанныеВремя.ОтработаноДнейШестидневка) КАК ОтработаноДнейШестидневка,
|	ДанныеВремя.Организация КАК Организация
|ИЗ
|	(ВЫБРАТЬ
|		ОтработанноеВремя.ПериодДействия КАК Месяц,
|		ОтработанноеВремя.Сотрудник КАК Сотрудник,
|		СУММА(ОтработанноеВремя.ОтработаноДней) КАК ОтработаноДней,
|		СУММА(ОтработанноеВремя.ОтработаноЧасов) КАК ОтработаноЧасов,
|		СУММА(ОтработанноеВремя.ОтработаноДнейПоПятидневке) КАК ОтработаноДнейПоПятидневке,
|		СУММА(ОтработанноеВремя.ОтработаноЧасовПоПятидневке) КАК ОтработаноЧасовПоПятидневке,
|		0 КАК ОтработаноДнейКалендарных,
|		0 КАК ОтработаноДнейШестидневка,
|		ОтработанноеВремя.Организация КАК Организация
|	ИЗ
|		ВТОтработанноеВремя КАК ОтработанноеВремя
|	
|	СГРУППИРОВАТЬ ПО
|		ОтработанноеВремя.ПериодДействия,
|		ОтработанноеВремя.Сотрудник,
|		ОтработанноеВремя.Организация
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		Прогулы.ПериодДействия,
|		Прогулы.Сотрудник,
|		Прогулы.ОтработаноДней,
|		Прогулы.ОтработаноЧасов,
|		0,
|		0,
|		0,
|		0,
|		Прогулы.Организация
|	ИЗ
|		ВТПрогулы КАК Прогулы
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ДанныеШестидневка.ПериодДействия,
|		ДанныеШестидневка.Сотрудник,
|		0,
|		0,
|		0,
|		0,
|		0,
|		СУММА(ДанныеШестидневка.ОтработаноДнейШестидневка),
|		ДанныеШестидневка.Организация
|	ИЗ
|		ВТДанныеШестидневка КАК ДанныеШестидневка
|	
|	СГРУППИРОВАТЬ ПО
|		ДанныеШестидневка.ПериодДействия,
|		ДанныеШестидневка.Сотрудник,
|		ДанныеШестидневка.Организация
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ВТДанныеКалендарныеДни.ПериодДействия,
|		ВТДанныеКалендарныеДни.Сотрудник,
|		0,
|		0,
|		0,
|		0,
|		ВТДанныеКалендарныеДни.ОтработаноДнейКалендарных,
|		0,
|		ВТДанныеКалендарныеДни.Организация
|	ИЗ
|		ВТДанныеКалендарныеДни КАК ВТДанныеКалендарныеДни) КАК ДанныеВремя
|
|СГРУППИРОВАТЬ ПО
|	ДанныеВремя.Месяц,
|	ДанныеВремя.Сотрудник,
|	ДанныеВремя.Организация
|
|УПОРЯДОЧИТЬ ПО
|	Организация
|ИТОГИ ПО
|	Организация";

МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Сотрудники_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);
Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
Запрос.УстановитьПараметр("ВидыВремени", ВидыВремени);
Запрос.УстановитьПараметр("ДатаНачалаРаботыСПрограммой", ДатаНачалаРаботыСПрограммой);

ТекущийМесяц = МесяцНачалаПереноса;

Пока ТекущийМесяц &lt;= МесяцОкончанияПереноса Цикл
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТекущийМесяц", ТекущийМесяц);
	
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Запрос.Текст =   
	"УНИЧТОЖИТЬ ВТПрогулы  
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновныеНачисленияФПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрогулыПоТабелюФПД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеШестидневка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДанныеКалендарныеДни
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтработанноеВремя";
	Запрос.Выполнить();
	
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		
		Организация = ДанныеПоОрганизации.Организация;
		ВыборкаПоДокументу = ОбъектыПереносаДанных.НовыйОбъект("Структура");
		ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "Номер", "ЗП_СЗО");
		ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "Организация", Организация);
		ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "ПериодРегистрации", ТекущийМесяц);
		ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "ДанныеОВремениДляРасчетаСреднегоОбщий",	ДанныеПоОрганизации.Строки);
		
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ДанныеДляРасчетаСреднегоОбщий_ПД");
		
	КонецЦикла;
	
	ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, 1);
	
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="СовокупнаяТарифнаяСтавка_ВидТарифнойСтавки" ИспользуетсяПриЗагрузке="false">
				<Текст>
ВидТарифнойСтавки		= "МесячнаяТарифнаяСтавка";
Если СсылкаНаПоказатель = "ТарифнаяСтавкаДневная" Тогда
	ВидТарифнойСтавки	= "ДневнаяТарифнаяСтавка";
	
ИначеЕсли СсылкаНаПоказатель = "ТарифнаяСтавкаЧасовая" Тогда
	ВидТарифнойСтавки	= "ЧасоваяТарифнаяСтавка";
	
КонецЕсли;</Текст>
				<Параметры>СсылкаНаПоказатель</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Сотрудник_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>
Если ТипЗнч(СотрудникСсылка) &lt;&gt; Тип("Структура") Тогда
	СЗ = Новый Структура;
	Выполнить(Алгоритмы.Сотрудник_Описание);
	Сотрудник = СЗ;
	ЗаполнитьЗначенияСвойств(Сотрудник, СотрудникСсылка);
Иначе
	Сотрудник = СотрудникСсылка;
КонецЕсли;

Сотрудник.Вставить("ГоловнаяОрганизация", Сотрудник.Организация);
Сотрудник.Вставить("УточнениеНаименования",	Сотрудник.ПостфиксНаименования);
Сотрудник.Вставить("ФизическоеЛицо",		Сотрудник.Физлицо);
Сотрудник.Вставить("ВАрхиве",				?(Истина = 1, 0, 1));</Текст>
				<Параметры>Сотрудник</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтавкаВзносаНаСтрахованиеОтНС_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаСтавкаВзносаНаСтрахованиеОтНС	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "СтавкаВзносаНаСтрахованиеОтНС");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаСтавкаВзносаНаСтрахованиеОтНС) Цикл
	СтрокаНастройки = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаСтавкаВзносаНаСтрахованиеОтНС, Номер);
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(СтрокаНастройки));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтажиФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>Запрос = Новый Запрос;
Выполнить(Алгоритмы.ФизическиеЛица_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.ФизическиеЛица_ВременнаяТаблица;
Запрос.Текст =
"ВЫБРАТЬ
|	ВТФизическиеЛица.Физлицо
|ИЗ
|	ВТФизическиеЛица КАК ВТФизическиеЛица";
ФизическиеЛицаМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо");

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	ДатаСреза = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
Иначе
	ДатаСреза = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;

Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);

Запрос.Текст =
"ВЫБРАТЬ
|	ВидыСтажа.Ссылка,
|	ВидыСтажа.Наименование,
|	ВидыСтажа.ПометкаУдаления,
|	ВЫБОР
|		КОГДА ВидыСтажа.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыСтажа.ОбщийТрудовойСтаж)
|			ТОГДА ""Общий""
|		КОГДА ВидыСтажа.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыСтажа.СтраховойСтажДляБольничного)
|			ТОГДА ""Страховой""
|		ИНАЧЕ ""Прочее""
|	КОНЕЦ КАК КатегорияСтажа
|ИЗ
|	Справочник.ВидыСтажа КАК ВидыСтажа";

Выборка = Запрос.Выполнить().Выбрать();
ОписаниеВидаСтажа = Новый Соответствие;
Пока Выборка.Следующий() Цикл
	ВидСтажа = Новый Структура;
	ВидСтажа.Вставить("Наименование", Выборка.Наименование);
	ВидСтажа.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
	ВидСтажа.Вставить("КатегорияСтажа", Выборка.КатегорияСтажа);
	ОписаниеВидаСтажа.Вставить(Выборка.Ссылка, ВидСтажа);
КонецЦикла;

//Запрос.Текст = 
//"ВЫБРАТЬ
//|	ФизическиеЛицаСтажи.Ссылка КАК ФизическоеЛицо,
//|	МИНИМУМ(ФизическиеЛицаСтажи.ДатаНачала) КАК ДатаОтсчета,
//|	ФизическиеЛицаСтажи.ВидСтажа КАК ВидСтажа
//|ИЗ
//|	Справочник.ФизическиеЛица.Стажи КАК ФизическиеЛицаСтажи
//|ГДЕ
//|	ФизическиеЛицаСтажи.Ссылка В
//|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
//|				ФизическиеЛица.Физлицо
//|			ИЗ
//|				ВТФизическиеЛица КАК ФизическиеЛица)
//|
//|СГРУППИРОВАТЬ ПО
//|	ФизическиеЛицаСтажи.Ссылка,
//|	ФизическиеЛицаСтажи.ВидСтажа";

Запрос.Текст = 
"ВЫБРАТЬ
|	НачальныеСведенияОСтажеРаботниковОрганизацииСрезПоследних.ФизЛицо,
|	НачальныеСведенияОСтажеРаботниковОрганизацииСрезПоследних.ВидСтажа,
|	МИНИМУМ(НачальныеСведенияОСтажеРаботниковОрганизацииСрезПоследних.ДатаСтажа) КАК ДатаОтсчета
|ИЗ
|	РегистрСведений.НачальныеСведенияОСтажеРаботниковОрганизации.СрезПоследних(&amp;ДатаСреза, ) КАК НачальныеСведенияОСтажеРаботниковОрганизацииСрезПоследних
|
|СГРУППИРОВАТЬ ПО
|	НачальныеСведенияОСтажеРаботниковОрганизацииСрезПоследних.ФизЛицо,
|	НачальныеСведенияОСтажеРаботниковОрганизацииСрезПоследних.ВидСтажа";

ВыборкаПоСтажу = Запрос.Выполнить().Выбрать();

ТаблицаСтажей = Новый ТаблицаЗначений;
ТаблицаСтажей.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
ТаблицаСтажей.Колонки.Добавить("ВидСтажа", Новый ОписаниеТипов("Строка,СправочникСсылка.ВидыСтажа"));
ТаблицаСтажей.Колонки.Добавить("ДатаОтсчета", Новый ОписаниеТипов("Дата"));
ТаблицаСтажей.Колонки.Добавить("РазмерМесяцев", Новый ОписаниеТипов("Число"));
ТаблицаСтажей.Колонки.Добавить("РазмерДней", Новый ОписаниеТипов("Число"));

Пока ВыборкаПоСтажу.Следующий()	Цикл
			
	//Если ВыборкаПоСтажу.ВидСтажа = Справочники.ВидыСтажа.СтраховойСтажДляБЛ Тогда
	//	Продолжить;
	//КонецЕсли;
	
	ДатаНачалаОтсчетаСтажа = ВыборкаПоСтажу.ДатаОтсчета;
	Лет		= 0;
	Месяцев	= 0;
	Дней	= 0;
	ОбщегоНазначения.РазобратьРазностьДат(НачалоДня(ДатаСреза), НачалоДня(ДатаНачалаОтсчетаСтажа), Лет, Месяцев, Дней);
	
	НоваяСтрокаСтажей = ТаблицаСтажей.Добавить();
	НоваяСтрокаСтажей.ФизическоеЛицо = ВыборкаПоСтажу.ФизЛицо;
	НоваяСтрокаСтажей.ВидСтажа = ВыборкаПоСтажу.ВидСтажа;
	НоваяСтрокаСтажей.ДатаОтсчета = ДатаСреза;
	НоваяСтрокаСтажей.РазмерМесяцев = Лет * 12 + Месяцев;
	НоваяСтрокаСтажей.РазмерДней = Дней;
	
КонецЦикла;

ВыборкаДанных = Новый Массив;
ТаблицаСтажей.Колонки.ВидСтажа.Имя = "ВидСтажаСсылка";
ТаблицаСтажей.Колонки.Добавить("ВидСтажа");
Для каждого СтрокаТЗ Из ТаблицаСтажей Цикл
	
	ВидСтажаОписание = ОписаниеВидаСтажа[СтрокаТЗ.ВидСтажаСсылка];
	Если ВидСтажаОписание = Неопределено Тогда
		Продолжить;
	КонецЕсли;
	ВидСтажаСтруктура = Новый Структура;
	ВидСтажаСтруктура.Вставить("Наименование", ВидСтажаОписание.Наименование);
	ВидСтажаСтруктура.Вставить("ПометкаУдаления", ВидСтажаОписание.ПометкаУдаления);
	ВидСтажаСтруктура.Вставить("КатегорияСтажа", ВидСтажаОписание.КатегорияСтажа);
	СтрокаТЗ.ВидСтажа = ВидСтажаСтруктура;
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТЗ));
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтатусНДФЛФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаСтатусНДФЛФизическихЛиц	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "СтатусНДФЛФизическихЛиц");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаСтатусНДФЛФизическихЛиц, "ФизическоеЛицо");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаСтатусНДФЛФизическихЛиц) Цикл
	СтатусФЛ = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаСтатусНДФЛФизическихЛиц, Номер);
	
	СтатусФЛ.ФизическоеЛицо	= СтатусФЛ.ФизЛицо;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(СтатусФЛ));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтатусыЗастрахованныхФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаГражданствоФизическихЛиц	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "ГражданствоФизическихЛиц");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаГражданствоФизическихЛиц, "ФизическоеЛицо");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаГражданствоФизическихЛиц) Цикл
	Гражданство = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаГражданствоФизическихЛиц, Номер);
	
	Если ЗначениеЗаполнено(Гражданство.ВидЗастрахованногоЛица) = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	Гражданство.ФизическоеЛицо	= Гражданство.ФизЛицо;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(Гражданство));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтраховыеВзносыРасчеты_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>
Для СчРезультатов = 1 По ИсходящиеДанные.Количество() Цикл
	СтрокаТаблицыРезультатов = ИсходящиеДанные[СчРезультатов-1];
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
	
	РасчетыПоСтраховымВзносам	= СтрокаТаблицыРезультатов.РасчетыПоСтраховымВзносам;
	
	РасчетыСФондамиПоСтраховымВзносам = Новый ТаблицаЗначений;
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("Период");
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("ВидДвижения");
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("Организация"); 
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("Налог");
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("ПериодВзаиморасчетов");
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("Сумма");
	РасчетыСФондамиПоСтраховымВзносам.Колонки.Добавить("ФизическоеЛицо");
	
	Для Сч = 1 По РасчетыПоСтраховымВзносам.Количество() Цикл
		СтрокаТаблицы = РасчетыПоСтраховымВзносам[Сч-1];
		
		НоваяСтрока = РасчетыСФондамиПоСтраховымВзносам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.Период = НачалоДня(СтрокаТаблицы.Период);
		
	КонецЦикла;
	
	ВыборкаПоДокументу = Новый Структура;
	ВыборкаПоДокументу.Вставить("Номер",								"СВ");
	ВыборкаПоДокументу.Вставить("Организация",							ОрганизацияОтбор);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации",					ПериодОтбор);
	ВыборкаПоДокументу.Вставить("РасчетыСФондамиПоСтраховымВзносам",	РасчетыСФондамиПоСтраховымВзносам);
	ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",					СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "РасчетыСФондамиПоСтраховымВзносам_ПД");
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="СтраховыеВзносыСведенияОДоходах_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>Для СчРезультатов = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ИсходящиеДанные) Цикл 
	СтрокаТаблицыРезультатов = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ИсходящиеДанные, СчРезультатов);
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
	
	СтраховыеВзносыСведенияОДоходах	= СтрокаТаблицыРезультатов.СтраховыеВзносыСведенияОДоходах;
	
	СведенияОДоходахСтраховыеВзносы = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ФизическоеЛицо");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ГоловнаяОрганизация");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "Организация");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "Период");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "Начисление");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ВидДохода");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "Сумма");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "Скидка");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ОблагаетсяЕНВД");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ЯвляетсяДоходомФармацевта");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ОблагаетсяВзносамиНаДоплатуЛетчикам");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ОблагаетсяВзносамиНаДоплатуШахтерам");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ДатаПолученияДохода");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "КлассУсловийТруда");
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(СведенияОДоходахСтраховыеВзносы, "ПоАктуПроверки");
	
	Для Сч = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(СтраховыеВзносыСведенияОДоходах) Цикл
		СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(СтраховыеВзносыСведенияОДоходах, Сч);
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ВидРасчета) = 1 Тогда
			Ссылка	= ОбъектыПереносаДанных.Структура_Получить(СтрокаТаблицы.ВидРасчета, "Ссылка");
			Если Ссылка = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачислениеУдержание_Предопределенный", Параметры.Алгоритмы, "ОтпускПоУходуЗаРебенкомБезОплаты", "ОсновныеНачисления") Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(СведенияОДоходахСтраховыеВзносы);
		НоваяСтрока.ФизическоеЛицо											= СтрокаТаблицы.ФизЛицо;
		НоваяСтрока.ГоловнаяОрганизация										= СтрокаТаблицы.Организация;
		НоваяСтрока.Организация												= СтрокаТаблицы.ОбособленноеПодразделение;
		НоваяСтрока.Период													= НачалоДня(СтрокаТаблицы.Период);
		НоваяСтрока.Начисление												= СтрокаТаблицы.ВидРасчета;
		НоваяСтрока.ВидДохода												= СтрокаТаблицы.ВидДохода;
		НоваяСтрока.Сумма													= СтрокаТаблицы.Результат;
		НоваяСтрока.Скидка													= СтрокаТаблицы.Скидка;
		НоваяСтрока.ОблагаетсяЕНВД											= СтрокаТаблицы.ОблагаетсяЕНВД;
		НоваяСтрока.ЯвляетсяДоходомФармацевта								= СтрокаТаблицы.ЯвляетсяДоходомФармацевта;
		НоваяСтрока.ОблагаетсяВзносамиНаДоплатуЛетчикам						= СтрокаТаблицы.ОблагаетсяПоДополнительномуТарифу;
		НоваяСтрока.ОблагаетсяВзносамиНаДоплатуШахтерам						= СтрокаТаблицы.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам;
		НоваяСтрока.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ				= СтрокаТаблицы.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ;
		НоваяСтрока.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией	= СтрокаТаблицы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией;
		НоваяСтрока.ДатаПолученияДохода										= СтрокаТаблицы.ДатаПолученияДохода;
		НоваяСтрока.КлассУсловийТруда										= СтрокаТаблицы.КлассУсловийТруда;
		НоваяСтрока.ПоАктуПроверки											= СтрокаТаблицы.ПоАктуПроверки;
	КонецЦикла;
	
	ВыборкаПоДокументу = ОбъектыПереносаДанных.НовыйОбъект("Структура");
	ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "Номер",							"СВ");
	ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "Организация",						ОрганизацияОтбор);
	ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "ПериодРегистрации",				ПериодОтбор);
	ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "СведенияОДоходахСтраховыеВзносы",	СведенияОДоходахСтраховыеВзносы);
	ОбъектыПереносаДанных.Структура_Установить(ВыборкаПоДокументу, "НеОчищатьДокумент",				СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "СведенияОДоходахСтраховыеВзносы_ПД");
	
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ТрудоваяДеятельностьФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаТрудоваяДеятельностьФизическихЛиц	= ИсходящиеДанные.ТрудоваяДеятельностьФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаТрудоваяДеятельностьФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
ТаблицаТрудоваяДеятельностьФизическихЛиц.Колонки.Добавить("НомерПоПорядку");
Для Номер = 1 По ТаблицаТрудоваяДеятельностьФизическихЛиц.Количество() Цикл
	ТрудоваяДеятельность = ТаблицаТрудоваяДеятельностьФизическихЛиц[Номер-1];
	
	ТрудоваяДеятельность.ФизическоеЛицо	= ТрудоваяДеятельность.ФизЛицо;
	ТрудоваяДеятельность.НомерПоПорядку	= ТрудоваяДеятельность.НомерСтроки;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТрудоваяДеятельность));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Увольнение_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>Увольнение = Новый Структура;
Увольнение.Вставить("Сотрудник",							"");
Увольнение.Вставить("ДатаУвольнения",						"");
Увольнение.Вставить("Организация",							"");
Увольнение.Вставить("ФизическоеЛицо",						"");
Увольнение.Вставить("ОснованиеУвольнения",					"");
Увольнение.Вставить("ПериодРегистрации",					"");
Увольнение.Вставить("ПризнакКомпенсацииУдержанияОтпуска",	"");
Увольнение.Вставить("ПорядокВыплаты",						"");
Увольнение.Вставить("ПланируемаяДатаВыплаты",				"");
Увольнение.Вставить("ДокументРассчитан",					"");
Увольнение.Вставить("ВидДоговора",							"");
Увольнение.Вставить("Дата",									"");
Увольнение.Вставить("Номер",								"");
Увольнение.Вставить("Ответственный",						"");
Увольнение.Вставить("Комментарий",							"");</Текст>
			</Алгоритм>
			<Алгоритм Имя="Увольнение_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>РаботникиОрганизаций					= ИсходящиеДанные.РаботникиОрганизаций;
ПлановыеНачисленияРаботниковОрганизаций	= ИсходящиеДанные.ПлановыеНачисленияРаботниковОрганизаций;
ПлановыеУдержанияРаботниковОрганизаций	= ИсходящиеДанные.ПлановыеУдержанияРаботниковОрганизаций;

ВыборкаДанных	= Новый Массив;

ДлинаСуток = 86400;

Для НомерВыборки = 1 По РаботникиОрганизаций.Количество() Цикл
	РаботникОрганизации = РаботникиОрганизаций[НомерВыборки-1];
	
	Если РаботникОрганизации.ПричинаИзмененияСостояния &lt;&gt; Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
		Продолжить;
	КонецЕсли;
	
	Увольнение = Неопределено;
	Выполнить(Алгоритмы.Увольнение_Описание);
	Увольнение.Вставить("Сотрудник",							РаботникОрганизации.Сотрудник);
	Увольнение.Вставить("ДатаУвольнения",						РаботникОрганизации.Период - ДлинаСуток);
	Увольнение.Вставить("ФизическоеЛицо",						РаботникОрганизации.Сотрудник_Физлицо);
	Увольнение.Вставить("Организация",							РаботникОрганизации.ОбособленноеПодразделение);
	Увольнение.Вставить("ОснованиеУвольнения",					РаботникОрганизации.ПервичныйДокумент_ОснованиеУвольнения);
	Увольнение.Вставить("ПериодРегистрации",					НачалоМесяца(РаботникОрганизации.Период - ДлинаСуток));
	Увольнение.Вставить("ПризнакКомпенсацииУдержанияОтпуска",	"НеИспользовать");
	Увольнение.Вставить("ПорядокВыплаты",						"Зарплата");
	Увольнение.Вставить("ПланируемаяДатаВыплаты",				ДобавитьМесяц(НачалоМесяца(РаботникОрганизации.Период), 1) + 4 * ДлинаСуток);
	Увольнение.Вставить("ДокументРассчитан",					1);
	Увольнение.Вставить("ВидДоговора",							РаботникОрганизации.Сотрудник_ВидДоговора);
	Увольнение.Вставить("Дата",									РаботникОрганизации.ПервичныйДокумент_Дата);
	Увольнение.Вставить("Ответственный",						РаботникОрганизации.ПервичныйДокумент_Ответственный);
	Увольнение.Вставить("Комментарий",							РаботникОрганизации.ПервичныйДокумент_Комментарий);
	
	ПлановыеНачисленияСотрудника = ПлановыеНачисленияРаботниковОрганизаций.НайтиСтроки(Новый Структура("Сотрудник", РаботникОрганизации.Сотрудник));
	Если ПлановыеНачисленияСотрудника.Количество() &lt;&gt; 0 Тогда
		МассивПрекращенныхНачислений = Новый Массив;
		
		ПлановыеНачисления = Неопределено;
		Выполнить(Алгоритмы.ПлановыеНачисления_Описание);
		Для Номер = 1 По ПлановыеНачисленияСотрудника.Количество() Цикл
			ПлановоеНачислениеСотрудника = ПлановыеНачисленияСотрудника[Номер-1];
			
			Начисление			= ПлановоеНачислениеСотрудника["ВидРасчета"];
			Ссылка				= Начисление["Ссылка"];
			СпособРасчета		= Начисление["СпособРасчета"];
			
			Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
			Или (СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой) Тогда
				Продолжить;
			КонецЕсли;
			
			//ПериодЗавершения	= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачислениеСотрудника, "ПериодЗавершения");
			//Если (ЗначениеЗаполнено(ПериодЗавершения) = 1) И (ПериодЗавершения - ДлинаСуток &lt; РаботникОрганизации.Период) Тогда
			//	Продолжить;
			//КонецЕсли;
			
			Если МассивПрекращенныхНачислений.Найти(Ссылка) &lt;&gt; Неопределено Тогда
				Продолжить;
			КонецЕсли;
			МассивПрекращенныхНачислений.Добавить(Ссылка);
			
			ПлановоеНачисление = ПлановыеНачисления.Добавить();
			ПлановоеНачисление.Сотрудник			= РаботникОрганизации.Сотрудник;
			ПлановоеНачисление.Организация			= РаботникОрганизации.ОбособленноеПодразделение;
			ПлановоеНачисление.Начисление			= Начисление;
			ПлановоеНачисление.Период				= РаботникОрганизации.Период;
			ПлановоеНачисление.ФизическоеЛицо		= РаботникОрганизации.Сотрудник_Физлицо;
			ПлановоеНачисление.Используется			= 0;
		КонецЦикла;
		Увольнение.Вставить("ПлановыеНачисления",	ПлановыеНачисления);
	КонецЕсли;
	
	ПлановыеУдержанияСотрудника = ПлановыеУдержанияРаботниковОрганизаций.НайтиСтроки(Новый Структура("ФизЛицо, Организация", РаботникОрганизации.Сотрудник_Физлицо, РаботникОрганизации.Организация));
	Если ПлановыеУдержанияСотрудника.Количество() &lt;&gt; 0 Тогда
		МассивПрекращенныхУдержаний = Новый Массив;
		
		ПлановыеУдержания = Неопределено;
		Выполнить(Алгоритмы.ПлановыеУдержания_Описание);
		Для Номер = 1 По ПлановыеУдержанияСотрудника.Количество() Цикл
			ПлановоеУдержаниеСотрудника = ПлановыеУдержанияСотрудника[Номер-1];
			
			Удержание			= ПлановоеУдержаниеСотрудника["ВидРасчета"];
			СпособРасчета		= Удержание["СпособРасчета"];
			ДокументОснование	= ПлановоеУдержаниеСотрудника["ДокументОснование"];
			
			Если (ЗначениеЗаполнено(ДокументОснование) = 1) И (ТипЗнч(ДокументОснование) &lt;&gt; Тип("ДокументСсылка.ИсполнительныйЛист")) Тогда
				Продолжить;
			КонецЕсли;
			
			//ПериодЗавершения	= ОбъектыПереносаДанных.Структура_Получить(ПлановоеНачислениеСотрудника, "ПериодЗавершения");
			//Если (ЗначениеЗаполнено(ПериодЗавершения) = 1) И (ПериодЗавершения - ДлинаСуток &lt; РаботникОрганизации.Период) Тогда
			//	Продолжить;
			//КонецЕсли;
			
			Если МассивПрекращенныхУдержаний.Найти(Ссылка) &lt;&gt; Неопределено Тогда
				Продолжить;
			КонецЕсли;
			МассивПрекращенныхУдержаний.Добавить(Ссылка);
			
			ПлановоеУдержание = ПлановыеУдержания.Добавить();
			ПлановоеУдержание.ФизическоеЛицо		= РаботникОрганизации.Сотрудник_Физлицо;
			ПлановоеУдержание.Организация			= РаботникОрганизации.ОбособленноеПодразделение;
			ПлановоеУдержание.Удержание				= Удержание;
			ПлановоеУдержание.ДокументОснование		= ДокументОснование;
			ПлановоеУдержание.Период				= РаботникОрганизации.Период;
			ПлановоеУдержание.Используется			= 0;
		КонецЦикла;
		Увольнение.Вставить("ПлановыеУдержания",	ПлановыеУдержания);
	КонецЕсли;
	
	ВыборкаДанных.Добавить(Увольнение);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Удержания_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ПлановыеУдержанияРаботниковОрганизаций = ИсходящиеДанные.ПлановыеУдержания;
//УчетнаяПолитикаПоНДФЛ = ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "УчетнаяПолитикаПоНДФЛ");

//ВыборкаДанныхДСВ	    = Новый Массив;
ВыборкаДанныхПрофвзносы	= Новый Массив;
ВыборкаДанныхПрочие	    = Новый Массив;

ДлинаСуток = 86400;

ДокументыОрганизации = Новый ТаблицаЗначений;
ДокументыОрганизации.Колонки.Добавить("Организация");
ДокументыОрганизации.Колонки.Добавить("Удержание");
ДокументыОрганизации.Колонки.Добавить("Действие");
ДокументыОрганизации.Колонки.Добавить("ДатаНачала");
ДокументыОрганизации.Колонки.Добавить("ДокументОснованиеКлюч");
ДокументыОрганизации.Колонки.Добавить("Контрагент");
ДокументыОрганизации.Колонки.Добавить("ФизическоеЛицо");
ДокументыОрганизации.Колонки.Добавить("Показатели");
//ДокументыОрганизации.Колонки.Добавить("НеПредоставлятьСоциальныйВычетУРаботодателя");
ДокументыОрганизации.Колонки.Добавить("ВидУдержания");

Для Сч = 1 По ПлановыеУдержанияРаботниковОрганизаций.Количество() Цикл
	
	СтрокаТаблицы = ПлановыеУдержанияРаботниковОрганизаций[Сч-1];
	
	Организация = СтрокаТаблицы.Организация;
	ФизЛицо     = СтрокаТаблицы.ФизЛицо;
	Удержание   = СтрокаТаблицы.ВидРасчета;
	
	Ссылка			= Удержание.Ссылка;
	СпособРасчета	= Удержание.СпособРасчета;
	//НеПредоставлятьСоциальныйВычетУРаботодателя = 0;
	
	НачислениеУдержаниеСсылка	= Удержание;
	ФормулаРасчета				= "";
	
	Показатели = Неопределено;
	Выполнить(Алгоритмы.НачислениеУдержание_Показатели);
	//Показатели = Новый Массив;
	
	ВидУдержания = 3;
	
	ПлановыеУдержанияСотрудника = СтрокаТаблицы.ПлановыеУдержания;
	
	ТаблицаУдержанияСотрудника = Новый ТаблицаЗначений;
	ТаблицаУдержанияСотрудника.Колонки.Добавить("Организация");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("Удержание");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("Действие");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("ДатаНачала");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("ДокументОснованиеКлюч");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("Контрагент");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("Физлицо");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("Показатели");
	//ТаблицаУдержанияСотрудника.Колонки.Добавить("НеПредоставлятьСоциальныйВычетУРаботодателя");
	ТаблицаУдержанияСотрудника.Колонки.Добавить("ВидУдержания");
	
	Для НомерВыборки = 1 По ПлановыеУдержанияСотрудника.Количество() Цикл
		
		ПлановоеУдержаниеСотрудника = ПлановыеУдержанияСотрудника[НомерВыборки-1];
		
		Контрагент = ПлановоеУдержаниеСотрудника.Контрагент;
		
		Если (НомерВыборки = 1) И (ПлановоеУдержаниеСотрудника.Действие = Перечисления.ВидыДействияСНачислением.Прекратить) Тогда
			Продолжить;
		ИначеЕсли НомерВыборки = 1 Тогда	
			Действие = "1Начать";
			ДокументОснованиеКлюч = "";
		Иначе
			Если ПлановоеУдержаниеСотрудника.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
				Действие = "3Прекратить";
			ИначеЕсли ПлановоеУдержаниеСотрудника.Действие = Перечисления.ВидыДействияСНачислением.Начать Тогда
				Действие = "1Начать";
				ДокументОснованиеКлюч = "";
			Иначе
				Действие = "2Изменить";
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаУдержанияСотрудника.Добавить();
		НоваяСтрока.ВидУдержания  = ВидУдержания;
		НоваяСтрока.Организация   = Организация;
		НоваяСтрока.Удержание     = Удержание;
		НоваяСтрока.Действие      = Действие;
		НоваяСтрока.ДатаНачала	  = НачалоМесяца(ПлановоеУдержаниеСотрудника.Период);
		Если ЗначениеЗаполнено(ДокументОснованиеКлюч)=0 Тогда
			ДокументОснованиеКлюч = НоваяСтрока.ДатаНачала;
		КонецЕсли;
		НоваяСтрока.ДокументОснованиеКлюч = ДокументОснованиеКлюч;
		НоваяСтрока.Контрагент    = Контрагент;
		НоваяСтрока.ФизЛицо       = ФизЛицо;
		//НоваяСтрока.НеПредоставлятьСоциальныйВычетУРаботодателя = НеПредоставлятьСоциальныйВычетУРаботодателя;
		
		ЗначенияПоказателей = Новый ТаблицаЗначений;
		ЗначенияПоказателей.Колонки.Добавить("Показатель");
		ЗначенияПоказателей.Колонки.Добавить("Значение");
		ЗначенияПоказателей.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
		
		СмещениеПоказателя = 0;
		Для НомерПоказателя = 1 По Показатели.Количество() Цикл
			СтрокаПоказателя = Показатели[НомерПоказателя-1];
			Если СтрокаПоказателя.ЗапрашиватьПриВводе &lt;&gt; 1 Тогда
				СмещениеПоказателя = СмещениеПоказателя + 1;
				Продолжить;
			КонецЕсли;
			ЗначениеПоказателя = ЗначенияПоказателей.Добавить();
			ЗначениеПоказателя.Показатель						= СтрокаПоказателя.Показатель;
			ЗначениеПоказателя.Значение							= ПлановоеУдержаниеСотрудника["Показатель" + Строка(НомерПоказателя - СмещениеПоказателя)];
		КонецЦикла;
		
		НоваяСтрока.Показатели = ЗначенияПоказателей;
		
		Если ЗначениеЗаполнено(ПлановоеУдержаниеСотрудника.ПериодЗавершения) = 1 Тогда
			ДобавитьСтроку = 0;
			Если ПлановоеУдержаниеСотрудника.ДействиеЗавершения = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
				Действие = "3Прекратить";
				ДобавитьСтроку = 1;
			ИначеЕсли ПлановоеУдержаниеСотрудника.ДействиеЗавершения = Перечисления.ВидыДействияСНачислением.Изменить Тогда	
				Действие = "2Изменить";
				ДобавитьСтроку = 1;
			КонецЕсли;
			Если ДобавитьСтроку = 1 Тогда
				
				ПериодЗавершения = НачалоМесяца(ПлановоеУдержаниеСотрудника.ПериодЗавершения + ДлинаСуток);
				Если НачалоМесяца(ПлановоеУдержаниеСотрудника.Период) = ПериодЗавершения Тогда
					ПериодЗавершения = КонецМесяца(ПериодЗавершения)  + ДлинаСуток;	
				КонецЕсли;	
				
				НоваяСтрока = ТаблицаУдержанияСотрудника.Добавить();
				НоваяСтрока.Организация   = Организация;
				НоваяСтрока.Удержание     = Удержание;
				НоваяСтрока.Действие      = Действие;
				НоваяСтрока.ДатаНачала	  = ПериодЗавершения;
				НоваяСтрока.ДокументОснованиеКлюч = ДокументОснованиеКлюч;
				НоваяСтрока.Контрагент    = Контрагент;
				НоваяСтрока.ФизЛицо       = ФизЛицо;
				//НоваяСтрока.НеПредоставлятьСоциальныйВычетУРаботодателя = НеПредоставлятьСоциальныйВычетУРаботодателя;
				НоваяСтрока.ВидУдержания  = ВидУдержания;
				
				ЗначенияПоказателей = Новый ТаблицаЗначений;
				ЗначенияПоказателей.Колонки.Добавить("Показатель");
				ЗначенияПоказателей.Колонки.Добавить("Значение");
				ЗначенияПоказателей.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
				
				СмещениеПоказателя = 0;
				Для НомерПоказателя = 1 По Показатели.Количество() Цикл
					СтрокаПоказателя = Показатели[НомерПоказателя-1];
					Если СтрокаПоказателя.ЗапрашиватьПриВводе &lt;&gt; 1 Тогда
						СмещениеПоказателя = СмещениеПоказателя + 1;
						Продолжить;
					КонецЕсли;
					ЗначениеПоказателя = ЗначенияПоказателей.Добавить();
					ЗначениеПоказателя.Показатель						= СтрокаПоказателя.Показатель;
					ЗначениеПоказателя.Значение							= ПлановоеУдержаниеСотрудника["Показатель" + Строка(НомерПоказателя - СмещениеПоказателя) + "Завершения"];
				КонецЦикла;
				
				НоваяСтрока.Показатели = ЗначенияПоказателей;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаУдержанияСотрудника.Сортировать("ДатаНачала,Действие");
	ПроверитьПрекращение = 1;
	ПерваяСтрока = 1;
	ПредыдущаяДатаНачала = "";
	Для НомерВыборки = 1 По ТаблицаУдержанияСотрудника.Количество() Цикл
		
		СтрокаВыборки = ТаблицаУдержанияСотрудника[НомерВыборки-1];
		ТекущееДействие = СтрокаВыборки.Действие;
		
		Если ПредыдущаяДатаНачала = СтрокаВыборки.ДатаНачала Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ПроверитьПрекращение = 1) И (ТекущееДействие = "3Прекратить") Тогда
			Продолжить;
		ИначеЕсли (ТекущееДействие = "3Прекратить") Тогда
			ПроверитьПрекращение = 1;
		Иначе
			ПроверитьПрекращение = 0;
		КонецЕсли;
		
		Если ПерваяСтрока = 1 Тогда
			ПерваяСтрока = 0;
			ТекущийДокументОснованиеКлюч = "";
			ТекущееДействие = "1Начать";
			ПредыдущаяДатаНачала = СтрокаВыборки.ДатаНачала;
			ДокументОснованиеКлюч = СтрокаВыборки.ДатаНачала;
		Иначе
			ТекущийДокументОснованиеКлюч = ДокументОснованиеКлюч;
			Если (ТекущееДействие = "3Прекратить") Тогда
				// следующая строка должна быть началом
				ПерваяСтрока = 1;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = ДокументыОрганизации.Добавить();
		НоваяСтрока.Организация = СтрокаВыборки.Организация;
		НоваяСтрока.Удержание   = СтрокаВыборки.Удержание;
		НоваяСтрока.Действие    = ТекущееДействие;
		НоваяСтрока.ДатаНачала  = СтрокаВыборки.ДатаНачала;
		НоваяСтрока.ДокументОснованиеКлюч = ТекущийДокументОснованиеКлюч;
		НоваяСтрока.Контрагент = СтрокаВыборки.Контрагент;
		НоваяСтрока.ФизическоеЛицо = СтрокаВыборки.Физлицо;
		НоваяСтрока.Показатели = СтрокаВыборки.Показатели;
		//НоваяСтрока.НеПредоставлятьСоциальныйВычетУРаботодателя = СтрокаВыборки.НеПредоставлятьСоциальныйВычетУРаботодателя;
		НоваяСтрока.ВидУдержания = СтрокаВыборки.ВидУдержания;
		
	КонецЦикла;
	
КонецЦикла;

ДокументыОрганизации.Сортировать("Организация,Удержание,Действие,ДатаНачала");
ВыборкаДокументов = "";
ТекущаяОрганизация = "";
ТекущееУдержание = "";
ТекущееДействие = "";
ТекущееДействиеДатаНачала = "";
НовыйДокумент = Новый Структура;
НоваяТаблицаУдержания = Новый ТаблицаЗначений;
НоваяТаблицаПоказатели = Новый ТаблицаЗначений;
Для Сч = 1 По ДокументыОрганизации.Количество() Цикл
	
	СтрокаВыборки = ДокументыОрганизации[Сч-1]; 
	
	Организация = СтрокаВыборки.Организация;
	Удержание = СтрокаВыборки.Удержание;
	Действие = Сред(СтрокаВыборки.Действие,2);
	ДействиеДатаНачала = СтрокаВыборки.ДатаНачала;
	Контрагент = СтрокаВыборки.Контрагент;
	Показатели = СтрокаВыборки.Показатели;
	ВидУдержания = СтрокаВыборки.ВидУдержания;
	
	Если (Организация &lt;&gt; ТекущаяОрганизация) Или (Удержание &lt;&gt; ТекущееУдержание) Или (Действие &lt;&gt; ТекущееДействие) Или (ДействиеДатаНачала &lt;&gt; ТекущееДействиеДатаНачала) Тогда
		
		Если ТекущаяОрганизация &lt;&gt; "" Тогда
			// добавим в выборку документ
			НовыйДокумент.Вставить("Удержания", НоваяТаблицаУдержания);
			НовыйДокумент.Вставить("Показатели", НоваяТаблицаПоказатели);
			ВыборкаДокументов.Добавить(НовыйДокумент);
		КонецЕсли;
		
		НовыйДокумент = 1;
		ТекущаяОрганизация = Организация;
		ТекущееУдержание = Удержание;
		ТекущееДействие = Действие;
		ТекущееДействиеДатаНачала = ДействиеДатаНачала;
		
		НовыйДокумент = Новый Структура;
		НовыйДокумент.Вставить("Организация",	Организация);
		НовыйДокумент.Вставить("Удержание",		Удержание);
		НовыйДокумент.Вставить("Действие",		Действие);
		НовыйДокумент.Вставить("ДатаНачала",		ДействиеДатаНачала);
		НовыйДокумент.Вставить("Дата",		    ДействиеДатаНачала);
		НовыйДокумент.Вставить("ДатаОкончания",  "");
		
		ВыборкаДокументов = ВыборкаДанныхПрочие;
		НовыйДокумент.Вставить("Контрагент", Контрагент);
		
		ИдентификаторСтрокиВидаРасчета = 1;
		НоваяТаблицаУдержания = Новый ТаблицаЗначений;
		НоваяТаблицаУдержания.Колонки.Добавить("ФизическоеЛицо");
		НоваяТаблицаУдержания.Колонки.Добавить("Размер");
		НоваяТаблицаУдержания.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
		
		НоваяСтрокаТаблицаУдержания = НоваяТаблицаУдержания.Добавить();
		НоваяСтрокаТаблицаУдержания.ФизическоеЛицо = СтрокаВыборки.ФизическоеЛицо;
		НоваяСтрокаТаблицаУдержания.Размер = 0;
		НоваяСтрокаТаблицаУдержания.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
		
		НоваяТаблицаПоказатели = Новый ТаблицаЗначений;
		НоваяТаблицаПоказатели.Колонки.Добавить("Показатель");
		НоваяТаблицаПоказатели.Колонки.Добавить("Значение");
		НоваяТаблицаПоказатели.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
		
		Для СчПоказателей = 1 По Показатели.Количество() Цикл
			СтрокаПоказатель = Показатели[СчПоказателей-1];
			НоваяСтрокаТаблицаПоказатели = НоваяТаблицаПоказатели.Добавить();
			НоваяСтрокаТаблицаПоказатели.Показатель = СтрокаПоказатель.Показатель;
			НоваяСтрокаТаблицаПоказатели.Значение = СтрокаПоказатель.Значение;
			НоваяСтрокаТаблицаПоказатели.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
		КонецЦикла;
		
		Если Действие &lt;&gt; "Начать" Тогда
			
			ДокументОснование = Новый Структура;
			ДокументОснование.Вставить("Организация",	Организация);
			ДокументОснование.Вставить("Удержание",		Удержание);
			ДокументОснование.Вставить("ДатаНачала",	СтрокаВыборки.ДокументОснованиеКлюч);
			
			НовыйДокумент.Вставить("ДокументОснование", ДокументОснование);
			
		КонецЕсли;
		
	Иначе
		
		ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета + 1;
		
		НоваяСтрокаТаблицаУдержания = НоваяТаблицаУдержания.Добавить();
		НоваяСтрокаТаблицаУдержания.ФизическоеЛицо = СтрокаВыборки.ФизическоеЛицо;
		НоваяСтрокаТаблицаУдержания.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
		
		Для СчПоказателей = 1 По Показатели.Количество() Цикл
			СтрокаПоказатель = Показатели[СчПоказателей-1];
			НоваяСтрокаТаблицаПоказатели = НоваяТаблицаПоказатели.Добавить();
			НоваяСтрокаТаблицаПоказатели.Показатель = СтрокаПоказатель.Показатель;
			НоваяСтрокаТаблицаПоказатели.Значение = СтрокаПоказатель.Значение;
			НоваяСтрокаТаблицаПоказатели.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
		КонецЦикла;
		
	КонецЕсли;
	
КонецЦикла;

Если ТекущаяОрганизация &lt;&gt; "" Тогда
	// добавим в выборку документ
	НовыйДокумент.Вставить("Удержания", НоваяТаблицаУдержания);
	НовыйДокумент.Вставить("Показатели", НоваяТаблицаПоказатели);
	ВыборкаДокументов.Добавить(НовыйДокумент);
КонецЕсли;

//Для Сч=1 По ОбъектыПереносаДанных.Массив_Количество(ВыборкаДанныхДСВ)Цикл
//	ВыгрузитьПоПравилу(ОбъектыПереносаДанных.Массив_Получить(ВыборкаДанныхДСВ,Сч), , , , "УдержаниеДобровольныхСтраховыхВзносов");
//КонецЦикла;
Для Сч=1 По ВыборкаДанныхПрофвзносы.Количество() Цикл
	ВыгрузитьПоПравилу(ВыборкаДанныхПрофвзносы[Сч-1], , , , "УдержаниеПрофсоюзныхВзносов");
КонецЦикла;
Для Сч=1 По ВыборкаДанныхПрочие.Количество() Цикл
	ВыгрузитьПоПравилу(ВыборкаДанныхПрочие[Сч-1], , , , "ПостоянноеУдержаниеВПользуТретьихЛиц");
КонецЦикла;</Текст>
			</Алгоритм>
			<Алгоритм Имя="УсловияДоговораЗаймаСотруднику_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>УсловияДоговораЗаймаСотруднику = Новый ТаблицаЗначений;
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("ДоговорЗайма");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("Организация");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("Период");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("Сумма");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("ДатаНачалаПогашения");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("ДатаОкончания");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("РазмерПлатежа");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("РазмерПогашения");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("ОграничениеПлатежа");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("ПроцентнаяСтавка");
УсловияДоговораЗаймаСотруднику.Колонки.Добавить("МатериальнаяВыгодаОблагаетсяНДФЛ");</Текст>
			</Алгоритм>
			<Алгоритм Имя="УсловияОплатыОтпускаПоУходуЗаРебенком_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>УсловияОплатыОтпускаПоУходуЗаРебенком = Новый ТаблицаЗначений;
УсловияОплатыОтпускаПоУходуЗаРебенком.Колонки.Добавить("Сотрудник");
УсловияОплатыОтпускаПоУходуЗаРебенком.Колонки.Добавить("ФизическоеЛицо");
УсловияОплатыОтпускаПоУходуЗаРебенком.Колонки.Добавить("Организация");
УсловияОплатыОтпускаПоУходуЗаРебенком.Колонки.Добавить("Период");
УсловияОплатыОтпускаПоУходуЗаРебенком.Колонки.Добавить("ДатаНачалаСобытия");
УсловияОплатыОтпускаПоУходуЗаРебенком.Колонки.Добавить("СтраховойСлучай");</Текст>
			</Алгоритм>
			<Алгоритм Имя="УсловияУдержанияПоИЛ_Описание" ИспользуетсяПриЗагрузке="false">
				<Текст>ТЗ = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ИсполнительныйДокумент");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Период");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "СпособРасчета");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ВидБазы");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Процент");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Сумма");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ПрожиточныйМинимум");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Предел");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "УчитыватьБольничныеЛисты");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Получатель");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ПлатежныйАгент");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ТарифПлатежногоАгента");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "ФизическоеЛицо");
ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТЗ, "Организация");

Субконто = ТЗ;</Текст>
			</Алгоритм>
			<Алгоритм Имя="УченыеЗванияФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаУченыеЗванияФизическихЛиц	= ИсходящиеДанные.УченыеЗванияФизическихЛиц;

ВыборкаДанных	= Новый Массив;

Для Номер = 1 По ТаблицаУченыеЗванияФизическихЛиц.Количество() Цикл
	УченоеЗвание = ТаблицаУченыеЗванияФизическихЛиц[Номер-1];	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(УченоеЗвание));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="УченыеСтепениФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>
ТаблицаУченыеСтепениФизическихЛиц	= ИсходящиеДанные.УченыеСтепениФизическихЛиц;

ВыборкаДанных	= Новый Массив;

Для Номер = 1 По ТаблицаУченыеСтепениФизическихЛиц.Количество() Цикл
	УченаяСтепень = ТаблицаУченыеСтепениФизическихЛиц[Номер-1];
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(УченаяСтепень));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="УчетнаяПолитикаОрганизаций_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаУчетнаяПолитикаОрганизаций			= ИсходящиеДанные.УчетнаяПолитикаОрганизаций;

ВыборкаДанных	= Новый Массив;

Для Номер = 1 По ТаблицаУчетнаяПолитикаОрганизаций.Количество() Цикл
	УчетнаяПолитикаОрганизаций = ТаблицаУчетнаяПолитикаОрганизаций[Номер-1];
	
	//УчетнаяПолитикаОрганизаций.ПлательщикЕНВД	= УчетнаяПолитикаОрганизаций.ОрганизацияЯвляетсяПлательщикомЕНВД;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(УчетнаяПолитикаОрганизаций));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="УчетнаяПолитикаПоНДФЛ_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаУчетнаяПолитикаПоНДФЛ	= ОбъектыПереносаДанных.Структура_Получить(ИсходящиеДанные, "УчетнаяПолитикаПоНДФЛ");

ВыборкаДанных	= ОбъектыПереносаДанных.НовыйОбъект("Массив");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаУчетнаяПолитикаПоНДФЛ, "ГоловнаяОрганизация");
Для Номер = 1 По ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаУчетнаяПолитикаПоНДФЛ) Цикл
	УчетнаяПолитикаПоНДФЛ = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаУчетнаяПолитикаПоНДФЛ, Номер);
	
	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация	= УчетнаяПолитикаПоНДФЛ.Организация;
	
	ОбъектыПереносаДанных.Массив_Добавить(ВыборкаДанных, ОбъектыПереносаДанных.СтрокаТаблицыЗначенийВСтруктуру(УчетнаяПолитикаПоНДФЛ));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ФактическиеОтпуска_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ВыборкаДанных = Новый Массив;

Для СчРезультатов = 1 По ИсходящиеДанные.Количество() Цикл 
	СтрокаТаблицыРезультатов = ИсходящиеДанные[СчРезультатов-1];
	ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
	ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
	
	ФактическиеОтпускаОрганизаций			= СтрокаТаблицыРезультатов.ФактическиеОтпускаОрганизаций;
	
	ФактическиеОтпуска = Новый ТаблицаЗначений;
	ФактическиеОтпуска.Колонки.Добавить("Сотрудник");
	ФактическиеОтпуска.Колонки.Добавить("ВидЕжегодногоОтпуска");
	ФактическиеОтпуска.Колонки.Добавить("ДатаНачала");
	//ФактическиеОтпуска.Колонки.Добавить("ДатаОкончания");
	ФактическиеОтпуска.Колонки.Добавить("РабочийПериодС");
	ФактическиеОтпуска.Колонки.Добавить("РабочийПериодПо");
	ФактическиеОтпуска.Колонки.Добавить("Количество");
	//ФактическиеОтпуска.Колонки.Добавить("Компенсация");
	ФактическиеОтпуска.Колонки.Добавить("ДатаРегистрации");
	ФактическиеОтпуска.Колонки.Добавить("Период");
	
	Для Сч = 1 По ФактическиеОтпускаОрганизаций.Количество() Цикл 
		СтрокаТаблицы = ФактическиеОтпускаОрганизаций[Сч-1];
		
		НоваяСтрока = ФактическиеОтпуска.Добавить();
		НоваяСтрока.Сотрудник				= СтрокаТаблицы.Сотрудник;
		НоваяСтрока.ВидЕжегодногоОтпуска	= СтрокаТаблицы.ВидЕжегодногоОтпуска;
		НоваяСтрока.ДатаНачала				= СтрокаТаблицы.Период;
		//НоваяСтрока.ДатаОкончания			= СтрокаТаблицы.ДатаОкончания);
		НоваяСтрока.РабочийПериодС			= СтрокаТаблицы.РабочийПериодС;
		НоваяСтрока.РабочийПериодПо			= СтрокаТаблицы.РабочийПериодПо;
		НоваяСтрока.Количество				= СтрокаТаблицы.Количество;
		//НоваяСтрока.Компенсация				= СтрокаТаблицы.Компенсация;
		НоваяСтрока.ДатаРегистрации			= СтрокаТаблицы.ДатаРегистрации;
		НоваяСтрока.Период					= СтрокаТаблицы.Период;
	КонецЦикла;
	
	ВыборкаПоДокументу = Новый Структура;
	ВыборкаПоДокументу.Вставить("Номер",				"ОСО");
	ВыборкаПоДокументу.Вставить("Организация",			ОрганизацияОтбор);
	ВыборкаПоДокументу.Вставить("ПериодРегистрации",	ПериодОтбор);
	ВыборкаПоДокументу.Вставить("ФактическиеОтпуска",	ФактическиеОтпуска);
	ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",	СтрокаТаблицыРезультатов.НеОчищатьДокумент);
	
	ВыборкаДанных.Добавить(ВыборкаПоДокументу);
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ФИОФизическихЛиц_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаФИОФизическихЛиц	= ИсходящиеДанные.ФИОФизическихЛиц;

ВыборкаДанных	= Новый Массив;

ТаблицаФИОФизическихЛиц.Колонки.Добавить("ФизическоеЛицо");
Для Номер = 1 По ТаблицаФИОФизическихЛиц.Количество() Цикл
	ФИО = ТаблицаФИОФизическихЛиц[Номер-1];
	
	ФИО.ФизическоеЛицо	= ФИО.ФизЛицо;
	
	ВыборкаДанных.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ФИО));
КонецЦикла;</Текст>
				<Параметры>Отказ, ИмяПКО, Правило, ИсходящиеДанные, ВыборкаДанных</Параметры>
			</Алгоритм>
			<Алгоритм Имя="Формула_Преобразовать" ИспользуетсяПриЗагрузке="false">
				<Текст>ИсходнаяСтрока		= ФормулаРасчета;

Если ЗначениеЗаполнено(ИсходнаяСтрока) Тогда

	СтрокиЗамены = Новый Структура;
	СтрокиЗамены.Вставить("ТарифнаяСтавкаМесячная","Оклад");
	СтрокиЗамены.Вставить("ВремяВКалендарныхДнях","КалендарныеДни");
	СтрокиЗамены.Вставить("КалендарныхДнейВмесяце","КалендарныеДниМесяца");
	СтрокиЗамены.Вставить("ОтработаноВремениВДнях","ОтработаноДней");
	СтрокиЗамены.Вставить("ОтработаноВремениВЧасах","ОтработаноЧасов");
	СтрокиЗамены.Вставить("СдельнаяВыработка","СдельныйЗаработок");

	ПодстрокаСимволов = "+,-,*,/,), ";

	Для каждого КлючИЗначение Из СтрокиЗамены Цикл
		
		ПодстрокаПоиска = СОКРЛП(КлючИЗначение.Ключ);
		ПодстрокаЗамены = СОКРЛП(КлючИЗначение.Значение);
		ДлинаПодстрокиПоиска = СтрДлина(ПодстрокаПоиска);
		ВременнаяПодстрока = "";
		Для Сч = 1 По ДлинаПодстрокиПоиска Цикл
			ВременнаяПодстрока = ВременнаяПодстрока + "#";
		КонецЦикла;
		
		ЧислоВхождений = СтрЧислоВхождений(ИсходнаяСтрока, ПодстрокаПоиска);
		// ПЕРЕПИСАТЬ ПОЛУЧАЕТСЯ ЗАЦИКЛИВАНИЕ при вызове из НачислениеУдержание_Показатели
		Для Сч = 1 По ЧислоВхождений Цикл
			
			Позиция = Найти(ИсходнаяСтрока, ПодстрокаПоиска);	
			Если Позиция &gt; 0 Тогда
				
				СимволПослеПодстрокиПоиска = Сред(СОКРЛП(ИсходнаяСтрока), Позиция + ДлинаПодстрокиПоиска, 1);
				Если Найти(ПодстрокаСимволов, СимволПослеПодстрокиПоиска) &gt; 0 Тогда
					НоваяПодсторка = ПодстрокаЗамены;
				Иначе
					НоваяПодсторка = ВременнаяПодстрока;
				КонецЕсли;
				
				ИсходнаяСтрока = Сред(ИсходнаяСтрока, 1, Позиция - 1) + НоваяПодсторка + Сред(ИсходнаяСтрока, Позиция + ДлинаПодстрокиПоиска);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ИсходнаяСтрока = СтрЗаменить(ИсходнаяСтрока,ВременнаяПодстрока,ПодстрокаПоиска);
		
	КонецЦикла;
	
КонецЕсли;

ФормулаРасчета = ИсходнаяСтрока;</Текст>
			</Алгоритм>
		</Группа>
		<Алгоритм Имя="ГрафикиРаботы_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>ЕстьСуммированныйУчет = Ложь;
ЕстьРаботаНаНеполнойСтавке = Ложь;

Если ПараметрыАлгоритма.Свойство("ЕстьРаботаНаНеполнойСтавке") Тогда
	ЕстьРаботаНаНеполнойСтавке = ПараметрыАлгоритма.ЕстьРаботаНаНеполнойСтавке;
КонецЕсли;

//ГрафикиРаботыМассив = Новый Массив;

ТаблицаГрафикиРаботы = Новый ТаблицаЗначений;
ТаблицаГрафикиРаботы.Колонки.Добавить("Ссылка");
ТаблицаГрафикиРаботы.Колонки.Добавить("Наименование");
ТаблицаГрафикиРаботы.Колонки.Добавить("ВидГрафика");
ТаблицаГрафикиРаботы.Колонки.Добавить("СуммированныйУчетРабочегоВремени");
ТаблицаГрафикиРаботы.Колонки.Добавить("ПервыйВыходной");
ТаблицаГрафикиРаботы.Колонки.Добавить("ВторойВыходной");
ТаблицаГрафикиРаботы.Колонки.Добавить("ДатаОтсчета");
ТаблицаГрафикиРаботы.Колонки.Добавить("ДлительностьРабочейНедели");
ТаблицаГрафикиРаботы.Колонки.Добавить("СокращенноеРабочееВремя");
ТаблицаГрафикиРаботы.Колонки.Добавить("ГрафикПолногоРабочегоВремени");
ТаблицаГрафикиРаботы.Колонки.Добавить("НачалоДневныхЧасов");
ТаблицаГрафикиРаботы.Колонки.Добавить("НачалоВечернихЧасов");
ТаблицаГрафикиРаботы.Колонки.Добавить("НачалоНочныхЧасов");
ТаблицаГрафикиРаботы.Колонки.Добавить("СокращеннаяРабочаяНеделя");
ТаблицаГрафикиРаботы.Колонки.Добавить("НеполныйРабочийДень");
ТаблицаГрафикиРаботы.Колонки.Добавить("УчитыватьПраздники");
//ТаблицаГрафикиРаботы.Колонки.Добавить("УчитыватьПредпраздничныеДни");
ТаблицаГрафикиРаботы.Колонки.Добавить("УчитыватьВечерниеЧасы");
ТаблицаГрафикиРаботы.Колонки.Добавить("УчитыватьНочныеЧасы");
ТаблицаГрафикиРаботы.Колонки.Добавить("Смены");
ТаблицаГрафикиРаботы.Колонки.Добавить("ПериодыСмены");
ТаблицаГрафикиРаботы.Колонки.Добавить("ПометкаУдаления");

Пока Выборка.Следующий() Цикл
	
	СтрокаГрафикиРаботы = ТаблицаГрафикиРаботы.Добавить();
	
	Смены = Новый ТаблицаЗначений;
	Смены.Колонки.Добавить("НомерСтроки");
	Смены.Колонки.Добавить("НомерДня");
	Смены.Колонки.Добавить("Смена");
	СтрокаГрафикиРаботы.Смены = Смены;
	
	ПериодыСмены = Новый ТаблицаЗначений;
	ПериодыСмены.Колонки.Добавить("НомерСтроки");
	ПериодыСмены.Колонки.Добавить("ВремяНачала");
	ПериодыСмены.Колонки.Добавить("ВремяОкончания");
	ПериодыСмены.Колонки.Добавить("ДеньНедели");
	СтрокаГрафикиРаботы.ПериодыСмены = ПериодыСмены; 
	
	ЗаполнитьЗначенияСвойств(СтрокаГрафикиРаботы, Выборка.ГрафикРаботы, , "Смены, ПериодыСмены");
	
	Для Каждого Смена Из Выборка.ГрафикРаботы.Смены Цикл
		ЗаполнитьЗначенияСвойств(СтрокаГрафикиРаботы.Смены.Добавить(), Смена);
	КонецЦикла;
	
	Для Каждого ПериодСмены Из Выборка.ГрафикРаботы.ПериодыСмены Цикл
		ПериодСменыСтрока = СтрокаГрафикиРаботы.ПериодыСмены.Добавить();
		ЗаполнитьЗначенияСвойств(ПериодСменыСтрока, ПериодСмены, , "ДеньНедели");
		Если Не ПериодСмены.ДеньНедели.Пустая() Тогда
			ПериодСменыСтрока.ДеньНедели	= Перечисления.ДниНедели.Индекс(ПериодСмены.ДеньНедели);
		КонецЕсли;
	КонецЦикла;
	
	ЕстьСуммированныйУчет = ЕстьСуммированныйУчет Или СтрокаГрафикиРаботы.СуммированныйУчетРабочегоВремени;
	ЕстьРаботаНаНеполнойСтавке = ЕстьРаботаНаНеполнойСтавке Или (СтрокаГрафикиРаботы.СокращеннаяРабочаяНеделя Или СтрокаГрафикиРаботы.НеполныйРабочийДень);
	
КонецЦикла;

ТаблицаГрафикиРаботы.Колонки.Добавить("ПроизводственныйКалендарь");
ТаблицаГрафикиРаботы.Колонки.Добавить("НеполноеРабочееВремя");
ТаблицаГрафикиРаботы.Колонки.Добавить("СпособЗаполнения");
ТаблицаГрафикиРаботы.Колонки.Добавить("ШаблонЗаполнения");
ТаблицаГрафикиРаботы.Колонки.Добавить("ВидыВремени");
ТаблицаГрафикиРаботы.Колонки.Добавить("ДанныеОРабочихЧасах");
Для каждого ГрафикРаботы Из ТаблицаГрафикиРаботы Цикл
	
	ГрафикРаботы.ШаблонЗаполнения = Новый ТаблицаЗначений;
	ГрафикРаботы.ШаблонЗаполнения.Колонки.Добавить("ДеньВключенВГрафик");
	
	ГрафикРаботы.ДанныеОРабочихЧасах = Новый ТаблицаЗначений;
	ГрафикРаботы.ДанныеОРабочихЧасах.Колонки.Добавить("ВидВремени");
	ГрафикРаботы.ДанныеОРабочихЧасах.Колонки.Добавить("НомерДняЦикла");
	ГрафикРаботы.ДанныеОРабочихЧасах.Колонки.Добавить("Часов");
	
	ГрафикРаботы.ВидыВремени = Новый ТаблицаЗначений;
	ГрафикРаботы.ВидыВремени.Колонки.Добавить("ВидВремени");
	
	ПериодыСменыПоСуткам = Новый ТаблицаЗначений;
	ПериодыСменыПоСуткам.Колонки.Добавить("Ссылка");
	ПериодыСменыПоСуткам.Колонки.Добавить("ВремяНачала");
	ПериодыСменыПоСуткам.Колонки.Добавить("ВремяОкончания");
	Если ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный И ГрафикРаботы.Смены.Количество() &lt;&gt; 0 Тогда
		
		Для каждого Смена Из ГрафикРаботы.Смены Цикл
			
			Для каждого ПериодСмены Из Смена.Смена.ПериодыСмены Цикл
				
				ПериодСменыСуточный = ПериодыСменыПоСуткам.Добавить();
				ПериодСменыСуточный.Ссылка				= Смена.Смена;
				ПериодСменыСуточный.ВремяНачала			= ПериодСмены.ВремяНачала;
				ПериодСменыСуточный.ВремяОкончания		= ?(ПериодСмены.ВремяНачала &gt; ПериодСмены.ВремяОкончания, КонецДня(ПериодСмены.ВремяНачала), ПериодСмены.ВремяОкончания);
				Если ПериодСмены.ВремяНачала &gt; ПериодСмены.ВремяОкончания Тогда
					ПериодСменыСуточный = ПериодыСменыПоСуткам.Добавить();
					ПериодСменыСуточный.Ссылка			= Смена.Смена;
					ПериодСменыСуточный.ВремяНачала		= НачалоДня(Дата(1, 1, 1));
					ПериодСменыСуточный.ВремяОкончания	= ПериодСмены.ВремяОкончания;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе
		
		Для каждого ПериодСмены Из ГрафикРаботы.ПериодыСмены Цикл
			
			ПериодСменыСуточный = ПериодыСменыПоСуткам.Добавить();
			ПериодСменыСуточный.Ссылка				= ПериодСмены.ДеньНедели;
			ПериодСменыСуточный.ВремяНачала			= ПериодСмены.ВремяНачала;
			ПериодСменыСуточный.ВремяОкончания		= ?(ПериодСмены.ВремяНачала &gt; ПериодСмены.ВремяОкончания, КонецДня(ПериодСмены.ВремяНачала), ПериодСмены.ВремяОкончания);
			Если ПериодСмены.ВремяНачала &gt; ПериодСмены.ВремяОкончания Тогда
				ПериодСменыСуточный = ПериодыСменыПоСуткам.Добавить();
				ПериодСменыСуточный.Ссылка			= ПериодСмены.ДеньНедели;
				ПериодСменыСуточный.ВремяНачала		= НачалоДня(Дата(1, 1, 1));
				ПериодСменыСуточный.ВремяОкончания	= ПериодСмены.ВремяОкончания;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	ПериодыСменыПоСуткам.Свернуть("Ссылка, ВремяНачала, ВремяОкончания", "");
	
	Если ГрафикРаботы.НачалоВечернихЧасов &gt; ГрафикРаботы.НачалоНочныхЧасов Тогда // вечерние часы продолжаются и на следующие сутки
		НачалоВечерних1		= ГрафикРаботы.НачалоВечернихЧасов;		// например, 20:00:00
		ОкончаниеВечерних1	= КонецДня(Дата(1, 1, 1));				// 23:59:59
		НачалоВечерних2		= НачалоДня(Дата(1, 1, 1));				// начало дня
		ОкончаниеВечерних2	= ГрафикРаботы.НачалоНочныхЧасов - 1;	// например, 01:59:59
		НачалоНочных1		= НачалоДня(Дата(1, 1, 1));				// не используется
		ОкончаниеНочных1	= НачалоДня(Дата(1, 1, 1));				// не используется
		НачалоНочных2		= ГрафикРаботы.НачалоНочныхЧасов;		// например, 02:00:00
		ОкончаниеНочных2	= ГрафикРаботы.НачалоДневныхЧасов - 1;	// например, 05:59:59
	Иначе
		НачалоВечерних1		= ГрафикРаботы.НачалоВечернихЧасов;		// например, 20:00:00
		ОкончаниеВечерних1	= ГрафикРаботы.НачалоНочныхЧасов - 1;	// например, 21:59:59
		НачалоВечерних2		= НачалоДня(Дата(1, 1, 1));				// не используется
		ОкончаниеВечерних2	= НачалоДня(Дата(1, 1, 1));				// не используется
		НачалоНочных1		= ГрафикРаботы.НачалоНочныхЧасов;		// например, 22:00:00
		ОкончаниеНочных1	= КонецДня(Дата(1, 1, 1));				// 23:59:59
		НачалоНочных2		= НачалоДня(Дата(1, 1, 1));				// начало дня
		ОкончаниеНочных2	= ГрафикРаботы.НачалоДневныхЧасов - 1;	// например, 05:59:59
	КонецЕсли;
	
	ПродолжительностьРабочихСменГрафика = Новый ТаблицаЗначений;
	ПродолжительностьРабочихСменГрафика.Колонки.Добавить("Ссылка");
	ПродолжительностьРабочихСменГрафика.Колонки.Добавить("ЧасовВсего");
	ПродолжительностьРабочихСменГрафика.Колонки.Добавить("ЧасовВечерних");
	ПродолжительностьРабочихСменГрафика.Колонки.Добавить("ЧасовНочных");
	Для каждого ПериодСменыСуточный Из ПериодыСменыПоСуткам Цикл
		
		Результат = Неопределено;
		ВремяНачалаПериода		= ПериодСменыСуточный.ВремяНачала;
		ВремяОкончанияПериода	= ПериодСменыСуточный.ВремяОкончания;
		ВремяНачалаГрафика		= НачалоВечерних1;
		ВремяОкончанияГрафика	= ОкончаниеВечерних1;
		Выполнить(Алгоритмы.ВремяНачалаИОкончанияПоПериоду);
		СменаНачалоВечерних1	= Результат.Начало;
		СменаОкончаниеВечерних1	= Результат.Окончание;
		
		Результат = Неопределено;
		ВремяНачалаПериода		= ПериодСменыСуточный.ВремяНачала;
		ВремяОкончанияПериода	= ПериодСменыСуточный.ВремяОкончания;
		ВремяНачалаГрафика		= НачалоВечерних2;
		ВремяОкончанияГрафика	= ОкончаниеВечерних2;
		Выполнить(Алгоритмы.ВремяНачалаИОкончанияПоПериоду);
		СменаНачалоВечерних2	= Результат.Начало;
		СменаОкончаниеВечерних2	= Результат.Окончание;
		
		Результат = Неопределено;
		ВремяНачалаПериода		= ПериодСменыСуточный.ВремяНачала;
		ВремяОкончанияПериода	= ПериодСменыСуточный.ВремяОкончания;
		ВремяНачалаГрафика		= НачалоНочных1;
		ВремяОкончанияГрафика	= ОкончаниеНочных1;
		Выполнить(Алгоритмы.ВремяНачалаИОкончанияПоПериоду);
		СменаНачалоНочных1		= Результат.Начало;
		СменаОкончаниеНочных1	= Результат.Окончание;
		
		Результат = Неопределено;
		ВремяНачалаПериода		= ПериодСменыСуточный.ВремяНачала;
		ВремяОкончанияПериода	= ПериодСменыСуточный.ВремяОкончания;
		ВремяНачалаГрафика		= НачалоНочных2;
		ВремяОкончанияГрафика	= ОкончаниеНочных2;
		Выполнить(Алгоритмы.ВремяНачалаИОкончанияПоПериоду);
		СменаНачалоНочных2		= Результат.Начало;
		СменаОкончаниеНочных2	= Результат.Окончание;
		
		РабочаяСмена = ПродолжительностьРабочихСменГрафика.Добавить();
		РабочаяСмена.Ссылка			= ПериодСменыСуточный.Ссылка;
		ЧасовВечерних				= ?(СменаНачалоВечерних1 &lt; СменаОкончаниеВечерних1, СменаОкончаниеВечерних1 - СменаНачалоВечерних1, 0)
		+ ?(СменаНачалоВечерних2 &lt; СменаОкончаниеВечерних2, СменаОкончаниеВечерних2 - СменаНачалоВечерних2, 0);
		ЧасовНочных					= ?(СменаНачалоНочных1 &lt; СменаОкончаниеНочных1, СменаОкончаниеНочных1 - СменаНачалоНочных1, 0)
		+ ?(СменаНачалоНочных2 &lt; СменаОкончаниеНочных2, СменаОкончаниеНочных2 - СменаНачалоНочных2, 0);
		РабочаяСмена.ЧасовВсего		= ПериодСменыСуточный.ВремяОкончания - ПериодСменыСуточный.ВремяНачала + ?(ПериодСменыСуточный.ВремяНачала &gt; ПериодСменыСуточный.ВремяОкончания, 86400, 0)
		- ЧасовВечерних - ЧасовНочных; //вычитаем Вечерние и ночные часы чтоб преобразовать "в том числе" в вид "явка + вечерние + ночные"
		РабочаяСмена.ЧасовВечерних	= ЧасовВечерних;
		РабочаяСмена.ЧасовНочных	= ЧасовНочных;
	КонецЦикла;
	ПродолжительностьРабочихСменГрафика.Свернуть("Ссылка", "ЧасовВсего, ЧасовВечерних, ЧасовНочных");
	
	Для каждого РабочаяСмена Из ПродолжительностьРабочихСменГрафика Цикл
		РабочаяСмена.ЧасовВсего		= Окр(РабочаяСмена.ЧасовВсего / 3600);
		РабочаяСмена.ЧасовВечерних	= Окр(РабочаяСмена.ЧасовВечерних / 3600);
		РабочаяСмена.ЧасовНочных	= Окр(РабочаяСмена.ЧасовНочных / 3600);
	КонецЦикла;
	
	
	ГрафикРаботы.ПроизводственныйКалендарь	= "УК";
	ГрафикРаботы.НеполноеРабочееВремя		= ГрафикРаботы.СокращенноеРабочееВремя;
	Если ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Пятидневка Или ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Шестидневка Тогда
		ГрафикРаботы.СпособЗаполнения		= "ПоНеделям";
	Иначе
		ГрафикРаботы.СпособЗаполнения		= "ПоЦикламПроизвольнойДлины";
	КонецЕсли;
	
	Отбор = Новый Структура("Ссылка");
	
	Если ГрафикРаботы.ВидГрафика = Перечисления.ВидыРабочихГрафиков.Сменный И ГрафикРаботы.Смены.Количество()&lt;&gt;0 Тогда
		
		Для каждого ИсходнаяСтрокаСмены Из ГрафикРаботы.Смены Цикл
			
			Отбор.Ссылка = ИсходнаяСтрокаСмены.Смена;
			
			РабочиеСмены = ПродолжительностьРабочихСменГрафика.НайтиСтроки(Отбор);
			Если РабочиеСмены.Количество() = 0 Тогда
				Данные	= "";
			Иначе
				Данные	= РабочиеСмены[0];
			КонецЕсли;
			
			СтрокаТЧ = ГрафикРаботы.ДанныеОРабочихЧасах.Добавить();
			СтрокаТЧ.ВидВремени			= "Явка";
			СтрокаТЧ.НомерДняЦикла		= ИсходнаяСтрокаСмены.НомерДня;   
			СтрокаТЧ.Часов				= ?(Не ЗначениеЗаполнено(Данные), 0, Данные["ЧасовВсего"]);
			Если ГрафикРаботы.УчитыватьВечерниеЧасы Тогда
				СтрокаТЧ = ГрафикРаботы.ДанныеОРабочихЧасах.Добавить();
				СтрокаТЧ.ВидВремени		= "РаботаВечерниеЧасы";
				СтрокаТЧ.НомерДняЦикла	= ИсходнаяСтрокаСмены.НомерДня;
				СтрокаТЧ.Часов			= ?(Не ЗначениеЗаполнено(Данные), 0, Данные["ЧасовВечерних"]);
			КонецЕсли;
			Если ГрафикРаботы.УчитыватьНочныеЧасы Тогда
				СтрокаТЧ = ГрафикРаботы.ДанныеОРабочихЧасах.Добавить();
				СтрокаТЧ.ВидВремени		= "РаботаНочныеЧасы";
				СтрокаТЧ.НомерДняЦикла	= ИсходнаяСтрокаСмены.НомерДня;
				СтрокаТЧ.Часов			= ?(Не ЗначениеЗаполнено(Данные), 0, Данные["ЧасовНочных"]); 
			КонецЕсли;
			
			ШаблонЗаполнения = ГрафикРаботы.ШаблонЗаполнения.Добавить();
			ШаблонЗаполнения.ДеньВключенВГрафик = ?(Не ЗначениеЗаполнено(Данные), Ложь, ?(Данные["ЧасовВсего"] &gt; 0, Истина, Ложь));
			
		КонецЦикла;
		
	Иначе
		Для НомерДня = 0 По 6 Цикл
			
			Отбор.Ссылка = НомерДня;
			РабочиеСмены = ПродолжительностьРабочихСменГрафика.НайтиСтроки(Отбор);
			
			Если РабочиеСмены.Количество() = 0 Тогда
				Данные	= "";
			Иначе
				Данные	= РабочиеСмены[0];
			КонецЕсли;
			
			СтрокаТЧ = ГрафикРаботы.ДанныеОРабочихЧасах.Добавить();
			СтрокаТЧ.ВидВремени			= "Явка";
			СтрокаТЧ.НомерДняЦикла		= НомерДня + 1;
			СтрокаТЧ.Часов				= ?(Не ЗначениеЗаполнено(Данные), 0, Данные["ЧасовВсего"]);
			Если ГрафикРаботы.УчитыватьВечерниеЧасы Тогда
				СтрокаТЧ = ГрафикРаботы.ДанныеОРабочихЧасах.Добавить();
				СтрокаТЧ.ВидВремени		= "РаботаВечерниеЧасы";
				СтрокаТЧ.НомерДняЦикла	= НомерДня + 1;
				СтрокаТЧ.Часов			= ?(Не ЗначениеЗаполнено(Данные), 0, Данные["ЧасовВечерних"]);
			КонецЕсли;
			Если ГрафикРаботы.УчитыватьНочныеЧасы Тогда
				СтрокаТЧ = ГрафикРаботы.ДанныеОРабочихЧасах.Добавить();
				СтрокаТЧ.ВидВремени		= "РаботаНочныеЧасы";
				СтрокаТЧ.НомерДняЦикла	= НомерДня + 1;
				СтрокаТЧ.Часов			= ?(Не ЗначениеЗаполнено(Данные), 0, Данные["ЧасовНочных"]);  
			КонецЕсли;
			
			ШаблонЗаполнения = ГрафикРаботы.ШаблонЗаполнения.Добавить();
			ШаблонЗаполнения.ДеньВключенВГрафик = ?(Не ЗначениеЗаполнено(Данные), Ложь, ?(Данные["ЧасовВсего"] &gt; 0, Истина, Ложь));
		КонецЦикла;
		
	КонецЕсли;
	
	СтрокаТЧ = ГрафикРаботы.ВидыВремени.Добавить();
	СтрокаТЧ.ВидВремени		= "Явка";
	Если ГрафикРаботы.УчитыватьВечерниеЧасы Тогда
		СтрокаТЧ = ГрафикРаботы.ВидыВремени.Добавить();
		СтрокаТЧ.ВидВремени	= "РаботаВечерниеЧасы";
	КонецЕсли;
	Если ГрафикРаботы.УчитыватьНочныеЧасы Тогда
		СтрокаТЧ = ГрафикРаботы.ВидыВремени.Добавить();
		СтрокаТЧ.ВидВремени	= "РаботаНочныеЧасы";
	КонецЕсли;
	
	ГрафикиРаботыМассив.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ГрафикРаботы));
	
КонецЦикла;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ГрафикиРаботыПоВидамВремени_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>
ГрафикРаботыСсылка = ГрафикРаботы.Ссылка;

Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	НачПериода = Параметры.ДатаНачалаПереносаРасчетныхДанных;
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	КонПериода = КонецГода(Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления);
Иначе	
	НачПериода = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	КонПериода = КонецГода(Параметры.МесяцНачалаЭксплуатации);
КонецЕсли;

ЗапросГрафики = Новый Запрос;
ЗапросГрафики.УстановитьПараметр("ГрафикРаботы", ГрафикРаботыСсылка);

ЗапросГрафики.Текст = 
"ВЫБРАТЬ
|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы,
|	ГрафикиРаботыПоВидамВремени.Месяц,
|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени,
|	ГрафикиРаботыПоВидамВремени.Дата КАК Дата,
|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма
|ПОМЕСТИТЬ ВТГрафик
|ИЗ
|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
|ГДЕ
|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы = &amp;ГрафикРаботы
|	И ГрафикиРаботыПоВидамВремени.Месяц = &amp;ТекущийМесяц
|	И ГрафикиРаботыПоВидамВремени.План
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТГрафик.Дата КАК Дата,
|	ВЫБОР
|		КОГДА МАКСИМУМ(ВТГрафик.ОсновноеЗначение) &gt; 0
|			ТОГДА ИСТИНА
|		ИНАЧЕ ЛОЖЬ
|	КОНЕЦ КАК РабочийДень
|ИЗ
|	ВТГрафик КАК ВТГрафик
|
|СГРУППИРОВАТЬ ПО
|	ВТГрафик.Дата
|
|УПОРЯДОЧИТЬ ПО
|	Дата
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	График.ГрафикРаботы,
|	График.Месяц,
|	График.ВидУчетаВремени,
|	График.Дата КАК Дата,
|	График.ОсновноеЗначение,
|	График.ОсновноеЗначениеНорма,
|	График.ДополнительноеЗначение,
|	График.ДополнительноеЗначениеНорма
|ИЗ
|	ВТГрафик КАК График
|ГДЕ
|	График.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
|
|УПОРЯДОЧИТЬ ПО
|	Дата
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	График.ГрафикРаботы,
|	График.Месяц,
|	График.ВидУчетаВремени,
|	График.Дата КАК Дата,
|	График.ОсновноеЗначение,
|	График.ОсновноеЗначениеНорма,
|	График.ДополнительноеЗначение,
|	График.ДополнительноеЗначениеНорма
|ИЗ
|	ВТГрафик КАК График
|ГДЕ
|	График.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)
|
|УПОРЯДОЧИТЬ ПО
|	Дата
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	График.ГрафикРаботы,
|	График.Месяц,
|	График.ВидУчетаВремени,
|	График.Дата КАК Дата,
|	График.ОсновноеЗначение,
|	График.ОсновноеЗначениеНорма,
|	График.ДополнительноеЗначение,
|	График.ДополнительноеЗначениеНорма
|ИЗ
|	ВТГрафик КАК График
|ГДЕ
|	График.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоВечернимЧасам)
|
|УПОРЯДОЧИТЬ ПО
|	Дата
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	График.ГрафикРаботы,
|	График.Месяц,
|	График.ВидУчетаВремени,
|	График.Дата КАК Дата,
|	График.ОсновноеЗначение,
|	График.ОсновноеЗначениеНорма,
|	График.ДополнительноеЗначение,
|	График.ДополнительноеЗначениеНорма
|ИЗ
|	ВТГрафик КАК График
|ГДЕ
|	График.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоНочнымЧасам)
|
|УПОРЯДОЧИТЬ ПО
|	Дата";


ТекущийМесяцГрафиков = НачПериода;

ПоляЗаполненияШапка = "ГрафикРаботы,Месяц,Дата";
ОтборСтрок = Новый Структура("Дата");

Пока ТекущийМесяцГрафиков &lt;= КонПериода Цикл
	
	ТаблицаГрафика = Новый ТаблицаЗначений;
	ТаблицаГрафика.Колонки.Добавить("ГрафикРаботы");
	ТаблицаГрафика.Колонки.Добавить("Месяц");
	ТаблицаГрафика.Колонки.Добавить("ВидУчетаВремени");
	ТаблицаГрафика.Колонки.Добавить("ВремяВЧасах", Новый ОписаниеТипов("Булево"));
	ТаблицаГрафика.Колонки.Добавить("Дата");
	ТаблицаГрафика.Колонки.Добавить("ОсновноеЗначение", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));  
	ТаблицаГрафика.Колонки.Добавить("ОсновноеЗначениеНорма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	ТаблицаГрафика.Колонки.Добавить("ДополнительноеЗначение", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	ТаблицаГрафика.Колонки.Добавить("ДополнительноеЗначениеНорма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	
	ЗапросГрафики.УстановитьПараметр("ТекущийМесяц", ТекущийМесяцГрафиков);
	Результат = ЗапросГрафики.ВыполнитьПакет();
	ТабРабочиеДни = Результат[1].Выгрузить();
	ТабДни   = Результат[2].Выгрузить();
	ТабЧасы  = Результат[3].Выгрузить();
	ТабВечер = Результат[4].Выгрузить();
	ТабНочь  = Результат[5].Выгрузить();
	
	Для каждого ТипДня Из ТабРабочиеДни Цикл
		
		Если ТипДня.РабочийДень Тогда
			
			ОтборСтрок.Дата = ТипДня.Дата;
			
			ЧасыВечерние = 0;
			НайденныеСтроки = ТабВечер.НайтиСтроки(ОтборСтрок);
			Если НайденныеСтроки.Количество() &gt; 0 Тогда
				
				Если НайденныеСтроки[0].ОсновноеЗначение &gt; 0 Тогда
					
					ЧасыВечерние = НайденныеСтроки[0].ОсновноеЗначение;
					
					НоваяСтрока = ТаблицаГрафика.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],ПоляЗаполненияШапка);
					НоваяСтрока.ВремяВЧасах = Истина;
					НоваяСтрока.ВидУчетаВремени = "РаботаВечерниеЧасы";
					НоваяСтрока.ОсновноеЗначение = ЧасыВечерние;
					НоваяСтрока.ОсновноеЗначениеНорма = ЧасыВечерние;
					НоваяСтрока.ДополнительноеЗначение = 1;
					НоваяСтрока.ДополнительноеЗначениеНорма = 1;
					
					НоваяСтрока = ТаблицаГрафика.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],ПоляЗаполненияШапка);
					НоваяСтрока.ВремяВЧасах = Ложь;
					НоваяСтрока.ВидУчетаВремени = "РаботаВечерниеЧасы";
					НоваяСтрока.ОсновноеЗначение = 1;
					НоваяСтрока.ОсновноеЗначениеНорма = 1;
					НоваяСтрока.ДополнительноеЗначение = ЧасыВечерние;
					НоваяСтрока.ДополнительноеЗначениеНорма = ЧасыВечерние;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ЧасыНочные = 0;
			НайденныеСтроки = ТабНочь.НайтиСтроки(ОтборСтрок);
			Если НайденныеСтроки.Количество() &gt; 0 Тогда
				
				Если НайденныеСтроки[0].ОсновноеЗначение &gt; 0 Тогда
					
					ЧасыНочные = НайденныеСтроки[0].ОсновноеЗначение;
					
					НоваяСтрока = ТаблицаГрафика.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],ПоляЗаполненияШапка);
					НоваяСтрока.ВремяВЧасах = Истина;
					НоваяСтрока.ВидУчетаВремени = "РаботаНочныеЧасы";
					НоваяСтрока.ОсновноеЗначение = ЧасыНочные;
					НоваяСтрока.ОсновноеЗначениеНорма = ЧасыНочные;
					НоваяСтрока.ДополнительноеЗначение = 1;
					НоваяСтрока.ДополнительноеЗначениеНорма = 1;
					
					НоваяСтрока = ТаблицаГрафика.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],ПоляЗаполненияШапка);
					НоваяСтрока.ВремяВЧасах = Ложь;
					НоваяСтрока.ВидУчетаВремени = "РаботаНочныеЧасы";
					НоваяСтрока.ОсновноеЗначение = 1;
					НоваяСтрока.ОсновноеЗначениеНорма = 1;
					НоваяСтрока.ДополнительноеЗначение = ЧасыНочные;
					НоваяСтрока.ДополнительноеЗначениеНорма = ЧасыНочные;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ЧасыЯвка = 0;
			НайденныеСтроки = ТабЧасы.НайтиСтроки(ОтборСтрок);
			Если НайденныеСтроки.Количество() &gt; 0 Тогда
				Если НайденныеСтроки[0].ОсновноеЗначение &gt; 0 Тогда
					ЧасыЯвка = НайденныеСтроки[0].ОсновноеЗначение;
				КонецЕсли;
			КонецЕсли;
			
			ЧасыРабочие = ?(ЧасыЯвка = 0, ЧасыВечерние + ЧасыНочные, ЧасыЯвка);
			ЧасыЯвка = ?(ЧасыЯвка = 0, 0, ЧасыЯвка - ЧасыВечерние - ЧасыНочные);
			
			Если ЧасыЯвка &gt; 0 Тогда
				
				НоваяСтрока = ТаблицаГрафика.Добавить();
				НоваяСтрока.ГрафикРаботы = ГрафикРаботыСсылка;
				НоваяСтрока.Месяц = ТекущийМесяцГрафиков;
				НоваяСтрока.Дата = ТипДня.Дата;
				НоваяСтрока.ВремяВЧасах = Истина;
				НоваяСтрока.ВидУчетаВремени = "Явка";
				НоваяСтрока.ОсновноеЗначение = ЧасыЯвка;
				НоваяСтрока.ОсновноеЗначениеНорма = ЧасыЯвка;
				НоваяСтрока.ДополнительноеЗначение = 1;
				НоваяСтрока.ДополнительноеЗначениеНорма = 1;
				
				НоваяСтрока = ТаблицаГрафика.Добавить();
				НоваяСтрока.ГрафикРаботы = ГрафикРаботыСсылка;
				НоваяСтрока.Месяц = ТекущийМесяцГрафиков;
				НоваяСтрока.Дата = ТипДня.Дата;
				НоваяСтрока.ВремяВЧасах = Ложь;
				НоваяСтрока.ВидУчетаВремени = "Явка";
				НоваяСтрока.ОсновноеЗначение = 1;
				НоваяСтрока.ОсновноеЗначениеНорма = 1;
				НоваяСтрока.ДополнительноеЗначение = ЧасыЯвка;
				НоваяСтрока.ДополнительноеЗначениеНорма = ЧасыЯвка;
				
			КонецЕсли;	
			
			НоваяСтрока = ТаблицаГрафика.Добавить();
			НоваяСтрока.ГрафикРаботы = ГрафикРаботыСсылка;
			НоваяСтрока.Месяц = ТекущийМесяцГрафиков;
			НоваяСтрока.Дата = ТипДня.Дата;
			НоваяСтрока.ВремяВЧасах = Истина;
			НоваяСтрока.ВидУчетаВремени = "РабочееВремя";
			НоваяСтрока.ОсновноеЗначение = ЧасыРабочие;
			НоваяСтрока.ОсновноеЗначениеНорма = ЧасыРабочие;
			НоваяСтрока.ДополнительноеЗначение = 1;
			НоваяСтрока.ДополнительноеЗначениеНорма = 1;
			
			НоваяСтрока = ТаблицаГрафика.Добавить();
			НоваяСтрока.ГрафикРаботы = ГрафикРаботыСсылка;
			НоваяСтрока.Месяц = ТекущийМесяцГрафиков;
			НоваяСтрока.Дата = ТипДня.Дата;
			НоваяСтрока.ВремяВЧасах = Ложь;
			НоваяСтрока.ВидУчетаВремени = "РабочееВремя";
			НоваяСтрока.ОсновноеЗначение = 1;
			НоваяСтрока.ОсновноеЗначениеНорма = 1;
			НоваяСтрока.ДополнительноеЗначение = ЧасыРабочие;
			НоваяСтрока.ДополнительноеЗначениеНорма = ЧасыРабочие;
			
		Иначе
			
			НоваяСтрока = ТаблицаГрафика.Добавить();
			НоваяСтрока.ГрафикРаботы = ГрафикРаботыСсылка;
			НоваяСтрока.Месяц = ТекущийМесяцГрафиков;
			НоваяСтрока.Дата  = ТипДня.Дата;
			НоваяСтрока.ВремяВЧасах = Ложь;
			НоваяСтрока.ВидУчетаВремени = "ВыходныеДни";
			НоваяСтрока.ОсновноеЗначение = 1;
			НоваяСтрока.ОсновноеЗначениеНорма = 1;
			НоваяСтрока.ДополнительноеЗначение = 0;
			НоваяСтрока.ДополнительноеЗначениеНорма = 0;
			
			НоваяСтрока = ТаблицаГрафика.Добавить();
			НоваяСтрока.ГрафикРаботы = ГрафикРаботыСсылка;
			НоваяСтрока.Месяц = ТекущийМесяцГрафиков;
			НоваяСтрока.Дата  = ТипДня.Дата;
			НоваяСтрока.ВремяВЧасах = Истина;
			НоваяСтрока.ВидУчетаВремени = "ВыходныеДни";
			НоваяСтрока.ОсновноеЗначение = 0;
			НоваяСтрока.ОсновноеЗначениеНорма = 0;
			НоваяСтрока.ДополнительноеЗначение = 1;
			НоваяСтрока.ДополнительноеЗначениеНорма = 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаГрафикаПоВидамВремени Из ТаблицаГрафика Цикл
		ГрафикПоВидамВремени = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаГрафикаПоВидамВремени);
		ВыгрузитьПоПравилу(ГрафикПоВидамВремени, , , , "ГрафикиРаботыПоВидамВремени");
	КонецЦикла;
	
	ТекущийМесяцГрафиков = ДобавитьМесяц(ТекущийМесяцГрафиков, 1);
	
КонецЦикла;</Текст>
			<Параметры>ГрафикРаботы</Параметры>
		</Алгоритм>
		<Алгоритм Имя="ГрафикРаботы_ПКО" ИспользуетсяПриЗагрузке="false">
			<Текст>Если ТипЗнч(ИсходящиеДанные) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
	ИмяПКО = "СотрудникиТолькоСсылка";
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДанныеОВремениДляРасчетаСреднегоФСС_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	
	ДатаОкончания = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПолучитьДатуОкончанияПоРегиструОсновныеНачисления", Параметры.Алгоритмы, Параметры);
	ДатаНачалаРаботыСПрограммой = ДобавитьМесяц(ДатаОкончания, 1);
	
	МесяцНачалаПереноса = ДобавитьМесяц(НачалоГода(ДатаОкончания), -36);
	МесяцНачалаПереноса = Мин(МесяцНачалаПереноса,Параметры.ДатаНачалаПереносаРасчетныхДанных);
	МесяцОкончанияПереноса = ДатаОкончания;
	
	ПодменятьВР = Ложь;
	
Иначе
	
	ДатаНачалаРаботыСПрограммой = НачалоМесяца(Параметры.МесяцНачалаЭксплуатации);
	МесяцНачалаПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -36);
	МесяцОкончанияПереноса = ДобавитьМесяц(ДатаНачалаРаботыСПрограммой, -1);
	
	ПодменятьВР = Истина;
	
КонецЕсли;

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = ОбъектыПереносаДанных.ВыполнитьАлгоритм("Сотрудники_ВременнаяТаблица", Параметры.Алгоритмы, Параметры, Запросы);

Запрос.Текст = 
"ВЫБРАТЬ
|	ОсновныеНачисленияОрганизаций.Ссылка
|ПОМЕСТИТЬ ВТДниБолезниУхода
|ИЗ
|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
|ГДЕ
|	ОсновныеНачисленияОрганизаций.ЗачетНормыВремени
|	И НЕ ОсновныеНачисленияОрганизаций.ЗачетОтработанногоВремени
|	И НЕ ЕСТЬNULL(ОсновныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС, ЛОЖЬ)
|	И ОсновныеНачисленияОрганизаций.СпособРасчета &lt;&gt; ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.НулеваяСумма)
|	И НЕ ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты))
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезни)
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтсутствиеПоБолезниПоБеременности)
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо1_5Лет)
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Начисления.Ссылка КАК ВидРасчета
|ПОМЕСТИТЬ ВТОтработанныеДни
|ИЗ
|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК Начисления
|ГДЕ
|	Начисления.ЗачетОтработанногоВремени
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Начисления.Ссылка КАК ВидРасчета
|ПОМЕСТИТЬ ВТНеОтработанныеДни
|ИЗ
|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК Начисления
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДниБолезниУхода КАК ВТДниБолезниУхода
|		ПО Начисления.Ссылка = ВТДниБолезниУхода.Ссылка
|ГДЕ
|	НЕ Начисления.ЗачетОтработанногоВремени
|	И Начисления.ЗачетНормыВремени
|	И ВТДниБолезниУхода.Ссылка ЕСТЬ NULL 
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТДниБолезниУхода.Ссылка КАК ВидРасчета,
|	ИСТИНА КАК ДниБолезни,
|	ЛОЖЬ КАК ОтработанныеДни
|ПОМЕСТИТЬ ВТВидыРасчетаОтбор
|ИЗ
|	ВТДниБолезниУхода КАК ВТДниБолезниУхода
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ВТОтработанныеДни.ВидРасчета,
|	ЛОЖЬ,
|	ИСТИНА
|ИЗ
|	ВТОтработанныеДни КАК ВТОтработанныеДни
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ВТНеОтработанныеДни.ВидРасчета,
|	ЛОЖЬ,
|	ЛОЖЬ
|ИЗ
|	ВТНеОтработанныеДни КАК ВТНеОтработанныеДни
|
|ИНДЕКСИРОВАТЬ ПО
|	ВидРасчета
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТВидыРасчетаОтбор.ВидРасчета,
|	ВТВидыРасчетаОтбор.ДниБолезни,
|	ВТВидыРасчетаОтбор.ОтработанныеДни
|ИЗ
|	ВТВидыРасчетаОтбор КАК ВТВидыРасчетаОтбор";
СвойстваНачислений = Запрос.Выполнить().Выгрузить();

Запрос.УстановитьПараметр("МесяцНачалаПереноса", МесяцНачалаПереноса);
Запрос.УстановитьПараметр("МесяцОкончанияПереносаКонецМесяца", КонецМесяца(МесяцОкончанияПереноса));
Запрос.Текст = 
"ВЫБРАТЬ
|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК ДатаКалендаря,
|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодОтбор
|ИЗ
|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
|ГДЕ
|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &amp;МесяцНачалаПереноса И &amp;МесяцОкончанияПереносаКонецМесяца
|
|УПОРЯДОЧИТЬ ПО
|	ПериодОтбор,
|	ДатаКалендаря";
ДанныеКалендаря = Запрос.Выполнить().Выгрузить();

ТекстЗапроса = 
"ВЫБРАТЬ
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации КАК ПериодРегистрации,
|	ОсновныеНачисленияРаботниковОрганизаций.Организация,
|	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
|	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало,
|	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
|	ВЫБОР
|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
|			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Организация
|		ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
|	КОНЕЦ КАК ОрганизацияОтбор,
|	ОсновныеНачисленияРаботниковОрганизаций.Сторно
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
|ГДЕ
|	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				Сотрудники.Сотрудник
|			ИЗ
|				ВТСотрудники КАК Сотрудники)
|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодДействия = &amp;ТекущийМесяц
|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации &lt; &amp;ДатаНачалаРаботыСПрограммой
|	И ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				ОтборПоВР.ВидРасчета
|			ИЗ
|				ВТВидыРасчетаОтбор КАК ОтборПоВР)
|
|УПОРЯДОЧИТЬ ПО
|	ОрганизацияОтбор,
|	Сотрудник,
|	ВидРасчета,
|	ПериодРегистрации";

Запрос.УстановитьПараметр("ДатаНачалаРаботыСПрограммой", ДатаНачалаРаботыСПрограммой);
ТекущийМесяц = МесяцНачалаПереноса;

ДанныеОВремени = Новый ТаблицаЗначений;
ДанныеОВремени.Колонки.Добавить("ФизическоеЛицо");
ДанныеОВремени.Колонки.Добавить("ГоловнаяОрганизация");
ДанныеОВремени.Колонки.Добавить("Месяц");
ДанныеОВремени.Колонки.Добавить("ВидБолезниУходаЗаДетьми");
ДанныеОВремени.Колонки.Добавить("ДокументОснование");
Для НомерДняМесяца = 1 По 31 Цикл
	ДанныеОВремени.Колонки.Добавить("ОтработанДень" + НомерДняМесяца);
	ДанныеОВремени.Колонки.Добавить("НеотработанДень" + НомерДняМесяца);
	ДанныеОВремени.Колонки.Добавить("БолезньУходЗаДетьмиДень" + НомерДняМесяца);
КонецЦикла;

ОтборСвойстваНачислений = Новый Структура("ВидРасчета");
ОтборСтрок = Новый Структура("ФизическоеЛицо,ВидБолезниУходаЗаДетьми");
ОтборКалендаря = Новый Структура("ПериодОтбор");

Пока ТекущийМесяц &lt;= МесяцОкончанияПереноса Цикл
	
	ОтборКалендаря.ПериодОтбор = ТекущийМесяц;
	КалендарныеДни = ДанныеКалендаря.НайтиСтроки(ОтборКалендаря);
	Если КалендарныеДни.Количество() = 0 Тогда
		ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, 1);
		Продолжить;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТекущийМесяц", ТекущийМесяц);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("ОрганизацияОтбор") Цикл
		
		ВыборкаПоДокументу = Новый Структура;
		ВыборкаПоДокументу.Вставить("Номер",				"ЗП_СЗФСС");
		ВыборкаПоДокументу.Вставить("Организация",			Выборка.ОрганизацияОтбор);
		ВыборкаПоДокументу.Вставить("ПериодРегистрации",	ТекущийМесяц);
		
		СреднийФССДанныеОВремени = ДанныеОВремени.СкопироватьКолонки();
		
		Пока Выборка.Следующий() Цикл
			
			ОтборСвойстваНачислений.ВидРасчета = Выборка.ВидРасчета;
			СведенияОНачислении = СвойстваНачислений.НайтиСтроки(ОтборСвойстваНачислений);
			Если СведенияОНачислении.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ОтработанДень				= СведенияОНачислении[0].ОтработанныеДни;
			БолезньУходЗаДетьмиДень		= СведенияОНачислении[0].ДниБолезни;
			
			ВидБолезниУходаЗаДетьми = ?(БолезньУходЗаДетьмиДень,Выборка.ВидРасчета,"");
			Если ПодменятьВР и ВидБолезниУходаЗаДетьми = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты Тогда
				ВидБолезниУходаЗаДетьми = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет;	
			КонецЕсли;	
			
			ОтборСтрок.ФизическоеЛицо = Выборка.ФизЛицо;
			ОтборСтрок.ВидБолезниУходаЗаДетьми = ВидБолезниУходаЗаДетьми;
			СуществующаяСтрока = СреднийФССДанныеОВремени.НайтиСтроки(ОтборСтрок);
			Если СуществующаяСтрока.Количество() = 0 Тогда
				
				НоваяСтрока = СреднийФССДанныеОВремени.Добавить();
				НоваяСтрока.ФизическоеЛицо						= Выборка.ФизЛицо;
				НоваяСтрока.ГоловнаяОрганизация					= Выборка.Организация;
				НоваяСтрока.Месяц								= ТекущийМесяц;
				НоваяСтрока.ВидБолезниУходаЗаДетьми				= ВидБолезниУходаЗаДетьми;
				НоваяСтрока.ДокументОснование					= ВыборкаПоДокументу;
				
				Для НомерДняМесяца = 1 По 31 Цикл
					НоваяСтрока["ОтработанДень" + НомерДняМесяца] = Ложь;
					НоваяСтрока["НеотработанДень" + НомерДняМесяца] = Ложь;
					НоваяСтрока["БолезньУходЗаДетьмиДень" + НомерДняМесяца] = Ложь;
				КонецЦикла;
				
			Иначе
				
				НоваяСтрока = СуществующаяСтрока[0];
				
			КонецЕсли;
			
			Для каждого СтрокаКалендарныйДень Из КалендарныеДни Цикл
				
				ДатаКалендаря = СтрокаКалендарныйДень.ДатаКалендаря;
				Если (ДатаКалендаря &lt; Выборка.ПериодДействияНачало) Или (ДатаКалендаря &gt; НачалоДня(Выборка.ПериодДействияКонец)) Тогда
					Продолжить;
				КонецЕсли;
				НомерДняМесяца = День(ДатаКалендаря);
				
				Если БолезньУходЗаДетьмиДень Тогда
					
					НоваяСтрока["БолезньУходЗаДетьмиДень" + НомерДняМесяца] = Не Выборка.Сторно;
					НоваяСтрока["ОтработанДень" + НомерДняМесяца]   = Ложь;
					НоваяСтрока["НеотработанДень" + НомерДняМесяца] = Ложь;
					
				Иначе
					
					НоваяСтрока["БолезньУходЗаДетьмиДень" + НомерДняМесяца] = Ложь;
					НоваяСтрока["ОтработанДень" + НомерДняМесяца]   = ОтработанДень И Не Выборка.Сторно;
					НоваяСтрока["НеотработанДень" + НомерДняМесяца] = Не ОтработанДень И Не Выборка.Сторно;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если СреднийФССДанныеОВремени.Количество() &gt; 0 Тогда
			
			ВыборкаПоДокументу = Новый Структура;
			ВыборкаПоДокументу.Вставить("Номер",				"ЗП_СЗФСС");
			ВыборкаПоДокументу.Вставить("Организация",			Выборка.ОрганизацияОтбор);
			ВыборкаПоДокументу.Вставить("ПериодРегистрации",	ТекущийМесяц);
			ВыборкаПоДокументу.Вставить("ДанныеОВремениДляРасчетаСреднегоФСС",	СреднийФССДанныеОВремени);
			
			ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ДанныеДляРасчетаСреднегоФСС_ПД");
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, 1);
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьОписаниеВР_Начисления" ИспользуетсяПриЗагрузке="false">
			<Текст>//ПараметрыДляЗаполнения = ИсходящиеДанные;

Параметры            = ПараметрыДляЗаполнения.Параметры;
ВР                   = ПараметрыДляЗаполнения.ВР;
ОписаниеНачисленийСЗ = ПараметрыДляЗаполнения.ОписаниеНачисленийСЗ;
ТолькоПлановыеНачисления = ПараметрыДляЗаполнения.ТолькоПлановыеНачисления;

РасчетВоеннослужащих = Ложь;

СвойстваПоКатегориям = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленийПоКатегориям);
СвойстваНачислений = СвойстваПоКатегориям;

ОписаниеВР = Новый Структура(
"Код,
|РеквизитДопУпорядочивания,
|Наименование,
|КраткоеНаименование,
|КатегорияНачисленияИлиНеоплаченногоВремени,
//|ВидНачисленияДляНУ,
|КодДоходаНДФЛ,
//|КодДоходаСтраховыеВзносы,
|СпособВыполненияНачисления,
|ВидДокументаНачисления,
|СпособРасчета,
|ФормулаРасчета,
|НачисляетсяПриРасчетеПервойПоловиныМесяца,
|ВидВремени,
|ОбозначениеВТабелеУчетаРабочегоВремени,
|ЗачетНормыВремени,
|ЗачетОтработанногоВремени,
//|ОтношениеКЕНВД,
|ВидПособияСоциальногоСтрахования,
|ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка,
|ПериодРасчетаБазовыхНачислений,
|КоличествоМесяцевБазовогоПериода,
|СдвигБазовогоПериода,
|ОтборБазовых,
|СреднийЗаработокОбщий,
|ВключатьВСреднийЗаработокОбщий,
|СреднийЗаработокФСС,
|ВключатьВСреднийЗаработокФСС,
//|ВключатьВСреднийЗаработокФСС2010,
|КлючевыеСвойства,
|ВидОперацииПоЗарплате,
|ВидОтпуска,
//|ВидСтажаСЗВ,
//|ВидСтажаПФР2014,
|УчетВремениВЧасах,
|ОпределяющиеПоказатели,
|ЗапрашиваемыеПоказатели,
|СвойстваПоКатегории,
|МесяцыНачисления,
|ЯвляетсяДоходомВНатуральнойФорме,
|Рассчитывается,
|Ссылка,
|Показатели,
|ГдеЗначенияПоказателей,
|ЗапрашиваемыеПоказатели,
|БазовыеВидыРасчета,
|ДоплатаЗаВредность,
|ОтношениеКДенежномуСодержанию,
|Описание,
|ПересчитатьЗначениеОклада,
|Идентификатор"); 

ОписаниеВР.ГдеЗначенияПоказателей = Новый Структура;
ОписаниеВР.Показатели = Новый ТаблицаЗначений;
ОписаниеВР.ЗапрашиваемыеПоказатели = Новый Массив;
ОписаниеВР.БазовыеВидыРасчета = Новый ТаблицаЗначений;
ОписаниеВР.ДоплатаЗаВредность = Ложь;

ОписаниеВР.Ссылка = ВР;

// Показатели
ТЗПоказатели = Новый ТаблицаЗначений;
ТЗПоказатели.Колонки.Добавить("Показатель");
ТЗПоказатели.Колонки.Добавить("ЗапрашиватьПриВводе"); 

// СреднийЗаработокОбщий
ТЗСреднийЗаработокОбщий = Новый ТаблицаЗначений;
ТЗСреднийЗаработокОбщий.Колонки.Добавить("ПорядокРасчета");
ТЗСреднийЗаработокОбщий.Колонки.Добавить("Значение");
ТЗСреднийЗаработокОбщий.Колонки.Добавить("Индексируется"); 

// Значения по умолчанию
СреднийЗаработокОбщийИндексируется = Истина;
СреднийЗаработкОбщийСоставнаяЧасть = "";
ВидОплатыТрудаГосслужащего = "";

//ЭтоОсновноеНачисление = ТипЗнч(ВР) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций");
//МенеджерВР = ?(ЭтоОсновноеНачисление,ПланыВидовРасчета.ОсновныеНачисленияОрганизаций,ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций);
МенеджерВР = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций;
МенеджерПоказатели = Справочники.ПоказателиСхемМотивации;

ТипВР = "Начисление";

//ОписаниеВР.ВидНачисленияДляНУ = ВР.ВидНачисленияПоСт255НК;
//ОписаниеВР.КодДоходаНДФЛ = ВР.КодДоходаНДФЛ;
//ОписаниеВР.КодДоходаСтраховыеВзносы = ВР.КодДоходаСтраховыеВзносы;
//ОписаниеВР.ВидСтажаПФР2014 = ?(ЭтоОсновноеНачисление,ВР.ВидСтажаПерсУчета2014,"");

ОписаниеДС = Новый Структура("ОтношениеКДенежномуСодержанию");
ЗаполнитьЗначенияСвойств(ОписаниеДС,ВР);

ОписаниеВР.ОтношениеКДенежномуСодержанию  = ОписаниеДС.ОтношениеКДенежномуСодержанию;

Отбор = Новый Структура("ВидРасчета",ВР);

Если ОписаниеНачисленийСЗ &lt;&gt; Неопределено Тогда
	НайденныеСтроки = ОписаниеНачисленийСЗ.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() &gt; 0 Тогда
		СтрокаТЗ = НайденныеСтроки[0];
		СреднийЗаработокОбщийИндексируется = СтрокаТЗ.Индексируется;
		СреднийЗаработкОбщийСоставнаяЧасть = СтрокаТЗ.СоставнаяЧасть;
	КонецЕсли;
КонецЕсли;

Если ЗначениеЗаполнено(СреднийЗаработкОбщийСоставнаяЧасть) Тогда
	НоваяСтрока = ТЗСреднийЗаработокОбщий.Добавить();
	//НоваяСтрока.ПорядокРасчета = "Постановление2010";
	НоваяСтрока.Значение = СреднийЗаработкОбщийСоставнаяЧасть;
	НоваяСтрока.Индексируется = СреднийЗаработокОбщийИндексируется;
КонецЕсли;

ОписаниеВР.СреднийЗаработокОбщий = ТЗСреднийЗаработокОбщий;
ОписаниеВР.БазовыеВидыРасчета = ВР.БазовыеВидыРасчета.Выгрузить();


СвойстваИсключения = "КодДоходаНДФЛ,СреднийЗаработокОбщий";

// предопределенные
// ДниНеоплачиваемыеСогласноТабелю
// ДоплатаЗаВечерниеЧасы
// ДоплатаЗаНочныеЧасы
// ДоплатаЗаПраздничныеИВыходные
// ДоплатаПоСреднемуБЛ
// ОтпускБезОплатыУчебный
// 		ОкладПоДням
// 		ОкладПоЧасам
// 		ОплатаБЛПоТравмеНаПроизводстве
// 		ОплатаПоСреднемуБЛ
// ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами
// ОплатаПоСреднемуОтпКалендарныеДни
// ОплатаПоСреднемуОтпШестидневка
// 		ТарифДневной
// СдельнаяОплата
// ОплатаПоСреднему
// 		ТарифЧасовой
// ПочасовойПростойОкладПоЧасам
// ПочасовойПростойТарифЧасовой
// ОплатаПраздничныхИВыходных
// ПростойОкладПоДням
// ПростойОкладПоЧасам
// ПростойТарифДневной
// ПростойТарифЧасовой
// ОплатаСверхурочных
// ОтпускЗаСвойСчет
// 		ОтпускПоБеременностиИРодам
// 		ОтпускПоУходуЗаРебенкомБезОплаты
// 		ОтсутствиеПоБолезни
// 		ОтсутствиеПоБолезниПоБеременности
// Невыход
// 		ПособиеПоУходуЗаРебенкомДо3Лет
// ПочасовойПростойПоВинеРаботодателя
// Прогул
// ПростойПоВинеРаботодателя

ПоказателиНачисления = Новый Массив;

ИмяПредопределенного  = МенеджерВР.ПолучитьИмяПредопределенного(ВР);
//ИдентификаторЭлемента = "";

ОписаниеВР.Идентификатор        = ВР.Ссылка;
Если ЗначениеЗаполнено(ИмяПредопределенного) Тогда
	ОписаниеВР.Идентификатор = ИмяПредопределенного;
//ИначеЕсли ЗначениеЗаполнено(ИдентификаторЭлемента) Тогда
//	ОписаниеВР.Идентификатор = ИдентификаторЭлемента;	
КонецЕсли;	

Если ИмяПредопределенного = "ОкладПоДням" Тогда
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='ОКЛ';uk='ОКЛ'");
	ОписаниеВР.Наименование			= НСтр("ru='Оплата по окладу';uk='Оплата по окладу'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Оклад';uk='Оклад'");
	ОписаниеВР.ФормулаРасчета			= "Оклад * ДоляНеполногоРабочегоВремени * ВремяВДнях / НормаДней";
	ОписаниеВР.ВидВремени = "ОтработанноеВПределахНормы";
	ОписаниеВР.УчетВремениВЧасах		= Ложь;
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "РабочееВремя";
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить("Оклад");
	ОписаниеВР.ЗапрашиваемыеПоказатели  = МассивПоказателей;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить("Оклад", "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Оклад,ДоляНеполногоРабочегоВремени,ВремяВДнях,НормаДней");
	
ИначеЕсли ИмяПредопределенного = "ОкладПоЧасам" Тогда
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='ОКЛЧС';uk='ОКЛГД'");
	ОписаниеВР.Наименование			= НСтр("ru='Оплата по окладу (по часам)';uk='Оплата по окладу (по годинах)'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Оклад (по часам)';uk='Оклад (по годинах)'");
	ОписаниеВР.ФормулаРасчета			= "Оклад * ВремяВЧасах / НормаЧасов";
	ОписаниеВР.ВидВремени 			= "ОтработанноеВПределахНормы";
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "Явка";
	ОписаниеВР.УчетВремениВЧасах		= Истина;
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить("Оклад");
	ОписаниеВР.ЗапрашиваемыеПоказатели  = МассивПоказателей;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить("Оклад", "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Оклад,ВремяВЧасах,НормаЧасов");
	
ИначеЕсли ИмяПредопределенного = "ТарифДневной" Тогда 
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='ТРФД';uk='ТРФД'");
	ОписаниеВР.Наименование			= НСтр("ru='Оплата по дневному тарифу';uk='Оплата за денним тарифом'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Опл. по дням';uk='Опл. по днях'");
	ОписаниеВР.ФормулаРасчета		= "ТарифнаяСтавкаДневная * ВремяВДнях";
	ОписаниеВР.ВидВремени 			= "ОтработанноеВПределахНормы";
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "РабочееВремя";
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить("ТарифнаяСтавкаДневная");
	ОписаниеВР.ЗапрашиваемыеПоказатели  = МассивПоказателей;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить("ТарифнаяСтавкаДневная", "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ТарифнаяСтавкаДневная,ВремяВДнях");
	
ИначеЕсли ИмяПредопределенного = "ТарифЧасовой" Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='ТРФЧС';uk='ТРФГД'");
	ОписаниеВР.Наименование			= НСтр("ru='Оплата по часовому тарифу';uk='Оплата за годинним тарифом'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Часовой тариф';uk='Годинний тариф'");
	ОписаниеВР.ФормулаРасчета		= "ТарифнаяСтавкаЧасовая * ВремяВЧасах";
	ОписаниеВР.ВидВремени 			= "ОтработанноеВПределахНормы";
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "Явка";
	ОписаниеВР.УчетВремениВЧасах		= Истина;
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить("ТарифнаяСтавкаЧасовая");
	ОписаниеВР.ЗапрашиваемыеПоказатели  = МассивПоказателей;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить("ТарифнаяСтавкаЧасовая", "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ТарифнаяСтавкаЧасовая,ВремяВЧасах");
	
	
ИначеЕсли ИмяПредопределенного = "СдельнаяОплата" Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "СдельнаяОплатаТруда";
	ОписаниеВР.Код					= НСтр("ru='СДЛЧС';uk='ВДРГД'");
	ОписаниеВР.Наименование			= НСтр("ru='Сдельный заработок (для работающих по часовому тарифу)';uk='Відрядний заробіток (для працюючих за часовим тарифом)'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Сдельно';uk='Відрядно'");
	ОписаниеВР.ФормулаРасчета		= "Макс(СдельныйЗаработок, ТарифнаяСтавкаЧасовая * ВремяВЧасах)";
	ОписаниеВР.УчетВремениВЧасах		= Истина;
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить("ТарифнаяСтавкаЧасовая");
	ОписаниеВР.ЗапрашиваемыеПоказатели  = МассивПоказателей;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить("ТарифнаяСтавкаЧасовая", "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ТарифнаяСтавкаЧасовая,ВремяВЧасах");
	
ИначеЕсли ИмяПредопределенного = "ИндексацияЗарплаты" Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "Индексация";
	ОписаниеВР.Код					= НСтр("ru='ИНД';uk='ІНД'");
	ОписаниеВР.Наименование			= НСтр("ru='Индексация зарплаты';uk='Індексація зарплати'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Индексация';uk='Індексація'");
	
	ОписаниеВР.СпособРасчета = ВР.СпособРасчета;
	
ИначеЕсли ИмяПредопределенного = "ДоплатаДоМЗП" Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ДоплатаДоМЗП";
	ОписаниеВР.Код					= НСтр("ru='ДМЗП';uk='ДМЗП'");
	ОписаниеВР.Наименование			= НСтр("ru='Доплата до МЗП';uk='Доплата до МЗП'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Доплата до МЗП';uk='Доплата до МЗП'");
	
	ОписаниеВР.СпособРасчета = ВР.СпособРасчета;
	
ИначеЕсли ИмяПредопределенного = "ДоплатаЗаВечерниеЧасы" Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ОписаниеВР.Код					= НСтр("ru='ВЕЧЕР';uk='ВЕЧІР'");
	ОписаниеВР.Наименование			= НСтр("ru='Доплата за работу в вечернее время';uk='Доплата за роботу у вечірній час'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Вечерние часы';uk='Вечірні години'");
	ОписаниеВР.ФормулаРасчета			= "СтоимостьЧаса * ВремяВЧасах * ПроцентДоплатыЗаРаботуВВечернееВремя / 100";

ИначеЕсли ИмяПредопределенного = "ДоплатаЗаНочныеЧасы" Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ОписаниеВР.Код					= НСтр("ru='НОЧН';uk='НІЧН'");
	ОписаниеВР.Наименование			= НСтр("ru='Доплата за работу в ночное время';uk='Доплата за роботу в нічний час'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Ночные часы';uk='Нічні години'");
	ОписаниеВР.ФормулаРасчета			= "СтоимостьЧаса * ВремяВЧасах * ПроцентДоплатыЗаРаботуВНочноеВремя / 100";
	
	
ИначеЕсли (ИмяПредопределенного = "ПособиеПоУходуЗаРебенкомДо3Лет" Или ИмяПредопределенного = "ОтпускПоУходуЗаРебенкомБезОплаты") И Не ТолькоПлановыеНачисления Тогда	
	// преобразуем в ПособиеПоУходуЗаРебенкомДо3Лет
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПособиеПоУходуЗаРебенкомДоТрехЛет";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='РЕБ3';uk='ДИТ3'");
	ОписаниеВР.Наименование			= НСтр("ru='Пособие по уходу за ребенком до трех лет';uk='Допомога по догляду за дитиною до трьох років'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Уход за реб. до 3';uk='Догляд за дит. до 3'");
	
ИначеЕсли ИмяПредопределенного = "ОтпускПоБеременностиИРодам" И Не ТолькоПлановыеНачисления Тогда
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОтпускПоБеременностиИРодам";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='ОТБРР';uk='ОТВП'");
	ОписаниеВР.Наименование			= НСтр("ru='Отпуск по беременности и родам';uk='Відпустка у зв''язку з вагітністю та пологами'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Отп. по берем.';uk='Відп. по вагітн.'");
	
ИначеЕсли ИмяПредопределенного = "ОплатаПоСреднемуБЛ" И Не ТолькоПлановыеНачисления Тогда	
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаБольничногоЛиста";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='БЛН';uk='ЛКР'");
	ОписаниеВР.Наименование			= НСтр("ru='Больничный';uk='Лікарняний'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Больничный';uk='Лікарняний'");
	
ИначеЕсли ИмяПредопределенного = "ОплатаБЛПоТравмеНаПроизводстве" И Не ТолькоПлановыеНачисления Тогда
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаБольничногоНесчастныйСлучайНаПроизводстве";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= НСтр("ru='БЛТП';uk='ЛКТВ'");
	ОписаниеВР.Наименование			= НСтр("ru='Больничный при травме на производстве';uk='Лікарняний при травмі на виробництві'");
	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Больн. при травме';uk='Лікарн. при травмі'");	
	
	// обработка ВР описанных как Особый элемент
	//
	// НадбавкаЗаВыслугуЛетВоеннослужащим
	// ДенежнаяКомпенсацияЗаРаботуСверхНормыСлужебногоВремени
	// ОтпускПоБеременностиВоеннослужащим
	// ОтпускПоУходуЗаРебенкомВоеннослужащим
	// ЕдиновременныеГосударственныеПособияВоеннослужащим
	// КомпенсацияОтпускаГосслужащим
	// УдержаниеОтпускаГосслужащим
	// 		ОплатаБолезниЗаСчетРаботодателя
	
//ИначеЕсли ИдентификаторЭлемента = "ОплатаБолезниЗаСчетРаботодателя" И Не ТолькоПлановыеНачисления Тогда
//	
//	ОписаниеВР.Идентификатор = ИдентификаторЭлемента;
//	
//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаБольничногоЛистаЗаСчетРаботодателя";
//	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
//	ОписаниеВР.Код					= НСтр("ru='БЛРДТ'");
//	ОписаниеВР.Наименование			= НСтр("ru='Больничный за счет работодателя'");
//	ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Больн. (работодат.)'");
//	
//ИначеЕсли ИдентификаторЭлемента = "НадбавкаЗаВыслугуЛетВоеннослужащим" Тогда
//	
//	ОписаниеВР.Идентификатор = ИдентификаторЭлемента;
	
	
	
	// Обработка ВР с предопределенными способами расчета
	// способы расчета
	// ОтСтажаПоДневнойТарифнойСтавке
	// ОтСтажаПоМесячнойТарифнойСтавкеПоДням
	// ОтСтажаПоМесячнойТарифнойСтавкеПоЧасам
	// ОтСтажаПоЧасовойТарифнойСтавке
	// ОтСтажаПроцентом
	// 		ПоДневнойТарифнойСтавке
	// 		ПоМесячнойТарифнойСтавкеПоДням
	// 		ПоМесячнойТарифнойСтавкеПоЧасам
	// 		ПоЧасовойТарифнойСтавке
	// 		Процентом
	// СдельныйЗаработок
	// 		СевернаяНадбавка
	// 		ФиксированнойСуммой
	//		ПоСреднемуЗаработкуФСС
	
ИначеЕсли (ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС) И Не ТолькоПлановыеНачисления Тогда
	// не предопределенные в.р.
	
	//Если ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.БеременностьРоды Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОтпускПоБеременностиИРодам";
	//ИначеЕсли ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.Нетрудоспособность Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаБольничногоЛиста";
	//ИначеЕсли ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаБольничногоНесчастныйСлучайНаПроизводстве";
	//ИначеЕсли ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаБольничногоПрофзаболевание";
	//ИначеЕсли ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ПоУходуЗаРебенкомДоПолутораЛет Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПособиеПоУходуЗаРебенкомДоПолутораЛет";
	//ИначеЕсли ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОплатаДнейУходаЗаДетьмиИнвалидами";
	//ИначеЕсли ВР.ВидПособияСоциальногоСтрахования = Перечисления.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев Тогда
	//	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ОтпускНаСанаторноКурортноеЛечение";	
	//КонецЕсли;	
	
	//Если ЗначениеЗаполнено(ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени) Тогда
	//	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	//	ОписаниеВР.Код					= ВР.Код;
	//	ОписаниеВР.Наименование			= ВР.Наименование;
	//КонецЕсли;
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке Тогда
	
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
	
	Описание = Неопределено;
	Идентификатор = "ТарифнаяСтавкаДневная";
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	ОписаниеПоказателя = Описание;
	ОписаниеПоказателя.Наименование = НаименованиеПоказателя;
	
	КраткоеНаименование = "";
	ТекстоваяСтрока = НаименованиеПоказателя;
	Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
	ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
	ОписаниеПоказателя.Идентификатор = ИдентификаторПоказателя;
	ОписаниеПоказателя.Предопределенный = Ложь;
	
	НоваяСтрока = ТЗПоказатели.Добавить();
	НоваяСтрока.Показатель = ОписаниеПоказателя;
	НоваяСтрока.ЗапрашиватьПриВводе = Истина;
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= ВР.Код;
	ОписаниеВР.Наименование			= ВР.Наименование;
	ОписаниеВР.ФормулаРасчета		= ИдентификаторПоказателя + " * ВремяВДнях";
	ОписаниеВР.ВидВремени 			= "ОтработанноеВПределахНормы";
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "РабочееВремя";
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить(ИдентификаторПоказателя, "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ВремяВДнях");
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням Тогда
	
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
	
	Описание = Неопределено;
	Идентификатор = "Оклад";
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	ОписаниеПоказателя = Описание;
	
	ОписаниеПоказателя.Наименование = НаименованиеПоказателя;
	
	КраткоеНаименование = "";
	ТекстоваяСтрока = НаименованиеПоказателя;
	Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
	ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
	ОписаниеПоказателя.Идентификатор = ИдентификаторПоказателя;
	ОписаниеПоказателя.Предопределенный = Ложь;
	
	НоваяСтрока = ТЗПоказатели.Добавить();
	НоваяСтрока.Показатель = ОписаниеПоказателя;
	НоваяСтрока.ЗапрашиватьПриВводе = Истина;
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= ВР.Код;
	ОписаниеВР.Наименование			= ВР.Наименование;
	ОписаниеВР.ФормулаРасчета		= ИдентификаторПоказателя + " * ДоляНеполногоРабочегоВремени * ВремяВДнях / НормаДней";
	ОписаниеВР.ВидВремени = "ОтработанноеВПределахНормы";
	ОписаниеВР.УчетВремениВЧасах		= Ложь;
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "РабочееВремя";
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить(ИдентификаторПоказателя, "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ДоляНеполногоРабочегоВремени,ВремяВДнях,НормаДней");
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам Тогда
		
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
	
	Описание = Неопределено;
	Идентификатор = "Оклад";
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	ОписаниеПоказателя = Описание;
	ОписаниеПоказателя.Наименование = НаименованиеПоказателя;
	
	КраткоеНаименование = "";
	ТекстоваяСтрока = НаименованиеПоказателя;
	Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
	ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
	ОписаниеПоказателя.Идентификатор = ИдентификаторПоказателя;
	ОписаниеПоказателя.Предопределенный = Ложь;
	
	НоваяСтрока = ТЗПоказатели.Добавить();
	НоваяСтрока.Показатель = ОписаниеПоказателя;
	НоваяСтрока.ЗапрашиватьПриВводе = Истина;
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= ВР.Код;
	ОписаниеВР.Наименование			= ВР.Наименование;
	ОписаниеВР.ФормулаРасчета		= ИдентификаторПоказателя +" * ВремяВЧасах / НормаЧасов";
	ОписаниеВР.ВидВремени 			= "ОтработанноеВПределахНормы";
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "Явка";
	ОписаниеВР.УчетВремениВЧасах		= Истина;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить(ИдентификаторПоказателя, "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ВремяВЧасах,НормаЧасов");
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке Тогда
	
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
	
	Описание = Неопределено;
	Идентификатор = "ТарифнаяСтавкаЧасовая";
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	ОписаниеПоказателя = Описание;
	ОписаниеПоказателя.Наименование = НаименованиеПоказателя;
	
	КраткоеНаименование = "";
	ТекстоваяСтрока = НаименованиеПоказателя;
	Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
	ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
	
	ОписаниеПоказателя.Идентификатор = ИдентификаторПоказателя;
	ОписаниеПоказателя.Предопределенный = Ложь;
	
	НоваяСтрока = ТЗПоказатели.Добавить();
	НоваяСтрока.Показатель = ОписаниеПоказателя;
	НоваяСтрока.ЗапрашиватьПриВводе = Истина;
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= ВР.Код;
	ОписаниеВР.Наименование			= ВР.Наименование;
	ОписаниеВР.ФормулаРасчета		= ИдентификаторПоказателя + " * ВремяВЧасах";
	ОписаниеВР.ВидВремени 			= "ОтработанноеВПределахНормы";
	ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени	= "Явка";
	ОписаниеВР.УчетВремениВЧасах		= Истина;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить(ИдентификаторПоказателя, "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ВремяВЧасах");
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
	
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
	
	Описание = Неопределено;
	Идентификатор = "##";
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	ОписаниеПоказателя = Описание;
	ОписаниеПоказателя.Идентификатор = ИдентификаторПоказателя;
	ОписаниеПоказателя.Наименование = НаименованиеПоказателя;
	
	КраткоеНаименование = "";
	ТекстоваяСтрока = НаименованиеПоказателя;
	Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
	ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
		
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = "Постоянное";
	ОписаниеПоказателя.Точность = 2;
	ОписаниеПоказателя.Предопределенный = Ложь;
	
	
	НоваяСтрока = ТЗПоказатели.Добавить();
	НоваяСтрока.Показатель = ОписаниеПоказателя;
	НоваяСтрока.ЗапрашиватьПриВводе = Истина;
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	ОписаниеВР.Код					= ВР.Код;
	ОписаниеВР.Наименование			= ВР.Наименование;
	ОписаниеВР.ФормулаРасчета 		= ИдентификаторПоказателя + " / 100 * РасчетнаяБаза";
	ОписаниеВР.ВидВремени 			= "ДополнительноОплачиваемоеВПределахНормы";
	ОписаниеВР.НачисляетсяПриРасчетеПервойПоловиныМесяца = Истина;
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить(ИдентификаторПоказателя, "Показатель1");
	ПоказателиНачисления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("РасчетнаяБаза");
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ФиксированнойСуммой Тогда
	
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
		
	
	// обработка ВР с произвольной формулой
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроизвольнаяФормула Тогда  
	
	ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени = "ПовременнаяОплатаТруда";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваНачислений[ОписаниеВР.КатегорияНачисленияИлиНеоплаченногоВремени],,СвойстваИсключения);
	
	НомерПоказателя = 0;
	ФормулаРасчета = ВР.ФормулаРасчета;
	ФормулаНеКонвертируется = Ложь; // начисление перносим, но пользователь должен будет переделать формулу
	ПереноситьНачисление = Истина;
	
	ЕстьПоказательОклад = Ложь;
	ЕстьПоказательНормаВремениВДнях = Ложь;
	
	Для каждого СтрокаТЧ Из ВР.Показатели Цикл
		
		НомерПоказателя = НомерПоказателя +1;
		Показатель = СтрокаТЧ.Показатель;
		ЗапрашиватьПриКадровыхПеремещениях    = СтрокаТЧ.ЗапрашиватьПриКадровыхПеремещениях;
		ИмяПредопределенногоПоказателя = МенеджерПоказатели.ПолучитьИмяПредопределенного(Показатель);
		
		//   ВремяВДнях
		//   ВремяВКалендарныхДнях
		//   ВремяВЧасах
		// ЕстьСупруга
		//   КалендарныхДнейВмесяце
		// КоличествоИждивенцев
		// КоличествоЧленовСемьи
		//   НормаВремениВДнях
		//   НормаВремениВЧасах
		//   ОВД
		//     ОВДДоЗачисленияВСпискиЧасти
		//   ОВЗ
		//   ОкладЗаКлассныйЧин
		//   ОтработаноВремениВДнях
		//   ОтработаноВремениВЧасах
		//   ОтработаноМесяцев
		//   РасчетнаяБаза
		//   СдельнаяВыработка
		//      Стаж
		//   ТарифнаяСтавкаДневная
		//   ТарифнаяСтавкаМесячная
		//   ТарифнаяСтавкаЧасовая
		
		Если ИмяПредопределенногоПоказателя = "ВремяВДнях" Тогда
			
			Описание = Неопределено;
			Идентификатор = "ВремяВДнях";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "ВремяВКалендарныхДнях" Тогда
			
			Описание = Неопределено;
			Идентификатор = "КалендарныеДни";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "ВремяВЧасах" Тогда 
			
			Описание = Неопределено;
			Идентификатор = "ВремяВЧасах";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "КалендарныеДниМесяца" Тогда
			
			Описание = Неопределено;
			Идентификатор = "КалендарныеДниМесяца";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "НормаВремениВДнях" Тогда 
			
			Описание = Неопределено;
			Идентификатор = "НормаДнейПоГрафикуПолногоРабочегоВремени";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
						
			ЕстьПоказательНормаВремениВДнях = Истина;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "НормаВремениВЧасах" Тогда
			
			Описание = Неопределено;
			Идентификатор = "НормаЧасов";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
						
		ИначеЕсли ИмяПредопределенногоПоказателя = "ОВД" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "Оклад";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "ОВЗ" Тогда
			
			Если РасчетВоеннослужащих Тогда
				Идентификатор = "ОкладПоВоинскомуЗванию";
			Иначе
				Идентификатор = "ОкладПоСпециальномуЗванию";
			КонецЕсли;
			Описание = Неопределено;
			Идентификатор = "Оклад";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			
		//ИначеЕсли ИмяПредопределенногоПоказателя = "ОкладЗаКлассныйЧин" Тогда  
		//	
		//	ОписаниеПоказателя = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ОписаниеПоказателяПоИдентификатору", Параметры.Алгоритмы,"ОкладЗаКлассныйЧин");
		//	Идентификатор = ОписаниеПоказателя.Идентификатор;	
		//	
		ИначеЕсли ИмяПредопределенногоПоказателя = "ОтработаноВремениВДнях" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "ОтработаноДней";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "ОтработаноВремениВЧасах" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "ОтработаноЧасов";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "РасчетнаяБаза" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "РасчетнаяБаза";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
						
		ИначеЕсли ИмяПредопределенногоПоказателя = "ТарифнаяСтавкаДневная" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "ТарифнаяСтавкаДневная";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
						
		ИначеЕсли ИмяПредопределенногоПоказателя = "ТарифнаяСтавкаМесячная" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "Оклад";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
			ЕстьПоказательОклад = Истина;
			
		ИначеЕсли ИмяПредопределенногоПоказателя = "ТарифнаяСтавкаЧасовая" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "ТарифнаяСтавкаЧасовая";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
						
		ИначеЕсли ИмяПредопределенногоПоказателя = "СдельнаяВыработка" Тогда  
			
			Описание = Неопределено;
			Идентификатор = "СдельныйЗаработок";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = ОписаниеПоказателя.Идентификатор;
			
		//ИначеЕсли ИмяПредопределенногоПоказателя = "ОВДДоЗачисленияВСпискиЧасти" Тогда  
		//	
		//	// в приемнике нет аналогичного показателя, не переносим начисление с таким показателем
		//	ПереноситьНачисление = Ложь;
		//	Прервать;
		//	
		ИначеЕсли ИмяПредопределенногоПоказателя = "Стаж" Тогда
			
			// в приемнике нет аналогичного показателя
			Описание = Неопределено;
			Идентификатор = "###";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			Идентификатор = "_Стаж";
			
			ОписаниеПоказателя.Наименование = "??? " + Показатель.Наименование;
			ОписаниеПоказателя.Идентификатор = Идентификатор;
			
			ФормулаНеКонвертируется = Истина;
			
		Иначе
			
			НаименованиеПоказателя = Показатель.Наименование;
			ИдентификаторИсходный  = Показатель.Идентификатор;
			
			НазначениеПоказателя = Показатель.ВидПоказателя;
			//Если НазначениеПоказателя = Перечисления.ВидыПоказателейСхемМотивации.ДляВсехОрганизаций Тогда
			//	НазначениеПоказателя	= "ДляОрганизации";
			//Иначе
			Если НазначениеПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Общий Тогда
				НазначениеПоказателя	= "ДляОрганизации";
			ИначеЕсли НазначениеПоказателя = Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению Тогда
				НазначениеПоказателя	= "ДляПодразделения";
			Иначе
				НазначениеПоказателя	= "ДляСотрудника";
			КонецЕсли;
			
			Идентификатор = ИдентификаторИсходный;
			Выполнить(Алгоритмы.ПереставитьПервуюЦифруИдентификатора);
			
			НаименованиеДляВсех = "";
			Если НазначениеПоказателя	= "ДляСотрудника" Тогда
				ВозможностьИзменения = Показатель.ВозможностьИзменения;
				Если ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется Тогда
					НаименованиеДляВсех	= " для " + ВР.Наименование;
				КонецЕсли;
			КонецЕсли;
			НаименованиеПоказателя		= НаименованиеПоказателя + НаименованиеДляВсех;
			
			СтруктураИдентификатора = Новый Структура("СтруктураИдентификатора", НаименованиеДляВсех);
			Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
			Идентификатор = Идентификатор + СтруктураИдентификатора.Идентификатор;
			
			Процентный = Ложь;
			ТипПоказателя = Показатель["ТипПоказателя"];
			Если ТипПоказателя	= Перечисления.ТипыПоказателейСхемМотивации.Денежный Тогда
				ТипПоказателя	= "Денежный";
			ИначеЕсли ТипПоказателя	= Перечисления.ТипыПоказателейСхемМотивации.Процентный Тогда
				ТипПоказателя	= "Числовой";
				Процентный = Истина;
				Если ЗначениеЗаполнено(ФормулаРасчета) И Найти(ФормулаРасчета, "/ 100") = 0 Тогда
					ФормулаРасчета = "" + ФормулаРасчета + " / 100";
				КонецЕсли;
			//ИначеЕсли ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Стаж Тогда
			//	ТипПоказателя	= "ЧисловойЗависящийОтСтажа";
			//	ФормулаНеКонвертируется = Истина;
			Иначе
				ТипПоказателя	= "Числовой";
			КонецЕсли;
			
			ВидСтажа = "";
			//Если ЗначениеЗаполнено(Показатель.ВидСтажа) Тогда
			//	
			//	Если Показатель.ВидСтажа = Справочники.ВидыСтажа.НепрерывныйСтаж Тогда
			//		КатегорияСтажа = "Непрерывный";
			//	ИначеЕсли Показатель.ВидСтажа = Справочники.ВидыСтажа.ОбщийНаучноПедагогическийСтаж Тогда
			//		КатегорияСтажа = "ОбщийНаучноПедагогический";
			//	ИначеЕсли Показатель.ВидСтажа = Справочники.ВидыСтажа.ОбщийСтаж Тогда
			//		КатегорияСтажа = "Общий";
			//	ИначеЕсли Показатель.ВидСтажа = Справочники.ВидыСтажа.ПедагогическийСтаж Тогда
			//		КатегорияСтажа = "Педагогический";
			//	ИначеЕсли Показатель.ВидСтажа = Справочники.ВидыСтажа.РасширенныйСтраховойСтажДляБЛ Тогда
			//		КатегорияСтажа = "РасширенныйСтраховой";
			//	ИначеЕсли Показатель.ВидСтажа = Справочники.ВидыСтажа.СтажНаНадбавкуЗаВыслугуЛет Тогда
			//		КатегорияСтажа = "ВыслугаЛет";
			//	ИначеЕсли Показатель.ВидСтажа = Справочники.ВидыСтажа.СтраховойСтажДляБЛ Тогда
			//		КатегорияСтажа = "Страховой";	
			//	Иначе
			//		КатегорияСтажа = "Прочее";
			//	КонецЕсли;
			//	
			//	ВидСтажа = Новый Структура;
			//	ВидСтажа.Вставить("Наименование", Показатель.ВидСтажа.Наименование);
			//	ВидСтажа.Вставить("КатегорияСтажа", КатегорияСтажа);
			//	ВидСтажа.Вставить("ПометкаУдаления", Показатель.ВидСтажа.ПометкаУдаления);
			//	
			//КонецЕсли;
			
			Описание = Неопределено;
			Идентификатор = "##";
			Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
			ОписаниеПоказателя = Описание;
			
			ОписаниеПоказателя.Идентификатор = Идентификатор;
			ОписаниеПоказателя.Наименование  = НаименованиеПоказателя;
			
			КраткоеНаименование = "";
			ТекстоваяСтрока = НаименованиеПоказателя;
			Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
			ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
			ОписаниеПоказателя.ТипПоказателя = ТипПоказателя;
			ОписаниеПоказателя.НазначениеПоказателя = НазначениеПоказателя;
			ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
			ОписаниеПоказателя.ОтображатьВДокументахНачисления = Истина;
			ОписаниеПоказателя.СпособПримененияЗначений = ?(ЗапрашиватьПриКадровыхПеремещениях, "Постоянное", "Разовое");
			ОписаниеПоказателя.СпособВводаЗначений = "ВводитсяЕдиновременно";
			ОписаниеПоказателя.Точность = 2;
			ОписаниеПоказателя.ВидСтажа = ВидСтажа;
			ОписаниеПоказателя.Предопределенный = Ложь;
			ОписаниеПоказателя.Ссылка = Показатель;
			
		КонецЕсли;
		
		ЗапрашиватьПриВводе = ЗапрашиватьПриКадровыхПеремещениях 
		И ОписаниеПоказателя.НазначениеПоказателя = "ДляСотрудника"
		И ОписаниеПоказателя.СпособПримененияЗначений = "Постоянное"
		И Не ОписаниеПоказателя.ТипПоказателя = "ЧисловойЗависящийОтСтажа"
		И Не ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически;
		
		НоваяСтрока = ТЗПоказатели.Добавить();
		НоваяСтрока.Показатель = ОписаниеПоказателя;
		НоваяСтрока.ЗапрашиватьПриВводе = ЗапрашиватьПриВводе;
		
		Если ЗапрашиватьПриВводе Тогда
			ОписаниеВР.ГдеЗначенияПоказателей.Вставить(Идентификатор, "Показатель" + НомерПоказателя);
		КонецЕсли;
		
	КонецЦикла;
	
	// проверим показатели на возможность корректировки формулы
	Если ЕстьПоказательОклад И ЕстьПоказательНормаВремениВДнях Тогда
		Описание = Неопределено;
		Идентификатор = "НормаДней";
		Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
		ОписаниеПоказателяНормаДней = Описание;
		Для каждого СтрокаТЗ Из ТЗПоказатели Цикл
			Если СтрокаТЗ.Показатель.Идентификатор = "НормаДнейПоГрафикуПолногоРабочегоВремени" Тогда
				СтрокаТЗ.Показатель = ОписаниеПоказателяНормаДней;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// формула расчета
	НомерПоказателя = 0;
	Для каждого СтрокаТЗ Из ТЗПоказатели Цикл
		
		НомерПоказателя = НомерПоказателя +1;
		
		ИдентификаторПоказателя = СтрокаТЗ.Показатель.Идентификатор;
		Если ЕстьПоказательОклад И ЕстьПоказательНормаВремениВДнях И ИдентификаторПоказателя = "Оклад" Тогда
			Идентификатор = ИдентификаторПоказателя + " * ДоляНеполногоРабочегоВремени ";
		Иначе
			Идентификатор = ИдентификаторПоказателя;
		КонецЕсли;
		
		СтрокаСИсходнымПоказателем = "ИсходныеДанные.Показатель"+Строка(НомерПоказателя);
		Если Найти(ФормулаРасчета, СтрокаСИсходнымПоказателем) &lt;&gt; 0 Тогда
			ФормулаРасчета = СтрЗаменить(ФормулаРасчета, СтрокаСИсходнымПоказателем, Идентификатор);
		Иначе
			ФормулаРасчетаСловами = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ФормулаРасчета);
			ФормулаРасчета = "";
			Для каждого СловоФормулы Из ФормулаРасчетаСловами Цикл
				Если СловоФормулы = ИдентификаторИсходный Тогда
					ФормулаРасчета = ФормулаРасчета + Идентификатор;
				Иначе
					ФормулаРасчета = ФормулаРасчета + СловоФормулы;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьПоказательОклад Тогда
		НоваяСтрока = ТЗПоказатели.Добавить();
		Описание = Неопределено;
		Идентификатор = "ДоляНеполногоРабочегоВремени";
		Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
		НоваяСтрока.Показатель = Описание;
	КонецЕсли;
	
	Если ПереноситьНачисление Тогда
		
		ОписаниеВР.Код					= ВР.Код;
		ОписаниеВР.Наименование			= ВР.Наименование;
		ОписаниеВР.ВидВремени 			= ВР.ВидВремени;
		ОписаниеВР.ОбозначениеВТабелеУчетаРабочегоВремени = ВР.ОбозначениеВТабелеУчетаРабочегоВремени;
		ОписаниеВР.НачисляетсяПриРасчетеПервойПоловиныМесяца = Истина;
		
		Если ФормулаНеКонвертируется Тогда
			ОписаниеВР.Описание = "??? Формула не перенесена";
			ОписаниеВР.Рассчитывается = Ложь;
		Иначе
			ОписаниеВР.ФормулаРасчета = ФормулаРасчета;
		КонецЕсли;	
		
	КонецЕсли;
	
	
Иначе
	
	// не входит в состав плановых, или просто не переносим
	
КонецЕсли;

// Добавим в таблицу предопределенные показатели
Для каждого Показатель Из ПоказателиНачисления Цикл
	НоваяСтрока = ТЗПоказатели.Добавить();
	
	Описание = Неопределено;
	Идентификатор = Показатель;
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	НоваяСтрока.Показатель = Описание;
	НоваяСтрока.ЗапрашиватьПриВводе = ?(ОписаниеВР.ЗапрашиваемыеПоказатели.Найти(Показатель) &lt;&gt; Неопределено, Истина, Ложь);
КонецЦикла;
ОписаниеВР.Показатели = ТЗПоказатели;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьОписаниеВР_Удержания" ИспользуетсяПриЗагрузке="false">
			<Текст>
Параметры            = ПараметрыДляЗаполнения.Параметры;
ВР                   = ПараметрыДляЗаполнения.ВР;
ТолькоПлановыеУдержания = ПараметрыДляЗаполнения.ТолькоПлановыеУдержания;

СвойстваПоКатегориям = Неопределено;
Выполнить(Алгоритмы.СвойстваУдержанийПоКатегориям);
СвойстваУдержаний = СвойстваПоКатегориям;

ОписаниеВР = Новый Структура(
"Код, 
|Наименование,
|КраткоеНаименование,
|КатегорияУдержания,
|СпособВыполненияУдержания,
|СпособРасчета,
|ФормулаРасчета,
|УчаствуетВРасчетеПервойПоловиныМесяца,
|ВидОтпуска,
|ОтборБазовых,
|Рассчитывается,
|Ссылка,
|Описание,
|ГдеЗначенияПоказателей,
|ГдеЗначение,
|Показатели,
|ЗапрашиваемыеПоказатели,
|БазовыеВидыРасчета,
|Идентификатор"); 	

ОписаниеВР.УчаствуетВРасчетеПервойПоловиныМесяца = Истина;
ОписаниеВР.ГдеЗначенияПоказателей = Новый Структура;
ОписаниеВР.Показатели = Новый ТаблицаЗначений;
ОписаниеВР.ЗапрашиваемыеПоказатели = Новый Массив;
ОписаниеВР.БазовыеВидыРасчета = Новый ТаблицаЗначений;

ОписаниеВР.Ссылка = ВР;
ОписаниеВР.ГдеЗначение = "";

// Показатели
ТЗПоказатели = Новый ТаблицаЗначений;
ТЗПоказатели.Колонки.Добавить("Показатель");
ТЗПоказатели.Колонки.Добавить("ЗапрашиватьПриВводе");

МенеджерВР = ПланыВидовРасчета.УдержанияОрганизаций;
МенеджерПоказатели = Справочники.ПоказателиСхемМотивации;

ОписаниеВР.БазовыеВидыРасчета = ВР.БазовыеВидыРасчета.Выгрузить();

ПоказателиУдержаний = Новый Массив;

ИмяПредопределенного  = МенеджерВР.ПолучитьИмяПредопределенного(ВР);

ОписаниеВР.Идентификатор        = ВР.Ссылка;
Если ЗначениеЗаполнено(ИмяПредопределенного) Тогда
	ОписаниеВР.Идентификатор = ИмяПредопределенного;
//ИначеЕсли ЗначениеЗаполнено(ИдентификаторЭлемента) Тогда
//	ОписаниеВР.Идентификатор = ИдентификаторЭлемента;	
КонецЕсли;

// ПочтовыйСбор
// УдержаниеЗаНеотработанныйОтпускКалендарныеДни
// УдержаниеЗаНеотработанныйОтпускШестидневка
// ИЛПроцентом
// ИЛПроцентомДоПредела
// ИЛФиксированнойСуммой
// ИЛФиксированнойСуммойДоПредела

//Если ВР.ЯвляетсяДСВ Или ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений Тогда
//	
//	ОписаниеВР.КатегорияУдержания = "ДСВ";
//	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваУдержаний[ОписаниеВР.КатегорияУдержания]);
//	
//	Если ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений Тогда
//		ОписаниеВР.Код						= НСтр("ru='ДСВЗН'");
//		ОписаниеВР.Наименование				= НСтр("ru='Добровольные страховые взносы'");
//		ОписаниеВР.КраткоеНаименование 		= НСтр("ru='Добр. страх. взносы'");
//		ОписаниеВР.ФормулаРасчета				= "РасчетнаяБазаСтраховыеВзносы * ПроцентДСВ / 100";
//		ОписаниеВР.ЗапрашиваемыеПоказатели  = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ПроцентДСВ");
//		ОписаниеВР.ГдеЗначенияПоказателей.Вставить("ПроцентДСВ", "Показатель1");
//		ПоказателиУдержаний = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок("РасчетнаяБазаСтраховыеВзносы,ПроцентДСВ");
//	Иначе
//		ОписаниеВР.Код						= НСтр("ru='ДСВ'");
//		ОписаниеВР.Наименование				= НСтр("ru='Добровольные страховые взносы (фиксированной суммой)'");
//		ОписаниеВР.КраткоеНаименование 		= НСтр("ru='Добр. страх. взносы'");
//		ОписаниеВР.ФормулаРасчета			= "";
//		ОписаниеВР.ГдеЗначение 				= "Показатель1";
//		ОписаниеВР.Рассчитывается  			= Ложь;
//	КонецЕсли;
//	
//Иначе
Если ИмяПредопределенного = "ПочтовыйСбор" Тогда
	
	ОписаниеВР.КатегорияУдержания = "ВознаграждениеПлатежногоАгента";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваУдержаний[ОписаниеВР.КатегорияУдержания]);
	ОписаниеВР.Код						= НСтр("ru='АГЕНТ';uk='АГЕНТ'");
	ОписаниеВР.Наименование				= НСтр("ru='Вознаграждение платежного агента';uk='Винагорода платіжного агента'");
	ОписаниеВР.КраткоеНаименование 		= НСтр("ru='Возн. плат. агента';uk='Вин. плат. агента'");
	
ИначеЕсли ИмяПредопределенного = "ИЛПроцентом"
	Или ИмяПредопределенного = "ИЛПроцентомДоПредела"
	Или ИмяПредопределенного = "ИЛФиксированнойСуммой" 
	Или ИмяПредопределенного = "ИЛФиксированнойСуммойДоПредела"
	Или ИмяПредопределенного = "АлиментыПроцентом"
	Или ИмяПредопределенного = "АлиментыПроцентомДоПредела"
	Или ИмяПредопределенного = "АлиментыФиксированнойСуммой" 
	Или ИмяПредопределенного = "АлиментыФиксированнойСуммойДоПредела" Тогда	
	
	ОписаниеВР.КатегорияУдержания = "ИсполнительныйЛист";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваУдержаний[ОписаниеВР.КатегорияУдержания]);
	ОписаниеВР.Код						= НСтр("ru='ИСПДК';uk='ВИКДК'");
	ОписаниеВР.Наименование				= НСтр("ru='Удержание по исполнительному документу';uk='Утримання за виконавчим документом'");
	ОписаниеВР.КраткоеНаименование 		= НСтр("ru='Исп. лист';uk='Вик. лист'");
	
ИначеЕсли Найти(ВРЕГ(ВР.Наименование), "ПРОФВЗНОС") &gt; 0 Или  Найти(ВРЕГ(ВР.Наименование), "ПРОФСОЮЗ")  &gt; 0 Тогда	
	
	ОписаниеВР.КатегорияУдержания = "ПрофсоюзныеВзносы";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваУдержаний[ОписаниеВР.КатегорияУдержания]);
	
	Если ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
		ОписаниеВР.Код					= НСтр("ru='ПРФВЗ';uk='ПРФВЗ'");
		ОписаниеВР.Наименование			= НСтр("ru='Профсоюзные взносы';uk='Профспілкові внески'");
		ОписаниеВР.КраткоеНаименование 	= НСтр("ru='Профвзносы';uk='Профвнески'");
		ОписаниеВР.ФормулаРасчета			= "РасчетнаяБаза * ПроцентПрофсоюзныхВзносов / 100";
		ОписаниеВР.ЗапрашиваемыеПоказатели  = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ПроцентПрофсоюзныхВзносов");
		ОписаниеВР.ГдеЗначенияПоказателей.Вставить("ПроцентПрофсоюзныхВзносов", "Показатель1");
		ПоказателиУдержаний = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("РасчетнаяБаза,ПроцентПрофсоюзныхВзносов");
	Иначе
		ОписаниеВР.Код					= ВР.Код;
		ОписаниеВР.Наименование			= ВР.Наименование;
		ОписаниеВР.ФормулаРасчета			= "";
		ОписаниеВР.ГдеЗначение 				= "Показатель1";
		ОписаниеВР.Рассчитывается  			= Ложь;
	КонецЕсли;
	
ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
	
	НаименованиеПоказателя = ВР.Наименование;
	СтруктураИдентификатора = Новый Структура("Идентификатор", НаименованиеПоказателя);
	Выполнить(Алгоритмы.Показатель_ИдентификаторПоНаименованию);
	ИдентификаторПоказателя = СтруктураИдентификатора.Идентификатор;
	
	Описание = Неопределено;
	Идентификатор = "##"; 
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	ОписаниеПоказателя = Описание;
	ОписаниеПоказателя.Идентификатор = ИдентификаторПоказателя;  
	ОписаниеПоказателя.Наименование = НаименованиеПоказателя;
	
	ТекстоваяСтрока = НаименованиеПоказателя;
	КраткоеНаименование = "";
	Выполнить(Алгоритмы.КраткоеНаименованиеПоТекстовойСтроке);
	
	ОписаниеПоказателя.КраткоеНаименование = КраткоеНаименование;
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = "Постоянное";
	ОписаниеПоказателя.Точность = 2;
	ОписаниеПоказателя.Предопределенный = Ложь;
	
	НоваяСтрока = ТЗПоказатели.Добавить();
	НоваяСтрока.Показатель = ОписаниеПоказателя;
	НоваяСтрока.ЗапрашиватьПриВводе = Истина;
	
	ОписаниеВР.КатегорияУдержания = "ПрочееУдержаниеВПользуТретьихЛиц";
	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваУдержаний[ОписаниеВР.КатегорияУдержания]);
	ОписаниеВР.Код					= ВР.Код;
	ОписаниеВР.Наименование			= ВР.Наименование;
	ОписаниеВР.ФормулаРасчета 		= ИдентификаторПоказателя + " / 100 * РасчетнаяБаза";
	ОписаниеВР.ГдеЗначенияПоказателей.Вставить(ИдентификаторПоказателя, "Показатель1");
	ПоказателиУдержаний = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("РасчетнаяБаза");
	
//ИначеЕсли ВР.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.УдержаниеФиксированнойСуммой Тогда
//	
//	ОписаниеВР.КатегорияУдержания = "ПрочееУдержаниеВПользуТретьихЛиц";
//	ЗаполнитьЗначенияСвойств(ОписаниеВР, СвойстваУдержаний[ОписаниеВР.КатегорияУдержания]);
//	ОписаниеВР.Код					= ВР.Код;
//	ОписаниеВР.Наименование			= ВР.Наименование;
//	ОписаниеВР.ФормулаРасчета			= "";
//	ОписаниеВР.ГдеЗначение 				= "Показатель1";
//	ОписаниеВР.Рассчитывается  			= Ложь;
	
Иначе
	
	// не входит в состав плановых, или просто не переносим
	
КонецЕсли;

// Добавим в таблицу предопределенные показатели
Для каждого Показатель Из ПоказателиУдержаний Цикл
	НоваяСтрока = ТЗПоказатели.Добавить();
	
	Описание = Неопределено;
	Идентификатор = Показатель; 
	Выполнить(Алгоритмы.ОписаниеПоказателяПоИдентификатору);
	
	НоваяСтрока.Показатель = Описание;
	НоваяСтрока.ЗапрашиватьПриВводе = ?(ОписаниеВР.ЗапрашиваемыеПоказатели.Найти(Показатель) &lt;&gt; Неопределено, Истина, Ложь);
КонецЦикла;
ОписаниеВР.Показатели = ТЗПоказатели;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗначенияПериодическихПоказателей_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>//ДополнительныеПараметры = ИсходящиеДанные;
Параметры = ДополнительныеПараметры.Параметры;
ПоказателиОрганизацийОписания = ДополнительныеПараметры.ПоказателиОрганизаций;
ПоказателиПодразделенийОписания = ДополнительныеПараметры.ПоказателиПодразделений;
Подразделения = ДополнительныеПараметры.Подразделения;
Организации = ДополнительныеПараметры.Организации;


ПоказателиОрганизаций = Новый Массив;
ПоказателиПодразделений = Новый Массив;
ОписанияПоказателей = Новый Соответствие;
Для каждого ОписаниеПоказателя Из ПоказателиОрганизацийОписания Цикл
	Ссылка = Неопределено;
	ОписаниеПоказателя.Свойство("Ссылка",Ссылка);
	Если Ссылка = Неопределено Тогда
		Продолжить;
	КонецЕсли;
	ОписанияПоказателей.Вставить(Ссылка, ОписаниеПоказателя);
	ПоказателиОрганизаций.Добавить(Ссылка);
КонецЦикла;
Для каждого ОписаниеПоказателя Из ПоказателиПодразделенийОписания Цикл
	Ссылка = Неопределено;
	ОписаниеПоказателя.Свойство("Ссылка",Ссылка);
	Если Ссылка = Неопределено Тогда
		Продолжить;
	КонецЕсли;
	ОписанияПоказателей.Вставить(Ссылка, ОписаниеПоказателя);
	ПоказателиПодразделений.Добавить(Ссылка);
КонецЦикла;

Если ПоказателиПодразделений.Количество() &lt;&gt; 0 Или ПоказателиОрганизаций.Количество() &lt;&gt; 0 Тогда
	
	ДатаСреза = Параметры.МесяцНачалаЭксплуатации;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПоказателиОрганизаций", ПоказателиОрганизаций);
	Запрос.УстановитьПараметр("ПоказателиПодразделений", ПоказателиПодразделений);
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	Запрос.УстановитьПараметр("Подразделения", Подразделения);
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&amp;ДатаСреза КАК Период,
	|	ЗначенияПоказателейСрезПоследних.Организация КАК Организация,
	|	ЗначенияПоказателейСрезПоследних.Показатель,
	|	ЗначенияПоказателейСрезПоследних.Значение
	|ИЗ
	|	РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации.СрезПоследних(
	|			&amp;ДатаСреза,
	|			Показатель В (&amp;ПоказателиОрганизаций)
	|				И Организация В (&amp;Организации)) КАК ЗначенияПоказателейСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&amp;ДатаСреза КАК Период,
	|	ЗначенияПоказателейСрезПоследних.Подразделение.Владелец КАК Организация,
	|	ЗначенияПоказателейСрезПоследних.Подразделение КАК Подразделение,
	|	ЗначенияПоказателейСрезПоследних.Показатель,
	|	ЗначенияПоказателейСрезПоследних.Значение
	|ИЗ
	|	РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации.СрезПоследних(
	|			&amp;ДатаСреза,
	|			Показатель В (&amp;ПоказателиПодразделений)
	|				И Подразделение В (&amp;Подразделения)) КАК ЗначенияПоказателейСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение";
	
	Результат = Запрос.ВыполнитьПакет();
	ПоказателиОрганизаций = Результат[0].Выгрузить();
	ПоказателиПодразделений = Результат[1].Выгрузить();
	
	ЗначенияПоказателейОрганизаций = Новый Массив;
	
	Для каждого ЗначениеПоказателя Из ПоказателиОрганизаций Цикл
		
		ОписаниеПоказателя = ОписанияПоказателей[ЗначениеПоказателя.Показатель];
		ВидДокумента = Новый Структура;
		ВидДокумента.Вставить("Наименование", ОписаниеПоказателя.Идентификатор);
		ВидДокумента.Вставить("ПредставлениеДокумента", ОписаниеПоказателя.Наименование);
		ВидДокумента.Вставить("СпособПримененияЗначенийПоказателей", "Постоянное");
		ВидДокумента.Вставить("ПоказыватьПодразделение", Ложь);
		ВидДокумента.Вставить("ПроверятьЗаполнениеПодразделения", Ложь);
		
		ТЗПоказатели = Новый ТаблицаЗначений;
		ТЗПоказатели.Колонки.Добавить("Показатель");
		НоваяСтрока = ТЗПоказатели.Добавить();
		НоваяСтрока.Показатель = ОписаниеПоказателя; 
		ВидДокумента.Вставить("Показатели", ТЗПоказатели);
		
		ДанныеДляРасчетаЗарплаты = Новый Структура;
		ДанныеДляРасчетаЗарплаты.Вставить("Период", ДатаСреза);
		ДанныеДляРасчетаЗарплаты.Вставить("Дата", ДатаСреза);
		ДанныеДляРасчетаЗарплаты.Вставить("Организация", ЗначениеПоказателя.Организация);
		ДанныеДляРасчетаЗарплаты.Вставить("ВидДокумента", ВидДокумента);
		
		ЗначенияПоказателей = Новый ТаблицаЗначений;
		ЗначенияПоказателей.Колонки.Добавить("Объект");
		ЗначенияПоказателей.Колонки.Добавить("Период");
		ЗначенияПоказателей.Колонки.Добавить("Показатель");
		ЗначенияПоказателей.Колонки.Добавить("Значение");
		
		НоваяСтрока = ЗначенияПоказателей.Добавить();
		НоваяСтрока.Объект = ЗначениеПоказателя.Организация;
		НоваяСтрока.Период = ДатаСреза;
		НоваяСтрока.Значение = ЗначениеПоказателя.Значение;
		НоваяСтрока.Показатель = ОписаниеПоказателя;
		
		ДанныеДляРасчетаЗарплаты.Вставить("ЗначенияПоказателей", ЗначенияПоказателей);
		
		ДополнительныеПараметры.ЗначенияПоказателейОрганизаций.Добавить(ДанныеДляРасчетаЗарплаты);
		
	КонецЦикла;
	
	Для каждого ЗначениеПоказателя Из ПоказателиПодразделений Цикл
		
		ОписаниеПоказателя = ОписанияПоказателей[ЗначениеПоказателя.Показатель];
		ВидДокумента = Новый Структура;
		ВидДокумента.Вставить("Наименование", ОписаниеПоказателя.Идентификатор);
		ВидДокумента.Вставить("ПредставлениеДокумента", ОписаниеПоказателя.Наименование);
		ВидДокумента.Вставить("СпособПримененияЗначенийПоказателей", "Постоянное");
		ВидДокумента.Вставить("ПоказыватьПодразделение", Истина);
		ВидДокумента.Вставить("ПроверятьЗаполнениеПодразделения", Истина);
		
		ТЗПоказатели = Новый ТаблицаЗначений;
		ТЗПоказатели.Колонки.Добавить("Показатель");
		НоваяСтрока = ТЗПоказатели.Добавить();
		НоваяСтрока.Показатель = ОписаниеПоказателя; 
		ВидДокумента.Вставить("Показатели", ТЗПоказатели);
		
		ДанныеДляРасчетаЗарплаты = Новый Структура;
		ДанныеДляРасчетаЗарплаты.Вставить("Период", ДатаСреза);
		ДанныеДляРасчетаЗарплаты.Вставить("Дата", ДатаСреза);
		ДанныеДляРасчетаЗарплаты.Вставить("Организация", ЗначениеПоказателя.Организация);
		ДанныеДляРасчетаЗарплаты.Вставить("Подразделение", ЗначениеПоказателя.Подразделение);
		ДанныеДляРасчетаЗарплаты.Вставить("ВидДокумента", ВидДокумента);
		
		ЗначенияПоказателей = Новый ТаблицаЗначений;
		ЗначенияПоказателей.Колонки.Добавить("Объект");
		ЗначенияПоказателей.Колонки.Добавить("Период");
		ЗначенияПоказателей.Колонки.Добавить("Показатель");
		ЗначенияПоказателей.Колонки.Добавить("Значение");
		
		НоваяСтрока = ЗначенияПоказателей.Добавить();
		НоваяСтрока.Объект = ЗначениеПоказателя.Подразделение;
		НоваяСтрока.Период = ДатаСреза;
		НоваяСтрока.Значение = ЗначениеПоказателя.Значение;
		НоваяСтрока.Показатель = ОписаниеПоказателя;
		
		ДанныеДляРасчетаЗарплаты.Вставить("ЗначенияПоказателей", ЗначенияПоказателей);
		
		ДополнительныеПараметры.ЗначенияПоказателейПодразделений.Добавить(ДанныеДляРасчетаЗарплаты);
		
	КонецЦикла;
		
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="КраткоеНаименованиеПоТекстовойСтроке" ИспользуетсяПриЗагрузке="false">
			<Текст>//ТекстоваяСтрока = ИсходящиеДанные;

СтрокаГласных = "а,е,ё,и,о,у,ы,э,ю,я,ї,і,є";
МассивГласных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаГласных, ",");

Слова = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекстоваяСтрока, " ");

КраткоеНаименование = "";

ТекстСтр = Нрег(ТекстоваяСтрока);
ДлинаСлова = СтрДлина(ТекстСтр);
Если ДлинаСлова &lt;= 4 Тогда
	КраткоеНаименование = КраткоеНаименование + ТекстСтр;
Иначе
	Для каждого Слово Из Слова Цикл
		
		Если СтрДлина(Слово) &lt;= 4 Тогда
			КраткоеНаименование = КраткоеНаименование + " "+ Слово;
		Иначе
			
			КраткоеНаименование = КраткоеНаименование + " " + Лев(Слово,3);
			ОстатокСлова = Сред(Слово,4);
			ДлинаСлова = СтрДлина(ОстатокСлова);
			ГласнаяБуква = Ложь;
			Для СчБукв = 1 По ДлинаСлова Цикл
				Буква = Сред(ОстатокСлова,СчБукв,1);
				ГласнаяБуква = МассивГласных.Найти(Буква) &lt;&gt; Неопределено;
				Если ГласнаяБуква Тогда
					КраткоеНаименование = КраткоеНаименование + ".";
					Прервать;
				Иначе
					КраткоеНаименование = КраткоеНаименование + Буква;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;

//Субконто = КраткоеНаименование;</Текст>
		</Алгоритм>
		<Алгоритм Имя="НачальнаяШтатнаяРасстановка_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>Запрос = Новый Запрос;
Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;

ОписанияНачислений = Новый Соответствие;

ПлановыеНачисленияВсехСотрудников = Новый ТаблицаЗначений;
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("Сотрудник");
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("Начисление");
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("ИдентификаторНачисления");
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");

ПоказателиНачисленийВсехСотрудников = Новый ТаблицаЗначений;
ПоказателиНачисленийВсехСотрудников.Колонки.Добавить("Сотрудник");
ПоказателиНачисленийВсехСотрудников.Колонки.Добавить("Показатель");
ПоказателиНачисленийВсехСотрудников.Колонки.Добавить("Значение");
ПоказателиНачисленийВсехСотрудников.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");

МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
ПлановыеНачисления = ПлановыеНачисленияВсехСотрудников;
ПоказателиНачислений = ПоказателиНачисленийВсехСотрудников;
Выполнить(Алгоритмы.ПолучитьТаблицыПлановыеНачисленияСотрудников);
//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ПолучитьТаблицыПлановыеНачисленияСотрудников", Параметры.Алгоритмы, Запрос.МенеджерВременныхТаблиц, Параметры, Запросы, ПлановыеНачисленияВсехСотрудников, ПоказателиНачисленийВсехСотрудников, ОписанияНачислений);
ПлановыеНачисленияВсехСотрудников = ПлановыеНачисления;
ПоказателиНачисленийВсехСотрудников = ПоказателиНачислений;

ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("Владелец");
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("Подразделение");
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("Должность");
ПлановыеНачисленияВсехСотрудников.Колонки.Добавить("КоличествоСтавок");
ПлановыеНачисленияВсехСотрудников.Индексы.Добавить("Сотрудник");

НачисленияКВыгрузке = Новый Массив;
ПоказателиКВыгрузке = Новый Массив;

//Выполнить(Алгоритмы.СформироватьСписокНачисленийИПоказателейКВыгрузке);

ПоказателиОрганизаций = Новый Массив;
ПоказателиПодразделений = Новый Массив;
Для каждого ОписаниеПоказателя Из ПоказателиКВыгрузке Цикл
	ВыгрузитьПоПравилу(ОписаниеПоказателя, , , , "Показатели_УП");
	Если ОписаниеПоказателя.НазначениеПоказателя = "ДляОрганизации" И ОписаниеПоказателя.СпособПримененияЗначений = "Постоянное" Тогда
		ПоказателиОрганизаций.Добавить(ОписаниеПоказателя);
	ИначеЕсли ОписаниеПоказателя.НазначениеПоказателя = "ДляПодразделения" И ОписаниеПоказателя.СпособПримененияЗначений = "Постоянное" Тогда
		ПоказателиПодразделений.Добавить(ОписаниеПоказателя);	
	КонецЕсли;
КонецЦикла;

//Для каждого ОписаниеВР Из НачисленияКВыгрузке Цикл
//	ВыгрузитьПоПравилу(ОписаниеВР, , , , "Начисления_УП");
//КонецЦикла;

ГрафикиДляВыгрузки = Новый Массив;
ДолжностиКВыгруке = Новый Массив;
ПодразделенияКВыгруке = Новый Массив;
ОрганизацииКВыгруке = Новый Массив;
ВредныеДолжностиКВыгрузке = Новый Массив;

ЕстьРаботаНаНеполнойСтавке = Ложь;

ВыборкаДанных = Новый Массив;

Запрос.Текст = 
"ВЫБРАТЬ
|	РаботникиОрганизации.Организация КАК Организация,
|	РаботникиОрганизации.Сотрудник,
|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
|	РаботникиОрганизации.Должность,
|	РаботникиОрганизации.ЗанимаемыхСтавок,
|	РаботникиОрганизации.ВидДоговора КАК ВидДоговора,
|	РаботникиОрганизации.ВидЗанятости,
|	РаботникиОрганизации.СпособРасчетаАванса,
|	РаботникиОрганизации.СуммаАванса,
|	РаботникиОрганизации.ГрафикРаботы
|ИЗ
|	ВТРаботникиОрганизации КАК РаботникиОрганизации
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
|		ПО РаботникиОрганизации.Сотрудник = СотрудникиОрганизаций.Ссылка
|
|УПОРЯДОЧИТЬ ПО
|	Организация,
|	ВидДоговора,
|	ПодразделениеОрганизации,
|	СотрудникиОрганизаций.Наименование
|ИТОГИ ПО
|	Организация,
|	ВидДоговора,
|	ПодразделениеОрганизации";

ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

//Временно закомментировано - вернутся
//НачальныеОстаткиОтпусков = ОбъектыПереносаДанных.ВыполнитьАлгоритм("НачальныеОстаткиОтпусков_Выбрать", Параметры.Алгоритмы, Параметры);
//НачальныеОстаткиОтпусков.Индексы.Добавить("Организация,ВидДоговора,Подразделение");

СписокНалогов = Новый Массив();
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТБюджетники);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды50);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТЛетчики);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТГПХ);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТГПХУТОГ);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТГПХСудостр);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТРаботникиСР);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТМобил);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТМобилКомп);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТРаботникиЗаПределами);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТРаботникиИностранные);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыУТОГУТОС);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыСР);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТРаботникиФЛ);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТРаботникиУТОГУТОС);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТРаботники);
СписокНалогов.Добавить(Справочники.Налоги.ЕСВФОТСудостр);

Запрос.УстановитьПараметр("Дата",  Параметры.МесяцНачалаЭксплуатации);
Запрос.УстановитьПараметр("Налоги",  СписокНалогов);

Запрос.Текст = 
"ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник,
|	МАКСИМУМ(ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог) КАК Налог
|ИЗ
|	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&amp;Дата, Налог В (&amp;Налоги) И Сотрудник В (ВЫБРАТЬ РаботникиОрганизации.Сотрудник ИЗ ВТРаботникиОрганизации КАК РаботникиОрганизации)) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
|ГДЕ 
|	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
|СГРУППИРОВАТЬ ПО
|	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник";

КатегорииСотрудников = Запрос.Выполнить().Выгрузить();

Запрос.Текст = 
"ВЫБРАТЬ
|	ПоложенныеЕжегодныеОтпускаРаботников.Организация,
|	&amp;Дата КАК ДатаОкончания,
|	ПоложенныеЕжегодныеОтпускаРаботников.Сотрудник,
|	ПоложенныеЕжегодныеОтпускаРаботников.ВидОтпуска,
|	ПоложенныеЕжегодныеОтпускаРаботников.Положено
|ИЗ
|	РегистрСведений.ПоложенныеЕжегодныеОтпускаРаботников.СрезПоследних(&amp;Дата, 
|		Сотрудник В (ВЫБРАТЬ РаботникиОрганизации.Сотрудник ИЗ ВТРаботникиОрганизации КАК РаботникиОрганизации)
|	) КАК ПоложенныеЕжегодныеОтпускаРаботников
|ГДЕ 
|	ПоложенныеЕжегодныеОтпускаРаботников.Положено &gt; 0";
ОтпускаСотрудников = Запрос.Выполнить().Выгрузить();

ЗапросОстаткиОтпусков = Новый Запрос();
ЗапросОстаткиОтпусков.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
ЗапросОстаткиОтпусков.УстановитьПараметр("Работники", ОтпускаСотрудников);
	
ЗапросОстаткиОтпусков.Текст = 
"ВЫБРАТЬ
|	Работники.Организация,
|	Работники.Сотрудник,
|	Работники.ВидОтпуска,
|	Работники.ДатаОкончания
|ПОМЕСТИТЬ ВТРаботникиОрганизации
|ИЗ
|	&amp;Работники КАК Работники
|";

ЗапросОстаткиОтпусков.Выполнить();
	
ПроцедурыУправленияПерсоналом.ПолучитьТаблицуОстатковДнейОтпуска(ЗапросОстаткиОтпусков.МенеджерВременныхТаблиц);
	
ЗапросОстаткиОтпусков.Текст = "ВЫБРАТЬ
|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
|	РаботникиОрганизации.ВидОтпуска КАК ВидОтпуска,
|	РаботникиОрганизации.Организация КАК Организация,
|	ОсталосьДнейОтпуска.РабочийПериодНачало КАК РабочийПериодНачало,
|	ОсталосьДнейОтпуска.РабочийПериодокончание КАК РабочийПериодОкончание,
|	ЕСТЬNULL(ОсталосьДнейОтпуска.ИспользованоДнейОтпуска, 0) КАК ИспользованоДнейОтпуска,
|	ЕСТЬNULL(ОсталосьДнейОтпуска.ОстатокДнейОтпуска, 0) КАК ОстатокДнейОтпуска
|ИЗ
|	(ВЫБРАТЬ
|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
|		РаботникиОрганизации.ВидОтпуска КАК ВидОтпуска,
|		РаботникиОрганизации.Организация КАК Организация
|	ИЗ
|		ВТРаботникиОрганизации КАК РаботникиОрганизации
|	
|	СГРУППИРОВАТЬ ПО
|		РаботникиОрганизации.Сотрудник,
|		РаботникиОрганизации.ВидОтпуска,
|		РаботникиОрганизации.Организация) КАК РаботникиОрганизации
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстатокДнейОтпуска КАК ОсталосьДнейОтпуска
|		ПО РаботникиОрганизации.Сотрудник = ОсталосьДнейОтпуска.Сотрудник
|			И РаботникиОрганизации.ВидОтпуска = ОсталосьДнейОтпуска.ВидОтпуска
|			И РаботникиОрганизации.Организация = ОсталосьДнейОтпуска.Организация
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыОтпусков КАК ВидыОтпусков
|		ПО РаботникиОрганизации.ВидОтпуска = ВидыОтпусков.Ссылка
|
|СГРУППИРОВАТЬ ПО
|	РаботникиОрганизации.Сотрудник,
|	РаботникиОрганизации.ВидОтпуска,
|	ВидыОтпусков.Код,
|	РаботникиОрганизации.Организация,
|	ОсталосьДнейОтпуска.РабочийПериодНачало,
|	ОсталосьДнейОтпуска.РабочийПериодокончание,
|	ОсталосьДнейОтпуска.ИспользованоДнейОтпуска,
|	ОсталосьДнейОтпуска.ОстатокДнейОтпуска
|
|УПОРЯДОЧИТЬ ПО
|	РаботникиОрганизации.Сотрудник,
|	ВидыОтпусков.Код,
|	ОсталосьДнейОтпуска.РабочийПериодНачало УБЫВ,
|	ОсталосьДнейОтпуска.РабочийПериодокончание УБЫВ
|";
ОстаткиОтпусков = ЗапросОстаткиОтпусков.Выполнить().Выгрузить();


ШтатнаяРасстановка = Новый ТаблицаЗначений;
ШтатнаяРасстановка.Колонки.Добавить("Организация");
ШтатнаяРасстановка.Колонки.Добавить("ВидДоговора");
ШтатнаяРасстановка.Колонки.Добавить("Подразделение");
ШтатнаяРасстановка.Колонки.Добавить("Сотрудники");
ШтатнаяРасстановка.Колонки.Добавить("ЕжегодныеОтпуска");
ШтатнаяРасстановка.Колонки.Добавить("ОстаткиОтпусковПоРабочимГодам");

ШтатноеРасписание = Новый ТаблицаЗначений;
ШтатноеРасписание.Колонки.Добавить("Владелец");
ШтатноеРасписание.Колонки.Добавить("Подразделение");
ШтатноеРасписание.Колонки.Добавить("Должность");
ШтатноеРасписание.Колонки.Добавить("ГрафикРаботыСотрудников");
ШтатноеРасписание.Колонки.Добавить("КоличествоСтавок");
ШтатноеРасписание.Колонки.Добавить("КоличествоСтавокНачислений");

ОтборПозиций = Новый Структура("Организация,ВидДоговора,Подразделение");
ОтборНачисленийПоказателей = Новый Структура("Сотрудник");

ОтборКатегорий = Новый Структура("Сотрудник");
ОтборОтпусков = Новый Структура("Сотрудник");
ОтборОстаткиОтпусков = Новый Структура("Сотрудник,ВидОтпуска");

Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	
	Организация = ДанныеПоОрганизации.Организация;
	Если ОрганизацииКВыгруке.Найти(Организация) = Неопределено Тогда
		ОрганизацииКВыгруке.Добавить(Организация);	
	КонецЕсли;
	
	Для Каждого ДанныеПоВидуДоговора Из ДанныеПоОрганизации.Строки Цикл
		
		ВидДоговора = ДанныеПоВидуДоговора.ВидДоговора;
		
		Для Каждого ДанныеПоПодразделению Из ДанныеПоВидуДоговора.Строки Цикл
			
			Подразделение = ДанныеПоПодразделению.ПодразделениеОрганизации;
			Сотрудники    = ДанныеПоПодразделению.Строки;
			
			Если Сотрудники.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаПоДокументу = Новый Структура;
			ВыборкаПоДокументу.Вставить("Организация", Организация);
			ВыборкаПоДокументу.Вставить("Месяц", Параметры.МесяцНачалаЭксплуатации);
			ВыборкаПоДокументу.Вставить("Дата",  Параметры.МесяцНачалаЭксплуатации);
			ВыборкаПоДокументу.Вставить("ВидДоговора", ВидДоговора);
			ВыборкаПоДокументу.Вставить("Подразделение", Подразделение);
//			ВыборкаПоДокументу.Вставить("ЕжегодныеОтпуска", Новый ТаблицаЗначений);
			ВыборкаПоДокументу.Вставить("ОстаткиОтпусковПоРабочимГодам", Новый ТаблицаЗначений);
			
			РасстановкаСотрудников = Новый ТаблицаЗначений;
			РасстановкаСотрудников.Колонки.Добавить("Сотрудник");
			РасстановкаСотрудников.Колонки.Добавить("Подразделение");
			РасстановкаСотрудников.Колонки.Добавить("Должность");
			РасстановкаСотрудников.Колонки.Добавить("ДолжностьПоШтатномуРасписанию");  
			РасстановкаСотрудников.Колонки.Добавить("ВидЗанятости");
			РасстановкаСотрудников.Колонки.Добавить("КоличествоСтавок");  
			РасстановкаСотрудников.Колонки.Добавить("ГрафикРаботы");
			РасстановкаСотрудников.Колонки.Добавить("СпособРасчетаАванса");
			РасстановкаСотрудников.Колонки.Добавить("Аванс");
			РасстановкаСотрудников.Колонки.Добавить("РазрядКатегория");
			РасстановкаСотрудников.Колонки.Добавить("КатегорияЕСВ");
			
			ПоложенныеОтпуска = Новый ТаблицаЗначений;
			ПоложенныеОтпуска.Колонки.Добавить("Сотрудник");
			ПоложенныеОтпуска.Колонки.Добавить("ВидЕжегодногоОтпуска");
			ПоложенныеОтпуска.Колонки.Добавить("КоличествоДнейВГод");
			ПоложенныеОтпуска.Колонки.Добавить("ДатаОстатка");
			ПоложенныеОтпуска.Колонки.Добавить("КоличествоДней");
			
			ОстаткиОтпусковПоРабочимГодам = Новый ТаблицаЗначений;
			ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("Сотрудник");
			ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("ВидЕжегодногоОтпуска");
			ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("ДатаОстатка");
			ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("РабочийГодНачало");
			ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("РабочийГодОкончание");
			ОстаткиОтпусковПоРабочимГодам.Колонки.Добавить("Остаток");
						
			ПлановыеНачисленияСотрудников = ПлановыеНачисленияВсехСотрудников.СкопироватьКолонки();
			ПоказателиНачисленийСотрудников = ПоказателиНачисленийВсехСотрудников.СкопироватьКолонки();
			
			Для каждого СтрокаТаблицы Из Сотрудники Цикл
				
				ОтборНачисленийПоказателей.Сотрудник = СтрокаТаблицы.Сотрудник;
				
				ЗанимаемыхСтавок = ?(СтрокаТаблицы.ЗанимаемыхСтавок &gt; 1,1,СтрокаТаблицы.ЗанимаемыхСтавок);
				
				СтрокиНачислений = ПлановыеНачисленияВсехСотрудников.НайтиСтроки(ОтборНачисленийПоказателей);
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СтрокиНачислений, ПлановыеНачисленияСотрудников);
				ЕстьПлановыеНачисления = (СтрокиНачислений.Количество() &gt; 0);
				
				ПересчитатьЗначениеОклада = Ложь;
				Для каждого ПлановоеНачисление Из СтрокиНачислений Цикл
					ОписаниеВР = ПлановоеНачисление.Начисление;
					Если ОписаниеВР.ДоплатаЗаВредность Тогда
						Если ВредныеДолжностиКВыгрузке.Найти(СтрокаТаблицы.Должность) = Неопределено Тогда
							ВредныеДолжностиКВыгрузке.Добавить(СтрокаТаблицы.Должность);
						КонецЕсли;
					КонецЕсли;
					ПлановоеНачисление.Владелец = Организация;
					ПлановоеНачисление.Подразделение = СтрокаТаблицы.ПодразделениеОрганизации;
					ПлановоеНачисление.Должность = СтрокаТаблицы.Должность;
					ПлановоеНачисление.КоличествоСтавок = ЗанимаемыхСтавок;
					ПересчитатьЗначениеОклада = ПересчитатьЗначениеОклада Или ОписаниеВР.ПересчитатьЗначениеОклада;
				КонецЦикла;
				
				СтрокиПоказателей = ПоказателиНачисленийВсехСотрудников.НайтиСтроки(ОтборНачисленийПоказателей);
				Если ЗанимаемыхСтавок &lt; 1 И ЗанимаемыхСтавок &gt; 0 И ПересчитатьЗначениеОклада Тогда
					Для каждого СтрокаТЗ Из СтрокиПоказателей Цикл
						Если СтрокаТЗ.Показатель.Идентификатор = "Оклад" Тогда
							СтрокаТЗ.Значение = ОКР(СтрокаТЗ.Значение / ЗанимаемыхСтавок, 2);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СтрокиПоказателей, ПоказателиНачисленийСотрудников);
				
				
				ДолжностьПоШтатномуРасписанию = Новый Структура;
				ДолжностьПоШтатномуРасписанию.Вставить("Владелец", Организация);
				ДолжностьПоШтатномуРасписанию.Вставить("Подразделение", СтрокаТаблицы.ПодразделениеОрганизации);
				ДолжностьПоШтатномуРасписанию.Вставить("Должность", СтрокаТаблицы.Должность);
				
				СтрокаШтатноеРасписание = ШтатноеРасписание.Добавить();
				СтрокаШтатноеРасписание.Владелец = Организация;
				СтрокаШтатноеРасписание.Подразделение = СтрокаТаблицы.ПодразделениеОрганизации;
				СтрокаШтатноеРасписание.Должность     = СтрокаТаблицы.Должность;
				СтрокаШтатноеРасписание.КоличествоСтавок = ЗанимаемыхСтавок;
				СтрокаШтатноеРасписание.ГрафикРаботыСотрудников = СтрокаТаблицы.ГрафикРаботы;
				
				СтрокаШтатноеРасписание.КоличествоСтавокНачислений = ?(ЕстьПлановыеНачисления,ЗанимаемыхСтавок,0);
				
				НоваяСтрока = РасстановкаСотрудников.Добавить();;
				НоваяСтрока.Сотрудник = СтрокаТаблицы.Сотрудник;
				НоваяСтрока.Подразделение = СтрокаТаблицы.ПодразделениеОрганизации;
				НоваяСтрока.Должность = СтрокаТаблицы.Должность;
				НоваяСтрока.ДолжностьПоШтатномуРасписанию = ДолжностьПоШтатномуРасписанию;
				НоваяСтрока.ВидЗанятости = СтрокаТаблицы.ВидЗанятости;
				НоваяСтрока.КоличествоСтавок = ЗанимаемыхСтавок;
				НоваяСтрока.ГрафикРаботы = СтрокаТаблицы.ГрафикРаботы;
				НоваяСтрока.СпособРасчетаАванса = СтрокаТаблицы.СпособРасчетаАванса;
				НоваяСтрока.Аванс = СтрокаТаблицы.СуммаАванса;
				
				ЕстьРаботаНаНеполнойСтавке = ЕстьРаботаНаНеполнойСтавке Или ЗанимаемыхСтавок &lt;&gt; 1;
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.ГрафикРаботы) Тогда
					Если ГрафикиДляВыгрузки.Найти(СтрокаТаблицы.ГрафикРаботы) = Неопределено Тогда
						ГрафикиДляВыгрузки.Добавить(СтрокаТаблицы.ГрафикРаботы);	
					КонецЕсли;
				КонецЕсли;
				
				Если ДолжностиКВыгруке.Найти(СтрокаТаблицы.Должность) = Неопределено Тогда
					ДолжностиКВыгруке.Добавить(СтрокаТаблицы.Должность);	
				КонецЕсли;
				
				Если ПодразделенияКВыгруке.Найти(СтрокаТаблицы.ПодразделениеОрганизации) = Неопределено Тогда
					ПодразделенияКВыгруке.Добавить(СтрокаТаблицы.ПодразделениеОрганизации);	
				КонецЕсли;
				
				ОтборКатегорий.Сотрудник = СтрокаТаблицы.Сотрудник;
				СтрокиКатегорий = КатегорииСотрудников.НайтиСтроки(ОтборКатегорий);
				Для каждого Категория Из СтрокиКатегорий Цикл
					НоваяСтрока.КатегорияЕСВ = Категория.Налог;
				КонецЦикла;
				
				ОтборОтпусков.Сотрудник = СтрокаТаблицы.Сотрудник;
				СтрокиОтпусков = ОтпускаСотрудников.НайтиСтроки(ОтборОтпусков);
				Для каждого Отпуск Из СтрокиОтпусков Цикл
					НоваяСтрока = ПоложенныеОтпуска.Добавить();;
					НоваяСтрока.Сотрудник = Отпуск.Сотрудник;
					НоваяСтрока.ВидЕжегодногоОтпуска = Отпуск.ВидОтпуска;
					НоваяСтрока.КоличествоДнейВГод = Отпуск.Положено;
					
					ОтборОстаткиОтпусков.Сотрудник = Отпуск.Сотрудник;
					ОтборОстаткиОтпусков.ВидОтпуска = Отпуск.ВидОтпуска;
					СтрокиОстаткиОтпусков = ОстаткиОтпусков.НайтиСтроки(ОтборОстаткиОтпусков);
					
					ДатаОстаткаПоОтпуску = Параметры.МесяцНачалаЭксплуатации;
					Для каждого ОстокОтпуска Из СтрокиОстаткиОтпусков Цикл
						Если ДатаОстаткаПоОтпуску = Параметры.МесяцНачалаЭксплуатации Тогда
							ДатаОстаткаПоОтпуску = ОстокОтпуска.РабочийПериодНачало;
						КонецЕсли;
						НоваяСтрокаОстаток = ОстаткиОтпусковПоРабочимГодам.Добавить();;
						НоваяСтрокаОстаток.Сотрудник = ОстокОтпуска.Сотрудник;
						НоваяСтрокаОстаток.ВидЕжегодногоОтпуска = ОстокОтпуска.ВидОтпуска;
						НоваяСтрокаОстаток.ДатаОстатка = ДатаОстаткаПоОтпуску;
						НоваяСтрокаОстаток.РабочийГодНачало = ОстокОтпуска.РабочийПериодНачало;
						НоваяСтрокаОстаток.РабочийГодОкончание = ОстокОтпуска.РабочийПериодОкончание;
						
						Если ДатаОстаткаПоОтпуску = ОстокОтпуска.РабочийПериодНачало Тогда
							НоваяСтрокаОстаток.Остаток = -ОстокОтпуска.ИспользованоДнейОтпуска;
						Иначе
							НоваяСтрокаОстаток.Остаток = ОстокОтпуска.ОстатокДнейОтпуска;
						КонецЕсли;	
						
					КонецЦикла;
					
					НоваяСтрока.ДатаОстатка = ДатаОстаткаПоОтпуску;
					
				КонецЦикла
				
			КонецЦикла;
			
			ВыборкаПоДокументу.Вставить("Сотрудники", РасстановкаСотрудников);
			ВыборкаПоДокументу.Вставить("Начисления", ПлановыеНачисленияСотрудников);
			ВыборкаПоДокументу.Вставить("Показатели", ПоказателиНачисленийСотрудников);
			ВыборкаПоДокументу.Вставить("ЕжегодныеОтпуска", ПоложенныеОтпуска);
			ВыборкаПоДокументу.Вставить("ОстаткиОтпусковПоРабочимГодам", ОстаткиОтпусковПоРабочимГодам);
			
			ОтборПозиций.Организация   = Организация;
			ОтборПозиций.ВидДоговора   = ВидДоговора;
			ОтборПозиций.Подразделение = Подразделение;
			
			// Временно, пока нереализовано получения остатков отпусков
			//НайденныеСтроки = НачальныеОстаткиОтпусков.НайтиСтроки(ОтборПозиций);
			//Если НайденныеСтроки.Количество() &gt; 0 Тогда
			//	ВыборкаПоДокументу.Вставить("ЕжегодныеОтпуска", НайденныеСтроки[0].ЕжегодныеОтпуска);
			//	ВыборкаПоДокументу.Вставить("ОстаткиОтпусковПоРабочимГодам", НайденныеСтроки[0].ОстаткиОтпусковПоРабочимГодам);
			//КонецЕсли;
			
			ВыборкаДанных.Добавить(ВыборкаПоДокументу);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецЦикла;

//////////////////////
// Выгрузка значений периодических показателей

ДополнительныеПараметры = Новый Структура;
ДополнительныеПараметры.Вставить("Параметры", Параметры);
ДополнительныеПараметры.Вставить("ПоказателиОрганизаций", ПоказателиОрганизаций);
ДополнительныеПараметры.Вставить("ПоказателиПодразделений", ПоказателиПодразделений);
ДополнительныеПараметры.Вставить("Подразделения", ПодразделенияКВыгруке);
ДополнительныеПараметры.Вставить("Организации", ОрганизацииКВыгруке);
ДополнительныеПараметры.Вставить("ЗначенияПоказателейОрганизаций", Новый Массив);
ДополнительныеПараметры.Вставить("ЗначенияПоказателейПодразделений", Новый Массив);
Выполнить(Алгоритмы.ЗначенияПериодическихПоказателей_Выгрузить);
//ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗначенияПериодическихПоказателей_Выгрузить", Параметры.Алгоритмы, ДополнительныеПараметры);

Для каждого ДанныеДляРасчетаЗарплаты из ДополнительныеПараметры.ЗначенияПоказателейОрганизаций Цикл
	ВыгрузитьПоПравилу(ДанныеДляРасчетаЗарплаты, , , , "ДанныеДляРасчетаЗарплатыПоказателиОрганизации");	
КонецЦикла;	

Для каждого ДанныеДляРасчетаЗарплаты из ДополнительныеПараметры.ЗначенияПоказателейПодразделений Цикл
	ВыгрузитьПоПравилу(ДанныеДляРасчетаЗарплаты, , , , "ДанныеДляРасчетаЗарплатыПоказателиПодразделений");	
КонецЦикла;

// Выгрузка значений периодических показателей
//////////////////////


//////////////////////
// формирование позиций ШР

ПлановыеНачисленияВсехСотрудников.Индексы.Очистить();
ПлановыеНачисленияПозиций = ПлановыеНачисленияВсехСотрудников.Скопировать();
ПлановыеНачисленияПозиций.Свернуть("Владелец,Подразделение,Должность,ИдентификаторНачисления", "КоличествоСтавок");
ПлановыеНачисленияПозиций.Индексы.Добавить("Владелец,Подразделение,Должность");

ОтборНачисленияПозиции = Новый Структура("Владелец,Подразделение,Должность,ИдентификаторНачисления");
ПлановыеНачисленияВсехСотрудников.Индексы.Добавить("Владелец,Подразделение,Должность,ИдентификаторНачисления");

ПоказателиНачисленийВсехСотрудников.Индексы.Очистить();
ОтборПоказателей = Новый Структура("ИдентификаторСтрокиВидаРасчета");
ПоказателиНачисленийВсехСотрудников.Индексы.Добавить("ИдентификаторСтрокиВидаРасчета");

ГрафикиПозиций = ШтатноеРасписание.Скопировать();
ГрафикиПозиций.Свернуть("Владелец,Подразделение,Должность,ГрафикРаботыСотрудников");
ГрафикиПозиций.Индексы.Добавить("Владелец,Подразделение,Должность");

ШтатноеРасписание.Свернуть("Владелец,Подразделение,Должность","КоличествоСтавок,КоличествоСтавокНачислений");

ШтатноеРасписание.Колонки.Добавить("ТарифнаяСетка");
ШтатноеРасписание.Колонки.Добавить("РазрядКатегория");
ШтатноеРасписание.Колонки.Добавить("Наименование");
ШтатноеРасписание.Колонки.Добавить("ДатаУтверждения");
ШтатноеРасписание.Колонки.Добавить("ЕжегодныеОтпуска");
ШтатноеРасписание.Колонки.Добавить("ГрафикРаботыСотрудников");
ШтатноеРасписание.Колонки.Добавить("Начисления");
ШтатноеРасписание.Колонки.Добавить("Показатели");

ОтборПозиций = Новый Структура("Владелец,Подразделение,Должность");

ИдентификаторСтрокиВидаРасчета = 0;

Для каждого ПозицияШР Из ШтатноеРасписание Цикл
	
	ТабНачисленияПозиции = Новый ТаблицаЗначений;
	ТабНачисленияПозиции.Колонки.Добавить("Начисление");
	ТабНачисленияПозиции.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
	
	ТабПоказателиПозиции = Новый ТаблицаЗначений;
	ТабПоказателиПозиции.Колонки.Добавить("Показатель");
	ТабПоказателиПозиции.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
	ТабПоказателиПозиции.Колонки.Добавить("Значение");
	ТабПоказателиПозиции.Колонки.Добавить("ЗначениеМин");
	ТабПоказателиПозиции.Колонки.Добавить("ЗначениеМакс");
	
	ОтборПозиций.Владелец = ПозицияШР.Владелец;
	ОтборПозиций.Подразделение = ПозицияШР.Подразделение;
	ОтборПозиций.Должность = ПозицияШР.Должность;
	
	ЗаполнитьЗначенияСвойств(ОтборНачисленияПозиции, ОтборПозиций);
	
	НаименованиеПозиции = Строка(ПозицияШР.Должность) + ?(ЗначениеЗаполнено(ПозицияШР.Подразделение), " /" + Строка(ПозицияШР.Подразделение) + "/", "");
	
	ПозицияШР.ДатаУтверждения = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	ПозицияШР.Наименование = НаименованиеПозиции;
	
	ЕжегодныеОтпуска = Новый ТаблицаЗначений;
	ЕжегодныеОтпуска.Колонки.Добавить("ВидЕжегодногоОтпуска");
	ЕжегодныеОтпуска.Колонки.Добавить("КоличествоДнейВГод");
	
	ОсновнойОтпуск = Новый Структура;
	ОсновнойОтпуск.Вставить("Наименование", "Основной");
	ОсновнойОтпуск.Вставить("ОтпускЯвляетсяЕжегодным", Истина);
	ОсновнойОтпуск.Вставить("СпособРасчетаОтпуска", "ПоКалендарнымДням");           
	ОсновнойОтпуск.Вставить("ПредоставлятьОтпускВсемСотрудникам", Истина);
	ОсновнойОтпуск.Вставить("КоличествоДнейВГод", 28);
	
	НоваяСтрока = ЕжегодныеОтпуска.Добавить();
	НоваяСтрока.ВидЕжегодногоОтпуска = ОсновнойОтпуск;
	НоваяСтрока.КоличествоДнейВГод = 28;
	
	ПозицияШР.ЕжегодныеОтпуска = ЕжегодныеОтпуска;
	
	СтрокиГрафикиРаботы = ГрафикиПозиций.НайтиСтроки(ОтборПозиций);
	Если СтрокиГрафикиРаботы.Количество()=1 Тогда
		// у всех позиций один график
		ПозицияШР.ГрафикРаботыСотрудников = СтрокиГрафикиРаботы[0].ГрафикРаботыСотрудников;
	КонецЕсли;
	
	НачисленияПозиции = ПлановыеНачисленияПозиций.НайтиСтроки(ОтборПозиций);
	Для каждого НачислениеПозиции Из НачисленияПозиции Цикл
		
		Если НачислениеПозиции.КоличествоСтавок &lt;&gt; ПозицияШР.КоличествоСтавокНачислений Тогда
			// не у всех сотрудников на этой позиции есть это начисление
			Продолжить;
		КонецЕсли;
		
		ОтборНачисленияПозиции.ИдентификаторНачисления = НачислениеПозиции.ИдентификаторНачисления;
		СтрокиОдногоНачисления = ПлановыеНачисленияВсехСотрудников.НайтиСтроки(ОтборНачисленияПозиции);
		Если СтрокиОдногоНачисления.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Начисление = СтрокиОдногоНачисления[0].Начисление;
		
		ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета + 1;
		
		НоваяСтрокаНачисленияПозиции = ТабНачисленияПозиции.Добавить();
		НоваяСтрокаНачисленияПозиции.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
		НоваяСтрокаНачисленияПозиции.Начисление = Начисление;
		
		Для каждого СтрокаТЗНачисления Из СтрокиОдногоНачисления Цикл
			
			ОписаниеНачисления = СтрокаТЗНачисления.Начисление;
			
			ОтборПоказателей.ИдентификаторСтрокиВидаРасчета = СтрокаТЗНачисления.ИдентификаторСтрокиВидаРасчета;
			ЗначенияПоказателей = ПоказателиНачисленийВсехСотрудников.НайтиСтроки(ОтборПоказателей);
			
			Для каждого ЗначениеПоказателя Из ЗначенияПоказателей Цикл
				
				ОписаниеПоказателя = ЗначениеПоказателя.Показатель;
				Значение           = ЗначениеПоказателя.Значение;
				
				НоваяСтрокаПоказателей = ТабПоказателиПозиции.Найти(ОписаниеПоказателя, "Показатель");
				Если НоваяСтрокаПоказателей = Неопределено Тогда
					НоваяСтрокаПоказателей = ТабПоказателиПозиции.Добавить();
					НоваяСтрокаПоказателей.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
					НоваяСтрокаПоказателей.Показатель = ОписаниеПоказателя;
					НоваяСтрокаПоказателей.Значение = Значение;
					НоваяСтрокаПоказателей.ЗначениеМин = Значение;
					НоваяСтрокаПоказателей.ЗначениеМакс = Значение;
				Иначе
					НоваяСтрокаПоказателей.Значение = ?(НоваяСтрокаПоказателей.Значение&gt;Значение,НоваяСтрокаПоказателей.Значение,Значение);
					НоваяСтрокаПоказателей.ЗначениеМин = ?(НоваяСтрокаПоказателей.ЗначениеМин&lt;Значение,НоваяСтрокаПоказателей.ЗначениеМин,Значение);
					НоваяСтрокаПоказателей.ЗначениеМакс = ?(НоваяСтрокаПоказателей.ЗначениеМакс&gt;Значение,НоваяСтрокаПоказателей.ЗначениеМакс,Значение);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПозицияШР.Начисления = ТабНачисленияПозиции;
	ПозицияШР.Показатели = ТабПоказателиПозиции;
	
КонецЦикла;

// конец формирование позиций ШР
//////////////////////

////////////////////////////
// выгрузка должностей

Запрос.УстановитьПараметр("ДолжностиКВыгруке", ДолжностиКВыгруке);
Запрос.Текст = 
"ВЫБРАТЬ
|	*
|ИЗ
|	Справочник.ДолжностиОрганизаций КАК ДолжностиОрганизаций
|ГДЕ
|	ДолжностиОрганизаций.Ссылка В(&amp;ДолжностиКВыгруке)";
ТабДолжности = Запрос.Выполнить().Выгрузить();

ТабДолжности.Колонки.Добавить("ДатаВвода");
//ТабДолжности.Колонки.Добавить("КодПозицииСпискаПФР");
//ТабДолжности.Колонки.Добавить("ОснованиеДосрочногоНазначенияПенсии");
ТабДолжности.Колонки.Добавить("ВведенаВШтатноеРасписание");
ТабДолжности.Колонки.Добавить("ВыплачиваетсяНадбавкаЗаВредность");

Для каждого Должность Из ТабДолжности Цикл
	
	Должность.ДатаВвода = НачалоГода(Параметры.МесяцНачалаЭксплуатации);
	//Должность.КодПозицииСпискаПФР = Должность.КодПозицииСписка;
	//Должность.ОснованиеДосрочногоНазначенияПенсии = Должность.ОснованиеВыслугиЛет;
	Должность.ВведенаВШтатноеРасписание = ?(Должность.ПометкаУдаления = 1,0,1);
	Должность.ВыплачиваетсяНадбавкаЗаВредность = (ВредныеДолжностиКВыгрузке.Найти(Должность.Ссылка) &lt;&gt; Неопределено);
	
	ВыгрузитьПоПравилу(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Должность), , , , "Должности");
	
КонецЦикла;

// выгрузка должностей
////////////////////////////

/////////////////////////////
// графики работы

Запрос = Новый Запрос;
Запрос.УстановитьПараметр("Графики", ГрафикиДляВыгрузки);
Запрос.Текст = 
"ВЫБРАТЬ
|	ГрафикиРаботы.Ссылка КАК ГрафикРаботы
|ИЗ
|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
|ГДЕ
|	ГрафикиРаботы.Ссылка В(&amp;Графики)
|
|ОБЪЕДИНИТЬ
|
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ГрафикиРаботы.ГрафикПолногоРабочегоВремени
|ИЗ
|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
|ГДЕ
|	ГрафикиРаботы.Ссылка В(&amp;Графики)
|	И ГрафикиРаботы.ГрафикПолногоРабочегоВремени &lt;&gt; ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)";
Выборка = Запрос.Выполнить().Выбрать();

ЕстьСуммированныйУчет = Ложь;
ГрафикиРаботыМассив = Новый Массив;

ПараметрыАлгоритма = Новый Структура("ЕстьРаботаНаНеполнойСтавке", ЕстьРаботаНаНеполнойСтавке);
Выполнить(Алгоритмы.ГрафикиРаботы_Выгрузить);

Если ЕстьРаботаНаНеПолнойСтавке Тогда
	НастройкиКадровогоУчета = Новый Структура;
	НастройкиКадровогоУчета.Вставить("ИспользоватьРаботуНаНеполнуюСтавку", Истина);
	ВыгрузитьПоПравилу(НастройкиКадровогоУчета, , , , "НастройкиКадровогоУчета");
КонецЕсли;

Если ЕстьСуммированныйУчет Тогда
	НастройкиРасчетаЗарплаты = Новый Структура;
	НастройкиРасчетаЗарплаты.Вставить("ИспользоватьУчетВремениСотрудниковВЧасах", Истина);
	ВыгрузитьПоПравилу(НастройкиРасчетаЗарплаты, , , , "НастройкиРасчетаЗарплаты");
КонецЕсли;

Для каждого ГрафикРаботы Из ГрафикиРаботыМассив Цикл
	
	ВыгрузитьПоПравилу(ГрафикРаботы, , , , "ГрафикиРаботыСотрудников");
	
	Выполнить(Алгоритмы.ГрафикиРаботыПоВидамВремени_Выгрузить);
	
КонецЦикла;

// графики работы
////////////////////////

Для каждого СтрокаТЗ Из ШтатноеРасписание Цикл
	ВыгрузитьПоПравилу(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТЗ), , , , "ШтатноеРасписание_ПКО_УП");
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="Начисление_УП_ПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
			<Текст>ОбъектМодифицирован = Истина;

СвойстваПоКатегориям	= Новый ФиксированноеСоответствие(ПланыВидовРасчета.Начисления.СвойстваНачисленийПоКатегориям());
СвойстваНачисления		= СвойстваПоКатегориям.Получить(Объект.КатегорияНачисленияИлиНеоплаченногоВремени);

Если Объект.СпособВыполненияНачисления = ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ЕжемесячноПриОкончательномРасчете")
	Или Объект.СпособВыполненияНачисления = ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ВЗаданныхМесяцахПриОкончательномРасчете") Тогда
	Объект.ВключатьВФОТ = Истина;
КонецЕсли;

ВыполнятьАлгоритм = Истина;

Если СвойстваНачисления = Неопределено Тогда
	// если не нашлось для соответствующей категории используем свойства по умолчанию
	СвойстваНачисления = СвойстваПоКатегориям.Получить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПустаяСсылка());
	ЗаполнитьЗначенияСвойств(Объект, СвойстваНачисления, , "СреднийЗаработокОбщий");
	ВыполнятьАлгоритм = Ложь;
КонецЕсли;

// Если категория определена, то свойства, которые она определяет недоступны для изменения пользователем
Если ВыполнятьАлгоритм И Не ЗначениеЗаполнено(Объект.КатегорияНачисленияИлиНеоплаченногоВремени) Тогда
	ВыполнятьАлгоритм = Ложь;
КонецЕсли;

// Поля структуры свойств, которые не являются непосредственно свойствами ПВР, 
// но содержат инструкции и/или другие сведения о категории начисления
Если ВыполнятьАлгоритм Тогда
	
	Инструкции = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СвойстваНачисления.ИменаИнструкций);
	НедоступныеСвойства = СвойстваНачисления.НедоступныеСвойства;
	
	Если Объект.КатегорияНачисленияИлиНеоплаченногоВремени = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда") Тогда 
		Если Объект.СпособВыполненияНачисления = ПредопределенноеЗначение("Перечисление.СпособыВыполненияНачислений.ПоОтдельномуДокументуДоОкончательногоРасчета") Тогда 
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(НедоступныеСвойства, "ВключатьВСреднийЗаработокОбщий");
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(НедоступныеСвойства, "СреднийЗаработокОбщий");
		Иначе 
			ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(НедоступныеСвойства, "ВидВремени");
		КонецЕсли;
	КонецЕсли;
	
	Объект.СреднийЗаработокФСС.Очистить();
	
	Для Каждого КлючИЗначение Из СвойстваНачисления Цикл
		ИмяСвойства = КлючИЗначение.Ключ;
		Если Инструкции.Найти(ИмяСвойства) &lt;&gt; Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если ИмяСвойства = "СреднийЗаработокОбщий" Тогда
			
		ИначеЕсли ИмяСвойства = "ВключатьВСреднийЗаработокОбщий" Тогда
			
		ИначеЕсли ИмяСвойства = "ВключатьВСреднийЗаработокФСС" Тогда
			
			Если КлючИЗначение.Значение Тогда
				НоваяСтрока = Объект.СреднийЗаработокФСС.Добавить();
				НоваяСтрока.ПорядокРасчета	= Перечисления.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2011;
				НоваяСтрока.Значение		= Перечисления.УчетНачисленийВСреднемЗаработкеФСС.Включать;
			КонецЕсли;
			
		ИначеЕсли ИмяСвойства = "ВключатьВСреднийЗаработокФСС2010" Тогда
			
			ВключатьВСреднийЗаработокФСС = КлючИЗначение.Значение;
			Если ВключатьВСреднийЗаработокФСС = Неопределено Тогда
				ВключатьВСреднийЗаработокФСС = СвойстваНачисления.ВключатьВСреднийЗаработокФСС;	
			КонецЕсли;
			
			Если ВключатьВСреднийЗаработокФСС Тогда
				НоваяСтрока = Объект.СреднийЗаработокФСС.Добавить();
				НоваяСтрока.ПорядокРасчета	= Перечисления.ПорядокРасчетаСреднегоЗаработкаФСС.Постановление2010;
				НоваяСтрока.Значение		= Перечисления.УчетНачисленийВСреднемЗаработкеФСС.Включать;
			КонецЕсли
			
		ИначеЕсли ИмяСвойства = "ПериодРасчетаБазовыхНачислений" Тогда
			Если Не ЗначениеЗаполнено(Объект[ИмяСвойства]) Тогда
				Объект[ИмяСвойства] = Перечисления.ПериодыРасчетаБазовыхНачислений.ТекущийМесяц;
			КонецЕсли;
			
		ИначеЕсли ИмяСвойства = "ИндексируетсяСреднийЗаработокОбщий" Тогда
			
		ИначеЕсли НедоступныеСвойства.Найти(ИмяСвойства) &lt;&gt; Неопределено Тогда
			// Недоступные свойства пользователь изменять не может
			Объект[ИмяСвойства] = КлючИЗначение.Значение;
			
		ИначеЕсли (ИмяСвойства = "КодДоходаНДФЛ") И (ИмяСвойства = "ВидНачисленияДляНУ") Тогда
			// Эти свойства всегда переносятся, если они не находятся в списке недоступных
			
		Иначе
			// Остальные заполняются только если не заполнены в старой программе
			Если Не ЗначениеЗаполнено(Объект[ИмяСвойства]) Тогда
				Объект[ИмяСвойства] = КлючИЗначение.Значение;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

ЗапрашиваемыеПоказатели = Новый Массив;
Для Каждого СтрокаПоказателя Из Объект.Показатели Цикл
	Если Не СтрокаПоказателя.ЗапрашиватьПриВводе Тогда
		Продолжить;
	КонецЕсли;
	ЗапрашиваемыеПоказатели.Добавить(СтрокаПоказателя.Показатель.Идентификатор);
КонецЦикла;

Объект.Показатели.Очистить();
РасчетЗарплатыРасширенный.ЗаполнитьТаблицуПоказателейВидаРасчета(Объект);

БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

Если ЗапрашиваемыеПоказатели.Количество() &gt; 0 Тогда
	ЗарплатаКадрыРасширенный.ОтметитьЗапрашиваемыеПоказатели(Объект, ЗапрашиваемыеПоказатели);
	
Иначе
	Если РасчетЗарплатыРасширенный.СпособРасчетаИспользуетФормулу(Объект.СпособРасчета) Тогда
		ПоказателиФормулы = ЗарплатаКадрыРасширенный.ПоказателиФормулы(Объект.ФормулаРасчета);
	Иначе
		ПоказателиФормулы = РасчетЗарплатыРасширенный.ПоказателиПредопределенногоСпособаРасчета(Объект.СпособРасчета);
	КонецЕсли;
	ЗапрашиваемыеПоказатели = ЗарплатаКадрыРасширенный.ЗапрашиваемыеПоказателиВидаРасчетаПоУмолчанию(Объект.Ссылка, ПоказателиФормулы);
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьОтметкуЗапрашиватьПриВводе(ЗапрашиваемыеПоказатели, Объект.Показатели);
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбновитьВидыКонтактнойИнформации" ИспользуетсяПриЗагрузке="true">
			<Текст>Информация = НастройкаПорядкаЭлементов.ПолучитьИнформациюДляПеремещения(Метаданные.Справочники.ВидыКонтактнойИнформации);

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	ВидыКонтактнойИнформации.Ссылка,
|	ВидыКонтактнойИнформации.Родитель КАК Родитель
|ИЗ
|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
|ГДЕ
|	НЕ ВидыКонтактнойИнформации.ЭтоГруппа
|	И ВидыКонтактнойИнформации.РеквизитДопУпорядочивания = 0
|
|УПОРЯДОЧИТЬ ПО
|	Родитель,
|	ВидыКонтактнойИнформации.Тип.Порядок";
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
	СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
	СправочникОбъект.РеквизитДопУпорядочивания = НастройкаПорядкаЭлементовСлужебный.ПолучитьНовоеЗначениеРеквизитаДопУпорядочивания(Информация, Выборка.Родитель, Неопределено);
	СправочникОбъект.ОбменДанными.Загрузка = Истина;
	СправочникОбъект.Записать();
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОписаниеПоказателяПоИдентификатору" ИспользуетсяПриЗагрузке="false">
			<Текст>
Описание = Новый Структура("
|Наименование,
|КраткоеНаименование,
|Идентификатор,
|НазначениеПоказателя,
|СпособПримененияЗначений,
|ТипПоказателя,
|СпособВводаЗначений,
|ВидСтажа,
|Точность,
|ОтображатьВДокументахНачисления,
|ЗначениеРассчитываетсяАвтоматически,
|ВидТарифнойСтавки,
|Предопределенный,
|ИмяПредопределенныхДанных,
|ШкалаОценкиСтажа,
|Ссылка");

Описание.Идентификатор = Идентификатор;
Описание.НазначениеПоказателя = "ДляСотрудника";
Описание.ТипПоказателя = "Числовой";
Описание.ЗначениеРассчитываетсяАвтоматически = Истина;
Описание.СпособПримененияЗначений = "Разовое";
Описание.СпособВводаЗначений = "ВводитсяЕдиновременно";
Описание.ОтображатьВДокументахНачисления = Истина;
Описание.ИмяПредопределенныхДанных = "";

СтрокаПредопределенных = "ВремяВДнях,ВремяВДняхЧасах,ВремяВЧасах,ДневнойТарифПоДолжности,
|ДолжностнаяНадбавка,ДоляНеполногоРабочегоВремени,КалендарныеДни,КалендарныеДниБезПраздников,КалендарныеДниМесяца,
|КвалификационнаяНадбавка,КоличествоДнейКомпенсации,КоличествоДнейОтпуска,ДнейЧасовВыходногоПособия,КоэффициентИндексацииСохраняемогоДенежногоСодержания,
|КоэффициентИндексацииСреднегоЗаработка,МесяцевВыплатыКомпенсации,МесячноеДенежноеСодержание,НатуральнаяОплата,НатуральныйДоход,
|НормаДней,НормаВремениВДнях,НормаВремениВЧасах,Оклад,ОкладЗаКлассныйЧин,ОкладПоВоинскомуЗванию,ОкладПоДолжности,ОкладПоСпециальномуЗванию,
|БазовыйТарифГруппы,ОтработаноДней,ОтработаноСверхурочно,ОтработаноСверхурочноВПределах2Часов,ОтработаноЧасов,ВремяВЧасах,
|ПереработаноПоСуммированномуУчету,ПереработаноПоСуммированномуУчетуВПределах2Часов,ПоказательЭффективностиСотрудника,ПроцентДоплатыЗаДниНетрудоспособности,
|ПроцентДоплатыЗаРаботуВВечернееВремя,ПроцентДоплатыЗаРаботуВНочноеВремя,ПроцентДСВ,ПроцентНадбавкиЗаВредность,ПроцентНадбавкиКОкладуЗаКлассныйЧин,
|ПроцентНПФ,ПроцентОплатыПоСреднему,ПроцентОплатыСохраняемогоДенежногоСодержания,ПроцентПрофсоюзныхВзносов,
|РазмерДневнойДоплатыЗаКвалификацию,РазмерДоплатыЗаКвалификацию,РазмерДоплатыЗаСовмещение,РазмерПособияПоУходуЗаРебенкомДоТрехЛет,
|РазмерЧасовойДоплатыЗаКвалификацию,РасчетнаяБаза,РасчетнаяБазаСтраховыеВзносы,
|СдельныйЗаработок,СохраняемоеДенежноеСодержание,СреднедневнойЗаработок,СреднемесячноеКоличествоКалендарныхДнейОтпускаГосслужащих,
|СреднечасовойЗаработок,СреднийЗаработокОбщий,СреднийЗаработокФСС,СтоимостьДня,СтоимостьДняЧаса,СтоимостьЧаса,
|ТарифнаяСтавкаДневная,ТарифнаяСтавкаЧасовая,ЧасовойТарифПоДолжности";

Если Врег(Идентификатор) = Врег("ТарифнаяСтавкаДневная") &gt; 0 Тогда
	
	Описание.Наименование = НСтр("ru='Тарифная ставка (дневная)';uk='Тарифна ставка (денна)'");
	Описание.КраткоеНаименование = НСтр("ru='Дневн. тариф';uk='Ден. тариф'");
	Описание.ТипПоказателя = "Денежный";
	Описание.ЗначениеРассчитываетсяАвтоматически = Ложь;
	Описание.СпособПримененияЗначений = "Постоянное";
	Описание.Точность = 2;
	Описание.ВидТарифнойСтавки = "ДневнаяТарифнаяСтавка";
	Описание.Предопределенный = Истина;
	
ИначеЕсли Врег(Идентификатор) = Врег("Оклад") &gt; 0 Тогда
	
	Описание.ТипПоказателя = "Денежный";
	Описание.ЗначениеРассчитываетсяАвтоматически = Ложь;
	Описание.СпособПримененияЗначений = "Постоянное";
	Описание.Точность = 2;
	Описание.ВидТарифнойСтавки = "МесячнаяТарифнаяСтавка";
	Описание.Предопределенный = Истина;
	
ИначеЕсли Найти(Врег(СтрокаПредопределенных), Врег(Идентификатор)) &gt; 0 Тогда
//Если Найти(Врег(СтрокаПредопределенных), Врег(Идентификатор)) &gt; 0 Тогда
	
	Описание.Предопределенный = Истина;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПлановыеУдержания_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>ДатаПереноса = Параметры.МесяцНачалаЭксплуатации;
ДлинаСуток = 86400;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;

Запрос.УстановитьПараметр("ДатаСреза", ДатаПереноса);

Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	РаботникиОрганизации.ФизическоеЛицо КАК Физлицо
|ПОМЕСТИТЬ ВТФизическиеЛица
|ИЗ
|	ВТРаботникиОрганизации КАК РаботникиОрганизации
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	УдержанияОрганизаций.Ссылка КАК Ссылка
|ПОМЕСТИТЬ ВТУдержания
|ИЗ
|	ПланВидовРасчета.УдержанияОрганизаций КАК УдержанияОрганизаций
|ГДЕ
|	НЕ УдержанияОрганизаций.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентом), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела))
|
|ИНДЕКСИРОВАТЬ ПО
|	Ссылка
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПлановыеУдержания.Регистратор,
|	ПлановыеУдержания.Организация КАК Организация,
|	ПлановыеУдержания.Сотрудник,
|	ПлановыеУдержания.Сотрудник.Физлицо КАК ФизЛицо,
|	ПлановыеУдержания.ВидРасчета КАК ВидРасчета,
|	ПлановыеУдержания.Показатель1,
|	ПлановыеУдержания.Показатель2,
|	ПлановыеУдержания.Показатель3,
|	ПлановыеУдержания.Показатель4,
|	ПлановыеУдержания.Показатель5,
|	ПлановыеУдержания.Показатель6,
|	ПлановыеУдержания.ПериодЗавершения,
|	ВЫБОР
|		КОГДА ПлановыеУдержания.ДействиеЗавершения = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
|			ТОГДА ИСТИНА
|		ИНАЧЕ ЛОЖЬ
|	КОНЕЦ КАК Завершить
|ПОМЕСТИТЬ ВТПлановыеУдержания
|ИЗ
|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
|			&amp;ДатаСреза,
|			ВидРасчета В
|					(ВЫБРАТЬ
|						Удержания.Ссылка
|					ИЗ
|						ВТУдержания КАК Удержания)
|				И Сотрудник.ФизЛицо В
|					(ВЫБРАТЬ
|						ФизическиеЛица.Физлицо
|					ИЗ
|						ВТФизическиеЛица КАК ФизическиеЛица)) КАК ПлановыеУдержания
|ГДЕ
|	ВЫБОР
|			КОГДА ПлановыеУдержания.ПериодЗавершения &lt;= &amp;ДатаСреза
|					И ПлановыеУдержания.ПериодЗавершения &lt;&gt; ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
|				ТОГДА ПлановыеУдержания.ДействиеЗавершения
|			ИНАЧЕ ПлановыеУдержания.Действие
|		КОНЕЦ &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ПлановыеУдержания.ВидРасчета
|ИЗ
|	ВТПлановыеУдержания КАК ПлановыеУдержания
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	УдержанияОрганизацийБазовыеВидыРасчета.ВидРасчета КАК ВидРасчета
|ИЗ
|	ПланВидовРасчета.УдержанияОрганизаций.БазовыеВидыРасчета КАК УдержанияОрганизацийБазовыеВидыРасчета
|ГДЕ
|	УдержанияОрганизацийБазовыеВидыРасчета.Ссылка В
|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
|				Удержания.ВидРасчета
|			ИЗ
|				ВТПлановыеУдержания КАК Удержания)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПлановыеУдержания.Регистратор,
|	ПлановыеУдержания.Организация КАК Организация,
|	ПлановыеУдержания.Сотрудник,
|	ПлановыеУдержания.ФизЛицо КАК ФизическоеЛицо,
|	ПлановыеУдержания.ВидРасчета КАК ВидРасчета,
|	ПлановыеУдержания.Показатель1,
|	ПлановыеУдержания.Показатель2,
|	ПлановыеУдержания.Показатель3,
|	ПлановыеУдержания.Показатель4,
|	ПлановыеУдержания.Показатель5,
|	ПлановыеУдержания.Показатель6,
|	ПлановыеУдержания.ПериодЗавершения КАК ПериодЗавершения,
|	ПлановыеУдержания.Завершить
|ИЗ
|	ВТПлановыеУдержания КАК ПлановыеУдержания
|
|УПОРЯДОЧИТЬ ПО
|	Организация,
|	ВидРасчета,
|	ПериодЗавершения,
|	ПлановыеУдержания.ФизЛицо";

Результат = Запрос.ВыполнитьПакет();
СписокУдержаний = Результат[3].Выгрузить();
БазовыеВР = Результат[4].Выгрузить();

ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ТолькоПлановыеУдержания");
ПараметрыДляЗаполнения.Параметры = Параметры;
ПараметрыДляЗаполнения.ТолькоПлановыеУдержания = Истина;

ОписанияУдержаний = Новый Соответствие;

Для каждого СтрокаВР Из СписокУдержаний Цикл
	
	Если Не ЗначениеЗаполнено(СтрокаВР.ВидРасчета) Тогда
		Продолжить;
	КонецЕсли;
	
	ПараметрыДляЗаполнения.ВР = СтрокаВР.ВидРасчета;
	
	ОписаниеВР = Неопределено;
	Выполнить(Алгоритмы.ЗаполнитьОписаниеВР_Удержания);
	Если ЗначениеЗаполнено(ОписаниеВР.Наименование) Тогда
		ОписанияУдержаний.Вставить(СтрокаВР.ВидРасчета, ОписаниеВР);
	КонецЕсли;
	
КонецЦикла;

///////////////////////////////////
// подготовка и выгрузка удержаний и показателей

// преобразуем базовые ВР
ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ОписаниеНачисленийСЗ,ТолькоПлановыеНачисления");
ПараметрыДляЗаполнения.Параметры = Параметры;
ПараметрыДляЗаполнения.ТолькоПлановыеНачисления = Истина;
ОписанияНачислений = Новый Соответствие;

Для каждого СтрокаТЗ Из БазовыеВР Цикл
	
	ПараметрыДляЗаполнения.ВР = СтрокаТЗ.ВидРасчета;
	
	ОписаниеВР = ОбъектыПереносаДанных.ВыполнитьАлгоритм("ЗаполнитьОписаниеВР_Начисления", Параметры.Алгоритмы, ПараметрыДляЗаполнения);
	Если ЗначениеЗаполнено(ОписаниеВР.Наименование) Тогда
		ОписанияНачислений.Вставить(СтрокаТЗ.ВидРасчета, ОписаниеВР);
	КонецЕсли;
	
КонецЦикла;

УдержанияКВыгрузке = Новый Массив;
ПоказателиКВыгрузке = Новый Массив;
ИдентификаторыПоказателейКВыгрузке = Новый Массив;

Для каждого ЭлементКлючИЗначение Из ОписанияУдержаний Цикл
	
	ВР = ЭлементКлючИЗначение.Ключ;
	ОписаниеВР = ЭлементКлючИЗначение.Значение;
	
	БазовыеВидыРасчета = Новый ТаблицаЗначений;
	БазовыеВидыРасчета.Колонки.Добавить("ВидРасчета");
	Для каждого СтрокаТЗ Из ОписаниеВР.БазовыеВидыРасчета Цикл
		
		ОпиcаниеБазовыйВР = ОписанияНачислений[СтрокаТЗ.ВидРасчета];
		Если ОпиcаниеБазовыйВР &lt;&gt; Неопределено Тогда
			НоваяСтрока = БазовыеВидыРасчета.Добавить();
			НоваяСтрока.ВидРасчета = ОпиcаниеБазовыйВР;
		КонецЕсли;
		
	КонецЦикла;
	
	ОписаниеВР.БазовыеВидыРасчета = БазовыеВидыРасчета;
	
	УдержанияКВыгрузке.Добавить(ОписаниеВР);
	
	Для каждого СтрокаТЗ Из ОписаниеВР.Показатели Цикл
		Если ИдентификаторыПоказателейКВыгрузке.Найти(СтрокаТЗ.Показатель.Идентификатор) = Неопределено Тогда
			ПоказателиКВыгрузке.Добавить(СтрокаТЗ.Показатель);
			ИдентификаторыПоказателейКВыгрузке.Добавить(СтрокаТЗ.Показатель.Идентификатор);
		КонецЕсли;
	КонецЦикла;
	
КонецЦикла;

Для каждого ОписаниеПоказателя Из ПоказателиКВыгрузке Цикл
	ВыгрузитьПоПравилу(ОписаниеПоказателя, , , , "Показатели_УП");
КонецЦикла;

Для каждого ОписаниеВР Из УдержанияКВыгрузке Цикл
	ВыгрузитьПоПравилу(ОписаниеВР, , , , "Удержания_УП");
КонецЦикла;



// подготовка и выгрузка удержаний и показателей
///////////////////////////////////

Выборка = Результат[5].Выбрать();

Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
	
	Организация = Выборка.Организация;
	
	Пока Выборка.СледующийПоЗначениюПоля("ВидРасчета") Цикл
		
		ВР = Выборка.ВидРасчета;
		ОписаниеВР = ОписанияУдержаний[Выборка.ВидРасчета];
		Если ОписаниеВР = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовоеОписаниеВР = Новый Структура("
		|Наименование");
		
		ЗаполнитьЗначенияСвойств(НовоеОписаниеВР, ОписаниеВР);
		
		Если ОписаниеВР.КатегорияУдержания = "ПрофсоюзныеВзносы" Тогда
			ИмяПравилаВыгрузки = "УдержаниеПрофсоюзныхВзносов";
		ИначеЕсли ОписаниеВР.КатегорияУдержания = "ПрочееУдержаниеВПользуТретьихЛиц" Тогда   
			ИмяПравилаВыгрузки = "ПостоянноеУдержаниеВПользуТретьихЛиц";
		Иначе
			Продолжить;
		КонецЕсли;
		
		Пока Выборка.СледующийПоЗначениюПоля("ПериодЗавершения") Цикл
			
			ПериодЗавершения = Выборка.ПериодЗавершения;
			Если ЗначениеЗаполнено(ПериодЗавершения) Тогда
				ПериодЗавершения = ПериодЗавершения - ДлинаСуток;
			КонецЕсли;
			
			НовыйДокумент = Новый Структура;
			НовыйДокумент.Вставить("Организация",	Организация);
			НовыйДокумент.Вставить("Дата",		    ДатаПереноса);
			НовыйДокумент.Вставить("Удержание",		НовоеОписаниеВР);
			НовыйДокумент.Вставить("Действие",		"Начать");
			НовыйДокумент.Вставить("ДатаНачала",	ДатаПереноса);
			НовыйДокумент.Вставить("ДатаОкончания",	ПериодЗавершения);
			
			Если ОписаниеВР.КатегорияУдержания = "ПрофсоюзныеВзносы" Тогда
				НовыйДокумент.Вставить("ПрофсоюзнаяОрганизация",  "");	
			Иначе
				НовыйДокумент.Вставить("Контрагент",  "");	
			КонецЕсли;
			
			ТабУдержания = Новый ТаблицаЗначений;
			ТабУдержания.Колонки.Добавить("ФизическоеЛицо");
			ТабУдержания.Колонки.Добавить("Размер");
			ТабУдержания.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
			
			ТабПоказатели = Новый ТаблицаЗначений;
			ТабПоказатели.Колонки.Добавить("Показатель");
			ТабПоказатели.Колонки.Добавить("Значение");
			ТабПоказатели.Колонки.Добавить("ИдентификаторСтрокиВидаРасчета");
			
			ИдентификаторСтрокиВидаРасчета = 0;
			
			Пока Выборка.Следующий() Цикл
				
				ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета + 1;
				
				НоваяСтрока = ТабУдержания.Добавить();
				НоваяСтрока.ФизическоеЛицо = Выборка.ФизическоеЛицо;
				НоваяСтрока.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
				
				Если ЗначениеЗаполнено(ОписаниеВР.ГдеЗначение) Тогда
					НоваяСтрока.Размер = Выборка[ОписаниеВР.ГдеЗначение];
				Иначе
					
					Для каждого СтрокаТЗПоказатели Из ОписаниеВР.Показатели Цикл
						
						ОписаниеПоказателя = СтрокаТЗПоказатели.Показатель;
						
						ИмяПоляЗначения = Неопределено;
						ОписаниеВР.ГдеЗначенияПоказателей.Свойство(ОписаниеПоказателя.Идентификатор, ИмяПоляЗначения);
						Если ИмяПоляЗначения = Неопределено Тогда
							Продолжить;
						КонецЕсли;
						
						ЗначениеПоказателя = Выборка[ИмяПоляЗначения];
						Если ЗначениеЗаполнено(ЗначениеПоказателя) Тогда
							НоваяСтрокаПоказателя = ТабПоказатели.Добавить();
							НоваяСтрокаПоказателя.Показатель = ОписаниеПоказателя;
							НоваяСтрокаПоказателя.Значение = ЗначениеПоказателя;
							НоваяСтрокаПоказателя.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			НовыйДокумент.Вставить("Удержания",  ТабУдержания);
			НовыйДокумент.Вставить("Показатели", ТабПоказатели);
			
			ВыгрузитьПоПравилу(НовыйДокумент, , , , ИмяПравилаВыгрузки);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="Показатели_ПоляПоиска" ИспользуетсяПриЗагрузке="true">
			<Текст>Идентификатор = СвойстваПоиска.Получить("Идентификатор");
ЗаписыватьПоказатель = Ложь;
ОписаниеПоказателя = Справочники.ПоказателиРасчетаЗарплаты.ОписаниеПоказателя();

Если Идентификатор = "НормаЧасов" Тогда
	
	ОписаниеПоказателя.Идентификатор = "НормаЧасов";
	ОписаниеПоказателя.ИмяПредопределенныхДанных = "НормаВремениВЧасах";
	ОписаниеПоказателя.Наименование = НСтр("ru='Норма часов';uk='Норма годин'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Норма (час.)';uk='Норма (год.)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ВремяВДнях" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ВремяВДнях";
	ОписаниеПоказателя.Наименование = НСтр("ru='Время в днях';uk='Час в днях'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "КалендарныеДни" Тогда
	
	ОписаниеПоказателя.Идентификатор = "КалендарныеДни";
	ОписаниеПоказателя.Наименование = НСтр("ru='Календарные дни';uk='Календарні дні'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Календ. дн.';uk='Календ. дн.'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ВремяВЧасах" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ВремяВЧасах";
	ОписаниеПоказателя.Наименование = НСтр("ru='Время в часах';uk='Час в годинах'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	ОписаниеПоказателя.Точность = 3;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "КалендарныеДниМесяца" Тогда
	
	ОписаниеПоказателя.Идентификатор = "КалендарныеДниМесяца";
	ОписаниеПоказателя.Наименование = НСтр("ru='Календарные дни месяца';uk='Календарні дні місяця'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Календ. дн. (мес)';uk='Календ. дн. (міс)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "НормаДнейПоГрафикуПолногоРабочегоВремени" Тогда
	
	ОписаниеПоказателя.Идентификатор = "НормаДнейПоГрафикуПолногоРабочегоВремени";
	ОписаниеПоказателя.ИмяПредопределенныхДанных = "НормаВремениВДнях";
	ОписаниеПоказателя.Наименование = НСтр("ru='Норма дней по графику полного рабочего времени';uk='Норма днів за графіком повного робочого часу'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Норма дн. полн.граф.';uk='Норма дн. повн.граф.'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "НормаЧасов" Тогда
	
	ОписаниеПоказателя.Идентификатор = "НормаЧасов";
	ОписаниеПоказателя.ИмяПредопределенныхДанных = "НормаВремениВЧасах";
	ОписаниеПоказателя.Наименование = НСтр("ru='Норма часов';uk='Норма годин'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Норма (час.)';uk='Норма (год.)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "Оклад" Тогда
	
	ОписаниеПоказателя.Идентификатор = "Оклад";
	ОписаниеПоказателя.ТипПоказателя = Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.МесячнаяТарифнаяСтавка;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ОкладЗаКлассныйЧин" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ОкладЗаКлассныйЧин";
	ОписаниеПоказателя.Наименование = НСтр("ru='Оклад за классный чин';uk='Оклад за класний чин'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Окл. классн. чин';uk='Окл. класн. чин'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Истина;
	ОписаниеПоказателя.ТипПоказателя = Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность = 2;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ОтработаноДней" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ОтработаноДней";
	ОписаниеПоказателя.Наименование = НСтр("ru='Отработано дней, в т.ч. сверхурочно';uk='Відпрацьовано днів, в т. ч. понаднормово'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Отраб. (дни)';uk='Відпрац. (дні)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ОтработаноЧасов" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ОтработаноЧасов";
	ОписаниеПоказателя.Наименование = НСтр("ru='Отработано часов, в т.ч. сверхурочно';uk='Відпрацьовано годин, в т. ч. понаднормово'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Отраб. (час.)';uk='Відпрац. (год.)'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	ОписаниеПоказателя.Точность = 3;
	
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "РасчетнаяБаза" Тогда
	
	ОписаниеПоказателя.Идентификатор = "РасчетнаяБаза";
	ОписаниеПоказателя.Наименование = НСтр("ru='Расчетная база';uk='Розрахункова база'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Расч. база';uk='Розрах. база'");
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ТарифнаяСтавкаДневная" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ТарифнаяСтавкаДневная";
	ОписаниеПоказателя.Наименование = НСтр("ru='Тарифная ставка (дневная)';uk='Тарифна ставка (денна)'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Дневн. тариф';uk='Ден. тариф'");
	ОписаниеПоказателя.ТипПоказателя = Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.ДневнаяТарифнаяСтавка;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ВремяВЧасах" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ВремяВЧасах";
	ОписаниеПоказателя.Наименование = НСтр("ru='Время в часах';uk='Час в годинах'");
	ОписаниеПоказателя.ОтображатьВДокументахНачисления = Ложь;
	ОписаниеПоказателя.Точность = 3;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ТарифнаяСтавкаЧасовая" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ТарифнаяСтавкаЧасовая";
	ОписаниеПоказателя.Наименование = НСтр("ru='Тарифная ставка (часовая)';uk='Тарифна ставка (годинна)'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Час. тариф';uk='Год. тариф'");
	ОписаниеПоказателя.ТипПоказателя = Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность = 2;
	ОписаниеПоказателя.ВидТарифнойСтавки = Перечисления.ВидыТарифныхСтавок.ЧасоваяТарифнаяСтавка;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "СдельныйЗаработок" Тогда
	
	ОписаниеПоказателя.Идентификатор = "СдельныйЗаработок";
	ОписаниеПоказателя.Наименование = НСтр("ru='Сдельный заработок';uk='Відрядний заробіток'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Сдельно';uk='Відрядно'");
	ОписаниеПоказателя.Точность = 2;
	ОписаниеПоказателя.СпособВводаЗначений = Перечисления.СпособыВводаЗначенийПоказателейРасчетаЗарплаты.НакапливаетсяПоОтдельнымЗначениям;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ПроцентНадбавкиЗаВредность" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ПроцентНадбавкиЗаВредность";
	ОписаниеПоказателя.Наименование = НСтр("ru='Процент надбавки за вредность';uk='Відсоток надбавки за шкідливість'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='% надб.';uk='% надб.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность = 2;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "РайонныйКоэффициент" Тогда
	
	ОписаниеПоказателя.Идентификатор = "РайонныйКоэффициент";
	ОписаниеПоказателя.Наименование = НСтр("ru='Районный коэффициент';uk='Районний коефіцієнт'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Районн. коэфф.';uk='Район. коеф.'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	ОписаниеПоказателя.Точность = 2;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "СевернаяНадбавка" Тогда
	
	ОписаниеПоказателя.Идентификатор = "СевернаяНадбавка";
	ОписаниеПоказателя.Наименование = НСтр("ru='Северная надбавка';uk='Північна надбавка'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='% сев. надб.';uk='% півн. надб.'");
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ОкладПоВоинскомуЗванию" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ОкладПоВоинскомуЗванию";
	ОписаниеПоказателя.Наименование = НСтр("ru='Оклад по воинскому званию';uk='Оклад за військове звання'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='ОВЗ';uk='ОВЗ'");
	ОписаниеПоказателя.ТипПоказателя = Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ОкладПоСпециальномуЗванию" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ОкладПоСпециальномуЗванию";
	ОписаниеПоказателя.Наименование = НСтр("ru='Оклад по специальному званию';uk='Оклад за спеціальним званням'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Окл. по званию';uk='Окл. за званням'");
	ОписаниеПоказателя.ТипПоказателя = Перечисления.ТипыПоказателейРасчетаЗарплаты.Денежный;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ПроцентДСВ" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ПроцентДСВ";
	ОписаниеПоказателя.Наименование = НСтр("ru='Процент добровольных страховых взносов';uk='Відсоток добровільних страхових внесків'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='% ДСВ';uk='% ДСВ'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.Точность = 2;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "ПроцентПрофсоюзныхВзносов" Тогда
	
	ОписаниеПоказателя.Идентификатор = "ПроцентПрофсоюзныхВзносов";
	ОписаниеПоказателя.Наименование = НСтр("ru='Процент профсоюзных взносов';uk='Відсоток профспілкових внесків'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='% профвзносов';uk='% профвнесків'");
	ОписаниеПоказателя.ЗначениеРассчитываетсяАвтоматически = Ложь;
	ОписаниеПоказателя.Точность = 2;
	ОписаниеПоказателя.СпособПримененияЗначений = Перечисления.СпособыПримененияЗначенийПоказателейРасчетаЗарплаты.Постоянное;
	
	ЗаписыватьПоказатель = Истина;
	
ИначеЕсли Идентификатор = "РасчетнаяБазаСтраховыеВзносы" Тогда
	
	ОписаниеПоказателя.Идентификатор = "РасчетнаяБазаСтраховыеВзносы";
	ОписаниеПоказателя.Наименование = НСтр("ru='Расчетная база страховых взносов';uk='Розрахункова база страхових внесків'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru='Расч. база ДСВ';uk='Розрах. база ДСВ'");
	
	ЗаписыватьПоказатель = Истина;	
	
КонецЕсли;

Если ЗаписыватьПоказатель Тогда
	
	ОбновитьПовторноИспользуемыеЗначения();
	Справочники.ПоказателиРасчетаЗарплаты.ЗаписатьПоказатель(ОписаниеПоказателя);
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьТаблицыПлановыеНачисленияСотрудников" ИспользуетсяПриЗагрузке="false">
			<Текст>//МенеджерВременныхТаблиц = ИсходящиеДанные;
//Параметры = ВходящиеДанные;
//Запросы = Источник;
//ПлановыеНачисления = Приемник;
//ПоказателиНачислений = ТипПриемника;
//ОписанияНачислений = Значение;

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

Запрос.Текст = Запросы.ОписаниеНачислений_СЗ_ВременнаяТаблица.Текст;
Запрос.Выполнить();

Запрос.УстановитьПараметр("ДатаСреза", Параметры.МесяцНачалаЭксплуатации);

МассивВРКПереносу = Новый Массив();
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоЧасам);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифДневной);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ТарифЧасовой);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СдельнаяОплата);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ИндексацияЗарплаты);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаДоМЗП);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаВечерниеЧасы);
МассивВРКПереносу.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоплатаЗаНочныеЧасы);

Запрос.УстановитьПараметр("ВРКПереносу", МассивВРКПереносу);

Запрос.Текст = 
"ВЫБРАТЬ
|	НачисленияРаботниковОрганизации.Сотрудник КАК Сотрудник,
|	ВЫБОР
|		КОГДА НачисленияРаботниковОрганизации.ВидРасчетаИзмерение.Код ЕСТЬ NULL 
|			ТОГДА ИСТИНА
|		ИНАЧЕ ЛОЖЬ
|	КОНЕЦ КАК ОсновноеНачисление,
|	НачисленияРаботниковОрганизации.ВидРасчета,
|	НачисленияРаботниковОрганизации.Действие,
|	НачисленияРаботниковОрганизации.Показатель1,
|	НачисленияРаботниковОрганизации.Показатель2,
|	НачисленияРаботниковОрганизации.Показатель3,
|	НачисленияРаботниковОрганизации.Показатель4,
|	НачисленияРаботниковОрганизации.Показатель5,
|	НачисленияРаботниковОрганизации.Показатель6,
|	НачисленияРаботниковОрганизации.Валюта1,
|	НачисленияРаботниковОрганизации.Валюта2,
|	НачисленияРаботниковОрганизации.Валюта3,
|	НачисленияРаботниковОрганизации.Валюта4,
|	НачисленияРаботниковОрганизации.Валюта5,
|	НачисленияРаботниковОрганизации.Валюта6,
|	НачисленияРаботниковОрганизации.ТарифныйРазряд1,
|	НачисленияРаботниковОрганизации.ТарифныйРазряд2,
|	НачисленияРаботниковОрганизации.ТарифныйРазряд3,
|	НачисленияРаботниковОрганизации.ТарифныйРазряд4,
|	НачисленияРаботниковОрганизации.ТарифныйРазряд5,
|	НачисленияРаботниковОрганизации.ТарифныйРазряд6,
|	НачисленияРаботниковОрганизации.Актуальность
|ПОМЕСТИТЬ ВТПлановыеНачисления
|ИЗ
|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
|			&amp;ДатаСреза,
|			ВидРасчета В(&amp;ВРКПереносу) И
|			Сотрудник В
|				(ВЫБРАТЬ
|					Сотрудники.Сотрудник
|				ИЗ
|					ВТРаботникиОрганизации КАК Сотрудники)) КАК НачисленияРаботниковОрганизации
|ГДЕ
|	НачисленияРаботниковОрганизации.Действие &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ПлановыеНачисления.ВидРасчета
|ИЗ
|	ВТПлановыеНачисления КАК ПлановыеНачисления
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПлановыеНачисления.Сотрудник КАК Сотрудник,
|	ПлановыеНачисления.ОсновноеНачисление,
|	ПлановыеНачисления.ВидРасчета,
|	ПлановыеНачисления.Действие,
|	ПлановыеНачисления.Показатель1,
|	ПлановыеНачисления.Показатель2,
|	ПлановыеНачисления.Показатель3,
|	ПлановыеНачисления.Показатель4,
|	ПлановыеНачисления.Показатель5,
|	ПлановыеНачисления.Показатель6,
|	ПлановыеНачисления.Валюта1,
|	ПлановыеНачисления.Валюта2,
|	ПлановыеНачисления.Валюта3,
|	ПлановыеНачисления.Валюта4,
|	ПлановыеНачисления.Валюта5,
|	ПлановыеНачисления.Валюта6,
|	ПлановыеНачисления.ТарифныйРазряд1,
|	ПлановыеНачисления.ТарифныйРазряд2,
|	ПлановыеНачисления.ТарифныйРазряд3,
|	ПлановыеНачисления.ТарифныйРазряд4,
|	ПлановыеНачисления.ТарифныйРазряд5,
|	ПлановыеНачисления.ТарифныйРазряд6,
|	ПлановыеНачисления.Актуальность
|ИЗ
|	ВТПлановыеНачисления КАК ПлановыеНачисления
|
|УПОРЯДОЧИТЬ ПО
|	Сотрудник
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ОписаниеНачислений.ВидРасчета,
|	ОписаниеНачислений.Индексируется,
|	ОписаниеНачислений.СоставнаяЧасть
|ИЗ
|	ВТОписаниеНачислений КАК ОписаниеНачислений
|;
|
|////////////////////////////////////////////////////////////////////////////////
|УНИЧТОЖИТЬ ВТПлановыеНачисления";

Результат = Запрос.ВыполнитьПакет();
СписокНачислений = Результат[1].Выгрузить();
ТабПлановыеНачисления = Результат[2].Выгрузить();
ОписаниеНачисленийСЗ = Результат[3].Выгрузить();

ПараметрыДляЗаполнения = Новый Структура("Параметры,ВР,ОписаниеНачисленийСЗ,ТолькоПлановыеНачисления");
ПараметрыДляЗаполнения.Параметры = Параметры;
ПараметрыДляЗаполнения.ОписаниеНачисленийСЗ = ОписаниеНачисленийСЗ;
ПараметрыДляЗаполнения.ТолькоПлановыеНачисления = Истина;


Для каждого СтрокаВР Из СписокНачислений Цикл
	
	Если Не ЗначениеЗаполнено(СтрокаВР.ВидРасчета) Тогда
		Продолжить;
	КонецЕсли;
	
	ПараметрыДляЗаполнения.ВР = СтрокаВР.ВидРасчета;
	
	ОписаниеВР = Неопределено;
	Выполнить(Алгоритмы.ЗаполнитьОписаниеВР_Начисления);
	Если ЗначениеЗаполнено(ОписаниеВР.Наименование) Тогда
		ОписанияНачислений.Вставить(СтрокаВР.ВидРасчета, ОписаниеВР);
	КонецЕсли;
	
КонецЦикла;

ИдентификаторСтрокиВидаРасчета = 0;
Для каждого СтрокаТЗ Из ТабПлановыеНачисления Цикл
	
	ОписаниеВР = ОписанияНачислений[СтрокаТЗ.ВидРасчета];
	Если ОписаниеВР = Неопределено Тогда
		Продолжить;
	КонецЕсли;
	
	ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета + 1;
	
	НоваяСтрока = ПлановыеНачисления.Добавить();
	НоваяСтрока.Сотрудник = СтрокаТЗ.Сотрудник;
	НоваяСтрока.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
	
	НовоеОписаниеВР = Новый Структура("
	|Наименование,
	|КраткоеНаименование,
	|ВидВремени,
	//|ВидНачисленияДляНУ,
	|ВидОтпуска,
	|ВидПособияСоциальногоСтрахования,
	//|ВидСтажаПФР2014,
	|КатегорияНачисленияИлиНеоплаченногоВремени,
	//|КодДоходаСтраховыеВзносы,
	|КодДоходаНДФЛ,
	|КоличествоМесяцевБазовогоПериода,
	|КоличествоМесяцевРасчетаСреднегоЗаработка,
	|НачисляетсяПриРасчетеПервойПоловиныМесяца,
	|ОбозначениеВТабелеУчетаРабочегоВремени,
	//|ОтношениеКЕНВД,
	|ПериодРасчетаБазовыхНачислений,
	|ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка,
	|Рассчитывается,
	|СпособВыполненияНачисления,
	|СпособОтраженияЗарплатыВБухучете,
	|СтатьяРасходов,
	|СтатьяФинансирования,
	|Код,
	|ФормулаРасчета,
	|СпособРасчета,
	|БазовыеВидыРасчета,
	|Показатели,
	|СреднийЗаработокОбщий,
	|ДоплатаЗаВредность,
	|ПересчитатьЗначениеОклада,
	|Идентификатор");
	
	НекопируемыеПоля = "БазовыеВидыРасчета,Показатели,СреднийЗаработокОбщий";
	
	ЗаполнитьЗначенияСвойств(НовоеОписаниеВР, ОписаниеВР,,НекопируемыеПоля);
	НовоеОписаниеВР.БазовыеВидыРасчета = ОписаниеВР.БазовыеВидыРасчета.Скопировать();
	НовоеОписаниеВР.СреднийЗаработокОбщий = ОписаниеВР.СреднийЗаработокОбщий.Скопировать();
	НовоеОписаниеВР.Показатели = ОписаниеВР.Показатели.Скопировать();
	
	ПересчитатьЗначениеОклада = Ложь;
	Для каждого СтрокаТЗПоказатели Из ОписаниеВР.Показатели Цикл
		
		ОписаниеПоказателя = СтрокаТЗПоказатели.Показатель;
		
		ПересчитатьЗначениеОклада = ПересчитатьЗначениеОклада Или (ОписаниеПоказателя.Идентификатор = "ДоляНеполногоРабочегоВремени");
		
		ИмяПоляЗначения = Неопределено;
		ОписаниеВР.ГдеЗначенияПоказателей.Свойство(ОписаниеПоказателя.Идентификатор, ИмяПоляЗначения);
		Если ИмяПоляЗначения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеПоказателя = СтрокаТЗ[ИмяПоляЗначения];
		Если ЗначениеЗаполнено(ЗначениеПоказателя) Тогда
						
			НоваяСтрокаПоказателя = ПоказателиНачислений.Добавить();
			НоваяСтрокаПоказателя.Сотрудник = СтрокаТЗ.Сотрудник;
			НоваяСтрокаПоказателя.Показатель = ОписаниеПоказателя;
			НоваяСтрокаПоказателя.Значение = ЗначениеПоказателя;
			НоваяСтрокаПоказателя.ИдентификаторСтрокиВидаРасчета = ИдентификаторСтрокиВидаРасчета;
		КонецЕсли;
		
	КонецЦикла;
	
	НовоеОписаниеВР.ПересчитатьЗначениеОклада = ПересчитатьЗначениеОклада;
	НоваяСтрока.Начисление = НовоеОписаниеВР;
	НоваяСтрока.ИдентификаторНачисления = НовоеОписаниеВР.Идентификатор;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РеестрКадровыхПриказовВыгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>ДатаАктуальности = Параметры.МесяцНачалаЭксплуатации;

Запрос = Новый Запрос;
Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;

Запрос.Текст = 
"ВЫБРАТЬ
|	РаботникиОрганизации.Организация КАК Организация,
|	РаботникиОрганизации.Сотрудник
|ИЗ
|	ВТРаботникиОрганизации КАК РаботникиОрганизации";
МассивСотрудники = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");

РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
Запрос.УстановитьПараметр("РеглВалюта",РеглВалюта);
Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
Запрос.УстановитьПараметр("Сотрудник",		  МассивСотрудники);

СписокЗначений = Новый СписокЗначений;
СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная);
СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная);
СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая);
Запрос.УстановитьПараметр("ТарифнаяСтавкаОклад", СписокЗначений);

Запрос.Текст =
"ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	Работники.Период КАК Период,
|	Работники.Сотрудник КАК Сотрудник,
|	Работники.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
|	Работники.Должность КАК Должность,
|	Работники.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
|	Работники.ПринятНаНовоеРабочееМесто КАК ПринятНаНовоеРабочееМесто,
|	ВЫБОР
|		КОГДА Работники.ОбособленноеПодразделение = РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
|			ТОГДА Работники.ПодразделениеОрганизации
|		ИНАЧЕ Работники.ПодразделениеОрганизации
|	КОНЕЦ КАК ПодразделениеОрганизации,
|	Работники.Регистратор КАК Регистратор,
|	Работники.Регистратор.Дата КАК ДатаПриказа,
|	Работники.Регистратор.Номер КАК НомерПриказа
|ПОМЕСТИТЬ ВТПеремещенияРаботника
|ИЗ
|	РегистрСведений.РаботникиОрганизаций КАК Работники
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
|				&amp;ДатаАктуальности,
|				Сотрудник В (&amp;Сотрудник)
|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацийСрезПоследних
|		ПО Работники.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
|ГДЕ
|	Работники.Сотрудник В(&amp;Сотрудник)
|	И Работники.Период &lt;= &amp;ДатаАктуальности
|
|
|ИНДЕКСИРОВАТЬ ПО
|	Период";
//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
//|	Работники.Период КАК Период,
//|	Работники.Сотрудник КАК Сотрудник,
//|	Работники.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
//|	Работники.Должность КАК Должность,
//|	Работники.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
//|	ВЫБОР
//|		КОГДА Работники.ОбособленноеПодразделение = РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
//|			ТОГДА Работники.ПодразделениеОрганизации
//|		ИНАЧЕ Работники.ПодразделениеОрганизации
//|	КОНЕЦ КАК ПодразделениеОрганизации,
//|	Работники.ПервичныйДокумент КАК Регистратор,
//|	Работники.ПервичныйДокумент.Дата КАК ДатаПриказа,
//|	Работники.ПервичныйДокумент.Номер КАК НомерПриказа
//|ПОМЕСТИТЬ ВТПеремещенияРаботника
//|ИЗ
//|	РегистрСведений.РаботникиОрганизаций КАК Работники
//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
//|				&amp;ДатаАктуальности,
//|				Сотрудник В (&amp;Сотрудник)
//|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацийСрезПоследних
//|		ПО Работники.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
//|ГДЕ
//|	Работники.Сотрудник В(&amp;Сотрудник)
//|	И Работники.Период &lt;= &amp;ДатаАктуальности
//|
//|ОБЪЕДИНИТЬ
//|
//|ВЫБРАТЬ
//|	РаботникиОрганизации.ПериодЗавершения,
//|	РаботникиОрганизации.Сотрудник,
//|	РаботникиОрганизации.ПричинаИзмененияСостоянияЗавершения,
//|	РаботникиОрганизации.ДолжностьЗавершения,
//|	РаботникиОрганизации.ЗанимаемыхСтавокЗавершения,
//|	ВЫБОР
//|		КОГДА РаботникиОрганизации.ОбособленноеПодразделениеЗавершения = РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
//|			ТОГДА РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
//|		ИНАЧЕ РаботникиОрганизации.ПодразделениеОрганизацииЗавершения
//|	КОНЕЦ,
//|	РаботникиОрганизации.ПервичныйДокумент,
//|	РаботникиОрганизации.ПервичныйДокумент.Дата,
//|	РаботникиОрганизации.ПервичныйДокумент.Номер
//|ИЗ
//|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПериодыПерекрытия
//|		ПО (ПериодыПерекрытия.Период &lt;= РаботникиОрганизации.ПериодЗавершения)
//|			И (ПериодыПерекрытия.Период &gt; РаботникиОрганизации.Период)
//|			И (ПериодыПерекрытия.Сотрудник = РаботникиОрганизации.Сотрудник)
//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
//|				&amp;ДатаАктуальности,
//|				Сотрудник В (&amp;Сотрудник)
//|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацийСрезПоследних
//|		ПО РаботникиОрганизации.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
//|ГДЕ
//|	РаботникиОрганизации.ПериодЗавершения &lt;&gt; ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
//|	И РаботникиОрганизации.Сотрудник В(&amp;Сотрудник)
//|	И ПериодыПерекрытия.Период ЕСТЬ NULL 
//|	И РаботникиОрганизации.Период &lt;= &amp;ДатаАктуальности
//|
//|ИНДЕКСИРОВАТЬ ПО
//|	Период";

Запрос.Выполнить();

Запрос.Текст =
"ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	СотрудникиОрганизаций.Организация КАК Организация,
|	Работники.Сотрудник КАК Сотрудник,
|	СотрудникиОрганизаций.Физлицо КАК ФизическоеЛицо,
|	Работники.Сотрудник.ВидДоговора КАК ВидДоговора,
|	Работники.Должность КАК Должность,
|	Работники.ЗанимаемыхСтавок,
|	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
|	ВЫБОР
|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
|			ТОГДА ДОБАВИТЬКДАТЕ(Работники.Период, ДЕНЬ, -1)
|		ИНАЧЕ Работники.Период
|	КОНЕЦ КАК ДатаПеревода,
|	Работники.ПричинаИзмененияСостояния,
|	Работники.ДатаПриказа КАК ДатаПриказа,
|	Работники.НомерПриказа КАК НомерПриказа,
|	УвольненияРаботники.СтатьяКЗОТ.Наименование КАК ОснованиеУвольнения,
|	УвольненияРаботники.ДатаУвольнения,
|	УвольненияРаботники.Ссылка.Номер КАК НомерПриказаУвольнения,
|	УвольненияРаботники.Ссылка.Дата КАК ДатаПриказаУвольнения,
|	ПриемНаРаботуВОрганизациюРаботники.УсловияПриемаНаРаботу КАК ХарактерРаботы,
|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
|	ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд.Наименование, """") КАК ТарифныйРазряд,
|	ЕСТЬNULL(ВЫБОР
|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
|				ТОГДА РазмерыТарифныхРазрядов.Размер
|			ИНАЧЕ ВЫБОР
|					КОГДА ЕСТЬNULL(ПлановыеНачисленияРаботниковОрганизаций.Размер, 0) = 0
|							И ЕСТЬNULL(РазмерыТарифныхРазрядов.Размер, 0) &lt;&gt; 0
|						ТОГДА РазмерыТарифныхРазрядов.Размер
|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Размер
|				КОНЕЦ
|		КОНЕЦ, 0) КАК ТарифнаяСтавка,
|	ЕСТЬNULL(ВЫБОР
|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
|				ТОГДА РазмерыТарифныхРазрядов.Валюта.Наименование
|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта.Наименование
|		КОНЕЦ, """") КАК ИмяВалюты,
|	ЕСТЬNULL(ВЫБОР
|			КОГДА ПлановыеНачисленияРаботниковОрганизаций.ТребуетВводаТарифногоРазряда
|				ТОГДА РазмерыТарифныхРазрядов.Валюта
|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Валюта
|		КОНЕЦ, &amp;РеглВалюта) КАК Валюта,
|	ВЫБОР
|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
|			ТОГДА 0
|		ИНАЧЕ 1
|	КОНЕЦ КАК Приоритет
|ИЗ
|	ВТПеремещенияРаботника КАК Работники
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УвольнениеИзОрганизаций.РаботникиОрганизации КАК УвольненияРаботники
|		ПО Работники.Сотрудник = УвольненияРаботники.Сотрудник
|			И Работники.Регистратор = УвольненияРаботники.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуВОрганизациюРаботники
|		ПО Работники.Сотрудник = ПриемНаРаботуВОрганизациюРаботники.Сотрудник
|			И Работники.Регистратор = ПриемНаРаботуВОрганизациюРаботники.Ссылка
|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|			ВложенныйЗапрос.Сотрудник КАК Сотрудник,
|			ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
|			ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
|			ПлановыеНачисленияРаботниковОрганизаций.Валюта1 КАК Валюта,
|			ВЫБОР
|				КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ПроизвольнаяФормулаРасчета
|					ТОГДА ВЫБОР
|							КОГДА Показатели.Показатель1.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
|								ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1
|							КОГДА Показатели.Показатель2.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
|								ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2
|							КОГДА Показатели.Показатель3.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
|								ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3
|							КОГДА Показатели.Показатель4.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
|								ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4
|							КОГДА Показатели.Показатель5.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
|								ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5
|							КОГДА Показатели.Показатель6.ТипПоказателя = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
|								ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6
|							ИНАЧЕ 0
|						КОНЕЦ
|				ИНАЧЕ ВЫБОР
|						КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда
|							ТОГДА ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1
|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель1
|					КОНЕЦ
|			КОНЕЦ КАК ТарифныйРазряд,
|			ЕСТЬNULL(ВЫБОР
|					КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ТребуетВводаТарифногоРазряда
|						ТОГДА 0
|					ИНАЧЕ ВЫБОР
|							КОГДА ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.ПроизвольнаяФормулаРасчета
|								ТОГДА ВЫБОР
|										КОГДА Показатели.Показатель1 В (&amp;ТарифнаяСтавкаОклад)
|												ИЛИ Показатели.Показатель1.ТарифнаяСтавка
|											ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель1
|										КОГДА Показатели.Показатель2 В (&amp;ТарифнаяСтавкаОклад)
|												ИЛИ Показатели.Показатель2.ТарифнаяСтавка
|											ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель2
|										КОГДА Показатели.Показатель3 В (&amp;ТарифнаяСтавкаОклад)
|												ИЛИ Показатели.Показатель3.ТарифнаяСтавка
|											ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель3
|										КОГДА Показатели.Показатель4 В (&amp;ТарифнаяСтавкаОклад)
|												ИЛИ Показатели.Показатель4.ТарифнаяСтавка
|											ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель4
|										КОГДА Показатели.Показатель5 В (&amp;ТарифнаяСтавкаОклад)
|												ИЛИ Показатели.Показатель5.ТарифнаяСтавка
|											ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель5
|										КОГДА Показатели.Показатель6 В (&amp;ТарифнаяСтавкаОклад)
|												ИЛИ Показатели.Показатель6.ТарифнаяСтавка
|											ТОГДА ПлановыеНачисленияРаботниковОрганизаций.Показатель6
|										ИНАЧЕ 0
|									КОНЕЦ
|							ИНАЧЕ ПлановыеНачисленияРаботниковОрганизаций.Показатель1
|						КОНЕЦ
|				КОНЕЦ, 0) КАК Размер
|		ИЗ
|			(ВЫБРАТЬ
|				РаботникиОрганизаций.Период КАК ДатаПеревода,
|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
|				МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период
|			ИЗ
|				ВТПеремещенияРаботника КАК РаботникиОрганизаций
|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
|					ПО РаботникиОрганизаций.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
|						И РаботникиОрганизаций.Период &gt;= ПлановыеНачисленияРаботниковОрганизаций.Период
|			ГДЕ
|				ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
|			
|			СГРУППИРОВАТЬ ПО
|				РаботникиОрганизаций.Период,
|				РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос
|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|						МАКСИМУМ(ВЫБОР
|								КОГДА Показатели.НомерСтроки = 1
|									ТОГДА Показатели.Показатель
|								ИНАЧЕ NULL
|							КОНЕЦ) КАК Показатель1,
|						МАКСИМУМ(ВЫБОР
|								КОГДА Показатели.НомерСтроки = 2
|									ТОГДА Показатели.Показатель
|								ИНАЧЕ NULL
|							КОНЕЦ) КАК Показатель2,
|						МАКСИМУМ(ВЫБОР
|								КОГДА Показатели.НомерСтроки = 3
|									ТОГДА Показатели.Показатель
|								ИНАЧЕ NULL
|							КОНЕЦ) КАК Показатель3,
|						МАКСИМУМ(ВЫБОР
|								КОГДА Показатели.НомерСтроки = 4
|									ТОГДА Показатели.Показатель
|								ИНАЧЕ NULL
|							КОНЕЦ) КАК Показатель4,
|						МАКСИМУМ(ВЫБОР
|								КОГДА Показатели.НомерСтроки = 5
|									ТОГДА Показатели.Показатель
|								ИНАЧЕ NULL
|							КОНЕЦ) КАК Показатель5,
|						МАКСИМУМ(ВЫБОР
|								КОГДА Показатели.НомерСтроки = 6
|									ТОГДА Показатели.Показатель
|								ИНАЧЕ NULL
|							КОНЕЦ) КАК Показатель6,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период КАК Период,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ДокументОснование КАК ДокументОснование
|					ИЗ
|						РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
|							ПО ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета = Показатели.Ссылка
|					ГДЕ
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета.ЗачетОтработанногоВремени
|						И ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
|					
|					СГРУППИРОВАТЬ ПО
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Период,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ДокументОснование,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение,
|						ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник) КАК Показатели
|					ПО ПлановыеНачисленияРаботниковОрганизаций.Период = Показатели.Период
|						И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = Показатели.Сотрудник
|						И ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = Показатели.ВидРасчетаИзмерение
|						И ПлановыеНачисленияРаботниковОрганизаций.Организация = Показатели.Организация
|				ПО ВложенныйЗапрос.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
|					И ВложенныйЗапрос.Период = ПлановыеНачисленияРаботниковОрганизаций.Период
|		ГДЕ
|			ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО) КАК ПлановыеНачисленияРаботниковОрганизаций
|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
|				ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
|				РазмерТарифныхСтавок.Валюта КАК Валюта,
|				РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
|				РазмерТарифныхСтавок.Размер КАК Размер
|			ИЗ
|				(ВЫБРАТЬ
|					РаботникиОрганизаций.Период КАК ДатаПеревода,
|					РазмерТарифныхСтавок.ТарифныйРазряд КАК ТарифныйРазряд,
|					МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК Период
|				ИЗ
|					ВТПеремещенияРаботника КАК РаботникиОрганизаций
|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
|						ПО РаботникиОрганизаций.Период &gt;= РазмерТарифныхСтавок.Период
|				
|				СГРУППИРОВАТЬ ПО
|					РаботникиОрганизаций.Период,
|					РазмерТарифныхСтавок.ТарифныйРазряд) КАК ВложенныйЗапрос
|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
|					ПО ВложенныйЗапрос.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд
|						И ВложенныйЗапрос.Период = РазмерТарифныхСтавок.Период) КАК РазмерыТарифныхРазрядов
|			ПО ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода = РазмерыТарифныхРазрядов.ДатаПеревода
|				И ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд = РазмерыТарифныхРазрядов.ТарифныйРазряд
|		ПО Работники.Период = ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода
|			И Работники.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
|		ПО Работники.Сотрудник = СотрудникиОрганизаций.Ссылка
|
|УПОРЯДОЧИТЬ ПО
|	Организация";

Выборка = Запрос.Выполнить().Выбрать();

ВыборкаДанных = Новый Массив;

Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
	
	Организация = Выборка.Организация;
	
	РеестрКД = Новый ТаблицаЗначений;
	РеестрКД.Колонки.Добавить("Сотрудник");
	РеестрКД.Колонки.Добавить("ФизическоеЛицо");
	РеестрКД.Колонки.Добавить("Номер");
	РеестрКД.Колонки.Добавить("Дата");
	РеестрКД.Колонки.Добавить("Подразделение");
	РеестрКД.Колонки.Добавить("Должность");
	РеестрКД.Колонки.Добавить("Разряд");
	РеестрКД.Колонки.Добавить("ТарифнаяСтавкаНадбавка");
	РеестрКД.Колонки.Добавить("ВидДоговора");
	РеестрКД.Колонки.Добавить("ВидСобытия");
	РеестрКД.Колонки.Добавить("ДатаПриказа");
	РеестрКД.Колонки.Добавить("НомерПриказа");
	РеестрКД.Колонки.Добавить("Основание");
	
	НомерСтроки = 0;
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки +1;
		
		Если Выборка.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
			
			ВидСобытия = "Увольнение";
			
			НоваяСтрока = РеестрКД.Добавить();
			НоваяСтрока.Сотрудник			 = Выборка.Сотрудник;
			НоваяСтрока.ФизическоеЛицо		 = Выборка.ФизическоеЛицо;
			НоваяСтрока.Номер 				 = НомерСтроки;
			НоваяСтрока.Дата 				 = ?(Выборка.ДатаУвольнения = Null	, "", Выборка.ДатаУвольнения);
			НоваяСтрока.Основание			 = "Приказ (распоряжение) № """ + СокрЛП(Выборка.НомерПриказаУвольнения) +  """ от " + Формат(Выборка.ДатаПриказаУвольнения, "ДЛФ=DD");
			НоваяСтрока.ВидСобытия			 = ВидСобытия;
			НоваяСтрока.ВидДоговора			 = Выборка.ВидДоговора;
			НоваяСтрока.ДатаПриказа			 = Выборка.ДатаПриказаУвольнения;
			НоваяСтрока.НомерПриказа		 = СокрЛП(Выборка.НомерПриказаУвольнения);
			
		Иначе// Кадровое назначение	
			
			Если Выборка.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу тогда
				ВидСобытия = "Прием";
			Иначе
				ВидСобытия = "Перемещение";
			КонецЕсли;
			
			ОписаниеТарифнаяСтавка = Формат(Выборка.ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '");
			
			Если Выборка.Валюта = РеглВалюта или Выборка.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Если Выборка.ТребуетВводаТарифногоРазряда Тогда
					Если ЗначениеЗаполнено(Выборка.ТарифнаяСтавка) Тогда
						ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка	+ " (" + Выборка.ТарифныйРазряд + ")"
					Иначе
						ОписаниеТарифнаяСтавка = Выборка.ТарифныйРазряд + " (ставка не указана)"
					КонецЕсли;
				КонецЕсли;
			Иначе
				
				Если НЕ ЗначениеЗаполнено(Выборка.ТарифнаяСтавка) И Выборка.ТребуетВводаТарифногоРазряда Тогда
					ОписаниеТарифнаяСтавка = Выборка.ТарифныйРазряд + " (ставка не указана)"
				Иначе
					ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка 
					+ " (" + Выборка.ИмяВалюты + ?(Выборка.ТребуетВводаТарифногоРазряда,", " + Выборка.ТарифныйРазряд,"") + ")"
				КонецЕсли;
				
			КонецЕсли;
			
			НоваяСтрока = РеестрКД.Добавить();
			НоваяСтрока.Сотрудник			 = Выборка.Сотрудник;
			НоваяСтрока.ФизическоеЛицо		 = Выборка.ФизическоеЛицо;
			НоваяСтрока.Номер 				 = НомерСтроки;
			НоваяСтрока.Дата 				 = Выборка.ДатаПеревода;
			НоваяСтрока.Подразделение		 = Выборка.ПодразделениеОрганизации;
			НоваяСтрока.Должность			 = Выборка.Должность;
			НоваяСтрока.ТарифнаяСтавкаНадбавка = ОписаниеТарифнаяСтавка;
			НоваяСтрока.Основание			 = "Пр.№ "+ СокрЛП(Выборка.НомерПриказа) +" от " + Формат(Выборка.ДатаПриказа, "ДФ=dd.MM.yyyy");
			НоваяСтрока.ВидСобытия			 = ВидСобытия;
			НоваяСтрока.ВидДоговора			 = Выборка.ВидДоговора;
			НоваяСтрока.ДатаПриказа			 = Выборка.ДатаПриказа;
			НоваяСтрока.НомерПриказа		 = СокрЛП(Выборка.НомерПриказа);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РеестрКД.Количество() &gt; 0 Тогда
		ВыборкаПоДокументу = Новый Структура;
		ВыборкаПоДокументу.Вставить("Номер", "РКД");
		ВыборкаПоДокументу.Вставить("Организация", Организация);
		ВыборкаПоДокументу.Вставить("РеестрКадровыхПриказов", РеестрКД);
		ВыборкаДанных.Добавить(ВыборкаПоДокументу);
	КонецЕсли;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РеестрОтпусковВыгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>Если Параметры.ПереноситьНачисленияПредыдущейПрограммы Тогда
	ДатаАктуальности = Неопределено;
	Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
	ДатаАктуальности = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;
Иначе
	ДатаАктуальности = Параметры.МесяцНачалаЭксплуатации;
КонецЕсли;

Выполнить(Алгоритмы.РаботникиОрганизации_ВременнаяТаблица);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.РаботникиОрганизации_ВременнаяТаблица;
Запрос.Текст = 
"ВЫБРАТЬ
|	РаботникиОрганизации.Сотрудник
|ИЗ
|	ВТРаботникиОрганизации КАК РаботникиОрганизации";
МассивСотрудники = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");

СписокОтпусков = Новый Массив;
СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты);
СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый);
СписокОтпусков.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком);
Запрос.УстановитьПараметр("СписокОтпусков",	СписокОтпусков);

Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
Запрос.УстановитьПараметр("Сотрудник",		  МассивСотрудники);


Запрос.Текст	=	
"ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	СотрудникиОрганизаций.Организация КАК Организация,
|	СотрудникиОрганизаций.Физлицо КАК ФизическоеЛицо,
|	ОтпускаРаботника.ДатаС КАК ДатаС,
|	ОтпускаРаботника.ДатаПо КАК ДатаПо,
|	ВЫБОР
|		КОГДА ОтпускаРаботника.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный)
|			ТОГДА ""Ежегодный""
|		КОГДА ОтпускаРаботника.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускБезСохраненияЗарплаты)
|			ТОГДА ""Без сохранения заработной платы""
|		КОГДА ОтпускаРаботника.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускУчебный)
|			ТОГДА ""Учебный оплачиваемый""
|		КОГДА ОтпускаРаботника.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускУчебныйНеоплачиваемый)
|			ТОГДА ""Учебный неоплачиваемый""
|		КОГДА ОтпускаРаботника.ПричинаОтсутствия = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком)
|			ТОГДА ""По уходу за ребенком""
|		ИНАЧЕ """"
|	КОНЕЦ КАК ПричинаОтсутствия,
|	ОтпускаРаботника.Регистратор,
|	ОтпускаРаботника.ДатаПриказа,
|	ОтпускаРаботника.НомерПриказа,
|	ОтпускаРаботника.Продолжительность,
|	ОтпускаОрганизацийРаботникиОрганизации.РабочийГодС КАК РабочийГодС,
|	ОтпускаОрганизацийРаботникиОрганизации.РабочийГодПо КАК РабочийГодПо,
|	ОтпускаОрганизацийРаботникиОрганизации.Основание КАК Основание,
|	ОтпускаРаботника.Сотрудник КАК Сотрудник,
|	ОтпускаРаботника.Сотрудник.ВидДоговора КАК ВидДоговора
|ИЗ
|	(ВЫБРАТЬ
|		ОтпускаРаботника.ДатаС КАК ДатаС,
|		ОтпускаРаботника.ДатаПо КАК ДатаПо,
|		ОтпускаРаботника.ПричинаОтсутствия КАК ПричинаОтсутствия,
|		ОтпускаРаботника.Регистратор КАК Регистратор,
|		ОтпускаРаботника.ДатаПриказа КАК ДатаПриказа,
|		ОтпускаРаботника.НомерСтроки КАК НомерСтроки,
|		ОтпускаРаботника.НомерПриказа КАК НомерПриказа,
|		ВЫБОР
|			КОГДА ОтпускаРаботника.ПричинаОтсутствия &lt;&gt; ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускЕжегодный)
|				ТОГДА РАЗНОСТЬДАТ(ОтпускаРаботника.ДатаС, ОтпускаРаботника.ДатаПо, ДЕНЬ) + 1
|			ИНАЧЕ ЕСТЬNULL(СУММА(ВЫБОР
|							КОГДА РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПо
|								ТОГДА РегламентированныйПроизводственныйКалендарь.КалендарныеДни
|							ИНАЧЕ 0
|						КОНЕЦ), 0)
|		КОНЕЦ КАК Продолжительность,
|		ОтпускаРаботника.Сотрудник КАК Сотрудник
|	ИЗ
|		(ВЫБРАТЬ
|			ПериодыОтпуска.ДатаС КАК ДатаС,
|			ПериодыОтпуска.ДатаПо КАК ДатаПо,
|			ПериодыОтпуска.Состояние КАК ПричинаОтсутствия,
|			ОтпускаОрганизацииРаботники.НомерСтроки КАК НомерСтроки,
|			ПериодыОтпуска.Регистратор КАК Регистратор,
|			ПериодыОтпуска.Сотрудник КАК Сотрудник,
|			ПериодыОтпуска.Регистратор.Дата КАК ДатаПриказа,
|			ПериодыОтпуска.Регистратор.Номер КАК НомерПриказа
|		ИЗ
|			(ВЫБРАТЬ
|				ДатыУходаВОтпуск.Период КАК ДатаС,
|				ДОБАВИТЬКДАТЕ(ВЫБОР
|						КОГДА ДатыУходаВОтпуск.ПериодЗавершения &gt;= МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
|								ИЛИ ДатыУходаВОтпуск.ПериодЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
|							ТОГДА МИНИМУМ(ДатыВозвращенияИзОтпуска.Период)
|						ИНАЧЕ ДатыУходаВОтпуск.ПериодЗавершения
|					КОНЕЦ, ДЕНЬ, -1) КАК ДатаПо,
|				ДатыУходаВОтпуск.Регистратор КАК Регистратор,
|				ДатыУходаВОтпуск.Сотрудник КАК Сотрудник,
|				ДатыУходаВОтпуск.Состояние КАК Состояние
|			ИЗ
|				РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыУходаВОтпуск
|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК ДатыВозвращенияИзОтпуска
|					ПО ДатыУходаВОтпуск.Период &lt; ДатыВозвращенияИзОтпуска.Период
|						И ДатыУходаВОтпуск.Сотрудник = ДатыВозвращенияИзОтпуска.Сотрудник
|			ГДЕ
|				ДатыУходаВОтпуск.Период &lt;= &amp;ДатаАктуальности
|				И ДатыУходаВОтпуск.Состояние В(&amp;СписокОтпусков)
|				И ДатыУходаВОтпуск.Сотрудник В(&amp;Сотрудник)
|			
|			СГРУППИРОВАТЬ ПО
|				ДатыУходаВОтпуск.Период,
|				ДатыУходаВОтпуск.ПериодЗавершения,
|				ДатыУходаВОтпуск.Регистратор,
|				ДатыУходаВОтпуск.Сотрудник,
|				ДатыУходаВОтпуск.Состояние) КАК ПериодыОтпуска
|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацииРаботники
|				ПО ПериодыОтпуска.ДатаС = ОтпускаОрганизацииРаботники.ДатаНачала
|					И ПериодыОтпуска.Регистратор = ОтпускаОрганизацииРаботники.Ссылка
|					И ПериодыОтпуска.Сотрудник = ОтпускаОрганизацииРаботники.Сотрудник) КАК ОтпускаРаботника
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
|			ПО (РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОтпускаРаботника.ДатаС И ОтпускаРаботника.ДатаПо)
|				И (РегламентированныйПроизводственныйКалендарь.ВидДня &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник))
|	
|	СГРУППИРОВАТЬ ПО
|		ОтпускаРаботника.ДатаС,
|		ОтпускаРаботника.ДатаПо,
|		ОтпускаРаботника.ПричинаОтсутствия,
|		ОтпускаРаботника.Регистратор,
|		ОтпускаРаботника.ДатаПриказа,
|		ОтпускаРаботника.НомерСтроки,
|		ОтпускаРаботника.НомерПриказа,
|		ОтпускаРаботника.Сотрудник) КАК ОтпускаРаботника
|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацийРаботникиОрганизации
|		ПО ОтпускаРаботника.Регистратор = ОтпускаОрганизацийРаботникиОрганизации.Ссылка
|			И ОтпускаРаботника.НомерСтроки = ОтпускаОрганизацийРаботникиОрганизации.НомерСтроки
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
|		ПО ОтпускаРаботника.Сотрудник = СотрудникиОрганизаций.Ссылка
|
|УПОРЯДОЧИТЬ ПО
|	Организация";

Выборка = Запрос.Выполнить().Выбрать();

ВыборкаДанных = Новый Массив;

Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
	
	Организация = Выборка.Организация;
	
	РеестрОтпусков = Новый ТаблицаЗначений;
	РеестрОтпусков.Колонки.Добавить("Сотрудник");
	РеестрОтпусков.Колонки.Добавить("ФизическоеЛицо");
	РеестрОтпусков.Колонки.Добавить("Номер");
	РеестрОтпусков.Колонки.Добавить("ВидОтпуска");
	РеестрОтпусков.Колонки.Добавить("НачалоПериодаЗаКоторыйПредоставляетсяОтпуск");
	РеестрОтпусков.Колонки.Добавить("КонецПериодаЗаКоторыйПредоставляетсяОтпуск");
	РеестрОтпусков.Колонки.Добавить("КоличествоДнейОтпуска");
	РеестрОтпусков.Колонки.Добавить("ДатаНачалаПериодаОтсутствия");
	РеестрОтпусков.Колонки.Добавить("ДатаОкончанияПериодаОтсутствия");
	РеестрОтпусков.Колонки.Добавить("Основание");
	РеестрОтпусков.Колонки.Добавить("ВидДоговора");
	
	НомерСтроки = 0;
	
	Пока Выборка.Следующий() Цикл
		
		//Если НЕ ЗначениеЗаполнено(Выборка.ДатаНачалаДоп) или  Выборка.ДатаС &lt; Выборка.ДатаНачалаДоп Тогда
			
		НомерСтроки = НомерСтроки + 1;
		
		НоваяСтрока = РеестрОтпусков.Добавить();
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		НоваяСтрока.ФизическоеЛицо = Выборка.ФизическоеЛицо;
		НоваяСтрока.ВидДоговора = Выборка.ВидДоговора;
		НоваяСтрока.Номер 	  = НомерСтроки;
		НоваяСтрока.ВидОтпуска = Выборка.ПричинаОтсутствия;
		НоваяСтрока.ДатаНачалаПериодаОтсутствия = Выборка.ДатаС;
		НоваяСтрока.ДатаОкончанияПериодаОтсутствия = Выборка.ДатаПо;
		НоваяСтрока.КоличествоДнейОтпуска = Выборка.Продолжительность;
		НоваяСтрока.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск = Выборка.РабочийГодС;
		НоваяСтрока.КонецПериодаЗаКоторыйПредоставляетсяОтпуск = Выборка.РабочийГодПо;
		НоваяСтрока.Основание = "Пр.№ "+ СокрЛП(Выборка.НомерПриказа) +" от " + Формат(Выборка.ДатаПриказа, "ДФ=dd.MM.yyyy") + " " + Выборка.Основание;
			
		//КонецЕсли;
		//
		//Если ЗначениеЗаполнено(Выборка.ДополнительныйОтпуск) и ЗначениеЗаполнено(Выборка.ДатаНачалаДоп) и ЗначениеЗаполнено(Выборка.ДатаОкончанияДоп) и Выборка.ДатаНачалаДоп &lt;= Выборка.ДатаОкончанияДоп Тогда
		//	
		//	НомерСтроки = НомерСтроки + 1;
		//	
		//	НоваяСтрока = РеестрОтпусков.Добавить();
		//	НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		//	НоваяСтрока.ФизическоеЛицо = Выборка.ФизическоеЛицо;
		//	НоваяСтрока.ВидДоговора = Выборка.ВидДоговора;
		//	НоваяСтрока.Номер 	  = НомерСтроки;
		//	НоваяСтрока.ВидОтпуска = Выборка.ДополнительныйОтпуск;
		//	НоваяСтрока.ДатаНачалаПериодаОтсутствия = Выборка.ДатаНачалаДоп;
		//	НоваяСтрока.ДатаОкончанияПериодаОтсутствия = Выборка.ДатаОкончанияДоп;
		//	НоваяСтрока.КоличествоДнейОтпуска = Выборка.ПродолжительностьДоп;
		//	НоваяСтрока.НачалоПериодаЗаКоторыйПредоставляетсяОтпуск = Выборка.РабочийГодС;
		//	НоваяСтрока.КонецПериодаЗаКоторыйПредоставляетсяОтпуск = Выборка.РабочийГодПо;
		//	НоваяСтрока.Основание = "Пр.№ "+ СокрЛП(Выборка.НомерПриказа) +" от " + Формат(Выборка.ДатаПриказа, "ДФ=dd.MM.yyyy") + " " + Выборка.Основание;
		//	
		//КонецЕсли;
		
	КонецЦикла;
	
	Если РеестрОтпусков.Количество() &gt; 0 Тогда
		ВыборкаПоДокументу = Новый Структура;
		ВыборкаПоДокументу.Вставить("Номер", "РОтп");
		ВыборкаПоДокументу.Вставить("Организация", Организация);
		ВыборкаПоДокументу.Вставить("РеестрОтпусков", РеестрОтпусков);
		ВыборкаДанных.Добавить(ВыборкаПоДокументу);
	КонецЕсли;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СвойстваНачисленийПоКатегориям" ИспользуетсяПриЗагрузке="false">
			<Текст>//Параметры            = ИсходящиеДанные;

СвойстваПоКатегориям = Новый Соответствие;

// Значение по умолчанию
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
СвойстваПоКатегориям.Вставить("", Описание);

// Повременная оплата труда
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ЕжемесячноПриОкончательномРасчете";
Описание.СпособРасчета = "ПроизвольнаяФормула";
Описание.ВидВремени = "ДополнительноОплачиваемоеВПределахНормы";
Описание.НачисляетсяПриРасчетеПервойПоловиныМесяца = Истина;
СвойстваПоКатегориям.Вставить("ПовременнаяОплатаТруда", Описание);

// Оплата больничного (за счет ФСС).
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ОплатаБольничного";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "Болезнь";
Описание.ВидПособияСоциальногоСтрахования = "Нетрудоспособность";
Описание.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = "ПоТрудовомуЗаконодательству";
СвойстваПоКатегориям.Вставить("ОплатаБольничногоЛиста", Описание);

// Болезнь без оплаты
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ПроизвольнаяФормула";
Описание.ФормулаРасчета = "0";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "БолезньБезОплаты";
Описание.КодДоходаНДФЛ = Неопределено;
СвойстваПоКатегориям.Вставить("БолезньБезОплаты", Описание);

// Оплата больничного за счет работодателя.
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ОплатаБольничного";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "Болезнь";
Описание.ВидПособияСоциальногоСтрахования = Неопределено;
Описание.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = "ПоТрудовомуЗаконодательству";
СвойстваПоКатегориям.Вставить("ОплатаБольничногоЛистаЗаСчетРаботодателя", Описание);

// Отпуск по беременности и родам.
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ОплатаБольничного";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "ОтпускПоБеременностиИРодам";
Описание.ВидПособияСоциальногоСтрахования = "БеременностьРоды";
Описание.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = "ПоТрудовомуЗаконодательству";
СвойстваПоКатегориям.Вставить("ОтпускПоБеременностиИРодам", Описание);

// Отпуск по беременности и родам без оплаты.
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ПроизвольнаяФормула";
Описание.ФормулаРасчета = "0";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "ОтпускПоБеременностиИРодам";
Описание.КодДоходаНДФЛ = Неопределено;
СвойстваПоКатегориям.Вставить("ОтпускПоБеременностиИРодамБезОплаты", Описание);

// Пособие до трех лет
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ЕжемесячноПриОкончательномРасчете";
Описание.СпособРасчета = "ПроизвольнаяФормула";
Описание.ФормулаРасчета = "РазмерПособияПоУходуЗаРебенкомДоТрехЛет * РайонныйКоэффициентРФ";
Описание.ВидВремени = "ДополнительноОплачиваемоеВПределахНормы";
Описание.КодДоходаНДФЛ = Неопределено;
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "ОтпускПоУходуЗаРебенком";
СвойстваПоКатегориям.Вставить("ПособиеПоУходуЗаРебенкомДоТрехЛет", Описание);

// Оплата больничного (профзаболевание).
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ОплатаБольничного";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "Болезнь";
Описание.ВидПособияСоциальногоСтрахования = "НетрудоспособностьПрофзаболевание";
СвойстваПоКатегориям.Вставить("ОплатаБольничногоПрофзаболевание", Описание);

// Оплата больничного (несчастный случай).
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "БольничныйЛист";
Описание.СпособРасчета = "ОплатаБольничного";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "Болезнь";
Описание.ВидПособияСоциальногоСтрахования = "НетрудоспособностьНесчастныйСлучай";
Описание.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = "ПоТрудовомуЗаконодательству";
СвойстваПоКатегориям.Вставить("ОплатаБольничногоНесчастныйСлучайНаПроизводстве", Описание);

Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "ОплатаДнейУходаЗаДетьмиИнвалидами";
Описание.СпособРасчета = "ПроизвольнаяФормула";
Описание.ФормулаРасчета = "СреднийЗаработокОбщий * ВремяВДняхЧасах * КоэффициентИндексацииСреднегоЗаработка";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "ДополнительныеВыходныеДниОплачиваемые";
Описание.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = "ПоТрудовомуЗаконодательству";
Описание.ВидПособияСоциальногоСтрахования = "ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами";
СвойстваПоКатегориям.Вставить("ОплатаДнейУходаЗаДетьмиИнвалидами", Описание);

// Дополнительный отпуск (сверх ежегодного) на санаторно-курортное лечение.
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваНачисленияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияНачисления = "ПоОтдельномуДокументуДоОкончательногоРасчета";
Описание.ВидДокументаНачисления = "Отпуск";
Описание.ВидОтпуска = "ОтпускНаСанаторноКурортноеЛечение";
Описание.СпособРасчета = "ПроизвольнаяФормула";
Описание.ФормулаРасчета = "СреднийЗаработокОбщий * КоличествоДнейОтпуска * КоэффициентИндексацииСреднегоЗаработка";
Описание.ВидВремени = "ЦелодневноеНеотработанное";
Описание.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка = "ПоТрудовомуЗаконодательству";
Описание.ОбозначениеВТабелеУчетаРабочегоВремени = "ДополнительныйОтпуск";
Описание.ВидПособияСоциальногоСтрахования = "ДополнительныйОтпускПослеНесчастныхСлучаев";
СвойстваПоКатегориям.Вставить("ОтпускНаСанаторноКурортноеЛечение", Описание);</Текст>
		</Алгоритм>
		<Алгоритм Имя="СвойстваНачисленияПоКатегорииПоУмолчанию" ИспользуетсяПриЗагрузке="false">
			<Текст>Описание = Новый Структура(
"СпособВыполненияНачисления, 
|СпособРасчета, 
|ФормулаРасчета, 
|ВидДокументаНачисления, 
|ВидПособияСоциальногоСтрахования, 
|ВидВремени, 
|ОбозначениеВТабелеУчетаРабочегоВремени,
|ВидОтпуска, 
|ВидОперацииПоЗарплате,
|ПериодРасчетаБазовыхНачислений,
|КоличествоМесяцевБазовогоПериода,
|СдвигБазовогоПериода,
|ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка,
//|ВидСтажаСЗВ,
//|ВидСтажаПФР2014,
//|ВидНачисленияДляНУ,
|КодДоходаНДФЛ,
//|КодДоходаСтраховыеВзносы,
|ЗачетНормыВремени,
|ЗачетОтработанногоВремени,
|НачисляетсяПриРасчетеПервойПоловиныМесяца,
|ОтборБазовых,
|ОтборВытесняющих,
|ОтборВедущих,
|ИменаИнструкций, 
|ПараметрыВыбора, 
|НедоступныеСвойства, 
|ВключатьВСреднийЗаработокОбщий, 
|СреднийЗаработокОбщий, 
|ИндексируетсяСреднийЗаработокОбщий,
|ВключатьВСреднийЗаработокФСС,
//|ВключатьВСреднийЗаработокФСС2010,
|СпособОтраженияЗарплатыВБухучете, 
//|ОтношениеКЕНВД, 
|СтатьяФинансирования, 
|СтатьяРасходов, 
|СтратегияОтраженияВУчете,           
|ЯвляетсяДоходомВНатуральнойФорме,
|Рассчитывается");

// Свойства по умолчанию	
Описание.СпособВыполненияНачисления = "";
Описание.СпособРасчета = "";
Описание.ФормулаРасчета = "";
Описание.ВидДокументаНачисления = "";
Описание.ВидПособияСоциальногоСтрахования = "";
Описание.ВидВремени = "";
Описание.ПериодРасчетаБазовыхНачислений = "ТекущийМесяц";
Описание.ВключатьВСреднийЗаработокОбщий = Ложь;
Описание.ВключатьВСреднийЗаработокФСС = Ложь;
Описание.ВидОперацииПоЗарплате = "НачисленоДоход";
Описание.СтратегияОтраженияВУчете = "ПоДаннымОСотрудникеИЕгоПлановыхНачислениях";
Описание.Рассчитывается = Истина;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СвойстваУдержанийПоКатегориям" ИспользуетсяПриЗагрузке="false">
			<Текст>СвойстваПоКатегориям = Новый Соответствие;

// Значение по умолчанию
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваУдержанияПоКатегорииПоУмолчанию);
СвойстваПоКатегориям.Вставить("", Описание);

// Профсоюзные взносы
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваУдержанияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияУдержания = "ЕжемесячноПриОкончательномРасчете";
Описание.СпособРасчета = "ПроизвольнаяФормула";
СвойстваПоКатегориям.Вставить("ПрофсоюзныеВзносы", Описание);

// Исполнительный лист
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваУдержанияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияУдержания = "ЕжемесячноПриОкончательномРасчете";
Описание.СпособРасчета = "ИсполнительныйЛист";
СвойстваПоКатегориям.Вставить("ИсполнительныйЛист", Описание);

//Вознаграждение платежного агента.
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваУдержанияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияУдержания = "ЕжемесячноПриОкончательномРасчете";
Описание.СпособРасчета = "ВознаграждениеПлатежногоАгента";
СвойстваПоКатегориям.Вставить("ВознаграждениеПлатежногоАгента", Описание);

// Прочее удержание в пользу третих лиц.
Описание = Неопределено;
Выполнить(Алгоритмы.СвойстваУдержанияПоКатегорииПоУмолчанию);
Описание.СпособВыполненияУдержания = "ЕжемесячноПриОкончательномРасчете";
Описание.СпособРасчета = "ПроизвольнаяФормула";
СвойстваПоКатегориям.Вставить("ПрочееУдержаниеВПользуТретьихЛиц", Описание);

//// ДСВ
//Описание = ОбъектыПереносаДанных.ВыполнитьАлгоритм("СвойстваУдержанияПоКатегорииПоУмолчанию", Параметры.Алгоритмы);
//Описание.СпособВыполненияУдержания = "ЕжемесячноПриОкончательномРасчете";
//Описание.СпособРасчета = "ПроизвольнаяФормула";
//СвойстваПоКатегориям.Вставить("ДСВ", Описание);</Текст>
		</Алгоритм>
		<Алгоритм Имя="СвойстваУдержанияПоКатегорииПоУмолчанию" ИспользуетсяПриЗагрузке="false">
			<Текст>Описание = Новый Структура(
"СпособВыполненияУдержания, 
|СпособРасчета, 
|ФормулаРасчета, 
|ВидДокументаУдержания, 
|ВидОтпуска, 
|ВидОперацииПоЗарплате,
|ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка,
|ОтборБазовых,
|ИменаИнструкций, 
|ПараметрыВыбора, 
|Рассчитывается,
|НедоступныеСвойства");

Описание.Рассчитывается = Истина;</Текст>
		</Алгоритм>
		<Группа Имя="СервисныеФункции">
			<Алгоритм Имя="РазложитьСтрокуВМассивСлов" ИспользуетсяПриЗагрузке="false">
				<Текст>Субконто = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ИсходящиеДанные, ВходящиеДанные);</Текст>
				<Параметры>Строка, РазделителиСлов</Параметры>
			</Алгоритм>
			<Алгоритм Имя="ТаблицаЗначений_СрезПоследних" ИспользуетсяПриЗагрузке="false">
				<Текст>ТаблицаЗначений	= ИсходящиеДанные;
ПериодСреза		= ВходящиеДанные;
Измерения		= Источник;
Ресурсы			= Приемник;


ТаблицаСреза = ОбъектыПереносаДанных.НовыйОбъект("ТаблицаЗначений");

ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаСреза, "Период");

КоличествоИзмерений = ОбъектыПереносаДанных.Массив_Количество(Измерения);

ПредыдущиеЗначенияИзмерений = ОбъектыПереносаДанных.НовыйОбъект("Структура");

ИзмеренияСтрокой = "";
Для Сч = 1 По КоличествоИзмерений Цикл
	Измерение = ОбъектыПереносаДанных.Массив_Получить(Измерения, Сч);
	Если ИзмеренияСтрокой = "" Тогда
		ИзмеренияСтрокой = Измерение;
	Иначе
		ИзмеренияСтрокой = ИзмеренияСтрокой + ", " + Измерение;
	КонецЕсли;
	
	ОбъектыПереносаДанных.Структура_Установить(ПредыдущиеЗначенияИзмерений, Измерение, "Null");
	
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаСреза, Измерение);
КонецЦикла;

КоличествоРесурсов = ОбъектыПереносаДанных.Массив_Количество(Ресурсы);

Для Сч = 1 По КоличествоРесурсов Цикл
	Ресурс = ОбъектыПереносаДанных.Массив_Получить(Ресурсы, Сч);
	
	ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьКолонку(ТаблицаСреза, Ресурс);
КонецЦикла;

Если ИзмеренияСтрокой = "" Тогда
	ПоляСортировки = "Период";
Иначе
	ПоляСортировки = ИзмеренияСтрокой + ", " + "Период";
КонецЕсли;

ТаблицаЗначений.Сортировать(ПоляСортировки);

КоличествоСтрок = ОбъектыПереносаДанных.ТаблицаЗначений_Количество(ТаблицаЗначений);

Для Сч = 1 По КоличествоСтрок Цикл
	СтрокаТаблицы = ОбъектыПереносаДанных.ТаблицаЗначений_Получить(ТаблицаЗначений, КоличествоСтрок - Сч + 1); 
	
	Если СтрокаТаблицы.Период &gt; ПериодСреза Тогда 
		Продолжить;
	КонецЕсли;
	
	СовпадаютЗначенияИзмерений = ?(КоличествоИзмерений = 0, 0, 1);
	Для НомерИзмерения = 1 По КоличествоИзмерений Цикл
		Измерение = ОбъектыПереносаДанных.Массив_Получить(Измерения, НомерИзмерения);
		
		Если ОбъектыПереносаДанных.Структура_Получить(ПредыдущиеЗначенияИзмерений, Измерение) &lt;&gt; СтрокаТаблицы[Измерение] Тогда
			СовпадаютЗначенияИзмерений = 0;
			
			ОбъектыПереносаДанных.Структура_Установить(ПредыдущиеЗначенияИзмерений, Измерение, СтрокаТаблицы[Измерение]);
		КонецЕсли;
	КонецЦикла;
	
	Если СовпадаютЗначенияИзмерений = 0 Тогда
		СтрокаТаблицыСреза = ОбъектыПереносаДанных.ТаблицаЗначений_ДобавитьСтроку(ТаблицаСреза);
		
		СтрокаТаблицыСреза.Период = СтрокаТаблицы.Период;
		
		Для НомерИзмерения = 1 По КоличествоИзмерений Цикл
			Измерение = ОбъектыПереносаДанных.Массив_Получить(Измерения, НомерИзмерения);
			
			СтрокаТаблицыСреза[Измерение] = СтрокаТаблицы[Измерение];
		КонецЦикла;
		
		Для НомерРесурса = 1 По КоличествоРесурсов Цикл
			Ресурс = ОбъектыПереносаДанных.Массив_Получить(Ресурсы, НомерРесурса);
			
			СтрокаТаблицыСреза[Ресурс] = СтрокаТаблицы[Ресурс];
		КонецЦикла;
	КонецЕсли;
	
КонецЦикла;

Субконто = ТаблицаСреза;</Текст>
				<Параметры>ТаблицаЗначений, ПериодСреза, Измерения, Ресурсы</Параметры>
			</Алгоритм>
		</Группа>
		<Алгоритм Имя="СформироватьСписокНачисленийИПоказателейКВыгрузке" ИспользуетсяПриЗагрузке="false">
			<Текст>//ОписанияНачислений = ИсходящиеДанные;
//НачисленияКВыгрузке = ВходящиеДанные;
//ПоказателиКВыгрузке = Источник;
ИдентификаторыПоказателейКВыгрузке = Новый Массив;

Для каждого ЭлементКлючИЗначение Из ОписанияНачислений Цикл
	
	ВР = ЭлементКлючИЗначение.Ключ;
	ОписаниеВР = ЭлементКлючИЗначение.Значение;
	
	БазовыеВидыРасчета = Новый ТаблицаЗначений;
	БазовыеВидыРасчета.Колонки.Добавить("ВидРасчета");
	Для каждого СтрокаТЗ Из ОписаниеВР.БазовыеВидыРасчета Цикл
		
		ОпиcаниеБазовыйВР = ОписанияНачислений[СтрокаТЗ.ВидРасчета];
		Если ОпиcаниеБазовыйВР &lt;&gt; Неопределено Тогда
			НоваяСтрока = БазовыеВидыРасчета.Добавить();
			НоваяСтрока.ВидРасчета = ОпиcаниеБазовыйВР;
		КонецЕсли;
		
	КонецЦикла;
	
	ОписаниеВР.БазовыеВидыРасчета = БазовыеВидыРасчета;
	
	НачисленияКВыгрузке.Добавить(ОписаниеВР);
	
	Для каждого СтрокаТЗ Из ОписаниеВР.Показатели Цикл
		Если ИдентификаторыПоказателейКВыгрузке.Найти(СтрокаТЗ.Показатель.Идентификатор) = Неопределено Тогда
			ПоказателиКВыгрузке.Добавить(СтрокаТЗ.Показатель);
			ИдентификаторыПоказателейКВыгрузке.Добавить(СтрокаТЗ.Показатель.Идентификатор);
		КонецЕсли;
	КонецЦикла;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ФактическиеНачисленияУдержания_Выгрузить" ИспользуетсяПриЗагрузке="false">
			<Текст>
Выполнить(Алгоритмы.ПолучитьДатуОкончанияПоРегиструОсновныеНачисления);
ДатаОкончания = Параметры.ВременноеХранилище.ДатаОкончанияПоРегиструОсновныеНачисления;

Выполнить(Алгоритмы.Сотрудники_ВременнаяТаблица);

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Параметры.ВременноеХранилище.Сотрудники_ВременнаяТаблица;

Запрос.УстановитьПараметр("ДатаНачалаПереносаРасчетныхДанных",	Параметры.ДатаНачалаПереносаРасчетныхДанных);

ДатаПереноса = Параметры.ДатаНачалаПереносаРасчетныхДанных;

Пока ДатаПереноса &lt;= ДатаОкончания Цикл
	
	ТабДокументы = Новый ТаблицаЗначений;
	ТабДокументы.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТабДокументы.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТабДокументы.Колонки.Добавить("ОсновныеНачисления");
	ТабДокументы.Колонки.Добавить("ДополнительныеНачисления");
	ТабДокументы.Колонки.Добавить("Удержания");
	ТабДокументы.Колонки.Добавить("НеОчищатьДокумент");

	
	Запрос.УстановитьПараметр("ДатаПереносаРасчетныхДанных",	ДатаПереноса);
	
	Запрос.Текст = Запросы.ОснНачисленияРаботниковОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			НоваяСтрока = ТабДокументы.Добавить();
			НоваяСтрока.Организация					= Организация;
			НоваяСтрока.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
			НоваяСтрока.ОсновныеНачисления			= ДанныеПоПериодуРегистрации.Строки;
			//НоваяСтрока.ДополнительныеНачисления	= Новый ТаблицаЗначений;
			НоваяСтрока.Удержания					= Новый ТаблицаЗначений;
		КонецЦикла;
	КонецЦикла;
	
	//Запрос.Текст = Запросы.ДопНачисленияРаботниковОрганизаций_Выборка.Текст;
	//ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Отбор = Новый Структура("Организация, ПериодРегистрации");
	//Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
	//	Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
	//	Отбор.Организация = Организация;
	//	Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
	//		Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
	//		Строки = ТабДокументы.НайтиСтроки(Отбор);
	//		Если Строки.Количество() &gt; 0 Тогда
	//			СтрокаРезультатов = Строки[0];
	//		Иначе
	//			СтрокаРезультатов = ТабДокументы.Добавить();
	//			СтрокаРезультатов.Организация				= Организация;
	//			СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
	//			СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
	//			СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
	//		КонецЕсли;
	//		СтрокаРезультатов.ДополнительныеНачисления		= ДанныеПоПериодуРегистрации.Строки;
	//	КонецЦикла;
	//КонецЦикла;
	
	Запрос.Текст = Запросы.УдержанияРаботниковОрганизаций_Выборка.Текст;
	ВыборкаПоОрганизациям = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Отбор = Новый Структура("Организация, ПериодРегистрации");
	Для Каждого ДанныеПоОрганизации Из ВыборкаПоОрганизациям.Строки Цикл
		Организация = ДанныеПоОрганизации.ОрганизацияОтбор;
		Отбор.Организация = Организация;
		Для Каждого ДанныеПоПериодуРегистрации Из ДанныеПоОрганизации.Строки Цикл
			Отбор.ПериодРегистрации = ДанныеПоПериодуРегистрации.ПериодОтбор;
			Строки = ТабДокументы.НайтиСтроки(Отбор);
			Если Строки.Количество() &gt; 0 Тогда
				СтрокаРезультатов = Строки[0];
			Иначе
				СтрокаРезультатов = ТабДокументы.Добавить();
				СтрокаРезультатов.Организация				= Организация;
				СтрокаРезультатов.ПериодРегистрации			= ДанныеПоПериодуРегистрации.ПериодОтбор;
				СтрокаРезультатов.ОсновныеНачисления		= Новый ТаблицаЗначений;
				//СтрокаРезультатов.ДополнительныеНачисления	= Новый ТаблицаЗначений;
				СтрокаРезультатов.Удержания					= Новый ТаблицаЗначений;
			КонецЕсли;
			СтрокаРезультатов.Удержания						= ДанныеПоПериодуРегистрации.Строки;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтрокаТаблицыРезультатов Из ТабДокументы Цикл 
		
		ОрганизацияОтбор	= СтрокаТаблицыРезультатов.Организация;
		ПериодОтбор			= СтрокаТаблицыРезультатов.ПериодРегистрации;
		
		ОсновныеНачисленияРаботниковОрганизаций			= СтрокаТаблицыРезультатов.ОсновныеНачисления;
		//ДополнительныеНачисленияРаботниковОрганизаций	= СтрокаТаблицыРезультатов.ДополнительныеНачисления;
		УдержанияРаботниковОрганизаций					= СтрокаТаблицыРезультатов.Удержания;
		
		ФактическиеНачисления = Новый ТаблицаЗначений;
		ФактическиеНачисления.Колонки.Добавить("Сотрудник");
		ФактическиеНачисления.Колонки.Добавить("ПериодРегистрации");
		ФактическиеНачисления.Колонки.Добавить("ВидРасчета");
		ФактическиеНачисления.Колонки.Добавить("ПериодДействияНачало");
		ФактическиеНачисления.Колонки.Добавить("ПериодДействияКонец");
		ФактическиеНачисления.Колонки.Добавить("БазовыйПериодНачало");
		ФактическиеНачисления.Колонки.Добавить("БазовыйПериодКонец");
		ФактическиеНачисления.Колонки.Добавить("Сторно");
		ФактическиеНачисления.Колонки.Добавить("Результат");
		ФактическиеНачисления.Колонки.Добавить("ОтработаноДней");
		ФактическиеНачисления.Колонки.Добавить("ОтработаноЧасов");
		ФактическиеНачисления.Колонки.Добавить("РезультатВТомЧислеЗаСчетФБ");
		ФактическиеНачисления.Колонки.Добавить("ГрафикРаботы");
		ФактическиеНачисления.Колонки.Добавить("ГрафикРаботыНорма");
		ФактическиеНачисления.Колонки.Добавить("ВидУчетаВремени");
		ФактическиеНачисления.Колонки.Добавить("ВремяВЧасах");
		ФактическиеНачисления.Колонки.Добавить("РасчетнаяБазаЗаЕдиницуНормыВремени");
		ФактическиеНачисления.Колонки.Добавить("ГоловнаяОрганизация");
		ФактическиеНачисления.Колонки.Добавить("Организация");
		ФактическиеНачисления.Колонки.Добавить("ФизическоеЛицо");
		ФактическиеНачисления.Колонки.Добавить("ИдентификаторСтроки");
		
		Для Сч = 1 По ОсновныеНачисленияРаботниковОрганизаций.Количество() Цикл 
			СтрокаТаблицы = ОсновныеНачисленияРаботниковОрганизаций[Сч-1];
			
			Начисление		= СтрокаТаблицы.ВидРасчета;
			Ссылка			= Начисление["Ссылка"];
			СпособРасчета	= Начисление["СпособРасчета"];
			
			Если (Ссылка = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
				Или (СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой) Тогда
				Продолжить;
			КонецЕсли;
			
			Организация = СтрокаТаблицы.Организация;
			
			ВидУчетаВремени = "Явка";
			Если СтрокаТаблицы.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоВечернимЧасам Тогда
				ВидУчетаВремени = "РаботаВечерниеЧасы";
				
			ИначеЕсли СтрокаТаблицы.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоНочнымЧасам Тогда
				ВидУчетаВремени = "РаботаНочныеЧасы";
				
			КонецЕсли;
			
			НоваяСтрока = ФактическиеНачисления.Добавить();
			НоваяСтрока.Сотрудник							= СтрокаТаблицы.Сотрудник;
			НоваяСтрока.ПериодРегистрации					= НачалоМесяца(СтрокаТаблицы.ПериодРегистрации);
			НоваяСтрока.ВидРасчета							= Начисление;
			НоваяСтрока.ПериодДействияНачало				= СтрокаТаблицы.ПериодДействияНачало;
			НоваяСтрока.ПериодДействияКонец					= СтрокаТаблицы.ПериодДействияКонец;
			НоваяСтрока.БазовыйПериодНачало					= СтрокаТаблицы.БазовыйПериодНачало;
			НоваяСтрока.БазовыйПериодКонец					= СтрокаТаблицы.БазовыйПериодКонец;
			НоваяСтрока.Сторно								= СтрокаТаблицы.Сторно;
			НоваяСтрока.Результат							= СтрокаТаблицы.Результат;
			НоваяСтрока.ОтработаноДней						= СтрокаТаблицы.ОтработаноДней;
			НоваяСтрока.ОтработаноЧасов						= СтрокаТаблицы.ОтработаноЧасов;
			//НоваяСтрока.РезультатВТомЧислеЗаСчетФБ			= СтрокаТаблицы.ДополнительныеДанные;
			НоваяСтрока.ГрафикРаботы						= СтрокаТаблицы.ГрафикРаботы;
			НоваяСтрока.ВидУчетаВремени						= ВидУчетаВремени;
			НоваяСтрока.ВремяВЧасах							= ?(СтрокаТаблицы.ВидУчетаВремени = Перечисления.ВидыУчетаВремени.ПоДням, 0, 1);
			//НоваяСтрока.ГрафикРаботыНорма					= СтрокаТаблицы.ГрафикРаботыНорма;
			//НоваяСтрока.РасчетнаяБазаЗаЕдиницуНормыВремени	= СтрокаТаблицы.РасчетнаяБазаЗаЕдиницуНормыВремени;
			НоваяСтрока.ГоловнаяОрганизация					= СтрокаТаблицы.Организация;
			НоваяСтрока.Организация							= Организация;
			НоваяСтрока.ФизическоеЛицо						= СтрокаТаблицы.Физлицо;
			НоваяСтрока.ИдентификаторСтроки					= Сч;
		КонецЦикла;
		
		ФактическиеУдержания = Новый ТаблицаЗначений;
		ФактическиеУдержания.Колонки.Добавить("ФизическоеЛицо");
		ФактическиеУдержания.Колонки.Добавить("Организация");
		ФактическиеУдержания.Колонки.Добавить("ПериодРегистрации");
		ФактическиеУдержания.Колонки.Добавить("ВидРасчета");
		ФактическиеУдержания.Колонки.Добавить("БазовыйПериодНачало");
		ФактическиеУдержания.Колонки.Добавить("БазовыйПериодКонец");
		ФактическиеУдержания.Колонки.Добавить("Сторно");
		ФактическиеУдержания.Колонки.Добавить("Результат");
		ФактическиеУдержания.Колонки.Добавить("ДокументОснование");
		ФактическиеУдержания.Колонки.Добавить("Получатель");
		ФактическиеУдержания.Колонки.Добавить("ПлатежныйАгент");
		ФактическиеУдержания.Колонки.Добавить("ИдентификаторСтроки");
		
		Для Сч = 1 По УдержанияРаботниковОрганизаций.Количество() Цикл 
			СтрокаТаблицы = УдержанияРаботниковОрганизаций[Сч-1];
			
			Удержание		= СтрокаТаблицы.ВидРасчета;
			Ссылка			= Начисление["Ссылка"];
			СпособРасчета	= Начисление["СпособРасчета"];
			
			Организация = СтрокаТаблицы.Организация;
			
			ПлатежныйАгент = "";
			Если Ссылка = ПланыВидовРасчета.УдержанияОрганизаций.ПочтовыйСбор Тогда
				ПлатежныйАгент = "Почта Украины";
				
			КонецЕсли;
			
			НоваяСтрока = ФактическиеУдержания.Добавить();
			НоваяСтрока.ФизическоеЛицо		= СтрокаТаблицы.Физлицо;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодРегистрации	= НачалоМесяца(СтрокаТаблицы.ПериодРегистрации);
			НоваяСтрока.ВидРасчета			= Удержание;
			НоваяСтрока.БазовыйПериодНачало	= СтрокаТаблицы.БазовыйПериодНачало;
			НоваяСтрока.БазовыйПериодКонец	= СтрокаТаблицы.БазовыйПериодКонец;
			НоваяСтрока.Сторно				= СтрокаТаблицы.Сторно;
			НоваяСтрока.Результат			= СтрокаТаблицы.Результат;
			НоваяСтрока.ДокументОснование	= СтрокаТаблицы.ДокументОснование;
			//НоваяСтрока.Получатель			= СтрокаТаблицы.Получатель;
			//НоваяСтрока.ПлатежныйАгент		= ПлатежныйАгент;
			НоваяСтрока.ИдентификаторСтроки = Сч;
		КонецЦикла;
		
		
		ВыборкаПоДокументу = Новый Структура;
		ВыборкаПоДокументу.Вставить("Номер",				"ЗП");
		ВыборкаПоДокументу.Вставить("Организация",			ОрганизацияОтбор);
		ВыборкаПоДокументу.Вставить("ПериодРегистрации",	ПериодОтбор);
		ВыборкаПоДокументу.Вставить("Начисления",			ФактическиеНачисления);
		ВыборкаПоДокументу.Вставить("Удержания",			ФактическиеУдержания);
		ВыборкаПоДокументу.Вставить("НеОчищатьДокумент",	СтрокаТаблицыРезультатов.НеОчищатьДокумент);
		
		ВыгрузитьПоПравилу(ВыборкаПоДокументу, , , , "ФактическиеНачисленияУдержания_ПД");
		
	КонецЦикла;
	
	ДатаПереноса = ДобавитьМесяц(ДатаПереноса, 1);
	
КонецЦикла;</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы>
		<Запрос Имя="___ДопНачисленияРаботниковОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ДополнительныеНачисленияРаботниковОрганизаций.Регистратор,
	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	ДополнительныеНачисленияРаботниковОрганизаций.Организация,
	ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо,
	ДополнительныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель1,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель2,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель3,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель4,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель5,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель6,
	ДополнительныеНачисленияРаботниковОрганизаций.Результат,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	ДополнительныеНачисленияРаботниковОрганизаций.Сторно,
	ДополнительныеНачисленияРаботниковОрганизаций.Авторасчет,
	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	ДополнительныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	ДополнительныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ДополнительныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	ДополнительныеНачисленияРаботниковОрганизаций.ДокументОснование,
	ДополнительныеНачисленияРаботниковОрганизаций.ГодУчетаПремийПоИтогамГода,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаБазовогоПериода,
	ДополнительныеНачисленияРаботниковОрганизаций.ЧислоМесяцев,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	NULL КАК КОСГУ,
	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	ВЫБОР
		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Организация
		ИНАЧЕ ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
	КОНЕЦ КАК ОрганизацияОтбор
ИЗ
	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
ГДЕ
	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Сотрудник,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ВзаиморасчетыИБаза" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	База.Организация КАК Организация,
	База.Сотрудник,
	База.ФизЛицо КАК ФизическоеЛицо,
	База.ПодразделениеОрганизации КАК Подразделение,
	База.СтатьяФинансирования,
	База.СтатьяРасходов,
	СУММА(База.Результат) КАК Сумма
ПОМЕСТИТЬ ВТБазаДляВзаиморасчетов
ИЗ
	(ВЫБРАТЬ
		Начисления.Организация КАК Организация,
		Начисления.Сотрудник КАК Сотрудник,
		Начисления.Сотрудник.Физлицо КАК ФизЛицо,
		Начисления.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		1 КАК СтатьяФинансирования,
		1 КАК СтатьяРасходов,
		Начисления.Результат КАК Результат
	ИЗ
		ВТПериодыНачисленийДляВзаиморасчетов КАК ПериодыНачислений
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
			ПО ПериодыНачислений.Сотрудник = Начисления.Сотрудник
				И ПериодыНачислений.Организация = Начисления.Организация
				И ПериодыНачислений.ПериодРегистрации = Начисления.ПериодРегистрации) КАК База

СГРУППИРОВАТЬ ПО
	База.Сотрудник,
	База.ФизЛицо,
	База.ПодразделениеОрганизации,
	База.СтатьяФинансирования,
	База.Организация,
	База.СтатьяРасходов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник.Физлицо КАК ФизическоеЛицо,
	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник,
	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Организация,
	1 КАК СтатьяФинансирования,
	1 КАК СтатьяРасходов,
	СУММА(ВзаиморасчетыСРаботникамиОрганизацийОстатки.СуммаВзаиморасчетовОстаток) КАК Сумма
ПОМЕСТИТЬ ВТВзаиморасчеты
ИЗ
	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
			&amp;ДатаНачалаПереносаРасчетныхДанных,
			(Сотрудник, Организация) В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					ФизическиеЛица.Сотрудник,
					ФизическиеЛица.Организация
				ИЗ
					ВТФизлицаКОбработке КАК ФизическиеЛица)) КАК ВзаиморасчетыСРаботникамиОрганизацийОстатки

СГРУППИРОВАТЬ ПО
	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник.Физлицо,
	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Сотрудник,
	ВзаиморасчетыСРаботникамиОрганизацийОстатки.Организация

ИМЕЮЩИЕ
	СУММА(ВзаиморасчетыСРаботникамиОрганизацийОстатки.СуммаВзаиморасчетовОстаток) &lt;&gt; 0</Текст>
		</Запрос>
		<Запрос Имя="ВоинскийУчетФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ВоинскийУчет.*
ИЗ
	РегистрСведений.ВоинскийУчет КАК ВоинскийУчет
ГДЕ
	ВоинскийУчет.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
		<Запрос Имя="ВременноПребывающие_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.*
ИЗ
	РегистрСведений.ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам КАК ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам
ГДЕ
	ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
		<Запрос Имя="ГражданствоФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ГражданствоФизЛиц.Период,
	ГражданствоФизЛиц.ФизЛицо,
	ГражданствоФизЛиц.Страна,
	ГражданствоФизЛиц.ФизЛицо.ИНН КАК ИНН
ИЗ
	РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
ГДЕ
	ГражданствоФизЛиц.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	ГражданствоФизЛиц.ФизЛицо</Текст>
		</Запрос>
		<Запрос Имя="ДоговорыЗайма_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	ПогашениеЗаймовРаботникамиОрганизацийОстатки.ДоговорЗайма
ПОМЕСТИТЬ ВТДоговорыЗайма
ИЗ
	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций.Остатки(
			&amp;ДатаНачалаПереносаРасчетныхДанных,
			Сотрудник В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					Сотрудники.Сотрудник
				ИЗ
					ВТСотрудники КАК Сотрудники)) КАК ПогашениеЗаймовРаботникамиОрганизацийОстатки
ГДЕ
	(ПогашениеЗаймовРаботникамиОрганизацийОстатки.ОсновнойДолгОстаток &lt;&gt; 0
			ИЛИ ПогашениеЗаймовРаботникамиОрганизацийОстатки.ПроцентыОстаток &lt;&gt; 0)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма
ИЗ
	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
ГДЕ
	ПогашениеЗаймовРаботникамиОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И ПогашениеЗаймовРаботникамиОрганизаций.Период &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных</Текст>
		</Запрос>
		<Запрос Имя="ДокументыФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПаспортныеДанныеФизЛиц.*
ИЗ
	РегистрСведений.ПаспортныеДанныеФизЛиц КАК ПаспортныеДанныеФизЛиц
ГДЕ
	ПаспортныеДанныеФизЛиц.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
		<Запрос Имя="ДопНачисленияРаботниковОрганизацийАвансом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ДополнительныеНачисленияРаботниковОрганизаций.Ссылка КАК Регистратор,
	ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.Организация КАК Организация,
	ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.Организация КАК ОбособленноеПодразделение,
	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник,
	ДополнительныеНачисленияРаботниковОрганизаций.Физлицо,
	ДополнительныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель1,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель2,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель3,
	ДополнительныеНачисленияРаботниковОрганизаций.Результат,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	ДополнительныеНачисленияРаботниковОрганизаций.Сторно,
	ДополнительныеНачисленияРаботниковОрганизаций.Авторасчет,
	NULL КАК БазовыйПериодНачало,
	NULL КАК БазовыйПериодКонец,
	NULL КАК ГрафикРаботы,
	NULL КАК ВидУчетаВремени,
	ДополнительныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ДополнительныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	NULL КАК ДокументОснование,
	NULL КАК ГодУчетаПремийПоИтогамГода,
	NULL КАК ДатаНачалаБазовогоПериода,
	NULL КАК ЧислоМесяцев,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	NULL КАК КОСГУ,
	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.Организация КАК ОрганизацияОтбор
ИЗ
	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДополнительныеНачисления КАК ДополнительныеНачисленияРаботниковОрганизаций
ГДЕ
	ДополнительныеНачисленияРаботниковОрганизаций.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	И ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.ПериодНачисления = ЗНАЧЕНИЕ(Перечисление.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца)
	И ДополнительныеНачисленияРаботниковОрганизаций.Ссылка.Проведен

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ДопНачисленияСОтбороромПоВР_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	ДополнительныеНачисленияРаботниковОрганизаций.Организация,
	ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник,
	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо,
	ДополнительныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель1,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель2,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель3,
	ДополнительныеНачисленияРаботниковОрганизаций.Результат,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	ДополнительныеНачисленияРаботниковОрганизаций.Сторно,
	ДополнительныеНачисленияРаботниковОрганизаций.Авторасчет,
	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	ДополнительныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	ДополнительныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ДополнительныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	ДополнительныеНачисленияРаботниковОрганизаций.ДокументОснование,
	ДополнительныеНачисленияРаботниковОрганизаций.ГодУчетаПремийПоИтогамГода,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаБазовогоПериода,
	ДополнительныеНачисленияРаботниковОрганизаций.ЧислоМесяцев,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	NULL КАК КОСГУ,
	НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	ВЫБОР
		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Организация
		ИНАЧЕ ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
	КОНЕЦ КАК ОрганизацияОтбор
ИЗ
	РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
ГДЕ
	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	И ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ОтборПоВР.ВидРасчета
			ИЗ
				ВТОтборПоВР КАК ОтборПоВР)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ЕжегодныеОтпускаДолжностей_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ДолжностиОрганизацийЕжегодныеОтпуска.Ссылка КАК Должность,
	ВЫБОР
		КОГДА ОсновныеНачисленияОрганизаций.ВидЕжегодногоОтпуска ЕСТЬ NULL 
			ТОГДА ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска
		ИНАЧЕ "Основной"
	КОНЕЦ КАК ВидЕжегодногоОтпуска,
	ДолжностиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод
ИЗ
	Справочник.ДолжностиОрганизаций.ЕжегодныеОтпуска КАК ДолжностиОрганизацийЕжегодныеОтпуска
		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		ПО ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска = ОсновныеНачисленияОрганизаций.ВидЕжегодногоОтпуска
			И (ОсновныеНачисленияОрганизаций.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни))
ГДЕ
	ДолжностиОрганизацийЕжегодныеОтпуска.ВидЕжегодногоОтпуска.ИдентификаторЭлемента &lt;&gt; "ДляТрудовыхДоговоровНаСрокДоДвухМесяцев"
	И ДолжностиОрганизацийЕжегодныеОтпуска.КоличествоДнейОтпускаВГод &lt;&gt; 0

УПОРЯДОЧИТЬ ПО
	Должность,
	ВидЕжегодногоОтпуска
ИТОГИ ПО
	Должность</Текст>
		</Запрос>
		<Запрос Имя="ЕжегодныеОтпускаОбщие_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ВЫБОР
		КОГДА ОсновныеНачисленияОрганизаций.ВидОтпуска ЕСТЬ NULL 
			ТОГДА ВидыОтпусков.Ссылка
		ИНАЧЕ "Основной"
	КОНЕЦ КАК ВидЕжегодногоОтпуска,
	0 КАК КоличествоДнейОтпускаВГод
ИЗ
	Справочник.ВидыОтпусков КАК ВидыОтпусков
		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		ПО ВидыОтпусков.Ссылка = ОсновныеНачисленияОрганизаций.ВидОтпуска
			И (ОсновныеНачисленияОрганизаций.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтп))
ГДЕ
	ВидыОтпусков.ВедетсяУчетОстатков

УПОРЯДОЧИТЬ ПО
	ВидЕжегодногоОтпуска</Текст>
		</Запрос>
		<Запрос Имя="ЕжегодныеОтпускаСотрудников_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СотрудникиОрганизацийЕжегодныеОтпуска.Сотрудник КАК Сотрудник,
	ВЫБОР
		КОГДА ОсновныеНачисленияОрганизаций.ВидОтпуска ЕСТЬ NULL 
			ТОГДА СотрудникиОрганизацийЕжегодныеОтпуска.ВидОтпуска
		ИНАЧЕ "Основной"
	КОНЕЦ КАК ВидЕжегодногоОтпуска,
	СотрудникиОрганизацийЕжегодныеОтпуска.Положено КАК КоличествоДнейОтпускаВГод
ИЗ
	РегистрСведений.ПоложенныеЕжегодныеОтпускаРаботников КАК СотрудникиОрганизацийЕжегодныеОтпуска
		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		ПО СотрудникиОрганизацийЕжегодныеОтпуска.ВидОтпуска = ОсновныеНачисленияОрганизаций.ВидОтпуска
			И (ОсновныеНачисленияОрганизаций.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтп))
ГДЕ
	СотрудникиОрганизацийЕжегодныеОтпуска.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И СотрудникиОрганизацийЕжегодныеОтпуска.ВидОтпуска.ВедетсяУчетОстатков
	И СотрудникиОрганизацийЕжегодныеОтпуска.Положено &lt;&gt; 0

УПОРЯДОЧИТЬ ПО
	Сотрудник,
	ВидЕжегодногоОтпуска
ИТОГИ ПО
	Сотрудник</Текст>
		</Запрос>
		<Запрос Имя="ЗарплатаЗаМесяцОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗарплатаЗаМесяцОрганизаций.Период,
	ЗарплатаЗаМесяцОрганизаций.Регистратор КАК Регистратор,
	ЗарплатаЗаМесяцОрганизаций.ВидДвижения,
	ЗарплатаЗаМесяцОрганизаций.Сотрудник,
	ЗарплатаЗаМесяцОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	ЗарплатаЗаМесяцОрганизаций.Организация,
	ЗарплатаЗаМесяцОрганизаций.ПериодВзаиморасчетов,
	СУММА(ЗарплатаЗаМесяцОрганизаций.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	ЗарплатаЗаМесяцОрганизаций.ХарактерВыплаты,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	ЗарплатаЗаМесяцОрганизаций.Организация КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(ЗарплатаЗаМесяцОрганизаций.Период, МЕСЯЦ) КАК ПериодОтбор
ИЗ
	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ЗарплатаЗаМесяцОрганизаций
ГДЕ
	ЗарплатаЗаМесяцОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(ЗарплатаЗаМесяцОрганизаций.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

СГРУППИРОВАТЬ ПО
	ЗарплатаЗаМесяцОрганизаций.Период,
	ЗарплатаЗаМесяцОрганизаций.Регистратор,
	ЗарплатаЗаМесяцОрганизаций.ВидДвижения,
	ЗарплатаЗаМесяцОрганизаций.Сотрудник,
	ЗарплатаЗаМесяцОрганизаций.Сотрудник.Физлицо,
	ЗарплатаЗаМесяцОрганизаций.Организация,
	ЗарплатаЗаМесяцОрганизаций.ПериодВзаиморасчетов,
	ЗарплатаЗаМесяцОрганизаций.ХарактерВыплаты,
	ЗарплатаЗаМесяцОрганизаций.Организация

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Физлицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ЗарплатаЗаМесяцОрганизацийАвансом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗарплатаЗаПервуюПоловинуМесяца.Период,
	ВЫБОР
		КОГДА ЗарплатаЗаПервуюПоловинуМесяца.Регистратор ССЫЛКА Документ.ЗарплатаКВыплатеОрганизаций
				И НЕ ЗарплатаЗаПервуюПоловинуМесяца.Регистратор.ДокументОснование = НЕОПРЕДЕЛЕНО
			ТОГДА ЗарплатаЗаПервуюПоловинуМесяца.Регистратор.ДокументОснование
		ИНАЧЕ ЗарплатаЗаПервуюПоловинуМесяца.Регистратор
	КОНЕЦ КАК Регистратор,
	ЗарплатаЗаПервуюПоловинуМесяца.Регистратор.ХарактерВыплаты КАК Регистратор_ХарактерВыплаты,
	ВЫБОР
		КОГДА ЗарплатаЗаПервуюПоловинуМесяца.Регистратор ССЫЛКА Документ.ЗарплатаКВыплатеОрганизаций
			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	КОНЕЦ КАК ВидДвижения,
	ЗарплатаЗаПервуюПоловинуМесяца.Физлицо КАК Физлицо,
	ЗарплатаЗаПервуюПоловинуМесяца.Организация,
	НАЧАЛОПЕРИОДА(ЗарплатаЗаПервуюПоловинуМесяца.Период, МЕСЯЦ) КАК ПериодВзаиморасчетов,
	ЗарплатаЗаПервуюПоловинуМесяца.СуммаВзаиморасчетов,
	ЗНАЧЕНИЕ(Перечисление.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца) КАК ХарактерВыплаты,
	NULL КАК СтатьяФинансирования,
	NULL КАК КОСГУ,
	ЗарплатаЗаПервуюПоловинуМесяца.Организация КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(ЗарплатаЗаПервуюПоловинуМесяца.Период, МЕСЯЦ) КАК ПериодОтбор
ИЗ
	РегистрНакопления.ЗарплатаЗаПервуюПоловинуМесяца КАК ЗарплатаЗаПервуюПоловинуМесяца
ГДЕ
	ЗарплатаЗаПервуюПоловинуМесяца.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И НАЧАЛОПЕРИОДА(ЗарплатаЗаПервуюПоловинуМесяца.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Физлицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ЗнаниеЯзыковФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаЗнаниеЯзыков.Ссылка КАК Физлицо,
	ФизическиеЛицаЗнаниеЯзыков.Язык,
	ФизическиеЛицаЗнаниеЯзыков.СтепеньЗнанияЯзыка
ИЗ
	Справочник.ФизическиеЛица.ЗнаниеЯзыков КАК ФизическиеЛицаЗнаниеЯзыков
ГДЕ
	ФизическиеЛицаЗнаниеЯзыков.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
		<Запрос Имя="КонтактнаяИнформацияОбъекта_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	КонтактнаяИнформация.*
ИЗ
	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
ГДЕ
	КонтактнаяИнформация.Объект ССЫЛКА #ИмяОбъекта

УПОРЯДОЧИТЬ ПО
	Объект</Текст>
		</Запрос>
		<Запрос Имя="МестаВыплатыЗарплатыСотрудников_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	Сотрудники.Сотрудник КАК Сотрудник,
	ЛицевыеСчетаРаботниковОрганизации.Организация,
	ЛицевыеСчетаРаботниковОрганизации.Банк,
	ЛицевыеСчетаРаботниковОрганизации.Сотрудник.Физлицо КАК ФизическоеЛицо,
	ЛицевыеСчетаРаботниковОрганизации.НомерКарточки КАК НомерЛицевогоСчета
ИЗ
	ВТСотрудники КАК Сотрудники
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВыплатыЗПРаботников КАК ЛицевыеСчетаРаботниковОрганизации
		ПО Сотрудники.Сотрудник = ЛицевыеСчетаРаботниковОрганизации.Сотрудник

УПОРЯДОЧИТЬ ПО
	ФизическоеЛицо</Текст>
		</Запрос>
		<Запрос Имя="НаградыФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаНаграды.Ссылка КАК Физлицо,
	ФизическиеЛицаНаграды.Награда,
	ФизическиеЛицаНаграды.НомерСтроки КАК НомерСтроки,
	ФизическиеЛицаНаграды.НомерПриказа,
	ФизическиеЛицаНаграды.ДатаПриказа,
	ФизическиеЛицаНаграды.ЧейПриказ
ИЗ
	Справочник.ФизическиеЛица.Награды КАК ФизическиеЛицаНаграды
ГДЕ
 	ФизическиеЛицаНаграды.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо,
	НомерСтроки</Текст>
		</Запрос>
		<Запрос Имя="НачальнаяЗадолженностьПоЗарплате_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗарплатаЗаМесяцОрганизацийОстатки.Физлицо,
	ЗарплатаЗаМесяцОрганизацийОстатки.Организация,
	NULL КАК СтатьяФинансирования,
	NULL КАК КОСГУ,
	ЗарплатаЗаМесяцОрганизацийОстатки.СуммаВзаиморасчетовОстаток
ПОМЕСТИТЬ ВТНачальнаяЗадолженностьПоЗарплате
ИЗ
	РегистрНакопления.ЗарплатаЗаМесяцОрганизаций.Остатки(
			&amp;ДатаНачалаПереносаРасчетныхДанных,
			Физлицо В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					ФизическиеЛица.Физлицо
				ИЗ
					ВТФизическиеЛица КАК ФизическиеЛица)) КАК ЗарплатаЗаМесяцОрганизацийОстатки
ГДЕ
	НЕ ЗарплатаЗаМесяцОрганизацийОстатки.СуммаВзаиморасчетовОстаток = 0
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	МАКСИМУМ(НачисленияРаботниковОрганизаций.ПериодРегистрации) КАК ПериодРегистрации,
	НачисленияРаботниковОрганизаций.ФизЛицо,
	НачисленияРаботниковОрганизаций.Организация
ПОМЕСТИТЬ ВТПериодыНачисленийДляВзаиморасчетов
ИЗ
	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации КАК ПериодРегистрации,
		НачальнаяЗадолженностьПоЗарплате.Физлицо КАК ФизЛицо,
		НачальнаяЗадолженностьПоЗарплате.Организация КАК Организация
	ИЗ
		ВТНачальнаяЗадолженностьПоЗарплате КАК НачальнаяЗадолженностьПоЗарплате
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
			ПО НачальнаяЗадолженностьПоЗарплате.Физлицо = ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо
				И (НачальнаяЗадолженностьПоЗарплате.Организация = ВЫБОР
					КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
						ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Организация
					ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
				КОНЕЦ)
				И (ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации &lt; &amp;ДатаНачалаПереносаРасчетныхДанных)
	
	ОБЪЕДИНИТЬ ВСЕ
	
	ВЫБРАТЬ РАЗЛИЧНЫЕ
		ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
		НачальнаяЗадолженностьПоЗарплате.Физлицо,
		НачальнаяЗадолженностьПоЗарплате.Организация
	ИЗ
		ВТНачальнаяЗадолженностьПоЗарплате КАК НачальнаяЗадолженностьПоЗарплате
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
			ПО НачальнаяЗадолженностьПоЗарплате.Физлицо = ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо
				И (НачальнаяЗадолженностьПоЗарплате.Организация = ВЫБОР
					КОГДА ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
						ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Организация
					ИНАЧЕ ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
				КОНЕЦ)
				И (ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации &lt; &amp;ДатаНачалаПереносаРасчетныхДанных)) КАК НачисленияРаботниковОрганизаций

СГРУППИРОВАТЬ ПО
	НачисленияРаботниковОрганизаций.ФизЛицо,
	НачисленияРаботниковОрганизаций.Организация
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо,
	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель2,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель3,
	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	ОсновныеНачисленияРаботниковОрганизаций.Сторно,
	ОсновныеНачисленияРаботниковОрганизаций.Авторасчет,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней,
	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.НормаДней,
	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.ДополнительныеДанные,
	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаНачало,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодРасчетаСреднегоЗаработкаОкончание,
	ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботыНорма,
	ОсновныеНачисленияРаботниковОрганизаций.РасчетнаяБазаЗаЕдиницуНормыВремени,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	NULL КАК КОСГУ,
	ВЫБОР
		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Организация
		ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
	КОНЕЦ КАК ОрганизацияОтбор
ИЗ
	ВТПериодыНачисленийДляВзаиморасчетов КАК ПериодыНачисленийДляВзаиморасчетов
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		ПО ПериодыНачисленийДляВзаиморасчетов.ФизЛицо = ОсновныеНачисленияРаботниковОрганизаций.ФизЛицо
			И (ПериодыНачисленийДляВзаиморасчетов.Организация = ВЫБОР
				КОГДА ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
					ТОГДА ОсновныеНачисленияРаботниковОрганизаций.Организация
				ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
			КОНЕЦ)
			И ПериодыНачисленийДляВзаиморасчетов.ПериодРегистрации = ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	Сотрудник,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	ДополнительныеНачисленияРаботниковОрганизаций.Организация,
	ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение,
	ДополнительныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо,
	ДополнительныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель1,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель2,
	ДополнительныеНачисленияРаботниковОрганизаций.Показатель3,
	ДополнительныеНачисленияРаботниковОрганизаций.Результат,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаСобытия,
	ДополнительныеНачисленияРаботниковОрганизаций.Сторно,
	ДополнительныеНачисленияРаботниковОрганизаций.Авторасчет,
	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	ДополнительныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	ДополнительныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	ДополнительныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	ДополнительныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ДополнительныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	ДополнительныеНачисленияРаботниковОрганизаций.ДокументОснование,
	ДополнительныеНачисленияРаботниковОрганизаций.ГодУчетаПремийПоИтогамГода,
	ДополнительныеНачисленияРаботниковОрганизаций.ДатаНачалаБазовогоПериода,
	ДополнительныеНачисленияРаботниковОрганизаций.ЧислоМесяцев,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	NULL КАК КОСГУ,
	ВЫБОР
		КОГДА ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Организация
		ИНАЧЕ ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
	КОНЕЦ КАК ОрганизацияОтбор
ИЗ
	ВТПериодыНачисленийДляВзаиморасчетов КАК ПериодыНачисленийДляВзаиморасчетов
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизаций
		ПО ПериодыНачисленийДляВзаиморасчетов.ФизЛицо = ДополнительныеНачисленияРаботниковОрганизаций.ФизЛицо
			И (ПериодыНачисленийДляВзаиморасчетов.Организация = ВЫБОР
				КОГДА ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
					ТОГДА ДополнительныеНачисленияРаботниковОрганизаций.Организация
				ИНАЧЕ ДополнительныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение
			КОНЕЦ)
			И ПериодыНачисленийДляВзаиморасчетов.ПериодРегистрации = ДополнительныеНачисленияРаботниковОрганизаций.ПериодРегистрации

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	Сотрудник,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	НачальнаяЗадолженностьПоЗарплате.Организация КАК Организация,
	НачальнаяЗадолженностьПоЗарплате.Физлицо КАК Физлицо,
	NULL КАК СтатьяФинансирования,
	NULL КАК КОСГУ,
	НачальнаяЗадолженностьПоЗарплате.СуммаВзаиморасчетовОстаток,
	НачальнаяЗадолженностьПоЗарплате.Организация КАК ОрганизацияОтбор
ИЗ
	ВТНачальнаяЗадолженностьПоЗарплате КАК НачальнаяЗадолженностьПоЗарплате

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	Физлицо
ИТОГИ ПО
	ОрганизацияОтбор</Текст>
		</Запрос>
		<Запрос Имя="НачисленияУдержания_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета,
	"ОсновныеНачисления" КАК ВидПВР
ПОМЕСТИТЬ ВТНачисленияУдержания
ИЗ
	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
ГДЕ
	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НЕ ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	"ОсновныеНачисления"
ИЗ
	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
ГДЕ
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НЕ ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
	И НЕ ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	УдержанияРаботниковОрганизаций.ВидРасчета,
	"Удержания"
ИЗ
	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
ГДЕ
	НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	И УдержанияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета,
	"Удержания"
ИЗ
	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
ГДЕ
	НАЧАЛОПЕРИОДА(ПлановыеУдержанияРаботниковОрганизаций.Период, МЕСЯЦ) &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	И ПлановыеУдержанияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)</Текст>
		</Запрос>
		<Запрос Имя="НачисленияУдержания_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета
ПОМЕСТИТЬ ИндексируемыеВидыРасчета
ИЗ
	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизацийБазовыеВидыРасчета
ГДЕ
	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ИндексацияЗарплаты)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ОписаниеНачислений.ВидРасчета КАК ВидРасчета,
	ВЫБОР
		КОГДА ОписаниеНачислений.ВидРасчета В
				(ВЫБРАТЬ
					ИндексируемыеВидыРасчета.ВидРасчета
				ИЗ
					ИндексируемыеВидыРасчета КАК ИндексируемыеВидыРасчета)
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК Индексируется,
	ВЫБОР
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 0
			ТОГДА "ОбщийЗаработок"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 1
			ТОГДА "ПремияФиксированнойСуммой"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 2
			ТОГДА "ПремияПроцентом"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 3
			ТОГДА "ПремияГодоваяФиксированнойСуммой"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 4
			ТОГДА "ПремияГодоваяПроцентом"
		ИНАЧЕ "НеВключать"
	КОНЕЦ КАК СоставнаяЧасть
ПОМЕСТИТЬ ВТОписаниеНачислений
ИЗ
	(ВЫБРАТЬ
		СреднийЗаработокБазовыеВидыРасчета.ВидРасчета КАК ВидРасчета,
		МИНИМУМ(ВЫБОР
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработку)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛФСС)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуДляОтпуска)
					ТОГДА 0
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиям)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямОтпуска)
					ТОГДА 1
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямОтпуска)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиям)
					ТОГДА 2
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремии)
					ТОГДА 4
				ИНАЧЕ 5
			КОНЕЦ) КАК СоставнаяЧасть
	ИЗ
		ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	
	СГРУППИРОВАТЬ ПО
		СреднийЗаработокБазовыеВидыРасчета.ВидРасчета) КАК ОписаниеНачислений

ИНДЕКСИРОВАТЬ ПО
	ВидРасчета
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗЛИЧНЫЕ
	НачисленияУдержания.ВидРасчета,
	НачисленияУдержания.ВидПВР,
	ЕСТЬNULL(ВТОписаниеНачислений.Индексируется, ЛОЖЬ) КАК Индексируется,
	ЕСТЬNULL(ВТОписаниеНачислений.СоставнаяЧасть, "НеВключать") КАК СоставнаяЧасть
ИЗ
	ВТНачисленияУдержания КАК НачисленияУдержания
		ЛЕВОЕ СОЕДИНЕНИЕ ВТОписаниеНачислений КАК ВТОписаниеНачислений
		ПО НачисленияУдержания.ВидРасчета = ВТОписаниеНачислений.ВидРасчета
//ВЫБРАТЬ
//	ОписаниеНачислений.ВидРасчета КАК ВидРасчета,
//	ВЫБОР
//		КОГДА ОписаниеНачислений.Индексируется = 0
//			ТОГДА ИСТИНА
//		ИНАЧЕ ЛОЖЬ
//	КОНЕЦ КАК Индексируется,
//	ВЫБОР
//		КОГДА ОписаниеНачислений.СоставнаяЧасть = 0
//			ТОГДА "ОбщийЗаработок"
//		КОГДА ОписаниеНачислений.СоставнаяЧасть = 1
//			ТОГДА "ПремияФиксированнойСуммой"
//		КОГДА ОписаниеНачислений.СоставнаяЧасть = 2
//			ТОГДА "ПремияПроцентом"
//		КОГДА ОписаниеНачислений.СоставнаяЧасть = 3
//			ТОГДА "ПремияГодоваяФиксированнойСуммой"
//		КОГДА ОписаниеНачислений.СоставнаяЧасть = 4
//			ТОГДА "ПремияГодоваяПроцентом"
//		ИНАЧЕ "НеВключать"
//	КОНЕЦ КАК СоставнаяЧасть
//ПОМЕСТИТЬ ВТОписаниеНачислений
//ИЗ
//	(ВЫБРАТЬ
//		СреднийЗаработокБазовыеВидыРасчета.ВидРасчета КАК ВидРасчета,
//		МИНИМУМ(ВЫБОР
//				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые)
//						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые)
//						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые)
//					ТОГДА 0
//				ИНАЧЕ 1
//			КОНЕЦ) КАК Индексируется,
//		МИНИМУМ(ВЫБОР
//				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые)
//						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые)
//					ТОГДА 0
//				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые)
//					ТОГДА 1
//				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые)
//						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые)
//					ТОГДА 2
//				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые)
//					ТОГДА 3
//				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые)
//						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые)
//					ТОГДА 4
//				ИНАЧЕ 5
//			КОНЕЦ) КАК СоставнаяЧасть
//	ИЗ
//		ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
//	ГДЕ
//		СреднийЗаработокБазовыеВидыРасчета.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямНеИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремииНеИндексируемые), ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые))
//	
//	СГРУППИРОВАТЬ ПО
//		СреднийЗаработокБазовыеВидыРасчета.ВидРасчета) КАК ОписаниеНачислений

//ИНДЕКСИРОВАТЬ ПО
//	ВидРасчета
//;

//////////////////////////////////////////////////////////////////////////////////
//ВЫБРАТЬ РАЗЛИЧНЫЕ
//	НачисленияУдержания.ВидРасчета,
//	НачисленияУдержания.ВидПВР,
//	ЕСТЬNULL(ВТОписаниеНачислений.Индексируется, ЛОЖЬ) КАК Индексируется,
//	ЕСТЬNULL(ВТОписаниеНачислений.СоставнаяЧасть, "НеВключать") КАК СоставнаяЧасть
//ИЗ
//	ВТНачисленияУдержания КАК НачисленияУдержания
//		ЛЕВОЕ СОЕДИНЕНИЕ ВТОписаниеНачислений КАК ВТОписаниеНачислений
//		ПО НачисленияУдержания.ВидРасчета = ВТОписаниеНачислений.ВидРасчета</Текст>
		</Запрос>
		<Запрос Имя="НДФЛДоходыПредыдущегоМестаРаботы_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛДоходыПредыдущегоМестаРаботы.*
ИЗ
	РегистрСведений.НДФЛДоходыПредыдущегоМестаРаботы КАК НДФЛДоходыПредыдущегоМестаРаботы
ГДЕ
	НДФЛДоходыПредыдущегоМестаРаботы.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	ФизЛицо</Текст>
		</Запрос>
		<Запрос Имя="НДФЛКЗачету_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛКЗачету.Организация,
	НДФЛКЗачету.ФизЛицо,
	НДФЛКЗачету.Период,
	НДФЛКЗачету.СуммаНДФЛКЗачету,
	НДФЛКЗачету.СтавкаНалогообложенияРезидента,
	НДФЛКЗачету.ВидДвижения,
	NULL КАК СтатьяФинансирования,
	NULL КАК КОСГУ,
	НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, МЕСЯЦ) КАК ПериодОтбор,
	НДФЛКЗачету.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрНакопления.НДФЛКЗачету КАК НДФЛКЗачету
ГДЕ
	НДФЛКЗачету.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И НАЧАЛОПЕРИОДА(НДФЛКЗачету.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	НДФЛКЗачету.ФизЛицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛОтменаВычетов_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛОтменаВычетов.Период КАК Период,
	НДФЛОтменаВычетов.Физлицо,
	НДФЛПрименениеВычетов.Организация,
	НДФЛОтменаВычетов.Физлицо КАК ФизлицоОтбор,
	НДФЛПрименениеВычетов.Организация КАК ОрганизацияОтбор
ИЗ
	(ВЫБРАТЬ
		НДФЛОтменаВычетов.Период КАК Период,
		НДФЛОтменаВычетов.Физлицо КАК Физлицо,
		МАКСИМУМ(НДФЛПрименениеВычетов.Период) КАК ПериодСреза
	ИЗ
		РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛОтменаВычетов
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
			ПО НДФЛОтменаВычетов.Физлицо = НДФЛПрименениеВычетов.Физлицо
				И НДФЛОтменаВычетов.Период &gt; НДФЛПрименениеВычетов.Период
				И (НДФЛОтменаВычетов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
				И (НЕ НДФЛПрименениеВычетов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	
	СГРУППИРОВАТЬ ПО
		НДФЛОтменаВычетов.Период,
		НДФЛОтменаВычетов.Физлицо) КАК НДФЛОтменаВычетов
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
		ПО НДФЛОтменаВычетов.Физлицо = НДФЛПрименениеВычетов.Физлицо
			И НДФЛОтменаВычетов.ПериодСреза = НДФЛПрименениеВычетов.Период

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор,
	Период
ИТОГИ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛПрименениеВычетов_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛПрименениеВычетов.Период КАК Период,
	НДФЛПрименениеВычетов.Физлицо КАК Физлицо,
	НДФЛПрименениеВычетов.Организация,
	НДФЛПрименениеВычетов.Физлицо КАК ФизлицоОтбор,
	НДФЛПрименениеВычетов.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
ГДЕ
	НЕ НДФЛПрименениеВычетов.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	И НДФЛПрименениеВычетов.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор,
	Период
ИТОГИ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛРасчетыНалоговыхАгентовСБюджетом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо КАК ФизЛицо,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка,
	НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма,
	НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период, МЕСЯЦ) КАК ПериодОтбор,
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
ГДЕ
	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И НАЧАЛОПЕРИОДА(РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛРасчетыСБюджетом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛРасчетыСБюджетом.Период КАК Период,
	ВЫРАЗИТЬ(НДФЛРасчетыСБюджетом.Сотрудник КАК Справочник.СотрудникиОрганизаций).ФизЛицо КАК ФизЛицо,
	НДФЛРасчетыСБюджетом.ДоходНДФЛ КАК КодДохода,
	НДФЛРасчетыСБюджетом.ПериодВзаиморасчетов,
	НДФЛРасчетыСБюджетом.Налог,
	НДФЛРасчетыСБюджетом.Доход,
	НДФЛРасчетыСБюджетом.Организация,
	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	НДФЛРасчетыСБюджетом.ВидДвижения,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) КАК ПериодОтбор,
	НДФЛРасчетыСБюджетом.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК НДФЛРасчетыСБюджетом
ГДЕ
	НДФЛРасчетыСБюджетом.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	И НДФЛРасчетыСБюджетом.Сотрудник ССЫЛКА Справочник.СотрудникиОрганизаций

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛРасчетыСБюджетомАвансом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗарплатаКВыплатеОрганизацийНДФЛ.НалоговыйПериод КАК Период,
	ЗарплатаКВыплатеОрганизацийНДФЛ.НомерСтроки,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Сотрудник,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Сотрудник.Физлицо КАК Физлицо,
	ЗарплатаКВыплатеОрганизацийНДФЛ.ДоходНДФЛ,
	ЗарплатаКВыплатеОрганизацийНДФЛ.ПериодВзаиморасчетов,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Налог,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Доход,
	ЗарплатаКВыплатеОрганизацийНДФЛ.НеподтвержденнаяСумма,
	ЗарплатаКВыплатеОрганизацийНДФЛ.НалоговыйПериод,
	ЗарплатаКВыплатеОрганизацийНДФЛ.КоличествоЛьгот,
	ИСТИНА КАК ИсчисленоИзЗарплаты,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Льгота,
	ЗарплатаКВыплатеОрганизацийНДФЛ.ВидСтавки,
	ЗарплатаКВыплатеОрганизацийНДФЛ.ДоходПолный,
	ЗарплатаКВыплатеОрганизацийНДФЛ.УвеличеннаяСтавка,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Ссылка.Организация КАК Организация,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Ссылка.Организация КАК ОбособленноеПодразделение,
	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	НАЧАЛОПЕРИОДА(ЗарплатаКВыплатеОрганизацийНДФЛ.НалоговыйПериод, МЕСЯЦ) КАК ПериодОтбор,
	ЗарплатаКВыплатеОрганизацийНДФЛ.Ссылка.Организация КАК ОрганизацияОтбор
ИЗ
	Документ.ЗарплатаКВыплатеОрганизаций.НДФЛ КАК ЗарплатаКВыплатеОрганизацийНДФЛ
ГДЕ
	ЗарплатаКВыплатеОрганизацийНДФЛ.Ссылка.ВидВыплаты В (ЗНАЧЕНИЕ(Справочник.ВидыВыплат.Аванс), ЗНАЧЕНИЕ(Справочник.ВидыВыплат.АвансПредварительныйРасчет))
	И ЗарплатаКВыплатеОрганизацийНДФЛ.Ссылка.Проведен
	И НАЧАЛОПЕРИОДА(ЗарплатаКВыплатеОрганизацийНДФЛ.НалоговыйПериод, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Физлицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛСтандартныеВычетыНаДетей_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛСтандартныеВычетыНаДетей.Период КАК Период,
	НДФЛСтандартныеВычетыНаДетей.Физлицо КАК Физлицо,
	НДФЛСтандартныеВычетыНаДетей.КодВычета,
	НДФЛСтандартныеВычетыНаДетей.КоличествоДетей,
	НДФЛСтандартныеВычетыНаДетей.ПериодЗавершения,
	НДФЛСтандартныеВычетыНаДетей.КоличествоДетейЗавершения,
	НДФЛСтандартныеВычетыНаДетей.Основание,
	НДФЛСтандартныеВычетыНаДетей.Физлицо КАК ФизлицоОтбор,
	НДФЛПрименениеВычетов.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрСведений.НДФЛСтандартныеВычетыНаДетей КАК НДФЛСтандартныеВычетыНаДетей
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			НДФЛСтандартныеВычетыНаДетей.Физлицо КАК Физлицо,
			НДФЛСтандартныеВычетыНаДетей.Период КАК Период,
			МАКСИМУМ(НДФЛПрименениеВычетов.Период) КАК ПериодСреза
		ИЗ
			РегистрСведений.НДФЛСтандартныеВычетыНаДетей КАК НДФЛСтандартныеВычетыНаДетей
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
				ПО НДФЛСтандартныеВычетыНаДетей.Физлицо = НДФЛПрименениеВычетов.Физлицо
					И (НДФЛСтандартныеВычетыНаДетей.Период &gt;= НАЧАЛОПЕРИОДА(НДФЛПрименениеВычетов.Период, МЕСЯЦ))
					И (НДФЛСтандартныеВычетыНаДетей.Физлицо В
						(ВЫБРАТЬ РАЗЛИЧНЫЕ
							ФизическиеЛица.Физлицо
						ИЗ
							ВТФизическиеЛица КАК ФизическиеЛица))
		
		СГРУППИРОВАТЬ ПО
			НДФЛСтандартныеВычетыНаДетей.Физлицо,
			НДФЛСтандартныеВычетыНаДетей.Период) КАК НДФЛПрименениеВычетовСрезПоследних
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
			ПО НДФЛПрименениеВычетовСрезПоследних.Физлицо = НДФЛПрименениеВычетов.Физлицо
				И НДФЛПрименениеВычетовСрезПоследних.ПериодСреза = НДФЛПрименениеВычетов.Период
		ПО НДФЛСтандартныеВычетыНаДетей.Физлицо = НДФЛПрименениеВычетовСрезПоследних.Физлицо
			И НДФЛСтандартныеВычетыНаДетей.Период = НДФЛПрименениеВычетовСрезПоследних.Период
ГДЕ
	НДФЛСтандартныеВычетыНаДетей.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор,
	Период
ИТОГИ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор</Текст>
		</Запрос>
		<Запрос Имя="НДФЛСтандартныеВычетыФизлиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	НДФЛСтандартныеВычетыФизлиц.Период КАК Период,
	НДФЛСтандартныеВычетыФизлиц.Физлицо КАК Физлицо,
	НДФЛСтандартныеВычетыФизлиц.КодВычетаЛичный,
	НДФЛСтандартныеВычетыФизлиц.Основание,
	НДФЛСтандартныеВычетыФизлиц.Физлицо КАК ФизлицоОтбор,
	НДФЛПрименениеВычетов.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК НДФЛСтандартныеВычетыФизлиц
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			НДФЛСтандартныеВычетыФизлиц.Физлицо КАК Физлицо,
			НДФЛСтандартныеВычетыФизлиц.Период КАК Период,
			МАКСИМУМ(НДФЛПрименениеВычетов.Период) КАК ПериодСреза
		ИЗ
			РегистрСведений.НДФЛСтандартныеВычетыФизлиц КАК НДФЛСтандартныеВычетыФизлиц
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
				ПО НДФЛСтандартныеВычетыФизлиц.Физлицо = НДФЛПрименениеВычетов.Физлицо
					И (НДФЛСтандартныеВычетыФизлиц.Период &gt;= НАЧАЛОПЕРИОДА(НДФЛПрименениеВычетов.Период, МЕСЯЦ))
					И (НДФЛСтандартныеВычетыФизлиц.Физлицо В
						(ВЫБРАТЬ РАЗЛИЧНЫЕ
							ФизическиеЛица.Физлицо
						ИЗ
							ВТФизическиеЛица КАК ФизическиеЛица))
		
		СГРУППИРОВАТЬ ПО
			НДФЛСтандартныеВычетыФизлиц.Физлицо,
			НДФЛСтандартныеВычетыФизлиц.Период) КАК НДФЛПрименениеВычетовСрезПоследних
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НДФЛПрименениеВычетов КАК НДФЛПрименениеВычетов
			ПО НДФЛПрименениеВычетовСрезПоследних.Физлицо = НДФЛПрименениеВычетов.Физлицо
				И НДФЛПрименениеВычетовСрезПоследних.ПериодСреза = НДФЛПрименениеВычетов.Период
		ПО НДФЛСтандартныеВычетыФизлиц.Физлицо = НДФЛПрименениеВычетовСрезПоследних.Физлицо
			И НДФЛСтандартныеВычетыФизлиц.Период = НДФЛПрименениеВычетовСрезПоследних.Период
ГДЕ
	НДФЛСтандартныеВычетыФизлиц.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор,
	Период
ИТОГИ ПО
	ОрганизацияОтбор,
	ФизлицоОтбор</Текст>
		</Запрос>
		<Запрос Имя="ОписаниеНачислений_СЗ_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета
ПОМЕСТИТЬ ИндексируемыеВидыРасчета
ИЗ
	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизацийБазовыеВидыРасчета
ГДЕ
	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ИндексацияЗарплаты)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ОписаниеНачислений.ВидРасчета КАК ВидРасчета,
	ВЫБОР
		КОГДА ОписаниеНачислений.ВидРасчета В
				(ВЫБРАТЬ
					ИндексируемыеВидыРасчета.ВидРасчета
				ИЗ
					ИндексируемыеВидыРасчета КАК ИндексируемыеВидыРасчета)
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК Индексируется,
	ВЫБОР
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 0
			ТОГДА "ОбщийЗаработок"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 1
			ТОГДА "ПремияФиксированнойСуммой"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 2
			ТОГДА "ПремияПроцентом"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 3
			ТОГДА "ПремияГодоваяФиксированнойСуммой"
		КОГДА ОписаниеНачислений.СоставнаяЧасть = 4
			ТОГДА "ПремияГодоваяПроцентом"
		ИНАЧЕ "НеВключать"
	КОНЕЦ КАК СоставнаяЧасть
ПОМЕСТИТЬ ВТОписаниеНачислений
ИЗ
	(ВЫБРАТЬ
		СреднийЗаработокБазовыеВидыРасчета.ВидРасчета КАК ВидРасчета,
		МИНИМУМ(ВЫБОР
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработку)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуБЛФСС)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуДляОтпуска)
					ТОГДА 0
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиям)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоФиксПремиямОтпуска)
					ТОГДА 1
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямОтпуска)
						ИЛИ СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиям)
					ТОГДА 2
				КОГДА СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоГодовойПремии)
					ТОГДА 4
				ИНАЧЕ 5
			КОНЕЦ) КАК СоставнаяЧасть
	ИЗ
		ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	
	СГРУППИРОВАТЬ ПО
		СреднийЗаработокБазовыеВидыРасчета.ВидРасчета) КАК ОписаниеНачислений

ИНДЕКСИРОВАТЬ ПО
	ВидРасчета
</Текст>
		</Запрос>
		<Запрос Имя="Организации_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	Организации.Ссылка,
	Организации.ВерсияДанных,
	Организации.ПометкаУдаления,
	Организации.Предопределенный,
	Организации.Код,
	Организации.Наименование,
	Организации.Префикс,
	Организации.ГоловнаяОрганизация,
	Организации.НаименованиеПолное,
	Организации.ЮрФизЛицо,
	Организации.ОсновнойБанковскийСчет,
	Организации.НаименованиеПлательщикаПриПеречисленииНалогов,
	Организации.ИндивидуальныйПредприниматель,
	Организации.ОтражатьВРегламентированномУчете,
	Организации.БанковскийСчетДляРасчетовСФСС,
	Организации.ДатаНачалаИспользованияЗвит1С,
	Организации.Представление,
	КодыОрганизацииСрезПоследних.ДатаРегистрации,
	КодыОрганизацииСрезПоследних.НомерРегистрации,
	КодыОрганизацииСрезПоследних.КемЗарегистрирована,
	КодыОрганизацииСрезПоследних.НомерРегистрацииПФ,
	КодыОрганизацииСрезПоследних.НомерРегистрацииВСлужбеЗанятости,
	КодыОрганизацииСрезПоследних.НалоговаяИнспекция,
	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ,
	КодыОрганизацииСрезПоследних.ИНН,
	КодыОрганизацииСрезПоследних.НомерСвидетельства,
	КодыОрганизацииСрезПоследних.КодЗКГНГ,
	КодыОрганизацииСрезПоследних.КодСПОДУ,
	КодыОрганизацииСрезПоследних.КодКВЕД,
	КодыОрганизацииСрезПоследних.КодКОАТУУ,
	КодыОрганизацииСрезПоследних.КодКФВ,
	КодыОрганизацииСрезПоследних.НомерФСС,
	КодыОрганизацииСрезПоследних.НомерФССНесчСлучай,
	КодыОрганизацииСрезПоследних.Отрасль,
	КодыОрганизацииСрезПоследних.Территория,
	КодыОрганизацииСрезПоследних.ФормаСобственности,
	КодыОрганизацииСрезПоследних.ВЭД,
	КодыОрганизацииСрезПоследних.ОрганГУ,
	КодыОрганизацииСрезПоследних.КодОПФГ,
	КодыОрганизацииСрезПоследних.ОПФГ,
	КодыОрганизацииСрезПоследних.КодОрганаПФУ,
	КодыОрганизацииСрезПоследних.НазваниеРабочегоОрганаФонда,
	КодыОрганизацииСрезПоследних.ФИОДиректораФонда,
	КодыОрганизацииСрезПоследних.КлассПрофессиональногоРиска,
	КодыОрганизацииСрезПоследних.ОрганСоциальнойЗащитыНаселения
ИЗ
	Справочник.Организации КАК Организации
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КодыОрганизации.СрезПоследних КАК КодыОрганизацииСрезПоследних
		ПО Организации.Ссылка = КодыОрганизацииСрезПоследних.Организация

УПОРЯДОЧИТЬ ПО
	Организации.Наименование</Текст>
		</Запрос>
		<Запрос Имя="ОснНачисленияРаботниковОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ОсновныеНачисленияРаботниковОрганизаций.Регистратор,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,
	ОсновныеНачисленияРаботниковОрганизаций.Организация,
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель2,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель3,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель4,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель5,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель6,
	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	ОсновныеНачисленияРаботниковОрганизаций.Сторно,
	ОсновныеНачисленияРаботниковОрганизаций.Авторасчет,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало,
	ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец,
	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней,
	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.НормаДней,
	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.ГрафикРаботы,
	ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремени,
	ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремениДляСредней,
	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодНачало,
	ОсновныеНачисленияРаботниковОрганизаций.БазовыйПериодКонец,
	ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	ОсновныеНачисленияРаботниковОрганизаций.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
ГДЕ
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица) И 
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Сотрудник,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ОснНачисленияРаботниковОрганизацийАвансом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ОсновныеНачисленияРаботниковОрганизаций.Ссылка КАК Регистратор,
	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Организация КАК Организация,
	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Организация КАК ОбособленноеПодразделение,
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	ОсновныеНачисленияРаботниковОрганизаций.ПодразделениеОрганизации,
	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель1,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель2,
	ОсновныеНачисленияРаботниковОрганизаций.Показатель3,
	ОсновныеНачисленияРаботниковОрганизаций.Результат,
	ОсновныеНачисленияРаботниковОрганизаций.Сторно,
	ОсновныеНачисленияРаботниковОрганизаций.Авторасчет,
	ОсновныеНачисленияРаботниковОрганизаций.ДатаНачала КАК ПериодДействияНачало,
	ОсновныеНачисленияРаботниковОрганизаций.ДатаОкончания КАК ПериодДействияКонец,
	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней,
	ОсновныеНачисленияРаботниковОрганизаций.ОтработаноЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.НормаДней,
	ОсновныеНачисленияРаботниковОрганизаций.НормаЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.ОплаченоДнейЧасов,
	ОсновныеНачисленияРаботниковОрганизаций.ВидУчетаВремениДляСредней,
	NULL КАК ВидУчетаВремени,
	ОсновныеНачисленияРаботниковОрганизаций.СторнируемыйДокумент,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Организация КАК ОрганизацияОтбор
ИЗ
	Документ.НачислениеЗарплатыРаботникамОрганизаций.Начисления КАК ОсновныеНачисленияРаботниковОрганизаций
ГДЕ
	ОсновныеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	И ОсновныеНачисленияРаботниковОрганизаций.Ссылка.ПредварительныйРасчет
	И ОсновныеНачисленияРаботниковОрганизаций.Ссылка.Проведен

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Сотрудник,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ОснНачисленияФПД_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	НАЧАЛОПЕРИОДА(ФПД.ПериодДействия, МЕСЯЦ) КАК Месяц,
	ФПД.Сотрудник КАК Сотрудник,
	ФПД.Сотрудник.Физлицо КАК Физлицо,
	ВЫБОР
		КОГДА Сотрудники.ДатаПриемаНаРаботу &gt; НАЧАЛОПЕРИОДА(ФПД.ПериодДействия, МЕСЯЦ)
			ТОГДА Сотрудники.ДатаПриемаНаРаботу
		ИНАЧЕ ФПД.ПериодДействияНачало
	КОНЕЦ КАК НачалоМесяца,
	ВЫБОР
		КОГДА Сотрудники.ДатаУвольнения &lt;&gt; ДАТАВРЕМЯ(1, 1, 1)
				И Сотрудники.ДатаУвольнения &lt; КОНЕЦПЕРИОДА(ФПД.ПериодДействия, МЕСЯЦ)
			ТОГДА Сотрудники.ДатаУвольнения
		ИНАЧЕ ФПД.ПериодДействияКонец
	КОНЕЦ КАК ОкончаниеМесяца,
	ФПД.ГрафикРаботы,
	ФПД.ОбособленноеПодразделение КАК Организация,
	ФПД.ПериодРегистрации КАК ПериодРегистрации,
	ФПД.Сторно,
	ФПД.ОбособленноеПодразделение КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(ФПД.ПериодДействия, МЕСЯЦ) КАК ПериодОтбор
ИЗ
	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
			ВидРасчета.ЗачетОтработанногоВремени = ИСТИНА
				И Сотрудник В
					(ВЫБРАТЬ РАЗЛИЧНЫЕ
						Сотрудники.Сотрудник
					ИЗ
						ВТСотрудники КАК Сотрудники)
				И Физлицо В
					(ВЫБРАТЬ РАЗЛИЧНЫЕ
						ФизическиеЛица.Физлицо
					ИЗ
						ВТФизическиеЛица КАК ФизическиеЛица)
				И НАЧАЛОПЕРИОДА(ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных) КАК ФПД
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК Сотрудники
		ПО (Сотрудники.Ссылка = ФПД.Сотрудник)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Сотрудник,
	Месяц
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ОтборПоВР_Удалить" ИспользуетсяПриЗагрузке="false">
			<Текст>УНИЧТОЖИТЬ ВТОтборПоВР</Текст>
		</Запрос>
		<Запрос Имя="ОтветственныеЛицаОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	&amp;ДатаСреза КАК Период,
	*
ИЗ
	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&amp;ДатаСреза, СтруктурнаяЕдиница ССЫЛКА Справочник.Организации) КАК ОтветственныеЛицаОрганизаций

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	ОтветственныеЛицаОрганизаций.Период,
	*
ИЗ
	РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
ГДЕ
	ОтветственныеЛицаОрганизаций.Период &gt; &amp;ДатаСреза
	И ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница ССЫЛКА Справочник.Организации</Текст>
		</Запрос>
		<Запрос Имя="ПериодическиеПоказателиОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПериодическиеЗначенияПоказателейСхемМотивации.Организация КАК Организация,
	НАЧАЛОПЕРИОДА(ПериодическиеЗначенияПоказателейСхемМотивации.Период, МЕСЯЦ) КАК ПериодРегистрации,
	ПериодическиеЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	ПериодическиеЗначенияПоказателейСхемМотивации.Период КАК Период,
	ПериодическиеЗначенияПоказателейСхемМотивации.Значение,
	ПериодическиеЗначенияПоказателейСхемМотивации.Валюта
ИЗ
	РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации КАК ПериодическиеЗначенияПоказателейСхемМотивации
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоказателиНачисленийУдержаний КАК ПоказателиНачисленийУдержаний
		ПО ПериодическиеЗначенияПоказателейСхемМотивации.Показатель = ПоказателиНачисленийУдержаний.Показатель
ГДЕ
	ПериодическиеЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Общий)
	И НЕ ПериодическиеЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	Показатель,
	Период
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="ПериодическиеПоказателиПодразделений_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПериодическиеЗначенияПоказателейСхемМотивации.Подразделение.Владелец КАК Организация,
	НАЧАЛОПЕРИОДА(ПериодическиеЗначенияПоказателейСхемМотивации.Период, МЕСЯЦ) КАК ПериодРегистрации,
	ПериодическиеЗначенияПоказателейСхемМотивации.Подразделение КАК Подразделение,
	ПериодическиеЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	ПериодическиеЗначенияПоказателейСхемМотивации.Период КАК Период,
	ПериодическиеЗначенияПоказателейСхемМотивации.Значение,
	ПериодическиеЗначенияПоказателейСхемМотивации.Валюта
ИЗ
	РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации КАК ПериодическиеЗначенияПоказателейСхемМотивации
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоказателиНачисленийУдержаний КАК ПоказателиНачисленийУдержаний
		ПО ПериодическиеЗначенияПоказателейСхемМотивации.Показатель = ПоказателиНачисленийУдержаний.Показатель
ГДЕ
	ПериодическиеЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	И НЕ ПериодическиеЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	И ПериодическиеЗначенияПоказателейСхемМотивации.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций
	И НЕ ПериодическиеЗначенияПоказателейСхемМотивации.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	Подразделение,
	Показатель,
	Период
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="ПлановыеНачисленияПоДоговорам_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо КАК Сотрудник_Физлицо,
	ПлановыеНачисленияРаботниковОрганизаций.Организация КАК Организация,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Организация КАК ОбособленноеПодразделение,
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор,
	ПлановыеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтрокиЗаписи,
	ПлановыеНачисленияРаботниковОрганизаций.Период КАК Период,
	ПлановыеНачисленияРаботниковОрганизаций.Действие,
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение,
	ПлановыеНачисленияРаботниковОрганизаций.ДокументОснование,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор КАК ПервичныйДокумент,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Дата КАК ПервичныйДокумент_Дата,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Номер КАК ПервичныйДокумент_Номер,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Ответственный КАК ПервичныйДокумент_Ответственный,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Комментарий КАК ПервичныйДокумент_Комментарий,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель1,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта1,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель2,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта2,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель3,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта3,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель4,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта4,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель5,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта5,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель6,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта6,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6
ИЗ
	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
ГДЕ
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
	И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)

УПОРЯДОЧИТЬ ПО
	Сотрудник,
	Период</Текст>
		</Запрос>
		<Запрос Имя="ПлановыеНачисленияРаботниковОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо КАК Сотрудник_Физлицо,
	ПлановыеНачисленияРаботниковОрганизаций.Организация КАК Организация,
	РаботникиОрганизацийОП.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор,
	ПлановыеНачисленияРаботниковОрганизаций.НомерСтроки КАК НомерСтрокиЗаписи,
	ПлановыеНачисленияРаботниковОрганизаций.Период КАК Период,
	ПлановыеНачисленияРаботниковОрганизаций.Действие,
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчетаИзмерение,
	ПлановыеНачисленияРаботниковОрганизаций.ДокументОснование,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор КАК ПервичныйДокумент,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Дата КАК ПервичныйДокумент_Дата,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Номер КАК ПервичныйДокумент_Номер,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Ответственный КАК ПервичныйДокумент_Ответственный,
	ПлановыеНачисленияРаботниковОрганизаций.Регистратор.Комментарий КАК ПервичныйДокумент_Комментарий,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель1 КАК Показатель1,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта1,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд1,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель2,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта2,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд2,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель3,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта3,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд3,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель4,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта4,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд4,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель5,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта5,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд5,
	ПлановыеНачисленияРаботниковОрганизаций.Показатель6,
	ПлановыеНачисленияРаботниковОрганизаций.Валюта6,
	ПлановыеНачисленияРаботниковОрганизаций.ТарифныйРазряд6
ИЗ
	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
			ПлановыеНачисленияРаботниковОрганизаций.Период КАК Период,
			МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодСреза
		ИЗ
			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
				ПО ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = РаботникиОрганизаций.Сотрудник
					И ПлановыеНачисленияРаботниковОрганизаций.Период &gt;= РаботникиОрганизаций.Период
					И (ПлановыеНачисленияРаботниковОрганизаций.Сотрудник В
						(ВЫБРАТЬ РАЗЛИЧНЫЕ
							Сотрудники.Сотрудник
						ИЗ
							ВТСотрудники КАК Сотрудники))
		
		СГРУППИРОВАТЬ ПО
			РаботникиОрганизаций.Сотрудник,
			ПлановыеНачисленияРаботниковОрганизаций.Период) КАК РаботникиОрганизацийСрезПоследних
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизацийОП
			ПО РаботникиОрганизацийСрезПоследних.Сотрудник = РаботникиОрганизацийОП.Сотрудник
				И РаботникиОрганизацийСрезПоследних.ПериодСреза = РаботникиОрганизацийОП.Период
		ПО ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
			И ПлановыеНачисленияРаботниковОрганизаций.Период = РаботникиОрганизацийСрезПоследних.Период
			И (ПлановыеНачисленияРаботниковОрганизаций.Сотрудник В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					Сотрудники.Сотрудник
				ИЗ
					ВТСотрудники КАК Сотрудники))
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		ПО ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = РаботникиОрганизаций.Сотрудник
			И ПлановыеНачисленияРаботниковОрганизаций.Период = РаботникиОрганизаций.Период

УПОРЯДОЧИТЬ ПО
	Сотрудник,
	Период</Текст>
		</Запрос>
		<Запрос Имя="ПлановыеУдержанияПоИсполнительнымЛистам_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
	ПлановыеУдержанияРаботниковОрганизаций.Организация КАК Организация,
	РаботникиОрганизаций.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор,
	ПлановыеУдержанияРаботниковОрганизаций.НомерСтроки,
	ПлановыеУдержанияРаботниковОрганизаций.Период КАК Период,
	ПлановыеУдержанияРаботниковОрганизаций.Действие,
	ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения,
	ПлановыеУдержанияРаботниковОрганизаций.ДействиеЗавершения,
	ПлановыеУдержанияРаботниковОрганизаций.Получатель,
	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование,
	ПлановыеУдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек,
	ПлановыеУдержанияРаботниковОрганизаций.ПрожиточныйМинимум,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор КАК ПервичныйДокумент,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Дата КАК ПервичныйДокумент_Дата,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Номер КАК ПервичныйДокумент_Номер,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Ответственный КАК ПервичныйДокумент_Ответственный,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Комментарий КАК ПервичныйДокумент_Комментарий,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель1,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта1,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель2,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта2,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель3,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта3,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель4,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта4,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель5,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта5,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель6,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта6,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель1Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта1Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель2Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта2Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель3Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта3Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель4Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта4Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель5Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта5Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель6Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта6Завершения,
	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.Дата Как ДокументОснование_Дата,
	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.ДатаДействия Как ДокументОснование_ДатаДействия,
	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование.Номер Как ДокументОснование_Номер
ИЗ
	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
			РаботникиОрганизаций.Организация КАК Организация,
			ПлановыеУдержанияРаботниковОрганизаций.Период КАК Период,
			МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодСреза
		ИЗ
			РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
				ПО ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
					И ПлановыеУдержанияРаботниковОрганизаций.Организация = РаботникиОрганизаций.Организация
					И ПлановыеУдержанияРаботниковОрганизаций.Период &gt;= РаботникиОрганизаций.Период
					И (ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо В
						(ВЫБРАТЬ РАЗЛИЧНЫЕ
							ФизическиеЛица.Физлицо
						ИЗ
							ВТФизическиеЛица КАК ФизическиеЛица))
					И (РаботникиОрганизаций.Сотрудник.ВидЗанятости &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИсполнительныеДокументы КАК ИсполнительныеДокументы
				ПО ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование = ИсполнительныеДокументы.ДокументОснование
		
		СГРУППИРОВАТЬ ПО
			РаботникиОрганизаций.Сотрудник.Физлицо,
			РаботникиОрганизаций.Организация,
			ПлановыеУдержанияРаботниковОрганизаций.Период) КАК РаботникиОрганизацийСрезПоследних
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			ПО РаботникиОрганизацийСрезПоследних.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
				И РаботникиОрганизацийСрезПоследних.Организация = РаботникиОрганизаций.Организация
				И РаботникиОрганизацийСрезПоследних.ПериодСреза = РаботникиОрганизаций.Период
				И (РаботникиОрганизаций.Сотрудник.ВидЗанятости &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		ПО ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо = РаботникиОрганизацийСрезПоследних.ФизЛицо
			И ПлановыеУдержанияРаботниковОрганизаций.Организация = РаботникиОрганизацийСрезПоследних.Организация
			И ПлановыеУдержанияРаботниковОрганизаций.Период = РаботникиОрганизацийСрезПоследних.Период
			И (ПлановыеУдержанияРаботниковОрганизаций.ФизЛицо В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					ФизическиеЛица.Физлицо
				ИЗ
					ВТФизическиеЛица КАК ФизическиеЛица))

УПОРЯДОЧИТЬ ПО
	ФизЛицо,
	Организация,
	Период</Текст>
		</Запрос>
		<Запрос Имя="ПлановыеУдержанияРаботниковОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПлановыеУдержанияРаботниковОрганизаций.Сотрудник,
	ПлановыеУдержанияРаботниковОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	ПлановыеУдержанияРаботниковОрганизаций.Организация КАК Организация,
	РаботникиОрганизаций.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	ПлановыеУдержанияРаботниковОрганизаций.ВидРасчета,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор,
	ПлановыеУдержанияРаботниковОрганизаций.НомерСтроки,
	ПлановыеУдержанияРаботниковОрганизаций.Период КАК Период,
	ПлановыеУдержанияРаботниковОрганизаций.Действие,
	ПлановыеУдержанияРаботниковОрганизаций.ПериодЗавершения,
	ПлановыеУдержанияРаботниковОрганизаций.ДействиеЗавершения,
	ПлановыеУдержанияРаботниковОрганизаций.ДокументОснование,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор КАК ПервичныйДокумент,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Дата КАК ПервичныйДокумент_Дата,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Номер КАК ПервичныйДокумент_Номер,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Ответственный КАК ПервичныйДокумент_Ответственный,
	ПлановыеУдержанияРаботниковОрганизаций.Регистратор.Комментарий КАК ПервичныйДокумент_Комментарий,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель1,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта1,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель2,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта2,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель3,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта3,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель4,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта4,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель5,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта5,
	ПлановыеУдержанияРаботниковОрганизаций.Показатель6,
	ПлановыеУдержанияРаботниковОрганизаций.Валюта6
ИЗ
	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
			РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
			РаботникиОрганизаций.Организация КАК Организация,
			ПлановыеУдержанияРаботниковОрганизаций.Период КАК Период,
			МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодСреза
		ИЗ
			РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержанияРаботниковОрганизаций
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
				ПО ПлановыеУдержанияРаботниковОрганизаций.Сотрудник = РаботникиОрганизаций.Сотрудник
					И ПлановыеУдержанияРаботниковОрганизаций.Организация = РаботникиОрганизаций.Организация
					И ПлановыеУдержанияРаботниковОрганизаций.Период &gt;= РаботникиОрганизаций.Период
					И (ПлановыеУдержанияРаботниковОрганизаций.Сотрудник В
						(ВЫБРАТЬ РАЗЛИЧНЫЕ
							Сотрудники.Сотрудник
						ИЗ
							ВТСотрудники КАК Сотрудники))
					И (РаботникиОрганизаций.Сотрудник.ВидЗанятости &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		
		СГРУППИРОВАТЬ ПО
			РаботникиОрганизаций.Сотрудник.Физлицо,
			РаботникиОрганизаций.Организация,
			ПлановыеУдержанияРаботниковОрганизаций.Период,
			РаботникиОрганизаций.Сотрудник) КАК РаботникиОрганизацийСрезПоследних
			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			ПО РаботникиОрганизацийСрезПоследних.Сотрудник = РаботникиОрганизаций.Сотрудник
				И РаботникиОрганизацийСрезПоследних.Организация = РаботникиОрганизаций.Организация
				И РаботникиОрганизацийСрезПоследних.ПериодСреза = РаботникиОрганизаций.Период
				И (РаботникиОрганизаций.Сотрудник.ВидЗанятости &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
		ПО ПлановыеУдержанияРаботниковОрганизаций.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
			И ПлановыеУдержанияРаботниковОрганизаций.Организация = РаботникиОрганизацийСрезПоследних.Организация
			И ПлановыеУдержанияРаботниковОрганизаций.Период = РаботникиОрганизацийСрезПоследних.Период
			И (ПлановыеУдержанияРаботниковОрганизаций.Сотрудник В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					Сотрудники.Сотрудник
				ИЗ
					ВТСотрудники КАК Сотрудники))

УПОРЯДОЧИТЬ ПО
	ФизЛицо,
	Организация,
	Период</Текст>
		</Запрос>
		<Запрос Имя="ПогашениеЗаймовРаботникамиОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПогашениеЗаймовРаботникамиОрганизаций.Период,
	ПогашениеЗаймовРаботникамиОрганизаций.Организация,
	ПогашениеЗаймовРаботникамиОрганизаций.Сотрудник,
	ПогашениеЗаймовРаботникамиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг,
	ПогашениеЗаймовРаботникамиОрганизаций.Проценты,
	ВЫБОР
		КОГДА ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
			ТОГДА 1
		ИНАЧЕ 0
	КОНЕЦ КАК УдержаноИзЗарплаты,
	ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма,
	ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ) КАК ПериодОтбор,
	ПогашениеЗаймовРаботникамиОрганизаций.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
ГДЕ
	ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ДоговорыЗайма.ДоговорЗайма
			ИЗ
				ВТДоговорыЗайма КАК ДоговорыЗайма)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ПогашениеЗаймовРаботникамиОрганизацийАванс_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ПогашениеЗаймовРаботникамиОрганизаций.Ссылка.ПериодРегистрации КАК Период,
	ПогашениеЗаймовРаботникамиОрганизаций.Ссылка.Организация КАК Организация,
	ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо КАК ФизЛицо,
	ПогашениеЗаймовРаботникамиОрганизаций.ПогашеноЗайма КАК ОсновнойДолг,
	ПогашениеЗаймовРаботникамиОрганизаций.ПогашеноПроцентов КАК Проценты,
	ИСТИНА КАК УдержаноИзЗарплаты,
	ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма,
	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	NULL КАК СтатьяФинансирования,
	NULL КАК КОСГУ,
	НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	ПогашениеЗаймовРаботникамиОрганизаций.Ссылка.Организация КАК ОрганизацияОтбор
ИЗ
	Документ.НачислениеЗарплатыРаботникамОрганизаций.ПогашениеЗаймов КАК ПогашениеЗаймовРаботникамиОрганизаций
ГДЕ
	ПогашениеЗаймовРаботникамиОрганизаций.ДоговорЗайма В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ДоговорыЗайма.ДоговорЗайма
			ИЗ
				ВТДоговорыЗайма КАК ДоговорыЗайма)
	И ПогашениеЗаймовРаботникамиОрганизаций.Ссылка.ПериодНачисления = ЗНАЧЕНИЕ(Перечисление.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца)
	И ПогашениеЗаймовРаботникамиОрганизаций.Ссылка.Проведен

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ПоказателиНачисленийУдержаний_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	ОсновныеНачисленияОрганизацийПоказатели.Показатель
ПОМЕСТИТЬ ВТПоказателиНачисленийУдержаний
ИЗ
	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
ГДЕ
	ОсновныеНачисленияОрганизацийПоказатели.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				НачисленияУдержания.ВидРасчета
			ИЗ
				ВТНачисленияУдержания КАК НачисленияУдержания)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ОсновныеНачисленияОрганизацийПоказатели.Показатель
ИЗ
	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
ГДЕ
	ОсновныеНачисленияОрганизацийПоказатели.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				НачисленияУдержания.ВидРасчета
			ИЗ
				ВТНачисленияУдержания КАК НачисленияУдержания)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ОсновныеНачисленияОрганизацийПоказатели.Показатель
ИЗ
	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
ГДЕ
	ОсновныеНачисленияОрганизацийПоказатели.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				НачисленияУдержания.ВидРасчета
			ИЗ
				ВТНачисленияУдержания КАК НачисленияУдержания)</Текст>
		</Запрос>
		<Запрос Имя="ПрофессииФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаПрофессии.Ссылка КАК Физлицо,
	ФизическиеЛицаПрофессии.НомерСтроки КАК НомерСтроки,
	ФизическиеЛицаПрофессии.Профессия
ИЗ
	Справочник.ФизическиеЛица.Профессии КАК ФизическиеЛицаПрофессии
ГДЕ
	ФизическиеЛицаПрофессии.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо,
	НомерСтроки</Текст>
		</Запрос>
		<Запрос Имя="РаботникиОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	РаботникиОрганизаций.Период КАК Период,
	РаботникиОрганизаций.ПричинаИзмененияСостояния,
	РаботникиОрганизаций.ПринятНаНовоеРабочееМесто,
	РаботникиОрганизаций.Организация,
	РаботникиОрганизаций.ОбособленноеПодразделение,
	РаботникиОрганизаций.ПодразделениеОрганизации,
	РаботникиОрганизаций.Должность,
	РаботникиОрганизаций.ГрафикРаботы,
	РаботникиОрганизаций.ЗанимаемыхСтавок,
	РаботникиОрганизаций.Сотрудник.ИспытательныйСрок КАК ИспытательныйСрок,
	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	РаботникиОрганизаций.Сотрудник.Физлицо КАК Сотрудник_Физлицо,
	РаботникиОрганизаций.Сотрудник.ВидЗанятости КАК Сотрудник_ВидЗанятости,
	РаботникиОрганизаций.Сотрудник.ВидДоговора КАК Сотрудник_ВидДоговора,
	ЕСТЬNULL(АвансыРаботникамОрганизаций.СуммаАванса, 0) КАК Сотрудник_Аванс,
	ВЫБОР
		КОГДА АвансыРаботникамОрганизаций.СуммаАванса ЕСТЬ NULL 
				ИЛИ АвансыРаботникамОрганизаций.СуммаАванса = 0
			ТОГДА "РасчетомЗаПервуюПоловинуМесяца"
		ИНАЧЕ "ФиксированнойСуммой"
	КОНЕЦ КАК Сотрудник_СпособРасчетаАванса,
	РаботникиОрганизаций.Сотрудник.ДатаДоговора КАК Сотрудник_ДатаДоговора,
	РаботникиОрганизаций.Сотрудник.НомерДоговора КАК Сотрудник_НомерДоговора,
	УвольнениеИзОрганизацийРаботникиОрганизации.РеквизитыДокументаОснования КАК ПервичныйДокумент_ОснованиеУвольнения,
	РаботникиОрганизаций.Регистратор КАК ПервичныйДокумент,
	РаботникиОрганизаций.Регистратор.Дата КАК ПервичныйДокумент_Дата,
	РаботникиОрганизаций.Регистратор.Номер КАК ПервичныйДокумент_Номер,
	РаботникиОрганизаций.Регистратор.Ответственный КАК ПервичныйДокумент_Ответственный,
	РаботникиОрганизаций.Регистратор.Комментарий КАК ПервичныйДокумент_Комментарий
ИЗ
	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АвансыРаботникамОрганизаций КАК АвансыРаботникамОрганизаций
		ПО РаботникиОрганизаций.Сотрудник = АвансыРаботникамОрганизаций.Сотрудник
			И РаботникиОрганизаций.ОбособленноеПодразделение = АвансыРаботникамОрганизаций.Организация
		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УвольнениеИзОрганизаций.РаботникиОрганизации КАК УвольнениеИзОрганизацийРаботникиОрганизации
		ПО РаботникиОрганизаций.Сотрудник = УвольнениеИзОрганизацийРаботникиОрганизации.Сотрудник
			И (ДОБАВИТЬКДАТЕ(РаботникиОрганизаций.Период, ДЕНЬ, -1) = УвольнениеИзОрганизацийРаботникиОрганизации.ДатаУвольнения)
			И (УвольнениеИзОрганизацийРаботникиОрганизации.Ссылка.Проведен)
ГДЕ
	РаботникиОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И РаботникиОрганизаций.Должность &lt;&gt; ЗНАЧЕНИЕ(Справочник.ДолжностиОрганизаций.ПустаяСсылка)
	И РаботникиОрганизаций.ПодразделениеОрганизации &lt;&gt; ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)

УПОРЯДОЧИТЬ ПО
	Сотрудник_Физлицо,
	Сотрудник,
	Период</Текст>
		</Запрос>
		<Запрос Имя="РабочееВремяСотрудников_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	РабочееВремяРаботниковОрганизаций.Организация КАК Организация,
	НАЧАЛОПЕРИОДА(РабочееВремяРаботниковОрганизаций.Период, МЕСЯЦ) КАК ПериодРегистрации,
	РабочееВремяРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	РабочееВремяРаботниковОрганизаций.Период КАК Период,
	РабочееВремяРаботниковОрганизаций.ВидИспользованияРабочегоВремени,
	РабочееВремяРаботниковОрганизаций.Дней,
	РабочееВремяРаботниковОрганизаций.Часов,
	РабочееВремяРаботниковОрганизаций.ВЦеломЗаПериод
ИЗ
	РегистрНакопления.РабочееВремяРаботниковОрганизаций КАК РабочееВремяРаботниковОрганизаций
ГДЕ
	НАЧАЛОПЕРИОДА(РабочееВремяРаботниковОрганизаций.Период, МЕСЯЦ) &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	И (&amp;ПоВсемСотрудникам
			ИЛИ РабочееВремяРаботниковОрганизаций.Сотрудник = &amp;Сотрудник)
	И (&amp;ПоВсемФизическимЛицам
			ИЛИ РабочееВремяРаботниковОрганизаций.Сотрудник.Физлицо = &amp;ФизическоеЛицо)

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	Сотрудник,
	Период
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="РазовыеПоказателиОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗначенияПоказателейСхемМотивации.Организация КАК Организация,
	НАЧАЛОПЕРИОДА(ЗначенияПоказателейСхемМотивации.ПериодДействия, МЕСЯЦ) КАК ПериодРегистрации,
	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	ЗначенияПоказателейСхемМотивации.ПериодДействия КАК ПериодДействия,
	ЗначенияПоказателейСхемМотивации.Значение,
	ЗначенияПоказателейСхемМотивации.Валюта
ИЗ
	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоказателиНачисленийУдержаний КАК ПоказателиНачисленийУдержаний
		ПО ЗначенияПоказателейСхемМотивации.Показатель = ПоказателиНачисленийУдержаний.Показатель
ГДЕ
	ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Общий)
	И НЕ ЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	Показатель,
	ПериодДействия
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="РазовыеПоказателиПодразделений_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗначенияПоказателейСхемМотивации.Подразделение.Владелец КАК Организация,
	НАЧАЛОПЕРИОДА(ЗначенияПоказателейСхемМотивации.ПериодДействия, МЕСЯЦ) КАК ПериодРегистрации,
	ЗначенияПоказателейСхемМотивации.Подразделение КАК Подразделение,
	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	ЗначенияПоказателейСхемМотивации.ПериодДействия КАК ПериодДействия,
	ЗначенияПоказателейСхемМотивации.Значение,
	ЗначенияПоказателейСхемМотивации.Валюта
ИЗ
	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоказателиНачисленийУдержаний КАК ПоказателиНачисленийУдержаний
		ПО ЗначенияПоказателейСхемМотивации.Показатель = ПоказателиНачисленийУдержаний.Показатель
ГДЕ
	ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	И НЕ ЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	И ЗначенияПоказателейСхемМотивации.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций
	И НЕ ЗначенияПоказателейСхемМотивации.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	Подразделение,
	Показатель,
	ПериодДействия
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="РазовыеПоказателиСотрудников_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЗначенияПоказателейСхемМотивации.Организация КАК Организация,
	НАЧАЛОПЕРИОДА(ЗначенияПоказателейСхемМотивации.ПериодДействия, МЕСЯЦ) КАК ПериодРегистрации,
	ЗначенияПоказателейСхемМотивации.Сотрудник КАК Сотрудник,
	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	ЗначенияПоказателейСхемМотивации.ПериодДействия КАК ПериодДействия,
	ЗначенияПоказателейСхемМотивации.Значение,
	ЗначенияПоказателейСхемМотивации.Валюта
ИЗ
	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоказателиНачисленийУдержаний КАК ПоказателиНачисленийУдержаний
		ПО ЗначенияПоказателейСхемМотивации.Показатель = ПоказателиНачисленийУдержаний.Показатель
ГДЕ
	ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	И ЗначенияПоказателейСхемМотивации.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ЗначенияПоказателейСхемМотивации.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)
	И НЕ ЗначенияПоказателейСхемМотивации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	И ЗначенияПоказателейСхемМотивации.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	Сотрудник,
	Показатель,
	ПериодДействия
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="СведенияОбИнвалидностиФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СведенияОбИнвалидностиФизлиц.*
ИЗ
	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
ГДЕ
	СведенияОбИнвалидностиФизлиц.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
		<Запрос Имя="СведенияОЗаймах_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ДоговорЗайма.*
ИЗ
	Документ.ДоговорЗаймаСРаботником КАК ДоговорЗайма
ГДЕ
	ДоговорЗайма.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ДоговорыЗайма.ДоговорЗайма
			ИЗ
				ВТДоговорыЗайма КАК ДоговорыЗайма)</Текст>
		</Запрос>
		<Запрос Имя="СведенияОСтажеРаботыНаСевере_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СведенияОСтажеРаботыНаСевере.Период КАК Период,
	СведенияОСтажеРаботыНаСевере.ФизЛицо КАК ФизическоеЛицо,
	СведенияОСтажеРаботыНаСевере.ПорядокНачисленияСеверныхНадбавок,
	СведенияОСтажеРаботыНаСевере.НачальныйПроцентСевернойНадбавки,
	СведенияОСтажеРаботыНаСевере.СеверныйСтажМесяцев,
	СведенияОСтажеРаботыНаСевере.СеверныйСтажДней
ИЗ
	РегистрСведений.СведенияОСтажеРаботыНаСевере КАК СведенияОСтажеРаботыНаСевере
ГДЕ
	СведенияОСтажеРаботыНаСевере.Физлицо В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					ФизическиеЛица.Физлицо
				ИЗ
					ВТФизическиеЛица КАК ФизическиеЛица)
УПОРЯДОЧИТЬ ПО
	ФизическоеЛицо,
	Период</Текст>
		</Запрос>
		<Запрос Имя="СведенияОСтажеРаботыНаСевере_СрезПоследних" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СведенияОСтажеРаботыНаСевереСрезПоследних.Период КАК Период,
	СведенияОСтажеРаботыНаСевереСрезПоследних.ФизЛицо КАК ФизическоеЛицо,
	1 КАК ПроцентСевернойНадбавкиИзменяется,
	0 КАК ПроцентСевернойНадбавки,	
	СведенияОСтажеРаботыНаСевереСрезПоследних.ПорядокНачисленияСеверныхНадбавок КАК ПорядокИсчисленияПроцентаСевернойНадбавки,
	СведенияОСтажеРаботыНаСевереСрезПоследних.НачальныйПроцентСевернойНадбавки,
	СведенияОСтажеРаботыНаСевереСрезПоследних.СеверныйСтажМесяцев,
	СведенияОСтажеРаботыНаСевереСрезПоследних.СеверныйСтажДней
ИЗ
	РегистрСведений.СведенияОСтажеРаботыНаСевере.СрезПоследних(
			&amp;ДатаСреза,
			ФизЛицо В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					ФизическиеЛица.Физлицо
				ИЗ
					ВТФизическиеЛица КАК ФизическиеЛица)) КАК СведенияОСтажеРаботыНаСевереСрезПоследних
УПОРЯДОЧИТЬ ПО
	ФизЛицо</Текст>
		</Запрос>
		<Запрос Имя="СостояниеРаботниковОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	ЗаписиОтклонений.Сотрудник КАК Сотрудник,
	ЗаписиОтклонений.Период КАК Период,
	ВЫБОР
		КОГДА ЗаписиОтклонений.ПериодЗавершения &lt;&gt; ДАТАВРЕМЯ(1, 1, 1)
				И (ЗаписиОтклоненийЗавершения.Период ЕСТЬ NULL 
					ИЛИ ЗаписиОтклоненийЗавершения.Период &gt; ЗаписиОтклонений.ПериодЗавершения)
			ТОГДА ЗаписиОтклонений.ПериодЗавершения
		КОГДА ЕСТЬNULL(ЗаписиОтклоненийЗавершения.Период, ДАТАВРЕМЯ(1, 1, 1)) &lt;&gt; ДАТАВРЕМЯ(1, 1, 1)
			ТОГДА ДОБАВИТЬКДАТЕ(ЗаписиОтклоненийЗавершения.Период, ДЕНЬ, -1)
		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	КОНЕЦ КАК ПериодЗавершения,
	ЗаписиОтклонений.Состояние КАК Состояние,
	ЗаписиОтклонений.Регистратор КАК Регистратор,
	ЗаписиОтклонений.Регистратор.Дата КАК Регистратор_Дата,
	ЗаписиОтклонений.Организация КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(ЗаписиОтклонений.Период, МЕСЯЦ) КАК ПериодОтбор
ИЗ
	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		СостояниеРаботниковОрганизаций.Сотрудник КАК Сотрудник,
		СостояниеРаботниковОрганизаций.Период КАК Период,
		СостояниеРаботниковОрганизаций.Состояние КАК Состояние,
		СостояниеРаботниковОрганизаций.ПериодЗавершения КАК ПериодЗавершения,
		СостояниеРаботниковОрганизаций.СостояниеЗавершения КАК СостояниеЗавершения,
		СостояниеРаботниковОрганизаций.Регистратор КАК Регистратор,
		СостояниеРаботниковОрганизаций.Организация КАК Организация
	ИЗ
		РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
	ГДЕ
		СостояниеРаботниковОрганизаций.Сотрудник В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					Сотрудники.Сотрудник
				ИЗ
					ВТСотрудники КАК Сотрудники)
		И СостояниеРаботниковОрганизаций.Сотрудник.Физлицо В
				(ВЫБРАТЬ РАЗЛИЧНЫЕ
					ФизическиеЛица.Физлицо
				ИЗ
					ВТФизическиеЛица КАК ФизическиеЛица)) КАК ЗаписиОтклонений
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			ЗаписиОтклонений.Сотрудник КАК Сотрудник,
			ЗаписиОтклонений.ПериодНачала КАК ПериодНачала,
			СостояниеРаботниковОрганизацийЗавершения.Период КАК Период,
			СостояниеРаботниковОрганизацийЗавершения.Состояние КАК Состояние
		ИЗ
			(ВЫБРАТЬ
				СостояниеРаботниковОрганизаций.Сотрудник КАК Сотрудник,
				СостояниеРаботниковОрганизаций.Период КАК ПериодНачала,
				МИНИМУМ(СостояниеРаботниковОрганизацийЗавершения.Период) КАК ДатаСреза
			ИЗ
				РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизацийЗавершения
					ПО СостояниеРаботниковОрганизаций.Сотрудник = СостояниеРаботниковОрганизацийЗавершения.Сотрудник
						И СостояниеРаботниковОрганизаций.Период &lt; СостояниеРаботниковОрганизацийЗавершения.Период
						И (СостояниеРаботниковОрганизаций.Сотрудник В
							(ВЫБРАТЬ РАЗЛИЧНЫЕ
								Сотрудники.Сотрудник
							ИЗ
								ВТСотрудники КАК Сотрудники))
						И (СостояниеРаботниковОрганизаций.Сотрудник.Физлицо В
							(ВЫБРАТЬ РАЗЛИЧНЫЕ
								ФизическиеЛица.Физлицо
							ИЗ
								ВТФизическиеЛица КАК ФизическиеЛица))
			
			СГРУППИРОВАТЬ ПО
				СостояниеРаботниковОрганизаций.Сотрудник,
				СостояниеРаботниковОрганизаций.Период) КАК ЗаписиОтклонений
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизацийЗавершения
				ПО ЗаписиОтклонений.Сотрудник = СостояниеРаботниковОрганизацийЗавершения.Сотрудник
					И ЗаписиОтклонений.ДатаСреза = СостояниеРаботниковОрганизацийЗавершения.Период) КАК ЗаписиОтклоненийЗавершения
		ПО ЗаписиОтклонений.Сотрудник = ЗаписиОтклоненийЗавершения.Сотрудник
			И ЗаписиОтклонений.Период &lt; ЗаписиОтклоненийЗавершения.Период
			И ЗаписиОтклонений.Период = ЗаписиОтклоненийЗавершения.ПериодНачала

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Сотрудник,
	Период,
	Регистратор_Дата
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="СостояниеРаботниковОтпускПоУходуЗаРебенком_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СостояниеРаботниковОрганизаций.Период,
	СостояниеРаботниковОрганизаций.Регистратор,
	СостояниеРаботниковОрганизаций.Состояние,
	СостояниеРаботниковОрганизаций.ПериодЗавершения,
	СостояниеРаботниковОрганизаций.СостояниеЗавершения,
	СостояниеРаботниковОрганизаций.Сотрудник,
	СостояниеРаботниковОрганизаций.Организация
ИЗ
	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
ГДЕ
	СостояниеРаботниковОрганизаций.Регистратор ССЫЛКА Документ.ОтпускПоУходуЗаРебенком
	И (СостояниеРаботниковОрганизаций.Сотрудник В
						(ВЫБРАТЬ РАЗЛИЧНЫЕ
							Сотрудники.Сотрудник
						ИЗ
							ВТСотрудники КАК Сотрудники))</Текст>
		</Запрос>
		<Запрос Имя="Сотрудники_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник
ПОМЕСТИТЬ ВТСотрудники
ИЗ
	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			&amp;ДатаНачалаПереносаРасчетныхДанных,
			(&amp;ПоВсемСотрудникам
				ИЛИ Сотрудник = &amp;Сотрудник)
				И Сотрудник.ФизЛицо В
					(ВЫБРАТЬ РАЗЛИЧНЫЕ
						ФизическиеЛица.Физлицо
					ИЗ
						ВТФизическиеЛица КАК ФизическиеЛица)) КАК РаботникиОрганизацийСрезПоследних
ГДЕ
	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	РаботникиОрганизаций.Сотрудник
ИЗ
	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
ГДЕ
	РаботникиОрганизаций.Период &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	И (&amp;ПоВсемСотрудникам
			ИЛИ РаботникиОрганизаций.Сотрудник = &amp;Сотрудник)
	И РаботникиОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
ИЗ
	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
ГДЕ
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
	И (&amp;ПоВсемСотрудникам
			ИЛИ ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = &amp;Сотрудник)
	И ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ПлановыеНачисленияРаботниковОрганизаций.Период &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных

ИНДЕКСИРОВАТЬ ПО
	Сотрудник</Текст>
		</Запрос>
		<Запрос Имя="Сотрудники_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	Сотрудники.*
ИЗ
	Справочник.СотрудникиОрганизаций КАК Сотрудники
ГДЕ
	Сотрудники.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)</Текст>
		</Запрос>
		<Запрос Имя="СотрудникиФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	РаботникиОрганизацийСрезПоследних.Сотрудник,
	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости,
	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
ПОМЕСТИТЬ ВТРаботникиОсновноеМесто
ИЗ
	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			&amp;ДатаНачалаПереносаРасчетныхДанных,
			сотрудник.физлицо В (&amp;МассивФизическихЛиц)
				И Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОрганизацийСрезПоследних
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	СписокСотрудников.Сотрудник КАК Сотрудник,
	СписокСотрудников.Сотрудник.ПодразделениеОрганизации КАК Подразделение,
	СписокСотрудников.Физлицо КАК ФизическоеЛицо
ИЗ
	(ВЫБРАТЬ
		МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		1 КАК Приоритет
	ИЗ
		ВТРаботникиОсновноеМесто КАК РаботникиОсновноеМесто
	ГДЕ
		РаботникиОсновноеМесто.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		И РаботникиОсновноеМесто.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
		И РаботникиОсновноеМесто.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		И РаботникиОсновноеМесто.Сотрудник.Актуальность
	
	СГРУППИРОВАТЬ ПО
		РаботникиОсновноеМесто.Сотрудник.Физлицо
	
	ОБЪЕДИНИТЬ
	
	ВЫБРАТЬ
		МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		РаботникиСовместительство.Сотрудник.Физлицо,
		2
	ИЗ
		ВТРаботникиОсновноеМесто КАК РаботникиСовместительство
	ГДЕ
		РаботникиСовместительство.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		И РаботникиСовместительство.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		И РаботникиСовместительство.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		И РаботникиСовместительство.Сотрудник.Актуальность
	
	СГРУППИРОВАТЬ ПО
		РаботникиСовместительство.Сотрудник.Физлицо
	
	ОБЪЕДИНИТЬ
	
	ВЫБРАТЬ
		МАКСИМУМ(СотрудникиДУ.Ссылка),
		СотрудникиДУ.Физлицо,
		3
	ИЗ
		Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
	ГДЕ
		СотрудникиДУ.Актуальность
		И СотрудникиДУ.Физлицо В(&amp;МассивФизическихЛиц)
	
	СГРУППИРОВАТЬ ПО
		СотрудникиДУ.Физлицо
	
	ОБЪЕДИНИТЬ
	
	ВЫБРАТЬ
		МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник),
		РаботникиОсновноеМесто.Сотрудник.Физлицо,
		4
	ИЗ
		ВТРаботникиОсновноеМесто КАК РаботникиОсновноеМесто
	ГДЕ
		РаботникиОсновноеМесто.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		И РаботникиОсновноеМесто.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
		И РаботникиОсновноеМесто.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		И НЕ РаботникиОсновноеМесто.Сотрудник.Актуальность
	
	СГРУППИРОВАТЬ ПО
		РаботникиОсновноеМесто.Сотрудник.Физлицо
	
	ОБЪЕДИНИТЬ
	
	ВЫБРАТЬ
		МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		РаботникиСовместительство.Сотрудник.Физлицо,
		5
	ИЗ
		ВТРаботникиОсновноеМесто КАК РаботникиСовместительство
	ГДЕ
		РаботникиСовместительство.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		И РаботникиСовместительство.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		И РаботникиСовместительство.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		И НЕ РаботникиСовместительство.Сотрудник.Актуальность
	
	СГРУППИРОВАТЬ ПО
		РаботникиСовместительство.Сотрудник.Физлицо
	
	ОБЪЕДИНИТЬ
	
	ВЫБРАТЬ
		МАКСИМУМ(СотрудникиДУ.Ссылка),
		СотрудникиДУ.Физлицо,
		6
	ИЗ
		Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
	ГДЕ
		НЕ СотрудникиДУ.Актуальность
		И СотрудникиДУ.Физлицо В(&amp;МассивФизическихЛиц)
	
	СГРУППИРОВАТЬ ПО
		СотрудникиДУ.Физлицо) КАК СписокСотрудников
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			СписокФизическихЛиц.Физлицо КАК Физлицо,
			МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		ИЗ
			(ВЫБРАТЬ
				РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
				1 КАК Приоритет
			ИЗ
				ВТРаботникиОсновноеМесто КАК РаботникиОсновноеМесто
			ГДЕ
				РаботникиОсновноеМесто.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				И РаботникиОсновноеМесто.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
				И РаботникиОсновноеМесто.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				И РаботникиОсновноеМесто.Сотрудник.Актуальность
			
			ОБЪЕДИНИТЬ
			
			ВЫБРАТЬ
				РаботникиСовместительство.Сотрудник.Физлицо,
				2
			ИЗ
				ВТРаботникиОсновноеМесто КАК РаботникиСовместительство
			ГДЕ
				РаботникиСовместительство.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				И РаботникиСовместительство.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
				И РаботникиСовместительство.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				И РаботникиСовместительство.Сотрудник.Актуальность
			
			ОБЪЕДИНИТЬ
			
			ВЫБРАТЬ
				СотрудникиДУ.Физлицо,
				3
			ИЗ
				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
			ГДЕ
				СотрудникиДУ.Актуальность
				И СотрудникиДУ.Физлицо В(&amp;МассивФизическихЛиц)
			
			ОБЪЕДИНИТЬ
			
			ВЫБРАТЬ
				РаботникиОсновноеМесто.Сотрудник.Физлицо,
				4
			ИЗ
				ВТРаботникиОсновноеМесто КАК РаботникиОсновноеМесто
			ГДЕ
				РаботникиОсновноеМесто.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				И РаботникиОсновноеМесто.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
				И РаботникиОсновноеМесто.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				И НЕ РаботникиОсновноеМесто.Сотрудник.Актуальность
			
			ОБЪЕДИНИТЬ
			
			ВЫБРАТЬ
				РаботникиСовместительство.Сотрудник.Физлицо,
				5
			ИЗ
				ВТРаботникиОсновноеМесто КАК РаботникиСовместительство
			ГДЕ
				РаботникиСовместительство.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
				И РаботникиСовместительство.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
				И РаботникиСовместительство.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
				И НЕ РаботникиСовместительство.Сотрудник.Актуальность
			
			ОБЪЕДИНИТЬ
			
			ВЫБРАТЬ
				СотрудникиДУ.Физлицо,
				6
			ИЗ
				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
			ГДЕ
				НЕ СотрудникиДУ.Актуальность
				И СотрудникиДУ.Физлицо В(&amp;МассивФизическихЛиц)) КАК СписокФизическихЛиц
		
		СГРУППИРОВАТЬ ПО
			СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
			И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет</Текст>
		</Запрос>
		<Запрос Имя="СтавкаВзносаНаСтрахованиеОтНС_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	&amp;ДатаСреза КАК Период,
	*
ИЗ
	РегистрСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.СрезПоследних(&amp;ДатаСреза, ) КАК СтавкаВзноса

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	СтавкаВзноса.Период,
	*
ИЗ
	РегистрСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев КАК СтавкаВзноса
ГДЕ
	СтавкаВзноса.Период &gt; &amp;ДатаСреза</Текст>
		</Запрос>
		<Запрос Имя="СтажиФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаСтажи.Ссылка КАК ФизЛицо,
	ФизическиеЛицаСтажи.НомерСтроки КАК НомерСтроки,
	ФизическиеЛицаСтажи.ВидСтажа КАК ВидСтажа,
	ФизическиеЛицаСтажи.ДатаОтсчета КАК ДатаОтсчета,
	ФизическиеЛицаСтажи.РазмерМесяцев КАК РазмерМесяцев,
	ФизическиеЛицаСтажи.РазмерДней КАК РазмерДней
ИЗ
	Справочник.ФизическиеЛица.Стажи КАК ФизическиеЛицаСтажи
ГДЕ
	ФизическиеЛицаСтажи.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	СведенияОСтажеРаботыНаСевереСрезПоследних.ФизЛицо,
	NULL,
	"Стаж работы на Севере",
	СведенияОСтажеРаботыНаСевереСрезПоследних.Период,
	СведенияОСтажеРаботыНаСевереСрезПоследних.СеверныйСтажМесяцев,
	СведенияОСтажеРаботыНаСевереСрезПоследних.СеверныйСтажДней
ИЗ
	РегистрСведений.СведенияОСтажеРаботыНаСевере.СрезПоследних КАК СведенияОСтажеРаботыНаСевереСрезПоследних
ГДЕ
	СведенияОСтажеРаботыНаСевереСрезПоследних.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	ФизЛицо,
	НомерСтроки</Текст>
		</Запрос>
		<Запрос Имя="СтатусНДФЛФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СтатусФизЛицКакНалогоплательщиковНДФЛ.*
ИЗ
	РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
ГДЕ
	СтатусФизЛицКакНалогоплательщиковНДФЛ.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
		<Запрос Имя="СтраховыеВзносыРасчеты_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	РасчетыПоСтраховымВзносам.Период,
	РасчетыПоСтраховымВзносам.ВидДвижения,
	РасчетыПоСтраховымВзносам.Организация,
	РасчетыПоСтраховымВзносам.Сотрудник.Физлицо КАК ФизическоеЛицо,
	РасчетыПоСтраховымВзносам.ПериодВзаиморасчетов,
	РасчетыПоСтраховымВзносам.Налог,
	РасчетыПоСтраховымВзносам.Результат КАК Сумма,
	РасчетыПоСтраховымВзносам.Организация КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносам.Период, МЕСЯЦ) КАК ПериодОтбор
ИЗ
	РегистрНакопления.ВзаиморасчетыПоВзносамВФонды КАК РасчетыПоСтраховымВзносам
ГДЕ
	НАЧАЛОПЕРИОДА(РасчетыПоСтраховымВзносам.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="СтраховыеВзносыСведенияОДоходах_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СтраховыеВзносыСведенияОДоходах.Период,
	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	СтраховыеВзносыСведенияОДоходах.Организация,
	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомФармацевта,
	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	СУММА(СтраховыеВзносыСведенияОДоходах.Результат) КАК Результат,
	СУММА(СтраховыеВзносыСведенияОДоходах.Скидка) КАК Скидка,
	СтраховыеВзносыСведенияОДоходах.ВидРасчета КАК ВидРасчета,
	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодОтбор,
	СтраховыеВзносыСведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
	СтраховыеВзносыСведенияОДоходах.КлассУсловийТруда,
	СтраховыеВзносыСведенияОДоходах.ПоАктуПроверки
ИЗ
	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
ГДЕ
	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

СГРУППИРОВАТЬ ПО
	СтраховыеВзносыСведенияОДоходах.ДатаПолученияДохода,
	СтраховыеВзносыСведенияОДоходах.КлассУсловийТруда,
	СтраховыеВзносыСведенияОДоходах.ПоАктуПроверки,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуКПенсииШахтерам,
	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомФармацевта,
	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	СтраховыеВзносыСведенияОДоходах.ВидРасчета,
	СтраховыеВзносыСведенияОДоходах.Период,
	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
	СтраховыеВзносыСведенияОДоходах.Организация,
	СтраховыеВзносыСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу,
	СтраховыеВзносыСведенияОДоходах.ВидДохода,
	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ),
	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ТрудоваяДеятельностьФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаТрудоваяДеятельность.Ссылка КАК Физлицо,
	ФизическиеЛицаТрудоваяДеятельность.НомерСтроки КАК НомерСтроки,
	ФизическиеЛицаТрудоваяДеятельность.ДатаНачала,
	ФизическиеЛицаТрудоваяДеятельность.ДатаОкончания,
	ФизическиеЛицаТрудоваяДеятельность.Организация,
	ФизическиеЛицаТрудоваяДеятельность.Должность
ИЗ
	Справочник.ФизическиеЛица.ТрудоваяДеятельность КАК ФизическиеЛицаТрудоваяДеятельность
ГДЕ
	ФизическиеЛицаТрудоваяДеятельность.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо,
	НомерСтроки</Текст>
		</Запрос>
		<Запрос Имя="УдержанияРаботниковОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	УдержанияРаботниковОрганизаций.ПериодРегистрации,
	УдержанияРаботниковОрганизаций.Организация,
	УдержанияРаботниковОрганизаций.Сотрудник,
	УдержанияРаботниковОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	УдержанияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	УдержанияРаботниковОрганизаций.Показатель1,
	УдержанияРаботниковОрганизаций.Показатель2,
	УдержанияРаботниковОрганизаций.Показатель3,
	УдержанияРаботниковОрганизаций.Показатель4,
	УдержанияРаботниковОрганизаций.Показатель5,
	УдержанияРаботниковОрганизаций.Показатель6,
	УдержанияРаботниковОрганизаций.Результат,
	УдержанияРаботниковОрганизаций.ПервичныйРезультат,
	УдержанияРаботниковОрганизаций.Сторно,
	УдержанияРаботниковОрганизаций.Авторасчет,
	УдержанияРаботниковОрганизаций.БазовыйПериодНачало,
	УдержанияРаботниковОрганизаций.БазовыйПериодКонец,
	УдержанияРаботниковОрганизаций.ДокументОснование,
	NULL КАК СтатьяФинансирования,
	NULL КАК СтатьяРасходов,
	НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	УдержанияРаботниковОрганизаций.Организация КАК ОрганизацияОтбор
ИЗ
	РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
ГДЕ
	УдержанияРаботниковОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="УдержанияРаботниковОрганизацийАвансом_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	УдержанияРаботниковОрганизаций.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	УдержанияРаботниковОрганизаций.Ссылка.Организация КАК Организация,
	УдержанияРаботниковОрганизаций.Ссылка.Организация КАК ОбособленноеПодразделение,
	УдержанияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
	УдержанияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	УдержанияРаботниковОрганизаций.Показатель1,
	УдержанияРаботниковОрганизаций.Показатель2,
	УдержанияРаботниковОрганизаций.Показатель3,
	УдержанияРаботниковОрганизаций.Результат,
	УдержанияРаботниковОрганизаций.ДатаНачалаСобытия,
	УдержанияРаботниковОрганизаций.Сторно,
	УдержанияРаботниковОрганизаций.Авторасчет,
	УдержанияРаботниковОрганизаций.ДокументОснование,
	УдержанияРаботниковОрганизаций.Получатель,
	NULL КАК СтатьяФинансирования,
	NULL КАК КОСГУ,
	НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодОтбор,
	УдержанияРаботниковОрганизаций.Ссылка.Организация КАК ОрганизацияОтбор
ИЗ
	Документ.НачислениеЗарплатыРаботникамОрганизаций.Удержания КАК УдержанияРаботниковОрганизаций
ГДЕ
	УдержанияРаботниковОрганизаций.ФизЛицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.Ссылка.ПериодРегистрации, МЕСЯЦ) = &amp;ДатаПереносаРасчетныхДанных
	И УдержанияРаботниковОрганизаций.Ссылка.ПериодНачисления = ЗНАЧЕНИЕ(Перечисление.ПериодНачисленияЗарплаты.ПерваяПоловинаТекущегоМесяца)
	И УдержанияРаботниковОрганизаций.Ссылка.Проведен

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	ФизЛицо,
	ВидРасчета
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="УсловияДоговораЗаймаСотруднику_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	СведенияОЗаймах.Организация КАК Организация,
	НАЧАЛОПЕРИОДА(СведенияОЗаймах.НачалоПогашения, МЕСЯЦ) КАК ПериодРегистрации,
	СведенияОЗаймах.ДоговорЗайма КАК ДоговорЗайма,
	СведенияОЗаймах.НачалоПогашения КАК Период,
	СведенияОЗаймах.СуммаЗайма * ВЫБОР
		КОГДА СведенияОЗаймах.КурсДокумента = 0
			ТОГДА 1
		ИНАЧЕ СведенияОЗаймах.КурсДокумента
	КОНЕЦ / ВЫБОР
		КОГДА СведенияОЗаймах.КратностьДокумента = 0
			ТОГДА 1
		ИНАЧЕ СведенияОЗаймах.КратностьДокумента
	КОНЕЦ КАК Сумма,
	ДОБАВИТЬКДАТЕ(СведенияОЗаймах.НачалоПогашения, МЕСЯЦ, СведенияОЗаймах.СрокПогашения) КАК ДатаОкончания,
	СведенияОЗаймах.ПроцентЗаПользованиеЗаймом КАК ПроцентнаяСтавка,
	СведенияОЗаймах.СуммаЗайма / ВЫБОР
		КОГДА СведенияОЗаймах.СрокПогашения = 0
			ТОГДА 1
		ИНАЧЕ СведенияОЗаймах.СрокПогашения
	КОНЕЦ КАК РазмерПогашения,
	СведенияОЗаймах.НачислятьМатериальнуюВыгоду КАК МатериальнаяВыгодаОблагаетсяНДФЛ
ИЗ
	РегистрСведений.СведенияОЗаймах КАК СведенияОЗаймах
ГДЕ
	(&amp;ПоВсемФизическимЛицам
			ИЛИ СведенияОЗаймах.ФизЛицо = &amp;ФизическоеЛицо)
	И СведенияОЗаймах.ОтражатьВБухгалтерскомУчете

УПОРЯДОЧИТЬ ПО
	Организация,
	ПериодРегистрации,
	ДоговорЗайма,
	Период
ИТОГИ ПО
	Организация,
	ПериодРегистрации</Текст>
		</Запрос>
		<Запрос Имя="УченыеЗванияФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаОбразование.Ссылка КАК ФизическоеЛицо,
	ФизическиеЛицаОбразование.НомерСтроки КАК НомерПоПорядку,
	ФизическиеЛицаОбразование.УченаяСтепень КАК УченоеЗвание
ИЗ
	Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
ГДЕ
	ФизическиеЛицаОбразование.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ФизическиеЛицаОбразование.УченаяСтепень &lt;&gt; ""

УПОРЯДОЧИТЬ ПО
	ФизическоеЛицо,
	НомерПоПорядку</Текст>
		</Запрос>
		<Запрос Имя="УченыеСтепениФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФизическиеЛицаОбразование.Ссылка КАК ФизическоеЛицо,
	ФизическиеЛицаОбразование.НомерСтроки КАК НомерПоПорядку,
	ФизическиеЛицаОбразование.УченаяСтепень КАК УченаяСтепень
ИЗ
	Справочник.ФизическиеЛица.Образование КАК ФизическиеЛицаОбразование
ГДЕ
	ФизическиеЛицаОбразование.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ФизическиеЛицаОбразование.УченаяСтепень &lt;&gt; ""

УПОРЯДОЧИТЬ ПО
	ФизическоеЛицо,
	НомерПоПорядку</Текст>
		</Запрос>
		<Запрос Имя="УчетнаяПолитикаОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	&amp;ДатаСреза КАК Период,
	УчетнаяПолитикаСрезПоследних.Организация,
	УчетнаяПолитикаСрезПоследних.ИНН КАК ИННПлательщикаНДС,
	УчетнаяПолитикаСрезПоследних.НомерСвидетельства КАК НомерСвидетельстваПлательщикаНДС,
	ВЫБОР
		КОГДА УчетнаяПолитикаСрезПоследних.ИНН &lt;&gt; ""
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК ПлательщикНДС
ИЗ
	РегистрСведений.КодыОрганизации.СрезПоследних(&amp;ДатаСреза, ) КАК УчетнаяПолитикаСрезПоследних

УПОРЯДОЧИТЬ ПО
	УчетнаяПолитикаСрезПоследних.Организация,
	Период

//ВЫБРАТЬ
//&amp;ДатаСреза КАК Период,
//	*
//ИЗ
//	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&amp;ДатаСреза, ) КАК УчетнаяПолитикаСрезПоследних

//ОБЪЕДИНИТЬ ВСЕ

//ВЫБРАТЬ
//	УчетнаяПолитикаОрганизаций.Период,
//	*
//ИЗ
//	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
//ГДЕ
//	УчетнаяПолитикаОрганизаций.Период &gt; &amp;ДатаСреза
//	
//УПОРЯДОЧИТЬ ПО
//Организация,
//Период</Текст>
		</Запрос>
		<Запрос Имя="УчетнаяПолитикаПоНДФЛ_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	&amp;ДатаСреза КАК Период,
	*
ИЗ
	РегистрСведений.УчетнаяПолитикаПоНДФЛ.СрезПоследних(&amp;ДатаСреза, ) КАК УчетнаяПолитикаПоНДФЛСрезПоследних

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	УчетнаяПолитикаПоНДФЛ.Период,
	*
ИЗ
	РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК УчетнаяПолитикаПоНДФЛ
ГДЕ
	УчетнаяПолитикаПоНДФЛ.Период &gt; &amp;ДатаСреза</Текст>
		</Запрос>
		<Запрос Имя="ФактическиеОтпускаОрганизаций_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФактическиеОтпускаОрганизаций.Сотрудник.Организация КАК ОрганизацияОтбор,
	НАЧАЛОПЕРИОДА(ФактическиеОтпускаОрганизаций.Период, МЕСЯЦ) КАК ПериодОтбор,
	ФактическиеОтпускаОрганизаций.Период КАК Период,
	ФактическиеОтпускаОрганизаций.Сотрудник КАК Сотрудник,
	ВЫБОР
		КОГДА ОсновнойОтпуск.ВидЕжегодногоОтпуска ЕСТЬ NULL 
			ТОГДА ФактическиеОтпускаОрганизаций.ВидОтпуска
		ИНАЧЕ "Основной"
	КОНЕЦ КАК ВидЕжегодногоОтпуска,
	ФактическиеОтпускаОрганизаций.ИспользованоОсновного КАК Количество,
	ФактическиеОтпускаОрганизаций.РабочийПериодНачало КАК РабочийПериодС,
	ФактическиеОтпускаОрганизаций.РабочийПериодОкончание КАК РабочийПериодПо,
	ФактическиеОтпускаОрганизаций.Регистратор.Дата КАК ДатаРегистрации
ИЗ
	РегистрНакопления.ИспользованиеЕжегодныхОтпусковРаботников КАК ФактическиеОтпускаОрганизаций
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			ОсновныеНачисленияОрганизаций.ВидОтпуска КАК ВидЕжегодногоОтпуска
		ИЗ
			ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		ГДЕ
			ОсновныеНачисленияОрганизаций.Ссылка В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтп))) КАК ОсновнойОтпуск
		ПО ФактическиеОтпускаОрганизаций.ВидОтпуска = ОсновнойОтпуск.ВидЕжегодногоОтпуска
ГДЕ
	ФактическиеОтпускаОрганизаций.Сотрудник.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)
	И ФактическиеОтпускаОрганизаций.Сотрудник В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				Сотрудники.Сотрудник
			ИЗ
				ВТСотрудники КАК Сотрудники)

УПОРЯДОЧИТЬ ПО
	ОрганизацияОтбор,
	ПериодОтбор,
	Сотрудник,
	Период
ИТОГИ ПО
	ОрганизацияОтбор,
	ПериодОтбор</Текст>
		</Запрос>
		<Запрос Имя="ФизическиеЛица_ВременнаяТаблица" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ РАЗЛИЧНЫЕ
	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо
ПОМЕСТИТЬ ВТФизическиеЛица
ИЗ
	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			&amp;ДатаНачалаПереносаРасчетныхДанных,
			(&amp;ПоВсемСотрудникам
				ИЛИ Сотрудник = &amp;Сотрудник)
				И (&amp;ПоВсемФизическимЛицам
					ИЛИ Сотрудник.ФизЛицо = &amp;ФизическоеЛицо)) КАК РаботникиОрганизацийСрезПоследних
ГДЕ
	РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	РаботникиОрганизаций.Сотрудник.Физлицо
ИЗ
	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
ГДЕ
	РаботникиОрганизаций.Период &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных
	И (&amp;ПоВсемСотрудникам
			ИЛИ РаботникиОрганизаций.Сотрудник = &amp;Сотрудник)
	И (&amp;ПоВсемФизическимЛицам
			ИЛИ РаботникиОрганизаций.Сотрудник.Физлицо = &amp;ФизическоеЛицо)

ОБЪЕДИНИТЬ

ВЫБРАТЬ РАЗЛИЧНЫЕ
	ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо
ИЗ
	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисленияРаботниковОрганизаций
ГДЕ
	ПлановыеНачисленияРаботниковОрганизаций.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой)
	И (&amp;ПоВсемСотрудникам
			ИЛИ ПлановыеНачисленияРаботниковОрганизаций.Сотрудник = &amp;Сотрудник)
	И (&amp;ПоВсемФизическимЛицам
			ИЛИ ПлановыеНачисленияРаботниковОрганизаций.Сотрудник.Физлицо = &amp;ФизическоеЛицо)
	И ПлановыеНачисленияРаботниковОрганизаций.Период &gt;= &amp;ДатаНачалаПереносаРасчетныхДанных</Текст>
		</Запрос>
		<Запрос Имя="ФизическиеЛица_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + " " + ФИОФизЛицСрезПоследних.Имя + " " + ФИОФизЛицСрезПоследних.Отчество, ФизическиеЛица.Наименование) КАК ФИО,
	ФизическиеЛица.*
ИЗ
	Справочник.ФизическиеЛица КАК ФизическиеЛица
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
				,
				ФизЛицо В
					(ВЫБРАТЬ РАЗЛИЧНЫЕ
						ФизическиеЛица.Физлицо
					ИЗ
						ВТФизическиеЛица КАК ФизическиеЛица)) КАК ФИОФизЛицСрезПоследних
		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
ГДЕ
	ФизическиеЛица.Ссылка В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)</Текст>
		</Запрос>
		<Запрос Имя="ФИОФизическихЛиц_Выборка" ИспользуетсяПриЗагрузке="false">
			<Текст>ВЫБРАТЬ
	ФИОФизЛиц.*
ИЗ
	РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
ГДЕ
	ФИОФизЛиц.Физлицо В
			(ВЫБРАТЬ РАЗЛИЧНЫЕ
				ФизическиеЛица.Физлицо
			ИЗ
				ВТФизическиеЛица КАК ФизическиеЛица)

УПОРЯДОЧИТЬ ПО
	Физлицо</Текст>
		</Запрос>
	</Запросы>
</ПравилаОбмена>