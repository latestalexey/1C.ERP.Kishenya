#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ

#Область ПрограммныйИнтерфейс

// Возвращает упорядоченный массив периодичностей.
//
// Возвращаемое значение:
// 	 Массив или ТаблицаЗначений - периодичности от "мелкой" к "крупной"
//
// Параметры:
// 	 ВозвращатьВВидеТаблицы - если Истина - то возвращает таблицу значений
//
Функция УпорядоченныеПериодичности(ВозвращатьВВидеТаблицы = Ложь) Экспорт
	
	Периодичности = Новый Массив;
	
	Периодичности.Добавить(Перечисления.Периодичность.ПустаяСсылка());
	Периодичности.Добавить(Перечисления.Периодичность.День);
	Периодичности.Добавить(Перечисления.Периодичность.Неделя);
	Периодичности.Добавить(Перечисления.Периодичность.Декада);
	Периодичности.Добавить(Перечисления.Периодичность.Месяц);
	Периодичности.Добавить(Перечисления.Периодичность.Квартал);
	Периодичности.Добавить(Перечисления.Периодичность.Полугодие);
	Периодичности.Добавить(Перечисления.Периодичность.Год);
	
	Если ВозвращатьВВидеТаблицы Тогда
		ТаблицаПериодичности = Новый ТаблицаЗначений;
		ТаблицаПериодичности.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число"));
		ТаблицаПериодичности.Колонки.Добавить("Периодичность", Новый ОписаниеТипов("ПеречислениеСсылка.Периодичность"));
		Для Каждого Периодичность из Периодичности Цикл
			НоваяСтрокаПериодичность = ТаблицаПериодичности.Добавить();
			НоваяСтрокаПериодичность.Периодичность = Периодичность;
			НоваяСтрокаПериодичность.Порядок = ТаблицаПериодичности.Индекс(НоваяСтрокаПериодичность);
		КонецЦикла;
		Периодичности = ТаблицаПериодичности;
	КонецЕсли;
	
	Возврат Периодичности;
	
КонецФункции

// Возвращает минимальную периодичность из переданных
//
// Параметры:
// 	Периодичности - Массив - Периодичности, из которых надо найти минмальную
// 
// Возвращаемое значение:
// 	Результат - ПеречислениеСсылка.Периодичность - Найденная минимальная периодичность
//
Функция МинимальнаяПериодичность(Периодичности) Экспорт
	
	Результат = Неопределено;
	
	УпорядоченныеПериодичности = Перечисления.Периодичность.УпорядоченныеПериодичности();
	Для каждого Периодичность Из УпорядоченныеПериодичности Цикл 
		Если ЗначениеЗаполнено(Периодичность) И Периодичности.Найти(Периодичность) <> Неопределено Тогда
			Результат = Периодичность;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает количество подпериодов в периоде
//
// Параметры:
// 	Периодичность - Периодичность, для которой определяется количество подпериодов
// 	ПериодичностьПодПериодов - Периодичность, количество периодов которой надо найти
// 
// Возвращаемое значение:
// 	Результат - Число - Найденное количество периодов
//
Функция КоличествоПериодов(Периодичность, ПериодичностьПодПериодов) Экспорт
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	Источник = Новый ОписаниеИсточникаДанных(ПолучитьМакет("СоотношениеПериодов").Область("Соотношения"));
	ПостроительЗапроса.ИсточникДанных = Источник;
	ПостроительЗапроса.Выполнить();
	Таблица = ПостроительЗапроса.Результат.Выгрузить();
	
	ИмяСтроки = ОбщегоНазначения.ИмяЗначенияПеречисления(Периодичность);
	ИмяКолонки = ОбщегоНазначения.ИмяЗначенияПеречисления(ПериодичностьПодПериодов);
	
	Возврат Число(Таблица.Найти(ИмяСтроки, "Заголовок")[ИмяКолонки]);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Сценарий") Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		
		Сценарии = Новый Массив;
		Сценарии.Добавить(Параметры.Сценарий);
		Если Параметры.Свойство("СценарийДляСравнения") Тогда
			Сценарии.Добавить(Параметры.СценарийДляСравнения);
		КонецЕсли;
		
		ПериодичностиСценариев = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сценарии, "Периодичность");
		ПериодичностиПоПорядку = УпорядоченныеПериодичности();
		
		ИндексДляОтбора = 0;
		Для каждого Элемент Из ПериодичностиСценариев Цикл
			
			Индекс = ПериодичностиПоПорядку.Найти(Элемент.Значение);
			Если Индекс > ИндексДляОтбора Тогда
				ИндексДляОтбора = Индекс;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Индекс = ИндексДляОтбора По ПериодичностиПоПорядку.Количество() - 1 Цикл
			ДанныеВыбора.Добавить(ПериодичностиПоПорядку.Получить(Индекс));
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

#КонецЕсли