#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаКатегорий.Ссылка,
	|	ТаблицаКатегорий.Синоним
	|ПОМЕСТИТЬ ВТТаблицаКатегорий
	|ИЗ
	|	&ТаблицаКатегорий КАК ТаблицаКатегорий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКатегорий.Ссылка
	|ИЗ
	|	ВТТаблицаКатегорий КАК ТаблицаКатегорий
	|ГДЕ
	|	ТаблицаКатегорий.Ссылка В(&ДействующиеКатегории)
	|	И ТаблицаКатегорий.Синоним ПОДОБНО &СтрокаПоиска";
	
	Если Параметры.СтрокаПоиска = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И ТаблицаКатегорий.Синоним ПОДОБНО &СтрокаПоиска", "");
	КонецЕсли;
	
	// Составляем таблицу категорий.
	ТаблицаКатегорий = Новый ТаблицаЗначений;
	ТаблицаКатегорий.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ПеречислениеСсылка.КатегорииНачисленийИНеоплаченногоВремени"));
	ТаблицаКатегорий.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(256)));
	
	Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ЗначенияПеречисления Цикл
		НоваяСтрока = ТаблицаКатегорий.Добавить();
		НоваяСтрока.Ссылка = Перечисления.КатегорииНачисленийИНеоплаченногоВремени[ЗначениеПеречисления.Имя];
		НоваяСтрока.Синоним = ЗначениеПеречисления.Синоним;
	КонецЦикла;
	
	// Отбор только по действующим категориям с учетом введенной строки.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаКатегорий", ТаблицаКатегорий);
	Запрос.УстановитьПараметр("ДействующиеКатегории", ДействующиеКатегории());
	Запрос.УстановитьПараметр("СтрокаПоиска", Строка(Параметры.СтрокаПоиска) + "%");
	РезультатЗапроса = Запрос.Выполнить();
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДействующиеКатегории()
	
	МассивКатегорий = Новый Массив;
	
	ИспользоватьГосударственнуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьГосударственнуюСлужбу");
	ИспользоватьМуниципальнуюСлужбу = ПолучитьФункциональнуюОпцию("ИспользоватьМуниципальнуюСлужбу");
	ИспользоватьЕдиновременнуюВыплатуКОтпуску = ИспользоватьГосударственнуюСлужбу Или ИспользоватьМуниципальнуюСлужбу;
	ИспользоватьРасчетСохраняемогоДенежногоСодержания = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетСохраняемогоДенежногоСодержания");
	
	НастройкиРасчетаЗарплаты = РасчетЗарплатыРасширенный.НастройкиРасчетаЗарплаты();
	
	// Часть категорий доступна безусловно, часть — появляются при включении настроек.
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда);
	
	Если НастройкиРасчетаЗарплаты.ИспользоватьСдельныйЗаработок Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СдельнаяОплатаТруда);
	КонецЕсли;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаТрудаВНатуральнойФорме);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоходВНатуральнойФорме);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсационныеВыплаты);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Премия);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНадбавкуЗаВредность") Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.НадбавкаЗаВредность);
	КонецЕсли;
	
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Индексация);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаДоМЗП);
	
	// Отсутствия
	Если ИспользоватьРасчетСохраняемогоДенежногоСодержания Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеНаПериодОтпуска);
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеКомпенсацияОтпуска);	
	КонецЕсли;	
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска);
	Если НастройкиРасчетаЗарплаты.ИспользоватьМатериальнуюПомощьПриОтпуске Тогда
		Если ИспользоватьГосударственнуюСлужбу Тогда
			МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.МатериальнаяПомощьПриОтпускеГосслужащего);
		КонецЕсли;
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.МатериальнаяПомощьПриОтпуске);
	КонецЕсли;
	Если ИспользоватьГосударственнуюСлужбу Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ЕдиновременнаяВыплатаКОтпускуГосслужащего);
	КонецЕсли;
	Если НастройкиРасчетаЗарплаты.ИспользоватьЕдиновременнуюВыплатуКОтпуску Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ЕдиновременнаяВыплатаКОтпуску);
	КонецЕсли;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Отгул);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.НеявкаПоНевыясненнымПричинам);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Прогул);
	// Простои
	Если НастройкиРасчетаЗарплаты.ИспользоватьОплатуПростоев Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПростойПоВинеРаботника);
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПростояПоВинеРаботодателя);
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПростояПоНезависящимОтРаботодателяПричинам);
	КонецЕсли;
	Если ИспользоватьРасчетСохраняемогоДенежногоСодержания Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеНаПериодКомандировки);	
	КонецЕсли;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаКомандировки);
	Если ИспользоватьРасчетСохраняемогоДенежногоСодержания Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.СохраняемоеДенежноеСодержание);	
	КонецЕсли;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПоСреднемуЗаработку);
	
	// Пособия по нетрудоспособности.
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	
	// Доплата до среднего
	Если НастройкиРасчетаЗарплаты.ИспользоватьДоплатуДоСреднегоЗаработка Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаДоСреднегоЗаработка);
	КонецЕсли;
	Если НастройкиРасчетаЗарплаты.ИспользоватьДоплатуЗаДниБолезни Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаДоСреднегоЗаработкаЗаДниБолезни);
	КонецЕсли;
	Если ИспользоватьРасчетСохраняемогоДенежногоСодержания 
		И НастройкиРасчетаЗарплаты.ИспользоватьДоплатуДоСохраняемогоДенежногоСодержанияЗаДниБолезни Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаДоДенежногоСодержанияЗаДниБолезни);
	КонецЕсли;
	
	// Доплата за совмещение
	Если НастройкиРасчетаЗарплаты.ИспользоватьСовмещениеПрофессийДолжностей Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ДоплатаЗаСовмещение);
	КонецЕсли;
	
	// Пособия по уходу за ребенком.
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоТрехЛет);
	
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.МатериальнаяПомощь);
	Если ИспользоватьРасчетСохраняемогоДенежногоСодержания Тогда
		МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ВыходноеПособиеМесячноеДенежноеСодержание);
	КонецЕсли;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ВыходноеПособие);
	
	// Болезнь без оплаты
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодамБезОплаты);
	
	// Прочее
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаДнейУходаЗаДетьмиИнвалидами);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПредыдущимиДокументами);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.Прочее);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ЛьготыСотрудников");
	    Модуль.ДополнитьМассивИспользуемыхКатегорийНачислений(МассивКатегорий);
	КонецЕсли;
	
	Возврат МассивКатегорий;
	
КонецФункции

#КонецОбласти

#КонецЕсли