#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс 

// Функция формирует HTML текст оповещения по бюджетной задаче.
//
// Параметры:
//  ВидОповещения - ПеречислениеСсылка.ВидыОповещенийБюджетныхЗадач.
//  Параметры - Структура.
//   *Исполнитель - СправочникСсылка.Пользователи.
//   *БюджетнаяЗадача - ЗадачаСсылка.БюджетнаяЗадача.
//
// Возвращаемое значение:
//  Строка - Текст в формате HTML.
//
Функция ПолучитьПараметрыПисьмаПоШаблону(ВидОповещения, Параметры) Экспорт
	
	Результат = Новый Структура("Тема, Тело, ТипТекста, Кодировка, Важность"
		,,,Перечисления.ТипыТекстовЭлектронныхПисем.HTML,"UTF-8");
	
	Если ВидОповещения = Перечисления.ВидыОповещенийБюджетныхЗадач.ЗадачаПоступила Тогда
		Результат.Тема = "Поступила новая задача";
		Результат.Важность = ВажностьИнтернетПочтовогоСообщения.Обычная;
		
	ИначеЕсли ВидОповещения = Перечисления.ВидыОповещенийБюджетныхЗадач.ЗадачаПодходитСрок Тогда
		Результат.Тема = "Подходит к концу срок исполнения задачи";
		Результат.Важность = ВажностьИнтернетПочтовогоСообщения.Высокая;
		
	ИначеЕсли ВидОповещения = Перечисления.ВидыОповещенийБюджетныхЗадач.ЗадачаПросрочена Тогда
		Результат.Тема = "Просрочено исполнение задачи";
		Результат.Важность = ВажностьИнтернетПочтовогоСообщения.Наивысшая;
		
	КонецЕсли;
	
	ДобавитьТелоПисьма(ВидОповещения, Параметры, Результат);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область СлужебныеФцнкции

Процедура ДобавитьТелоПисьма(ВидОповещения, Параметры, Результат)
	
	Реквизиты = Новый Структура("Пол", "ФизическоеЛицо.Пол");
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Исполнитель, Реквизиты);
	
	Параметры.Вставить("Обращение", "Здравствуйте");
	Если Реквизиты.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
		Параметры.Обращение = НСтр("ru='Уважаемый';uk='Шановний'");
		
	ИначеЕсли Реквизиты.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
		Параметры.Обращение = НСтр("ru='Уважаемая';uk='Шановна'");
		
	КонецЕсли;
	
	АдресПубликацииИнформационнойБазыВЛокальнойСети = 
		БюджетированиеСервер.АдресПубликацииИнформационнойБазыВЛокальнойСети();
	Если НЕ ПустаяСтрока(АдресПубликацииИнформационнойБазыВЛокальнойСети) Тогда
		АдресСсылки =
			АдресПубликацииИнформационнойБазыВЛокальнойСети + "#" +  ПолучитьНавигационнуюСсылку(Параметры.БюджетнаяЗадача);
		СсылкаНаЗадачу = "Для просмотра задачи перейдите по ссылке: <a href='"+АдресСсылки+"'>"+АдресСсылки+"</a>";
		
	Иначе
		ИмяЯрлыкаИБ = "Запустить информационную базу";
		Результат.Вставить("ИмяЯрлыкаИБ", ИмяЯрлыкаИБ);
		СсылкаНаЗадачу = 
			"Для того чтобы открыть информационную базу Вы можете воспользоваться вложенным файлом """+ИмяЯрлыкаИБ+""".";
	
	КонецЕсли;
	
	Параметры.Вставить("СсылкаНаЗадачу", СсылкаНаЗадачу);
	
	Если ВидОповещения = Перечисления.ВидыОповещенийБюджетныхЗадач.ЗадачаПоступила Тогда
		МакетШаблонаТекста = ПолучитьМакет("HTMLШаблонПисьмаПоступила");
		
	ИначеЕсли ВидОповещения = Перечисления.ВидыОповещенийБюджетныхЗадач.ЗадачаПодходитСрок Тогда
		МакетШаблонаТекста = ПолучитьМакет("HTMLШаблонПисьмаПодходитСрок");
		
	Иначе
		МакетШаблонаТекста = ПолучитьМакет("HTMLШаблонПисьмаПросрочено");
		
	КонецЕсли;
	
	ТекстHTML = МакетШаблонаТекста.ПолучитьТекст();	
	
	ТекстHTML = ЗаполнитьШаблонЗначениямиПодстановки(ТекстHTML, Параметры);
	
	Результат.Тело = ТекстHTML;
	
КонецПроцедуры

Функция ЗаполнитьШаблонЗначениямиПодстановки(ШаблонТекста, ЗначенияПодстановки)
	
	Результат = ШаблонТекста;
	Для Каждого Параметр Из ЗначенияПодстановки Цикл
		Результат = СтрЗаменить(Результат, "[" + Параметр.Ключ + "]",
		                       ?(ТипЗнч(Параметр.Значение) = Тип("Дата"),
		                       Формат(Параметр.Значение, "ДЛФ=DD"), Параметр.Значение));
	КонецЦикла;
						   
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли