#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет кадровые движения документа
//		КадроваяИсторияСотрудников
//		ЗанятыеПозицииШтатногоРасписания.
//
// Параметры:
//	Движения - коллекция движений, в которой необходимо заполнить кадровые движения.
//	КадровыеДвижения - таблица значений с полями:
//		ДатаСобытия
//		ВидСобытия - Перечисление.ВидыКадровыхСобытий
//		ДействуетДо (не обязательно).
//		Сотрудник
//		Позиция (не обязательно)
//		Подразделение (не обязательно).
//		Должность (не обязательно)
// 		КоличествоСтавок (не обязательно).
// 		
Процедура СформироватьДвижения(РегистраторОбъект, Движения, КадровыеДвижения) Экспорт

	ДвиженияСостоянияПодработок = Движения.СостоянияПодработок;
	
	Если КадровыеДвижения.Количество() > 0 Тогда
		ДвиженияСостоянияПодработок.Записывать = Истина;
	КонецЕсли; 
	
	Если РегистраторОбъект.ДополнительныеСвойства.Свойство("ОтключитьПроверкуДатыЗапретаИзменения")
		И РегистраторОбъект.ДополнительныеСвойства.ОтключитьПроверкуДатыЗапретаИзменения Тогда
		
		ДвиженияСостоянияПодработок.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		
	КонецЕсли;
	
	Регистратор = РегистраторОбъект.Ссылка;
	
	ДействуетДоЕсть = (КадровыеДвижения.Колонки.Найти("ДействуетДо") <> Неопределено);
	ПозицияЕсть = (КадровыеДвижения.Колонки.Найти("Позиция") <> Неопределено) И ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	ПодразделениеЕсть = (КадровыеДвижения.Колонки.Найти("Подразделение") <> Неопределено);
	ДолжностьЕсть = (КадровыеДвижения.Колонки.Найти("Должность") <> Неопределено);
	КоличествоСтавокЕсть = (КадровыеДвижения.Колонки.Найти("КоличествоСтавок") <> Неопределено);
	ГрафикРаботыЕсть = (КадровыеДвижения.Колонки.Найти("ГрафикРаботы") <> Неопределено);
	ГоловнойСотрудникЕсть = (КадровыеДвижения.Колонки.Найти("ГоловнойСотрудник") <> Неопределено);
	
	ОтсутствующийСотрудникЕсть = (КадровыеДвижения.Колонки.Найти("ОтсутствующийСотрудник") <> Неопределено);
	
	// Дополним полем Организация, получим текущие данные для записей перемещения и увольнения.
	ДополнитьТекущимиКадровымиДанными(КадровыеДвижения, ПозицияЕсть, Регистратор);
	
	// Получим подразделения по позиции, если требуется.
	Если ПозицияЕсть Тогда
		
		ПозицииСоответствие = Новый Соответствие;
		ПозицииМассив = Новый Массив;
		
		Для Каждого СтрокаДанных Из КадровыеДвижения Цикл
			ПозицииСоответствие[СтрокаДанных.Позиция] = 0;
		КонецЦикла;
		
		Для Каждого ЭлементСоответствия Из ПозицииСоответствие Цикл
			ПозицииМассив.Добавить(ЭлементСоответствия.Ключ);
		КонецЦикла;
		
		ПодразделенияДолжностиПозиций = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ПозицииМассив, "Подразделение,Должность");
		
	КонецЕсли;
	
	ВидЗанятости = Перечисления.ВидыЗанятости.Подработка;
	
	ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ТрудовойДоговор;
	
	Для Каждого СтрокаДанных Из КадровыеДвижения Цикл

		НоваяСтрока = ДвиженияСостоянияПодработок.Добавить();
		НоваяСтрока.Период = СтрокаДанных.ДатаСобытия;
		НоваяСтрока.Сотрудник = СтрокаДанных.Сотрудник;
		НоваяСтрока.ФизическоеЛицо = СтрокаДанных.ФизическоеЛицо;
		НоваяСтрока.ГоловнаяОрганизация = СтрокаДанных.ГоловнаяОрганизация;
		НоваяСтрока.Организация = СтрокаДанных.Организация;
		
		НоваяСтрока.ВидЗанятости = ВидЗанятости;
		НоваяСтрока.ВидДоговора = ВидДоговора;
		
		Если ОтсутствующийСотрудникЕсть Тогда
			
			НоваяСтрока.ОтсутствующийСотрудник = СтрокаДанных.ОтсутствующийСотрудник;
			
		КонецЕсли;	
		
		Если СтрокаДанных.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Увольнение Тогда
			
			НоваяСтрока.Подразделение = СтрокаДанных.ТекущееПодразделение;
			НоваяСтрока.ДолжностьПоШтатномуРасписанию = СтрокаДанных.ТекущаяПозиция;
			НоваяСтрока.Должность = СтрокаДанных.ТекущаяДолжность;
			НоваяСтрока.КоличествоСтавок = СтрокаДанных.ТекущееКоличествоСтавок;
			
		Иначе
			
			Если ПодразделениеЕсть И Не ПозицияЕсть Тогда
				НоваяСтрока.Подразделение = СтрокаДанных.Подразделение;
			КонецЕсли;
			Если ДолжностьЕсть И Не ПозицияЕсть Тогда
				НоваяСтрока.Должность = СтрокаДанных.Должность;
			КонецЕсли;
			Если ПозицияЕсть Тогда
				НоваяСтрока.ДолжностьПоШтатномуРасписанию = СтрокаДанных.Позиция;
				// Если есть позиция, то подразделение и должность берем из нее.
				НоваяСтрока.Подразделение = ПодразделенияДолжностиПозиций[СтрокаДанных.Позиция].Подразделение;
				НоваяСтрока.Должность = ПодразделенияДолжностиПозиций[СтрокаДанных.Позиция].Должность;
			КонецЕсли;
			Если КоличествоСтавокЕсть Тогда
				НоваяСтрока.КоличествоСтавок = СтрокаДанных.КоличествоСтавок;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока.ВидСобытия = СтрокаДанных.ВидСобытия;
		
		// Если есть дата "обратного" события - вводим его данные.
		Если ДействуетДоЕсть Тогда
			
			Если ЗначениеЗаполнено(СтрокаДанных.ДействуетДо) Тогда
				
				НоваяСтрока.ДействуетДо = СтрокаДанных.ДействуетДо;
				
				Если СтрокаДанных.ВидСобытия = Перечисления.ВидыКадровыхСобытий.Прием Тогда
					
					НоваяСтрока.ВидСобытияПоОкончании = Перечисления.ВидыКадровыхСобытий.Увольнение;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;

	КонецЦикла;
	
	Если ДвиженияСостоянияПодработок.Записывать Тогда
		ДвиженияСостоянияПодработок.Записать();
		ДвиженияСостоянияПодработок.Записывать = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

// Дополняет переданную коллекцию колонками.
//		Организация
//		ГоловнаяОрганизация
//		ТекущаяОрганизация
//		ТекущаяПозиция
//		ТекущееПодразделение
//		ТекущаяДолжность
//  	ТекущееКоличествоСтавок
// Колонки Текущая... заполняются только для записей перемещения и увольнения.
// Колонки Организация, ГоловнаяОрганизация - для всех.
Процедура ДополнитьТекущимиКадровымиДанными(КадровыеДвижения, ПозицияЕсть, Регистратор)
	
	КадровыеДвижения.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	КадровыеДвижения.Колонки.Добавить("ГоловнаяОрганизация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	КадровыеДвижения.Колонки.Добавить("ТекущаяОрганизация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	КадровыеДвижения.Колонки.Добавить("ТекущаяПозиция", Новый ОписаниеТипов("СправочникСсылка.ШтатноеРасписание"));
	КадровыеДвижения.Колонки.Добавить("ТекущееПодразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	КадровыеДвижения.Колонки.Добавить("ТекущаяДолжность", Новый ОписаниеТипов("СправочникСсылка.Должности"));
	КадровыеДвижения.Колонки.Добавить("ТекущееКоличествоСтавок", Новый ОписаниеТипов("Число"));
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Если есть Позиция, то можно определить Организацию.
	Если ПозицияЕсть Тогда
		Позиции = ОбщегоНазначения.ВыгрузитьКолонку(КадровыеДвижения, "Позиция", Истина);
		ОрганизацииПозиций = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Позиции, "Владелец");
		Для Каждого Строка Из КадровыеДвижения Цикл
			Строка.Организация = ОрганизацииПозиций[Строка.Позиция];
			Строка.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Строка.Организация);
		КонецЦикла;
	// Если есть Подразделение, то можно определить Организацию.
	ИначеЕсли (КадровыеДвижения.Колонки.Найти("Подразделение") <> НеОпределено) Тогда
		Подразделения = ОбщегоНазначения.ВыгрузитьКолонку(КадровыеДвижения, "Подразделение", Истина);
		ОрганизацииПодразделений = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Подразделения, "Владелец");
		Для Каждого Строка Из КадровыеДвижения Цикл
			Строка.Организация = ОрганизацииПодразделений[Строка.Подразделение];
			Строка.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Строка.Организация);
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаДвижений.Колонки.Добавить("ДатаСобытия", Новый ОписаниеТипов("Дата"));
	
	Для Каждого СтрокаДвижений Из КадровыеДвижения Цикл 
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Сотрудник = СтрокаДвижений.Сотрудник;
		НоваяСтрока.ДатаСобытия =СтрокаДвижений.ДатаСобытия;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДвижений.Сотрудник,
		|	ТаблицаДвижений.ДатаСобытия КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериод
		|ИЗ
		|	&ТаблицаДвижений КАК ТаблицаДвижений";
		
	Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
	Запрос.Выполнить();
		
	Отбор = Новый Массив;
	Отбор.Добавить(Новый Структура("ЛевоеЗначение,ВидСравнения,ПравоеЗначение","Регистратор", "<>", Регистратор));
	
	Отборы = Новый Структура;
	Отборы.Вставить("КадроваяИсторияСотрудников", Отбор);
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТСотрудникиПериод");
	
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "ГоловнаяОрганизация,Организация,Подразделение,Должность,ДолжностьПоШтатномуРасписанию,КоличествоСтавок", Отборы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КадровыеДанныеСотрудников.Сотрудник,
	|	НАЧАЛОПЕРИОДА(КадровыеДанныеСотрудников.Период, ДЕНЬ) КАК ДатаСобытия,
	|	КадровыеДанныеСотрудников.Организация КАК ТекущаяОрганизация,
	|	КадровыеДанныеСотрудников.ГоловнаяОрганизация КАК ТекущаяГоловнаяОрганизация,
	|	КадровыеДанныеСотрудников.ДолжностьПоШтатномуРасписанию КАК ТекущаяПозиция,
	|	КадровыеДанныеСотрудников.Подразделение КАК ТекущееПодразделение,
	|	КадровыеДанныеСотрудников.Должность КАК ТекущаяДолжность,
	|	КадровыеДанныеСотрудников.КоличествоСтавок КАК ТекущееКоличествоСтавок
	|ИЗ
	|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураПоиска = Новый Структура("Сотрудник, ДатаСобытия");
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		
		НайденныеСтроки = КадровыеДвижения.НайтиСтроки(СтруктураПоиска);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			ЗаполнитьЗначенияСвойств(НайденнаяСтрока, Выборка, 
			"ТекущаяОрганизация,ТекущаяПозиция,ТекущееПодразделение,ТекущаяДолжность,ТекущееКоличествоСтавок");
			
			Если Не ЗначениеЗаполнено(НайденнаяСтрока.Организация) Тогда
				НайденнаяСтрока.Организация = Выборка.ТекущаяОрганизация;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(НайденнаяСтрока.ГоловнаяОрганизация) Тогда
				НайденнаяСтрока.ГоловнаяОрганизация = Выборка.ТекущаяГоловнаяОрганизация;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#КонецЕсли