#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область СлужебныеПроцедурыИФункции

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Соберем информацию о сотрудниках, у которых меняются данные кадровой истории.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ИзмеренияДаты.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	СтрокаИзмеренияДаты = ИзмеренияДаты.Добавить();
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "=", Отбор.Регистратор.Значение.Ссылка);

	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"СостоянияПодработок",
		Запрос.МенеджерВременныхТаблиц,
		Истина,
		ОписаниеФильтра,
		ПараметрыПостроения);
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение.Ссылка);
	Запрос.УстановитьПараметр("Источник", Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборИсточник.Сотрудник
	|ПОМЕСТИТЬ ВТСохраняемыеЗначения
	|ИЗ
	|	&Источник КАК НаборИсточник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА СохраняемыеЗначения.Сотрудник ЕСТЬ NULL 
	|			ТОГДА ПредыдущиеЗначения.Сотрудник
	|		ИНАЧЕ СохраняемыеЗначения.Сотрудник
	|	КОНЕЦ КАК Сотрудник
	|ИЗ
	|	ВТСостоянияПодработок КАК ПредыдущиеЗначения
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТСохраняемыеЗначения КАК СохраняемыеЗначения
	|		ПО ПредыдущиеЗначения.Сотрудник = СохраняемыеЗначения.Сотрудник";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ДополнительныеСвойства.Вставить("МассивСотрудниковДляОбновления", РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("МассивСотрудниковДляОбновления") 
		ИЛИ ДополнительныеСвойства.МассивСотрудниковДляОбновления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСотрудниковДляОбновления", ДополнительныеСвойства.МассивСотрудниковДляОбновления);
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоСпискуСотрудников(
		ДополнительныеСвойства.МассивСотрудниковДляОбновления);
	
	ПараметрыПолучения.РаботникиПоТрудовымДоговорам = Ложь;
	ПараметрыПолучения.ПодработкиРаботниковПоТрудовымДоговорам = Истина;
	
	КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(Запрос.МенеджерВременныхТаблиц, Ложь, ПараметрыПолучения, "ВТКадроваяИсторияСотрудников");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадроваяИсторияСотрудников.Сотрудник,
		|	МАКСИМУМ(КадроваяИсторияСотрудников.Период) КАК Период
		|ПОМЕСТИТЬ ВТМаксимальныеПериоды
		|ИЗ
		|	ВТКадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
		|
		|СГРУППИРОВАТЬ ПО
		|	КадроваяИсторияСотрудников.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадроваяИсторияСотрудников.Период,
		|	КадроваяИсторияСотрудников.Сотрудник,
		|	КадроваяИсторияСотрудников.ГоловнаяОрганизация,
		|	КадроваяИсторияСотрудников.ФизическоеЛицо,
		|	КадроваяИсторияСотрудников.ВидСобытия,
		|	КадроваяИсторияСотрудников.Организация,
		|	КадроваяИсторияСотрудников.ДолжностьПоШтатномуРасписанию,
		|	КадроваяИсторияСотрудников.Подразделение,
		|	КадроваяИсторияСотрудников.Должность,
		|	КадроваяИсторияСотрудников.КоличествоСтавок,
		|	КадроваяИсторияСотрудников.ВидЗанятости,
		|	КадроваяИсторияСотрудников.ВидДоговора
		|ПОМЕСТИТЬ ВТКадроваяИсторияСотрудниковСрезПоследних
		|ИЗ
		|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
		|		ПО МаксимальныеПериоды.Период = КадроваяИсторияСотрудников.Период
		|			И МаксимальныеПериоды.Сотрудник = КадроваяИсторияСотрудников.Сотрудник";
		
	Запрос.Выполнить();
	
	КадровыйУчетВнутренний.ОбновитьТекущиеКадровыеДанныеСотрудников(Запрос);
	
	КадровыйУчет.ОбновитьЗначенияДоступаСотрудников(ДополнительныеСвойства.МассивСотрудниковДляОбновления);
	
	РегистрыСведений.ДанныеДляПодбораСотрудников.ОбновитьДанныеДляПодбораСотрудников(ДополнительныеСвойства.МассивСотрудниковДляОбновления);
	
	Для Каждого СтрокаНабора Из ЭтотОбъект Цикл
		УправлениеДоступом.ОбновитьНаборыЗначенийДоступа(СтрокаНабора.Сотрудник);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
