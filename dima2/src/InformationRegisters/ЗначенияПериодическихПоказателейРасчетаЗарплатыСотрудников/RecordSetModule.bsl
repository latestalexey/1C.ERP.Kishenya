#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПодготовитьСотрудниковДляОбновленияТекущихТарифныхСтавок();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	КадровыйУчет.ОбновитьВторичныеКадровыеДанныеСотрудников(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьСотрудниковДляОбновленияТекущихТарифныхСтавок()
	
	// Обновлять записи необходимо, только при записи набора, содержащего первичные данные.
	Если ДополнительныеСвойства.Свойство("ЭтоВторичныйНабор") 
		И ДополнительныеСвойства.ЭтоВторичныйНабор Тогда
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ИзмеренияДаты.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	СтрокаИзмеренияДаты = ИзмеренияДаты.Добавить();
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "=", Отбор.Регистратор.Значение.Ссылка);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"ЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников",
		Запрос.МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты),
		ПараметрыПостроения);
	
	Запрос.УстановитьПараметр("Источник", Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НаборИсточник.Сотрудник,
	|	НаборИсточник.Показатель
	|ПОМЕСТИТЬ ВТСохраняемыеЗначения
	|ИЗ
	|	&Источник КАК НаборИсточник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СохраняемыеЗначения.Сотрудник ЕСТЬ NULL 
	|			ТОГДА ПредыдущиеЗначения.Сотрудник
	|		ИНАЧЕ СохраняемыеЗначения.Сотрудник
	|	КОНЕЦ КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА СохраняемыеЗначения.Показатель ЕСТЬ NULL 
	|			ТОГДА ПредыдущиеЗначения.Показатель
	|		ИНАЧЕ СохраняемыеЗначения.Показатель
	|	КОНЕЦ КАК Показатель
	|ПОМЕСТИТЬ ВТВсеДанныеРегистратора
	|ИЗ
	|	ВТСохраняемыеЗначения КАК СохраняемыеЗначения
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТЗначенияПериодическихПоказателейРасчетаЗарплатыСотрудников КАК ПредыдущиеЗначения
	|		ПО СохраняемыеЗначения.Сотрудник = ПредыдущиеЗначения.Сотрудник
	|			И СохраняемыеЗначения.Показатель = ПредыдущиеЗначения.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВсеДанныеРегистратора.Сотрудник
	|ИЗ
	|	ВТВсеДанныеРегистратора КАК ВсеДанныеРегистратора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления.Показатели КАК НачисленияПоказатели
	|		ПО ВсеДанныеРегистратора.Показатель = НачисленияПоказатели.Показатель
	|			И (НачисленияПоказатели.ОсновнойПоказатель)
	|			И (НачисленияПоказатели.Ссылка.ВидВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыРабочегоВремениСотрудников.ОтработанноеВПределахНормы), ЗНАЧЕНИЕ(Перечисление.ВидыРабочегоВремениСотрудников.ЧасовоеОтработанноеВПределахНормы)))";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Если в выборке нет сотрудников, прерываем дальнейшую обработку.
	Если НЕ РезультатЗапроса.Пустой() Тогда
		КадровыйУчет.ЗапомнитьСписокСотрудниковДляОбновленияДанныхОбОплатеТруда(ЭтотОбъект, РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
