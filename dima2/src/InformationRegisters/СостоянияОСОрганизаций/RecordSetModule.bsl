#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СостоянияОСОрганизаций.Период      КАК Период,
	|	СостоянияОСОрганизаций.Регистратор КАК Регистратор,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	СостоянияОСОрганизаций.Состояние   КАК Состояние
	|ПОМЕСТИТЬ СостоянияОСОрганизацийПередЗаписью
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|
	|ГДЕ
	|	СостоянияОСОрганизаций.Регистратор = &Регистратор
	|	И СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|";
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ)           КАК Месяц,
	|	Таблица.Регистратор                            КАК Документ,
	|	Таблица.Организация                            КАК Организация
	|ИЗ
	|	(ВЫБРАТЬ
	|		СостоянияОСОрганизаций.Период      КАК Период,
	|		СостоянияОСОрганизаций.Регистратор КАК Регистратор,
	|		СостоянияОСОрганизаций.Организация КАК Организация,
	|		ВЫБОР 
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ТОГДА 1
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА 2
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)
	|				ТОГДА 3
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
	|				ТОГДА 4
	|		КОНЕЦ КАК Состояние
	|	ИЗ
	|		СостоянияОСОрганизацийПередЗаписью КАК СостоянияОСОрганизаций
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		СостоянияОСОрганизаций.Период      КАК Период,
	|		СостоянияОСОрганизаций.Регистратор КАК Регистратор,
	|		СостоянияОСОрганизаций.Организация КАК Организация,
	|		-(ВЫБОР 
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				ТОГДА 1
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА 2
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)
	|				ТОГДА 3
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
	|				ТОГДА 4
	|		КОНЕЦ) КАК Состояние
	|	ИЗ
	|		РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|	ГДЕ
	|		СостоянияОСОрганизаций.Регистратор = &Регистратор
	|		И СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС) Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ),
	|	Таблица.Регистратор,
	|	Таблица.Организация
	|
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Состояние) <> 0
	|;
	|
	|///////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СостоянияОСОрганизацийПередЗаписью
	|";
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКЗакрытиюМесяца");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НаборЗаписей, Выборка);
		НаборЗаписей.Операция = Перечисления.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций;
		НаборЗаписей.НомерЗадания = Константы.НомерЗаданияКЗакрытиюМесяца.Получить();
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
