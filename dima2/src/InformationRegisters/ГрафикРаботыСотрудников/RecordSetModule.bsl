#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДвиженийРегистратора = Новый МенеджерВременныхТаблиц;
	СоздатьВТДвиженияРегистратора(ДанныеДвиженийРегистратора, Отбор.Регистратор.Значение, "ВТПредыдущиеДвижения");
	
	ДополнительныеСвойства.Вставить("ДанныеДвиженийРегистратора", ДанныеДвиженийРегистратора);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеСвойства.Свойство("ДанныеДвиженийРегистратора") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДвиженийРегистратора = ДополнительныеСвойства.ДанныеДвиженийРегистратора;
	СоздатьВТДвиженияРегистратора(ДанныеДвиженийРегистратора, Отбор.Регистратор.Значение, "ВТТекущиеДвижения");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеДвиженийРегистратора;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ПредыдущиеДвижения.Период, ТекущиеДвижения.Период) КАК Период,
		|	ЕСТЬNULL(ПредыдущиеДвижения.Сотрудник, ТекущиеДвижения.Сотрудник) КАК Сотрудник
		|ПОМЕСТИТЬ ВТИзмененныеДвижения
		|ИЗ
		|	ВТПредыдущиеДвижения КАК ПредыдущиеДвижения
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТТекущиеДвижения КАК ТекущиеДвижения
		|		ПО ПредыдущиеДвижения.Период = ТекущиеДвижения.Период
		|			И ПредыдущиеДвижения.Сотрудник = ТекущиеДвижения.Сотрудник
		|			И ПредыдущиеДвижения.ГрафикРаботы = ТекущиеДвижения.ГрафикРаботы
		|ГДЕ
		|	(ЕСТЬNULL(ПредыдущиеДвижения.Период, ДАТАВРЕМЯ(1, 1, 1)) <> ЕСТЬNULL(ТекущиеДвижения.Период, ДАТАВРЕМЯ(1, 1, 1))
		|			ИЛИ ЕСТЬNULL(ПредыдущиеДвижения.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) <> ЕСТЬNULL(ТекущиеДвижения.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|			ИЛИ ЕСТЬNULL(ПредыдущиеДвижения.ГрафикРаботы, ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыСотрудников.ПустаяСсылка)) <> ЕСТЬNULL(ТекущиеДвижения.ГрафикРаботы, ЗНАЧЕНИЕ(Справочник.ГрафикиРаботыСотрудников.ПустаяСсылка)))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИзмененныеДвижения.Сотрудник
		|ИЗ
		|	ВТИзмененныеДвижения КАК ИзмененныеДвижения";
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		// Вызов обработчика при изменении графика работы
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТДвиженияРегистратора(МенеджерВременныхТаблиц, Регистратор, ИмяВТДвиженияРегистратора)
	
	ИзмеренияДаты = Новый ТаблицаЗначений;
	ИзмеренияДаты.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ИзмеренияДаты.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	ИзмеренияДаты.Добавить();
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИзмеренияДаты);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистра();
	ПараметрыПостроения.ФормироватьСПериодичностьДень = Ложь;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
		ПараметрыПостроения.Отборы, "Регистратор", "=", Регистратор);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистра(
		"ГрафикРаботыСотрудников",
		МенеджерВременныхТаблиц,
		Ложь,
		ОписаниеФильтра,
		ПараметрыПостроения,
		ИмяВТДвиженияРегистратора);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
