
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не (Параметры.Свойство("ШаблонПроводки")
		и Параметры.Свойство("ВидДвижения")) Тогда
	    ТекстСообщения = НСтр("ru='Непосредственное открытие этой формы не предусмотрено!';uk='Безпосереднє відкриття цієї форми не передбачено!'");
	    ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ШаблонПроводки = Параметры.ШаблонПроводки;
	ВидДвижения = Параметры.ВидДвижения;
	
	Если ВидДвижения = Перечисления.ВидыДвиженийБухгалтерии.Дебет Тогда
		ТипИсточникаУточненияСчета = ШаблонПроводки.ТипИсточникаУточненияСчетаДт;
		СчетПоУмолчаниюПредставление = ШаблонПроводки.СчетДебетаПоУмолчанию.Код + ", " + ШаблонПроводки.СчетДебетаПоУмолчанию.Наименование;
		Элементы.СчетПоУмолчаниюПредставление.Заголовок = НСтр("ru='Счет Дт (по умолчанию)';uk='Рахунок Дт (по умовчанню)'");
	Иначе
		ТипИсточникаУточненияСчета = ШаблонПроводки.ТипИсточникаУточненияСчетаКт;
		СчетПоУмолчаниюПредставление = ШаблонПроводки.СчетКредитаПоУмолчанию.Код + ", " + ШаблонПроводки.СчетКредитаПоУмолчанию.Наименование;
		Элементы.СчетПоУмолчаниюПредставление.Заголовок = НСтр("ru='Счет Кт (по умолчанию)';uk='Рахунок Кт (по умовчанню)'");
	КонецЕсли;
	
	Элементы.ГруппыФинансовогоУчетаНаименование.Заголовок = ТипИсточникаУточненияСчета;
	
	ОтборГруппФинансовогоУчета = "Все";
	
	ПоказатьСчетаУчета();
		
	Если Параметры.Свойство("ГруппаФинансовогоУчета") Тогда
		УстановитьТекущуюСтрокуТаблицыСчетов(Параметры.ГруппаФинансовогоУчета);				
	КонецЕсли;
	
	УстановитьДоступностьВидимостьЭлементовНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	МассивВыделенныхСтрок = Элементы.ГруппыФинансовогоУчета.ВыделенныеСтроки;
	Если МассивВыделенныхСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ЗаполнитьСчетаУчета(МассивВыделенныхСтрок, ВыбранноеЗначение);		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	ПоказатьСчетаУчета();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборГруппФинансовогоУчетаПриИзменении(Элемент)
	
	ПоказатьСчетаУчета();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ГруппыФинансовогоУчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ГруппыФинансовогоУчетаНаименование Тогда
		ТекущиеДанные = ГруппыФинансовогоУчета.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
		ИмяСправочника = МеждународныйУчетКлиентСервер.ИмяСправочникаГруппФинансовогоУчета(ТипИсточникаУточненияСчета);
		ОткрытьФорму("Справочник." + ИмяСправочника + ".ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьГруппуФинансовогоУчета(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикПоказатьВопросПриСозданииГруппыФинансовогоУчета", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Текущие настройки уточнения счета будут записаны. Продолжить?';uk='Поточні настройки уточнення рахунку будуть записані. Продовжити?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	МассивВыделенныхСтрок = Элементы.ГруппыФинансовогоУчета.ВыделенныеСтроки;
	Если МассивВыделенныхСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("ПланСчетов.Международный.ФормаВыбора", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьСчетаУчета();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьСчетаУчета();
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГруппыФинансовогоУчетаСчетУчета.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГруппыФинансовогоУчета.СчетУчета");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<Счет по умолчанию>';uk='<Рахунок по умовчанню>'"));

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ГруппыФинансовогоУчетаНаименование.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГруппыФинансовогоУчета.СчетУчета");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);

КонецПроцедуры

&НаСервере
Процедура ПоказатьСчетаУчета()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПравилаУточненияСчетов.ГруппаФинансовогоУчета,
	|	ПравилаУточненияСчетов.ШаблонПроводки,
	|	ПравилаУточненияСчетов.ВидДвижения,
	|	ПравилаУточненияСчетов.СчетУчета
	|ПОМЕСТИТЬ ПравилаУточненияСчетов
	|ИЗ
	|	РегистрСведений.ПравилаУточненияСчетовВМеждународномУчете КАК ПравилаУточненияСчетов
	|ГДЕ
	|	ПравилаУточненияСчетов.ШаблонПроводки = &ШаблонПроводки
	|	И ПравилаУточненияСчетов.ВидДвижения = &ВидДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыФинансовогоУчета.Ссылка КАК Ссылка,
	|	ГруппыФинансовогоУчета.Наименование КАК Наименование,
	|	ПравилаУточненияСчетов.СчетУчета КАК СчетУчета
	|ИЗ
	|	%СправочникГруппыФинансовогоУчета КАК ГруппыФинансовогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПравилаУточненияСчетов КАК ПравилаУточненияСчетов
	|		ПО (ПравилаУточненияСчетов.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.Ссылка)
	|ГДЕ
	|	ГруппыФинансовогоУчета.ПометкаУдаления = ЛОЖЬ
	|	И ГруппыФинансовогоУчета.ЭтоГруппа = ЛОЖЬ
	|	И (ПравилаУточненияСчетов.СчетУчета ЕСТЬ НЕ NULL ИЛИ &ПоказыватьВсеГруппыФинансовогоУчета)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппыФинансовогоУчета.Наименование
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%СправочникГруппыФинансовогоУчета", 
	   "Справочник." + МеждународныйУчетКлиентСервер.ИмяСправочникаГруппФинансовогоУчета(ТипИсточникаУточненияСчета));
	
	Запрос.УстановитьПараметр("ШаблонПроводки", ШаблонПроводки);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвижения);
	Запрос.УстановитьПараметр("ПоказыватьВсеГруппыФинансовогоУчета", ОтборГруппФинансовогоУчета = "Все");
	
	ГруппыФинансовогоУчета.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущуюСтрокуТаблицыСчетов(ГруппаФинансовогоУчета)

	ПараметрыОтбора = Новый Структура("Ссылка", ГруппаФинансовогоУчета);
	МассивСтрок = ГруппыФинансовогоУчета.НайтиСтроки(ПараметрыОтбора);
	Если МассивСтрок.Количество() > 0 Тогда
		Элементы.ГруппыФинансовогоУчета.ТекущаяСтрока = МассивСтрок[0].ПолучитьИдентификатор();	
		Элементы.ГруппыФинансовогоУчета.ТекущийЭлемент = Элементы.ГруппыФинансовогоУчетаСчетУчета;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьСчетаУчета()

	НаборЗаписей = РегистрыСведений.ПравилаУточненияСчетовВМеждународномУчете.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ШаблонПроводки.Установить(ШаблонПроводки);
	НаборЗаписей.Отбор.ВидДвижения.Установить(ВидДвижения);
	Для каждого  Строка из ГруппыФинансовогоУчета Цикл
		Если ЗначениеЗаполнено(Строка.СчетУчета) Тогда
 			НоваяЗапись	= НаборЗаписей.Добавить();
			НоваяЗапись.ШаблонПроводки = ШаблонПроводки;
			НоваяЗапись.ГруппаФинансовогоУчета = Строка.Ссылка;
			НоваяЗапись.ВидДвижения = ВидДвижения;
			НоваяЗапись.СчетУчета = Строка.СчетУчета;
		КонецЕсли;
	КонецЦикла;
	НаборЗаписей.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСчетаУчета(МассивВыделенныхСтрок, СчетУчета)

	Для каждого ИдентификаторСтроки Из МассивВыделенныхСтрок Цикл
		НайденнаяСтрока = ГруппыФинансовогоУчета.НайтиПоИдентификатору(ИдентификаторСтроки);
		НайденнаяСтрока.СчетУчета = СчетУчета;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВидимостьЭлементовНаСервере()

	ДоступноИзменениеНастроекМФУ = МеждународныйУчетОбщегоНазначения.ДоступноИзменениеНастроекМеждународногоУчета();
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("ФормаЗаписатьИЗакрыть");
	МассивЭлементов.Добавить("ГруппыФинансовогоУчета");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", НЕ ДоступноИзменениеНастроекМФУ);
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("СоздатьГруппуФинансовогоУчета");
	МассивЭлементов.Добавить("ИзменитьВыделенные");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", ДоступноИзменениеНастроекМФУ);

КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПоказатьВопросПриСозданииГруппыФинансовогоУчета(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьСчетаУчета();
		ОткрытьФорму("Справочник."
					+ МеждународныйУчетКлиентСервер.ИмяСправочникаГруппФинансовогоУчета(ТипИсточникаУточненияСчета)
					+ ".ФормаОбъекта",, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
