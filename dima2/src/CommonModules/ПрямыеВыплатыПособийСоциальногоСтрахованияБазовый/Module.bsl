#Область СлужебныйПрограммныйИнтерфейс


// Возвращает массив ссылок из ПВР Начисления, соответствующих облагаемым взносами компенсациям, возмещаемым из бюджета ФСС 
// (в частности, оплата 4-х дополнительных выходных дней для ухода за детьми инвалидами).
//
// Параметры:
//	нет
// 
// Возвращаемое значение:
//	Массив
// 
Функция НачисленияОблагаемыхВзносамиПособий() Экспорт

	Возврат Новый Массив()
	
КонецФункции

// Функция - Категории начислений пособий по прямым выплатам ФСС
// 
// Возвращаемое значение:
//  МассивКатегорий - Массив, категории пособий, которые оплачиваются напрямую ФСС
//
Функция КатегорииНачисленийПособийПоПрямымВыплатамФСС() Экспорт
	
	МассивКатегорий = Новый Массив;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	
	Возврат МассивКатегорий;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПризнакВыплачиваетсяФСССуществующихДокументов(МенеджерВременныхТаблиц) Экспорт
		
КонецПроцедуры

Процедура СоздатьВТДанныеОЗаработкеДляЗаполнения(МенеджерВременныхТаблиц, ПараметрыЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаполнения.Сотрудник, "ФизическоеЛицо"));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(ПараметрыЗаполнения.Организация));
	Запрос.УстановитьПараметр("ОграничиватьРазмерЗаработка", ПараметрыЗаполнения.ОграничиватьРазмерЗаработка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций";
		
	Запрос.Выполнить();
	
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ГОД(СведенияОДоходах.Период) КАК РасчетныйГод,
		|	СУММА(СведенияОДоходах.БазаФСС - СведенияОДоходах.СуммаПревысившаяПределФСС) КАК Заработок
		|ПОМЕСТИТЬ ВТДанныеОЗаработкеБезОграничения
		|ИЗ
		|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	&ОтборПоОрганизации
		|
		|СГРУППИРОВАТЬ ПО
		|	ГОД(СведенияОДоходах.Период)
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.БазаФСС - СведенияОДоходах.СуммаПревысившаяПределФСС) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОЗаработке.РасчетныйГод,
		|	СУММА(ВЫБОР
		|			КОГДА ДанныеОЗаработке.Заработок >= ПредельнаяВеличинаБазыСтраховыхВзносов.РазмерФСС
		|					И &ОграничиватьРазмерЗаработка
		|				ТОГДА ПредельнаяВеличинаБазыСтраховыхВзносов.РазмерФСС
		|			ИНАЧЕ ДанныеОЗаработке.Заработок
		|		КОНЕЦ) КАК Заработок
		|ПОМЕСТИТЬ ВТДанныеОЗаработкеДляЗаполнения
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Период,
		|		ДанныеОЗаработке.РасчетныйГод КАК РасчетныйГод,
		|		ДанныеОЗаработке.Заработок КАК Заработок
		|	ИЗ
		|		ВТДанныеОЗаработкеБезОграничения КАК ДанныеОЗаработке
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
		|			ПО (ДанныеОЗаработке.РасчетныйГод >= ГОД(ПредельнаяВеличинаБазыСтраховыхВзносов.Период))
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеОЗаработке.РасчетныйГод,
		|		ДанныеОЗаработке.Заработок) КАК ДанныеОЗаработке
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
		|		ПО ДанныеОЗаработке.Период = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
		|ГДЕ
		|	ДанныеОЗаработке.РасчетныйГод В(&РасчетныеГоды)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеОЗаработке.РасчетныйГод";
	
	Если ПараметрыЗаполнения.ПоВсемОП Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОтборПоОрганизации","Истина");
	Иначе		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОтборПоОрганизации","СведенияОДоходах.Организация = &Организация");
		Запрос.УстановитьПараметр("Организация", ПараметрыЗаполнения.Организация);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РасчетныеГоды = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеОЗаработке.РасчетныйГод В(&РасчетныеГоды)", "ИСТИНА");	
	Иначе
		Запрос.УстановитьПараметр("РасчетныеГоды", ПараметрыЗаполнения.РасчетныеГоды);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

#Область ЗаявлениеРасчетВФСС

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Организация, Ссылка, ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено) Экспорт
	 Возврат Неопределено;
КонецФункции 

#Область ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеТерриториальногоОрганаФСС", 	ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НаименованиеТерриториальногоОрганаФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("РегистрационныйНомерФСС", 					ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("РегистрационныйНомерФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДополнительныйКодФСС",						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ДополнительныйКодФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПодчиненностиФСС", 						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КодПодчиненностиФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ИНН",										ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ИНН", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КПП", 										ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КПП", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресОрганизации",							ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("АдресОрганизации", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя",						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ТелефонСоставителя", 		"Организация", "Организация", Ложь, , ""));
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ИмяРеквизита, 
	ИмяГруппы = "Оплаты", 
	ОснованиеЗаполнения = "ДокументОснование",
	РеквизитСтроки = Истина,
	ФиксацияГруппы = Ложь, 
	Путь = "Оплаты",
	Используется = Истина, 
	ОтображатьПредупреждение = Истина, 
	СтрокаПредупреждения =  "") Экспорт
	
	ФиксацияРеквизита = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	ФиксацияРеквизита.Вставить("Используется", Используется);
	ФиксацияРеквизита.Вставить("ИмяРеквизита", ИмяРеквизита);
	ФиксацияРеквизита.Вставить("ИмяГруппы", ИмяГруппы);
	ФиксацияРеквизита.Вставить("ФиксацияГруппы", ФиксацияГруппы);
	ФиксацияРеквизита.Вставить("ОснованиеЗаполнения", ОснованиеЗаполнения);
	ФиксацияРеквизита.Вставить("Путь", Путь);
	ФиксацияРеквизита.Вставить("ОтображатьПредупреждение", ОтображатьПредупреждение);
	Если СтрокаПредупреждения <> "" Тогда
		ФиксацияРеквизита.Вставить("СтрокаПредупреждения", СтрокаПредупреждения);
	КонецЕсли;
	ФиксацияРеквизита.Вставить("РеквизитСтроки", РеквизитСтроки);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксацииРеквизита(ФиксацияРеквизита);
	
КонецФункции

#КонецОбласти

Функция ИспользуетсяЗаполнениеДокументаЗаявлениеРасчетВФСС() Экспорт

	Возврат Ложь;
	
КонецФункции 

#КонецОбласти


#КонецОбласти

