//////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// В модуле описаны контекстные запросы данных из оперативных документов в формате (протоколе), необходимом
// для проведения по регламентированному учету (по регистру бухгалтерии Хозрасчетный).
//
// Экспорт в служебных процедурах и функциях указан для включения повторного использования.
//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возврат: Запрос - неисполненный запрос, формирующий вр.табл. Данные.
//  В запросе можно использовать параметры. Обязательный параметр - &Ссылка.
//	Все остальные параметры должны называться также как функциональные опции,
//	которые варьируют учетные разрезы.
//	 Например: ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
//
// Шаблон запроса для формирования собственных проводок по документам:
//	|ВЫБРАТЬ //// Краткое описание проводки (Дт <счет, счет> :: Кт <счет, счет>)
//	|	Операция.Дата КАК Период,
//	|	Операция.Организация КАК Организация,
//	|	<> КАК ИдентификаторСтроки,
//	|
//	|	<> КАК Сумма,
//	|
//	|	<> КАК ВидСчетаДт,
//	|	<> КАК АналитикаУчетаДт,
//	|	<> КАК МестоУчетаДт,
//	|
//	|	<> КАК ВалютаДт,
//	|	<> КАК ПодразделениеДт,
//	|	<> КАК СчетДт,
//	|	<> КАК СубконтоДт1,
//	|	<> КАК СубконтоДт2,
//	|	<> КАК СубконтоДт3,
//	|	
//	|	<> КАК ВалютнаяСуммаДт,
//	|	<> КАК КоличествоДт,
//	|	<> КАК СуммаНУДт,
//	|	<> КАК СуммаПРДт,
//	|	<> КАК СуммаВРДт,
//	|	
//	|	<> КАК ВидСчетаКт,
//	|	<> КАК АналитикаУчетаКт,
//	|	<> КАК МестоУчетаКт,
//	|	
//	|	<> КАК ВалютаКт,
//	|	<> КАК ПодразделениеКт,
//	|	<> КАК СчетКт,
//	|	<> КАК СубконтоКт1,
//	|	<> КАК СубконтоКт2,
//	|	<> КАК СубконтоКт3,
//	|
//	|	<> КАК ВалютнаяСуммаКт,
//	|	<> КАК КоличествоКт,
//	|	<> КАК СуммаНУКт,
//	|	<> КАК СуммаПРКт,
//	|	<> КАК СуммаВРКт
//	|
//	|ИЗ Документ.<ОПЕРАЦИЯ> КАК Операция
//	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.<ОПЕРАЦИЯ>.<СТРОКИ> КАК Строки
//	|		ПО Строки.Ссылка = Операция.Ссылка
//	|	
//	|ГДЕ Операция.Ссылка = &Ссылка
//	|	И <ОТБОР>
Функция ЗапросДанных(ДокументИмя, ЭтоОбъектРасчетов = Истина) Экспорт
	
	ТаблицаДокумента = "Документ." + ДокументИмя;
	
	ТекстИнициализации = "
		|ВЫБРАТЬ //// Размещение итоговых данных во врем.таблицу Данные
		|	НЕОПРЕДЕЛЕНО КАК Ссылка,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
		|
		|	0 КАК Сумма,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
		|
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	
		|	0 КАК ВалютнаяСуммаДт,
		|	0 КАК КоличествоДт,
		|	0 КАК СуммаНУДт,
		|	0 КАК СуммаПРДт,
		|	0 КАК СуммаВРДт,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПустаяСсылка) КАК ВидСчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
		|
		|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
		|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|
		|	0 КАК ВалютнаяСуммаКт,
		|	0 КАК КоличествоКт,
		|	0 КАК СуммаНУКт,
		|	0 КАК СуммаПРКт,
		|	0 КАК СуммаВРКт,
		|	
		|	"""" КАК Содержание
		|
		|ПОМЕСТИТЬ Данные
		|ГДЕ Ложь
		|";
	
	ТекстЗачетАвансов =
		СтрЗаменить(ТекстЗачетАвансов(ЭтоОбъектРасчетов), "ДокументИмя", ТаблицаДокумента);
	ТекстРаспределениеРасходов =
		СтрЗаменить(ТекстРаспределениеРасходов(), "ДокументИмя", ТаблицаДокумента);
		
	ТекстОтраженияДокумента = ТекстОтраженияДокумента(ДокументИмя);
	ТекстВТОтраженияДокумента = ТекстВТОтраженияДокумента(ДокументИмя);
	
	Если ТекстОтраженияДокумента <> "" Тогда
		ТекстОтраженияДокумента = " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтраженияДокумента; 
	КонецЕсли;
	
	Если ДокументИмя = "РасчетСебестоимостиТоваров" Тогда
		Возврат Новый Запрос(""
			+ ТекстПустыеВТ()
			+ ТекстУчетнаяПолитика()
			+ ТекстВТОтраженияДокумента
			+ ТекстИнициализации
			+ ТекстОтраженияДокумента);
	Иначе
		Возврат Новый Запрос(""
		    + ТекстДанныеСебестоимостиДляКорректировкиНДСПартий()
			+ ТекстСебестоимость()
			+ ТекстКорректировкиНДСПартий()
			+ ТекстУчетнаяПолитика()
			+ ТекстВТОтраженияДокумента
			+ ТекстИнициализации
			+ ТекстЗачетАвансов
			+ ТекстРаспределениеРасходов
			+ ТекстОтраженияДокумента);
	КонецЕсли;
КонецФункции

Функция ЗапросДанныхПараметры(ДокументИмя, ЭтоОбъектРасчетов) Экспорт
	
	Возврат РеглУчетВыборкиСерверПовтИсп.ЗапросДанных(ДокументИмя, ЭтоОбъектРасчетов).НайтиПараметры();
	
КонецФункции

Функция ЗапросПланаСчетов() Экспорт
	ЗапросПлана = Новый Запрос;
	ЗапросПланаТекст = "
	    |ВЫБРАТЬ
		|	План.Ссылка КАК Ссылка,
		|	План.Валютный КАК Валютный,
		|	План.УчетПоПодразделениям КАК УчетПоПодразделениям,
		|	План.Забалансовый КАК Забалансовый,
		|	План.Количественный КАК Количественный,
		|	План.ЗапретитьИспользоватьВПроводках КАК ЗапретитьИспользоватьВПроводках,
		|	План.НалоговыйУчет КАК НалоговыйУчет,
		|	План.УчетПоНалоговымНазначениямНДС КАК УчетПоНалоговымНазначениямНДС,
		|	ЕСТЬNULL(Виды1.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконто1,
		|	ЕСТЬNULL(Виды2.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконто2,
		|	ЕСТЬNULL(Виды3.ВидСубконто, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КАК ВидСубконто3
		|ПОМЕСТИТЬ
		|	ПланХозрасчетный
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК План
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды1
		|		ПО План.Ссылка = Виды1.Ссылка И Виды1.НомерСтроки = 1
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды2
		|		ПО План.Ссылка = Виды2.Ссылка И Виды2.НомерСтроки = 2
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды3
		|		ПО План.Ссылка = Виды3.Ссылка И Виды3.НомерСтроки = 3
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка) КАК Ссылка,
		|	ТИП(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные) КАК ТипЗначения
		|ПОМЕСТИТЬ ВидыСубконто
		|ГДЕ Ложь
		|";
	
	ЗапросПВХ = Новый Запрос("
		|ВЫБРАТЬ
		|	ПВХ.Ссылка КАК Ссылка,
		|	ПВХ.ТипЗначения КАК ТипЗначения
		|ИЗ
		|	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК ПВХ
		|");
	ВидСубконто = ЗапросПВХ.Выполнить().Выбрать();
	
	ИндексСтроки = 0;
	Пока ВидСубконто.Следующий() Цикл
		Для Каждого Тип Из ВидСубконто.ТипЗначения.Типы() Цикл
			ИмяТипа = Метаданные.НайтиПоТипу(Тип).ПолноеИмя();
			
			ТекстТипа = "
				|ВЫБРАТЬ
				|	ПВХ.Ссылка, 
				|	ТИП(&ПодстановкаТипа)
				|ИЗ ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК ПВХ
				|ГДЕ ПВХ.Ссылка = &ПодстановкаСсылки
				|";
			ТекстТипа = СтрЗаменить(ТекстТипа, "&ПодстановкаТипа", ИмяТипа);
			ИмяПараметра = "Ссылка" + Формат(ИндексСтроки, "ЧГ=0");
			ТекстТипа = СтрЗаменить(ТекстТипа, "ПодстановкаСсылки", ИмяПараметра);
			
			ЗапросПланаТекст = ЗапросПланаТекст + " ОБЪЕДИНИТЬ ВСЕ " + ТекстТипа;
			ЗапросПлана.УстановитьПараметр(ИмяПараметра, ВидСубконто.Ссылка);
			
			ИндексСтроки = ИндексСтроки + 1;
		КонецЦикла;
	КонецЦикла;
	
	ЗапросПлана.Текст = ЗапросПланаТекст;
	Возврат ЗапросПлана;
КонецФункции

// Сопоставление порядка отражений и видов счетов учета
// (+) АвансыВыданные = ПорядокОтраженияРасчетовСПартнерами.СчетУчетаАвансовВыданных
// (+) АвансыПолученные = ПорядокОтраженияРасчетовСПартнерами.СчетУчетаАвансовПолученных
// (+) ВыручкаОтПродаж = ПорядокОтраженияНоменклатуры.СчетУчетаВыручкиОтПродаж
// (+) ВыручкаОтПродажКомиссионера = ПорядокОтраженияНоменклатурыПереданнойНаКомиссию.СчетУчетаВыручкиОтПродаж
// (+) Доходы = ПорядокОтраженияДоходов.СчетУчета
// (+) НаСкладе = ПорядокОтраженияНоменклатуры.СчетУчетаНаСкладе
// (+) ПередачаНаКомиссию
// ПрочиеОперациия - реализован в ЗапросПрочихСчетов
// (+) Расходы = ПорядокОтраженияРасходов.СчетУчета
// (+) РасчетыПоВознаграждению = ПорядокОтраженияРасчетовСПартнерами.СчетУчетаРасчетовПоВознаграждению
// (+) РасчетыСКлиентами = ПорядокОтраженияРасчетовСПартнерами.СчетУчетаРасчетовСКлиентами
// (+) РасчетыСПоставщиками = ПорядокОтраженияРасчетовСПартнерами.СчетУчетаРасчетовСПоставщиками
// (+) СебестоимостьПродаж = ПорядокОтраженияНоменклатуры.СчетУчетаСебестоимостиПродаж
// (+) СебестоимостьПродажКомиссионера = ПорядокОтраженияНоменклатурыПереданнойНаКомиссию.СчетУчетаСебестоимостиПродаж
//
Функция ЗапросСчетов() Экспорт
	
	ТекстИнициализации = "
	|ВЫБРАТЬ
	|	Настройка.Организация КАК Организация,
	|	Настройка.АналитикаУчета КАК АналитикаУчета,
	|	Настройка.МестоУчета КАК МестоУчета,
	|	Настройка.ВидСчетаРеглУчета КАК ВидСчетаРеглУчета,
	|	Настройка.СчетУчета КАК СчетУчета,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.ИспользоватьСубконто ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ИспользоватьСубконто,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.ВидСубконто ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидСубконто,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.Субконто ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК Субконто
	|ПОМЕСТИТЬ Счета
	|ИЗ 
	|	НастройкаСчетов КАК Настройка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК План
	|		ПО План.Ссылка = Настройка.СчетУчета
	|";
	
	ТекстНастройкаСчетов = "("
		+ ТекстПорядокОтраженияРасчетовСПартнерами()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПорядокОтраженияНоменклатуры()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПорядокОтраженияНоменклатурыПереданнойНаКомиссию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПорядокОтраженияДоходов()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПорядокОтраженияРасходов()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПорядокОтраженияТМЦВЭксплуатации()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПорядокОтраженияПодарочныхСертификатов()
		+ ")";
	
	Возврат Новый Запрос(СтрЗаменить(ТекстИнициализации, "НастройкаСчетов", ТекстНастройкаСчетов));
	
КонецФункции

Функция ЗапросПрочихСчетов() Экспорт
	Возврат Новый Запрос("
		|ВЫБРАТЬ
		|	ПорядокУчета.Дата КАК Период,
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.Документ КАК Документ,
		|	ПорядокУчета.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчета КАК СчетУчета,
		|	ИСТИНА КАК ИспользоватьСубконто,
		|	ПорядокУчета.Субконто1 КАК Субконто1,
		|	ПорядокУчета.Субконто2 КАК Субконто2,
		|	ПорядокУчета.Субконто3 КАК Субконто3
		|ПОМЕСТИТЬ
		|	ПрочиеСчета
		|ИЗ
		|	РегистрСведений.ПорядокОтраженияПрочихОпераций КАК ПорядокУчета
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДокументыКОтражению КАК ДокументыКОтражению
		|	ПО
		|		ПорядокУчета.Документ = ДокументыКОтражению.Ссылка
		|");
КонецФункции

Функция ЗапросСчетовПоУмолчанию() Экспорт
	
	ТекстИнициализации = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Настройка.АналитикаУчета КАК АналитикаУчета,
	|	Настройка.ВидСчетаРеглУчета КАК ВидСчетаРеглУчета,
	|	Настройка.СчетУчета КАК СчетУчета,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.ИспользоватьСубконто ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ИспользоватьСубконто,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.ВидСубконто ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидСубконто,
	|	(ВЫБОР КОГДА Настройка.ИспользоватьСубконто И Настройка.ВидСубконто В (План.ВидСубконто1, План.ВидСубконто2, План.ВидСубконто3)
	|		ТОГДА Настройка.Субконто ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК Субконто
	|ПОМЕСТИТЬ СчетаПоУмолчанию
	|ИЗ 
	|	НастройкаСчетов КАК Настройка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК План
	|		ПО План.Ссылка = Настройка.СчетУчета
	|";
	
	ТекстНастройкаСчетов = "("
		+ ТекстСчетаОтраженияРасчетовСПартнерамиПоУмолчанию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСчетаОтраженияНоменклатурыПоУмолчанию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСчетаОтраженияНоменклатурыПереданнойНаКомиссиюПоУмолчанию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСчетаОтраженияДоходовПоУмолчанию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСчетаОтраженияРасходовПоУмолчанию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСчетаОтраженияТМЦВЭксплуатацииПоУмолчанию()
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСчетаОтраженияПодарочныхСертификатовПоУмолчанию()
		+ ")";
	
	Возврат Новый Запрос(СтрЗаменить(ТекстИнициализации, "НастройкаСчетов", ТекстНастройкаСчетов));
	
КонецФункции

Функция ЗапросСопоставлений() Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Данные.Ссылка                       КАК Ссылка,
		|	Данные.Период                       КАК Период,
		|	НАЧАЛОПЕРИОДА(Данные.Период, ДЕНЬ)  КАК ДатаОтражения,
		|	Данные.ИдентификаторСтроки          КАК ИдентификаторСтроки,
		|
		|	Данные.Организация                  КАК Организация,
		|
		|	Данные.Сумма                        КАК Сумма,
		|	
		|	Данные.ВидСчетаДт                   КАК ВидСчетаДт,
		|	Данные.АналитикаУчетаДт             КАК АналитикаУчетаДт,
		|	Данные.МестоУчетаДт                 КАК МестоУчетаДт,
		|
		|	Данные.ВалютаДт                     КАК ВалютаДт,
		|	Данные.ПодразделениеДт              КАК ПодразделениеДт,
		|	Данные.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
		|	Данные.НалоговоеНазначениеДт 	КАК НалоговоеНазначениеДт,
		|	
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(ПрочиеДт.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА ПрочиеДт.СчетУчета
		|		КОГДА ЕСТЬNULL(СчетаДт.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА СчетаДт.СчетУчета
		|		КОГДА ЕСТЬNULL(СчетаДтПоУмолчанию.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА СчетаДтПоУмолчанию.СчетУчета
		|		ИНАЧЕ ВЫРАЗИТЬ(Данные.СчетДт КАК ПланСчетов.Хозрасчетный)
		|	КОНЕЦ                              КАК СчетДт,
		|
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.Субконто1 
		|		ИНАЧЕ Данные.СубконтоДт1 
		|	КОНЕЦ                             КАК СубконтоДт1,
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.Субконто2 
		|		ИНАЧЕ Данные.СубконтоДт2 
		|	КОНЕЦ                             КАК СубконтоДт2,
		|	ВЫБОР 
		|		КОГДА ПрочиеДт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеДт.Субконто3 
		|		ИНАЧЕ Данные.СубконтоДт3 
		|	КОНЕЦ                             КАК СубконтоДт3,
		|	
		|	ВЫБОР 
		|		КОГДА СчетаДт.ИспользоватьСубконто 
		|			ТОГДА СчетаДт.ВидСубконто 
		|		КОГДА СчетаДт.СчетУчета ЕСТЬ NULL И СчетаДтПоУмолчанию.ИспользоватьСубконто
		|			ТОГДА СчетаДтПоУмолчанию.ВидСубконто 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                            КАК ВидСубконтоДт,
		|	ВЫБОР 
		|		КОГДА СчетаДт.ИспользоватьСубконто 
		|			ТОГДА СчетаДт.Субконто 
		|		КОГДА СчетаДт.СчетУчета ЕСТЬ NULL И СчетаДтПоУмолчанию.ИспользоватьСубконто 
		|			ТОГДА СчетаДтПоУмолчанию.Субконто 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                            КАК СубконтоДт,
		|
		|	Данные.ВалютнаяСуммаДт           КАК ВалютнаяСуммаДт,
		|	Данные.КоличествоДт              КАК КоличествоДт,
		|	Данные.СуммаНУДт                 КАК СуммаНУДт,
		|	Данные.СуммаПРДт                 КАК СуммаПРДт,
		|	Данные.СуммаВРДт                 КАК СуммаВРДт,
		|
		|	Данные.ВидСчетаКт                КАК ВидСчетаКт,
		|	Данные.АналитикаУчетаКт          КАК АналитикаУчетаКт,
		|	Данные.МестоУчетаКт              КАК МестоУчетаКт,
		|
		|	Данные.ВалютаКт                  КАК ВалютаКт,
		|	Данные.ПодразделениеКт           КАК ПодразделениеКт,
		|	Данные.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
		|	Данные.НалоговоеНазначениеКт 	 КАК НалоговоеНазначениеКт,
		|	
		|	ВЫБОР 
		|		КОГДА ЕСТЬNULL(ПрочиеКт.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА ПрочиеКт.СчетУчета
		|		КОГДА ЕСТЬNULL(СчетаКт.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА СчетаКт.СчетУчета
		|		КОГДА ЕСТЬNULL(СчетаКтПоУмолчанию.СчетУчета, &ПустаяСсылка) <> &ПустаяСсылка
		|			ТОГДА СчетаКтПоУмолчанию.СчетУчета
		|		ИНАЧЕ ВЫРАЗИТЬ(Данные.СчетКт КАК ПланСчетов.Хозрасчетный)
		|	КОНЕЦ                            КАК СчетКт,
		|	
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.Субконто1 
		|		ИНАЧЕ Данные.СубконтоКт1 
		|	КОНЕЦ                            КАК СубконтоКт1,
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.Субконто2 
		|		ИНАЧЕ Данные.СубконтоКт2 
		|	КОНЕЦ                            КАК СубконтоКт2,
		|	ВЫБОР 
		|		КОГДА ПрочиеКт.ИспользоватьСубконто 
		|			ТОГДА ПрочиеКт.Субконто3 
		|		ИНАЧЕ Данные.СубконтоКт3 
		|	КОНЕЦ                            КАК СубконтоКт3,
		|
		|	ВЫБОР 
		|		КОГДА СчетаКт.ИспользоватьСубконто 
		|			ТОГДА СчетаКт.ВидСубконто 
		|		КОГДА СчетаКт.СчетУчета ЕСТЬ NULL И СчетаКтПоУмолчанию.ИспользоватьСубконто 
		|			ТОГДА СчетаКтПоУмолчанию.ВидСубконто 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                           КАК ВидСубконтоКт,
		|	ВЫБОР 
		|		КОГДА СчетаКт.ИспользоватьСубконто 
		|			ТОГДА СчетаКт.Субконто 
		|		КОГДА СчетаКт.СчетУчета ЕСТЬ NULL И СчетаКтПоУмолчанию.ИспользоватьСубконто 
		|			ТОГДА СчетаКтПоУмолчанию.Субконто 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                           КАК СубконтоКт,
		|
		|	Данные.ВалютнаяСуммаКт          КАК ВалютнаяСуммаКт,
		|	Данные.КоличествоКт             КАК КоличествоКт,
		|	Данные.СуммаНУКт                КАК СуммаНУКт,
		|	Данные.СуммаПРКт                КАК СуммаПРКт,
		|	Данные.СуммаВРКт                КАК СуммаВРКт,
		|	
		|	Данные.Содержание               КАК Содержание
		|
		|ПОМЕСТИТЬ Хозрасчетный
		|
		|ИЗ 
		|	Данные КАК Данные
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО
		|		Данные.Ссылка = РазрезыКОтражению.Ссылка
		|		И Данные.Организация =  РазрезыКОтражению.Организация
		|		И НАЧАЛОПЕРИОДА(Данные.Период, ДЕНЬ) = РазрезыКОтражению.ДатаОтражения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаДт
		|	ПО 
		|		Данные.Организация = СчетаДт.Организация 
		|		И Данные.ВидСчетаДт = СчетаДт.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаДт = СчетаДт.АналитикаУчета 
		|		И Данные.МестоУчетаДт = СчетаДт.МестоУчета
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		СчетаПоУмолчанию КАК СчетаДтПоУмолчанию
		|	ПО 
		|		Данные.ВидСчетаДт = СчетаДтПоУмолчанию.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаДт = СчетаДтПоУмолчанию.АналитикаУчета
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПрочиеСчета КАК ПрочиеДт
		|	ПО 
		|		Данные.Ссылка = ПрочиеДт.Документ 
		|		И Данные.Организация = ПрочиеДт.Организация 
		|		И Данные.ВидСчетаДт = ПрочиеДт.ВидСчетаРеглУчета
		|		И Данные.ИдентификаторСтроки = ПрочиеДт.ИдентификаторСтроки
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Счета КАК СчетаКт
		|	ПО 
		|		Данные.Организация = СчетаКт.Организация 
		|		И Данные.ВидСчетаКт = СчетаКт.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаКт = СчетаКт.АналитикаУчета 
		|		И Данные.МестоУчетаКт = СчетаКт.МестоУчета
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		СчетаПоУмолчанию КАК СчетаКтПоУмолчанию
		|	ПО 
		|		Данные.ВидСчетаКт = СчетаКтПоУмолчанию.ВидСчетаРеглУчета
		|		И Данные.АналитикаУчетаКт = СчетаКтПоУмолчанию.АналитикаУчета
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПрочиеСчета КАК ПрочиеКт
		|	ПО 
		|		Данные.Ссылка = ПрочиеКт.Документ 
		|		И Данные.Организация = ПрочиеКт.Организация 
		|		И Данные.ВидСчетаКт = ПрочиеКт.ВидСчетаРеглУчета
		|		И Данные.ИдентификаторСтроки = ПрочиеКт.ИдентификаторСтроки
		|	
		|");
	Запрос.УстановитьПараметр("ПустаяСсылка", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросПроверки() Экспорт
	Возврат Новый Запрос("
		|ВЫБРАТЬ
		|	
		|	ХЗ.Ссылка                       КАК Ссылка,
		|	ХЗ.ИдентификаторСтроки          КАК ИдентификаторСтроки,
		|	ХЗ.Организация                  КАК Организация,
		|	ХЗ.ДатаОтражения                КАК ДатаОтражения,
		|	
		|	ХЗ.ВидСчетаДт                   КАК ВидСчетаДт,
		|	ХЗ.АналитикаУчетаДт             КАК АналитикаУчетаДт,
		|	ХЗ.МестоУчетаДт                 КАК МестоУчетаДт,
		|	ХЗ.СчетДт                       КАК СчетДт,
		|	(ВЫБОР
		|		КОГДА ПланДт.ЗапретитьИспользоватьВПроводках ТОГДА ""СЧЕТ_ЗАПРЕЩЕН""
		|		КОГДА ПланДт.Забалансовый И НЕ ПланКт.Забалансовый ТОГДА ""СЧЕТ_ЗАБАЛАНСОВЫЙ""
		|		КОГДА (НЕ ПланКт.Забалансовый ИЛИ (ПланКт.Ссылка ЕСТЬ NULL))
		|				И ПланДт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ПУСТОЙ""
		|		ИНАЧЕ """" КОНЕЦ)          КАК КодОшибкиДт,
		|
		|	ХЗ.ВидСчетаКт                  КАК ВидСчетаКт,
		|	ХЗ.АналитикаУчетаКт            КАК АналитикаУчетаКт,
		|	ХЗ.МестоУчетаКт                КАК МестоУчетаКт,
		|	ХЗ.СчетКт                      КАК СчетКт,
		|	(ВЫБОР
		|		КОГДА ПланКт.ЗапретитьИспользоватьВПроводках ТОГДА ""СЧЕТ_ЗАПРЕЩЕН""
		|		КОГДА ПланКт.Забалансовый И НЕ ПланДт.Забалансовый ТОГДА ""СЧЕТ_ЗАБАЛАНСОВЫЙ""
		|		КОГДА (НЕ ПланДт.Забалансовый ИЛИ (ПланДт.Ссылка ЕСТЬ NULL))
		|				И ПланКт.Ссылка ЕСТЬ NULL
		|			ТОГДА ""СЧЕТ_ПУСТОЙ""
		|		ИНАЧЕ """" КОНЕЦ)          КАК КодОшибкиКт
		|	
		|ПОМЕСТИТЬ ОшибкиПроверки
		|ИЗ
		|	Хозрасчетный КАК ХЗ
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК ПланДт
		|		ПО ПланДт.Ссылка = ХЗ.СчетДт
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланХозрасчетный КАК ПланКт
		|		ПО ПланКт.Ссылка = ХЗ.СчетКт
		|ГДЕ Ложь
		|	//// для балансового (не забалансового) счета должна быть задана корреспонденция
		|	ИЛИ НЕ ПланДт.Забалансовый И ПланКт.Ссылка ЕСТЬ NULL
		|	ИЛИ НЕ ПланКт.Забалансовый И ПланДт.Ссылка ЕСТЬ NULL
		|	//// Для забалансового счета корреспонденция может быть только с забалансовым
		|	ИЛИ ПланДт.Забалансовый И НЕ ПланКт.Забалансовый
		|	ИЛИ ПланКт.Забалансовый И НЕ ПланДт.Забалансовый
		|	//// оба счета не заданы
		|	ИЛИ ПланДт.Ссылка ЕСТЬ NULL И ПланКт.Ссылка ЕСТЬ NULL
		|	//// счет дебета или счет кредита запрещен к использованию
		|	ИЛИ ПланДт.ЗапретитьИспользоватьВПроводках
		|	ИЛИ ПланКт.ЗапретитьИспользоватьВПроводках
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ХЗ.Ссылка,
		|	ХЗ.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОП.Ссылка              КАК Ссылка,
		|	ОП.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ОП.Организация         КАК Организация,
		|	ОП.ДатаОтражения       КАК ДатаОтражения,
		|	ОП.ВидСчета            КАК ВидСчета, 
		|	ОП.АналитикаУчета      КАК АналитикаУчета, 
		|	ОП.МестоУчета          КАК МестоУчета, 
		|	ОП.Счет                КАК Счет, 
		|	ОП.КодОшибки           КАК КодОшибки
		|ИЗ (
		|	ВЫБРАТЬ
		|		ОП.Ссылка КАК Ссылка,
		|		ОП.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|		ОП.Организация КАК Организация,
		|		ОП.ДатаОтражения КАК ДатаОтражения,
		|		ОП.ВидСчетаДт КАК ВидСчета,
		|		ОП.АналитикаУчетаДт КАК АналитикаУчета,
		|		ОП.МестоУчетаДт КАК МестоУчета,
		|		ОП.СчетДт КАК Счет,
		|		ОП.КодОшибкиДт КАК КодОшибки
		|	ИЗ
		|		ОшибкиПроверки КАК ОП
		|	ГДЕ
		|		ОП.КодОшибкиДт <> """"
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ОП.Ссылка КАК Ссылка,
		|		ОП.ИдентификаторСтроки,
		|		ОП.Организация КАК Организация,
		|		ОП.ДатаОтражения КАК ДатаОтражения,
		|		ОП.ВидСчетаКт КАК ВидСчета,
		|		ОП.АналитикаУчетаКт КАК АналитикаУчета,
		|		ОП.МестоУчетаКт КАК МестоУчета,
		|		ОП.СчетКт КАК Счет,
		|		ОП.КодОшибкиКт КАК КодОшибки
		|	ИЗ
		|		ОшибкиПроверки КАК ОП
		|	ГДЕ
		|		ОП.КодОшибкиКт <> """"
		|) КАК ОП
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка, Организация, ДатаОтражения
		|
		|ИТОГИ ПО
		|	Ссылка, Организация, ДатаОтражения
		|");
КонецФункции

Функция ЗапросХозрасчетный() Экспорт
	Возврат Новый Запрос("
		|ВЫБРАТЬ
		|	ХЗ.Ссылка КАК Ссылка,
		|	ХЗ.Период КАК Период,
		|	ХЗ.Организация КАК Организация,
		|
		|	ХЗ.Сумма КАК Сумма,
		|
		|	(ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютаДт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ) КАК ВалютаДт,
		|	(ВЫБОР КОГДА ПланДт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеДт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК ПодразделениеДт,
		|	ХЗ.НаправлениеДеятельностиДт КАК НаправлениеДеятельностиДт,
		|	(ВЫБОР КОГДА ПланДт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеДт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КОНЕЦ) КАК НалоговоеНазначениеДт,
		|	ХЗ.СчетДт КАК СчетДт,
		|
		|	(ВЫБОР КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоДт1,
		|	(ВЫБОР КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт1 КОНЕЦ) КАК СубконтоДт1,
		|
		|	(ВЫБОР
		|		КОГДА (ВидыДт1.Ссылка <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт2.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоДт2,
		|	(ВЫБОР
		|		КОГДА (ВидыДт1.Ссылка <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт2.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт2 КОНЕЦ) КАК СубконтоДт2,
		|
		|	(ВЫБОР
		|		КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.ВидСубконтоДт
		|		ИНАЧЕ ЕСТЬNULL(ВидыДт3.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоДт3,
		|	(ВЫБОР
		|		КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|			ТОГДА ХЗ.СубконтоДт
		|		КОГДА (ВидыДт3.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоДт3 КОНЕЦ) КАК СубконтоДт3,
		|
		|	(ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютнаяСуммаДт ИНАЧЕ 0.0 КОНЕЦ) КАК ВалютнаяСуммаДт,
		|	(ВЫБОР КОГДА ПланДт.Количественный ТОГДА ХЗ.КоличествоДт ИНАЧЕ 0.0 КОНЕЦ) КАК КоличествоДт,
		|	(ВЫБОР КОГДА ПланДт.НалоговыйУчет ТОГДА ХЗ.СуммаНУДт ИНАЧЕ 0.0 КОНЕЦ) КАК СуммаНУДт,
		|	0.0 КАК СуммаПРДт,
		|	0.0 КАК СуммаВРДт,
		|
		|	(ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютаКт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ) КАК ВалютаКт,
		|	(ВЫБОР КОГДА ПланКт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеКт
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК ПодразделениеКт,
		|	ХЗ.НаправлениеДеятельностиКт КАК НаправлениеДеятельностиКт,
		|	(ВЫБОР КОГДА ПланКт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеКт ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КОНЕЦ) КАК НалоговоеНазначениеКт,
		|	ХЗ.СчетКт КАК СчетКт,
		|
		|	(ВЫБОР КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт1.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоКт1,
		|	(ВЫБОР КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт1 КОНЕЦ) КАК СубконтоКт1,
		|
		|	(ВЫБОР
		|		КОГДА (ВидыКт1.Ссылка <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт2.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоКт2,
		|	(ВЫБОР
		|		КОГДА (ВидыКт1.Ссылка <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт2.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт2 КОНЕЦ) КАК СубконтоКт2,
		|
		|	(ВЫБОР
		|		КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.ВидСубконтоКт
		|		ИНАЧЕ ЕСТЬNULL(ВидыКт3.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПустаяСсылка)) КОНЕЦ) КАК ВидСубконтоКт3,
		|	(ВЫБОР
		|		КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|			ТОГДА ХЗ.СубконтоКт
		|		КОГДА (ВидыКт3.Ссылка ЕСТЬ NULL)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ХЗ.СубконтоКт3 КОНЕЦ) КАК СубконтоКт3,
		|
		|	(ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютнаяСуммаКт ИНАЧЕ 0.0 КОНЕЦ) КАК ВалютнаяСуммаКт,
		|	(ВЫБОР КОГДА ПланКт.Количественный ТОГДА ХЗ.КоличествоКт ИНАЧЕ 0.0 КОНЕЦ) КАК КоличествоКт,
		|	(ВЫБОР КОГДА ПланКт.НалоговыйУчет ТОГДА ХЗ.СуммаНУКт ИНАЧЕ 0.0 КОНЕЦ) КАК СуммаНУКт,
		|	0.0 КАК СуммаПРКт,
		|	0.0 КАК СуммаВРКт,
		|	
		|	ХЗ.Содержание КАК Содержание
		|
		|ИЗ
		|	Хозрасчетный КАК ХЗ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ОшибкиПроверки КАК ОшибкиПроверки 
		|	ПО
		|		ХЗ.Ссылка = ОшибкиПроверки.Ссылка
		|		И ХЗ.Организация = ОшибкиПроверки.Организация
		|		И ХЗ.ДатаОтражения = ОшибкиПроверки.ДатаОтражения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК ПланДт
		|	ПО 
		|		ХЗ.СчетДт = ПланДт.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт1
		|	ПО 
		|		ВидыДт1.Ссылка В (ПланДт.ВидСубконто1, ПланДт.ВидСубконто2, ПланДт.ВидСубконто3)
		|		И ВидыДт1.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоДт1)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт2
		|	ПО 
		|		ВидыДт2.Ссылка В (ПланДт.ВидСубконто1, ПланДт.ВидСубконто2, ПланДт.ВидСубконто3)
		|		И ВидыДт2.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоДт2)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыДт3
		|	ПО 
		|		ВидыДт3.Ссылка В (ПланДт.ВидСубконто1, ПланДт.ВидСубконто2, ПланДт.ВидСубконто3)
		|		И ВидыДт3.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоДт3)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ПланХозрасчетный КАК ПланКт
		|	ПО 
		|		ХЗ.СчетКт = ПланКт.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт1
		|	ПО 
		|		ВидыКт1.Ссылка В (ПланКт.ВидСубконто1, ПланКт.ВидСубконто2, ПланКт.ВидСубконто3)
		|		И ВидыКт1.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоКт1)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		ВидыСубконто КАК ВидыКт2
		|	ПО 
		|		ВидыКт2.Ссылка В (ПланКт.ВидСубконто1, ПланКт.ВидСубконто2, ПланКт.ВидСубконто3)
		|		И ВидыКт2.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоКт2)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВидыСубконто КАК ВидыКт3
		|	ПО 
		|		ВидыКт3.Ссылка В (ПланКт.ВидСубконто1, ПланКт.ВидСубконто2, ПланКт.ВидСубконто3)
		|		И ВидыКт3.ТипЗначения = ТИПЗНАЧЕНИЯ(ХЗ.СубконтоКт3)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
		|	ПО
		|		ХЗ.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
		|		И ХЗ.Организация = УчетнаяПолитикаОрганизаций.Организация
		|		И ХЗ.ДатаОтражения = УчетнаяПолитикаОрганизаций.ДатаОтражения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитики
		|	ПО
		|		УчетнаяПолитикаОрганизаций.УчетнаяПолитика = УчетныеПолитики.Ссылка
		|ГДЕ
		|	ОшибкиПроверки.Ссылка ЕСТЬ NULL
		|	И (ХЗ.Сумма <> 0
		|		ИЛИ (ВЫБОР КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютнаяСуммаДт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР КОГДА ПланДт.Количественный ТОГДА ХЗ.КоличествоДт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.НалоговыйУчет
		|					ТОГДА ХЗ.СуммаНУДт <> 0
		|				ИНАЧЕ ЛОЖЬ 
		|			КОНЕЦ)  
		|		ИЛИ (ВЫБОР КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютнаяСуммаКт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР КОГДА ПланКт.Количественный ТОГДА ХЗ.КоличествоКт <> 0 ИНАЧЕ ЛОЖЬ КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланКт.НалоговыйУчет
		|					ТОГДА ХЗ.СуммаНУКт <> 0
		|				ИНАЧЕ ЛОЖЬ 
		|			КОНЕЦ))
		|	И (ХЗ.СчетДт <> ХЗ.СчетКт
		|		ИЛИ (ВЫБОР 
		|				КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт) 
		|					ТОГДА ХЗ.СубконтоДт
		|				КОГДА (ВидыДт1.Ссылка ЕСТЬ NULL) 
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоДт1 КОНЕЦ) <>
		|			(ВЫБОР 
		|				КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт) 
		|					ТОГДА ХЗ.СубконтоКт
		|				КОГДА (ВидыКт1.Ссылка ЕСТЬ NULL) 
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоКт1 КОНЕЦ)
		|		ИЛИ (ВЫБОР
		|				КОГДА (ВидыДт1.Ссылка <> ХЗ.ВидСубконтоДт) И (ВидыДт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|					ТОГДА ХЗ.СубконтоДт
		|				КОГДА (ВидыДт2.Ссылка ЕСТЬ NULL)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоДт2 КОНЕЦ) <>
		|			(ВЫБОР
		|				КОГДА (ВидыКт1.Ссылка <> ХЗ.ВидСубконтоКт) И (ВидыКт2.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|					ТОГДА ХЗ.СубконтоКт
		|				КОГДА 
		|					(ВидыКт2.Ссылка ЕСТЬ NULL)
		|				ТОГДА НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ ХЗ.СубконтоКт2 КОНЕЦ)
		|		ИЛИ (ВЫБОР
		|				КОГДА (НЕ ХЗ.ВидСубконтоДт В (ВидыДт1.Ссылка, ВидыДт2.Ссылка)) И (ВидыДт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоДт)
		|					ТОГДА ХЗ.СубконтоДт
		|				КОГДА (ВидыДт3.Ссылка ЕСТЬ NULL)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоДт3 КОНЕЦ) <>
		|			(ВЫБОР
		|				КОГДА (НЕ ХЗ.ВидСубконтоКт В (ВидыКт1.Ссылка, ВидыКт2.Ссылка)) И (ВидыКт3.Ссылка ЕСТЬ NULL) И (НЕОПРЕДЕЛЕНО <> ХЗ.ВидСубконтоКт)
		|					ТОГДА ХЗ.СубконтоКт
		|				КОГДА (ВидыКт3.Ссылка ЕСТЬ NULL)
		|					ТОГДА НЕОПРЕДЕЛЕНО
		|				ИНАЧЕ ХЗ.СубконтоКт3 КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.Валютный ТОГДА ХЗ.ВалютаДт 
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 
		|			КОНЕЦ) <>
		|			(ВЫБОР 
		|				КОГДА ПланКт.Валютный ТОГДА ХЗ.ВалютаКт 
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 
		|			КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеДт
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			КОНЕЦ) <> 
		|			(ВЫБОР 
		|				КОГДА ПланКт.УчетПоПодразделениям ТОГДА ХЗ.ПодразделениеКт
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			КОНЕЦ)
		|		ИЛИ (ВЫБОР 
		|				КОГДА ПланДт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеДт
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|			КОНЕЦ) <> 
		|			(ВЫБОР 
		|				КОГДА ПланКт.УчетПоНалоговымНазначениямНДС ТОГДА ХЗ.НалоговоеНазначениеКт
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|			КОНЕЦ) 		
		|		ИЛИ (ХЗ.НаправлениеДеятельностиКт <> ХЗ.НаправлениеДеятельностиДт))
		|		
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|	
		|ИТОГИ ПО
		|	Ссылка
		|");
КонецФункции

Функция ЗапросХозрасчетныйДополнение() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ
		|	Хозрасчетный.Регистратор                  КАК Ссылка,
		|	НАЧАЛОПЕРИОДА(Хозрасчетный.Период, ДЕНЬ)  КАК ДатаОтражения,
		|	Хозрасчетный.Период                       КАК Период,
		|	Хозрасчетный.СчетДт                       КАК СчетДт,
		|	Хозрасчетный.СубконтоДт1                  КАК СубконтоДт1,
		|	Хозрасчетный.ВидСубконтоДт1               КАК ВидСубконтоДт1,
		|	Хозрасчетный.СубконтоДт2                  КАК СубконтоДт2,
		|	Хозрасчетный.ВидСубконтоДт2               КАК ВидСубконтоДт2,
		|	Хозрасчетный.СубконтоДт3                  КАК СубконтоДт3,
		|	Хозрасчетный.ВидСубконтоДт3               КАК ВидСубконтоДт3,
		|	Хозрасчетный.СчетКт                       КАК СчетКт,
		|	Хозрасчетный.СубконтоКт1                  КАК СубконтоКт1,
		|	Хозрасчетный.ВидСубконтоКт1               КАК ВидСубконтоКт1,
		|	Хозрасчетный.СубконтоКт2                  КАК СубконтоКт2,
		|	Хозрасчетный.ВидСубконтоКт2               КАК ВидСубконтоКт2,
		|	Хозрасчетный.СубконтоКт3                  КАК СубконтоКт3,
		|	Хозрасчетный.ВидСубконтоКт3               КАК ВидСубконтоКт3,
		|	Хозрасчетный.Организация                  КАК Организация,
		|	Хозрасчетный.ВалютаДт                     КАК ВалютаДт,
		|	Хозрасчетный.ВалютаКт                     КАК ВалютаКт,
		|	Хозрасчетный.ПодразделениеДт              КАК ПодразделениеДт,
		|	Хозрасчетный.НаправлениеДеятельностиДт    КАК НаправлениеДеятельностиДт,
		|	Хозрасчетный.НалоговоеНазначениеДт    	  КАК НалоговоеНазначениеДт,
		|	Хозрасчетный.ПодразделениеКт              КАК ПодразделениеКт,
		|	Хозрасчетный.НаправлениеДеятельностиКт    КАК НаправлениеДеятельностиКт,
		|	Хозрасчетный.НалоговоеНазначениеКт    	  КАК НалоговоеНазначениеКт,
		|	Хозрасчетный.Сумма                        КАК Сумма,
		|	Хозрасчетный.ВалютнаяСуммаДт              КАК ВалютнаяСуммаДт,
		|	Хозрасчетный.ВалютнаяСуммаКт              КАК ВалютнаяСуммаКт,
		|	Хозрасчетный.КоличествоДт                 КАК КоличествоДт,
		|	Хозрасчетный.КоличествоКт                 КАК КоличествоКт,
		|	Хозрасчетный.СуммаНУДт                    КАК СуммаНУДт,
		|	Хозрасчетный.СуммаНУКт                    КАК СуммаНУКт,
		|	Хозрасчетный.СуммаПРДт                    КАК СуммаПРДт,
		|	Хозрасчетный.СуммаПРКт                    КАК СуммаПРКт,
		|	Хозрасчетный.СуммаВРДт                    КАК СуммаВРДт,
		|	Хозрасчетный.СуммаВРКт                    КАК СуммаВРКт,
		|	Хозрасчетный.Содержание                   КАК Содержание,
		|	Хозрасчетный.НеКорректироватьСтоимостьАвтоматически КАК НеКорректироватьСтоимостьАвтоматически
		|ПОМЕСТИТЬ ТекущееСостояние
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			Регистратор В
		|				(ВЫБРАТЬ
		|					Таблица.Ссылка КАК Ссылка
		|				ИЗ
		|					ДокументыКОтражению КАК Таблица),
		|			,
		|			) КАК Хозрасчетный
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка                       КАК Ссылка,
		|	Хозрасчетный.Период                       КАК Период,
		|	Хозрасчетный.СчетДт                       КАК СчетДт,
		|	Хозрасчетный.СубконтоДт1                  КАК СубконтоДт1,
		|	Хозрасчетный.ВидСубконтоДт1               КАК ВидСубконтоДт1,
		|	Хозрасчетный.СубконтоДт2                  КАК СубконтоДт2,
		|	Хозрасчетный.ВидСубконтоДт2               КАК ВидСубконтоДт2,
		|	Хозрасчетный.СубконтоДт3                  КАК СубконтоДт3,
		|	Хозрасчетный.ВидСубконтоДт3               КАК ВидСубконтоДт3,
		|	Хозрасчетный.СчетКт                       КАК СчетКт,
		|	Хозрасчетный.СубконтоКт1                  КАК СубконтоКт1,
		|	Хозрасчетный.ВидСубконтоКт1               КАК ВидСубконтоКт1,
		|	Хозрасчетный.СубконтоКт2                  КАК СубконтоКт2,
		|	Хозрасчетный.ВидСубконтоКт2               КАК ВидСубконтоКт2,
		|	Хозрасчетный.СубконтоКт3                  КАК СубконтоКт3,
		|	Хозрасчетный.ВидСубконтоКт3               КАК ВидСубконтоКт3,
		|	Хозрасчетный.Организация                  КАК Организация,
		|	Хозрасчетный.ВалютаДт                     КАК ВалютаДт,
		|	Хозрасчетный.ВалютаКт                     КАК ВалютаКт,
		|	Хозрасчетный.ПодразделениеДт              КАК ПодразделениеДт,
		|	Хозрасчетный.НаправлениеДеятельностиДт    КАК НаправлениеДеятельностиДт,
		|	Хозрасчетный.НалоговоеНазначениеДт    	  КАК НалоговоеНазначениеДт,
		|	Хозрасчетный.ПодразделениеКт              КАК ПодразделениеКт,
		|	Хозрасчетный.НаправлениеДеятельностиКт    КАК НаправлениеДеятельностиКт,
		|	Хозрасчетный.НалоговоеНазначениеКт    	  КАК НалоговоеНазначениеКт,
		|	Хозрасчетный.Сумма                        КАК Сумма,
		|	Хозрасчетный.ВалютнаяСуммаДт              КАК ВалютнаяСуммаДт,
		|	Хозрасчетный.ВалютнаяСуммаКт              КАК ВалютнаяСуммаКт,
		|	Хозрасчетный.КоличествоДт                 КАК КоличествоДт,
		|	Хозрасчетный.КоличествоКт                 КАК КоличествоКт,
		|	Хозрасчетный.СуммаНУДт                    КАК СуммаНУДт,
		|	Хозрасчетный.СуммаНУКт                    КАК СуммаНУКт,
		|	Хозрасчетный.СуммаПРДт                    КАК СуммаПРДт,
		|	Хозрасчетный.СуммаПРКт                    КАК СуммаПРКт,
		|	Хозрасчетный.СуммаВРДт                    КАК СуммаВРДт,
		|	Хозрасчетный.СуммаВРКт                    КАК СуммаВРКт,
		|	Хозрасчетный.Содержание                   КАК Содержание,
		|	Хозрасчетный.НеКорректироватьСтоимостьАвтоматически КАК НеКорректироватьСтоимостьАвтоматически
		|ИЗ
		|	ТекущееСостояние КАК Хозрасчетный
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО 
		|		Хозрасчетный.Ссылка = РазрезыКОтражению.Ссылка
		|		И Хозрасчетный.ДатаОтражения = РазрезыКОтражению.ДатаОтражения
		|		И Хозрасчетный.Организация = РазрезыКОтражению.Организация
		|	
		|ГДЕ
		|	РазрезыКОтражению.Ссылка ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	Хозрасчетный.Ссылка
		|
		|ИТОГИ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТекущееСостояние");
	
КонецФункции

Функция ЗапросОтражениеДокументовВРеглУчете() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Регистратор                  КАК Ссылка,
		|	Статусы.Период                       КАК Период,
		|	Статусы.Организация                  КАК Организация,
		|	Статусы.ДатаОтражения                КАК ДатаОтражения,
		|	ВЫБОР
		|		КОГДА НЕ РазрезыКОтражению.Ссылка ЕСТЬ NULL
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Статусы.Статус
		|	КОНЕЦ                                КАК Статус
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ОтражениеДокументовВРеглУчете КАК Статусы
		|	ПО 
		|		ДокументыКОтражению.Ссылка = Статусы.Регистратор
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО
		|		Статусы.Регистратор = РазрезыКОтражению.Ссылка
		|		И Статусы.Период = РазрезыКОтражению.Период
		|		И Статусы.Организация = РазрезыКОтражению.Организация
		|		И Статусы.ДатаОтражения = РазрезыКОтражению.ДатаОтражения
		|		
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Организация,
		|	ДатаОтражения
		|
		|ИТОГИ
		|	МАКСИМУМ(Период)
		|ПО
		|	Ссылка");
	
КонецФункции

Функция ЗапросСвязанныеОперацииБух() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ
		|	ДокументыКОтражению.Ссылка            КАК Ссылка,
		|	ОперацияБух.Ссылка                    КАК Регистратор,
		|	ОперацияБух.Дата                      КАК Период,
		|	ОперацияБух.Организация               КАК Организация,
		|	НАЧАЛОПЕРИОДА(ОперацияБух.Дата, ДЕНЬ) КАК ДатаОтражения,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВУчетеВручную) КАК Статус
		|ИЗ
		|	Документ.ОперацияБух.ЗаполнениеДвижений КАК ОперацияБухОснования
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДокументыКОтражению КАК ДокументыКОтражению
		|	ПО
		|		ОперацияБухОснования.Документ = ДокументыКОтражению.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Документ.ОперацияБух КАК ОперацияБух
		|	ПО
		|		ОперацияБухОснования.Ссылка = ОперацияБух.Ссылка
		|ГДЕ
		|	НЕ ОперацияБух.ПометкаУдаления
		|	
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|
		|ИТОГИ ПО
		|	Ссылка");
	
КонецФункции

//++ НЕ УТКА

Функция ЗапросОтражениеДокументовВМеждународномУчете() Экспорт
	
	Возврат Новый Запрос(
		"ВЫБРАТЬ
		|	Статусы.Регистратор КАК Ссылка,
		|	Статусы.Период КАК Период,
		|	Статусы.Организация КАК Организация,
		|	Статусы.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА НЕ РазрезыКОтражению.Ссылка ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОбновитьСтатус,
		|	ВЫБОР
		|		КОГДА Статусы.Статус В (
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияВМеждународномУчете.КОтражениюВУчетеВручную),
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияВМеждународномУчете.ОтраженоВУчетеВручную))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК РучноеОтражение,
		|	Статусы.УчетнаяПолитика КАК УчетнаяПолитика,
		|	Статусы.Комментарий     КАК Комментарий
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.ОтражениеДокументовВМеждународномУчете КАК Статусы
		|	ПО 
		|		ДокументыКОтражению.Ссылка = Статусы.Регистратор
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РазрезыКОтражению КАК РазрезыКОтражению
		|	ПО
		|		Статусы.Регистратор = РазрезыКОтражению.Ссылка
		|		И НАЧАЛОПЕРИОДА(Статусы.Период, ДЕНЬ) = РазрезыКОтражению.ДатаОтражения
		|		И Статусы.Организация = РазрезыКОтражению.Организация
		|	
		|ГДЕ
		|	&ПроводкиМеждународногоУчетаПоДаннымРегл
		|	
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Организация,
		|	Период
		|
		|ИТОГИ
		|	МАКСИМУМ(Период)
		|ПО
		|	Ссылка");
	
КонецФункции

//-- НЕ УТКА

Функция ЗапросОчистки(ИмяДокумента) Экспорт
	
	ТекстЗапросаОчистки = "
	|УНИЧТОЖИТЬ ВтСтрокиДляКорректировкиНДСПартий;
	|УНИЧТОЖИТЬ ВтСтроки;
	|УНИЧТОЖИТЬ ВтСтоимости;
	|УНИЧТОЖИТЬ ПериодыУчетнойПолитики;
	|УНИЧТОЖИТЬ УчетнаяПолитикаОрганизаций;
	|УНИЧТОЖИТЬ КорректировкиНДСПартий;	
	|УНИЧТОЖИТЬ РазрезыКОтражению;
	|УНИЧТОЖИТЬ ДокументыКОтражению;
	|УНИЧТОЖИТЬ Данные;
	|УНИЧТОЖИТЬ ПрочиеСчета;
	|УНИЧТОЖИТЬ Хозрасчетный;
	|УНИЧТОЖИТЬ ОшибкиПроверки;";
	
	ТекстЗапросаВТОтражения = ТекстВТОтраженияДокумента(ИмяДокумента);
	
	Если ТекстЗапросаВТОтражения <> "" Тогда
		ВТЗапросаДанных = ВТЗапроса(ТекстЗапросаВТОтражения);
		Для каждого ВТ Из ВТЗапросаДанных Цикл
			ТекстЗапросаОчистки = ТекстЗапросаОчистки + "
				|УНИЧТОЖИТЬ " + ВТ + ";";
		КонецЦикла;
	КонецЕсли;
	
	Возврат Новый Запрос(ТекстЗапросаОчистки);
	
КонецФункции

// Параметры шаблона: %Индекс%, %Видсчета%, %Организация%, %МестоАналитика%, %Счет%
Функция ШаблонКомментарияОшибок(КодОшибки) Экспорт
	Если КодОшибки = "СЧЕТ_ЗАПРЕЩЕН" Тогда
		Возврат НСтр("ru='Для учета ""%ВидСчета%"" %Измерение%%МестоАналитика% указан запрещенный счет ""%Счет%"".';uk='Для обліку ""%ВидСчета%"" %Измерение%%МестоАналитика% вказаний заборонений рахунок ""%Счет%"".'");
	ИначеЕсли КодОшибки = "СЧЕТ_ЗАБАЛАНСОВЫЙ" Тогда
		Возврат НСтр("ru='Для учета ""%ВидСчета%"" %Измерение%%МестоАналитика% указан забалансовый счет ""%Счет%"".';uk='Для обліку ""%ВидСчета%"" %Измерение%%МестоАналитика% вказаний забалансовий рахунок ""%Счет%"".'");
	ИначеЕсли КодОшибки = "СЧЕТ_ПУСТОЙ" Тогда
		Возврат НСтр("ru='Для учета ""%ВидСчета%"" %Измерение%%МестоАналитика% не указан счет.';uk='Для обліку ""%ВидСчета%"" %Измерение%%МестоАналитика% не вказаний рахунок.'");
	Иначе
		Возврат НСтр("ru='Неизвестная ошибка формирования проводок!';uk='Невідома помилка формування проводок!'");
	КонецЕсли
КонецФункции

Функция СтрокаМестоАналитика(МестоУчета, АналитикаУчета) Экспорт
	Место = "";
	Если ЗначениеЗаполнено(МестоУчета) Тогда
		ТипМеста = ТипЗнч(МестоУчета);
		Если ТипМеста = Тип("СправочникСсылка.Склады") Тогда
			Место = НСтр("ru=' на складе ""%МестоУчета%""';uk=' на складі ""%МестоУчета%""'");
		ИначеЕсли ТипМеста = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Место = НСтр("ru=' в подразделении ""%МестоУчета%""';uk=' у підрозділі ""%МестоУчета%""'");
		ИначеЕсли ТипМеста = Тип("СправочникСсылка.Партнеры") Тогда
			Место = НСтр("ru=' по партнеру ""%МестоУчета%""';uk=' по партнеру ""%МестоУчета%""'");
		КонецЕсли;
		Место = СтрЗаменить(Место, "%МестоУчета%", Строка(МестоУчета));
	КонецЕсли;
	
	Аналитика = "";
	Если ЗначениеЗаполнено(АналитикаУчета) тогда
		ТипАналитики = ТипЗнч(АналитикаУчета);
		ЭтоГФУ = (ТипАналитики = Тип("СправочникСсылка.ГруппыФинансовогоУчетаРасчетов")
			Или ТипАналитики = Тип("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"));
		ЭтоСтатья = (ТипАналитики = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов")
			Или ТипАналитики = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
		ЭтоКатегорияЭксплуатации = (ТипАналитики = Тип("СправочникСсылка.КатегорииЭксплуатации"));
		
		Если ЭтоГФУ Тогда
			Аналитика = НСтр("ru=' по группе фин. учета ""%АналитикаУчета%""';uk=' по групі фін. обліку ""%АналитикаУчета%""'");
		ИначеЕсли ЭтоСтатья Тогда
			Аналитика = НСтр("ru=' по статье ""%АналитикаУчета%""';uk=' за статтею ""%АналитикаУчета%""'");
		ИначеЕсли ЭтоКатегорияЭксплуатации Тогда
			Аналитика = НСтр("ru=' для категории эксплуатации ""%АналитикаУчета%""';uk=' для категорії експлуатації ""%АналитикаУчета%""'");
		КонецЕсли;
		Аналитика = СтрЗаменить(Аналитика, "%АналитикаУчета%", Строка(АналитикаУчета));
	КонецЕсли;
	
	Возврат Место + Аналитика;
КонецФункции

Функция ЭтоОбъектРасчетов(ДокументИмя) Экспорт
	ТипыСКлиентами = РеглУчетВыборкиСерверПовтИсп.ТипыОбъектовРасчетовСКлиентами();
	ТипыСПоставщиками = РеглУчетВыборкиСерверПовтИсп.ТипыОбъектовРасчетовСПоставщиками();
	ДокументТип = Тип("ДокументСсылка." + ДокументИмя);
	Возврат ТипыСКлиентами.СодержитТип(ДокументТип) ИЛИ ТипыСПоставщиками.СодержитТип(ДокументТип);
КонецФункции

Функция ТипыДокументовКПоследовательномуОтражению() Экспорт
	
	Результат = Новый Массив;
	
	// Документы учета ОС
	Результат.Добавить(Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов"));
	Результат.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуОС"));
	Результат.Добавить(Тип("ДокументСсылка.МодернизацияОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПеремещениеОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеОС"));
	Результат.Добавить(Тип("ДокументСсылка.СписаниеОС"));
	Результат.Добавить(Тип("ДокументСсылка.АмортизацияОС"));
	Результат.Добавить(Тип("ДокументСсылка.ИзменениеПараметровОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПередачаОСАрендатору"));
	Результат.Добавить(Тип("ДокументСсылка.ВозвратОСОтАрендатора"));
	Результат.Добавить(Тип("ДокументСсылка.ПоступлениеАрендованныхОС"));
	Результат.Добавить(Тип("ДокументСсылка.ВыбытиеАрендованныхОС"));
	Результат.Добавить(Тип("ДокументСсылка.ПереоценкаОС"));
	Результат.Добавить(Тип("ДокументСсылка.РемонтОС"));
	Результат.Добавить(Тип("ДокументСсылка.КорректировкаНалоговогоНазначенияОС"));		
	 
	// Документы учета НМА
	Результат.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуНМА"));
	Результат.Добавить(Тип("ДокументСсылка.СписаниеНМА"));
	Результат.Добавить(Тип("ДокументСсылка.АмортизацияНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ПодготовкаКПередачеНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ПереоценкаНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ПеремещениеНМА"));
	Результат.Добавить(Тип("ДокументСсылка.МодернизацияНМА"));
	Результат.Добавить(Тип("ДокументСсылка.ИзменениеПараметровНМА"));
	
	// Документы учета малоценки
	Результат.Добавить(Тип("ДокументСсылка.СписаниеИзЭксплуатации"));
	Результат.Добавить(Тип("ДокументСсылка.ПеремещениеВЭксплуатации"));
	
	// Регламентные документы не требуется отражать пакетно
	Результат.Добавить(Тип("ДокументСсылка.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций"));
    Результат.Добавить(Тип("ДокументСсылка.ПерерасчетПропорциональногоНДСпоТоварамИОС"));
	Результат.Добавить(Тип("ДокументСсылка.РасчетСебестоимостиТоваров"));
	Результат.Добавить(Тип("ДокументСсылка.РегламентнаяОперация"));
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеУчетнойПолитики(Организация, Период) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ПлательщикНалогаНаПрибыль");
	
	Если УчетнаяПолитика.Существует(Организация, Период) Тогда
		Результат.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	Иначе
		// Если нет учетной политики, то считаем, что все включено, 
		// для того, чтобы избежать потери данных, подготовленным прикладным кодом.
		// Это может быть полезно, например, при вводе начальных остатков.
		// В этом случае документ сам заботится о правильности интерпретации учетной политики.
		Результат.ПлательщикНалогаНаПрибыль = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИспользуемыеТаблицыДляОтраженияТипа(ИмяТипаДокумента) Экспорт

	ТаблицыТиповДокументов = Новый Соответствие;

	// ++РУЧНОЙ СБОР
	// АмортизацияНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
	ТаблицыТиповДокументов.Вставить("АмортизацияНМА", ТаблицыДокумента);
	
	// АмортизацияОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("АмортизацияОС", ТаблицыДокумента);
	
	// ПеремещениеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("ПеремещениеОС", ТаблицыДокумента);
	
	// КорректировкаНалоговогоНазначенияОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаНалоговогоНазначенияОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыДокумента.Добавить("РегистрСведений.НалоговыеНазначенияОС");
	ТаблицыТиповДокументов.Вставить("КорректировкаНалоговогоНазначенияОС", ТаблицыДокумента);		
	
	// ПереоценкаНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаНМА");
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
	ТаблицыТиповДокументов.Вставить("ПереоценкаНМА", ТаблицыДокумента);
	
	// ПереоценкаОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("ПереоценкаОС", ТаблицыДокумента);
	
	// ПодготовкаКПередачеНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПодготовкаКПередачеНМА");
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
	ТаблицыТиповДокументов.Вставить("ПодготовкаКПередачеНМА", ТаблицыДокумента);
	
	// ПодготовкаКПередачеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПодготовкаКПередачеОС");
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("ПодготовкаКПередачеОС", ТаблицыДокумента);
	// --РУЧНОЙ СБОР
	
	// АвансовыйОтчет
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АвансовыйОтчет");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("АвансовыйОтчет", ТаблицыДокумента);

	// АктВыполненныхРабот 
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АктВыполненныхРабот");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("АктВыполненныхРабот", ТаблицыДокумента);

	// АннулированиеПодарочныхСертификатов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.АннулированиеПодарочныхСертификатов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПодарочныеСертификаты");
	ТаблицыТиповДокументов.Вставить("АннулированиеПодарочныхСертификатов", ТаблицыДокумента);

	// ВводОстатков
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатков");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВводОстатков", ТаблицыДокумента);

	// ВводОстатковВнеоборотныхАктивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВводОстатковВнеоборотныхАктивов");
	ТаблицыТиповДокументов.Вставить("ВводОстатковВнеоборотныхАктивов", ТаблицыДокумента);

	// ВзаимозачетЗадолженности
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВзаимозачетЗадолженности");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДвиженияКонтрагентКонтрагент");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыТиповДокументов.Вставить("ВзаимозачетЗадолженности", ТаблицыДокумента);

	// ВнутреннееПотреблениеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВнутреннееПотреблениеТоваров", ТаблицыДокумента);

	// ВозвратМатериаловИзПроизводства
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратМатериаловИзПроизводства");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокОтраженияНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ВозвратМатериаловИзПроизводства", ТаблицыДокумента);

	// ВозвратПодарочныхСертификатов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратПодарочныхСертификатов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент");
	ТаблицыТиповДокументов.Вставить("ВозвратПодарочныхСертификатов", ТаблицыДокумента);

	// ВозвратСырьяДавальцу
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратСырьяДавальцу");
	ТаблицыТиповДокументов.Вставить("ВозвратСырьяДавальцу", ТаблицыДокумента);

	// ВозвратСырьяОтПереработчика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратСырьяОтПереработчика");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ВозвратСырьяОтПереработчика", ТаблицыДокумента);

	// ВозвратТоваровМеждуОрганизациями
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ВозвратТоваровМеждуОрганизациями", ТаблицыДокумента);

	// ВозвратТоваровОтКлиента
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратТоваровОтКлиента");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ВозвратТоваровОтКлиента", ТаблицыДокумента);

	// ВозвратТоваровПоставщику
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВозвратТоваровПоставщику");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ВозвратТоваровПоставщику", ТаблицыДокумента);

	// ВыбытиеДенежныхДокументов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыбытиеДенежныхДокументов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ВыбытиеДенежныхДокументов", ТаблицыДокумента);

	// ВыкупВозвратнойТарыКлиентом
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыкупВозвратнойТарыКлиентом");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ВыкупВозвратнойТарыКлиентом", ТаблицыДокумента);

	// ВыкупВозвратнойТарыУПоставщика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыкупВозвратнойТарыУПоставщика");
	ТаблицыТиповДокументов.Вставить("ВыкупВозвратнойТарыУПоставщика", ТаблицыДокумента);

	// ВыпускПродукции
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ВыпускПродукции");
	ТаблицыТиповДокументов.Вставить("ВыпускПродукции", ТаблицыДокумента);

	// ДепонированиеЗарплаты
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ДепонированиеЗарплаты");
	ТаблицыТиповДокументов.Вставить("ДепонированиеЗарплаты", ТаблицыДокумента);

	// ИзменениеПараметровОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИзменениеПараметровОС");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("ИзменениеПараметровОС", ТаблицыДокумента);

	// ИнвентаризацияНаличныхДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ИнвентаризацияНаличныхДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ИнвентаризацияНаличныхДенежныхСредств", ТаблицыДокумента);

	// МодернизацияОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.МодернизацияОС");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("МодернизацияОС", ТаблицыДокумента);

	// РемонтОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РемонтОС");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("РемонтОС", ТаблицыДокумента);
	
	// НачислениеДивидендов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачислениеДивидендов");
	ТаблицыТиповДокументов.Вставить("НачислениеДивидендов", ТаблицыДокумента);

	// НачислениеОценочныхОбязательствПоОтпускам
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачислениеОценочныхОбязательствПоОтпускам");
	ТаблицыТиповДокументов.Вставить("НачислениеОценочныхОбязательствПоОтпускам", ТаблицыДокумента);

	// НачисленияКредитовИДепозитов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НачисленияКредитовИДепозитов");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("НачисленияКредитовИДепозитов", ТаблицыДокумента);

	// ОперацияПоПлатежнойКарте
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОперацияПоПлатежнойКарте");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыТиповДокументов.Вставить("ОперацияПоПлатежнойКарте", ТаблицыДокумента);

	// ОприходованиеИзлишковТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОприходованиеИзлишковТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОприходованиеИзлишковТоваров", ТаблицыДокумента);

	// ОтражениеЗарплатыВФинансовомУчете
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	ТаблицыДокумента.Добавить("РегистрНакопления.ОтражениеЗарплатыВФинансовомУчете");
	ТаблицыТиповДокументов.Вставить("ОтражениеЗарплатыВФинансовомУчете", ТаблицыДокумента);

	// ОтражениеРасхожденийПриИнкассацииДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтражениеРасхожденийПриИнкассацииДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтражениеРасхожденийПриИнкассацииДенежныхСредств", ТаблицыДокумента);

	// ОтчетБанкаПоОперациямЭквайринга
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетБанкаПоОперациямЭквайринга");
	ТаблицыТиповДокументов.Вставить("ОтчетБанкаПоОперациямЭквайринга", ТаблицыДокумента);

	// ОтчетДавальцу
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетДавальцу");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетДавальцу", ТаблицыДокумента);

	// ОтчетКомиссионера
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомиссионера");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыТиповДокументов.Вставить("ОтчетКомиссионера", ТаблицыДокумента);

	// ОтчетКомиссионераОСписании
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомиссионераОСписании");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетКомиссионераОСписании", ТаблицыДокумента);

	// ОтчетКомитенту
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомитенту");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетКомитенту", ТаблицыДокумента);

	// ОтчетКомитентуОСписании
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетКомитентуОСписании");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетКомитентуОСписании", ТаблицыДокумента);

	// ОтчетОРозничныхПродажах
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетОРозничныхПродажах");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетОРозничныхПродажах", ТаблицыДокумента);

	// ОтчетПереработчика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетПереработчика");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетПереработчика", ТаблицыДокумента);

	// ОтчетПоКомиссииМеждуОрганизациями
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациями");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаВидовЗапасов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыТиповДокументов.Вставить("ОтчетПоКомиссииМеждуОрганизациями", ТаблицыДокумента);

	// ОтчетПоКомиссииМеждуОрганизациямиОСписании
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ОтчетПоКомиссииМеждуОрганизациямиОСписании", ТаблицыДокумента);

	// ПередачаДавальцу
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаДавальцу");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПередачаДавальцу", ТаблицыДокумента);

	// ПередачаМатериаловВПроизводство
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаМатериаловВПроизводство");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокОтраженияНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПередачаМатериаловВПроизводство", ТаблицыДокумента);

	// ПередачаСырьяПереработчику
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаСырьяПереработчику");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СтоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПередачаСырьяПереработчику", ТаблицыДокумента);

	// ПередачаТоваровМеждуОрганизациями
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПередачаТоваровМеждуОрганизациями", ТаблицыДокумента);

	// ПеремещениеМатериаловВПроизводстве
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеМатериаловВПроизводстве");
	ТаблицыТиповДокументов.Вставить("ПеремещениеМатериаловВПроизводстве", ТаблицыДокумента);

	// ПеремещениеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПеремещениеТоваров", ТаблицыДокумента);

	// ПереоценкаВалютныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПереоценкаВалютныхСредств");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеДокументы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваВПути");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваНаличные");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыПоДоговорамКредитовИДепозитов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыТиповДокументов.Вставить("ПереоценкаВалютныхСредств", ТаблицыДокумента);

	// ПересортицаТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПересортицаТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПересортицаТоваров", ТаблицыДокумента);

	// ПорчаТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПорчаТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("ПорчаТоваров", ТаблицыДокумента);

	// ПоступлениеБезналичныхДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеДоходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПоступлениеБезналичныхДенежныхСредств", ТаблицыДокумента);

	// ПоступлениеДенежныхДокументов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеДенежныхДокументов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПоступлениеДенежныхДокументов", ТаблицыДокумента);

	// ПоступлениеОтПереработчика
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеОтПереработчика");
	ТаблицыТиповДокументов.Вставить("ПоступлениеОтПереработчика", ТаблицыДокумента);

	// ПоступлениеСырьяОтДавальца
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеСырьяОтДавальца");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПоступлениеСырьяОтДавальца", ТаблицыДокумента);

	// ПоступлениеТоваровУслуг
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеТоваровУслуг");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПоступлениеТоваровУслуг", ТаблицыДокумента);

	// ПоступлениеУслугПрочихАктивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПоступлениеУслугПрочихАктивов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПоступлениеУслугПрочихАктивов", ТаблицыДокумента);

	// ПринятиеКУчетуНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуНМА");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("ПринятиеКУчетуНМА", ТаблицыДокумента);

	// ПринятиеКУчетуОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуОС");
	ТаблицыДокумента.Добавить("РегистрСведений.УчетнаяПолитикаОрганизаций");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("ПринятиеКУчетуОС", ТаблицыДокумента);

	// ПриходныйКассовыйОрдер
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПриходныйКассовыйОрдер");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеДоходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПриходныйКассовыйОрдер", ТаблицыДокумента);

	// ПрочееОприходованиеТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПрочееОприходованиеТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПрочееОприходованиеТоваров", ТаблицыДокумента);

	// ПрочиеДоходыРасходы
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПрочиеДоходыРасходы");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("ПрочиеДоходыРасходы", ТаблицыДокумента);

	// КорректировкаНалоговогоНазначенияКапитальныхИнвестиций
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуНМА");
	ТаблицыДокумента.Добавить("Документ.ПринятиеКУчетуОС");
	ТаблицыДокумента.Добавить("РегистрНакопления.КорректировкиНДСПартий");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПартииПрочихРасходов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПартий");
	ТаблицыТиповДокументов.Вставить("КорректировкаНалоговогоНазначенияКапитальныхИнвестиций", ТаблицыДокумента);

	// РаспределениеПроизводственныхЗатрат
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеПроизводственныхЗатрат");
	ТаблицыТиповДокументов.Вставить("РаспределениеПроизводственныхЗатрат", ТаблицыДокумента);

	// РаспределениеПрочихЗатрат
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеПрочихЗатрат");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства");
	ТаблицыДокумента.Добавить("РегистрСведений.ПорядокОтраженияРасходов");
	ТаблицыТиповДокументов.Вставить("РаспределениеПрочихЗатрат", ТаблицыДокумента);

	// РаспределениеРасходовБудущихПериодов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РаспределениеРасходовБудущихПериодов");
	ТаблицыТиповДокументов.Вставить("РаспределениеРасходовБудущихПериодов", ТаблицыДокумента);

	// РасходныйКассовыйОрдер
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РасходныйКассовыйОрдер");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.ОплатаВедомостейНаВыплатуЗарплаты");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("РасходныйКассовыйОрдер", ТаблицыДокумента);

	// РасчетСебестоимостиТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РасчетСебестоимостиТоваров");
	ТаблицыДокумента.Добавить("РегистрНакопления.ПрочиеРасходы");
	ТаблицыДокумента.Добавить("РегистрНакопления.СебестоимостьТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("РасчетСебестоимостиТоваров", ТаблицыДокумента);

	// РеализацияПодарочныхСертификатов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РеализацияПодарочныхСертификатов");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент");
	ТаблицыТиповДокументов.Вставить("РеализацияПодарочныхСертификатов", ТаблицыДокумента);

	// РеализацияТоваровУслуг
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РеализацияТоваровУслуг");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("РеализацияТоваровУслуг", ТаблицыДокумента);

	// РеализацияУслугПрочихАктивов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РеализацияУслугПрочихАктивов");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентами");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("РеализацияУслугПрочихАктивов", ТаблицыДокумента);

	// РегламентнаяОперация
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РегламентнаяОперация");
	ТаблицыТиповДокументов.Вставить("РегламентнаяОперация", ТаблицыДокумента);

	// СборкаТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СборкаТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("СборкаТоваров", ТаблицыДокумента);

	// СписаниеБезналичныхДенежныхСредств
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	ТаблицыДокумента.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("СписаниеБезналичныхДенежныхСредств", ТаблицыДокумента);

	// СписаниеЗадолженности
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеЗадолженности");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСКлиентамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам");
	ТаблицыДокумента.Добавить("РегистрСведений.СуммыДокументовВВалютеРегл");
	ТаблицыТиповДокументов.Вставить("СписаниеЗадолженности", ТаблицыДокумента);

	// СписаниеНедостачТоваров
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНедостачТоваров");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаНоменклатуры");
	ТаблицыТиповДокументов.Вставить("СписаниеНедостачТоваров", ТаблицыДокумента);

	// СписаниеНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеНМА");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("СписаниеНМА", ТаблицыДокумента);

	// СписаниеОС
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.СписаниеОС");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
	ТаблицыТиповДокументов.Вставить("СписаниеОС", ТаблицыДокумента);

	// ТаможеннаяДекларацияИмпорт
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ТаможеннаяДекларацияИмпорт");
	ТаблицыДокумента.Добавить("РегистрНакопления.РасчетыСПоставщиками");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыТиповДокументов.Вставить("ТаможеннаяДекларацияИмпорт", ТаблицыДокумента);

	// КорректировкаНалоговогоНазначенияЗапасов
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаНалоговогоНазначенияЗапасов");
	ТаблицыТиповДокументов.Вставить("КорректировкаНалоговогоНазначенияЗапасов", ТаблицыДокумента);
	
	// НалоговаяНакладная
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.НалоговаяНакладная");
	ТаблицыДокумента.Добавить("РегистрНакопления.НДСРеестрВыданныхНалоговыхДокументов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыТиповДокументов.Вставить("НалоговаяНакладная", ТаблицыДокумента);
	
	// ПеремещениеНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПеремещениеНМА");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыТиповДокументов.Вставить("ПеремещениеНМА", ТаблицыДокумента);
	
	// Приложение2КНалоговойНакладной
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.Приложение2КНалоговойНакладной");
	ТаблицыДокумента.Добавить("РегистрНакопления.НДСРеестрВыданныхНалоговыхДокументов");
	ТаблицыДокумента.Добавить("РегистрСведений.АналитикаУчетаПоПартнерам");
	ТаблицыТиповДокументов.Вставить("Приложение2КНалоговойНакладной", ТаблицыДокумента);
	
	// РегистрацияВходящегоНалоговогоДокумента
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.РегистрацияВходящегоНалоговогоДокумента");
	ТаблицыТиповДокументов.Вставить("РегистрацияВходящегоНалоговогоДокумента", ТаблицыДокумента);
	
	// МодернизацияНМА
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.МодернизацияНМА");
	ТаблицыДокумента.Добавить("РегистрБухгалтерии.Хозрасчетный");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
	ТаблицыТиповДокументов.Вставить("МодернизацияНМА", ТаблицыДокумента);
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.КорректировкаНазначенияТоваров");
	ТаблицыТиповДокументов.Вставить("КорректировкаНазначенияТоваров", ТаблицыДокумента);
    
	ТаблицыДокумента = Новый Массив;
	ТаблицыДокумента.Добавить("Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС");
	ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеОСБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаОС");
    ТаблицыДокумента.Добавить("РегистрСведений.НалоговыеНазначенияОС");
    ТаблицыДокумента.Добавить("РегистрСведений.СчетаБухгалтерскогоУчетаНМА");
    ТаблицыДокумента.Добавить("РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет");
    ТаблицыДокумента.Добавить("РегистрСведений.МестонахождениеНМАБухгалтерскийУчет");
	ТаблицыДокумента.Добавить("РегистрНакопления.СуммыКорректировокПропорциональногоНДС");	
	ТаблицыТиповДокументов.Вставить("ПерерасчетПропорциональногоНДСпоТоварамИОС", ТаблицыДокумента);
	
	Возврат ТаблицыТиповДокументов[ИмяТипаДокумента];

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстПустыеВТ()
	
	ТекстСебестоимость = "
	|ВЫБРАТЬ
	|	1
	|ПОМЕСТИТЬ ВтСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2
	|ПОМЕСТИТЬ ВтСтоимости
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	3
	|ПОМЕСТИТЬ КорректировкиНДСПартий
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	4
	|ПОМЕСТИТЬ ВТСтрокиДляКорректировкиНДСПартий
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	Возврат ТекстСебестоимость;
	
КонецФункции

Функция ТекстУчетнаяПолитика()
	
	Возврат "
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Ссылка          КАК Ссылка,
		|	РазрезыКОтражению.Организация     КАК Организация,
		|	РазрезыКОтражению.ДатаОтражения   КАК ДатаОтражения,
		|	МАКСИМУМ(УчетнаяПолитикаОрганизаций.Период) КАК ПериодУчетнойПолитики
		|ПОМЕСТИТЬ ПериодыУчетнойПолитики
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
		|	ПО
		|		РазрезыКОтражению.Организация = УчетнаяПолитикаОрганизаций.Организация
		|		И РазрезыКОтражению.ДатаОтражения >= УчетнаяПолитикаОрганизаций.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РазрезыКОтражению.Ссылка,
		|	РазрезыКОтражению.Организация,
		|	РазрезыКОтражению.ДатаОтражения
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Организация
		|;
		|
		|ВЫБРАТЬ
		|	РазрезыКОтражению.Ссылка        КАК Ссылка,
		|	РазрезыКОтражению.Организация   КАК Организация,
		|	РазрезыКОтражению.Период        КАК Период,
		|	РазрезыКОтражению.ДатаОтражения КАК ДатаОтражения,
		|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика, ЗНАЧЕНИЕ(Справочник.УчетныеПолитикиОрганизаций.ПустаяСсылка)) КАК УчетнаяПолитика
		|ПОМЕСТИТЬ УчетнаяПолитикаОрганизаций
		|ИЗ
		|	РазрезыКОтражению КАК РазрезыКОтражению
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПериодыУчетнойПолитики КАК ПериодыУчетнойПолитики
		|	ПО
		|		РазрезыКОтражению.Ссылка = ПериодыУчетнойПолитики.Ссылка
		|		И РазрезыКОтражению.Организация = ПериодыУчетнойПолитики.Организация
		|		И РазрезыКОтражению.ДатаОтражения = ПериодыУчетнойПолитики.ДатаОтражения
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
		|	ПО
		|		ПериодыУчетнойПолитики.Организация = УчетнаяПолитикаОрганизаций.Организация
		|		И ПериодыУчетнойПолитики.ПериодУчетнойПолитики = УчетнаяПолитикаОрганизаций.Период
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Организация
		|;
		|";
	
КонецФункции

Функция ТекстСебестоимость()
	
#Область ВтСтрокиНеИспользуется
	ТекстСебестоимостьНеИспользуется = "
	|ВЫБРАТЬ
	|	Движения.Регистратор КАК Ссылка,
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО) КАК КорНоменклатура,
	|	Аналитика.Склад КАК Склад,
	|	ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад) КАК КорСклад,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.КорВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК КорГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Движения.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОНЕЦ
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Контрагент
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Договор
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Договор
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК Договор,
	|	Движения.ГруппаПродукции КАК ГруппаПродукции,
	|	Аналитика.Ссылка КАК АналитикаУчетаНоменклатуры,
	|
	|	Движения.РазделУчета КАК РазделУчета,
	|	Движения.Подразделение КАК Подразделение,
	|	Движения.АналитикаРасходов КАК АналитикаРасходов,
	|	Движения.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	Движения.АналитикаДоходов КАК АналитикаДоходов,
	|	Движения.СтатьяДоходов КАК СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Движения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Движения.ПериодПродажи КАК ПериодПродажи,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(
	|		ВЫБОР КОГДА Движения.СтоимостьРегл <> 0
	|			ТОГДА Движения.СтоимостьРегл
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) * Движения.Количество КАК ЧИСЛО(15, 2))
	|		КОНЕЦ
	|	) КАК Сумма,
	|
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР,
	|	0 КАК СуммаНУ
	|
	|ПОМЕСТИТЬ ВтСтроки
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО
	|		Движения.Регистратор = ДокументыКОтражению.Ссылка
	|		И НЕ Движения.РасчетСебестоимости
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО ВидыЗапасов.Назначение = Назначения.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|	ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО КорВидыЗапасов.Назначение = КорНазначения.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Движения.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		Движения.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ПО
	|		Движения.СтоимостьРегл = 0
	|		И Движения.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|		И Движения.РазделУчета = СтоимостьТоваров.РазделУчета
	|		И Движения.ВидЗапасов = СтоимостьТоваров.ВидЗапасов
	|		И Движения.Организация = СтоимостьТоваров.Организация
	|		И НАЧАЛОПЕРИОДА(Движения.Период, Месяц) = СтоимостьТоваров.Период
	|ГДЕ
	|	Движения.Количество <> 0
	|	И Движения.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Регистратор,
	|	Движения.ВидДвижения,
	|	Аналитика.Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО),
	|	Аналитика.Склад,
	|	ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад),
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.КорВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Движения.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОНЕЦ
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Контрагент
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Договор
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Договор
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	Аналитика.Ссылка,
	|
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|
	|	Движения.АналитикаРасходов,
	|	Движения.РазделУчета,
	|	Движения.Подразделение,
	|	Движения.СтатьяРасходовСписания,
	|	Движения.АналитикаДоходов,
	|	Движения.СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.ИдентификаторСтроки,
	|	Движения.ПериодПродажи,
	|	Движения.ГруппаПродукции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
#КонецОбласти

#Область ВтСтроки
	ТекстСебестоимость = 
	"ВЫБРАТЬ
	|	ВтСтроки.Ссылка,
	|	ВтСтроки.ВидДвижения,
	|	ВтСтроки.Номенклатура,
	|	ВтСтроки.КорНоменклатура,
	|	ВтСтроки.Склад,
	|	ВтСтроки.КорСклад,
	|	ВтСтроки.ГруппаФинансовогоУчета,
	|	ВтСтроки.КорГруппаФинансовогоУчета,
	|	ВтСтроки.ТипЗапасов,
	|	ВтСтроки.Контрагент,
	|	ВтСтроки.ГруппаПродукции,
	|	ВтСтроки.РазделУчета,
	|	ВтСтроки.Подразделение,
	|	ВтСтроки.АналитикаРасходов,
	|	ВтСтроки.СтатьяРасходов,
	|	ВтСтроки.АналитикаДоходов,
	|	ВтСтроки.СтатьяДоходов,
	|	ВтСтроки.АналитикаАктивовПассивов,
	|	ВтСтроки.СтатьяАктивовПассивов,
	|	ВтСтроки.ХозяйственнаяОперация,
	|	ВтСтроки.ИдентификаторСтроки,
	|	ВтСтроки.ПериодПродажи,
	|	ВтСтроки.НаправлениеДеятельности,
	|	ВтСтроки.КорНаправлениеДеятельности,
	|	ВтСтроки.Знак,
	|	СУММА(ВтСтроки.Количество) КАК Количество,
	|	СУММА(ВтСтроки.Сумма) КАК Сумма,
	|	СУММА(ВтСтроки.СуммаПР) КАК СуммаПР,
	|	СУММА(ВтСтроки.СуммаВР) КАК СуммаВР,
	|	СУММА(ВтСтроки.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ ВТСтроки
	|ИЗ
	|	ВтСтрокиДляКорректировкиНДСПартий КАК ВтСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтСтроки.Ссылка,
	|	ВтСтроки.СтатьяРасходов,
	|	ВтСтроки.РазделУчета,
	|	ВтСтроки.Подразделение,
	|	ВтСтроки.КорСклад,
	|	ВтСтроки.СтатьяДоходов,
	|	ВтСтроки.ВидДвижения,
	|	ВтСтроки.АналитикаДоходов,
	|	ВтСтроки.АналитикаАктивовПассивов,
	|	ВтСтроки.СтатьяАктивовПассивов,
	|	ВтСтроки.КорГруппаФинансовогоУчета,
	|	ВтСтроки.ГруппаФинансовогоУчета,
	|	ВтСтроки.Контрагент,
	|	ВтСтроки.Номенклатура,
	|	ВтСтроки.ТипЗапасов,
	|	ВтСтроки.АналитикаРасходов,
	|	ВтСтроки.Склад,
	|	ВтСтроки.КорНоменклатура,
	|	ВтСтроки.ГруппаПродукции,
	|	ВтСтроки.НаправлениеДеятельности,
	|	ВтСтроки.ХозяйственнаяОперация,
	|	ВтСтроки.ИдентификаторСтроки,
	|	ВтСтроки.КорНаправлениеДеятельности,
	|	ВтСтроки.ПериодПродажи,
	|	ВтСтроки.Знак"
	+
	"
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
#КонецОбласти

#Область ВтСтоимости
	ТекстСебестоимость = ТекстСебестоимость + "
	|ВЫБРАТЬ
	|	Движения.ДокументДвижения КАК Ссылка,
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО) КАК КорНоменклатура,
	|	Аналитика.Склад КАК Склад,
	|	ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад) КАК КорСклад,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.КорВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК КорГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Движения.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОНЕЦ
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Контрагент
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	Движения.ГруппаПродукции КАК ГруппаПродукции,
	|
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	|	
	|
	|	Движения.РазделУчета КАК РазделУчета,
	|	Движения.Подразделение КАК Подразделение,
	|	Движения.АналитикаРасходов КАК АналитикаРасходов,
	|	Движения.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	Движения.АналитикаДоходов КАК АналитикаДоходов,
	|	Движения.СтатьяДоходов КАК СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Движения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Движения.ПериодПродажи КАК ПериодПродажи,
	|	ВЫБОР 
	|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|	СУММА(Движения.СтоимостьРегл) КАК Сумма,
	|	0 КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР
	|
	|ПОМЕСТИТЬ ВтСтоимости
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО
	|		Движения.ДокументДвижения = ДокументыКОтражению.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО ВидыЗапасов.Назначение = Назначения.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|	ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО КорВидыЗапасов.Назначение = КорНазначения.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Движения.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		Движения.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|ГДЕ
	|	Движения.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Движения.ДокументДвижения,
	|	Движения.ВидДвижения,
	|	Аналитика.Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО),
	|	Аналитика.Склад,
	|	ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад),
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.КорВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Движения.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОНЕЦ
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Контрагент
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|
	|
	|	Движения.АналитикаРасходов,
	|	Движения.РазделУчета,
	|	Движения.Подразделение,
	|	Движения.СтатьяРасходовСписания,
	|	Движения.АналитикаДоходов,
	|	Движения.СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.ИдентификаторСтроки,
	|	Движения.ПериодПродажи,
	|	Движения.ГруппаПродукции,
	|	ВЫБОР 
	|		КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура,
	|	Склад,
	|	ГруппаФинансовогоУчета,
	|	ТипЗапасов,
	|	Контрагент
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
#КонецОбласти
	Возврат ТекстСебестоимость;
	
КонецФункции

Функция ТекстЗачетАвансов(ЭтоОбъектРасчетов) Экспорт
	Если Не ЭтоОбъектРасчетов Тогда ТекстЗачетАвансовКлиентов = "";
	Иначе
		ТекстЗачетАвансовКлиентов = " ОБЪЕДИНИТЬ ВСЕ " + "
		|ВЫБРАТЬ //// Зачет авансов клиентов (Дт <62.2> :: Кт <62.1, 76>)
		|	Операция.Ссылка КАК Ссылка,
		|	Расчеты.Период КАК Период,
		|	Аналитика.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
		|
		|	Расчеты.ПредоплатаРегл КАК Сумма,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаДт,
		|	(ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА Операция.ГруппаФинансовогоУчета
		|		КОГДА НЕ Договоры.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Договоры.ГруппаФинансовогоУчета
		|		КОГДА НЕ Заказы.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Заказы.ГруппаФинансовогоУчета
		|		КОГДА НЕ Заявки.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Заявки.ГруппаФинансовогоУчета
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказД.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА ЗаказД.ГруппаФинансовогоУчета
		//-- НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
		|
		|	Расчеты.Валюта КАК ВалютаДт,
		|	(ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА Операция.Подразделение
		|		КОГДА НЕ Договоры.Подразделение ЕСТЬ NULL ТОГДА Договоры.Подразделение
		|		КОГДА НЕ Заказы.Подразделение ЕСТЬ NULL ТОГДА Заказы.Подразделение
		|		КОГДА НЕ Заявки.Подразделение ЕСТЬ NULL ТОГДА Заявки.Подразделение
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказД.Подразделение ЕСТЬ NULL ТОГДА ЗаказД.Подразделение
		//-- НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК ПодразделениеДт,
		|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
		|	НЕОПРЕДЕЛЕНО КАК СчетДт,
		|
		|	Аналитика.Контрагент КАК СубконтоДт1,
		|	(ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА Операция.Договор
		|		КОГДА НЕ Договоры.Ссылка ЕСТЬ NULL ТОГДА Договоры.Ссылка
		|		КОГДА НЕ Заказы.Ссылка ЕСТЬ NULL ТОГДА Заказы.Договор
		|		КОГДА НЕ Заявки.Ссылка ЕСТЬ NULL ТОГДА Заявки.Договор
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказД.Ссылка ЕСТЬ NULL ТОГДА ЗаказД.Договор
		//-- НЕ УТКА
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	
		|	Расчеты.Предоплата КАК ВалютнаяСуммаДт,
		|	0 КАК КоличествоДт,
		|	0 КАК СуммаНУДт,
		|	0 КАК СуммаПРДт,
		|	0 КАК СуммаВРДт,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
		|	(ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА Операция.ГруппаФинансовогоУчета
		|		КОГДА НЕ Договоры.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Договоры.ГруппаФинансовогоУчета
		|		КОГДА НЕ Заказы.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Заказы.ГруппаФинансовогоУчета
		|		КОГДА НЕ Заявки.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Заявки.ГруппаФинансовогоУчета
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказД.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА ЗаказД.ГруппаФинансовогоУчета
		//-- НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
		|	
		|	Расчеты.Валюта КАК ВалютаКт,
		|	(ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА Операция.Подразделение
		|		КОГДА НЕ Договоры.Подразделение ЕСТЬ NULL ТОГДА Договоры.Подразделение
		|		КОГДА НЕ Заказы.Подразделение ЕСТЬ NULL ТОГДА Заказы.Подразделение
		|		КОГДА НЕ Заявки.Подразделение ЕСТЬ NULL ТОГДА Заявки.Подразделение
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказД.Подразделение ЕСТЬ NULL ТОГДА ЗаказД.Подразделение
		//-- НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК ПодразделениеКт,
		|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
		|	НЕОПРЕДЕЛЕНО КАК СчетКт,
		|
		|	Аналитика.Контрагент КАК СубконтоКт1,
		|	Операция.Договор КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|
		|	Расчеты.Предоплата КАК ВалютнаяСуммаКт,
		|	0 КАК КоличествоКт,
		|	0 КАК СуммаНУКт,
		|	0 КАК СуммаПРКт,
		|	0 КАК СуммаВРКт,
		|	""Зачет авансов клиентов"" КАК Содержание
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДокументИмя КАК Операция
		|	ПО
		|		ДокументыКОтражению.Ссылка = Операция.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
		|	ПО 
		|		Операция.Ссылка = Расчеты.Регистратор
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО 
		|		Аналитика.КлючАналитики = Расчеты.АналитикаУчетаПоПартнерам
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Справочник.ДоговорыКонтрагентов КАК Договоры
		|	ПО 
		|		Договоры.Ссылка = Расчеты.ЗаказКлиента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Документ.ЗаказКлиента КАК Заказы
		|	ПО 
		|		Заказы.Ссылка = Расчеты.ЗаказКлиента
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК Заявки
		|	ПО 
		|		Заявки.Ссылка = Расчеты.ЗаказКлиента
		|	
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Документ.ЗаказДавальца КАК ЗаказД
		|	ПО 
		|		ЗаказД.Ссылка = Расчеты.ЗаказКлиента
		|ГДЕ
		|	Расчеты.ПредоплатаРегл > 0. И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		//-- НЕ УТКА
		|";
	КонецЕсли;
	Если Не ЭтоОбъектРасчетов Тогда ТекстЗачетАвансовПоставщикам = "";
	Иначе
		ТекстЗачетАвансовПоставщикам = " ОБЪЕДИНИТЬ ВСЕ " + "
		|ВЫБРАТЬ //// Зачет авансов поставщикам (Дт <60.1, 76> :: Кт <60.2>)
		|	Операция.Ссылка КАК Ссылка,
		|	Расчеты.Период КАК Период,
		|	Аналитика.Организация КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
		|
		|	Расчеты.ПредоплатаРегл КАК Сумма,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
		|	(ВЫБОР
		|		КОГДА Операция.Ссылка = Расчеты.ЗаказПоставщику ТОГДА Операция.ГруппаФинансовогоУчета
		|		КОГДА НЕ Договоры.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Договоры.ГруппаФинансовогоУчета
		|		КОГДА НЕ Заказы.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Заказы.ГруппаФинансовогоУчета
		|		КОГДА НЕ ЗаказП.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА ЗаказП.ГруппаФинансовогоУчета
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК АналитикаУчетаДт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
		|
		|	Расчеты.Валюта КАК ВалютаДт,
		|	(ВЫБОР
		|		КОГДА Операция.Ссылка = Расчеты.ЗаказПоставщику ТОГДА Операция.Подразделение
		|		КОГДА НЕ Договоры.Подразделение ЕСТЬ NULL ТОГДА Договоры.Подразделение
		|		КОГДА НЕ Заказы.Подразделение ЕСТЬ NULL ТОГДА Заказы.Подразделение
		|		КОГДА НЕ ЗаказП.Подразделение ЕСТЬ NULL ТОГДА ЗаказП.Подразделение
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ПодразделениеДт,
		|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
		|	НЕОПРЕДЕЛЕНО КАК СчетДт,
		|
		|	Аналитика.Контрагент КАК СубконтоДт1,
		|	Операция.Договор КАК СубконтоДт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
		|	
		|	Расчеты.Предоплата КАК ВалютнаяСуммаДт,
		|	0 КАК КоличествоДт,
		|	0 КАК СуммаНУДт,
		|	0 КАК СуммаПРДт,
		|	0 КАК СуммаВРДт,
		|	
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаКт,
		|	(ВЫБОР
		|		КОГДА Операция.Ссылка = Расчеты.ЗаказПоставщику ТОГДА Операция.ГруппаФинансовогоУчета
		|		КОГДА НЕ Договоры.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Договоры.ГруппаФинансовогоУчета
		|		КОГДА НЕ Заказы.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА Заказы.ГруппаФинансовогоУчета
		|		КОГДА НЕ ЗаказП.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА ЗаказП.ГруппаФинансовогоУчета
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК АналитикаУчетаКт,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
		|	
		|	Расчеты.Валюта КАК ВалютаКт,
		|	(ВЫБОР
		|		КОГДА Операция.Ссылка = Расчеты.ЗаказПоставщику ТОГДА Операция.Подразделение
		|		КОГДА НЕ Договоры.Подразделение ЕСТЬ NULL ТОГДА Договоры.Подразделение
		|		КОГДА НЕ Заказы.Подразделение ЕСТЬ NULL ТОГДА Заказы.Подразделение
		|		КОГДА НЕ ЗаказП.Подразделение ЕСТЬ NULL ТОГДА ЗаказП.Подразделение
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ПодразделениеКт,
		|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
		|	НЕОПРЕДЕЛЕНО КАК СчетКт,
		|
		|	Аналитика.Контрагент КАК СубконтоКт1,
		|	Операция.Договор КАК СубконтоКт2,
		|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
		|
		|	Расчеты.Предоплата КАК ВалютнаяСуммаКт,
		|	0 КАК КоличествоКт,
		|	0 КАК СуммаНУКт,
		|	0 КАК СуммаПРКт,
		|	0 КАК СуммаВРКт,
		|	""Зачет авансов поставщикам"" КАК Содержание
		|ИЗ
		|	ДокументыКОтражению КАК ДокументыКОтражению
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ДокументИмя КАК Операция
		|	ПО
		|		ДокументыКОтражению.Ссылка = Операция.Ссылка
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
		|	ПО 
		|		Операция.Ссылка = Расчеты.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО 
		|		Аналитика.КлючАналитики = Расчеты.АналитикаУчетаПоПартнерам
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Справочник.ДоговорыКонтрагентов КАК Договоры
		|	ПО 
		|		Договоры.Ссылка = Расчеты.ЗаказПоставщику
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЗаказПоставщику КАК Заказы
		|	ПО 
		|		Заказы.Ссылка = Расчеты.ЗаказПоставщику
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		Документ.ЗаказПереработчику КАК ЗаказП
		|	ПО 
		|		ЗаказП.Ссылка = Расчеты.ЗаказПоставщику
		|ГДЕ
		|	Расчеты.ПредоплатаРегл > 0. И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
		|";
	КонецЕсли;
	Возврат ТекстЗачетАвансовКлиентов + ТекстЗачетАвансовПоставщикам;
КонецФункции

Функция ТекстРаспределениеРасходов() Экспорт
	Возврат " ОБЪЕДИНИТЬ ВСЕ " + "
    |ВЫБРАТЬ //// Отражение доп. расходов (Дт 20, 28 :: Кт 20ДР, 28ДР)
	|	Операция.Ссылка КАК Ссылка,
    |	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СтоимостьРегл КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) 
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Аналитика.Склад КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА Аналитика.Склад
	|		ИНАЧЕ Аналитика.Склад.Подразделение 
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	Аналитика.Номенклатура КАК СубконтоДт1,
	|	Аналитика.Склад КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	Строки.СтатьяРасходовСписания КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Отражение доп. расходов"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументИмя КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.Количество = 0
	|		И Строки.СтоимостьРегл <> 0
	|		И НЕ Строки.РасчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Строки.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|";
	
КонецФункции

Функция ТипыОбъектовРасчетовСКлиентами() Экспорт
	Возврат Метаданные.РегистрыНакопления["РасчетыСКлиентамиПоДокументам"].Измерения.ЗаказКлиента.Тип;
КонецФункции

Функция ТипыОбъектовРасчетовСПоставщиками() Экспорт
	Возврат Метаданные.РегистрыНакопления["РасчетыСПоставщикамиПоДокументам"].Измерения.ЗаказПоставщику.Тип;
КонецФункции

Функция ТекстВТОтраженияДокумента(ДокументИмя)
	
	ТекстВТОтраженияДокумента = "";
	
	Попытка			
		ТекстВТОтраженияДокумента = СокрЛП(Документы[ДокументИмя].ТекстЗапросаВТОтраженияВРеглУчетеУКР());
	Исключение
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='В модуле менеджера документа %1 отсутствует функция ТекстЗапросаВТОтраженияВРеглУчете()';uk='У модулі менеджера документа %1 відсутня функція ТекстЗапросаВТОтраженияВРеглУчете()'"),
							ДокументИмя);
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Отражение в регламентированном учете';uk='Відображення в регламентованому обліку'"), 
			УровеньЖурналаРегистрации.Ошибка, 
			, 
			, 
			ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецПопытки;

	Возврат ТекстВТОтраженияДокумента;
	
КонецФункции

Функция ТекстОтраженияДокумента(ДокументИмя)
	
	Попытка		
		ТекстОтраженияВРеглУчете = СокрЛП(Документы[ДокументИмя].ТекстОтраженияВРеглУчетеУКР());
	Исключение
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru='В модуле менеджера документа %1 отсутствует функция ТекстОтраженияВРеглУчете()';uk='У модулі менеджера документа %1 відсутня функція ТекстОтраженияВРеглУчете()'"),
							ДокументИмя);
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Отражение в регламентированном учете';uk='Відображення в регламентованому обліку'"), 
			УровеньЖурналаРегистрации.Ошибка, 
			, 
			, 
			ТекстОшибки);
		ВызватьИсключение ТекстОшибки;
	КонецПопытки;
	
	Возврат ТекстОтраженияВРеглУчете;
	
КонецФункции

Функция ВТЗапроса(ТекстЗапроса)
	
	ВТЗапроса = Новый Массив;
	
	Если ТекстЗапроса = "" Тогда
		Возврат ВТЗапроса;
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	Для каждого Пакет Из СхемаЗапроса.ПакетЗапросов Цикл
		Если ЗначениеЗаполнено(Пакет.ТаблицаДляПомещения) Тогда
			ВТЗапроса.Добавить(Пакет.ТаблицаДляПомещения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВТЗапроса;
	
КонецФункции

Функция ТекстКорректировкиНДСПартий()
	
	Возврат "ВЫБРАТЬ
	        |	КорректировкиНДСПартий.Регистратор КАК Ссылка,
	        |	КорректировкиНДСПартий.Организация,
	        |	ЕСТЬNULL(Аналитика.Ссылка, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК АналитикаУчетаНоменклатуры,
			|	ЕСТЬNULL(СтатьиРасходов.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) КАК СтатьяРасходовИзмерение,
	        |	ЕСТЬNULL(Аналитика.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	        |	ЕСТЬNULL(Аналитика.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	        |	ЕСТЬNULL(Аналитика.Номенклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)) КАК ТипНоменклатуры,
	        |	ВЫБОР
	        |		КОГДА ЕСТЬNULL(Аналитика.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	        |			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	        |		ИНАЧЕ ВЫБОР
	        |				КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	        |					ТОГДА Аналитика.Номенклатура.ГруппаФинансовогоУчета
	        |				КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	        |					ТОГДА ЕСТЬNULL(ВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	        |				ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	        |			КОНЕЦ
	        |	КОНЕЦ КАК ГруппаФинансовогоУчета,
	        |	ВЫБОР
	        |		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	        |			ТОГДА ЕСТЬNULL(КорВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	        |		ИНАЧЕ ЕСТЬNULL(Аналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	        |	КОНЕЦ КАК КорГруппаФинансовогоУчета,
	        |	СУММА(КорректировкиНДСПартий.НДСРегл - КорректировкиНДСПартий.НДСРеглПоФакту) КАК Сумма,
	        |	КорректировкиНДСПартий.СтатьяРасходовСписания КАК СтатьяРасходов,
	        |	КорректировкиНДСПартий.АналитикаРасходов,
	        |	КорректировкиНДСПартий.ГруппаПродукции,
	        |	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) КАК ТипЗапасов,
	        |	ЕСТЬNULL(ВидыЗапасов.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	        |	ЕСТЬNULL(КорВидыЗапасов.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	        |	ЕСТЬNULL(ВидыЗапасов.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	        |	ЕСТЬNULL(ВидыЗапасов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор,
	        |	КорректировкиНДСПартий.НалоговоеНазначение,
	        |	КорректировкиНДСПартий.НалоговоеНазначениеПоФакту КАК КорНалоговоеНазначение,
	        |	ЕСТЬNULL(ВидыЗапасов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК ВидЗапасов,
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Ссылка, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК АналитикаУчетаПродукции,
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладПродукции,
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Продукция,
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Номенклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)) КАК ТипПродукции,
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)) КАК ГруппаФинансовогоУчетаПродукции,
	        |	КорректировкиНДСПартий.ПодразделениеПолучатель,
	        |	КорректировкиНДСПартий.СтатьяРасходовПолучатель,
	        |	КорректировкиНДСПартий.АналитикаРасходовПолучатель
	        |ПОМЕСТИТЬ КорректировкиНДСПартий
	        |ИЗ
	        |	ДокументыКОтражению КАК ДокументыКОтражению
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КорректировкиНДСПартий КАК КорректировкиНДСПартий
	        |		ПО ДокументыКОтражению.Ссылка = КорректировкиНДСПартий.Регистратор
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	        |		ПО (КорректировкиНДСПартий.АналитикаУчетаНоменклатуры = Аналитика.Ссылка)
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	        |		ПО (КорректировкиНДСПартий.ВидЗапасов = ВидыЗапасов.Ссылка)
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	        |		ПО (КорректировкиНДСПартий.КорВидЗапасов = КорВидыЗапасов.Ссылка)
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаВыпущеннойПродукции
	        |		ПО (КорректировкиНДСПартий.АналитикаУчетаПродукции = АналитикаВыпущеннойПродукции.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
    		|		ПО (КорректировкиНДСПартий.АналитикаУчетаНоменклатуры = СтатьиРасходов.Ссылка)
	        |ГДЕ
	        |	НЕ КорректировкиНДСПартий.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	        |	И КорректировкиНДСПартий.НалоговоеНазначениеПоФакту.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	КорректировкиНДСПартий.Регистратор,
	        |	КорректировкиНДСПартий.Организация,
	        |	КорректировкиНДСПартий.СтатьяРасходовСписания,
	        |	КорректировкиНДСПартий.АналитикаРасходов,
	        |	КорректировкиНДСПартий.ГруппаПродукции,
	        |	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)),
	        |	ЕСТЬNULL(ВидыЗапасов.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	        |	ЕСТЬNULL(КорВидыЗапасов.Назначение.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	        |	КорректировкиНДСПартий.НалоговоеНазначение,
	        |	КорректировкиНДСПартий.НалоговоеНазначениеПоФакту,
	        |	ЕСТЬNULL(ВидыЗапасов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)),
	        |	ЕСТЬNULL(ВидыЗапасов.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	        |	ЕСТЬNULL(ВидыЗапасов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	        |	ЕСТЬNULL(Аналитика.Ссылка, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)),
	        |	ЕСТЬNULL(Аналитика.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)),
	        |	ЕСТЬNULL(Аналитика.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	        |	ВЫБОР
	        |		КОГДА ЕСТЬNULL(Аналитика.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	        |			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	        |		ИНАЧЕ ВЫБОР
	        |				КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	        |					ТОГДА Аналитика.Номенклатура.ГруппаФинансовогоУчета
	        |				КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	        |					ТОГДА ЕСТЬNULL(ВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	        |				ИНАЧЕ Аналитика.Номенклатура.ГруппаФинансовогоУчета
	        |			КОНЕЦ
	        |	КОНЕЦ,
	        |	ВЫБОР
	        |		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	        |			ТОГДА ЕСТЬNULL(КорВидыЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	        |		ИНАЧЕ ЕСТЬNULL(Аналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	        |	КОНЕЦ,
	        |	ЕСТЬNULL(Аналитика.Номенклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)),
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Ссылка, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)),
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)),
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Номенклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)),
	        |	ЕСТЬNULL(АналитикаВыпущеннойПродукции.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)),
	        |	КорректировкиНДСПартий.АналитикаРасходовПолучатель,
	        |	КорректировкиНДСПартий.ПодразделениеПолучатель,
	        |	КорректировкиНДСПартий.СтатьяРасходовПолучатель,
			|	ЕСТЬNULL(СтатьиРасходов.Ссылка, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Ссылка" 
			+
		    "
			|;
			|";
	
КонецФункции

Функция ТекстДанныеСебестоимостиДляКорректировкиНДСПартий()
	
#Область ВтСтрокиДляКорректировкиНДСПартий
	ТекстДанныеСебестоимостиДляКорректировкиНДСПартий = "
	|ВЫБРАТЬ
	|	Движения.Регистратор КАК Ссылка,
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО) КАК КорНоменклатура,
	|	Аналитика.Склад КАК Склад,
	|	ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад) КАК КорСклад,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.КорВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК КорГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Движения.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОНЕЦ
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Контрагент
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	Движения.ГруппаПродукции КАК ГруппаПродукции,
	|	Аналитика.Ссылка КАК АналитикаУчетаНоменклатуры,
	|
	|	ВЫБОР КОГДА Движения.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(ВидыЗапасов.НалоговоеНазначение, ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка))
	|	ИНАЧЕ
	|		Движения.НалоговоеНазначение
	|	КОНЕЦ КАК НалоговоеНазначение,
	|	ВЫБОР КОГДА Движения.КорНалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(КорВидыЗапасов.НалоговоеНазначение, ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка))
	|	ИНАЧЕ
	|		Движения.КорНалоговоеНазначение
	|	КОНЕЦ КАК КорНалоговоеНазначение,
	|	Движения.РазделУчета КАК РазделУчета,
	|	Движения.Подразделение КАК Подразделение,
	|	Движения.АналитикаРасходов КАК АналитикаРасходов,
	|	Движения.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	Движения.АналитикаДоходов КАК АналитикаДоходов,
	|	Движения.СтатьяДоходов КАК СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Движения.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Движения.ПериодПродажи КАК ПериодПродажи,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(
	|		ВЫБОР КОГДА Движения.СтоимостьРегл <> 0
	|			ТОГДА Движения.СтоимостьРегл
	|			ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0) * Движения.Количество КАК ЧИСЛО(15, 2))
	|		КОНЕЦ
	|	) КАК Сумма,
	|
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР,
	|	0 КАК СуммаНУ
	|
	|ПОМЕСТИТЬ ВтСтрокиДляКорректировкиНДСПартий
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО
	|		Движения.Регистратор = ДокументыКОтражению.Ссылка
	|		И НЕ Движения.РасчетСебестоимости
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО ВидыЗапасов.Назначение = Назначения.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|	ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО КорВидыЗапасов.Назначение = КорНазначения.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Движения.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		Движения.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ПО
	|		Движения.СтоимостьРегл = 0
	|		И Движения.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|		И Движения.РазделУчета = СтоимостьТоваров.РазделУчета
	|		И Движения.ВидЗапасов = СтоимостьТоваров.ВидЗапасов
	|		И Движения.Организация = СтоимостьТоваров.Организация
	|		И НАЧАЛОПЕРИОДА(Движения.Период, Месяц) = СтоимостьТоваров.Период
	|ГДЕ
	|	Движения.Количество <> 0
	|	И Движения.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Регистратор,
	|	Движения.ВидДвижения,
	|	Аналитика.Номенклатура,
	|	ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО),
	|	Аналитика.Склад,
	|	ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад),
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.ВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ЕСТЬNULL(Движения.КорВидЗапасов.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|	ИНАЧЕ
	|		КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		Движения.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		КОНЕЦ
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ Движения.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	ТОГДА
	|		Движения.КорВидЗапасов.Контрагент
	|	КОГДА Движения.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) ТОГДА
	|		Движения.АналитикаУчетаПоПартнерам.Контрагент
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|
	|	Аналитика.Ссылка,
	|	ВЫБОР КОГДА Движения.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(ВидыЗапасов.НалоговоеНазначение, ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка))
	|	ИНАЧЕ
	|		Движения.НалоговоеНазначение
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Движения.КорНалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ТОГДА
	|		ЕСТЬNULL(КорВидыЗапасов.НалоговоеНазначение, ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка))
	|	ИНАЧЕ
	|		Движения.КорНалоговоеНазначение
	|	КОНЕЦ,
	|
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(КорНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|
	|	Движения.АналитикаРасходов,
	|	Движения.РазделУчета,
	|	Движения.Подразделение,
	|	Движения.СтатьяРасходовСписания,
	|	Движения.АналитикаДоходов,
	|	Движения.СтатьяДоходов,
	|	Движения.АналитикаАктивовПассивов,
	|	Движения.СтатьяАктивовПассивов,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.ИдентификаторСтроки,
	|	Движения.ПериодПродажи,
	|	Движения.ГруппаПродукции,
	|	ВЫБОР КОГДА Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
#КонецОбласти

	Возврат ТекстДанныеСебестоимостиДляКорректировкиНДСПартий;
	
КонецФункции 

#КонецОбласти
          
#Область ЗапросСчетов

Функция ТекстПорядокОтраженияРасчетовСПартнерами() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСПоставщиками КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаАвансовВыданных КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСКлиентами КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаАвансовПолученных КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоВознаграждению) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовПоВознаграждению КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСПоставщикамиТара КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСКлиентамиТара КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокУчета
		|";
КонецФункции

Функция ТекстПорядокОтраженияНоменклатуры() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	ПорядокУчета.Склад КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаНаСкладе КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	ПорядокУчета.Склад КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВыручкиОтПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	ПорядокУчета.Склад КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВычетыИзДоходов) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВычетовИзДоходов КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокУчета
		|

		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	ПорядокУчета.Склад КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаСебестоимостиПродаж КАК СчетУчета,

		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяЗатратРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяЗатратРегл КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокУчета
		|";
КонецФункции

Функция ТекстПорядокОтраженияНоменклатурыПереданнойНаКомиссию() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВыручкиОтПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатурыПереданнойНаКомиссию КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаСебестоимостиПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяЗатратРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяЗатратРегл КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатурыПереданнойНаКомиссию КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВычетыИзДоходовКомиссионера) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВычетовИзДоходов КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатурыПереданнойНаКомиссию КАК ПорядокУчета
		|

		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.ГруппаФинансовогоУчета КАК АналитикаУчета,
		|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаПередачиНаКомиссию КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияНоменклатурыПереданнойНаКомиссию КАК ПорядокУчета
		|";
КонецФункции

Функция ТекстПорядокОтраженияДоходов() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.СтатьяДоходов КАК АналитикаУчета,
		|	ПорядокУчета.Подразделение КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчета КАК СчетУчета,
		|	ИСТИНА КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходов КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияДоходов КАК ПорядокУчета
		|
		|";
КонецФункции

Функция ТекстПорядокОтраженияРасходов() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Организация КАК Организация,
		|	ПорядокУчета.СтатьяРасходов КАК АналитикаУчета,
		|	ПорядокУчета.Подразделение КАК МестоУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчета КАК СчетУчета,
		|	ИСТИНА КАК ИспользоватьСубконто,
		|	ПорядокУчета.ВидСубконто КАК ВидСубконто,
		|	ПорядокУчета.СтатьяРасходов КАК Субконто
		|ИЗ РегистрСведений.ПорядокОтраженияРасходов КАК ПорядокУчета
		|";
КонецФункции

Функция ТекстПорядокОтраженияТМЦВЭксплуатации() Экспорт
	
	Возврат "
	|ВЫБРАТЬ
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.КатегорияЭксплуатации КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.КатегорияЭксплуатации КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииАмортизация) КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетАмортизации КАК СчетУчета,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияТМЦВЭксплуатации КАК ПорядокУчета
	
	|";
	
КонецФункции

Функция ТекстПорядокОтраженияПодарочныхСертификатов() Экспорт
	
	Возврат "
	|ВЫБРАТЬ
	|	ПорядокУчета.Организация КАК Организация,
	|	ПорядокУчета.ВидСертификата КАК АналитикаУчета,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам) КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияПодарочныхСертификатов КАК ПорядокУчета
	|";
	
КонецФункции

#КонецОбласти

#Область ЗапросСчетовПоУмолчанию

Функция ТекстСчетаОтраженияРасчетовСПартнерамиПоУмолчанию()
	
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСПоставщиками КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаАвансовВыданных КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСКлиентами КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаАвансовПолученных КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоВознаграждению) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовПоВознаграждению КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСПоставщикамиТара КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаРасчетовСКлиентамиТара КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ
		|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ПорядокУчета
		|";
	
КонецФункции

Функция ТекстСчетаОтраженияНоменклатурыПоУмолчанию() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаНаСкладе КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВыручкиОтПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаСебестоимостиПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяЗатратРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяЗатратРегл КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета		
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВычетыИзДоходов) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВычетовИзДоходов КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|
		|";
КонецФункции

Функция ТекстСчетаОтраженияНоменклатурыПереданнойНаКомиссиюПоУмолчанию() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродажКомиссионера) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВыручкиОтПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродажКомиссионера) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаСебестоимостиПродаж КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяЗатратРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяЗатратРегл КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВычетыИзДоходовКомиссионера) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаВычетовИзДоходов КАК СчетУчета,
		|	(ВЫБОР КОГДА ПорядокУчета.СтатьяДоходовРегл = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.СтатьяДоходовРегл КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчетаПередачиНаКомиссию КАК СчетУчета,
		|	ЛОЖЬ КАК ИспользоватьСубконто,
		|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
		|	НЕОПРЕДЕЛЕНО КАК Субконто
		|ИЗ 
		|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ПорядокУчета
		|";
		
КонецФункции

Функция ТекстСчетаОтраженияДоходовПоУмолчанию() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчета КАК СчетУчета,
		|	ИСТИНА КАК ИспользоватьСубконто,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов) КАК ВидСубконто,
		|	ПорядокУчета.Ссылка КАК Субконто
		|ИЗ 
		|	ПланВидовХарактеристик.СтатьиДоходов КАК ПорядокУчета
		|";
КонецФункции

Функция ТекстСчетаОтраженияРасходовПоУмолчанию() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ПорядокУчета.Ссылка КАК АналитикаУчета,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаРеглУчета,
		|	ПорядокУчета.СчетУчета КАК СчетУчета,
		|	ВЫБОР 
		|		КОГДА ВидыСубконто.Ссылка ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ИспользоватьСубконто,
		|	ЕСТЬNULL(ВидыСубконто.ВидСубконто, НЕОПРЕДЕЛЕНО) КАК ВидСубконто,
		|	ПорядокУчета.Ссылка КАК Субконто
		|ИЗ 
		|	ПланВидовХарактеристик.СтатьиРасходов КАК ПорядокУчета
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто
		|	ПО
		|		ПорядокУчета.СчетУчета = ВидыСубконто.Ссылка
		|		И ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
		|	
		|";
КонецФункции

Функция ТекстСчетаОтраженияТМЦВЭксплуатацииПоУмолчанию() Экспорт
	
	Возврат "
	|ВЫБРАТЬ
	|	ПорядокУчета.Ссылка КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ИЗ
	|	Справочник.КатегорииЭксплуатации КАК ПорядокУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчета.Ссылка КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииАмортизация) КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетАмортизации КАК СчетУчета,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ИЗ
	|	Справочник.КатегорииЭксплуатации КАК ПорядокУчета
	|";
	
КонецФункции

Функция ТекстСчетаОтраженияПодарочныхСертификатовПоУмолчанию() Экспорт
	
	Возврат "
	|ВЫБРАТЬ
	|	ПорядокУчета.Ссылка КАК АналитикаУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам) КАК ВидСчетаРеглУчета,
	|	ПорядокУчета.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ИспользоватьСубконто,
	|	НЕОПРЕДЕЛЕНО КАК ВидСубконто,
	|	НЕОПРЕДЕЛЕНО КАК Субконто
	|ИЗ
	|	Справочник.ВидыПодарочныхСертификатов КАК ПорядокУчета
	|";
	
КонецФункции

Функция СтрокаИзмерениеНастройки(ВидСчета, ИдентификаторСтроки, Организация) Экспорт
	
	Результат = "";
	Если ВидСчета = Перечисления.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы Тогда
		Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
			Результат = НСтр("ru=' в строке ""%ИдентификаторСтроки%"" документа';uk=' у рядку ""%ИдентификаторСтроки%"" документа'");
			Результат = СтрЗаменить(Результат, "%ИдентификаторСтроки%", Строка(ИдентификаторСтроки));
		Иначе
			Результат = НСтр("ru=' в документе';uk=' в документі'");
		КонецЕсли;
	Иначе
		Результат = НСтр("ru=' в организации ""%Организация%""';uk=' в організації ""%Организация%""'");
		Результат = СтрЗаменить(Результат, "%Организация%", Строка(Организация));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
