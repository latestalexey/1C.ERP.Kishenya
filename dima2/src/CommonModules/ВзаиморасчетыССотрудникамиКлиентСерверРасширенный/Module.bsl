
#Область СлужебныйПрограммныйИнтерфейс

#Область МестаВыплатыЗарплаты

Функция ФормаОплатыВедомости(Ведомость) Экспорт
	
	Если ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВБанк") Или ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыПеречислением") Тогда
		ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Безналичная")
	ИначеЕсли ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыВКассу") Или ТипЗнч(Ведомость) = Тип("ДокументСсылка.ВедомостьНаВыплатуЗарплатыРаздатчиком") Тогда
		ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличная")
	Иначе
		ФормаОплатыВедомости = Неопределено
	КонецЕсли;	
	
	Возврат ФормаОплатыВедомости
	
КонецФункции	
		
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииФормВедомостейНаВыплатуЗарплаты

Процедура ВедомостьУстановитьПредставлениеОснований(Форма) Экспорт
	
	Если ЗначениеЗаполнено(Форма.ВидДокументаОснования) Тогда
	
		Если Форма.Объект.Основания.Количество() = 0 Тогда
			Форма.ОснованияПредставление = НСтр("ru='Не выбраны';uk='Не вибрані'");
			Форма.ОснованияВыбраны = Ложь;
		Иначе	
			Форма.ОснованияПредставление = ЧислоПрописью(Форма.Объект.Основания.Количество(),,НСтр("ru='документ, документа, документов, м, ,,,,0';uk='документ, документа, документів, м, ,,,,0'"));
			Форма.ОснованияВыбраны = Истина;
		КонецЕсли;	
		
	Иначе
		
		Форма.ОснованияПредставление = "";
		Форма.ОснованияВыбраны = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВедомостьУстановитьПредставлениеПараметровРасчета(Форма) Экспорт
	
	Ведомость = Форма.Объект;
	
	// Проконтролируем сомнительные настройки.
	Если НЕ ЗначениеЗаполнено(Ведомость.ПроцентВыплаты) ИЛИ Ведомость.ПроцентВыплаты < 0 Тогда
		ТекстОшибки = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='размер выплаты %1% ?';uk='розмір виплати %1% ?'"), 
				Ведомость.ПроцентВыплаты)
	Иначе
		ТекстОшибки = ""
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		ПредставлениеПараметровРасчета = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Внимание. Проверьте настройки расчета: %1';uk='Увага. Перевірте настройки розрахунку: %1'"),  
				ТекстОшибки);
			
	Иначе
	
	// Штатная работа
	
		Если ЗначениеЗаполнено(Ведомость.ПроцентВыплаты) И Ведомость.ПроцентВыплаты <> 100 Тогда
			ТекстПроцент = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='%1% от причитающихся сумм';uk='%1% від належних сум'"),  
					Ведомость.ПроцентВыплаты);
		Иначе
			ТекстПроцент = НСтр("ru='всеми причитающимися суммами';uk='усіма належними сумами'")
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Ведомость.Округление) Тогда
			ТекстОкругление = ", " + НРег(Ведомость.Округление);
		Иначе
			ТекстОкругление = ""
		КонецЕсли;
		
		Если Ведомость.ПорядокЗаполненияНалогов = ПредопределенноеЗначение("Перечисление.ПорядокЗаполненияНалогов.Взносы") Тогда
			ТекстНалоги = ", " + НСтр("ru='перечисление взносов';uk='перерахування внесків'");
		ИначеЕсли Ведомость.ПорядокЗаполненияНалогов = ПредопределенноеЗначение("Перечисление.ПорядокЗаполненияНалогов.НДФЛ") Тогда
			ТекстНалоги = ", " + НСтр("ru='перечисление НДФЛ';uk='перерахування ПДФО'");
		ИначеЕсли Ведомость.ПорядокЗаполненияНалогов = ПредопределенноеЗначение("Перечисление.ПорядокЗаполненияНалогов.НДФЛИВзносы") Тогда
			ТекстНалоги = ", " + НСтр("ru='перечисление НДФЛ и взносов';uk='перерахування ПДФО і внесків'");	
		Иначе	
			ТекстНалоги = ", " + НСтр("ru='без налогов';uk='без податків'");
		КонецЕсли;	
		
		
		ПредставлениеПараметровРасчета = 
			НСтр("ru='Заполнение';uk='Заповнення'") + " " + 
			ТекстПроцент +
			ТекстОкругление + ТекстНалоги;
			
	КонецЕсли;
	
	Форма.Элементы.ПараметрыРасчетаГруппа.ЗаголовокСвернутогоОтображения =  ПредставлениеПараметровРасчета;
	
КонецПроцедуры

Процедура УстановитьОтображениеВХО(Форма, УстанавливатьОтображениеВыплатыЗарплаты = Истина,  УстанавливатьОтображениеПеречисленияНДФЛ = Истина) Экспорт
	
	Ведомость = Форма.Объект.Ссылка;
	
	Если УстанавливатьОтображениеВыплатыЗарплаты Тогда
		
		НевыплатыПоВедомости = Новый Массив;
		
		ФормаОплатыВедомости = ФормаОплатыВедомости(Ведомость);
		
		Если ЗначениеЗаполнено(ФормаОплатыВедомости) 
			И ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Безналичная") 
			И  ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации") Тогда
			
			Модуль = ОбщийМодуль("СведенияОНезачисленнойЗарплатеВызовСервера");
			НевыплатыПоВедомости = Модуль.НезачисленияПоВедомости(Ведомость);
			
		ИначеЕсли ЗначениеЗаполнено(ФормаОплатыВедомости)
			И ФормаОплатыВедомости = ПредопределенноеЗначение("Перечисление.ФормыОплаты.Наличная") 
			И ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетДепонированнойЗарплаты") Тогда
			
			Модуль = ОбщийМодуль("УчетДепонированнойЗарплатыВызовСервера");
			НевыплатыПоВедомости = Модуль.ДепонированияПоВедомости(Ведомость);
			
		КонецЕсли;
		
		Если НевыплатыПоВедомости.Количество() = 0 Тогда
			Форма.Элементы.ВыплатаЗарплатыСтраницы.ТекущаяСтраница = Форма.Элементы.ВыплатаЗарплатыСтраницыПолностью
		Иначе
			Форма.Элементы.ВыплатаЗарплатыСтраницы.ТекущаяСтраница = Форма.Элементы.ВыплатаЗарплатыСтраницыЧастично
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если УстанавливатьОтображениеПеречисленияНДФЛ Тогда
		
		Если Форма.Объект.ПеречислениеНДФЛВыполнено Тогда
			Форма.Элементы.ПеречислениеНДФЛСтраницы.ТекущаяСтраница = Форма.Элементы.ПеречислениеНДФЛСтраницаПолностью
		Иначе
			Форма.Элементы.ПеречислениеНДФЛСтраницы.ТекущаяСтраница = Форма.Элементы.ПеречислениеНДФЛСтраницаЧастично
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

Функция ПодсистемаСуществует(ПолноеИмяПодсистемы)
	
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Возврат ОбщегоНазначения.ПодсистемаСуществует(ПолноеИмяПодсистемы);
#Иначе
	Возврат ОбщегоНазначенияКлиент.ПодсистемаСуществует(ПолноеИмяПодсистемы);
#КонецЕсли

КонецФункции

Функция ОбщийМодуль(Имя)
	
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	Модуль = ОбщегоНазначения.ОбщийМодуль(Имя);
#Иначе
	Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль(Имя);
#КонецЕсли
	
	Возврат Модуль;
	
КонецФункции

#КонецОбласти
