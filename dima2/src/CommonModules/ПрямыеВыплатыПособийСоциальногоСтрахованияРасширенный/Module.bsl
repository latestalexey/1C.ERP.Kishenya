#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПризнакВыплачиваетсяФСССуществующихДокументов(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Ссылка
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПередачиВыплатыПособий КАК ВТДатыПередачиВыплатыПособий
	|		ПО ОтпускПоУходуЗаРебенком.Организация = ВТДатыПередачиВыплатыПособий.Организация
	|			И (ВТДатыПередачиВыплатыПособий.Дата МЕЖДУ ОтпускПоУходуЗаРебенком.ДатаНачала И ОтпускПоУходуЗаРебенком.ДатаОкончания)
	|			И (ОтпускПоУходуЗаРебенком.ПособиеВыплачиваетсяФСС = ЛОЖЬ)";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			
			Документ.ПособиеВыплачиваетсяФСС = Истина;
			
			Документ.Записать(РежимЗаписиДокумента.Запись);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

// Функция - Категории начислений пособий по прямым выплатам ФСС
// 
// Возвращаемое значение:
//  МассивКатегорий - Массив, категории пособий, которые оплачиваются напрямую ФСС
//
Функция КатегорииНачисленийПособийПоПрямымВыплатамФСС() Экспорт
	
	МассивКатегорий = Новый Массив;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет);
		
	Возврат МассивКатегорий;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаявлениеРасчетВФСС

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Месяц, ФСС, Организация, СписокСотрудников ,Ссылка, ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено) Экспорт
	
	СписокПричин = Новый СписокЗначений;
	Если Месяц < Дата(2018,10,1) Тогда
		СписокПричин.Добавить(Перечисления.ПричиныНетрудоспособности.Профзаболевание);
		СписокПричин.Добавить(Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Текст = ТекстЗапросаПервичныеДокументыДляЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ОплатаДнейУходаЗаДетьмиИнвалидами, ФСС, СписокСотрудников);
	Текст = Текст +
	"
	|; 
	|";
	
	Текст = Текст +
	"ВЫБРАТЬ
	|	БольничныйЛист.Сотрудник КАК Сотрудник,
	|	БольничныйЛист.Начислено КАК СуммаПособия,
	|	БольничныйЛист.Ссылка КАК ДокументОснование,
	|	1 КАК КоличествоСтраниц,
	|	БольничныйЛист.ПричинаНетрудоспособности,
	|	БольничныйЛист.ДнейОплаты КАК КоличествоДнейВсего,
	|	БольничныйЛист.ДнейОплатыЗаСчетФСС КАК КоличествоДнейВсегоФСС,
	|	БольничныйЛист.СуммаЧернобыльскойЛьготы КАК СуммаЛьготыЧернобыльцы,
	|	БольничныйЛист.НомерЛисткаНетрудоспособности КАК НомерБольничного,
	|	БольничныйЛист.ДатаНачала КАК ПериодС,
	|	БольничныйЛист.ДатаОкончания КАК ПериодПо,
	|	БольничныйЛист.Начислено КАК СуммаПособияВсего,
	|	БольничныйЛист.НачисленоФСС КАК СуммаПособияВсегоФСС
	|ИЗ
	|	Документ.БольничныйЛист КАК БольничныйЛист
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|		ПО БольничныйЛист.Ссылка = ВТДокументы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ГруппаУчета", Справочники.ГруппыУчетаНачисленийИУдержаний.НачисленияФСС);
	Запрос.УстановитьПараметр("ДокументОснование", ОплатаДнейУходаЗаДетьмиИнвалидами);
	Запрос.УстановитьПараметр("ПричинаНетрудоспособности", СписокПричин);
	Запрос.УстановитьПараметр("ДатаСобытия", Месяц);
	Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
	
 	Возврат Запрос.Выполнить();
	
КонецФункции 

Функция ТекстЗапросаПервичныеДокументыДляЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено, ФСС, СписокСотрудников)
	
	Если ЗначениеЗаполнено(ОплатаДнейУходаЗаДетьмиИнвалидами) Тогда
		Текст =
		"ВЫБРАТЬ
		|	БольничныйЛист.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.БольничныйЛист КАК БольничныйЛист
		|ГДЕ
		|	БольничныйЛист.Ссылка = &ДокументОснование";
	Иначе
		Текст = 
		"ВЫБРАТЬ
		|	ИспользованныеОплаты.ДокументОснование КАК Ссылка
		|ПОМЕСТИТЬ ВТИспользованныеОплаты
		|ИЗ
		|	Документ.ЗаявлениеРасчетВФСС.Оплаты КАК ИспользованныеОплаты
		|ГДЕ
		|	ИспользованныеОплаты.Ссылка.Организация = &Организация
		|	И ИспользованныеОплаты.Ссылка <> &Ссылка
		|	И ИспользованныеОплаты.Ссылка.Проведен = ИСТИНА
		|	И НЕ ИспользованныеОплаты.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БольничныйЛист.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.БольничныйЛист КАК БольничныйЛист
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованныеОплаты КАК ВТИспользованныеОплаты
		|		ПО БольничныйЛист.Ссылка = ВТИспользованныеОплаты.Ссылка
		|ГДЕ
		|	БольничныйЛист.Организация = &Организация
		|	И ВТИспользованныеОплаты.Ссылка ЕСТЬ NULL 
		|	И БольничныйЛист.ПометкаУдаления = ЛОЖЬ
		|	И БольничныйЛист.Проведен = ИСТИНА
		|	И БольничныйЛист.ПериодРегистрации = &ДатаСобытия";
		Если ФСС = Перечисления.ВидыОбязательногоСтрахованияСотрудников.ФСС Тогда
			Текст = Текст + "	
			|	И НЕ БольничныйЛист.ПричинаНетрудоспособности В (&ПричинаНетрудоспособности)"
		Иначе	
			Текст = Текст + "	
			|	И БольничныйЛист.ПричинаНетрудоспособности В (&ПричинаНетрудоспособности)"
		КонецЕсли;
		Если СписокСотрудников <> Неопределено Тогда
			Текст = Текст + "
			|	И БольничныйЛист.Сотрудник В(&СписокСотрудников)";
		КонецЕсли;

		
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("НазваниеРабочегоОрганаФонда", 				ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НазваниеРабочегоОрганаФонда",		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("НомерФССУ",	 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НомерФССУ", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("НомерФСС",		 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НомерФСС", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("НомерФССНесчСлучай",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НомерФССНесчСлучай", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПоЕДРПОУ",	 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КодПоЕДРПОУ", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ГлавныйБухгалтер", 						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ГлавныйБухгалтер",			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ФИОДиректораФонда",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ФИОДиректораФонда",			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодКВЕД",		 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КодКВЕД", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("Руководитель", 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("Руководитель", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресОрганизации",							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("АдресОрганизации", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ТелефонСоставителя", 			"Организация", "Организация", Ложь, , ""));
	
	//ОписаниеФиксацииРеквизитов.Вставить("ОплатыСотрудник", 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("Сотрудник"));
	//ОписаниеФиксацииРеквизитов.Вставить("ОплатыСреднедневнойЗаработок", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СреднедневнойЗаработок"));
	//ОписаниеФиксацииРеквизитов.Вставить("ОплатыКоличествоСтраниц", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КоличествоСтраниц"));
	//ОписаниеФиксацииРеквизитов.Вставить("ОплатыСуммаПособия", 						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СуммаПособия"));
	
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыКоличествоДнейВсегоФСС", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КоличествоДнейВсегоФСС"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыСуммаПособияВсего", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СуммаПособияВсего"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыКоличествоДнейВсего", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КоличествоДнейВсего"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыСуммаПособияВсегоФСС", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СуммаПособияВсегоФСС"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыСуммаЛьготыЧернобыльцы", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СуммаЛьготыЧернобыльцы"));
	
	//ОписаниеФиксацииРеквизитов.Вставить("ПособияНаПогребениеСотрудник", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("Сотрудник",				"ПособияНаПогребение", , , ,"ПособияНаПогребение"));
	//ОписаниеФиксацииРеквизитов.Вставить("ПособияНаПогребениеДокументОснование", 	ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ДокументОснование",			"ПособияНаПогребение", , , ,"ПособияНаПогребение"));
	ОписаниеФиксацииРеквизитов.Вставить("ПособияНаПогребениеРазмерПособия", 		ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("РазмерПособия",				"ПособияНаПогребение", , , ,"ПособияНаПогребение"));	
	
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ИспользуетсяЗаполнениеДокументаЗаявлениеРасчетВФСС() Экспорт

	Возврат Истина;
	
КонецФункции 

#КонецОбласти

Функция ДанныеЗаполненияРасходовНаПогребение(Месяц, ФондСоциальногоСтрахования, Организация, СписокСотрудников, Ссылка, ЕдиновременноеПособие = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Текст = ТекстЗапросаПервичныеДокументыДляЗаполненияРасходовНаПогребение(ЕдиновременноеПособие, СписокСотрудников);
	Текст = Текст +
	"
	|; 
	|";
	
	Текст = Текст +
	"ВЫБРАТЬ
	|	ЕдиновременноеПособиеЗаСчетФСС.Сотрудник КАК Сотрудник,
	|	ЕдиновременноеПособиеЗаСчетФСС.Начислено КАК РазмерПособия,
	|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка КАК ДокументОснование
	|ИЗ
	|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|		ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ВТДокументы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ФондСоциальногоСтрахования", ФондСоциальногоСтрахования);
	Запрос.УстановитьПараметр("ДатаСобытия", Месяц);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 	
	Запрос.УстановитьПараметр("ДокументОснование", ЕдиновременноеПособие);
	Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
	Возврат Запрос.Выполнить();
	
КонецФункции 

Функция ТекстЗапросаПервичныеДокументыДляЗаполненияРасходовНаПогребение(ЕдиновременноеПособие = Неопределено, СписокСотрудников)
	
	Если ЗначениеЗаполнено(ЕдиновременноеПособие) Тогда
		Текст = 
		"ВЫБРАТЬ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|ГДЕ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка = &ДокументОснование";
	Иначе
		Текст = 
		"ВЫБРАТЬ
		|	ИспользованныеОплаты.ДокументОснование КАК Ссылка
		|ПОМЕСТИТЬ ВТИспользованныеОплаты
		|ИЗ
		|	Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение КАК ИспользованныеОплаты
		|ГДЕ
		|	ИспользованныеОплаты.Ссылка.Организация = &Организация
		|	И ИспользованныеОплаты.Ссылка <> &Ссылка
		|	И ИспользованныеОплаты.Ссылка.Проведен = ИСТИНА
		|	И НЕ ИспользованныеОплаты.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованныеОплаты КАК ВТИспользованныеОплаты
		|		ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ВТИспользованныеОплаты.Ссылка
		|ГДЕ
		|	ЕдиновременноеПособиеЗаСчетФСС.Организация = &Организация
		|	И ЕдиновременноеПособиеЗаСчетФСС.ФондСоциальногоСтрахования = &ФондСоциальногоСтрахования
		|	И ВТИспользованныеОплаты.Ссылка ЕСТЬ NULL 
		|	И ЕдиновременноеПособиеЗаСчетФСС.ПометкаУдаления = ЛОЖЬ
		|	И ЕдиновременноеПособиеЗаСчетФСС.Проведен = ИСТИНА
		|	И ЕдиновременноеПособиеЗаСчетФСС.ПериодРегистрации = &ДатаСобытия
		|	И ЕдиновременноеПособиеЗаСчетФСС.Начислено > 0";
		Если СписокСотрудников <> Неопределено Тогда
		Текст = Текст + "
		|	И ЕдиновременноеПособиеЗаСчетФСС.Сотрудник В(&СписокСотрудников)";
		КонецЕсли;
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции 




// Определяет есть ли в массиве начислений пособия оплачиваемые за счет ФСС 
//
// Параметры
//  МассивНачислений - массив или список значений содержащий виды расчетов
//
// Возвращаемое значение:
//    Булево - истина, если в массиве начислений есть пособия за счет ФСС.
//
Функция КоллекцияСодержитПособияЗаСчетФСС(МассивНачислений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка В(&МассивНачислений)
	|	И Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&МассивКатегорий)";
	Запрос.УстановитьПараметр("МассивНачислений", МассивНачислений);
	Запрос.УстановитьПараметр("МассивКатегорий", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();	
	
КонецФункции

#КонецОбласти

