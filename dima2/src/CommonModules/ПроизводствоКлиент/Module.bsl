////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Производство"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПереработкаНаСтороне

Функция ДанныеДляФормированияЗаказовПереработчикам(СписокСтрок) Экспорт
	
	Организация = Неопределено;
	Переработчик = Неопределено;
	Склад = Неопределено;
	Подразделение = Неопределено;
	ГруппаСкладов = Неопределено;
	НаправлениеДеятельности = Неопределено;
	
	РеквизитыШапки = Новый Структура;
	ЭтапыГрафика = Новый Массив;
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		РазрешенВыборГруппы = (ДанныеСтроки.ВыборГруппы = ПредопределенноеЗначение("Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах")
								ИЛИ ДанныеСтроки.ВыборГруппы = ПредопределенноеЗначение("Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных"));
		
		Если (Склад <> Неопределено 
					И Склад <> ДанныеСтроки.Склад 
					И (ГруппаСкладов <> ДанныеСтроки.ГруппаСкладов
						ИЛИ НЕ РазрешенВыборГруппы))
			ИЛИ (ЗначениеЗаполнено(Переработчик)
					И Переработчик <> ДанныеСтроки.Переработчик) Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Для оформления документа необходимо выбрать продукцию 
                                                |одного переработчика, поступающую на один склад.'
                                                |;uk='Для оформлення документа необхідно вибрати продукцію 
                                                |одного переробника, що надходить на один склад.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Организация <> Неопределено 
			И Организация <> ДанныеСтроки.Организация Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Для оформления документа необходимо выбрать заказы одной организации.';uk='Для оформлення документа необхідно вибрати замовлення однієї організації.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если НаправлениеДеятельности <> Неопределено 
			И НаправлениеДеятельности <> ДанныеСтроки.НаправлениеДеятельности Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Для оформления документа необходимо выбрать заказы одного направления деятельности.';uk='Для оформлення документа необхідно вибрати замовлення одного напряму діяльності.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		ДанныеЭтапа = Новый Структура("Распоряжение,КодСтрокиЭтапыГрафик");
		ЗаполнитьЗначенияСвойств(ДанныеЭтапа, ДанныеСтроки);
		ЭтапыГрафика.Добавить(ДанныеЭтапа);
		
		Организация = ДанныеСтроки.Организация;
		Склад = ДанныеСтроки.Склад;
		Подразделение = ДанныеСтроки.Подразделение;
		ГруппаСкладов = ДанныеСтроки.ГруппаСкладов;
		
		// Переработчик может быть не указан в заказе на производство
		Переработчик = ?(ЗначениеЗаполнено(ДанныеСтроки.Переработчик), ДанныеСтроки.Переработчик, Переработчик);
		
	КонецЦикла; 
	
	РеквизитыШапки.Вставить("Организация", Организация);
	РеквизитыШапки.Вставить("Партнер", Переработчик);
	РеквизитыШапки.Вставить("Подразделение", Подразделение);
	РеквизитыШапки.Вставить("Склад", ?(ЗначениеЗаполнено(ГруппаСкладов) И РазрешенВыборГруппы, ГруппаСкладов, Склад));
	РеквизитыШапки.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ЭтапыГрафика", ЭтапыГрафика);
	ДанныеЗаполнения.Вставить("РеквизитыШапки", РеквизитыШапки);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Функция ДанныеДляФормированияПоступленияОтПереработчика(СписокСтрок) Экспорт
	
	Организация = Неопределено;
	Переработчик = Неопределено;
	Контрагент = Неопределено;
	Договор = Неопределено;
	Склад = Неопределено;
	ГруппаСкладов = Неопределено;
	ЗаказПереработчику = Неопределено;
	НаправлениеДеятельности = Неопределено;
	КоличествоЗаказов = 0;
	
	РеквизитыШапки = Новый Структура;
	СписокПродукции = Новый Массив;
	Для каждого ДанныеСтроки Из СписокСтрок Цикл
		
		Если (Склад <> Неопределено 
					И Склад <> ДанныеСтроки.Склад 
					И ГруппаСкладов <> ДанныеСтроки.ГруппаСкладов)
			ИЛИ (ЗначениеЗаполнено(Переработчик)
					И Переработчик <> ДанныеСтроки.Переработчик) Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Для оформления документа необходимо выбрать продукцию 
                                                |одного переработчика, поступающую на один склад.'
                                                |;uk='Для оформлення документа необхідно вибрати продукцію 
                                                |одного переробника, що надходить на один склад.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если Организация <> Неопределено 
			И Организация <> ДанныеСтроки.Организация Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Для оформления документа необходимо выбрать заказы одной организации.';uk='Для оформлення документа необхідно вибрати замовлення однієї організації.'"));
			Возврат Неопределено;
		КонецЕсли; 
		
		Если НаправлениеДеятельности <> Неопределено 
			И НаправлениеДеятельности <> ДанныеСтроки.НаправлениеДеятельности Тогда
			
			ПоказатьПредупреждение(, НСтр("ru='Для оформления документа необходимо выбрать заказы одного направления деятельности.';uk='Для оформлення документа необхідно вибрати замовлення одного напряму діяльності.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Если ЗаказПереработчику <> Неопределено И ДанныеСтроки.Распоряжение <> ЗаказПереработчику Тогда
			КоличествоЗаказов = КоличествоЗаказов + 1;
		КонецЕсли; 
		
		ДанныеПродукции = Новый Структура("Распоряжение,КодСтроки");
		ЗаполнитьЗначенияСвойств(ДанныеПродукции, ДанныеСтроки);
		СписокПродукции.Добавить(ДанныеПродукции);
		
		Организация = ДанныеСтроки.Организация;
		Склад = ДанныеСтроки.Склад;
		ГруппаСкладов = ДанныеСтроки.ГруппаСкладов;
		ЗаказПереработчику = ДанныеСтроки.Распоряжение;
		НаправлениеДеятельности = ДанныеСтроки.НаправлениеДеятельности;
		
		// Переработчик может быть не указан в заказе на производство
		Если ЗначениеЗаполнено(ДанныеСтроки.Переработчик) Тогда
			Переработчик = ДанныеСтроки.Переработчик;
			Контрагент = ДанныеСтроки.Контрагент;
			Договор = ДанныеСтроки.Договор;
		КонецЕсли; 
		
	КонецЦикла; 
	
	РеквизитыШапки.Вставить("Организация", Организация);
	РеквизитыШапки.Вставить("Партнер", Переработчик);
	РеквизитыШапки.Вставить("Контрагент", Контрагент);
	РеквизитыШапки.Вставить("Договор", Договор);
	РеквизитыШапки.Вставить("Склад", ?(ЗначениеЗаполнено(ГруппаСкладов), ГруппаСкладов, Склад));
	РеквизитыШапки.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ЗаказПереработчику", ?(КоличествоЗаказов = 1, ЗаказПереработчику, Неопределено));
	ДанныеЗаполнения.Вставить("СписокПродукции", СписокПродукции);
	ДанныеЗаполнения.Вставить("РеквизитыШапки", РеквизитыШапки);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Функция ДанныеДляФормированияОтчетаПереработчику(СписокСтрок) Экспорт

	Распоряжение = Неопределено;
	Организация = Неопределено;
	Переработчик = Неопределено;
	НаправлениеДеятельности = Неопределено;
	СписокПродукции = Новый Массив;
	МассивРаспоряжений = Новый Массив;
	
	Для каждого ТекущиеДанные Из СписокСтрок Цикл
		
		Если Распоряжение <> Неопределено 
			И Распоряжение <> ТекущиеДанные.Распоряжение 
			И ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказПереработчику") Тогда
			ПоказатьПредупреждение(, НСтр("ru='Для оформления отчета необходимо выбрать продукцию одного заказа.';uk='Для оформлення звіту необхідно вибрати продукцію одного замовлення.'"));
			Возврат Неопределено;
			
		ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказПереработчику")
				И ТипЗнч(ТекущиеДанные.Распоряжение) = Тип("ДокументСсылка.ПоступлениеОтПереработчика") 
			ИЛИ ТипЗнч(ТекущиеДанные.Распоряжение) = Тип("ДокументСсылка.ЗаказПереработчику")
				И ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПоступлениеОтПереработчика") Тогда
			ПоказатьПредупреждение(, НСтр("ru='Отчет допускается оформлять либо по заказу, либо по поступлениям.';uk='Звіт допускається оформляти або по замовленню, або за надходженнях.'"));
			Возврат Неопределено;
		ИначеЕсли Организация <> Неопределено 
			И Организация <> ТекущиеДанные.Организация Тогда
			ПоказатьПредупреждение(, НСтр("ru='Для оформления отчета необходимо выбрать распоряжения одной организации.';uk='Для оформлення звіту необхідно вибрати розпорядження однієї організації.'"));
			Возврат Неопределено;
		ИначеЕсли Переработчик <> Неопределено 
			И Переработчик <> ТекущиеДанные.Переработчик Тогда
			ПоказатьПредупреждение(, НСтр("ru='Для оформления отчета необходимо выбрать продукцию одного переработчика.';uk='Для оформлення звіту необхідно вибрати продукцію одного переробника.'"));
			Возврат Неопределено;
		ИначеЕсли НаправлениеДеятельности <> Неопределено 
			И НаправлениеДеятельности <> ТекущиеДанные.НаправлениеДеятельности Тогда
			ПоказатьПредупреждение(, НСтр("ru='Для оформления отчета необходимо выбрать продукцию одного переработчика.';uk='Для оформлення звіту необхідно вибрати продукцію одного переробника.'"));
			Возврат Неопределено;
		КонецЕсли;
		
		Распоряжение = ТекущиеДанные.Распоряжение;
		Переработчик = ТекущиеДанные.Переработчик;
		Организация = ТекущиеДанные.Организация;
		НаправлениеДеятельности = ТекущиеДанные.НаправлениеДеятельности;
		
		ДанныеПродукции = Новый Структура("Распоряжение,КодСтроки");
		ЗаполнитьЗначенияСвойств(ДанныеПродукции, ТекущиеДанные);
		СписокПродукции.Добавить(ДанныеПродукции);
		
		Если МассивРаспоряжений.Найти(ТекущиеДанные.Распоряжение) = Неопределено Тогда
			МассивРаспоряжений.Добавить(ТекущиеДанные.Распоряжение);
		КонецЕсли; 
		
	КонецЦикла;
	
	ОчиститьСообщения();
	
	РеквизитыШапки = Новый Структура;
	РеквизитыШапки.Вставить("Организация", Организация);
	РеквизитыШапки.Вставить("Партнер", Переработчик);
	РеквизитыШапки.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ПоЗаказам", ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказПереработчику"));
	ДанныеЗаполнения.Вставить("СписокПродукции", СписокПродукции);
	ДанныеЗаполнения.Вставить("РеквизитыШапки", РеквизитыШапки);
	ДанныеЗаполнения.Вставить("МассивРаспоряжений", МассивРаспоряжений);
	
	Возврат ДанныеЗаполнения;

КонецФункции

#КонецОбласти

#КонецОбласти
