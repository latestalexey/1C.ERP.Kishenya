
//УКРАИНА

Процедура СформироватьДвиженияКатегорииЕСВ(РегистраторОбъект, Движения, СтруктураДанных) Экспорт
	
	Если СтруктураДанных.ДанныеОЕСВСотрудников = Неопределено
		ИЛИ СтруктураДанных.ДанныеОЕСВСотрудников.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	Движения.ЕСВСотрудников.Записывать = Истина;
	
	СтруктураДанных.ДанныеОЕСВСотрудников.Колонки.ДатаСобытия.Имя = "Период";
	Движения.ЕСВСотрудников.Загрузить(СтруктураДанных.ДанныеОЕСВСотрудников);
	
	Если Не Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(РегистраторОбъект)) Тогда
		Если РегистраторОбъект.ДополнительныеСвойства.Свойство("ОтключитьПроверкуДатыЗапретаИзменения")
			И РегистраторОбъект.ДополнительныеСвойства.ОтключитьПроверкуДатыЗапретаИзменения Тогда
			
			Движения.ЕСВСотрудников.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрекратитьВсеПлановыеВзносыПоТаблицеСотрудников(Движения, СотрудникиПериоды) Экспорт
	
	Регистратор = Движения.ЕСВСотрудников.Отбор.Регистратор.Значение;
	
	// Плановые взносы ЕСВ
	Взносы = ДействующиеВзносы(СотрудникиПериоды, Регистратор);
	Для Каждого СтрокаТаблицы Из Взносы Цикл
		СтрокаДвижений = Движения.ЕСВСотрудников.Добавить();
		СтрокаДвижений.Период = 			КонецДня(СтрокаТаблицы.Период) + 1;
		СтрокаДвижений.Сотрудник = 			СтрокаТаблицы.Сотрудник;
		СтрокаДвижений.ФизическоеЛицо = 	СтрокаТаблицы.ФизическоеЛицо;
		СтрокаДвижений.КатегорияЕСВ = 		СтрокаТаблицы.КатегорияЕСВ;
		
		Движения.ЕСВСотрудников.Записывать = Истина;
	КонецЦикла;

КонецПроцедуры

Функция ДействующиеВзносы(ИсходныеДанные, Регистратор)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "Регистратор", "<>", Регистратор);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ЕСВСотрудников",
		МенеджерВременныхТаблиц,
		Истина,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(ИсходныеДанные),
		ПараметрыПостроения);
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСВСотрудников.Период,
	|	ЕСВСотрудников.ФизическоеЛицо,
	|	ЕСВСотрудников.Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка) КАК КатегорияЕСВ
	|ИЗ
	|	ВТЕСВСотрудниковСрезПоследних КАК ЕСВСотрудников
	|ГДЕ
	|	ЕСВСотрудников.КатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ВидыЕСВВходитВБазуФСС() Экспорт
	
	Список = Новый Массив();
	Список.Добавить(Перечисления.ВидыЕСВ.ОсновнаяЗарплата);
	Список.Добавить(Перечисления.ВидыЕСВ.НачисленияМобилизованным);
	
	Возврат Список;
	
КонецФункции	

Функция ВидЕСВВходитВБазуФСС(ВидЕСВ) Экспорт
	
	Список = ВидыЕСВВходитВБазуФСС();
	
	Возврат Список.Найти(ВидЕСВ) <> Неопределено; 
	
КонецФункции

Процедура ЗаполнитьДанныеСтрокиИсправленияВзносов(ДанныеСтроки, ЭтоВзносыФОТ) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация", ДанныеСтроки.Организация);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ДанныеСтроки.ФизическоеЛицо);
	Запрос.УстановитьПараметр("Период", КонецМесяца(ДанныеСтроки.МесяцРасчетногоПериода));
	Запрос.УстановитьПараметр("ВидЕСВ", ДанныеСтроки.ВидЕСВ);
	
	Если ДанныеСтроки.КатегорияЕСВ = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   ЕСВСотрудников.КатегорияЕСВ
		|ИЗ
		|	РегистрСведений.ЕСВСотрудников.СрезПоследних(&Период, ФизическоеЛицо = &ФизическоеЛицо) КАК ЕСВСотрудников
		|ГДЕ
		|	ЕСВСотрудников.Сотрудник.ГоловнаяОрганизация = &Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		ОсновнаяКатегория = Справочники.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка();
		Если Выборка.Следующий() Тогда
			ОсновнаяКатегория = Выборка.КатегорияЕСВ;	
		КонецЕсли;
		Если ДанныеСтроки.ВидЕСВ = Перечисления.ВидыЕСВ.ОсновнаяЗарплата Тогда
			ДанныеСтроки.КатегорияЕСВ = ОсновнаяКатегория;
		ИначеЕсли ДанныеСтроки.ВидЕСВ = Перечисления.ВидыЕСВ.ПоДоговорамГПХ Тогда
			ДанныеСтроки.КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.РаботникПоДоговоруГПХ;	
		ИначеЕсли ДанныеСтроки.ВидЕСВ = Перечисления.ВидыЕСВ.НачисленияМобилизованным Тогда
			ДанныеСтроки.КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботник;
		Иначе
			Запрос.УстановитьПараметр("ОсновнаяКатегория", ОсновнаяКатегория);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|   ПараметрыКатегорийЕСВ.СвязаннаяКатегория
			|ИЗ
			|	РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&Период, Категория = &ОсновнаяКатегория И Вид = &ВидЕСВ) КАК ПараметрыКатегорийЕСВ
			|";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ДанныеСтроки.КатегорияЕСВ = Выборка.СвязаннаяКатегория;
			КонецЕсли;	
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.КатегорияЕСВ) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КатегорияЕСВ", ДанныеСтроки.КатегорияЕСВ);

	Если ДанныеСтроки.Налог = Неопределено Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|   ПараметрыКатегорийЕСВ.Категория,
		|   ПараметрыКатегорийЕСВ.Вид,
		|   ПараметрыКатегорийЕСВ.ЕСВ,
		|   ПараметрыКатегорийЕСВ.ЕСВФОТ
		|ИЗ
		|	РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&Период, Категория = &КатегорияЕСВ И Вид = &ВидЕСВ) КАК ПараметрыКатегорийЕСВ
		|";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ДанныеСтроки.Налог = ?(ЭтоВзносыФОТ, Выборка.ЕСВФОТ, Выборка.ЕСВ);
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Налог) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Налог", ДанныеСтроки.Налог);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   ШкалаСтавокНалогов.СтатьяНалоговойДекларации
	|ИЗ
	|	РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(&Период, Налог = &Налог И (Организация = &Организация ИЛИ Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) ) КАК ШкалаСтавокНалогов
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеСтроки.СтатьяНалоговойДекларации = Выборка.СтатьяНалоговойДекларации;
	КонецЕсли;
	
	
	
КонецПроцедуры	

Процедура СформироватьПеречислениеВзносовПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, Взносы, ПеречислениеВзносовВыполнено = Истина, Записывать = Ложь) Экспорт
	
	Если НЕ ПеречислениеВзносовВыполнено ИЛИ Взносы = Неопределено Или Взносы.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из Взносы Цикл
		
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;	
		КонецЕсли;
		
		ЕстьНовыеСтроки = Истина;
		НоваяСтрокаРасчетовНалогоплательщика = СтрокаПеречислениеВзносов(Движения, Организация, ДатаОперации, СтрокаДанных);
		
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыСФондамиПоСтраховымВзносам.Записать();
			Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Ложь;
		Иначе
			Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокаПеречислениеВзносов(Движения, Организация, ДатаОперации, СтрокаВзносов)

	Если Не ЗначениеЗаполнено(СтрокаВзносов.Сумма) Тогда
		Возврат Неопределено
	КонецЕсли;
	
	НоваяСтрока = Движения.РасчетыСФондамиПоСтраховымВзносам.Добавить();
	НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
	НоваяСтрока.Период = ДатаОперации;
	НоваяСтрока.Организация = Организация;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВзносов);
	
    Возврат НоваяСтрока
	
КонецФункции




#Область СлужебныйПрограммныйИнтерфейс


// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТКадровыхДанных, которая содержит следующие поля.
//		Сотрудник - СправочникСсылка.Сотрудники
//		ДатаНачала - дата
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		Должность - СправочникСсылка.Должности
//		КоэффициентУчетаСтроки - число от 0 до 1.
//		УсловияТруда - СправочникСсылка.УсловияТруда
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу ВТНачисления с полями.
//				Сотрудник - СправочникСсылка.Сотрудники
//				ДатаНачала - дата -
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления -
//				ПодразделениеОрганизации - СправочникСсылка.ПодразделенияОрганизаций
//				УсловияТруда - СправочникСсылка.УсловияТруда
//
Процедура СформироватьВТКадровыхДанных(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользуютсяРаботыСДосрочнойПенсией", Новый Структура("Организация",Организация)) Тогда
		
		УчетСтраховыхВзносовБазовый.СформироватьВТКадровыхДанных(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, Ложь);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадровыхДанных.Сотрудник,
		|	КадровыхДанных.ДатаНачала,
		|	КадровыхДанных.Начисление,
		|	КадровыхДанных.Подразделение,
		|	КадровыхДанных.Должность,
		|	КадровыхДанных.КоэффициентУчетаСтроки
		|ПОМЕСТИТЬ ВТВременнаяТаблица
		|ИЗ
		|	ВТКадровыхДанных КАК КадровыхДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК СписокНачислений
		|		ПО КадровыхДанных.Сотрудник = СписокНачислений.Сотрудник
		|			И КадровыхДанных.ДатаНачала = СписокНачислений.ДатаНачала
		|			И КадровыхДанных.Подразделение = СписокНачислений.ПодразделениеОрганизации
		|			И КадровыхДанных.Начисление = СписокНачислений.Начисление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадровыхДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица.Сотрудник,
		|	ВременнаяТаблица.ДатаНачала,
		|	ВременнаяТаблица.Начисление,
		|	ВременнаяТаблица.Подразделение,
		|	ВременнаяТаблица.Должность,
		|	ВременнаяТаблица.КоэффициентУчетаСтроки
		|ПОМЕСТИТЬ ВТКадровыхДанных
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременнаяТаблица";
		Запрос.Выполнить();
		
		Возврат
		
	КонецЕсли;
	
	НачалоПериода = НачалоМесяца(ПериодРегистрации);
	ОкончаниеПериода = КонецМесяца(ПериодРегистрации);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ИспользоватьШтатноеРасписание", ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание"));
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода, "ДЕНЬ");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	Периоды.Период,
	|	Периоды.Период КАК ДатаНачала,
	|	Периоды.Период КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПоДнямМесяца
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Интервалы.Сотрудник,
	|	НАЧАЛОПЕРИОДА(Интервалы.Период, ДЕНЬ) КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(Интервалы.Период, ДЕНЬ) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТСотрудникиИнтервалы
	|ИЗ
	|	ВТПоДнямМесяца КАК Интервалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериоды";
	Запрос.Выполнить();
	
	// Получаем данные о времени за интервалы.
	УчетРабочегоВремени.СоздатьВТРабочееСотрудниковВремяПоИнтервалам(МенеджерВременныхТаблиц, ПериодРегистрации);

	// Получаем данные о состояниях.
	СостоянияСотрудников.СоздатьВТПериодыСостоянийСотрудников(МенеджерВременныхТаблиц, "ВТПоДнямМесяца");

	КадровыеДанные = "ДатаПриема, ДатаУвольнения, Должность, ДолжностьПоШтатномуРасписанию";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		МенеджерВременныхТаблиц,
		"ВТПоДнямМесяца");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Начисления.Ссылка ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		КОГДА (Начисления.ТребуетсяРасчетБазы
	|				ИЛИ Начисления.НачисляетсяВЦеломЗаМесяц)
	|				И НЕ Начисления.ЗачетНормыВремени
	|			ТОГДА ИСТИНА
	|		КОГДА СписокНачислений.ДатаНачала МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РаспределятьСтроку
	|ПОМЕСТИТЬ ВТРаспределяемыеСтроки
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО СписокНачислений.Начисление = Начисления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиПоДнямМесяца.Сотрудник,
	|	СотрудникиПоДнямМесяца.Период
	|ПОМЕСТИТЬ ВТВОтпускеПоУходу
	|ИЗ
	|	ВТПоДнямМесяца КАК СотрудникиПоДнямМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыСостоянийСотрудников КАК ДанныеОСотруднике
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И (СотрудникиПоДнямМесяца.Период МЕЖДУ ДанныеОСотруднике.Начало И ДанныеОСотруднике.Окончание)
	|ГДЕ
	|	ДанныеОСотруднике.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоУходуЗаРебенком) 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыСостоянийСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСотрудникиИнтервалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиПоДнямМесяца.Сотрудник,
	|	СотрудникиПоДнямМесяца.Период,
	|	ДанныеОСотруднике.Должность,
	|	ДанныеОСотруднике.ДолжностьПоШтатномуРасписанию,
	|	ВЫБОР
	|		КОГДА СотрудникиПоДнямМесяца.Период < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеОСотруднике.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СотрудникиПоДнямМесяца.Период > ДанныеОСотруднике.ДатаУвольнения
	|			ТОГДА ИСТИНА
	|		КОГДА ВОтпускеПоУходу.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеРаботает,
	|	ВЫБОР
	|		КОГДА СотрудникиПоДнямМесяца.Период < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА 0
	|		КОГДА ДанныеОСотруднике.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СотрудникиПоДнямМесяца.Период > ДанныеОСотруднике.ДатаУвольнения
	|			ТОГДА 0
	|		КОГДА ВОтпускеПоУходу.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РабочееВремяПоИнтервалам.НормаДней, 0)
	|	КОНЕЦ КАК Дней,
	|	ВЫБОР
	|		КОГДА СотрудникиПоДнямМесяца.Период < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА 0
	|		КОГДА ДанныеОСотруднике.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СотрудникиПоДнямМесяца.Период > ДанныеОСотруднике.ДатаУвольнения
	|			ТОГДА 0
	|		КОГДА ВОтпускеПоУходу.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РабочееВремяПоИнтервалам.НормаЧасов, 0)
	|	КОНЕЦ КАК Часов
	|ПОМЕСТИТЬ ВТВремяПоДням
	|ИЗ
	|	ВТПоДнямМесяца КАК СотрудникиПоДнямМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВОтпускеПоУходу КАК ВОтпускеПоУходу
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = ВОтпускеПоУходу.Сотрудник
	|			И СотрудникиПоДнямМесяца.Период = ВОтпускеПоУходу.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И СотрудникиПоДнямМесяца.Период = ДанныеОСотруднике.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочееВремяПоИнтервалам КАК РабочееВремяПоИнтервалам
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = РабочееВремяПоИнтервалам.Сотрудник
	|			И СотрудникиПоДнямМесяца.Период = РабочееВремяПоИнтервалам.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПоДнямМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВОтпускеПоУходу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРабочееВремяПоИнтервалам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремяПоДням.Сотрудник,
	|	СУММА(ВремяПоДням.Дней) КАК Дней,
	|	СУММА(ВремяПоДням.Часов) КАК Часов
	|ПОМЕСТИТЬ ВТВремяЗаМесяц
	|ИЗ
	|	ВТВремяПоДням КАК ВремяПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремяПоДням.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремяПоДням.Сотрудник КАК Сотрудник,
	|	ВремяПоДням.Должность,
	|	ВремяПоДням.ДолжностьПоШтатномуРасписанию,
	|	ВЫБОР
	|		КОГДА ВремяЗаМесяц.Часов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ВремяПоДням.Часов) / ВремяЗаМесяц.Часов КАК ЧИСЛО(8, 6))
	|	КОНЕЦ КАК КоэффициентЧасов
	|ПОМЕСТИТЬ ВТКоэффициентыПоЧасам
	|ИЗ
	|	ВТВремяПоДням КАК ВремяПоДням
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяЗаМесяц КАК ВремяЗаМесяц
	|		ПО ВремяПоДням.Сотрудник = ВремяЗаМесяц.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремяЗаМесяц.Часов,
	|	ВремяПоДням.Сотрудник,
	|	ВремяПоДням.Должность,
	|	ВремяПоДням.ДолжностьПоШтатномуРасписанию
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВремяЗаМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДолжностьСМаксимальнымКоэффициентом.Сотрудник,
	|	ДолжностьСМаксимальнымКоэффициентом.КоэффициентЧасов,
	|	ДолжностьСМаксимальнымКоэффициентом.Должность,
	|	МАКСИМУМ(КоэффициентыПоЧасам.ДолжностьПоШтатномуРасписанию) КАК ДолжностьПоШтатномуРасписанию
	|ПОМЕСТИТЬ ВТПараметрыМаксимальногоКоэффициента
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныйКоэффициент.Сотрудник КАК Сотрудник,
	|		МаксимальныйКоэффициент.КоэффициентЧасов КАК КоэффициентЧасов,
	|		МАКСИМУМ(КоэффициентыПоЧасам.Должность) КАК Должность
	|	ИЗ
	|		(ВЫБРАТЬ
	|			КоэффициентыПоЧасам.Сотрудник КАК Сотрудник,
	|			МАКСИМУМ(КоэффициентыПоЧасам.КоэффициентЧасов) КАК КоэффициентЧасов
	|		ИЗ
	|			ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КоэффициентыПоЧасам.Сотрудник) КАК МаксимальныйКоэффициент
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|			ПО МаксимальныйКоэффициент.Сотрудник = КоэффициентыПоЧасам.Сотрудник
	|				И МаксимальныйКоэффициент.КоэффициентЧасов = КоэффициентыПоЧасам.КоэффициентЧасов
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныйКоэффициент.Сотрудник,
	|		МаксимальныйКоэффициент.КоэффициентЧасов) КАК ДолжностьСМаксимальнымКоэффициентом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|		ПО ДолжностьСМаксимальнымКоэффициентом.Сотрудник = КоэффициентыПоЧасам.Сотрудник
	|			И ДолжностьСМаксимальнымКоэффициентом.КоэффициентЧасов = КоэффициентыПоЧасам.КоэффициентЧасов
	|			И ДолжностьСМаксимальнымКоэффициентом.Должность = КоэффициентыПоЧасам.Должность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДолжностьСМаксимальнымКоэффициентом.Сотрудник,
	|	ДолжностьСМаксимальнымКоэффициентом.КоэффициентЧасов,
	|	ДолжностьСМаксимальнымКоэффициентом.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыПоЧасам.Сотрудник,
	|	КоэффициентыПоЧасам.Должность,
	|	КоэффициентыПоЧасам.ДолжностьПоШтатномуРасписанию,
	|	КоэффициентыПоЧасам.КоэффициентЧасов
	|ПОМЕСТИТЬ ВТПрочиеКоэффициенты
	|ИЗ
	|	ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыМаксимальногоКоэффициента КАК ПараметрыМаксимальногоКоэффициента
	|		ПО КоэффициентыПоЧасам.Сотрудник = ПараметрыМаксимальногоКоэффициента.Сотрудник
	|			И КоэффициентыПоЧасам.Должность = ПараметрыМаксимальногоКоэффициента.Должность
	|			И КоэффициентыПоЧасам.ДолжностьПоШтатномуРасписанию = ПараметрыМаксимальногоКоэффициента.ДолжностьПоШтатномуРасписанию
	|ГДЕ
	|	ПараметрыМаксимальногоКоэффициента.Сотрудник ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКоэффициентыПоЧасам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеКоэффициенты.Сотрудник,
	|	ПрочиеКоэффициенты.Должность,
	|	ПрочиеКоэффициенты.ДолжностьПоШтатномуРасписанию,
	|	ПрочиеКоэффициенты.КоэффициентЧасов
	|ПОМЕСТИТЬ ВТКоэффициентыПоДолжностям
	|ИЗ
	|	ВТПрочиеКоэффициенты КАК ПрочиеКоэффициенты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыМаксимальногоКоэффициента.Сотрудник,
	|	ПараметрыМаксимальногоКоэффициента.Должность,
	|	ПараметрыМаксимальногоКоэффициента.ДолжностьПоШтатномуРасписанию,
	|	1 - ЕСТЬNULL(СуммаПрочихКоэффициентов.КоэффициентЧасов, 0)
	|ИЗ
	|	ВТПараметрыМаксимальногоКоэффициента КАК ПараметрыМаксимальногоКоэффициента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПрочиеКоэффициенты.Сотрудник КАК Сотрудник,
	|			СУММА(ПрочиеКоэффициенты.КоэффициентЧасов) КАК КоэффициентЧасов
	|		ИЗ
	|			ВТПрочиеКоэффициенты КАК ПрочиеКоэффициенты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПрочиеКоэффициенты.Сотрудник) КАК СуммаПрочихКоэффициентов
	|		ПО ПараметрыМаксимальногоКоэффициента.Сотрудник = СуммаПрочихКоэффициентов.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПараметрыМаксимальногоКоэффициента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеКоэффициенты";
	Запрос.Выполнить();

	// Читаем кадровые данные сотрудников, влияющие на исчисление взносов.
	
	КадровыеДанные = "Должность, ДолжностьПоШтатномуРасписанию";
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		МенеджерВременныхТаблиц, "ВТНачисления", "Сотрудник,ДатаНачала");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА СписокНачислений.УсловияТруда = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
	|		ИНАЧЕ СписокНачислений.УсловияТруда
	|	КОНЕЦ КАК УсловияТруда
	|ПОМЕСТИТЬ ВТУточненныеНачисления
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.УсловияТруда,
	|	ВЫБОР
	|		КОГДА ДанныеПоДням.НеРаботает
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
	|		КОГДА РаспределяемыеСтроки.РаспределятьСтроку
	|				И КоэффициентыПоДолжностям.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА &ИспользоватьШтатноеРасписание
	|						ТОГДА КоэффициентыПоДолжностям.ДолжностьПоШтатномуРасписанию
	|					ИНАЧЕ КоэффициентыПоДолжностям.Должность
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ИспользоватьШтатноеРасписание
	|					ТОГДА ДанныеОСотруднике.ДолжностьПоШтатномуРасписанию
	|				ИНАЧЕ ДанныеОСотруднике.Должность
	|			КОНЕЦ
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА СписокНачислений.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией ЕСТЬ НЕ NULL 
	|			ТОГДА 1
	|		КОГДА ДанныеПоДням.НеРаботает
	|			ТОГДА 1
	|		КОГДА РаспределяемыеСтроки.РаспределятьСтроку
	|				И КоэффициентыПоДолжностям.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА КоэффициентыПоДолжностям.КоэффициентЧасов
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентУчетаСтроки
	|ПОМЕСТИТЬ ВТКадровыхДанных
	|ИЗ
	|	ВТУточненныеНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределяемыеСтроки КАК РаспределяемыеСтроки
	|		ПО СписокНачислений.Сотрудник = РаспределяемыеСтроки.Сотрудник
	|			И СписокНачислений.ДатаНачала = РаспределяемыеСтроки.ДатаНачала
	|			И СписокНачислений.ПодразделениеОрганизации = РаспределяемыеСтроки.Подразделение
	|			И СписокНачислений.Начисление = РаспределяемыеСтроки.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО СписокНачислений.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И СписокНачислений.ДатаНачала = ДанныеОСотруднике.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяПоДням КАК ДанныеПоДням
	|		ПО СписокНачислений.Сотрудник = ДанныеПоДням.Сотрудник
	|			И СписокНачислений.ДатаНачала = ДанныеПоДням.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПоДолжностям КАК КоэффициентыПоДолжностям
	|		ПО СписокНачислений.Сотрудник = КоэффициентыПоДолжностям.Сотрудник
	|			И (РаспределяемыеСтроки.РаспределятьСтроку)
	|			И (НЕ ДанныеПоДням.НеРаботает)
	|			И (КоэффициентыПоДолжностям.КоэффициентЧасов <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРаспределяемыеСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУточненныеНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВремяПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКоэффициентыПоДолжностям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников";
	Запрос.Выполнить();
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТСДаннымиУчета, которая содержит следующие поля
//		Сотрудник - СправочникСсылка.Сотрудники
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		ДатаНачала - дата
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		ВидЕСВ - ПеречислениеСсылка.ВидыЕСВ
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		УсловияТруда - СправочникСсылка.УсловияТруда
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит
//			вр. таблицу ВТНачисления с полями:
//				Сотрудник - СправочникСсылка.Сотрудники
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ДатаНачала - дата
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				ПодразделениеОрганизации - СправочникСсылка.ПодразделенияОрганизаций
//				УсловияТруда - СправочникСсылка.УсловияТруда
//
Процедура СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт 

	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	НАЧАЛОПЕРИОДА(СписокНачислений.ДатаНачала, МЕСЯЦ) КАК ПериодДействия,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.УсловияТруда,
	|	СписокНачислений.СуммаДохода КАК Сумма,
	|	Сотрудники.ФизическоеЛицо,
    |	Начисления.ВидЕСВ,
	|   ВЫБОР
	|    КОГДА Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска)) 
	|     ТОГДА Истина
	|     ИНАЧЕ ЛОЖЬ
	|   КОНЕЦ КАК ЭтоОтпускные
	|ПОМЕСТИТЬ ВТВременнаяТаблица
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО СписокНачислений.Начисление = Начисления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО СписокНачислений.Сотрудник = Сотрудники.Ссылка
	|ГДЕ
	|   НЕ Начисления.ВидЕСВ В (ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НеУчитывается), ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.ПериодДействия,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.Подразделение,
	|	СписокНачислений.УсловияТруда,
	|	СписокНачислений.Сумма,
	|	СписокНачислений.ФизическоеЛицо,
    |	СписокНачислений.ВидЕСВ,
	|   СписокНачислений.ЭтоОтпускные,
	|   ВЫБОР 
	|    КОГДА СписокНачислений.ЭтоОтпускные
	|     ТОГДА ВЫБОР
	|   	     КОГДА СписокНачислений.ПериодДействия >= &ПериодРегистрации
	|   	      ТОГДА СписокНачислений.ПериодДействия
	|   	      ИНАЧЕ &ПериодРегистрации
	|   	    КОНЕЦ
	|    КОГДА СписокНачислений.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.Больничные)
	|     ТОГДА ВЫБОР
	|   	     КОГДА СписокНачислений.ПериодДействия <= &ПериодРегистрации
	|   	      ТОГДА СписокНачислений.ПериодДействия
	|   	      ИНАЧЕ &ПериодРегистрации
	|   	    КОНЕЦ
	|    КОГДА СписокНачислений.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.Декретные)
	|     ТОГДА СписокНачислений.ПериодДействия
	|    ИНАЧЕ &ПериодРегистрации
	|  КОНЕЦ КАК НалоговыйПериод
	|ПОМЕСТИТЬ ВТСДаннымиУчета
	|ИЗ
	|	ВТВременнаяТаблица КАК СписокНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВременнаяТаблица";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует таблицу значений с данными для проведения по регистру СведенияОДоходахСтраховыеВзносы.
// 
// Параметры:
//		Организация
//		ПериодРегистрации
//		МенеджерВременныхТаблиц содержит вр. таблицу ВТНачисленияСтраховыеВзносы с полями.
//				Сотрудник
//				Подразделение
//				ДатаНачала
//				КодДоходаСтраховыеВзносы
//				ЗаключенСоСтудентомРаботающимВСтудотряде.
//				Начисление
//				СуммаДохода
//				СуммаВычетаВзносы
//				ОблагаетсяЕНВД
//
Функция СведенияОДоходахПоДоговорамСтраховыеВзносы(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт

	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокНачислений.Договор,
	|	СписокНачислений.Сумма КАК Сумма,
	|	НАЧАЛОПЕРИОДА(ДоговорРаботыУслуги.ДатаНачала, МЕСЯЦ) КАК ДатаНачалаДоговора,
	|	НАЧАЛОПЕРИОДА(ДоговорРаботыУслуги.ДатаОкончания, МЕСЯЦ) КАК ДатаОкончанияДоговора
	|ИЗ
	|	ВТНачисленияПоДоговорам КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорРаботыУслуги КАК ДоговорРаботыУслуги
	|		ПО СписокНачислений.Договор = ДоговорРаботыУслуги.Ссылка
	|ГДЕ
	|	ДоговорРаботыУслуги.СпособОплаты = ЗНАЧЕНИЕ(Перечисление.СпособыОплатыПоДоговоруГПХ.ОднократноВКонцеСрока)";
	
	ТаблицаДоговораКРазбиению = Запрос.Выполнить().Выгрузить();
	
	ТаблицаНалоговыеПериоды = Новый ТаблицаЗначений();
	ТаблицаНалоговыеПериоды.Колонки.Добавить("НалоговыйПериод", Новый ОписаниеТипов("Дата"));
	ТаблицаНалоговыеПериоды.Колонки.Добавить("Договор", Новый ОписаниеТипов("ДокументСсылка.ДоговорРаботыУслуги"));
	ТаблицаНалоговыеПериоды.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	
	Для Каждого Договор Из ТаблицаДоговораКРазбиению Цикл
		НС = ТаблицаНалоговыеПериоды.Добавить();
		НС.НалоговыйПериод = Договор.ДатаНачалаДоговора;
		НС.Договор = Договор.Договор;
		НС.Коэффициент = 1;
		ДатаОкончания = Договор.ДатаНачалаДоговора; 
		Пока ДатаОкончания < Договор.ДатаОкончанияДоговора Цикл
			ДатаОкончания = ДобавитьМесяц(ДатаОкончания, 1);
			НС = ТаблицаНалоговыеПериоды.Добавить();
			НС.НалоговыйПериод = ДатаОкончания;
			НС.Договор = Договор.Договор;
			НС.Коэффициент = 1;
		КонецЦикла;	
	КонецЦикла;
	
	//Распределение таблицы документов по таблице налоговых периодов
	ПоляРазрез = Новый Массив();
	ПоляРазрез.Добавить("НалоговыйПериод");
	ПоляСвязи = Новый Структура();
	ПоляСвязи.Вставить("Договор","Договор");
	ТаблицаДоговораПоПериодам = ЗарплатаКадры.РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаДоговораКРазбиению, "Сумма", ТаблицаНалоговыеПериоды, "Коэффициент", ПоляРазрез, ПоляСвязи);

	Запрос.УстановитьПараметр("ТаблицаДоговораПоПериодам",ТаблицаДоговораПоПериодам);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДоговораПоПериодам.Договор,
	|	ТаблицаДоговораПоПериодам.НалоговыйПериод,
	|	ТаблицаДоговораПоПериодам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТТаблицаДоговораПоПериодам
	|ИЗ
	|	&ТаблицаДоговораПоПериодам КАК ТаблицаДоговораПоПериодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНачислений.Сотрудник,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.Подразделение,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Договор КАК ДокументОснование,
	|	ЕСТЬNULL(ТаблицаДоговораПоПериодам.НалоговыйПериод, НАЧАЛОПЕРИОДА(СписокНачислений.ДатаНачала)) КАК НалоговыйПериод,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ) КАК ВидЕСВ,
	|	ЛОЖЬ КАК ЭтоОтпускные,
	|	ЕСТЬNULL(ТаблицаДоговораПоПериодам.Сумма, СписокНачислений.Сумма) КАК Сумма
	|ИЗ
	|	ВТНачисленияПоДоговорам КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО СписокНачислений.Сотрудник = Сотрудники.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаДоговораПоПериодам КАК ТаблицаДоговораПоПериодам
	|		ПО СписокНачислений.Договор = ТаблицаДоговораПоПериодам.Договор";	
	
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Формирует строку описания реквизитов, содержащих суммы взносов.
//      	 
// Параметры:
//		ИмяТабличнойЧасти - строка - необязательный, по умолчанию подразумевается т.ч. "Взносы".
//		ВключатьДопТарифы - булево - необязательный, если выставлен в Ложь, взносы по доп.тарифам в описание не включаются.
//
// Возвращаемое значение:
//		строка
//
Функция ОписаниеПолейВзносовСтрокой(ИмяТабличнойЧасти = "Взносы", ВключатьДопТарифы = Истина) Экспорт 

	Возврат УчетСтраховыхВзносов.РассчитываемыеВзносы(Ложь, ИмяТабличнойЧасти, ВключатьДопТарифы)
	
КонецФункции

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТКлассыУсловийТруда, которая содержит следующие поля:
//		Период - дата
//		КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//		ВидыРаботСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СоздатьВТКлассыУсловийТруда(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлассыПоДолжностям.Период,
	|	КлассыПоДолжностям.КлассУсловийТруда,
	|	ВЫБОР
	|		КОГДА КлассыПоДолжностям.Должность ССЫЛКА Справочник.ШтатноеРасписание
	|			ТОГДА КлассыПоДолжностям.Должность.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
	|		ИНАЧЕ КлассыПоДолжностям.Должность.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
	|	КОНЕЦ КАК ВидыРаботСДосрочнойПенсией
	|ПОМЕСТИТЬ ВТКлассыУсловийТруда
	|ИЗ
	|	РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыПоДолжностям";
	
	Запрос.Выполнить();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УточнитьСторнируемыеДокументы(ТаблицаСторнируемыхДокументов, ТаблицаПромежуточныхИсправлений)
    
	СтрокиКУдалению = Новый Массив;
	Для каждого СтрокаТЗ Из ТаблицаСторнируемыхДокументов Цикл
	    Если Не ЗначениеЗаполнено(СтрокаТЗ.СторнируемыйДокумент) Тогда
			СтрокиКУдалению.Добавить(СтрокаТЗ)
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаТЗ Из СтрокиКУдалению Цикл
		ТаблицаСторнируемыхДокументов.Удалить(СтрокаТЗ)
	КонецЦикла;
	
	ОбработанныеДокументы = Новый Соответствие;	
	Для каждого СтрокаТЗ Из ТаблицаСторнируемыхДокументов Цикл
		УточненныйДокумент = ОбработанныеДокументы[СтрокаТЗ.СторнируемыйДокумент];
		Если ЗначениеЗаполнено(УточненныйДокумент) Тогда
			СтрокаТЗ.СторнируемыйДокумент = УточненныйДокумент
		Иначе
			Если СтрокаТЗ.СторнируемыйДокумент.Метаданные().Реквизиты.Найти("ИсправленныйДокумент") = Неопределено Тогда
				ОбработанныеДокументы.Вставить(СтрокаТЗ.СторнируемыйДокумент, СтрокаТЗ.СторнируемыйДокумент);
				Продолжить;
			КонецЕсли;
			ПредыдущаяСсылка = СтрокаТЗ.СторнируемыйДокумент;
			СледующаяСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПредыдущаяСсылка, "ИсправленныйДокумент");
			НовыеСтроки = Новый Массив;
			Пока ЗначениеЗаполнено(СледующаяСсылка) Цикл
				СтрокаТаблицыПромежуточныхИсправлений = ТаблицаПромежуточныхИсправлений.Добавить();
				СтрокаТаблицыПромежуточныхИсправлений.ПромежуточноеИсправление = ПредыдущаяСсылка;
				НовыеСтроки.Добавить(СтрокаТаблицыПромежуточныхИсправлений);
				ПредыдущаяСсылка = СледующаяСсылка;
				Если ПредыдущаяСсылка.Метаданные().Реквизиты.Найти("ИсправленныйДокумент") = Неопределено Тогда
					Прервать;
				КонецЕсли;
				СледующаяСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПредыдущаяСсылка, "ИсправленныйДокумент")
			КонецЦикла;
			ОбработанныеДокументы.Вставить(СтрокаТЗ.СторнируемыйДокумент, ПредыдущаяСсылка);
			СтрокаТЗ.СторнируемыйДокумент = ПредыдущаяСсылка;
			Для каждого СтрокаТаблицыПромежуточныхИсправлений Из НовыеСтроки Цикл
				СтрокаТаблицыПромежуточныхИсправлений.СторнируемыйДокумент = ПредыдущаяСсылка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
