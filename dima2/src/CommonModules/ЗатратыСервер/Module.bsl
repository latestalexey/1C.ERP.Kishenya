////////////////////////////////////////////////////////////////////////////////
//
// ЗатратыСервер: Распределение производственных затрат и затрат незавершенного производства.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура выполняет запись движений производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "Производственные затраты"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьМатериалыИРаботыВПроизводстве(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаМатериалыИРаботыВПроизводстве;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.МатериалыИРаботыВПроизводстве;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений партий производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "Партии производственных затрат"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьПартииПроизводственныхЗатрат(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииПроизводственныхЗатрат;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.ПартииПроизводственныхЗатрат;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

//++ НЕ УТ

// Устанавливает параметры выбора для правила распределения в зависимости от способа учета производственных затрат.
//
// Параметры:
//	Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение, в котором выполняется распределение
//	ЭлементПравилоРаспределения - ПолеФормы - Поле для ввода правила распределения.
//
Процедура НастроитьПараметрыВыбораПравилРаспределения(Подразделение, ВариантРаспределения, ЭлементПравилоРаспределения, Назначение) Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.НазначениеПравила", Назначение));
	
	Если ЗначениеЗаполнено(Подразделение)
		И (ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении Или ВариантРаспределения = Неопределено) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Подразделение, "ПроизводствоПоЗаказам, ИспользуетсяСписаниеЗатратНаВыпуск");
		
		Если Не Реквизиты.ПроизводствоПоЗаказам И Не Реквизиты.ИспользуетсяСписаниеЗатратНаВыпуск Тогда
			
			МассивБазРаспределения = Новый Массив;
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала);
			
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.БазаРаспределения", Новый ФиксированныйМассив(МассивБазРаспределения)));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементПравилоРаспределения.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

// Функция формирует таблицу выполненных этапов производства.
//
// Параметры:
//	Параметры - Структура - Структура передаваемых параметров
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица этапов производства
//
Функция ЭтапыПроизводстваДляРаспределенияЗатрат(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Заказы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	Заказы.Номенклатура КАК Номенклатура,
	|	Заказы.КодСтроки КАК КодСтроки,
	|	Заказы.КОформлениюНачальныйОстаток КАК НачальныйОстаток,
	|	Заказы.КОформлениюПриход КАК Приход
	|ПОМЕСТИТЬ ВТВТЗаказыПереработчикамВрем
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&ПериодНачало,
	|									   &ПериодОкончание, , ,
	|									   ЗаказПоставщику ССЫЛКА Документ.ЗаказПереработчику
	|									   И (ЗаказПоставщику = &Заказ ИЛИ &ПоВсемЗаказам)) КАК Заказы
	|ИНДЕКСИРОВАТЬ ПО Заказы.ЗаказПоставщику
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таб.ЗаказПоставщику,
	|	Таб.КодСтроки
	|
	|ПОМЕСТИТЬ ВТЗаказыПереработчикам
	|
	|ИЗ ВТВТЗаказыПереработчикамВрем КАК Таб
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК ДокЗаказ
	|	ПО Таб.ЗаказПоставщику = ДокЗаказ.Ссылка
	|		И ДокЗаказ.Организация = &Организация
	|		И (ДокЗаказ.Подразделение = &Подразделение ИЛИ &ПоВсемПодразделениям)
	|		И (ДокЗаказ.Назначение = &Назначение ИЛИ &ПоВсемНазначениям)
	|		И (&НеТолькоТекущийМесяц ИЛИ Таб.НачальныйОстаток = 0)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО Таб.Номенклатура = СпрНоменклатура.Ссылка
	|		И (&ПоВсемГруппамПродукции ИЛИ СпрНоменклатура.ГруппаАналитическогоУчета = &ГруппаПродукции)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Таб.ЗаказПоставщику,
	|	Таб.КодСтроки
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.ЗаказПоставщику КАК ЗаказНаПроизводство,
	|	Заказы.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	СУММА(ВЫБОР 
	|				КОГДА Заказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА Заказы.КОформлению
	|				ИНАЧЕ 0
	|			   КОНЕЦ) КАК ЗапланированоЗаказом,
	|	СУММА(ВЫБОР 
	|				КОГДА Заказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Заказы.КОформлению
	|				ИНАЧЕ 0
	|			   КОНЕЦ) КАК Выполнено
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам КАК Заказы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаказыПереработчикам КАК ВТЗаказы
	|	ПО Заказы.ЗаказПоставщику = ВТЗаказы.ЗаказПоставщику
	|		И Заказы.КодСтроки = ВТЗаказы.КодСтроки
	|		И (Заказы.Период >= &ПериодНачало)
	|		И (&НеТолькоТекущийМесяц
	|			ИЛИ Заказы.Период МЕЖДУ &ПериодНачало И &ПериодОкончание)
	|		И Заказы.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Заказы.ЗаказПоставщику,
	|	Заказы.КодСтроки
	|
	//++ НЕ УТКА
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Записи.Распоряжение КАК ЗаказНаПроизводство,
	|	Записи.КодСтрокиПродукция КАК КодСтрокиПродукция,
	|	Записи.Этап КАК Этап,
	|	Записи.Этап.Владелец КАК Спецификация,
	|	СУММА(Записи.ЗапланированоЗаказом) КАК ЗапланированоЗаказом,
	|	СУММА(Записи.Выполнено + Записи.Брак) КАК Выполнено
	|
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК Записи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|	ПО Записи.Распоряжение = ЗаказНаПроизводство.Ссылка
	|		И ЗаказНаПроизводство.Организация = &Организация
	|		И (ЗаказНаПроизводство.Ссылка = &Заказ ИЛИ &ПоВсемЗаказам)
	|		И (Записи.Подразделение = &Подразделение ИЛИ &ПоВсемПодразделениям)
	|		И (Записи.ОкончаниеЗавершающегоБуфера >= &ПериодНачало)
	|		И (&НеТолькоТекущийМесяц ИЛИ Записи.ОкончаниеЗавершающегоБуфера МЕЖДУ &ПериодНачало И &ПериодОкончание)
	|		И (&НеТолькоТекущийМесяц ИЛИ Записи.НачалоПредварительногоБуфера МЕЖДУ &ПериодНачало И &ПериодОкончание)
	|		И Записи.Активность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ТЧПродукция
	|	ПО ЗаказНаПроизводство.Ссылка = ТЧПродукция.Ссылка
	|		И Записи.КодСтрокиПродукция = ТЧПродукция.КодСтроки
	|		И (ТЧПродукция.Назначение = &Назначение ИЛИ &ПоВсемНазначениям)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТЧПродукция.Номенклатура = СпрНоменклатура.Ссылка
	|		И (&ПоВсемГруппамПродукции ИЛИ СпрНоменклатура.ГруппаАналитическогоУчета = &ГруппаПродукции)
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Записи.Распоряжение,
	|	Записи.КодСтрокиПродукция,
	|	Записи.Этап,
	|	ТЧПродукция.Номенклатура,
	|	ТЧПродукция.Характеристика,
	|	ТЧПродукция.Спецификация,
	|	ТЧПродукция.Назначение
	//-- НЕ УТКА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводство");
	
	Назначение = Неопределено;
	Подразделение = Неопределено;
	ГруппаПродукции = Неопределено;
	Заказ = Неопределено;
	Параметры.Свойство("Назначение", Назначение);
	Параметры.Свойство("Подразделение", Подразделение);
	Параметры.Свойство("ГруппаПродукции", ГруппаПродукции);
	Параметры.Свойство("Заказ", Заказ);
	
	Запрос.УстановитьПараметр("ПериодНачало",	 Параметры.ПериодНачало);
	Запрос.УстановитьПараметр("ПериодОкончание", Параметры.ПериодОкончание);
	Запрос.УстановитьПараметр("Организация",     Параметры.Организация);
	Запрос.УстановитьПараметр("Назначение",       Назначение);
	Запрос.УстановитьПараметр("ПоВсемНазначениям", Не ЗначениеЗаполнено(Назначение));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", Не ЗначениеЗаполнено(Подразделение));
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("ПоВсемЗаказам", Не ЗначениеЗаполнено(Заказ));
	Запрос.УстановитьПараметр("ГруппаПродукции", ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", Не ЗначениеЗаполнено(ГруппаПродукции));
	Запрос.УстановитьПараметр("НеТолькоТекущийМесяц", НЕ Параметры.ТолькоТекущийМесяц);

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Процедура выполняет запись движений в таблицу последовательности производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "Выпуск продукции"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьВыпускПродукции(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВыпускПродукции;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ВыпускПродукции.Записывать = Истина;
	Движения.ВыпускПродукции.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений в таблицу последовательности производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "РаспоряженияНаСписаниеПоНормативам"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьРаспоряженияНаСписаниеПоНормативам(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРаспоряженияНаСписаниеПоНормативам;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.РаспоряженияНаСписаниеПоНормативам.Записывать = Истина;
	Движения.РаспоряженияНаСписаниеПоНормативам.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений в таблицу последовательности производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "ПрочиеРасходыНезавершенногоПроизводства"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьПрочиеРасходыНезавершенногоПроизводства(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПрочиеРасходыНезавершенногоПроизводства;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.ПрочиеРасходыНезавершенногоПроизводства;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений в таблицу партий незавершенного производства.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "ПартииНезавершенногоПроизводства"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьПартииНезавершенногоПроизводства(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииНезавершенногоПроизводства;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.ПартииНезавершенногоПроизводства;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура используется для выполнения регламентного задания по формированию документов
// "Списание затрат на выпуск".
Процедура СписатьЗатратыНаВыпуск() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Списание затрат на выпуск без заказов';uk='Списання витрат на випуск без замовлень'"));
	
	Документы.СписаниеЗатратНаВыпуск.ДокументыПоПараметрам(Новый Структура, , Истина);
	
КонецПроцедуры

//-- НЕ УТ
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.ВыпускПродукции);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РаспоряженияНаСписаниеПоНормативам);
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

#КонецОбласти

