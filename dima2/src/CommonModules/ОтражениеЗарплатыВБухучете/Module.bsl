////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в регламентированном учете.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ПроцентЕНВД(Организация, ПериодРегистрации) Экспорт  
	
	Возврат 0;
	
КонецФункции

Функция ПлательщикЕНВД(Организация, Период) Экспорт
	
	Возврат Ложь;	
	
КонецФункции

// Функция возвращает настройку отражения в бухучете из РС ОтражениеВРегламентированномУчетеНастройкиОрганизаций.
//
// Возвращаемое значение:
//	Структура
//	* ФормироватьПроводкиВКонцеПериода - тип Булево, Истина, если хотя бы в одной организации проводки формируются в
//	                                     конце месяца.
//  * ФормироватьПроводкиВКонцеПериодаПоОрганизациям - соответствие, ключ - Организация, значение - значение настройки
//                                                     ФормироватьПроводкиВКонцеПериода.
//
Функция ОтражениеВРегламентированномУчетеНастройкиОрганизаций() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	НастройкиОтраженияВБухучете = Новый Структура;
	НастройкиОтраженияВБухучете.Вставить("ФормироватьПроводкиВКонцеПериода", Ложь);
	НастройкиОтраженияВБухучете.Вставить("ФормироватьПроводкиВКонцеПериодаПоОрганизациям", Новый Соответствие);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(ОтражениеВУчете.ФормироватьПроводкиВКонцеПериода, ЛОЖЬ) КАК ФормироватьПроводкиВКонцеПериода
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций КАК ОтражениеВУчете
	|		ПО Организации.Ссылка = ОтражениеВУчете.Организация";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат НастройкиОтраженияВБухучете;
	КонецЕсли;
	
	ФормироватьПроводкиВКонцеПериода = Результат.Выгрузить().ВыгрузитьКолонку("ФормироватьПроводкиВКонцеПериода").Найти(Истина) <> Неопределено;
	НастройкиОтраженияВБухучете.ФормироватьПроводкиВКонцеПериода = ФормироватьПроводкиВКонцеПериода;
	
	ФормироватьПроводкиВКонцеПериодаПоОрганизациям = Новый Соответствие;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ФормироватьПроводкиВКонцеПериодаПоОрганизациям.Вставить(Выборка.Организация, Выборка.ФормироватьПроводкиВКонцеПериода);
	КонецЦикла;
	
	НастройкиОтраженияВБухучете.ФормироватьПроводкиВКонцеПериодаПоОрганизациям = ФормироватьПроводкиВКонцеПериодаПоОрганизациям;
	
	Возврат НастройкиОтраженияВБухучете;

КонецФункции

// Возвращает структуру с параметрами для расчета оценочных обязательств по отпускам.
//
// Параметры:
//  Организация - организация
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Структура, описание см ОтражениеЗарплатыВБухучете.ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков
//
Функция ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации) Экспорт

	ПараметрыДляРасчета = ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		
		МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			
			НачисленнаяЗарплатаИВзносы = ДанныеДляОтраженияВБухучетеНачисленийИВзносов(Организация, ПериодРегистрации);
			ФондОплатыТрудаИСтраховыеВзносы = ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, НачисленнаяЗарплатаИВзносы);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ФондОплатыТрудаИСтраховыеВзносы, ПараметрыДляРасчета.ФондОплатыТрудаИСтраховыеВзносы);
			
			ОстаткиОтпусковДляРасчетаОценочныхОбязательств = ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, ПериодРегистрации);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОстаткиОтпусковДляРасчетаОценочныхОбязательств, ПараметрыДляРасчета.ОстаткиОтпусков);	
			
		КонецЕсли;
		
	КонецЕсли;

	Возврат ПараметрыДляРасчета;
	
КонецФункции 

// Возвращает таблицу с фондом оплаты труда по организациям.
//
// Параметры:
//  Организации - массив организаций, головная организация и ее филиалы.
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Таблица значений
//		* Организация
//		* ФондОплатыТруда - сумма начислений, входящих в расчет отпуска.
//
Функция ФондОплатыТрудаПоОрганизациямДляРасчетаОценочныхОбязательствОтпусков(Организации, ПериодРегистрации) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТНачисленияБазаОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияПоСотрудникам.Организация,
	|	СУММА(НачисленияПоСотрудникам.Сумма) КАК ФондаОплатыТруда
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК НачисленияБазаОтпуска
	|		ПО НачисленияПоСотрудникам.НачислениеУдержание = НачисленияБазаОтпуска.Ссылка
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(НачисленияПоСотрудникам.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И НачисленияПоСотрудникам.Организация В(&Организации)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияПоСотрудникам.Организация";
	
	Результат = Запрос.Выполнить();
	
	ФондаОплатыТруда = Новый ТаблицаЗначений;
	ФондаОплатыТруда.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ФондаОплатыТруда.Колонки.Добавить("ФондаОплатыТруда", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ФондаОплатыТруда.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ФондаОплатыТруда;

КонецФункции

// Рассчитывает эффективную ставку страховых взносов по сотрудникам.
//
// Параметры:
//  Организации - массив организаций, головная организация и ее филиалы
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Структура
//		* СтавкиВзносовФСС_НС
//		* СтавкиСтраховыхВзносов.
//
Функция ПараметрыДляИнвентаризацииОценочныхОбязательствОтпусков(Организация, ПериодРегистрации) Экспорт

	
	ОписаниеЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 4));
	
	СтавкиСтраховыхВзносов = Новый ТаблицаЗначений;
	СтавкиСтраховыхВзносов.Колонки.Добавить("Сотрудник",                             Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СтавкиСтраховыхВзносов.Колонки.Добавить("Ставка",    ОписаниеЧисло);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		
		МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
		
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			
			ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
			ПараметрыПолучения.Организация      = Организация;
			ПараметрыПолучения.НачалоПериода    = НачалоМесяца(ПериодРегистрации);
			ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(ПериодРегистрации);
			ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
			МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ПериодРегистрации));
			Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Сотрудники", МассивСотрудников);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо
			|ПОМЕСТИТЬ ВТСотрудники
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.Ссылка В(&Сотрудники)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
            |   МАКСИМУМ(СтраховыеВзносы.Ставка) КАК Ставка
			|ИЗ
			|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносы
			|ГДЕ
			|	СтраховыеВзносы.Организация = &Организация
			|	И СтраховыеВзносы.ФизическоеЛицо В
			|			(ВЫБРАТЬ
			|				ВТСотрудники.ФизическоеЛицо
			|			ИЗ
			|				ВТСотрудники)
			|	И СтраховыеВзносы.Период МЕЖДУ &НачалоПериода И &КонецПериода
			|	И СтраховыеВзносы.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ОсновнаяЗарплата)
			|
			|СГРУППИРОВАТЬ ПО
			|	СтраховыеВзносы.ФизическоеЛицо
			|
			|";
			
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СтавкиСтраховыхВзносов.Добавить(), Выборка);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыДляРасчета = Новый Структура;
	ПараметрыДляРасчета.Вставить("СтавкиСтраховыхВзносов", СтавкиСтраховыхВзносов);
	
	Возврат ПараметрыДляРасчета;	

КонецФункции 

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц)	

КонецПроцедуры

// Формирует временную таблицу СоздатьВТСведенияОБухучетеНачисленийСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в параметре ИменаПолейВременнойТаблицы.
//
//	Структура таблицы ВТСведенияОБухучетеНачисленийСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		Начисление
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		Начисление - если значение Неопределенно, то должно быть поле Начисление в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Начисление, Сотрудник, Период.
//			Поля Организация, Подразделение, Начисление могут отсутствовать, если заполнены параметр Организация,
//			Подразделение, Начисление.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, Начисление = Неопределено) Экспорт
	
	СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц);
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация, Подразделение);
	
	МассивИменПолейОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицы, ",");
	ИмяПоляСотрудник     = МассивИменПолейОтбора[0];
	ИмяПоляПериод        = МассивИменПолейОтбора[1];
	
	ОрганизацияВТаблице   = Организация = Неопределено;
	ПодразделениеВТаблице = Подразделение = Неопределено;
	НачислениеВТаблице    = Начисление = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Начисление", Начисление);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	" + ?(ОрганизацияВТаблице,"ВременнаяТаблица.Организация","&Организация") + " КАК Организация,
	|	" + ?(ПодразделениеВТаблице,"ВременнаяТаблица.Подразделение","&Подразделение") + " КАК Подразделение,
	|	" + ?(НачислениеВТаблице, "ВременнаяТаблица.Начисление","&Начисление") + " КАК Начисление,
	|	ВременнаяТаблица." + ИмяПоляСотрудник + " КАК Сотрудник,
	|	ВременнаяТаблица." + ИмяПоляПериод + " КАК Период,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.СтатьяФинансирования,ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.СтатьяРасходов,ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете,ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) 
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.ОтношениеКЕНВД,ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка) 
	|			ТОГДА СведенияОБухучетеНачислений.ОтношениеКЕНВД
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТСведенияОБухучетеНачисленийСотрудников
	|ИЗ
	|	" + ИмяВременнойТаблицы + "  КАК ВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО ВременнаяТаблица." + ИмяПоляСотрудник + " = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И ВременнаяТаблица." + ИмяПоляПериод + " = СведенияОБухучетеЗарплатыСотрудников.Период
	|			" + ?(ПодразделениеВТаблице,"И ВременнаяТаблица.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение","") + "
	|			" + ?(ОрганизацияВТаблице,"И ВременнаяТаблица.Организация = СведенияОБухучетеЗарплатыСотрудников.Организация","") + "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО " + ?(НачислениеВТаблице,"ВременнаяТаблица.Начисление","&Начисление") + " = СведенияОБухучетеНачислений.Начисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеНачислений";
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеЗарплатыСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в ОписательВременныхТаблиц.
//
//	Структура таблицы ВТСведенияОБухучетеЗарплатыСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Сотрудник, Период.
//			Поля Организация и Подразделение могут отсутствовать, если заполнены параметр Организация, Подразделение.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, ТерриторияВыполненияРаботВОрганизации = Неопределено) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация, Подразделение, ТерриторияВыполненияРаботВОрганизации);

КонецПроцедуры

Процедура СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц);

КонецПроцедуры

Функция БухучетПервичногоДокумента(ДокументОснование) Экспорт

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.БухучетПервичногоДокумента(ДокументОснование);

КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, Период)

	ТаблицаОстаткиОтпусков = НоваяТаблицаОстаткиОтпусков();
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация      = Организация;
	ПараметрыПолучения.НачалоПериода    = НачалоМесяца(Период);
	ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(Период);
	ПараметрыПолучения.Вставить("КадровыеДанные", "Подразделение");
	ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.Период,
	|	ТаблицаСотрудников.Подразделение
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников"; 
	Запрос.Выполнить();
	
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники", "Сотрудник,Период", Организация,,Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.Подразделение КАК Подразделение,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяФинансирования
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Сотрудники.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник";
	
	БухучетСотрудников = Запрос.Выполнить().Выгрузить();
	БухучетСотрудников.Индексы.Добавить("Сотрудник");
	Отбор = Новый Структура("Сотрудник");
	
	СведенияОбОтпусках = ЗарплатаКадры.СведенияОбОтпускахСотрудниковДляРасчетаОценочныхОбязательств(МассивСотрудников, Период);
	Для каждого СтрокаСведений Из СведенияОбОтпусках Цикл
		
		НоваяСтрока = ТаблицаОстаткиОтпусков.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
		НоваяСтрока.Организация = Организация;
		
		Отбор.Сотрудник = СтрокаСведений.Сотрудник;
		СтрокиБухучета = БухучетСотрудников.НайтиСтроки(Отбор);
		Если СтрокиБухучета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиБухучета[0],"Подразделение,СпособОтраженияЗарплатыВБухучете,СтатьяФинансирования");
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ТаблицаОстаткиОтпусков;

КонецФункции

// Функция формирует структуру с данными отражения зарплаты для бухучета.
//
// Параметры:
//  Организация, тип СправочникСсылка.Организации.
//  ПериодРегистрации - тип дата, первое число месяца.
//  СтрокаСписокТаблиц - Тип Строка, в строке переданы имена таблиц, которые необходимо заполнить
//				         имена таблиц соответствуют именам табличных частей документа ОтражениеЗарплатыВБухучете.
//  Отказ - Булево
//  ДанныеДляПроведения - Структура, ключ - имя регистра, значение - таблица значений с движениями документа
//						это источник данных, если Неопределено, тогда источник данных - движения регистров.
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам табличных частей документа ОтражениеЗарплатыВБухучете.
//			Значение - таблица значений, соответствующая структуре табличных частей документа ОтражениеЗарплатыВБухучете.
//
Функция ДанныеДляОтраженияЗарплатыВБухучете(ПериодРегистрации, Организация, СтрокаСписокТаблиц = "", РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	ДанныеДляОтражения = НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете();
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) Или СтрНайти(СтрокаСписокТаблиц, "НачисленнаяЗарплатаИВзносы") > 0 Тогда
		
		ТаблицаНачисленнаяЗарплатаИВзносы = ДанныеДляОтраженияВБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы = ТаблицаНачисленнаяЗарплатаИВзносы;
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) Или СтрНайти(СтрокаСписокТаблиц, "НачисленныйНДФЛ") > 0 Тогда
		
		ТаблицаНачисленныйНДФЛ = ДанныеДляОтраженияВБухучетеНДФЛ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.НачисленныйНДФЛ = ТаблицаНачисленныйНДФЛ;
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) Или СтрНайти(СтрокаСписокТаблиц, "УдержаннаяЗарплата") > 0 Тогда
		
		ТаблицаУдержаннаяЗарплата = ДанныеДляОтраженияВБухучетеУдержаний(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.УдержаннаяЗарплата = ТаблицаУдержаннаяЗарплата;
		
	КонецЕсли;

	Возврат ДанныеДляОтражения;
	
КонецФункции

Функция ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, Период, НачисленнаяЗарплатаИВзносы)
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТНачисленияБазаОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("НачисленнаяЗарплатаИВзносы", НачисленнаяЗарплатаИВзносы);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.Сумма,
    |	НачисленияИВзносы.Налог,
	|	НачисленияИВзносы.ВзносыВсего
	|ПОМЕСТИТЬ ВТНачисленнаяЗарплатаИВзносы
	|ИЗ
	|	&НачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	СУММА(НачисленияИВзносы.Сумма) КАК ФондОплатыТруда,
	|	НачисленияИВзносы.Налог,
	|	СУММА(НачисленияИВзносы.ВзносыВсего) КАК СтраховыеВзносы
	|ИЗ
	|	ВТНачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК ВТНачисленияБазаОтпуска
	|		ПО НачисленияИВзносы.Начисление = ВТНачисленияБазаОтпуска.Ссылка
	|		 И ВТНачисленияБазаОтпуска.ВключатьВФОТ
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.Налог,
	|	НачисленияИВзносы.СтатьяФинансирования";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаФондОплатыТрудаИСтраховыеВзносы = НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаФондОплатыТрудаИСтраховыеВзносы.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ТаблицаФондОплатыТрудаИСтраховыеВзносы;	
	
КонецФункции 

// Выполняет свертку таблиц значений структуры ДанныеДляОтражения
// 
//	Параметры
// 		ДанныеДляОтражения - структура, описание см НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете()
// 		СтрокаКолонкиУдаления - строка, через запятую указаны имена колонок, которые необходимо удалить
//
Процедура СвернутьДанныеДляОтраженияЗарплатыВБухучете(ДанныеДляОтражения, СтрокаКолонкиУдаления) Экспорт

	КолонкиУдаления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКолонкиУдаления);
	
	Для каждого ЭлементСтруктуры Из ДанныеДляОтражения Цикл
		
		КолонкиГруппировок  = Новый Массив;
		КолонкиСуммирования = Новый Массив;
		Для каждого КолонкаТЗ Из ЭлементСтруктуры.Значение.Колонки Цикл
			Если КолонкиУдаления.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если КолонкаТЗ.ТипЗначения.СодержитТип(Тип("Число")) Тогда
				КолонкиСуммирования.Добавить(КолонкаТЗ.Имя);
			Иначе
				КолонкиГруппировок.Добавить(КолонкаТЗ.Имя);
			КонецЕсли;
		КонецЦикла;
		КолонкиСуммирования = СтрСоединить(КолонкиСуммирования, ", ");
		КолонкиГруппировок = СтрСоединить(КолонкиГруппировок, ", ");
		ЭлементСтруктуры.Значение.Свернуть(КолонкиГруппировок, КолонкиСуммирования);	
		
	КонецЦикла;

КонецПроцедуры

// Функция возвращает таблицу значений с данными бухучета удержаний.
//		Поля таблицы описаны в НоваяТаблицаБухучетУдержаннаяЗарплата().
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	РезультатыРасчетаЗарплаты - структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете.
//
Функция ДанныеДляОтраженияВБухучетеУдержаний(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации);
	Иначе
		Возврат ДанныеДляОтраженияВБухучетеУдержанийБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
	КонецЕсли;

КонецФункции

Функция ДанныеДляОтраженияВБухучетеУдержанийБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты)

	ТаблицаУдержаннаяЗарплата = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	УдержаннаяЗарплата = НоваяТаблицаБухучетУдержаннаяЗарплата();
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаУдержаннаяЗарплата", ТаблицаУдержаннаяЗарплата);
	
	// Помещаем таблицу в запрос.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.Организация,
	|	УдержаннаяЗарплата.Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.ВидОперации,
	|	УдержаннаяЗарплата.ГруппаУчетаНачислений,
	|	УдержаннаяЗарплата.Сумма
	|ПОМЕСТИТЬ ВТУдержаннаяЗарплата
	|ИЗ
	|	&ТаблицаУдержаннаяЗарплата КАК УдержаннаяЗарплата";
	Запрос.Выполнить();
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТУдержаннаяЗарплата.Сотрудник КАК Сотрудник,
		|	&ПериодРегистрации КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТУдержаннаяЗарплата КАК ВТУдержаннаяЗарплата";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Сотрудник,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.ВидОперации КАК ВидОперации,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.ГруппаУчетаНачислений,
	|	СУММА(УдержаннаяЗарплата.Сумма) КАК Сумма
	|ИЗ
	|	ВТУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО УдержаннаяЗарплата.Сотрудник = Сотрудники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО УдержаннаяЗарплата.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО УдержаннаяЗарплата.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.ВидОперации,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.ГруппаУчетаНачислений,
	|	УдержаннаяЗарплата.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(УдержаннаяЗарплата.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации";
	
	// Добавляем упорядочивание по настройкам.
	ПсевдонимыТаблиц = Новый Соответствие;
	ПсевдонимыТаблиц.Вставить("Справочник.ПодразделенияОрганизаций", "УдержаннаяЗарплата");
	ПсевдонимыТаблиц.Вставить("Справочник.Должности", "Сотрудники");
	ПсевдонимыТаблиц.Вставить("Справочник.Сотрудники", "Сотрудники");
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудников(Запрос, ПсевдонимыТаблиц);	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(УдержаннаяЗарплата.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат УдержаннаяЗарплата;

КонецФункции

Функция ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации)

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации);

КонецФункции

// Функция возвращает таблицу значений с данными бухучета НДФЛ.
//		Поля таблицы описаны в НоваяТаблицаБухучетНачисленныйНДФЛ().
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	РезультатыРасчетаЗарплаты - структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете.
//
Функция ДанныеДляОтраженияВБухучетеНДФЛ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации);
	Иначе
		Возврат ДанныеДляОтраженияВБухучетеНДФЛБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
	КонецЕсли;
	
КонецФункции

Функция ДанныеДляОтраженияВБухучетеНДФЛБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты)

	ТаблицаНДФЛ = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	
	НачисленныйНДФЛ = НоваяТаблицаБухучетНачисленныйНДФЛ();
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНДФЛ", ТаблицаНДФЛ);
	
	// Помещаем таблицу в запрос.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Организация,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.ГруппаУчетаНачислений,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.Сумма,
	|	ТаблицаНДФЛ.ВидОперации
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	&ТаблицаНДФЛ КАК ТаблицаНДФЛ";
	Запрос.Выполнить();
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	СУММА(ТаблицаНДФЛ.Сумма) КАК Сумма,
	|	ТаблицаНДФЛ.ВидОперации КАК ВидОперации,
	|	ТаблицаНДФЛ.КодДохода КАК КодДохода,
	|	ТаблицаНДФЛ.Подразделение КАК Подразделение,
	|	ТаблицаНДФЛ.ГруппаУчетаНачислений КАК ГруппаУчетаНачислений
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ФизическиеЛица.Наименование,
	|	ТаблицаНДФЛ.ВидОперации,
	|	ТаблицаНДФЛ.КодДохода,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.ГруппаУчетаНачислений,
	|	ТаблицаНДФЛ.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаНДФЛ.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ВидОперации";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(НачисленныйНДФЛ.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат НачисленныйНДФЛ;

КонецФункции

Функция ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации)

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации);

КонецФункции

// Функция возвращает таблицу значений с данными бухучета начислений и взносов.
//		Поля таблицы описаны в НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы().
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	РезультатыРасчетаЗарплаты - структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете.
//
Функция ДанныеДляОтраженияВБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	
	ТаблицаНачисленнаяЗарплатаИВзносы = НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы();
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		
		ОтражениеЗарплатыВБухучетеВнутренний.СведенияОБухучетеНачисленийИВзносовПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
		
	Иначе
		
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
		ПроцентЕНВД = 0;
		
		Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ТаблицаНачислений.ИдентификаторСтроки,
		|	ТаблицаНачислений.Организация,
		|	ТаблицаНачислений.Сотрудник,
		|	ТаблицаНачислений.ФизическоеЛицо,
		|	ТаблицаНачислений.Подразделение,
		|	ТаблицаНачислений.ТерриторияВыполненияРаботВОрганизации,
		|	ТаблицаНачислений.ДатаНачала,
		|	ТаблицаНачислений.ДатаОкончания,
		|	ТаблицаНачислений.ВидОперации,
		|	ТаблицаНачислений.Начисление,
		|	ТаблицаНачислений.ДокументОснование,
		|	ТаблицаНачислений.Сумма
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	&ТаблицаНачислений КАК ТаблицаНачислений";
		Запрос.Выполнить();
		
		// Получим отражение в бухучете начислений и взносов.
		СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц);
		СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, РезультатыРасчетаЗарплаты);
		
	КонецЕсли;
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТБухучетНачислений.Сотрудник КАК Сотрудник,
		|	ВТБухучетНачислений.ПериодПринятияРасходов КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТБухучетНачислений КАК ВТБухучетНачислений
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТБухучетСтраховыхВзносов.Сотрудник,
		|	ВТБухучетСтраховыхВзносов.ПериодПринятияРасходов
		|ИЗ
		|	ВТБухучетСтраховыхВзносов КАК ВТБухучетСтраховыхВзносов";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	// Собираем финальный запрос.
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДивидендыСотрудников); 
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.Дивиденды);
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	
    
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(НачисленияИВзносы.Сумма) КАК Сумма,
	|	СУММА(НачисленияИВзносы.ВзносыВсего) КАК ВзносыВсего,
	|	ЕСТЬNULL(ПВРНачисления.ГруппаУчета,ЕСТЬNULL(НастройкаГруппУчетаОсобыхНачисленийИУдержаний.ГруппаУчета,ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.Зарплата))) КАК ГруппаУчетаНачислений, 
	|	НачисленияИВзносы.Налог
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияИВзносы.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		НачисленияИВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|		НачисленияИВзносы.Подразделение КАК Подразделение,
	|		НачисленияИВзносы.ВидОперации КАК ВидОперации,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|		СУММА(НачисленияИВзносы.Сумма) КАК Сумма,
	|		СУММА(НачисленияИВзносы.ВзносыВсего) КАК ВзносыВсего,
	|		МАКСИМУМ(НачисленияИВзносы.Налог) КАК Налог,
	|		НачисленияИВзносы.Начисление КАК Начисление
	|	ИЗ
	|		(ВЫБРАТЬ
	|			БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|			БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|			БухучетНачислений.Сотрудник КАК Сотрудник,
	|			БухучетНачислений.Подразделение КАК Подразделение,
	|			БухучетНачислений.Начисление КАК Начисление,
	|			БухучетНачислений.ВидОперации КАК ВидОперации,
	|			БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|			БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|			БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|			БухучетНачислений.Сумма КАК Сумма,
	|           ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка) КАК Налог,
	|           0 КАК ВзносыВсего
	|		ИЗ
	|			ВТБухучетНачислений КАК БухучетНачислений
	|		ГДЕ
	|			НЕ БухучетНачислений.ВидОперации В (&ВидыОпераций)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			БухучетСтраховыхВзносов.ПериодПринятияРасходов,
	|			БухучетСтраховыхВзносов.ФизическоеЛицо,
	|			БухучетСтраховыхВзносов.Сотрудник,
	|			БухучетСтраховыхВзносов.Подразделение,
	|			БухучетСтраховыхВзносов.Начисление,
	|			БухучетСтраховыхВзносов.ВидОперации,
	|			БухучетСтраховыхВзносов.СпособОтраженияЗарплатыВБухучете,
	|			БухучетСтраховыхВзносов.СтатьяФинансирования,
	|			БухучетСтраховыхВзносов.СтатьяРасходов,
	|			0,
	|			БухучетСтраховыхВзносов.Налог,
	|			БухучетСтраховыхВзносов.ВзносыВсего
	|		ИЗ
	|			ВТБухучетСтраховыхВзносов КАК БухучетСтраховыхВзносов) КАК НачисленияИВзносы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|			ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|			ПО НачисленияИВзносы.Подразделение = ПодразделенияОрганизаций.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачисленияИВзносы.ПериодПринятияРасходов,
	|		НачисленияИВзносы.ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник,
	|		НачисленияИВзносы.Подразделение,
	|		НачисленияИВзносы.ВидОперации,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов,
	|		ФизическиеЛица.Наименование,
	|		ПодразделенияОрганизаций.Наименование,
	|		НачисленияИВзносы.Начисление) КАК НачисленияИВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО НачисленияИВзносы.Подразделение = ПодразделенияОрганизаций.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО НачисленияИВзносы.Сотрудник = Сотрудники.Сотрудник
	|			И НачисленияИВзносы.ПериодПринятияРасходов = Сотрудники.Период
	|       ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ПВРНачисления
	|       ПО НачисленияИВзносы.Начисление = ПВРНачисления.Ссылка
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаГруппУчетаОсобыхНачисленийИУдержаний КАК НастройкаГруппУчетаОсобыхНачисленийИУдержаний
	|       ПО НачисленияИВзносы.Начисление = НастройкаГруппУчетаОсобыхНачисленийИУдержаний.НачислениеУдержание
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	НачисленияИВзносы.Налог,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.Сотрудник,
	|	ЕСТЬNULL(ПВРНачисления.ГруппаУчета,ЕСТЬNULL(НастройкаГруппУчетаОсобыхНачисленийИУдержаний.ГруппаУчета,ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.Зарплата))),
	|	НачисленияИВзносы.Начисление
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачисленияИВзносы.Сумма) <> 0
	|		ИЛИ СУММА(НачисленияИВзносы.ВзносыВсего) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете
	|АВТОУПОРЯДОЧИВАНИЕ";
	

	Запрос.Текст = ТекстЗапроса;

	// Добавляем упорядочивание по настройкам.
	ПсевдонимыТаблиц = Новый Соответствие;
	ПсевдонимыТаблиц.Вставить("Справочник.ПодразделенияОрганизаций", "НачисленияИВзносы");
	ПсевдонимыТаблиц.Вставить("Справочник.Должности", "Сотрудники");
	 ПсевдонимыТаблиц.Вставить("Справочник.Сотрудники", "Сотрудники");
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудников(Запрос, ПсевдонимыТаблиц);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНачисленнаяЗарплатаИВзносы.Добавить(),Выборка);
	КонецЦикла;
	
	Возврат ТаблицаНачисленнаяЗарплатаИВзносы;
	
КонецФункции

// Создает временную таблицу ВТНачислениеВидНачисленияОплатыТрудаДляНУ с полями.
//	Начисление -  тип ПланВидовРасчетаСсылка.Начисление,  ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний
//	ВидНачисленияОплатыТрудаДляНУ - тип ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний.
//
Процедура СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	Начисления.ВидНачисленияДляНУ КАК ВидНачисленияОплатыТрудаДляНУ
	|ПОМЕСТИТЬ ВТНачислениеВидНачисленияОплатыТрудаДляНУ
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОсобыхНачисленийИУдержаний.Ссылка,
	|	ВЫБОР
	|		КОГДА ВидыОсобыхНачисленийИУдержаний.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.пп21ст255)
	|		КОГДА ВидыОсобыхНачисленийИУдержаний.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.пп21ст255)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Перечисление.ВидыОсобыхНачисленийИУдержаний КАК ВидыОсобыхНачисленийИУдержаний
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление";
	Запрос.Выполнить();

КонецПроцедуры

// Формирует таблицу отражения в бухучете начислений - ВТБухучетНачислений.
//
//	МенеджерВременныхТаблиц должен содержать таблицу ВТНачисления.
//	Описание таблицы ВТНачисления
// 		ПериодРегистрации.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		Сумма
//		ДокументОснование
// 		ИдентификаторСтроки
//
// Поля таблицы ВТБухучетНачислений
// 		ПериодРегистрации
// 		ИдентификаторСтроки
// 		ПериодПринятияРасходов.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		ДокументОснование
// 		СпособОтраженияЗарплатыВБухучете
// 		СтатьяФинансирования
// 		СтатьяРасходов.
// 		Сумма
// 		ВидНачисленияОплатыТрудаДляНУ
// 		ОблагаетсяЕНВД.
//
// Параметры:
//		Организация
//		ПериодРегистрации
//		ПроцентЕНВД
//		МенеджерВременныхТаблиц
//		ДополнительныеПараметры - Структура, данные документа, начисления которого распределяем
//						используется при ведении учета по статьям финансирования.
//
Процедура СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц, ДополнительныеПараметры = Неопределено) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц, ДополнительныеПараметры);

КонецПроцедуры

// Формирует таблицу отражения в бухучете страховых взносов - ВТБухучетСтраховыхВзносов.
//
// Менеджер временных таблиц должен содержать таблицу ВТБухучетНачислений, структура описана в процедуре
// СоздатьВТБухучетНачислений.
//
Процедура СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	
	
	ТаблицаВзносов = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаВзносов", ТаблицаВзносов);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаВзносов.ИдентификаторСтроки,
	|	ТаблицаВзносов.Организация,
	|	ТаблицаВзносов.Сотрудник,
	|	ТаблицаВзносов.ФизическоеЛицо,
	|	ТаблицаВзносов.Подразделение,
	|	ТаблицаВзносов.ВидОперации,
	|	ТаблицаВзносов.Начисление,
	|	ТаблицаВзносов.ДатаНачала,
	|	ТаблицаВзносов.ВидЕСВ,
	|	ТаблицаВзносов.Налог,
	|	ТаблицаВзносов.НалоговыйПериод,
	|	ТаблицаВзносов.Сумма
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	&ТаблицаВзносов КАК ТаблицаВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление ССЫЛКА Перечисление.ВидыОсобыхНачисленийИУдержаний";
	
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда
		
		КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, Истина, МассивФизическихЛиц, Организация, ПериодРегистрации, КонецМесяца(ПериодРегистрации));
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) КАК Период
		|ПОМЕСТИТЬ ВТОсновныеСотрудники
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(Сотрудники.Сотрудник) КАК Сотрудник,
		|		Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.ФизическоеЛицо) КАК Сотрудники";
		Запрос.Выполнить();
		
		ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТОсновныеСотрудники", "Сотрудник,Период");
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Подразделение");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ТаблицаВзносов.ИдентификаторСтроки,
		|	ТаблицаВзносов.Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|				И НЕ ОсновныеСотрудникиФизическихЛиц.Сотрудник ЕСТЬ NULL 
		|			ТОГДА ОсновныеСотрудникиФизическихЛиц.Сотрудник
		|		ИНАЧЕ ТаблицаВзносов.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ТаблицаВзносов.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				И НЕ КадровыеДанныеСотрудников.Подразделение ЕСТЬ NULL 
		|			ТОГДА КадровыеДанныеСотрудников.Подразделение
		|		ИНАЧЕ ТаблицаВзносов.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ТаблицаВзносов.ФизическоеЛицо,
		|	ТаблицаВзносов.ВидОперации,
		|	ТаблицаВзносов.Начисление,
		|	ТаблицаВзносов.ДатаНачала,
		|	ТаблицаВзносов.ВидЕСВ,
		|	ТаблицаВзносов.Налог,
		|	ТаблицаВзносов.НалоговыйПериод,
		|	ТаблицаВзносов.Сумма
		|ПОМЕСТИТЬ ВТВзносыВременная
		|ИЗ
		|	ВТВзносы КАК ТаблицаВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудники КАК ОсновныеСотрудникиФизическихЛиц
		|		ПО ТаблицаВзносов.ФизическоеЛицо = ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
		|			И (ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ТаблицаВзносов.ФизическоеЛицо = КадровыеДанныеСотрудников.ФизическоеЛицо
		|			И (ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВзносы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзносыВременная.ПериодРегистрации,
		|	ВзносыВременная.ИдентификаторСтроки,
		|	ВзносыВременная.Организация,
		|	ВзносыВременная.Сотрудник,
		|	ВзносыВременная.Подразделение,
		|	ВзносыВременная.ФизическоеЛицо,
		|	ВзносыВременная.ВидОперации,
		|	ВзносыВременная.Начисление,
		|	ВзносыВременная.ДатаНачала,
		|	ВзносыВременная.ВидЕСВ,
		|	ВзносыВременная.Налог,
		|	ВзносыВременная.НалоговыйПериод,		
		|	ВзносыВременная.Сумма
		|ПОМЕСТИТЬ ВТВзносы
		|ИЗ
		|	ВТВзносыВременная КАК ВзносыВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВзносыВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОсновныеСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОсновныеСотрудникиФизическихЛиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.ИдентификаторСтроки,
		|	Взносы.Организация,
		|	Взносы.Сотрудник,
		|	Взносы.Подразделение,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.ВидОперации,
		|	Взносы.Начисление,
		|	Взносы.ДатаНачала,
		|	Взносы.ВидЕСВ,
		|	Взносы.Налог,
		|	Взносы.НалоговыйПериод,
		|	Взносы.Сумма
		|ИЗ
		|	ВТВзносы КАК Взносы";
		
		ТаблицаВзносов = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	ТаблицаВзносов.Колонки.Удалить("ВидОперации");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
			|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачислений.Сотрудник КАК Сотрудник,
			|	БухучетНачислений.Подразделение КАК Подразделение,
			|	БухучетНачислений.Начисление КАК Начисление,
			|	БухучетНачислений.ВидОперации КАК ВидОперации,
			|	БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
			|	БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
			|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачислений.Сумма КАК Сумма
			|ИЗ
			|   ВТБухучетНачислений КАК БухучетНачислений
			|   
			|";
		
	ТаблицаНачислений = Запрос.Выполнить().Выгрузить();
	
	//Распределение таблицы взносов по таблице начислений
	ПоляРазрез = Новый Массив();
	ПоляРазрез.Добавить("ВидОперации");
	ПоляРазрез.Добавить("СтатьяФинансирования");
	ПоляРазрез.Добавить("СтатьяРасходов");
	ПоляРазрез.Добавить("СпособОтраженияЗарплатыВБухучете");
	ПоляРазрез.Добавить("ПериодПринятияРасходов");
	ПоляСвязи = Новый Структура();
	ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
	ПоляСвязи.Вставить("Сотрудник","Сотрудник");
	ПоляСвязи.Вставить("Подразделение","Подразделение");
	ПоляСвязи.Вставить("Начисление","Начисление");
	ОтражениеВУчетеСтраховыеВзносы = ЗарплатаКадры.РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаВзносов, "Сумма", ТаблицаНачислений, "Сумма", ПоляРазрез, ПоляСвязи,, Ложь);
	
	////Запрос.Текст = 
	////"ВЫБРАТЬ
	////|	БухучетНачислений.Сотрудник,
	////|	БухучетНачислений.ФизическоеЛицо,
	////|	БухучетНачислений.ДатаНачала,
	////|	БухучетНачислений.Подразделение,
	////|	БухучетНачислений.Начисление,
	////|	БухучетНачислений.ОблагаетсяЕНВД,
	////|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	////|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
	////|ИЗ
	////|	ВТБухучетНачислений КАК БухучетНачислений
	////|
	////|СГРУППИРОВАТЬ ПО
	////|	БухучетНачислений.Сотрудник,
	////|	БухучетНачислений.ФизическоеЛицо,
	////|	БухучетНачислений.ДатаНачала,
	////|	БухучетНачислений.Подразделение,
	////|	БухучетНачислений.Начисление,
	////|	БухучетНачислений.ОблагаетсяЕНВД
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|ВЫБРАТЬ
	////|	БухучетНачислений.Сотрудник КАК Сотрудник,
	////|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	////|	БухучетНачислений.Подразделение КАК Подразделение,
	////|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	////|	БухучетНачислений.ПериодПринятияРасходов,
	////|	БухучетНачислений.Начисление КАК Начисление,
	////|	БухучетНачислений.ВидОперации,
	////|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	////|	БухучетНачислений.СтатьяФинансирования,
	////|	БухучетНачислений.СтатьяРасходов,
	////|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	////|	ВЫБОР
	////|		КОГДА БухучетНачислений.Сумма = 0
	////|				ИЛИ БухучетНачисленийСвод.Сумма = 0
	////|			ТОГДА 0
	////|		ИНАЧЕ ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10))
	////|	КОНЕЦ КАК База
	////|ПОМЕСТИТЬ ВТБухучетНачисленийБаза
	////|ИЗ
	////|	ВТБухучетНачислений КАК БухучетНачислений
	////|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачисленийСвод
	////|		ПО БухучетНачислений.ДатаНачала = БухучетНачисленийСвод.ДатаНачала
	////|			И БухучетНачислений.Сотрудник = БухучетНачисленийСвод.Сотрудник
	////|			И БухучетНачислений.ФизическоеЛицо = БухучетНачисленийСвод.ФизическоеЛицо
	////|			И БухучетНачислений.Подразделение = БухучетНачисленийСвод.Подразделение
	////|			И БухучетНачислений.Начисление = БухучетНачисленийСвод.Начисление
	////|			И БухучетНачислений.ОблагаетсяЕНВД = БухучетНачисленийСвод.ОблагаетсяЕНВД
	////|
	////|ИНДЕКСИРОВАТЬ ПО
	////|	Сотрудник,
	////|	ФизическоеЛицо,
	////|	Подразделение,
	////|	ДатаНачала,
	////|	Начисление,
	////|	ОблагаетсяЕНВД
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|ВЫБРАТЬ
	////|	СтраховыеВзносы.ИдентификаторСтроки,
	////|	СтраховыеВзносы.Организация,
	////|	СтраховыеВзносы.ПериодРегистрации,
	////|	СтраховыеВзносы.ФизическоеЛицо,
	////|	СтраховыеВзносы.Сотрудник,
	////|	СтраховыеВзносы.Подразделение,
	////|	СтраховыеВзносы.Начисление,
	////|	СтраховыеВзносы.ВидОперации,
	////|	СтраховыеВзносы.ДатаНачала,
	////|	СтраховыеВзносы.Сумма,
	////|	ЕСТЬNULL(БухучетНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)) КАК СпособОтраженияЗарплатыВБухучете,
	////|	ЕСТЬNULL(БухучетНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	////|	ЕСТЬNULL(БухучетНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	////|	ЕСТЬNULL(БухучетНачислений.База, СтраховыеВзносы.Сумма) КАК База,
	////|	ЕСТЬNULL(БухучетНачислений.ПериодПринятияРасходов, СтраховыеВзносы.ПериодРегистрации) КАК ПериодПринятияРасходов,
	////|	ЕСТЬNULL(БухучетНачислений.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперацииНачисления,
	////|	СтраховыеВзносы.ОблагаетсяЕНВД,
	////|	ВЫБОР
	////|		КОГДА БухучетНачислений.ВидОперации ЕСТЬ NULL 
	////|			ТОГДА ИСТИНА
	////|		ИНАЧЕ ЛОЖЬ
	////|	КОНЕЦ КАК НетДанныхБухучета
	////|ПОМЕСТИТЬ ВТТаблицаКоэффициентов
	////|ИЗ
	////|	ВТВзносы КАК СтраховыеВзносы
	////|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБаза КАК БухучетНачислений
	////|		ПО СтраховыеВзносы.Сотрудник = БухучетНачислений.Сотрудник
	////|			И СтраховыеВзносы.ФизическоеЛицо = БухучетНачислений.ФизическоеЛицо
	////|			И СтраховыеВзносы.Подразделение = БухучетНачислений.Подразделение
	////|			И СтраховыеВзносы.ОблагаетсяЕНВД = БухучетНачислений.ОблагаетсяЕНВД
	////|			И СтраховыеВзносы.Начисление = БухучетНачислений.Начисление
	////|			И СтраховыеВзносы.ДатаНачала = БухучетНачислений.ДатаНачала
	////|			И (БухучетНачислений.База <> 0)
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|УНИЧТОЖИТЬ ВТБухучетНачисленийБаза
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|УНИЧТОЖИТЬ ВТБухучетНачисленийСвод
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|ВЫБРАТЬ
	////|	СтрокиБезБухучета.ИдентификаторСтроки,
	////|	СтрокиБезБухучета.Организация,
	////|	СтрокиБезБухучета.ПериодРегистрации,
	////|	СтрокиБезБухучета.ФизическоеЛицо,
	////|	СтрокиБезБухучета.Сотрудник,
	////|	СтрокиБезБухучета.Подразделение,
	////|	СтрокиБезБухучета.Начисление КАК НачислениеУдержание,
	////|	СтрокиБезБухучета.ДатаНачала,
	////|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	////|	СтрокиБезБухучета.ОблагаетсяЕНВД,
	////|	СтрокиБезБухучета.Сумма
	////|ПОМЕСТИТЬ ВТВзносыБезБазы
	////|ИЗ
	////|	ВТТаблицаКоэффициентов КАК СтрокиБезБухучета
	////|ГДЕ
	////|	СтрокиБезБухучета.НетДанныхБухучета
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|ВЫБРАТЬ ПЕРВЫЕ 1
	////|	ВзносыБезБазы.ИдентификаторСтроки
	////|ИЗ
	////|	ВТВзносыБезБазы КАК ВзносыБезБазы";
	////
	////Результат = Запрос.Выполнить();
	////Если Не Результат.Пустой() Тогда
	////	// Есть взносы без распределения.
	////	
	////	ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	////	
	////	Запрос.Текст = 
	////	"ВЫБРАТЬ
	////	|	СтрокиБезБухучета.ИдентификаторСтроки,
	////	|	СтрокиБезБухучета.Организация,
	////	|	СтрокиБезБухучета.ПериодРегистрации,
	////	|	СтрокиБезБухучета.ФизическоеЛицо,
	////	|	СтрокиБезБухучета.Сотрудник КАК Сотрудник,
	////	|	СтрокиБезБухучета.Подразделение КАК Подразделение,
	////	|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоДоход)) КАК ВидОперации,
	////	|	СтрокиБезБухучета.НачислениеУдержание КАК Начисление,
	////	|	ВЫБОР
	////	|		КОГДА СтрокиБезБухучета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	////	|			ТОГДА СтрокиБезБухучета.ПериодРегистрации
	////	|		ИНАЧЕ СтрокиБезБухучета.ДатаНачала
	////	|	КОНЕЦ КАК ДатаНачала,
	////	|	СтрокиБезБухучета.Сумма,
	////	|	СтрокиБезБухучета.ОблагаетсяЕНВД,
	////	|	КОНЕЦПЕРИОДА(ВЫБОР
	////	|			КОГДА СтрокиБезБухучета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	////	|				ТОГДА СтрокиБезБухучета.ПериодРегистрации
	////	|			ИНАЧЕ СтрокиБезБухучета.ДатаНачала
	////	|		КОНЕЦ, МЕСЯЦ) КАК ДатаОкончания
	////	|ИЗ
	////	|	ВТВзносыБезБазы КАК СтрокиБезБухучета
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
	////	|		ПО СтрокиБезБухучета.НачислениеУдержание = НачисленияВидОперации.НачислениеУдержание";
	////	
	////	РезультатЗапроса = Запрос.Выполнить();
	////	
	////	ТаблицаНачислений = ОтражениеЗарплатыВУчете.НоваяТаблицаНачислений();
	////	ТаблицаНачислений.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	////	ТаблицаНачислений.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	////	Выборка = РезультатЗапроса.Выбрать();
	////	Пока Выборка.Следующий() Цикл
	////		ЗаполнитьЗначенияСвойств(ТаблицаНачислений.Добавить(), Выборка);
	////	КонецЦикла;
	////	
	////	ЗапросБухучетНачислений = Новый Запрос;
	////	ЗапросБухучетНачислений.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	////	ЗапросБухучетНачислений.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
	////	ЗапросБухучетНачислений.Текст = 
	////	"ВЫБРАТЬ
	////	|	ТаблицаНачислений.ИдентификаторСтроки,
	////	|	ТаблицаНачислений.Организация,
	////	|	ТаблицаНачислений.ПериодРегистрации,
	////	|	ТаблицаНачислений.ФизическоеЛицо,
	////	|	ТаблицаНачислений.Сотрудник,
	////	|	ТаблицаНачислений.Подразделение,
	////	|	ТаблицаНачислений.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
	////	|	ТаблицаНачислений.ВидОперации,
	////	|	ТаблицаНачислений.Начисление,
	////	|	ТаблицаНачислений.ДатаНачала,
	////	|	ТаблицаНачислений.ДатаОкончания,
	////	|	ТаблицаНачислений.ДокументОснование,
	////	|	ТаблицаНачислений.Сумма,
	////	|	ТаблицаНачислений.ОблагаетсяЕНВД
	////	|ПОМЕСТИТЬ ВТНачисления
	////	|ИЗ
	////	|	&ТаблицаНачислений КАК ТаблицаНачислений";
	////	ЗапросБухучетНачислений.Выполнить();
	////	
	////	ПроцентЕНВД = ?(Не ЗначениеЗаполнено(Организация), Неопределено, 
	////					ОтражениеЗарплатыВБухучете.ПроцентЕНВД(Организация, ПериодРегистрации));
	////	
	////	СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, ЗапросБухучетНачислений.МенеджерВременныхТаблиц);
	////	
	////	ЗапросБухучетНачислений.Текст = 
	////	"ВЫБРАТЬ
	////	|	БухучетНачислений.ПериодРегистрации,
	////	|	БухучетНачислений.ИдентификаторСтроки,
	////	|	БухучетНачислений.ПериодПринятияРасходов,
	////	|	БухучетНачислений.Организация,
	////	|	БухучетНачислений.Сотрудник,
	////	|	БухучетНачислений.ФизическоеЛицо,
	////	|	БухучетНачислений.Подразделение,
	////	|	БухучетНачислений.Начисление,
	////	|	БухучетНачислений.ВидОперации,
	////	|	БухучетНачислений.ДатаНачала,
	////	|	БухучетНачислений.ДатаОкончания,
	////	|	БухучетНачислений.ДокументОснование,
	////	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	////	|	БухучетНачислений.СтатьяФинансирования,
	////	|	БухучетНачислений.СтатьяРасходов,
	////	|	БухучетНачислений.Сумма,
	////	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
	////	|	БухучетНачислений.ОблагаетсяЕНВД
	////	|ИЗ
	////	|	ВТБухучетНачислений КАК БухучетНачислений";
	////	БухучетНачислений = ЗапросБухучетНачислений.Выполнить().Выгрузить();
	////	
	////	Запрос.УстановитьПараметр("БухучетНачислений", БухучетНачислений);
	////	Запрос.Текст =
	////	"ВЫБРАТЬ
	////	|	БухучетНачислений.ПериодРегистрации,
	////	|	БухучетНачислений.ИдентификаторСтроки,
	////	|	БухучетНачислений.ПериодПринятияРасходов,
	////	|	БухучетНачислений.Организация,
	////	|	БухучетНачислений.Сотрудник,
	////	|	БухучетНачислений.ФизическоеЛицо,
	////	|	БухучетНачислений.Подразделение,
	////	|	БухучетНачислений.Начисление,
	////	|	БухучетНачислений.ВидОперации,
	////	|	БухучетНачислений.ДатаНачала,
	////	|	БухучетНачислений.ДатаОкончания,
	////	|	БухучетНачислений.ДокументОснование,
	////	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	////	|	БухучетНачислений.СтатьяФинансирования,
	////	|	БухучетНачислений.СтатьяРасходов,
	////	|	БухучетНачислений.Сумма,
	////	|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
	////	|	БухучетНачислений.ОблагаетсяЕНВД
	////	|ПОМЕСТИТЬ ВТБухучетНачисленийБезБазы
	////	|ИЗ
	////	|	&БухучетНачислений КАК БухучетНачислений
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	БухучетНачислений.ИдентификаторСтроки,
	////	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	////	|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
	////	|ИЗ
	////	|	ВТБухучетНачисленийБезБазы КАК БухучетНачислений
	////	|
	////	|СГРУППИРОВАТЬ ПО
	////	|	БухучетНачислений.ИдентификаторСтроки
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	БухучетНачислений.ИдентификаторСтроки,
	////	|	БухучетНачислений.ВидОперации,
	////	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	////	|	БухучетНачислений.СтатьяФинансирования,
	////	|	БухучетНачислений.СтатьяРасходов,
	////	|	ВЫБОР
	////	|		КОГДА БухучетНачислений.Сумма = 0
	////	|				ИЛИ БухучетНачисленийСвод.Сумма = 0
	////	|			ТОГДА 0
	////	|		ИНАЧЕ ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10))
	////	|	КОНЕЦ КАК База
	////	|ПОМЕСТИТЬ ВТБухучетНачисленийБаза
	////	|ИЗ
	////	|	ВТБухучетНачисленийБезБазы КАК БухучетНачислений
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачисленийСвод
	////	|		ПО БухучетНачислений.ИдентификаторСтроки = БухучетНачисленийСвод.ИдентификаторСтроки
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|ВЫБРАТЬ
	////	|	ТаблицаКоэффициентов.ИдентификаторСтроки,
	////	|	ЕСТЬNULL(БухучетНачисленийБаза.СпособОтраженияЗарплатыВБухучете, ТаблицаКоэффициентов.СпособОтраженияЗарплатыВБухучете) КАК СпособОтраженияЗарплатыВБухучете,
	////	|	ЕСТЬNULL(БухучетНачисленийБаза.СтатьяФинансирования, ТаблицаКоэффициентов.СтатьяФинансирования) КАК СтатьяФинансирования,
	////	|	ЕСТЬNULL(БухучетНачисленийБаза.СтатьяРасходов, ТаблицаКоэффициентов.СтатьяРасходов) КАК СтатьяРасходов,
	////	|	ЕСТЬNULL(БухучетНачисленийБаза.База, ТаблицаКоэффициентов.База) КАК База,
	////	|	ТаблицаКоэффициентов.Начисление,
	////	|	ТаблицаКоэффициентов.ПериодПринятияРасходов,
	////	|	ЕСТЬNULL(БухучетНачисленийБаза.ВидОперации, ТаблицаКоэффициентов.ВидОперацииНачисления) КАК ВидОперацииНачисления
	////	|ИЗ
	////	|	ВТТаблицаКоэффициентов КАК ТаблицаКоэффициентов
	////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБаза КАК БухучетНачисленийБаза
	////	|		ПО ТаблицаКоэффициентов.ИдентификаторСтроки = БухучетНачисленийБаза.ИдентификаторСтроки";
	////	ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
	////	
	////	Запрос.Текст = 
	////	"УНИЧТОЖИТЬ ВТБухучетНачисленийБезБазы
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|УНИЧТОЖИТЬ ВТБухучетНачисленийСвод
	////	|;
	////	|
	////	|////////////////////////////////////////////////////////////////////////////////
	////	|УНИЧТОЖИТЬ ВТБухучетНачисленийБаза";
	////	Запрос.Выполнить();
	////						
	////Иначе
	////	
	////	Запрос.Текст = 
	////	"ВЫБРАТЬ
	////	|	ТаблицаКоэффициентов.ИдентификаторСтроки,
	////	|	ТаблицаКоэффициентов.СпособОтраженияЗарплатыВБухучете,
	////	|	ТаблицаКоэффициентов.СтатьяФинансирования,
	////	|	ТаблицаКоэффициентов.СтатьяРасходов,
	////	|	ТаблицаКоэффициентов.База,
	////	|	ТаблицаКоэффициентов.ПериодПринятияРасходов,
	////	|	ТаблицаКоэффициентов.Начисление,
	////	|	ТаблицаКоэффициентов.ВидОперацииНачисления
	////	|ИЗ
	////	|	ВТТаблицаКоэффициентов КАК ТаблицаКоэффициентов";
	////	ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
	////	
	////КонецЕсли;
	////
	////Запрос.Текст = 
	////"УНИЧТОЖИТЬ ВТВзносы
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|УНИЧТОЖИТЬ ВТВзносыБезБазы
	////|;
	////|
	////|////////////////////////////////////////////////////////////////////////////////
	////|УНИЧТОЖИТЬ ВТТаблицаКоэффициентов";
	////Запрос.Выполнить();
	////
	////ТаблицаКоэффициентов.Индексы.Добавить("ИдентификаторСтроки");
	////
	////ТаблицаВзносов.Индексы.Добавить("ИдентификаторСтроки");
	////
	////ОтражениеВУчетеСтраховыеВзносы = НоваяТаблицыОтражениеВУчетеСтраховыеВзносы();
	////
	////Отбор = Новый Структура("ИдентификаторСтроки");
	////СвойстваЗаполненияПоВзносам = "ФизическоеЛицо,Сотрудник,Подразделение,ОблагаетсяЕНВД,ИдентификаторСтроки,ДатаНачала,ВидОперации";
	////Для каждого СтрокаВзносов Из ТаблицаВзносов Цикл
	////	
	////	ИдентификаторСтроки = СтрокаВзносов.ИдентификаторСтроки;
	////	Отбор.ИдентификаторСтроки = ИдентификаторСтроки;
	////	СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
	////	Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"База");
	////	Результаты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаВзносов.Сумма, Коэффициенты);
	////	
	////	Индекс = 0;
	////	Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
	////		
	////		СтрокаТаблицы = ОтражениеВУчетеСтраховыеВзносы.Добавить();
	////		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОтражения);
	////		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаВзносов,СвойстваЗаполненияПоВзносам);
	////		СтрокаТаблицы.Сумма = Результаты[Индекс];
	////		СтрокаТаблицы.ПериодПринятияРасходов = СтрокаОтражения.ПериодПринятияРасходов;
	////		
	////		Индекс = Индекс + 1;
	////		
	////	КонецЦикла;
	////	
	////КонецЦикла;
	////
	
	Запрос.УстановитьПараметр("ОтражениеВУчетеСтраховыеВзносы", ОтражениеВУчетеСтраховыеВзносы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыПоФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыПоФизическимЛицам.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносыПоФизическимЛицам.Подразделение КАК Подразделение,
	|	СтраховыеВзносыПоФизическимЛицам.Начисление КАК Начисление,
	|	СтраховыеВзносыПоФизическимЛицам.ВидОперации,
	|	СтраховыеВзносыПоФизическимЛицам.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	СтраховыеВзносыПоФизическимЛицам.СтатьяФинансирования,
	|	СтраховыеВзносыПоФизическимЛицам.СтатьяРасходов,
	|	СтраховыеВзносыПоФизическимЛицам.СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносыПоФизическимЛицам.Налог,
	|	СтраховыеВзносыПоФизическимЛицам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТОтражениеВУчетеСтраховыеВзносы
	|ИЗ
	|	&ОтражениеВУчетеСтраховыеВзносы КАК СтраховыеВзносыПоФизическимЛицам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносы.Подразделение КАК Подразделение,
	|	СтраховыеВзносы.Начисление КАК Начисление,
	|	СтраховыеВзносы.ВидОперации КАК ВидОперации,
	|	СтраховыеВзносы.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|	СтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносы.Налог КАК Налог,
	|	СУММА(СтраховыеВзносы.Сумма) КАК ВзносыВсего
	|ПОМЕСТИТЬ ВТБухучетСтраховыхВзносов
	|ИЗ
	|	ВТОтражениеВУчетеСтраховыеВзносы КАК СтраховыеВзносы
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.СтатьяФинансирования,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносы.Налог,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.СтатьяРасходов,
	|	СтраховыеВзносы.ПериодПринятияРасходов,
	|	СтраховыеВзносы.ВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтражениеВУчетеСтраховыеВзносы";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура УстановитьСписокВыбораОтношениеКЕНВД(ЭлементФормы, ИмяЭлемента) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.УстановитьСписокВыбораОтношениеКЕНВД(ЭлементФормы, ИмяЭлемента);

КонецПроцедуры

Процедура УстановитьУсловноеОформлениеДокументОтражениеВУчете(Форма) Экспорт
	
	// Таблица НачисленныйНДФЛ, поля ОКАТО, КПП.
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НачисленныйНДФЛ.РегистрацияВНалоговомОргане");
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодПоОКАТО");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодПоОКТМО");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКПП");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодНалоговогоОргана");
	
	// Таблица Удержания, поле Контрагент.
	СписокУдержаний = Новый СписокЗначений;
	СписокУдержаний.ЗагрузитьЗначения(ВидыОперацийУдержанийТребующиеВВодаКонтрагента());
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид УдержаннаяЗарплата
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.УдержаннаяЗарплата.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = СписокУдержаний;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("УдержаннаяЗарплатаКонтрагент");
	
	// Таблица НачисленнаяЗарплатаИВзносы, поле НачисленнаяЗарплатаИВзносыСпособОтраженияЗарплатыВБухучете.
	СписокНачислений = Новый СписокЗначений;
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС); 
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты);
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.НачисленнаяЗарплатаИВзносы.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = СписокНачислений;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленнаяЗарплатаИВзносыСпособОтраженияЗарплатыВБухучете");
	
КонецПроцедуры

Функция ВидыОперацийУдержанийТребующиеВВодаКонтрагента() Экспорт

	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты); 
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгента);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.Профвзносы);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДобровольныеВзносыВНПФ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПрочиеУдержания);
	
	Возврат ВидыОпераций;

КонецФункции


#Область ОписанияТаблицСтруктур

Функция НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете()

	ДанныеДляОтражения = Новый Структура;
	ДанныеДляОтражения.Вставить("НачисленнаяЗарплатаИВзносы", НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы());
	ДанныеДляОтражения.Вставить("НачисленныйНДФЛ", НоваяТаблицаБухучетНачисленныйНДФЛ());
	ДанныеДляОтражения.Вставить("УдержаннаяЗарплата", НоваяТаблицаБухучетУдержаннаяЗарплата());
	
	Возврат ДанныеДляОтражения;

КонецФункции 

Функция НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы(КолонкиСуммирования = Неопределено) Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	КолонкиСуммирования = Новый Массив;
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("ГруппаУчетаНачислений", Новый ОписаниеТипов("СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Налог", Новый ОписаниеТипов("СправочникСсылка.Налоги"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ВзносыВсего", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	КолонкиСуммирования.Добавить("Сумма");
	КолонкиСуммирования.Добавить("ВзносыВсего");
	
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетНачисленныйНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("КодДохода", Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));
	Таблица.Колонки.Добавить("ГруппаУчетаНачислений", Новый ОписаниеТипов("СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетУдержаннаяЗарплата() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ГруппаУчетаНачислений", Новый ОписаниеТипов("СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицыОтражениеВУчетеСтраховыеВзносы() Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("ВидОперацииНачисления", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;
	
КонецФункции

Функция ДополнительныеПараметрыДляОтраженияВБухучете() Экспорт

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.ДополнительныеПараметрыДляОтраженияВБухучете();
	
КонецФункции

Функция ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков() Экспорт

	ПараметрыДляРасчета = Новый Структура;
	ПараметрыДляРасчета.Вставить("ОстаткиОтпусков", НоваяТаблицаОстаткиОтпусков());
	ПараметрыДляРасчета.Вставить("ФондОплатыТрудаИСтраховыеВзносы", НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы());
	
	Возврат ПараметрыДляРасчета;

КонецФункции 

Функция НоваяТаблицаОстаткиОтпусков() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ОстатокОтпусков", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	Таблица.Колонки.Добавить("ОтпускАвансом", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	Таблица.Колонки.Добавить("СреднийЗаработок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("ФондОплатыТруда", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Налог", Новый ОписаниеТипов("СправочникСсылка.Налоги"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаНачисленныеОтпуска() Экспорт

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;	

КонецФункции

Функция ПараметрыДляРаспределенияНачисленийПоЕНВД(МенеджерВременныхТаблиц, ДокументСсылка = Неопределено, НачисленияПоСотрудникам = Неопределено, ПроверятьЕНВД = Ложь) Экспорт

	Параметры = Новый Структура;
	Параметры.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	Параметры.Вставить("ДокументСсылка", ДокументСсылка); 
	Параметры.Вставить("ПроверятьЕНВД", ПроверятьЕНВД);
	Параметры.Вставить("НачисленияСРаспределениемПоЕНВД", НачисленияПоСотрудникам);
	
	Возврат Параметры;

КонецФункции

Функция СтрокаПолейТаблицыНачисленияСРаспределениемПоЕНВД() Экспорт

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.СтрокаПолейТаблицыНачисленияСРаспределениемПоЕНВД();

КонецФункции

#КонецОбласти


#Область БлокФункцийПервоначальногоЗаполненияИОбновленияИБ
//

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	
КонецПроцедуры

Процедура ПереносМестаХраненияФО() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтарыеНастройкиОрганизаций.Организация КАК Организация,
	|	СтарыеНастройкиОрганизаций.УдалитьФормироватьПроводкиВКонцеПериода КАК ФормироватьПроводкиВКонцеПериода
	|ИЗ
	|	РегистрСведений.НастройкиЗарплатаКадры КАК СтарыеНастройкиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций КАК НовыеНастройкиОрганизаций
	|		ПО СтарыеНастройкиОрганизаций.Организация = НовыеНастройкиОрганизаций.Организация
	|ГДЕ
	|	НовыеНастройкиОрганизаций.ФормироватьПроводкиВКонцеПериода ЕСТЬ NULL 
	|	И СтарыеНастройкиОрганизаций.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Настройки = РегистрыСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Выборка);
		Настройки.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбработатьДокументыОтражениеЗарплатыВБухучете() Экспорт
	
	ТекстЗапроса = ОтражениеЗарплатыВБухучетеВнутренний.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете();
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ТФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФССНС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФСС);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ВидОперации КАК ВидОперации,
	|	ДанныеДокумента.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ДанныеДокумента.ОблагаетсяЕНВД,
	|	МАКСИМУМ(ДанныеДокумента.ВидНачисленияОплатыТрудаДляНУ) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	ДанныеДокумента.ПериодПринятияРасходов,
	|	СУММА(ДанныеДокумента.Сумма) КАК Сумма,
	|	СУММА(ДанныеДокумента.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(ДанныеДокумента.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(ДанныеДокумента.ФСС) КАК ФСС,
	|	СУММА(ДанныеДокумента.ФФОМС) КАК ФФОМС,
	|	СУММА(ДанныеДокумента.ТФОМС) КАК ТФОМС,
	|	СУММА(ДанныеДокумента.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,
	|	СУММА(ДанныеДокумента.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,
	|	СУММА(ДанныеДокумента.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ДанныеДокумента.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(ДанныеДокумента.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(ДанныеДокумента.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|		ДанныеДокумента.ВидОперации КАК ВидОперации,
	|		ДанныеДокумента.СтатьяФинансирования КАК СтатьяФинансирования,
	|		ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|		ДанныеДокумента.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		ДанныеДокумента.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ДанныеДокумента.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|		ДанныеДокумента.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		ДанныеДокумента.Сумма КАК Сумма,
	|		ДанныеДокумента.ПФРСтраховая КАК ПФРСтраховая,
	|		ДанныеДокумента.ПФРНакопительная КАК ПФРНакопительная,
	|		ДанныеДокумента.ФСС КАК ФСС,
	|		ДанныеДокумента.ФФОМС КАК ФФОМС,
	|		ДанныеДокумента.ТФОМС КАК ТФОМС,
	|		ДанныеДокумента.ПФРНаДоплатуЛетчикам КАК ПФРНаДоплатуЛетчикам,
	|		ДанныеДокумента.ПФРНаДоплатуШахтерам КАК ПФРНаДоплатуШахтерам,
	|		ДанныеДокумента.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		ДанныеДокумента.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		ДанныеДокумента.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|		ДанныеДокумента.ПФРПоСуммарномуТарифу КАК ПФРПоСуммарномуТарифу
	|	ИЗ
	|		ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете КАК ДанныеДокумента
	|	ГДЕ
	|		НЕ ДанныеДокумента.ВидОперации В (&ВидыОпераций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка,
	|		ДанныеДокумента.ФизическоеЛицо,
	|		ДанныеДокумента.Подразделение,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоДоход),
	|		ДанныеДокумента.СтатьяФинансирования,
	|		ДанныеДокумента.СтатьяРасходов,
	|		ДанныеДокумента.СпособОтраженияЗарплатыВБухучете,
	|		ДанныеДокумента.ОблагаетсяЕНВД,
	|		ДанныеДокумента.ВидНачисленияОплатыТрудаДляНУ,
	|		ДанныеДокумента.ПериодПринятияРасходов,
	|		ДанныеДокумента.Сумма,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.ВидОперации В(&ВидыОпераций)) КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ДанныеДокумента.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО ДанныеДокумента.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ВидОперации,
	|	ДанныеДокумента.СтатьяФинансирования,
	|	ДанныеДокумента.СтатьяРасходов,
	|	ДанныеДокумента.СпособОтраженияЗарплатыВБухучете,
	|	ДанныеДокумента.ОблагаетсяЕНВД,
	|	ДанныеДокумента.ПериодПринятияРасходов,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Ссылка = Выборка.Ссылка;
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		ДокументОбъект.НачисленнаяЗарплатаИВзносы.Очистить();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект.НачисленнаяЗарплатаИВзносы.Добавить(), Выборка);
		КонецЦикла;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками() Экспорт
	
	ОтражениеЗарплатыВБухучетеВнутренний.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками();
	
КонецПроцедуры

Процедура ЗаполнитьВидОперацииПоЗарплатеВНачислениях() Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ЗаполнитьВидОперацииПоЗарплатеВНачислениях();	

КонецПроцедуры

Процедура ЗаполнитьВидОперацииПоЗарплатеВНачисленияхДляНатуральныхДоходов() Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ЗаполнитьВидОперацииПоЗарплатеВНачисленияхДляНатуральныхДоходов();	

КонецПроцедуры

Процедура ОбновитьВидОперацииЕжегодныеОтпуска() Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ОбновитьВидОперацииЕжегодныеОтпуска();

КонецПроцедуры


#КонецОбласти

#КонецОбласти
