////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в бухгалтерском учете.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает структуру с настройкой бухучета сотрудника на указанную дату.
//
// Параметры:
//  Сотрудник - Тип СправочникСсылка.Сотрудник
//  ДатаАктуальности - Тип Дата, дата на которую получаем способ отражения.
//
// Возвращаемое значение: Структура, ключи СпособОтраженияЗарплатыВБухучете, Период
//		СпособОтраженияЗарплатыВБухучете, тип Справочник.СпособыОтраженияЗарплатыВБухУчете
//		Период, дата на которую установлено значение.
//
Функция НастройкаБухучетаЗарплатыСотрудника(Сотрудник, ДатаАктуальности) Экспорт
	
	БухучетСотрудника = Новый Структура("СтатьяФинансирования, СтатьяРасходов, СпособОтраженияЗарплатыВБухучете, Период");
	БухучетСотрудника.СтатьяФинансирования = Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка();
	БухучетСотрудника.СтатьяРасходов = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	БухучетСотрудника.СпособОтраженияЗарплатыВБухучете = Справочники.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка();
	БухучетСотрудника.Период = Дата(1,1,1);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", ДатаАктуальности);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплатыСотрудников.Период,
	|	БухучетЗарплатыСотрудников.СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыСотрудников.СрезПоследних(&ДатаСреза, Сотрудник = &Сотрудник) КАК БухучетЗарплатыСотрудников";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(БухучетСотрудника, Выборка);
	КонецЕсли;
	
	Возврат БухучетСотрудника;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область РаспределениеРезультатовРасчетаПоВидамДеятельностиЕНВД

Функция БухучетПервичногоДокумента(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетЗарплатыПервичныхДокументов.ДокументОснование,
	|	БухучетЗарплатыПервичныхДокументов.НачислениеУдержание,
	|	БухучетЗарплатыПервичныхДокументов.СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяФинансирования,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяРасходов
	|ИЗ
	|	РегистрСведений.БухучетЗарплатыПервичныхДокументов КАК БухучетЗарплатыПервичныхДокументов
	|ГДЕ
	|	БухучетЗарплатыПервичныхДокументов.ДокументОснование = &ДокументОснование";
	БухучетПервичногоДокумента = Запрос.Выполнить().Выгрузить();
	
	Возврат БухучетПервичногоДокумента;
	
КонецФункции

#КонецОбласти

#Область СведенияОБухучетеЗарплаты

// Формирует временную таблицу ВТСведенияОБухучетеЗарплатыСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в параметре ИменаПолейВременнойТаблицы.
//
//	Структура таблицы ВТСведенияОБухучетеЗарплатыСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Сотрудник, Период.
//			Поля Организация и Подразделение могут отсутствовать, если заполнены параметр Организация, Подразделение.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, ТерриторияВыполненияРаботВОрганизации = Неопределено ) Экспорт
	
	ИмяВТБухучетОрганизаций   = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТБухучетОрганизаций");
	ИмяВТБухучетПодразделений = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТБухучетПодразделений");
	ИмяВТБухучетТерриторий    = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТБухучетТерриторий");
	ИмяВТБухучетСотрудников   = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТБухучетСотрудников");
	
	ИмяВТОрганизации   = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТОрганизации");
	ИмяВТПодразделения = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТПодразделения");
	ИмяВТТерритории    = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТТерритории");
	ИмяВТСотрудники    = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТСотрудники");
	
	МассивИменПолейОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицы, ",");
	ИмяПоляСотрудник     = "Таблица." + МассивИменПолейОтбора[0];
	ИмяПоляПериод        = "Таблица." + МассивИменПолейОтбора[1];
	
	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	
	Статья211 = СтатьяРасходов211();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("Статья211", Статья211);
	
	ОрганизацияВТаблице   = Организация = Неопределено;
	ПодразделениеВТаблице = Подразделение = Неопределено;
	ТерриторияВТаблице    = ТерриторияВыполненияРаботВОрганизации = Неопределено;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляОрганизация КАК Организация,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ИмяВТОрганизации
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.Организация КАК Организация,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетОрганизации
	|ПОМЕСТИТЬ ИмяВТБухучетОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Организация КАК Организация,
	|		Организации.Период КАК Период,
	|		МАКСИМУМ(БухучетЗарплатыОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ИмяВТОрганизации КАК Организации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыОрганизаций КАК БухучетЗарплатыОрганизаций
	|			ПО Организации.Организация = БухучетЗарплатыОрганизаций.Организация
	|				И Организации.Период >= БухучетЗарплатыОрганизаций.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организации.Организация,
	|		Организации.Период) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыОрганизаций КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Организация = БухучетЗарплаты.Организация
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТОрганизации";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТОрганизации", ИмяВТОрганизации);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетОрганизаций", ИмяВТБухучетОрганизаций);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	Если ОрганизацияВТаблице Тогда
		ИмяПоляОрганизация = "Таблица.Организация";
	Иначе
		Запрос.УстановитьПараметр("Организация", Организация);
		ИмяПоляОрганизация = "&Организация";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляОрганизация", ИмяПоляОрганизация);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляПодразделение КАК Подразделение,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ИмяВТПодразделения
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.Подразделение КАК Подразделение,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетПодразделения
	|ПОМЕСТИТЬ ИмяВТБухучетПодразделений
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПериоды.Подразделение КАК Подразделение,
	|		МаксимальныеПериоды.Период КАК Период,
	|		МаксимальныеПериоды.ПериодРегистра КАК ПериодРегистра
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Подразделения.Подразделение КАК Подразделение,
	|			Подразделения.Период КАК Период,
	|			МАКСИМУМ(БухучетЗарплатыПодразделений.Период) КАК ПериодРегистра
	|		ИЗ
	|			ИмяВТПодразделения КАК Подразделения
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|				ПО Подразделения.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|					И Подразделения.Период >= БухучетЗарплатыПодразделений.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Подразделения.Подразделение,
	|			Подразделения.Период) КАК МаксимальныеПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|			ПО МаксимальныеПериоды.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|				И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплатыПодразделений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныеПериоды.Подразделение,
	|		МаксимальныеПериоды.ПериодРегистра,
	|		МаксимальныеПериоды.Период
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(БухучетЗарплатыПодразделений.ИдентификаторСтроки) = 1) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Подразделение = БухучетЗарплаты.Подразделение
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТПодразделения";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТПодразделения", ИмяВТПодразделения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетПодразделений", ИмяВТБухучетПодразделений);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	Если ПодразделениеВТаблице Тогда
		ИмяПоляПодразделение = "Таблица.Подразделение";
	Иначе
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		ИмяПоляПодразделение = "&Подразделение";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПодразделение", ИмяПоляПодразделение);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляТерритория КАК ТерриторияВыполненияРаботВОрганизации,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ИмяВТТерритории
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетТерритории
	|ПОМЕСТИТЬ ИмяВТБухучетТерриторий
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|		МаксимальныеПериоды.Период КАК Период,
	|		МаксимальныеПериоды.ПериодРегистра КАК ПериодРегистра
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Территории.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|			Территории.Период КАК Период,
	|			МАКСИМУМ(БухучетЗарплатыТерриторий.Период) КАК ПериодРегистра
	|		ИЗ
	|			ИмяВТТерритории КАК Территории
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыТерриторийВыполненияРабот КАК БухучетЗарплатыТерриторий
	|				ПО Территории.ТерриторияВыполненияРаботВОрганизации = БухучетЗарплатыТерриторий.ТерриторияВыполненияРабот
	|					И Территории.Период >= БухучетЗарплатыТерриторий.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Территории.ТерриторияВыполненияРаботВОрганизации,
	|			Территории.Период) КАК МаксимальныеПериоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыТерриторийВыполненияРабот КАК БухучетЗарплатыТерриторий
	|			ПО МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации = БухучетЗарплатыТерриторий.ТерриторияВыполненияРабот
	|				И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплатыТерриторий.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации,
	|		МаксимальныеПериоды.ПериодРегистра,
	|		МаксимальныеПериоды.Период
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(БухучетЗарплатыТерриторий.ИдентификаторСтроки) = 1) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыТерриторийВыполненияРабот КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.ТерриторияВыполненияРаботВОрганизации = БухучетЗарплаты.ТерриторияВыполненияРабот
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТерриторияВыполненияРаботВОрганизации,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТТерритории";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТТерритории", ИмяВТТерритории);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетТерриторий", ИмяВТБухучетТерриторий);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	Если ТерриторияВТаблице Тогда
		ИмяПоляТерритория = "Таблица.ТерриторияВыполненияРаботВОрганизации";
	Иначе
		Запрос.УстановитьПараметр("Территория", ТерриторияВыполненияРаботВОрганизации);
		ИмяПоляТерритория = "&Территория";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляТерритория", ИмяПоляТерритория);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
		
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляСотрудник КАК Сотрудник,
	|	&ИмяПоляПериод КАК Период
	|ПОМЕСТИТЬ ИмяВТСотрудники
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.Сотрудник КАК Сотрудник,
	|	МаксимальныеПериоды.Период КАК Период,
	|	БухучетЗарплаты.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетЗарплаты.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				И БухучетЗарплаты.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьБухучетСотрудника
	|ПОМЕСТИТЬ ИмяВТБухучетСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		Сотрудники.Сотрудник КАК Сотрудник,
	|		Сотрудники.Период КАК Период,
	|		МАКСИМУМ(БухучетЗарплатыПодразделений.Период) КАК ПериодРегистра
	|	ИЗ
	|		ИмяВТСотрудники КАК Сотрудники
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыПодразделений
	|			ПО Сотрудники.Сотрудник = БухучетЗарплатыПодразделений.Сотрудник
	|				И Сотрудники.Период >= БухучетЗарплатыПодразделений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Сотрудники.Сотрудник,
	|		Сотрудники.Период) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплаты
	|		ПО МаксимальныеПериоды.Сотрудник = БухучетЗарплаты.Сотрудник
	|			И МаксимальныеПериоды.ПериодРегистра = БухучетЗарплаты.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТСотрудники";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТСотрудники", ИмяВТСотрудники);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетСотрудников", ИмяВТБухучетСотрудников);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляСотрудник", ИмяПоляСотрудник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ИмяПоляОрганизация КАК Организация,
	|	&ИмяПоляПодразделение КАК Подразделение,
	|	&ИмяПоляТерритория КАК ТерриторияВыполненияРаботВОрганизации,
	|	&ИмяПоляСотрудник КАК Сотрудник,
	|	&ИмяПоляПериод КАК Период,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(БухучетСотрудников.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(БухучетТерриторий.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетТерриторий.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(БухучетПодразделений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетПодразделений.СтатьяФинансирования
	|		ИНАЧЕ ЕСТЬNULL(БухучетОрганизаций.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка))
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	&Статья211 КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(БухучетСотрудников.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(БухучетТерриторий.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетТерриторий.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(БухучетПодразделений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетПодразделений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ ЕСТЬNULL(БухучетОрганизаций.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка))
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(БухучетОрганизаций.ЕстьБухучетОрганизации, ЛОЖЬ) КАК ЕстьБухучетОрганизации,
	|	ЕСТЬNULL(БухучетПодразделений.ЕстьБухучетПодразделения, ЛОЖЬ) КАК ЕстьБухучетПодразделения,
	|	ЕСТЬNULL(БухучетТерриторий.ЕстьБухучетТерритории, ЛОЖЬ) КАК ЕстьБухучетТерритории,
	|	ЕСТЬNULL(БухучетСотрудников.ЕстьБухучетСотрудника, ЛОЖЬ) КАК ЕстьБухучетСотрудника
	|ПОМЕСТИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|ИЗ
	|	ИмяВременнойТаблицы КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяВТБухучетСотрудников КАК БухучетСотрудников
	|		ПО (&ИмяПоляСотрудник = БухучетСотрудников.Сотрудник)
	|			И (&ИмяПоляПериод = БухучетСотрудников.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяВТБухучетПодразделений КАК БухучетПодразделений
	|		ПО (&ИмяПоляПериод = БухучетПодразделений.Период)
	|			И Таблица.Подразделение = БухучетПодразделений.Подразделение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяВТБухучетТерриторий КАК БухучетТерриторий
	|		ПО (&ИмяПоляПериод = БухучетТерриторий.Период)
	|			И Таблица.ТерриторияВыполненияРаботВОрганизации = БухучетТерриторий.ТерриторияВыполненияРаботВОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяВТБухучетОрганизаций КАК БухучетОрганизаций
	|		ПО (&ИмяПоляПериод = БухучетОрганизаций.Период)
	|			И Таблица.Организация = БухучетОрганизаций.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТБухучетСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТБухучетПодразделений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТБухучетТерриторий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ИмяВТБухучетОрганизаций";
	
	Если Не ОрганизацияВТаблице Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Таблица.Организация = БухучетОрганизаций.Организация", "");
	КонецЕсли; 
	
	Если Не ПодразделениеВТаблице Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Таблица.Подразделение = БухучетПодразделений.Подразделение", "");	
	КонецЕсли;
	
	Если Не ТерриторияВТаблице Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Таблица.ТерриторияВыполненияРаботВОрганизации = БухучетТерриторий.ТерриторияВыполненияРаботВОрганизации", "");	
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТСотрудники", ИмяВТСотрудники); 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетСотрудников", ИмяВТБухучетСотрудников);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетПодразделений", ИмяВТБухучетПодразделений);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетТерриторий", ИмяВТБухучетТерриторий);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТБухучетОрганизаций", ИмяВТБухучетОрганизаций);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляОрганизация", ИмяПоляОрганизация);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПодразделение", ИмяПоляПодразделение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляТерритория", ИмяПоляТерритория);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляСотрудник", ИмяПоляСотрудник);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяПоляПериод", ИмяПоляПериод);

	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеНачислений
// получает настройки бухучета из ПВР Начисления, у которых задана стратегия отражения в учете КакЗаданоВидуРасчета.
// 
// Параметры:
//		МенеджерВременныхТаблиц - в менеджер помещается таблица ВТСведенияОБухучетеНачислений.
//
Процедура СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц) Экспорт

	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ Начисления.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ Начисления.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	Начисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете
	|ПОМЕСТИТЬ ВТСведенияОБухучетеНачислений
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление";
	
	Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти

#Область РаспределениеПоИсточникамФинансирования

// Выполняет распределение зависимых результатов (начислений, удержаний, НДФЛ)
//	после корректировки распределения в форме документа.
// Параметры:
//		Форма - форма документа
//		Параметры - структура с параметрами.
//			* ОписаниеТаблицы -  структура с описанием таблицы документа, см.
//			                    РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета.
//			* ИдентификаторСтроки 
//			* РаспределениеРезультатов - фиксированный массив,  с результатами распределения, см.
//			                             ЗарплатаКадрыРасширенныйКлиентСервер.ИменаКолонокТаблицыРаспределенияРезультатовРасчета.
//			* Сотрудник
//			* ВидРасчета
//			* ОписаниеДокумента - структура см. РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента.
//			* ОписаниеТаблицФормы - структура с описаниями всех таблиц документа.
//
Процедура РаспределитьЗависимыеРезультатыВФорме(Форма, Параметры) Экспорт

	СотрудникиФизическиеЛица = Параметры.Сотрудник;
	ВидРасчета 				 = Параметры.ВидРасчета;
	ОписаниеДокумента 		 = Параметры.ОписаниеДокумента;
	ОписаниеТаблицы 		 = Параметры.ОписаниеТаблицы;
	ОкончательныйРасчетНДФЛ	 = Параметры.ОкончательныйРасчетНДФЛ;
	
	Объект          = Форма.Объект;
	Организация     = Объект.Организация;
	МесяцНачисления = Объект[ОписаниеДокумента.МесяцНачисленияИмя];
	ДокументСсылка  = Объект.Ссылка;
	ОписаниеТаблицФормы = ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата;
	
	ОкончательныйРасчет = Ложь;
	Если ЗначениеЗаполнено(ОписаниеДокумента.ПорядокВыплатыИмя) Тогда
		ПорядокВыплаты = Объект[ОписаниеДокумента.ПорядокВыплатыИмя];
		ОкончательныйРасчет = Не (ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Или ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс);
	ИначеЕсли ЗначениеЗаполнено(ОписаниеДокумента.РежимНачисления) Тогда
		ОкончательныйРасчет = (ОписаниеДокумента.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.ОкончательныйРасчет);
	КонецЕсли;
	
	НачислениеИзШапкиДокумента = Неопределено;
	Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
		НачислениеИзШапкиДокумента = Объект[ОписаниеДокумента.ИменаПолейНачисления];
	КонецЕсли;
	
	// В качестве параметров могут быть получены физические лица, а не сотрудники.
	ВедущиеОбъекты = СотрудникиФизическиеЛица(СотрудникиФизическиеЛица, Организация, МесяцНачисления);
	Если ВедущиеОбъекты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Сотрудники = ВедущиеОбъекты.Сотрудники;
	Физлица = ВедущиеОбъекты.ФизическиеЛица;
	ВсеСотрудники = ВсеСотрудникиОрганизацииФизическихЛиц(Организация, Физлица, МесяцНачисления);
	СоответствиеСотрудникФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВсеСотрудники, "ФизическоеЛицо");
	
	РаспределятьНДФЛ = Ложь;
	
	ДанныеФормы = Новый Структура;
	БазовыеВидыРасчета = БазовыеВидыРасчетаДляРаспределенияЗависимыхРезультатовФормы(ВидРасчета);
	КоэффициентыРаспределенияСреднегоЗаработкаФСС = НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС();
	
	// Возможные имена таблиц с зависимыми расчетами:
	// Начисления,ОплатаТруда,НачисленияПерерасчет,Пособия,ПогашениеЗаймов,Удержания,НДФЛ.
	ЗависимыеТаблицы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОписаниеТаблицы.РаспределениеРезультатовЗависимыеТаблицы, ",");
	
	Если ЗависимыеТаблицы.Найти("Начисления") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["Начисления"]);
		ИмяРеквизитаВидРасчета = ОписаниеТаблицФормы.Начисления.ИмяРеквизитаВидРасчета;
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["Начисления"], "Сотрудник", Сотрудники, ТаблицаКРаспределению, 1,БазовыеВидыРасчета, ИмяРеквизитаВидРасчета);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("Начисления", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("НачисленияСтрокиКРаспределению", СтрокиКРаспределению);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("ОплатаТруда") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["ОплатаТруда"]);
		ИмяРеквизитаВидРасчета = ОписаниеТаблицФормы.ОплатаТруда.ИмяРеквизитаВидРасчета;
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["ОплатаТруда"], "Сотрудник", Сотрудники, ТаблицаКРаспределению, 1,БазовыеВидыРасчета, ИмяРеквизитаВидРасчета);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("ОплатаТруда", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("ОплатаТрудаСтрокиКРаспределению", СтрокиКРаспределению);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("НачисленияПерерасчет") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["НачисленияПерерасчет"]);
		ИмяРеквизитаВидРасчета = ОписаниеТаблицФормы.НачисленияПерерасчет.ИмяРеквизитаВидРасчета;
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["НачисленияПерерасчет"], "Сотрудник", Сотрудники, ТаблицаКРаспределению, 1000000,БазовыеВидыРасчета, ИмяРеквизитаВидРасчета);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("НачисленияПерерасчет", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("НачисленияПерерасчетСтрокиКРаспределению", СтрокиКРаспределению);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("Пособия") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["Пособия"]);
		ИмяРеквизитаВидРасчета = ОписаниеТаблицФормы.Пособия.ИмяРеквизитаВидРасчета;
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["Пособия"], "Сотрудник", Сотрудники, ТаблицаКРаспределению, 2000000,БазовыеВидыРасчета, ИмяРеквизитаВидРасчета);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("Пособия", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("ПособияСтрокиКРаспределению", СтрокиКРаспределению);
			ДанныеПособий = ТаблицаКРаспределению.Скопировать(,"ИдентификаторСтроки,СтраховойСлучай");
			Коэффициенты = КоэффициентыРаспределенияИзСтрокПособий(ДанныеПособий);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Коэффициенты,КоэффициентыРаспределенияСреднегоЗаработкаФСС);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("Удержания") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["Удержания"]);
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["Удержания"], "ФизическоеЛицо", Физлица, ТаблицаКРаспределению, 3000000);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("Удержания", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("УдержанияСтрокиКРаспределению", СтрокиКРаспределению);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("ПогашениеЗаймов") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["ПогашениеЗаймов"]);
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["ПогашениеЗаймов"], "ФизическоеЛицо", Физлица, ТаблицаКРаспределению, 4000000);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("ПогашениеЗаймов", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("ПогашениеЗаймовСтрокиКРаспределению", СтрокиКРаспределению);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("НДФЛ") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["НДФЛ"]);
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["НДФЛ"], "ФизическоеЛицо", Физлица, ТаблицаКРаспределению, 5000000);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("НДФЛ", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("НДФЛСтрокиКРаспределению", СтрокиКРаспределению);
			РаспределятьНДФЛ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗависимыеТаблицы.Найти("Льготы") <> Неопределено Тогда
		
		ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект["Льготы"]);
		ИмяРеквизитаВидРасчета = ОписаниеТаблицФормы.Льготы.ИмяРеквизитаВидРасчета;
		СтрокиКРаспределению = СтрокиНачисленийУдержанийКРаспределению(Объект["Льготы"], "Сотрудник", Сотрудники, ТаблицаКРаспределению, 6000000, БазовыеВидыРасчета, ИмяРеквизитаВидРасчета);
		
		Если ТаблицаКРаспределению.Количество() > 0 Тогда
			ДанныеФормы.Вставить("Льготы", ТаблицаКРаспределению);
			ДанныеФормы.Вставить("ЛьготыСтрокиКРаспределению", СтрокиКРаспределению);
		КонецЕсли;
		
	КонецЕсли;
	
	// Для распределения зависимых начислений получим бухучет начислений из формы.
	БухучетНачисленийИзФормы = БухучетНачисленийИзФормыПоСотрудникам(Форма, Сотрудники, СоответствиеСотрудникФизическоеЛицо, ОписаниеТаблицФормы, НачислениеИзШапкиДокумента);
	
	НачатьТранзакцию();
	
	// Для распределения зависимых начислений и удержаний запишем движения в регистры.
	НаборыЗаписей = ЗарегистрироватьДвиженияДокументаДляРаспределенияНачисленийУдержаний(Форма, ВсеСотрудники, ОписаниеДокумента, Истина, РаспределятьНДФЛ, Истина);
	
	ПараметрыДляРаспределения = ОписаниеПараметровДляРаспределенияРезультатовРасчета();
	ПараметрыДляРаспределения.Форма = Форма;
	ПараметрыДляРаспределения.ОписаниеДокумента = ОписаниеДокумента;
	ПараметрыДляРаспределения.ДанныеЗаполнения  = ДанныеФормы;
	ПараметрыДляРаспределения.Организация = Организация;
	ПараметрыДляРаспределения.ПериодРегистрации = МесяцНачисления;
	ПараметрыДляРаспределения.ДокументСсылка = ДокументСсылка;
	ПараметрыДляРаспределения.БухучетНачисленийИзФормы = БухучетНачисленийИзФормы;
	ПараметрыДляРаспределения.ОкончательныйРасчет = ОкончательныйРасчет;
	ПараметрыДляРаспределения.СведенияОДоходахНДФЛ = НаборыЗаписей.СведенияОДоходахНДФЛ.Выгрузить();
	ПараметрыДляРаспределения.КоэффициентыРаспределенияСреднегоЗаработкаФСС = КоэффициентыРаспределенияСреднегоЗаработкаФСС;
	ПараметрыДляРаспределения.ОкончательныйРасчетНДФЛ = ОкончательныйРасчетНДФЛ;
	
	Для Каждого ОписаниеТаблицы Из ОписаниеТаблицФормы Цикл 
		Если ЗначениеЗаполнено(ОписаниеТаблицы.Значение.ПутьКДаннымАдресРаспределенияПоТерриториямУсловиямТруда) Тогда
			АдресРаспределения = Форма[ОписаниеТаблицы.Значение.ПутьКДаннымАдресРаспределенияПоТерриториямУсловиямТруда];
			Если ЗначениеЗаполнено(АдресРаспределения) Тогда 
				ПараметрыДляРаспределения.ДанныеРаспределенияПоТерриториямУсловиямТруда = ПолучитьИзВременногоХранилища(АдресРаспределения);
			    Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаРаспределениеРезультатовНачислений = РаспределениеРезультатовНачисленийПоИсточникамФинансирования(ПараметрыДляРаспределения);
	
	// Перенесем результаты распределения начислений в строки таблиц структуры ДанныеЗаполнения.
	ИменаКолонок = "Территория,СтатьяФинансирования,СтатьяРасходов,Результат,СпособОтраженияЗарплатыВБухучете,ОблагаетсяЕНВД";
	Если ДанныеФормы.Свойство("Начисления") Тогда
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.НачисленияСтрокиКРаспределению, ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, "Начисления", ОписаниеДокумента, НачислениеИзШапкиДокумента);
	КонецЕсли;
	Если ДанныеФормы.Свойство("ОплатаТруда") Тогда
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.ОплатаТрудаСтрокиКРаспределению, ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, "ОплатаТруда", ОписаниеДокумента, НачислениеИзШапкиДокумента);
	КонецЕсли;
	Если ДанныеФормы.Свойство("НачисленияПерерасчет") Тогда
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.НачисленияПерерасчетСтрокиКРаспределению, ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, "НачисленияПерерасчет", ОписаниеДокумента, НачислениеИзШапкиДокумента);
	КонецЕсли;
	Если ДанныеФормы.Свойство("Пособия") Тогда
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.ПособияСтрокиКРаспределению, ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, "Пособия", ОписаниеДокумента, НачислениеИзШапкиДокумента);
	КонецЕсли;
	Если ДанныеФормы.Свойство("Льготы") Тогда
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.ЛьготыСтрокиКРаспределению, ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, "Льготы", ОписаниеДокумента, НачислениеИзШапкиДокумента);
	КонецЕсли;
	
	// Для распределения удержаний получим бухучет начислений из формы.
	БухучетНачисленийИзФормы = БухучетНачисленийИзФормыПоСотрудникам(Форма, ВсеСотрудники, СоответствиеСотрудникФизическоеЛицо, ОписаниеТаблицФормы, НачислениеИзШапкиДокумента);
	БухучетНачисленийИзФормы.Колонки.НачислениеУдержание.Имя = "Начисление";
	БухучетНачисленийИзФормы.Колонки.ТерриторияВыполненияРаботВОрганизации.Имя = "Территория";
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(БухучетНачисленийИзФормы, ТаблицаРаспределениеРезультатовНачислений);
	ПараметрыДляРаспределения.БухучетНачисленияУдержанияПоСотрудникам = ТаблицаРаспределениеРезультатовНачислений;
	
	ИменаКолонок = "ВидУдержания,Сотрудник,Подразделение,СтатьяФинансирования,СтатьяРасходов,Результат";
	Если ДанныеФормы.Свойство("Удержания") Тогда
		ТаблицаРаспределениеРезультатовУдержаний = РаспределениеРезультатовУдержанийПоИсточникамФинансирования(ПараметрыДляРаспределения);
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.УдержанияСтрокиКРаспределению, ТаблицаРаспределениеРезультатовУдержаний, ИменаКолонок, "Удержания", ОписаниеДокумента);
	КонецЕсли;
	
	Если ДанныеФормы.Свойство("НДФЛ") Тогда
		ТаблицаРаспределениеНДФЛ = РаспределениеРезультатовНДФЛПоИсточникамФинансирования(ПараметрыДляРаспределения);
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.НДФЛСтрокиКРаспределению, ТаблицаРаспределениеНДФЛ, ИменаКолонок, "НДФЛ", ОписаниеДокумента);
	КонецЕсли;
	
	Если ДанныеФормы.Свойство("ПогашениеЗаймов") Тогда
		ТаблицаРаспределениеПогашениеЗаймов = РаспределениеРезультатовПогашениеЗаймовПоИсточникамФинансирования(ПараметрыДляРаспределения);
		ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.ПогашениеЗаймовСтрокиКРаспределению, ТаблицаРаспределениеПогашениеЗаймов, ИменаКолонок, "ПогашениеЗаймов", ОписаниеДокумента);
	КонецЕсли;
	
	ОтменитьТранзакцию();
	
КонецПроцедуры

// Выполняет распределение результатов расчета в форме документа.
// Вызывается при расчете начислений и удержаний, и при изменении настройки бухучета в документе.
// Параметры:
//		СотрудникиФизическиеЛица
//		Форма - форма документа, в которой выполняется расчет.
//		ОписаниеДокумента - описание документа , см. РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента.
//		ОписаниеТаблицы - описание см. РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета, в
//		                  ОписаниеТаблицы.ИмяТаблицы содержится строка с именами таблиц для обработки.
//		Движения - коллекция движений документа.
//
Процедура ПолучитьРаспределениеДанныеФормыПоСотрудникам(СотрудникиФизическиеЛица, Форма, ОписаниеДокумента, ДополнительныеПараметры) Экспорт
	
	Объект = Форма.Объект;
	ДокументСсылка  = Объект.Ссылка;
	МесяцНачисления = Объект[ОписаниеДокумента.МесяцНачисленияИмя];
	Организация = Объект.Организация;
	
	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	Если Не ИспользоватьСтатьиФинансирования Тогда
		
		// Если учет по статьям финансирования не ведется, выполняем распределение,
		// только если будут рассчитываться страховые взносы и организация уплачивает ЕНВД
		Если ДополнительныеПараметры.БудутРассчитыватьсяВзносы Тогда

			Если Не ЗначениеЗаполнено(Организация) Тогда
				Возврат;
			КонецЕсли;
				Возврат;
		Иначе
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	// уточним какие данные распределять
	РаспределятьНачисления      = ДополнительныеПараметры.РаспределятьНачисления;
	РаспределятьНДФЛ 			= ИспользоватьСтатьиФинансирования И ДополнительныеПараметры.РаспределятьУдержания И ДополнительныеПараметры.НДФЛИзменился;
	РаспределятьУдержания       = ИспользоватьСтатьиФинансирования И ДополнительныеПараметры.РаспределятьУдержания И ДополнительныеПараметры.УдержанияИзменились;
	РаспределятьПогашениеЗаймов = ИспользоватьСтатьиФинансирования И ДополнительныеПараметры.РаспределятьУдержания;
	ОкончательныйРасчетНДФЛ 	= ДополнительныеПараметры.ОкончательныйРасчетНДФЛ;

	ДанныеРаспределенияПоТерриториямУсловиямТруда = Неопределено;
	ДополнительныеПараметры.Свойство("ДанныеРаспределенияПоТерриториямУсловиямТруда", ДанныеРаспределенияПоТерриториямУсловиямТруда);
	
	ВедущиеОбъекты = СотрудникиФизическиеЛица(СотрудникиФизическиеЛица, Организация, МесяцНачисления);
	Если ВедущиеОбъекты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Сотрудники = ВедущиеОбъекты.Сотрудники;
	Физлица    = ВедущиеОбъекты.ФизическиеЛица;
	
	ОкончательныйРасчет = Ложь;
	Если ЗначениеЗаполнено(ОписаниеДокумента.ПорядокВыплатыИмя) Тогда
		ПорядокВыплаты = Объект[ОписаниеДокумента.ПорядокВыплатыИмя];
		ОкончательныйРасчет = Не (ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Или ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс);
	ИначеЕсли ЗначениеЗаполнено(ОписаниеДокумента.РежимНачисления) Тогда
		ОкончательныйРасчет = (ОписаниеДокумента.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.ОкончательныйРасчет);
	КонецЕсли;
	
	НачислениеИзШапкиДокумента = Неопределено;
	Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
		НачислениеИзШапкиДокумента = Объект[ОписаниеДокумента.ИменаПолейНачисления];
	КонецЕсли;
	
	ТаблицаБухучетПервичногоДокумента = НоваяТаблицаБухучетЗарплатыПервичныхДокументов();
	КоэффициентыРаспределенияСреднегоЗаработка = НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка();
	КоэффициентыРаспределенияСреднегоЗаработкаФСС = НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС();
	
	ДанныеФормы = Новый Структура;
	
	ОписанияНачислений = Новый Структура();
	ОписанияНачислений.Вставить("НачисленияИмя",1);
	ОписанияНачислений.Вставить("НачисленияПерерасчетИмя",1000000);
	ОписанияНачислений.Вставить("ПособияИмя",2000000);
	ОписанияНачислений.Вставить("ПособияПерерасчетИмя",3000000);
	ОписанияНачислений.Вставить("НачисленияПоДоговорамИмя",4000000);
	ОписанияНачислений.Вставить("ЛьготыИмя",8000000);
	
	ОписанияУдержаний = Новый Структура();
	ОписанияУдержаний.Вставить("Удержания",5000000);
	ОписанияУдержаний.Вставить("ПогашениеЗаймов",6000000);
	ОписанияУдержаний.Вставить("НДФЛ",7000000);
	
	Если РаспределятьНачисления Тогда
		
		Если ОписаниеДокумента.ЕстьОплатаПоСреднему Тогда
			ПараметрыРасчетаСреднего = УчетСреднегоЗаработкаКлиентСервер.ДополнительныеПараметрыРасчетаСреднегоЗаработка();
			ПараметрыРасчетаСреднего.Индексации = Объект.ДанныеОбИндексации;
			ПараметрыРасчетаСреднего.ДатаНачалаСобытия = Объект[ОписаниеДокумента.ДатаНачалаСобытияИмя];
			ПараметрыРасчетаСреднего.НачалоПериода = Объект.ПериодРасчетаСреднегоЗаработкаНачало;
			ПараметрыРасчетаСреднего.ОкончаниеПериода = Объект.ПериодРасчетаСреднегоЗаработкаОкончание;
			ПараметрыРасчетаСреднего.ПоЧасам = ОписаниеДокумента.ЭтоСреднеЧасовойЗаработок;
			ПараметрыРасчетаСреднего.ПоСтатьямФинансирования = Истина;
			Если ОписаниеДокумента.СпособыРасчетаСреднегоЗаработка <> Неопределено Тогда
				Для Каждого КлючИЗначение Из ОписаниеДокумента.СпособыРасчетаСреднегоЗаработка Цикл
					СпособРасчета = КлючИЗначение.Значение;
					ПараметрыРасчетаСреднего.СпособРасчетаОтпуска = СпособРасчета;
					
					ДанныеДляРасчета = УчетСреднегоЗаработкаКлиентСервер.ДанныеДляРасчетаСреднегоЗаработка(
						Объект.СреднийЗаработокОбщий, 
						Объект.ОтработанноеВремяДляСреднегоОбщий, 
						ПараметрыРасчетаСреднего);
																														
					Для Каждого СтрокаНачислений Из ДанныеДляРасчета["Заработок"] Цикл
						НоваяСтрока	 = КоэффициентыРаспределенияСреднегоЗаработка.Добавить();
						НоваяСтрока.СпособРасчета 		 = СпособРасчета;
						НоваяСтрока.СтатьяФинансирования = СтрокаНачислений.СтатьяФинансирования;
						НоваяСтрока.Результат            = СтрокаНачислений["Учтено"];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			ПараметрыРасчетаСреднего.СпособРасчетаОтпуска = Неопределено;
			ДанныеДляРасчета = УчетСреднегоЗаработкаКлиентСервер.ДанныеДляРасчетаСреднегоЗаработка(
				Объект.СреднийЗаработокОбщий, 
				Объект.ОтработанноеВремяДляСреднегоОбщий, 
				ПараметрыРасчетаСреднего);
			
			Для Каждого СтрокаНачислений Из ДанныеДляРасчета["Заработок"] Цикл
				НоваяСтрока	 = КоэффициентыРаспределенияСреднегоЗаработка.Добавить();
				НоваяСтрока.СтатьяФинансирования = СтрокаНачислений.СтатьяФинансирования;
				НоваяСтрока.Результат            = СтрокаНачислений["Учтено"];
			КонецЦикла;
			
			КоэффициентыРаспределенияСреднегоЗаработка.Свернуть("СпособРасчета,СтатьяФинансирования", "Результат");
		КонецЕсли;
		
		Если ОписаниеДокумента.ЕстьОплатаПоСреднемуФСС Тогда
			
			Для каждого СтрокаФСС Из Объект.СреднийЗаработокФСС Цикл
			
				НоваяСтрока	 = КоэффициентыРаспределенияСреднегоЗаработкаФСС.Добавить();
				НоваяСтрока.СтатьяФинансирования = СтрокаФСС.СтатьяФинансирования;
				НоваяСтрока.Результат            = СтрокаФСС["Сумма"];	
			
			КонецЦикла;
			
			КоэффициентыРаспределенияСреднегоЗаработкаФСС.Свернуть("ИдентификаторСтроки, СтатьяФинансирования", "Результат");
			
		КонецЕсли;
		
		Если ОписаниеДокумента.БухучетПервичногоДокументаИмяМетода <> Неопределено Тогда
			БухучетПервичногоДокумента = Неопределено;
			Выполнить("БухучетПервичногоДокумента = " + ОписаниеДокумента.БухучетПервичногоДокументаИмяМетода + "(Объект)");
			ТаблицаБухучетПервичногоДокумента = БухучетПервичногоДокумента.ТаблицаБухучетЗарплаты;
		КонецЕсли;
		
		Для каждого ОписаниеКлючИЗначение Из ОписанияНачислений Цикл
			
			ИмяТаблицы = ОписаниеДокумента[ОписаниеКлючИЗначение.Ключ];
			Если ИмяТаблицы <> Неопределено Тогда
				
				ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект[ИмяТаблицы]);
				СтрокиКРаспределению  = СтрокиНачисленийУдержанийКРаспределению(Объект[ИмяТаблицы], "Сотрудник", Сотрудники, ТаблицаКРаспределению, ОписаниеКлючИЗначение.Значение);
				
				Если ТаблицаКРаспределению.Количество() > 0 Тогда
					
					ДанныеФормы.Вставить(ИмяТаблицы, ТаблицаКРаспределению);
					ДанныеФормы.Вставить(ИмяТаблицы + "СтрокиКРаспределению", СтрокиКРаспределению);
					
					Если ОписаниеКлючИЗначение.Ключ = "ПособияИмя" Или ОписаниеКлючИЗначение.Ключ = "ПособияПерерасчетИмя"  Тогда
						ДанныеПособий = ТаблицаКРаспределению.Скопировать(,"ИдентификаторСтроки,СтраховойСлучай");
						Коэффициенты = КоэффициентыРаспределенияИзСтрокПособий(ДанныеПособий);
						ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Коэффициенты,КоэффициентыРаспределенияСреднегоЗаработкаФСС);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;                                                     
		
	КонецЕсли;
	
	Если РаспределятьУдержания Тогда
		
		ИмяТаблицы = ОписаниеДокумента["УдержанияИмя"];
		Если ИмяТаблицы <> Неопределено Тогда
			
			ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект[ИмяТаблицы]);
			СтрокиКРаспределению  = СтрокиНачисленийУдержанийКРаспределению(Объект[ИмяТаблицы], "ФизическоеЛицо", Физлица, ТаблицаКРаспределению, ОписанияУдержаний.Удержания);
			
			Если ТаблицаКРаспределению.Количество() > 0 Тогда
				ДанныеФормы.Вставить(ИмяТаблицы, ТаблицаКРаспределению);
				ДанныеФормы.Вставить(ИмяТаблицы + "СтрокиКРаспределению", СтрокиКРаспределению);
			Иначе
				РаспределятьУдержания = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РаспределятьНДФЛ Тогда
		
		ИмяТаблицы = ОписаниеДокумента["НДФЛИмя"];
		Если ИмяТаблицы <> Неопределено Тогда
			
			ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект[ИмяТаблицы]);
			СтрокиКРаспределению  = СтрокиНачисленийУдержанийКРаспределению(Объект[ИмяТаблицы], "ФизическоеЛицо", Физлица, ТаблицаКРаспределению, ОписанияУдержаний.НДФЛ);
			
			Если ТаблицаКРаспределению.Количество() > 0 Тогда
				ДанныеФормы.Вставить(ИмяТаблицы, ТаблицаКРаспределению);
				ДанныеФормы.Вставить(ИмяТаблицы + "СтрокиКРаспределению", СтрокиКРаспределению);
			Иначе
				РаспределятьНДФЛ = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если РаспределятьПогашениеЗаймов Тогда
		
		ИмяТаблицы = ОписаниеДокумента["ПогашениеЗаймовИмя"];
		Если ИмяТаблицы <> Неопределено Тогда
			
			ТаблицаКРаспределению = СоздатьТаблицуЗначенийПоОбразуКоллекции(Объект[ИмяТаблицы]);
			СтрокиКРаспределению  = СтрокиНачисленийУдержанийКРаспределению(Объект[ИмяТаблицы], "ФизическоеЛицо", Физлица, ТаблицаКРаспределению, ОписанияУдержаний.ПогашениеЗаймов);
			
			Если ТаблицаКРаспределению.Количество() > 0 Тогда
				ДанныеФормы.Вставить(ИмяТаблицы, ТаблицаКРаспределению);
				ДанныеФормы.Вставить(ИмяТаблицы + "СтрокиКРаспределению", СтрокиКРаспределению);
			Иначе
				РаспределятьПогашениеЗаймов = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыДляРаспределения = ОписаниеПараметровДляРаспределенияРезультатовРасчета();
	ПараметрыДляРаспределения.Форма = Форма;
	ПараметрыДляРаспределения.ОписаниеДокумента = ОписаниеДокумента;
	ПараметрыДляРаспределения.ДанныеЗаполнения  = ДанныеФормы;
	ПараметрыДляРаспределения.Организация = Организация;
	ПараметрыДляРаспределения.ПериодРегистрации = МесяцНачисления;
	ПараметрыДляРаспределения.НачислениеИзШапкиДокумента = НачислениеИзШапкиДокумента;
	ПараметрыДляРаспределения.ДокументСсылка = ДокументСсылка;
	ПараметрыДляРаспределения.БухучетПервичногоДокумента = ТаблицаБухучетПервичногоДокумента;
	ПараметрыДляРаспределения.КоэффициентыРаспределенияСреднегоЗаработка = КоэффициентыРаспределенияСреднегоЗаработка;
	ПараметрыДляРаспределения.КоэффициентыРаспределенияСреднегоЗаработкаФСС = КоэффициентыРаспределенияСреднегоЗаработкаФСС;
	ПараметрыДляРаспределения.ОкончательныйРасчет = ОкончательныйРасчет;
	ПараметрыДляРаспределения.ДанныеРаспределенияПоТерриториямУсловиямТруда = ДанныеРаспределенияПоТерриториямУсловиямТруда;
	ПараметрыДляРаспределения.ОкончательныйРасчетНДФЛ = ОкончательныйРасчетНДФЛ;
	
	ВсеСотрудники = Неопределено;
	
	Если РаспределятьНДФЛ И Не ДополнительныеПараметры.СведенияОДоходахНДФЛЗаписаны Тогда
		// необходимо собрать доходы для учета НДФЛ
		ВсеСотрудники = ВсеСотрудникиОрганизацииФизическихЛиц(Организация, Физлица, МесяцНачисления);
		Движения = ЗарегистрироватьДвиженияДокументаДляРаспределенияНачисленийУдержаний(Форма, ВсеСотрудники, ОписаниеДокумента, Ложь, Истина, Ложь);
		ПараметрыДляРаспределения.СведенияОДоходахНДФЛ = Движения.СведенияОДоходахНДФЛ.Выгрузить();
		Движения = Неопределено;
	КонецЕсли;
		
	Если РаспределятьНачисления Тогда
		
		ТаблицаРаспределениеРезультатовНачислений = РаспределениеРезультатовНачисленийПоИсточникамФинансирования(ПараметрыДляРаспределения);
		ДополнительныеПараметры.НачисленияСРаспределениемПоЕНВД = ТаблицаРаспределениеРезультатовНачислений.Скопировать(,ОтражениеЗарплатыВБухучете.СтрокаПолейТаблицыНачисленияСРаспределениемПоЕНВД());
		
		Если ИспользоватьСтатьиФинансирования Тогда
			// Перенесем результаты распределения начислений в строки таблиц структуры ДанныеЗаполнения.
			ИменаКолонок = "Территория,СтатьяФинансирования,СтатьяРасходов,Результат,СпособОтраженияЗарплатыВБухучете,ОблагаетсяЕНВД";
			Для каждого ОписаниеКлючИЗначение Из ОписанияНачислений Цикл
				ИмяТаблицы = ОписаниеДокумента[ОписаниеКлючИЗначение.Ключ];
				Если ИмяТаблицы <> Неопределено И ДанныеФормы.Свойство(ИмяТаблицы) Тогда
					ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы[ИмяТаблицы+"СтрокиКРаспределению"], ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, ИмяТаблицы, ОписаниеДокумента, НачислениеИзШапкиДокумента);
				КонецЕсли;  
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;

	Если РаспределятьУдержания Или РаспределятьПогашениеЗаймов Или РаспределятьНДФЛ Тогда
		
		// получим данные о распределении начислений из формы документа по всем сотрудникам физических лиц.
		Если ВсеСотрудники = Неопределено Тогда
			ВсеСотрудники = ВсеСотрудникиОрганизацииФизическихЛиц(Организация, Физлица, МесяцНачисления);
		КонецЕсли;
		СоответствиеСотрудникФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ВсеСотрудники, "ФизическоеЛицо");
		ПараметрыДляРаспределения.БухучетНачисленийИзФормы = БухучетНачисленийИзФормыПоСотрудникам(Форма, ВсеСотрудники, СоответствиеСотрудникФизическоеЛицо, ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата, НачислениеИзШапкиДокумента, ДополнительныеПараметры.РаспределениеИзХранилища);
		ПараметрыДляРаспределения.БухучетНачисленийИзФормы.Колонки.НачислениеУдержание.Имя = "Начисление";
		ПараметрыДляРаспределения.БухучетНачисленийИзФормы.Колонки.ТерриторияВыполненияРаботВОрганизации.Имя = "Территория";
		// Перепишем результаты распределения начислений в таблицу ТаблицаРаспределениеРезультатовНачислений.
		ТаблицаРаспределениеРезультатовНачислений = НоваяТаблицаРаспределениеРезультатовНачислений(Истина);
		ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(ПараметрыДляРаспределения.БухучетНачисленийИзФормы, ТаблицаРаспределениеРезультатовНачислений);
		
		ПараметрыДляРаспределения.БухучетНачисленияУдержанияПоСотрудникам = ТаблицаРаспределениеРезультатовНачислений;
		
		ИменаКолонок = "ВидУдержания,Сотрудник,Подразделение,СтатьяФинансирования,СтатьяРасходов,Результат";
		
		Если РаспределятьУдержания И ДанныеФормы.Свойство("Удержания") Тогда
			ТаблицаРаспределениеРезультатовУдержаний = РаспределениеРезультатовУдержанийПоИсточникамФинансирования(ПараметрыДляРаспределения);
			ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.УдержанияСтрокиКРаспределению, ТаблицаРаспределениеРезультатовУдержаний, ИменаКолонок, ОписаниеДокумента.УдержанияИмя, ОписаниеДокумента);
		КонецЕсли;
		Если РаспределятьНДФЛ И ДанныеФормы.Свойство("НДФЛ") Тогда
			ТаблицаРаспределениеНДФЛ = РаспределениеРезультатовНДФЛПоИсточникамФинансирования(ПараметрыДляРаспределения);
			ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.НДФЛСтрокиКРаспределению, ТаблицаРаспределениеНДФЛ, ИменаКолонок, ОписаниеДокумента.НДФЛИмя, ОписаниеДокумента);
		КонецЕсли;
		Если РаспределятьПогашениеЗаймов И ДанныеФормы.Свойство("ПогашениеЗаймов") Тогда
			ТаблицаРаспределениеПогашениеЗаймов      = РаспределениеРезультатовПогашениеЗаймовПоИсточникамФинансирования(ПараметрыДляРаспределения);
			ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(ДанныеФормы.ПогашениеЗаймовСтрокиКРаспределению, ТаблицаРаспределениеПогашениеЗаймов, ИменаКолонок, ОписаниеДокумента.ПогашениеЗаймовИмя, ОписаниеДокумента);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура распределяет результаты расчета документа по статьям финансирования и помещает результаты распределения в
// поле РезультатРаспределения.
// Вызывается при заполнении (перезаполнении) документов НачислениеЗарплаты и НачислениеЗаПервуюПоловинуМесяца.
// Параметры:
//   ОписаниеДокумента - структура с описанием документа, см
//                       РасчетЗарплатыРасширенный.ОписаниеДанныхДляЗаполненияТаблицДокумента.
//   ДанныеЗаполнения - структура, описание см РасчетЗарплатыРасширенный.ОписаниеДанныхДляЗаполненияТаблицДокумента
//   					содержит коллекции с данными для заполнения табличных частей документа.
//   Организация - СправочникСсылка.Организации
//   МесяцНачисления - дата
//   ДокументСсылка - ссылка на документ, который заполняется.
//   ПорядокВыплаты - Перечисления.ХарактерВыплатыЗарплаты, определяет регистрируется окончательный расчет зарплаты или
//                    межрасчетная выплата используется для распределения удержаний и НДФЛ.
//
Процедура ПолучитьРаспределениеДанныхДляЗаполненияТаблицДокумента(ОписаниеДокумента, ДанныеЗаполнения, Организация, МесяцНачисления, ДокументСсылка, ДополнительныеПараметры) Экспорт

	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	ВыполнитьРаспределение = ИспользоватьСтатьиФинансирования;	
	Если Не ВыполнитьРаспределение Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыДляРаспределения = ОписаниеПараметровДляРаспределенияРезультатовРасчета();
	ПараметрыДляРаспределения.ОписаниеДокумента = ОписаниеДокумента;
	ПараметрыДляРаспределения.ДанныеЗаполнения  = ДанныеЗаполнения;
	ПараметрыДляРаспределения.Организация = Организация;
	ПараметрыДляРаспределения.ПериодРегистрации = МесяцНачисления;
	ПараметрыДляРаспределения.ДокументСсылка = ДокументСсылка;
	ПараметрыДляРаспределения.ОкончательныйРасчет = (ОписаниеДокумента.РежимНачисления = Перечисления.РежимНачисленияЗарплаты.ОкончательныйРасчет);
	ПараметрыДляРаспределения.ОкончательныйРасчетНДФЛ = ДополнительныеПараметры.ОкончательныйРасчетНДФЛ;
	
	РаспределятьНачисления = ДополнительныеПараметры.РаспределятьНачисления;
	РаспределятьУдержания  = ДополнительныеПараметры.РаспределятьУдержания;
	
	ОписанияНачислений = Новый Структура();
	ОписанияНачислений.Вставить("НачисленияИмя",1);
	ОписанияНачислений.Вставить("НачисленияПоДоговорамИмя",1000000);
	ОписанияНачислений.Вставить("НачисленияПерерасчетИмя",2000000);
	ОписанияНачислений.Вставить("ПособияИмя",3000000);
	ОписанияНачислений.Вставить("ЛьготыИмя",4000000);
	ОписанияНачислений.Вставить("ПособияПерерасчетИмя",8000000);
	
	ОписанияУдержаний = Новый Структура();
	ОписанияУдержаний.Вставить("УдержанияИмя",5000000);
	ОписанияУдержаний.Вставить("ПогашениеЗаймовИмя",6000000);
	ОписанияУдержаний.Вставить("НДФЛИмя",7000000);
	
	Если РаспределятьНачисления Тогда
				
		НачислениеИзШапкиДокумента = Неопределено;
		Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
			НачислениеИзШапкиДокумента = ДокументСсылка[ОписаниеДокумента.ИменаПолейНачисления];
		КонецЕсли;
		
		Для каждого ОписаниеКлючИЗначение Из ОписанияНачислений Цикл
			
			ИмяТаблицы = ОписаниеДокумента[ОписаниеКлючИЗначение.Ключ];
			Если ИмяТаблицы <> Неопределено Тогда
				ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(ДанныеЗаполнения[ИмяТаблицы], Истина, ОписаниеКлючИЗначение.Значение);
				ДобавитьКолонкиДляРаспределенияРезультатов(ДанныеЗаполнения[ИмяТаблицы]);
				
				Если (ОписаниеКлючИЗначение.Ключ = "ПособияИмя" Или ОписаниеКлючИЗначение.Ключ = "ПособияПерерасчетИмя")
					И ДанныеЗаполнения[ИмяТаблицы].Количество() > 0 Тогда
					
					ДанныеПособий = ДанныеЗаполнения[ИмяТаблицы].Скопировать(,"ИдентификаторСтроки,СтраховойСлучай");
					ПараметрыДляРаспределения.КоэффициентыРаспределенияСреднегоЗаработкаФСС = КоэффициентыРаспределенияИзСтрокПособий(ДанныеПособий);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТаблицаРаспределениеРезультатовНачислений = РаспределениеРезультатовНачисленийПоИсточникамФинансирования(ПараметрыДляРаспределения);
		
		Если ИспользоватьСтатьиФинансирования Тогда
			// Перенесем результаты распределения начислений в строки таблиц структуры ДанныеЗаполнения.
			ИменаКолонок = "Территория,СтатьяФинансирования,СтатьяРасходов,Результат,СпособОтраженияЗарплатыВБухучете,ОблагаетсяЕНВД";
			Для каждого ОписаниеКлючИЗначение Из ОписанияНачислений Цикл
				ИмяТаблицы = ОписаниеДокумента[ОписаниеКлючИЗначение.Ключ];
				Если ИмяТаблицы <> Неопределено Тогда
					ДополнитьСтрокиОсновнойТаблицыРезультатамиРаспределения(ДанныеЗаполнения[ИмяТаблицы], ТаблицаРаспределениеРезультатовНачислений, ИменаКолонок, ИмяТаблицы, ОписаниеДокумента, НачислениеИзШапкиДокумента);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДополнительныеПараметры.ТаблицаРаспределениеРезультатовНачислений = ТаблицаРаспределениеРезультатовНачислений.Скопировать();
		ДополнительныеПараметры.НачисленияСРаспределениемПоЕНВД = ТаблицаРаспределениеРезультатовНачислений.Скопировать(,ОтражениеЗарплатыВБухучете.СтрокаПолейТаблицыНачисленияСРаспределениемПоЕНВД());
		
	КонецЕсли;
	
	Если ИспользоватьСтатьиФинансирования И РаспределятьУдержания Тогда
		
		Для каждого ОписаниеКлючИЗначение Из ОписанияУдержаний Цикл
			ИмяТаблицы = ОписаниеДокумента[ОписаниеКлючИЗначение.Ключ];
			Если ИмяТаблицы <> Неопределено Тогда
				ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(ДанныеЗаполнения[ИмяТаблицы], Истина, ОписаниеКлючИЗначение.Значение);
				ДобавитьКолонкиДляРаспределенияРезультатов(ДанныеЗаполнения[ИмяТаблицы]);
			КонецЕсли;
		КонецЦикла;
		
		ПараметрыДляРаспределения.БухучетНачисленияУдержанияПоСотрудникам = ДополнительныеПараметры.ТаблицаРаспределениеРезультатовНачислений;
		ОписанияУдержаний.УдержанияИмя       = РаспределениеРезультатовУдержанийПоИсточникамФинансирования(ПараметрыДляРаспределения);
		ОписанияУдержаний.ПогашениеЗаймовИмя = РаспределениеРезультатовПогашениеЗаймовПоИсточникамФинансирования(ПараметрыДляРаспределения);
		ОписанияУдержаний.НДФЛИмя            = РаспределениеРезультатовНДФЛПоИсточникамФинансирования(ПараметрыДляРаспределения);
		
		// Перенесем результаты распределения удержаний в строки таблиц структуры ДанныеЗаполнения.
		ИменаКолонок = "ВидУдержания,Сотрудник,Подразделение,СтатьяФинансирования,СтатьяРасходов,Результат";
		Для каждого ОписаниеКлючИЗначение Из ОписанияУдержаний Цикл
			ИмяТаблицы = ОписаниеДокумента[ОписаниеКлючИЗначение.Ключ];
			Если ИмяТаблицы <> Неопределено Тогда
				ДополнитьСтрокиОсновнойТаблицыРезультатамиРаспределения(ДанныеЗаполнения[ИмяТаблицы], ОписаниеКлючИЗначение.Значение, ИменаКолонок, ИмяТаблицы, ОписаниеДокумента, НачислениеИзШапкиДокумента);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Распределяет страховые взносы по статьям финансирования для формирования движений регистра
// СтраховыеВзносыПоФизическимЛицам.
// Параметры:
//	Движения - тип Структура или КоллекцияДвижений документа.
//	Организация - тип СправочникСсылка.Организации.
//	ПериодРегистрации - тип Дата.
//	Ссылка - ссылка на документ, движения которого переданы в параметре «Движения».
//	МенеджерВременныхТаблиц - менеджер временных таблиц, содержит временную таблицу ВТФизическиеЛица и ВТРасширенныеСведенияОВзносах.
//
Процедура СоздатьВТСтраховыеВзносыПоИсточникамФинансирования(Движения, Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Прочитаем уже зарегистрированные данные о бухучете начислений.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.ФизическоеЛицо
	|ИЗ
	|	ВТФизическиеЛица КАК ФизическиеЛица";
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	// получаем уже зарегистрированные сведения о бухучете начислений всех сотрудников по физическим лицам из массива МассивФизическихЛиц,
	// без учета регистратора, указанного в параметре Ссылка
	СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц, Ссылка);
	
	Запрос.УстановитьПараметр("Регистратор" , Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	БухучетНачисленияУдержанияПоСотрудникам = Неопределено;
	БухучетНачисленияУдержанияПоКонтрагентамАкционерам = Неопределено;  
	
	Если ТипЗнч(Движения) = Тип("Структура") Тогда
		Движения.Свойство("БухучетНачисленияУдержанияПоСотрудникам", БухучетНачисленияУдержанияПоСотрудникам);
		Движения.Свойство("Бухучет ", БухучетНачисленияУдержанияПоКонтрагентамАкционерам);
	Иначе
		БухучетНачисленияУдержанияПоСотрудникам = Движения.Найти("БухучетНачисленияУдержанияПоСотрудникам");
		БухучетНачисленияУдержанияПоКонтрагентамАкционерам = Движения.Найти("БухучетНачисленияУдержанияПоКонтрагентамАкционерам");
	КонецЕсли;
	
	Если БухучетНачисленияУдержанияПоСотрудникам = Неопределено Тогда
		БухучетНачисления = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	Иначе
		БухучетНачисления = БухучетНачисленияУдержанияПоСотрудникам.Выгрузить();
	КонецЕсли;
	
	Если БухучетНачисленияУдержанияПоКонтрагентамАкционерам = Неопределено Тогда
		БухучетНачисленияКА = НоваяТаблицаБухучетНачисленияУдержанияПоКонтрагентамАкционерам();
	Иначе
		БухучетНачисленияКА = БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Выгрузить();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("БухучетНачисления", БухучетНачисления);
	Запрос.УстановитьПараметр("БухучетНачисленияКА", БухучетНачисленияКА);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.НачислениеУдержание КАК Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ГруппаНачисленияУдержанияВыплаты
	|ПОМЕСТИТЬ ВТБухучетНачисленияУдержанияПоСотрудникам
	|ИЗ
	|	&БухучетНачисления КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.НачислениеУдержание КАК Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.Период КАК ДатаНачала,
	|	БухучетНачисления.Период КАК ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ГруппаНачисленияУдержанияВыплаты
	|ПОМЕСТИТЬ ВТБухучетНачисленияУдержанияПоКонтрагентамАкционерам
	|ИЗ
	|	&БухучетНачисленияКА КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.НачислениеУдержание КАК Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
	|ИЗ
	|	ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И БухучетНачисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И БухучетНачисления.Начисление = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|	БухучетНачисления.ОблагаетсяЕНВД
	|ИЗ
	|	ВТБухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация <> НЕОПРЕДЕЛЕНО
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияУдержанияПоСотрудникам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияУдержанияПоКонтрагентамАкционерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	БухучетНачислений.Организация
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений";
	
	Если Запрос.Выполнить().Пустой() Тогда
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТБухучетНачисленийВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ФизическоеЛицо,
		|	НЕОПРЕДЕЛЕНО КАК Начисление,
		|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
		|	НЕОПРЕДЕЛЕНО КАК ДатаНачала,
		|	НЕОПРЕДЕЛЕНО КАК ДатаОкончания,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПринятияРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	НЕОПРЕДЕЛЕНО КАК СпособОтраженияЗарплатыВБухучете,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяФинансирования,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	0 КАК Сумма,
		|	НЕОПРЕДЕЛЕНО КАК ВидНачисленияОплатыТрудаДляНУ,
		|	ЛОЖЬ КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетНачислений";
		Запрос.Выполнить();
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.Организация,
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ВидОперации,
		|	БухучетНачислений.ДатаНачала,
		|	БухучетНачислений.ДатаОкончания,
		|	БухучетНачислений.ДокументОснование,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	БухучетНачислений.Сумма,
		|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
		|	БухучетНачислений.ОблагаетсяЕНВД,
		|	ВЫБОР
		|		КОГДА БухучетНачислений.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|				ИЛИ БухучетНачислений.ДатаНачала < &ПериодРегистрации
		|			ТОГДА &ПериодРегистрации
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачислений.ДатаНачала, МЕСЯЦ)
		|	КОНЕЦ КАК ПериодПринятияРасходов
		|ПОМЕСТИТЬ ВТБухучетНачислений
		|ИЗ
		|	ВТБухучетНачисленийВременная КАК БухучетНачислений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	СведенияОВзносах.ФизическоеЛицо,
	|	СведенияОВзносах.Сотрудник КАК Сотрудник,
	|	СведенияОВзносах.ОблагаетсяЕНВД,
	|	СведенияОВзносах.Начисление КАК Начисление,
	|	СведенияОВзносах.ДатаНачала КАК ДатаНачала,
	|	СведенияОВзносах.Подразделение,
	|	СведенияОВзносах.ПФРДоПредельнойВеличины КАК ПФРДоПредельнойВеличины,
	|	СведенияОВзносах.ПФРСПревышения КАК ПФРСПревышения,
	|	СведенияОВзносах.ПФРПоСуммарномуТарифу КАК ПФРПоСуммарномуТарифу,
	|	СведенияОВзносах.ПФРСтраховая КАК ПФРСтраховая,
	|	СведенияОВзносах.ПФРНакопительная КАК ПФРНакопительная,
	|	СведенияОВзносах.ПФРНаДоплатуЛетчикам КАК ПФРНаДоплатуЛетчикам,
	|	СведенияОВзносах.ПФРНаДоплатуШахтерам КАК ПФРНаДоплатуШахтерам,
	|	СведенияОВзносах.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СведенияОВзносах.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СведенияОВзносах.ТФОМС КАК ТФОМС,
	|	СведенияОВзносах.ФФОМС КАК ФФОМС,
	|	СведенияОВзносах.ФСС КАК ФСС,
	|	СведенияОВзносах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи
	|ИЗ
	|	ВТРасширенныеСведенияОВзносах КАК СведенияОВзносах
	|ГДЕ
	|	(СведенияОВзносах.ПФРПоСуммарномуТарифу <> 0
	|			ИЛИ СведенияОВзносах.ПФРДоПредельнойВеличины <> 0
	|			ИЛИ СведенияОВзносах.ПФРСПревышения <> 0
	|			ИЛИ СведенияОВзносах.ПФРСтраховая <> 0
	|			ИЛИ СведенияОВзносах.ПФРНакопительная <> 0
	|			ИЛИ СведенияОВзносах.ПФРНаДоплатуЛетчикам <> 0
	|			ИЛИ СведенияОВзносах.ПФРНаДоплатуШахтерам <> 0
	|			ИЛИ СведенияОВзносах.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0
	|			ИЛИ СведенияОВзносах.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0
	|			ИЛИ СведенияОВзносах.ТФОМС <> 0
	|			ИЛИ СведенияОВзносах.ФФОМС <> 0
	|			ИЛИ СведенияОВзносах.ФСС <> 0
	|			ИЛИ СведенияОВзносах.ФССНесчастныеСлучаи <> 0)";
	
	РезультатРасчета = Новый Структура;
	РезультатРасчета.Вставить("СтраховыеВзносы", Запрос.Выполнить().Выгрузить());
	
	ОтражениеЗарплатыВБухучете.СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, РезультатРасчета);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСтраховыеВзносыПоИсточникамФинансирования
	|ИЗ
	|	ВТБухучетСтраховыхВзносов КАК БухучетСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетСтраховыхВзносов";
	Запрос.Выполнить();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработкаНачисленийУдержанийПриЗаписи

// Заполняет реквизит ОчередностьОтраженияВУчете для начислений и удержаний.
//
Процедура УстановитьОчередностьОтраженияВУчете(ВидРасчетаОбъект) Экспорт 

	Если ВидРасчетаОбъект.СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам Тогда 
		ВидРасчетаОбъект.ОчередностьОтраженияВУчете = ВидРасчетаОбъект.ОчередностьРасчета;
	Иначе 
		ВидРасчетаОбъект.ОчередностьОтраженияВУчете = 1;
	КонецЕсли;
	
КонецПроцедуры

Процедура УточнитьСтратегиюОтраженияВУчетеНачисления(ВидРасчетаОбъект) Экспорт

	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	СтратегияОтраженияВУчете = ВидРасчетаОбъект.СтратегияОтраженияВУчете;
	СтатьяФинансирования = ВидРасчетаОбъект.СтатьяФинансирования;
	СтатьяРасходов = ВидРасчетаОбъект.СтатьяРасходов;
	СпособОтраженияЗарплатыВБухучете = ВидРасчетаОбъект.СпособОтраженияЗарплатыВБухучете;
	
	СтатьяФинансированияЗаполнена = ИспользоватьСтатьиФинансирования И Не СтатьяФинансирования.Пустая();
	СтатьяРасходовЗаполнена = РаботаВБюджетномУчреждении И Не СтатьяРасходов.Пустая();
	СпособОтраженияЗаполнен = Не СпособОтраженияЗарплатыВБухучете.Пустая();
	НастройкаЗаполнена = СпособОтраженияЗаполнен Или СтатьяФинансированияЗаполнена Или СтатьяРасходовЗаполнена;
	
	ЭтоПособиеЗаСчетФСС = УчетПособийСоциальногоСтрахованияРасширенный.НачислениеЯвляетсяПособиемЗаСчетФСС(ВидРасчетаОбъект);
	
	Если СтратегияОтраженияВУчете.Пустая() Тогда
		// Начальное заполнение стратегии.
		Если ЭтоПособиеЗаСчетФСС Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		ИначеЕсли НастройкаЗаполнена Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
		Иначе
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
		КонецЕсли;
	ИначеЕсли Не НастройкаЗаполнена И СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета Тогда
		СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях;
	ИначеЕсли НастройкаЗаполнена Тогда
		СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
	КонецЕсли;
	
	Если СтратегияОтраженияВУчете <> Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета Тогда
		ВидРасчетаОбъект.СтатьяФинансирования 				= Справочники.СтатьиФинансированияЗарплата.ПустаяСсылка();
		ВидРасчетаОбъект.СтатьяРасходов 					= Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
		ВидРасчетаОбъект.СпособОтраженияЗарплатыВБухучете 	= Справочники.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка();
	КонецЕсли;
	
	ВидРасчетаОбъект.СтратегияОтраженияВУчете = СтратегияОтраженияВУчете;
	
КонецПроцедуры

Процедура УточнитьСтратегиюОтраженияВУчетеУдержания(ВидРасчетаОбъект) Экспорт

	СтратегияОтраженияВУчете = ВидРасчетаОбъект.СтратегияОтраженияВУчете;
	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	
	Если ИспользоватьСтатьиФинансирования Тогда
		
		УдержаниеИмеетБазу = УдержаниеИмеетБазу(ВидРасчетаОбъект);
		
		Если СтратегияОтраженияВУчете.Пустая() Тогда
			Если УдержаниеИмеетБазу Тогда
				СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам;
			Иначе
				СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
			КонецЕсли;
		ИначеЕсли Не УдержаниеИмеетБазу И СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам  Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
		КонецЕсли;
		
	Иначе
		
		Если СтратегияОтраженияВУчете.Пустая() Тогда
			СтратегияОтраженияВУчете = Перечисления.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета;
		КонецЕсли;
		
	КонецЕсли;
	
	ВидРасчетаОбъект.СтратегияОтраженияВУчете = СтратегияОтраженияВУчете;
	
КонецПроцедуры

Процедура УточнитьВидОперацииПоЗарплатеНачисления(ВидРасчетаОбъект) Экспорт
	
	Если ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска Тогда
		
		ОтпускЯвляетсяЕжегодным = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчетаОбъект.ВидОтпуска,"ОтпускЯвляетсяЕжегодным");
		Если ОтпускЯвляетсяЕжегодным <> Неопределено И ОтпускЯвляетсяЕжегодным И ВидРасчетаОбъект.ВидОперацииПоЗарплате <> Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск Тогда
			ВидРасчетаОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск;
		КонецЕсли;
	ИначеЕсли ВидРасчетаОбъект.КатегорияНачисленияИлиНеоплаченногоВремени = Перечисления.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска Тогда
		
		ОтпускЯвляетсяЕжегодным = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчетаОбъект.ВидОтпуска,"ОтпускЯвляетсяЕжегодным");
		Если ОтпускЯвляетсяЕжегодным <> Неопределено И ОтпускЯвляетсяЕжегодным И ВидРасчетаОбъект.ВидОперацииПоЗарплате <> Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска Тогда
			ВидРасчетаОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеДвижений

Процедура СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(Движения, Отказ, Организация, ПериодРегистрации, Начисления, Удержания, РезультатыРасчетаНДФЛ, НеУчитыватьВРаспределенииПриОкончательномРасчете = Ложь, ЗаписыватьДвижения = Ложь) Экспорт

	Если Не ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Если Начисления <> НеОпределено Тогда
		
		Для Каждого Строка Из Начисления Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание	= Строка.Начисление;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= НачалоМесяца(НоваяСтрока.ДатаНачала);
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
		
	КонецЕсли;
	
	Если Удержания <> НеОпределено Тогда
		
		Для Каждого Строка Из Удержания Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание = Строка.Удержание;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= ПериодРегистрации;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			
			Если Строка.Удержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.МатериальнаяВыгодаПоЗаймам
					Или Строка.Удержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму Тогда
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Справочно;
			Иначе
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			КонецЕсли
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
		
	КонецЕсли;

	Если РезультатыРасчетаНДФЛ <> НеОпределено Тогда
		
		Для Каждого Строка Из РезультатыРасчетаНДФЛ Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Подразделение							= Строка.ПодразделениеСотрудника;
			НоваяСтрока.ТерриторияВыполненияРаботВОрганизации 	= Строка.Подразделение;
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.ПериодДействия		= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.НеУчитыватьВРаспределенииПриОкончательномРасчете = НеУчитыватьВРаспределенииПриОкончательномРасчете;
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Истина;
		
	КонецЕсли;
	
	Если ЗаписыватьДвижения Тогда
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записать();
		Движения.БухучетНачисленияУдержанияПоСотрудникам.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияБухучетНачисленияУдержанияПоКонтрагентамАкционерам(Движения, Отказ, Организация, ПериодРегистрации, Начисления, Удержания, РезультатыРасчетаНДФЛ, ЗаписыватьДвижения = Ложь) Экспорт

	Если Не ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат;
	КонецЕсли;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Если Начисления <> НеОпределено Тогда
		
		Для Каждого Строка Из Начисления Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание	= Строка.Начисление;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Истина;
		
	КонецЕсли;
	
	Если Удержания <> НеОпределено Тогда
		
		Для Каждого Строка Из Удержания Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание = Строка.Удержание;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= ПериодРегистрации;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			
			Если Строка.Удержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.МатериальнаяВыгодаПоЗаймам
					Или Строка.Удержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму Тогда
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Справочно;
			Иначе
				НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			КонецЕсли
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Истина;
		
	КонецЕсли;

	Если РезультатыРасчетаНДФЛ <> НеОпределено Тогда
		
		Для Каждого Строка Из РезультатыРасчетаНДФЛ Цикл
			
			НоваяСтрока = Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ВидОперации			= НачислениеУдержаниеВидОперации[НоваяСтрока.НачислениеУдержание];
			НоваяСтрока.ТерриторияВыполненияРаботВОрганизации = Строка.Подразделение;
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты      = Перечисления.ГруппыНачисленияУдержанияВыплаты.Удержано;
			
		КонецЦикла;
		
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Истина;
		
	КонецЕсли;
	
	Если ЗаписыватьДвижения Тогда
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записать();
		Движения.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Добавляет запись о бухучете зарплаты по документу основанию.
//
// Параметры:
//			ДокументОснование - ДокументОбъект
//			ОтраженияВУчете - Коллекция записей c полями,
//				* Период
//				* Сотрудник
//				* СпособОтраженияЗарплатыВБухучете.
//				* ОтношениеКЕНВД.
//				* СтатьяФинансирования
//
Процедура ЗарегистрироватьБухучетЗарплатыСотрудников(ДокументОснование, ОтраженияВУчете) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(ДокументОснование.Ссылка);
	
	Если ДокументОснование.Проведен
		И ОтраженияВУчете.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование.Ссылка);
		Запрос.УстановитьПараметр("ОтраженияВУчете", ОтраженияВУчете);
		
		// Получение временной таблицы - отбора и таблицы записей, введенных в ручную.
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ОтраженияВУчете.Период,
			|	ОтраженияВУчете.Сотрудник,
			|	ОтраженияВУчете.СпособОтраженияЗарплатыВБухучете,
			|	ОтраженияВУчете.СтатьяФинансирования
			|ПОМЕСТИТЬ ВТОтраженияВУчетеСотрудников
			|ИЗ
			|	&ОтраженияВУчете КАК ОтраженияВУчете
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетЗарплатыСотрудников.Период,
			|	БухучетЗарплатыСотрудников.Сотрудник
			|ИЗ
			|	РегистрСведений.БухучетЗарплатыСотрудников КАК БухучетЗарплатыСотрудников
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтраженияВУчетеСотрудников КАК ОтраженияВУчетеСотрудников
			|		ПО БухучетЗарплатыСотрудников.Период = ОтраженияВУчетеСотрудников.Период
			|			И БухучетЗарплатыСотрудников.Сотрудник = ОтраженияВУчетеСотрудников.Сотрудник
			|			И (БухучетЗарплатыСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО)";
		
		ТаблицаОчищаемыхЗаписей = Запрос.Выполнить().Выгрузить();
		
		ОписательТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
			Запрос.МенеджерВременныхТаблиц,
			"ВТОтраженияВУчетеСотрудников");
		
		ПоляОтбораПериодическихДанных = Новый Структура;
		
		// Исключим из выборки данные текущего документа.
		МассивОтборов = Новый Массив;
		ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(
			МассивОтборов, "ДокументОснование", "<>", ДокументОснование.Ссылка);
			
		ПоляОтбораПериодическихДанных.Вставить("БухучетЗарплатыСотрудников", МассивОтборов);
			
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательТаблиц, Истина, "СпособОтраженияЗарплатыВБухучете,СтатьяФинансирования", ПоляОтбораПериодическихДанных);
		
		// Очистка записей, введенных в ручную.
		Для каждого СтрокаОчищаемойЗаписи Из ТаблицаОчищаемыхЗаписей Цикл
			
			НаборОчищаемыхЗаписей = РегистрыСведений.БухучетЗарплатыСотрудников.СоздатьНаборЗаписей();
			НаборОчищаемыхЗаписей.Отбор.Период.Установить(СтрокаОчищаемойЗаписи.Период);
			НаборОчищаемыхЗаписей.Отбор.Сотрудник.Установить(СтрокаОчищаемойЗаписи.Сотрудник);
			НаборОчищаемыхЗаписей.Отбор.ДокументОснование.Установить(Неопределено);
			НаборОчищаемыхЗаписей.Записать();
			
		КонецЦикла;
		
		// Формирование набора записей.
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ОтраженияВУчетеСотрудников.Период,
			|	ОтраженияВУчетеСотрудников.Сотрудник,
			|	&ДокументОснование КАК ДокументОснование,
			|	ВЫБОР
			|		КОГДА ОтраженияВУчетеСотрудников.СпособОтраженияЗарплатыВБухучете ЕСТЬ NULL 
			|			ТОГДА КадровыеДанныеСотрудников.СпособОтраженияЗарплатыВБухучете
			|		ИНАЧЕ ОтраженияВУчетеСотрудников.СпособОтраженияЗарплатыВБухучете
			|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
			|	ВЫБОР
			|		КОГДА ОтраженияВУчетеСотрудников.СтатьяФинансирования ЕСТЬ NULL 
			|			ТОГДА КадровыеДанныеСотрудников.СтатьяФинансирования
			|		ИНАЧЕ ОтраженияВУчетеСотрудников.СтатьяФинансирования
			|	КОНЕЦ КАК СтатьяФинансирования
			|ИЗ
			|	ВТОтраженияВУчетеСотрудников КАК ОтраженияВУчетеСотрудников
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ПО ОтраженияВУчетеСотрудников.Сотрудник = КадровыеДанныеСотрудников.Сотрудник";
			
		ТаблицаНабора = Запрос.Выполнить().Выгрузить();
		НаборЗаписей.Загрузить(ТаблицаНабора);
		
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Добавляет запись о бухучете зарплаты по документу основанию.
//
Процедура ЗарегистрироватьБухучетЗарплатыПервичныхДокументов(БухучетЗарплаты) Экспорт
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыПервичныхДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументОснование.Установить(БухучетЗарплаты.ДокументОснование);
	
	Для каждого СтрокаТаблицы Из БухучетЗарплаты.ТаблицаБухучетЗарплаты Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Добавляет в коллекцию движений запись о бухучете планового начисления.
// 
// Параметры:
//			Движения,
//			БухучетПлановыхНачислений - Коллекция записей c полями,
//				Обязательные:
//				- Период
//				- Сотрудник
//				- Организация
//				- Начисление
//				- Используется - булево
//				Необязательные:
//				- СпособОтраженияЗарплатыВБухучете - если не заполнено, то подбирается автоматически.
//				- СтатьяФинансирования - если не заполнено, то подбирается автоматически.
//				- СтатьяЗатрат - если не заполнено, то подбирается автоматически.
//				- ОтношениеКЕНВД - если не заполнено, то подбирается автоматически
//				- ДействуетДо
//
Процедура СформироватьДвиженияБухучетПлановыхНачислений(Движения, БухучетПлановыхНачислений) Экспорт
		
	Для каждого ОтражениеНачисления Из БухучетПлановыхНачислений Цикл
		НоваяЗапись = Движения.БухучетПлановыхНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ОтражениеНачисления);
		Движения.БухучетПлановыхНачислений.Записывать = Истина;
	КонецЦикла;
	
	Если Движения.БухучетПлановыхНачислений.Записывать Тогда
		Движения.БухучетПлановыхНачислений.Записать();
		Движения.БухучетПлановыхНачислений.Записывать = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВсеСотрудникиОрганизацииФизическихЛиц(Организация, Физлица, МесяцНачисления)

	ВсеСотрудники = КадровыйУчетРасширенный.СотрудникиФизическихЛиц(Физлица, Организация, Ложь, Истина);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодработки") И ВсеСотрудники.Количество() > 0 Тогда 
		ПараметрыПолученияПодработок = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоСпискуСотрудников(ВсеСотрудники, МесяцНачисления, КонецМесяца(МесяцНачисления));
	    МассивПодработок = КадровыйУчетРасширенный.ПодработкиСотрудников(Истина, ПараметрыПолученияПодработок);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСотрудники, МассивПодработок, Истина);
	КонецЕсли;
	
	Возврат ВсеСотрудники;

КонецФункции

Процедура СоздатьВТНачисленияБазаОтпуска(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиНачислений.Ссылка,
	|	НастройкиНачислений.Ссылка.ВключатьВФОТ КАК ВключатьВФОТ
	|ПОМЕСТИТЬ ВТНачисленияБазаОтпуска
	|ИЗ
	|	ПланВидовРасчета.Начисления.СреднийЗаработокОбщий КАК НастройкиНачислений
	|ГДЕ
	|	НастройкиНачислений.Значение <> ЗНАЧЕНИЕ(Перечисление.УчетНачисленийВСреднемЗаработкеОбщий.НеВключать)
	|   И НастройкиНачислений.ПорядокРасчета = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетаСреднегоЗаработкаОбщий.Постановление100Отпускные)";
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, Период) Экспорт

	ТаблицаОстаткиОтпусков = ОтражениеЗарплатыВБухучете.НоваяТаблицаОстаткиОтпусков();
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация      = Организация;
	ПараметрыПолучения.НачалоПериода    = НачалоМесяца(Период);
	ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(Период);
	ПараметрыПолучения.Вставить("КадровыеДанные", "Подразделение");
	ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ЕстьЕНВД = ОтражениеЗарплатыВБухучете.ПлательщикЕНВД(Организация, Период);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.УстановитьПараметр("ЕстьЕНВД", ЕстьЕНВД);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.Период,
	|	ТаблицаСотрудников.Подразделение
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников"; 
	Запрос.Выполнить();
	
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники", "Сотрудник,Период", Организация,,Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.Подразделение КАК Подразделение,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|				И СведенияОБухучетеНачисленийСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Сотрудники.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник";
	
	БухучетСотрудников = Запрос.Выполнить().Выгрузить();
	БухучетСотрудников.Индексы.Добавить("Сотрудник");
	Отбор = Новый Структура("Сотрудник");
	
	Для каждого Сотрудник Из МассивСотрудников Цикл
	
		ОстаткиОтпусковСотрудника = ОстаткиОтпусков.ОстатокОтпускаСотрудникаНаДату(Сотрудник, КонецМесяца(Период));
		ОстатокОтпусковСотрудника = 0;
		Для каждого СтрокаТЗ Из ОстаткиОтпусковСотрудника.ОстаткиВРазрезеВидовОтпусков Цикл
			ОстатокОтпусковСотрудника = ОстатокОтпусковСотрудника + СтрокаТЗ.КоличествоДней;
		КонецЦикла;
		
		ДатаНачалаСобытия = НачалоМесяца(ДобавитьМесяц(Период, 1));
		ПериодРасчета = УчетСреднегоЗаработка.ПериодРасчетаОбщегоСреднегоЗаработкаСотрудника(ДатаНачалаСобытия, Сотрудник);
		ПорядокРасчета = УчетСреднегоЗаработкаКлиентСервер.ПорядокРасчетаОбщегоСреднегоЗаработка(Период);
		ДанныеДляРасчета = УчетСреднегоЗаработка.ДанныеДляРасчетаОбщегоСреднегоЗаработкаСотрудника(Сотрудник, ДатаНачалаСобытия, ПериодРасчета.ДатаНачала, ПериодРасчета.ДатаОкончания, ПорядокРасчета);
		
		ДополнительныеПараметры = УчетСреднегоЗаработкаКлиентСервер.ДополнительныеПараметрыРасчетаСреднегоЗаработка();
		ДополнительныеПараметры.НачалоПериода = ПериодРасчета.ДатаНачала;
		ДополнительныеПараметры.ОкончаниеПериода = ПериодРасчета.ДатаОкончания;
		ДополнительныеПараметры.Индексации = ДанныеДляРасчета.ДанныеОбИндексации;
		ДополнительныеПараметры.ДатаНачалаСобытия = ДатаНачалаСобытия;
		ДополнительныеПараметры.СпособРасчетаОтпуска = Перечисления.СпособыРасчетаНачислений.ОплатаОтпускаПоКалендарнымДням;
		
		СреднийЗаработок = УчетСреднегоЗаработкаКлиентСервер.СреднийЗаработокОбщий(ДанныеДляРасчета.ДанныеОНачислениях, ДанныеДляРасчета.ДанныеОВремени, ДополнительныеПараметры);
		
		НоваяСтрока = ТаблицаОстаткиОтпусков.Добавить();
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Сотрудник   = Сотрудник;
		НоваяСтрока.ОстатокОтпусков  = ОстатокОтпусковСотрудника;
		НоваяСтрока.СреднийЗаработок = СреднийЗаработок;
		
		Отбор.Сотрудник = Сотрудник;
		СтрокиБухучета = БухучетСотрудников.НайтиСтроки(Отбор);
		Если СтрокиБухучета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиБухучета[0]);	
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат ТаблицаОстаткиОтпусков;

КонецФункции

// Возвращает ссылку на элемент справочника СтатьиРасходовЗарплата с кодом 211.
Функция СтатьяРасходов211() Экспорт
	
	Статья211 = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Статья211 = Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("211");
	КонецЕсли;

	Возврат Статья211;
	
КонецФункции

// Возвращает ссылку на элемент справочника СтатьиРасходовЗарплата с кодом 213.
Функция СтатьяРасходов213() Экспорт
	
	Статья213 = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Статья213 = Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("213");
	КонецЕсли;
	
	Возврат Статья213;
	
КонецФункции 

// Возвращает ссылку на элемент справочника СтатьиРасходовЗарплата с кодом 290.
Функция СтатьяРасходов290() Экспорт
	
	Статья290 = Справочники.СтатьиРасходовЗарплата.ПустаяСсылка();
	Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Статья290 = Справочники.СтатьиРасходовЗарплата.НайтиПоКоду("290");
	КонецЕсли;

	Возврат Статья290;
	
КонецФункции

Процедура ПроверитьРезультатыРаспределенияНачисленийУдержаний(Отказ, Форма, Параметры) Экспорт
	
	Если Не ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеДокумента = Параметры.ОписаниеДокумента;
	Если Не ОписаниеДокумента.РегистрацияНачисленийДоступна Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеТаблицФормы = Параметры.ОписаниеТаблицФормы;
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	МаксимальноСообщений = 10;
	ВыводимыхСообщений = 0;
	НевыводимыхСообщений = 0;
	ДокументОбъект = Форма.Объект;
	МетаданныеДокумента = ДокументОбъект.Ссылка.Метаданные();
		
	ТаблицаРезультатовПроверки = Новый ТаблицаЗначений;
	ТаблицаРезультатовПроверки.Колонки.Добавить("ИмяТаблицы",  Новый ОписаниеТипов("Строка"));
	ТаблицаРезультатовПроверки.Колонки.Добавить("НомерСтроки",  Новый ОписаниеТипов("Число"));
	ТаблицаРезультатовПроверки.Колонки.Добавить("ЕстьОшибкиЗаполнения",  Новый ОписаниеТипов("Булево"));
	ТаблицаРезультатовПроверки.Колонки.Добавить("ЕстьОшибкиРаспределения",  Новый ОписаниеТипов("Булево"));

	НачислениеИзШапкиДокумента = Неопределено;
	Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
		НачислениеИзШапкиДокумента = ДокументОбъект[ОписаниеДокумента.ИменаПолейНачисления];
	КонецЕсли;
	
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	Для Каждого ОписаниеТаблицыФормы Из ОписаниеТаблицФормы Цикл
		
		ИмяТаблицыРаспределениеРезультатовРасчета = ЗарплатаКадрыРасширенныйКлиентСервер.ИмяТаблицыРаспределениеРезультатовРасчета(ОписаниеТаблицыФормы.Значение);
		ИмяТаблицыНачисленийУдержаний = ОписаниеТаблицыФормы.Ключ;
		ЭтоТаблицаНачислений = ИмяТаблицыРаспределениеРезультатовРасчета = "РаспределениеРезультатовНачислений";
		
		АдресТаблицыРаспределенияВХранилище = Неопределено;
		Если ЭтоТаблицаНачислений Тогда 
			Параметры.Свойство("АдресТаблицыРаспределенияНачислений", АдресТаблицыРаспределенияВХранилище);
		Иначе 
			Параметры.Свойство("АдресТаблицыРаспределенияУдержаний", АдресТаблицыРаспределенияВХранилище);
		КонецЕсли;
		
		ТаблицаРаспределенияРезультатовИзХранилища = Неопределено;
		Если ЗначениеЗаполнено(АдресТаблицыРаспределенияВХранилище) Тогда 
			ТаблицаРаспределенияРезультатовИзХранилища = ПолучитьИзВременногоХранилища(АдресТаблицыРаспределенияВХранилище);
		КонецЕсли;
		
		Для каждого СтрокаТЧ Из ДокументОбъект[ИмяТаблицыНачисленийУдержаний] Цикл
			
			РезультатыРаспределения = Неопределено;
			Если СтрокаТЧ.РезультатРаспределения = Неопределено И ТаблицаРаспределенияРезультатовИзХранилища <> Неопределено Тогда 
				Отбор = Новый Структура("ИдентификаторСтроки", СтрокаТЧ[ОписаниеТаблицыФормы.Значение.ИмяРеквизитаИдентификаторСтроки]);
				РезультатыРаспределения = ТаблицаРаспределенияРезультатовИзХранилища.НайтиСтроки(Отбор);
			КонецЕсли;
			
			РезультатПроверкиСтроки = ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(
				СтрокаТЧ, ИмяТаблицыНачисленийУдержаний, ОписаниеДокумента, НачислениеИзШапкиДокумента, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении, РезультатыРаспределения);
				
			Если Не РезультатПроверкиСтроки.ЕстьОшибкиЗаполнения И Не РезультатПроверкиСтроки.ЕстьОшибкиРаспределения Тогда
				Продолжить;
			КонецЕсли;
			                
			НоваяСтрока = ТаблицаРезультатовПроверки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатПроверкиСтроки);
			НоваяСтрока.НомерСтроки = СтрокаТЧ.НомерСтроки;
			НоваяСтрока.ИмяТаблицы  = ИмяТаблицыНачисленийУдержаний;
			
		КонецЦикла;
		
	КонецЦикла;
		
	Для каждого СтрокаТаблицы Из ТаблицаРезультатовПроверки Цикл
		
		Отказ = Истина;
		
		Если ВыводимыхСообщений > МаксимальноСообщений Тогда
			НевыводимыхСообщений = НевыводимыхСообщений + 1;
		Иначе
			ТекстСообщения = НСтр("ru='В строке %1 таблицы %2 обнаружены незаполненные поля при распределении результата';uk='У рядку %1 таблиці %2 виявлені незаповнені поля при розподілі результату'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения,
			СтрокаТаблицы.НомерСтроки,
			МетаданныеДокумента.ТабличныеЧасти.Найти(СтрокаТаблицы.ИмяТаблицы).Синоним);
			
			ПолеСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Объект.%1[%2].КомандаРедактированияРаспределения", СтрокаТаблицы.ИмяТаблицы, СтрокаТаблицы.НомерСтроки-1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПолеСообщения, , Отказ);
			ВыводимыхСообщений = ВыводимыхСообщений + 1;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает подсказку ввода для элемента СтатьяРасходов.
// Параметры:
// 		Форма - форма объекта
// 		ПутьРеквизита - путь к реквизиту типа ПланыВидовРасчетаСсылка.Начисления.
//
Процедура УстановитьПодсказкуВводаСтатьиРасходовПоНачислению(Форма, ПутьРеквизита) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
		Возврат;
	КонецЕсли;
	
	ПодсказкаВвода = "211";
	
	ВидРасчета = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПутьРеквизита);
	Если ЗначениеЗаполнено(ВидРасчета) Тогда
		СтатьяРасходов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидРасчета, "СтатьяРасходов");
		Если ЗначениеЗаполнено(СтатьяРасходов) Тогда
			ПодсказкаВвода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтатьяРасходов, "Код");
		КонецЕсли;
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы, "СтатьяРасходов", "ПодсказкаВвода", ПодсказкаВвода);

КонецПроцедуры

// В таблице значений РезультатыРасчетаНДФЛ заполняются поля СтатьяФинансирования и СтатьяРасходов
// Параметры:
// 		Организация
// 		ПериодРегистрации
//		РезультатыРасчетаНДФЛ - таблица значений, содержит поля
//			* Сотрудник
//			* ФизическоеЛицо
//			* ПодразделениеСотрудника - тип СправочникСсылка.ПодразделенияОрганизаций
//			* Подразделение - тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//			* СтатьиФинансирования
//			* СтатьиРасходов
//
Процедура ПерерасчетНДФЛДополнитьСтатьюФинансирования(Организация,ПериодРегистрации,РезультатыРасчетаНДФЛ) Экспорт

	Если РезультатыРасчетаНДФЛ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Начисления", РезультатыРасчетаНДФЛ);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Начисления.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ПодразделениеСотрудника КАК Подразделение,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&Начисления КАК Начисления";
	Запрос.Выполнить();
	
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТНачисления", "Сотрудник,Период", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
	|	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО Начисления.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И Начисления.Период = СведенияОБухучетеЗарплатыСотрудников.Период
	|			И Начисления.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = СведенияОБухучетеЗарплатыСотрудников.ТерриторияВыполненияРаботВОрганизации";
	ТаблицаБухучета = Запрос.Выполнить().Выгрузить();
	Отбор = Новый Структура("Сотрудник,ФизическоеЛицо,Подразделение,ТерриторияВыполненияРаботВОрганизации");
	Для каждого СтрокаТЗ Из РезультатыРасчетаНДФЛ Цикл
		
		Отбор.Сотрудник = СтрокаТЗ.Сотрудник;
		Отбор.ФизическоеЛицо = СтрокаТЗ.ФизическоеЛицо;
		Отбор.Подразделение = СтрокаТЗ.ПодразделениеСотрудника;
		Отбор.ТерриторияВыполненияРаботВОрганизации = СтрокаТЗ.Подразделение;
		НайденныеСтроки = ТаблицаБухучета.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			СтрокаТЗ.СтатьяФинансирования = НайденныеСтроки[0].СтатьяФинансирования;	
			СтрокаТЗ.СтатьяРасходов = НайденныеСтроки[0].СтатьяРасходов;
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

#Область  СоздатьВТБухучетНачислений

Процедура СоздатьВТНастройкиНачислений(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ Начисления.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку
	|	КОНЕЦ КАК СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОтпуска.СпособРасчетаОтпуска В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ВКалендарныхДнях), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ВКалендарныхИлиРабочихДняхВЗависимостиОтТрудовогоДоговора))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаНачислений.ОплатаОтпускаПоКалендарнымДням)
	|		КОГДА Начисления.ВидОтпуска.СпособРасчетаОтпуска = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ВРабочихДнях)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаНачислений.ОплатаОтпускаПоШестидневке)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаНачислений.ПустаяСсылка)
	|	КОНЕЦ КАК СпособРасчетаПоСреднемуЗаработку,
	|	Начисления.СтратегияОтраженияВУчете
	|ПОМЕСТИТЬ ВТНастройкиНачислений
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТСтрокиКУдалению(Запрос, ИменаТаблиц)

	ТекстЗапроса = "";
	
	Для Индекс = 0 По ИменаТаблиц.ВГраница() Цикл
		
		ИмяТаблицы = ИменаТаблиц[Индекс];
		
		Если Индекс > 0 Тогда
			ТекстЗапроса = ТекстЗапроса + " 
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.ИдентификаторСтроки КАК ИдентификаторСтроки";
		Если Индекс=0 Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ПОМЕСТИТЬ ВТСтрокиКУдалению";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ
		|	" + ИмяТаблицы + " КАК Таблица";
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийПоДоговорам(Запрос)
	
	// ВТНачисленияПоДоговорам
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.Начисление,
	|	Начисления.ВидОперации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Сумма,
	|	Начисления.ДокументОснование,
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Подразделение КАК ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТНачисленияПоДоговорам
	|ИЗ
	|	ВТНачисления КАК Начисления
	|ГДЕ
	|	Начисления.ВидОперации В(&ОплатаПоДоговорам)";
	Запрос.Выполнить();
	
	// Получим сведения о настройке бухучета для договорников.
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТНачисленияПоДоговорам", "Сотрудник,ПериодРегистрации");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
	|	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов,
	|	СведенияОБухучетеЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТБухучетСотрудниковПоДоговорам
	|ИЗ
	|	ВТНачисленияПоДоговорам КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО Начисления.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И Начисления.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = СведенияОБухучетеЗарплатыСотрудников.ТерриторияВыполненияРаботВОрганизации
	|			И Начисления.ПериодРегистрации = СведенияОБухучетеЗарплатыСотрудников.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисления.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СтатьяФинансирования, УсловияДоговораГПХ.СтатьяФинансирования) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СтатьяРасходов, УсловияДоговораГПХ.СтатьяРасходов) КАК СтатьяРасходов,
	|	ЕСТЬNULL(НачисленияПоДоговорам.СпособОтраженияЗарплатыВБухучете, УсловияДоговораГПХ.СпособОтраженияЗарплатыВБухучете) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(НачисленияПоДоговорам.Сумма, УсловияДоговораГПХ.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетДокументов
	|ИЗ
	|	ВТНачисленияПоДоговорам КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияПоДоговорам КАК НачисленияПоДоговорам
	|		ПО Начисления.ДокументОснование = НачисленияПоДоговорам.ДоговорАкт
	|			И Начисления.ПериодРегистрации = НачисленияПоДоговорам.МесяцНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УсловияДоговораГПХ КАК УсловияДоговораГПХ
	|		ПО Начисления.ДокументОснование = УсловияДоговораГПХ.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетСотрудников.ТерриторияВыполненияРаботВОрганизации,
	|	ВЫБОР
	|		КОГДА БухучетДокументов.СпособОтраженияЗарплатыВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ БухучетДокументов.СпособОтраженияЗарплатыВБухучете ЕСТЬ NULL 
	|			ТОГДА БухучетСотрудников.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ БухучетДокументов.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА БухучетДокументов.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ БухучетДокументов.СтатьяФинансирования ЕСТЬ NULL 
	|			ТОГДА БухучетСотрудников.СтатьяФинансирования
	|		ИНАЧЕ БухучетДокументов.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА БухучетДокументов.СтатьяРасходов = ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|				ИЛИ БухучетДокументов.СтатьяРасходов ЕСТЬ NULL 
	|			ТОГДА БухучетСотрудников.СтатьяРасходов
	|		ИНАЧЕ БухучетДокументов.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	Начисления.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУчетДоговоровВременная
	|ИЗ
	|	ВТНачисленияПоДоговорам КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетДокументов КАК БухучетДокументов
	|		ПО Начисления.ИдентификаторСтроки = БухучетДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетСотрудниковПоДоговорам КАК БухучетСотрудников
	|		ПО Начисления.ИдентификаторСтроки = БухучетСотрудников.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетДоговоров.ИдентификаторСтроки,
	|	УчетДоговоров.ТерриторияВыполненияРаботВОрганизации,
	|	УчетДоговоров.СпособОтраженияЗарплатыВБухучете,
	|	УчетДоговоров.СтатьяФинансирования,
	|	УчетДоговоров.СтатьяРасходов,
	|	УчетДоговоров.Сумма
	|ПОМЕСТИТЬ ВТУчетДоговоров
	|ИЗ
	|	ВТУчетДоговоровВременная КАК УчетДоговоров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	УчетДоговоров.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ПериодРегистрации,
	|	Начисления.ПериодРегистрации КАК ПериодПринятияРасходов,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.Начисление,
	|	Начисления.ВидОперации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ДокументОснование,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ УчетДоговоров.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ УчетДоговоров.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	УчетДоговоров.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	УчетДоговоров.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоДоговорам
	|ИЗ
	|	ВТНачисленияПоДоговорам КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетДоговоров КАК УчетДоговоров
	|		ПО Начисления.ИдентификаторСтроки = УчетДоговоров.ИдентификаторСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисления.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияПоДоговорам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетСотрудниковПоДоговорам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУчетДоговоров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУчетДоговоровВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетДокументов"; 
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетКомпенсацийЗаЗадержкуЗарплаты(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЛОЖЬ КАК СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ПустаяСсылка) КАК СпособРасчетаПоСреднемуЗаработку
	|ПОМЕСТИТЬ ВТБухучетКомпенсацийЗаЗадержкуЗарплаты
	|ИЗ
	|	ВТНачисления КАК Начисления
	|ГДЕ
	|	Начисления.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты)";

	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТНастройкиБухучетаСотрудников(Запрос)

	ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТНачисления", "Сотрудник,ДатаНачала");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяФинансирования,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяРасходов,
	|	СведенияОБухучетеНачисленийСотрудников.ЕстьБухучетОрганизации КАК ЕстьБухучетОрганизации,
	|	СведенияОБухучетеНачисленийСотрудников.ЕстьБухучетПодразделения КАК ЕстьБухучетПодразделения,
	|	СведенияОБухучетеНачисленийСотрудников.ЕстьБухучетТерритории КАК ЕстьБухучетТерритории,
	|	СведенияОБухучетеНачисленийСотрудников.ЕстьБухучетСотрудника КАК ЕстьБухучетСотрудника
	|ПОМЕСТИТЬ ВТНастройкиБухучетаСотрудников
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Начисления.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник
	|			И Начисления.Подразделение = СведенияОБухучетеНачисленийСотрудников.Подразделение
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = СведенияОБухучетеНачисленийСотрудников.ТерриторияВыполненияРаботВОрганизации
	|			И Начисления.ДатаНачала = СведенияОБухучетеНачисленийСотрудников.Период
	|ГДЕ
	|	НЕ Начисления.ВидОперации В (&ОплатаПоДоговорам)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки";
	Запрос.Выполнить();	
	
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников";
	Запрос.Выполнить();	

КонецПроцедуры

Процедура СоздатьВТБухучетОсновногоЗаработка(Запрос)

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РаспределениеОсновногоЗаработка.СтатьяФинансирования КАК СтатьяФинансирования,
	|	РаспределениеОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	РаспределениеОсновногоЗаработка.ДоляРаспределения
	|ПОМЕСТИТЬ ВТСтрокиОтражения
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетРаспределениеОсновногоЗаработка КАК РаспределениеОсновногоЗаработка
	|		ПО Начисления.Сотрудник = РаспределениеОсновногоЗаработка.Сотрудник
	|			И Начисления.Организация = РаспределениеОсновногоЗаработка.Организация
	|			И Начисления.ПериодРегистрации = РаспределениеОсновногоЗаработка.ПериодРегистрации
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиОтражения.ИдентификаторСтроки,
	|	СтрокиОтражения.СтатьяФинансирования,
	|	СтрокиОтражения.СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	СтрокиОтражения.ДоляРаспределения КАК ДоляРаспределения
	|ИЗ
	|	ВТСтрокиОтражения КАК СтрокиОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ВидОперации,
	|	Начисления.Начисление,
	|	Начисления.ДокументОснование,
	|	Начисления.Сумма КАК Сумма,
	|	НастройкиБухучетаСотрудников.СтатьяФинансирования,
	|	НастройкиБухучетаСотрудников.СтатьяРасходов,
	|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиОтражения КАК СтрокиОтражения
	|		ПО Начисления.ИдентификаторСтроки = СтрокиОтражения.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиКУдалению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиОтражения";
	
	Результат = Запрос.ВыполнитьПакет();
	Распределение = Результат[1].Выгрузить();
	Начисления = Результат[2].Выгрузить();
	
	ТаблицаБухучетНачислений = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	ТаблицаБухучетНачислений.Колонки.НачислениеУдержание.Имя = "Начисление";  
	ТаблицаБухучетНачислений.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТаблицаБухучетНачислений.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	
	Если Распределение.Количество() > 0 Тогда
		
		Распределение.Индексы.Добавить("ИдентификаторСтроки");
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Для каждого СтрокаНачисления Из Начисления Цикл
			
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаНачисления);
			СтрокиОтражения = Распределение.НайтиСтроки(Отбор);
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"ДоляРаспределения");
			Результаты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = Результаты[Индекс];
				СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
				СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
				СтрокаТаблицы.СтатьяРасходов = СтрокаОтражения.СтатьяРасходов;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетОсновногоЗаработка", ТаблицаБухучетНачислений);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисления.ПериодРегистрации,
	|	БухучетНачисления.ИдентификаторСтроки,
	|	БухучетНачисления.ПериодПринятияРасходов,
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработкаВременная
	|ИЗ
	|	&ТаблицаБухучетОсновногоЗаработка КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетОсновногоЗаработка.ПериодРегистрации,
	|	БухучетОсновногоЗаработка.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА БухучетОсновногоЗаработка.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетОсновногоЗаработка.ДатаНачала < БухучетОсновногоЗаработка.ПериодРегистрации
	|			ТОГДА БухучетОсновногоЗаработка.ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетОсновногоЗаработка.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	БухучетОсновногоЗаработка.Организация,
	|	БухучетОсновногоЗаработка.Сотрудник,
	|	БухучетОсновногоЗаработка.ФизическоеЛицо,
	|	БухучетОсновногоЗаработка.Подразделение,
	|	БухучетОсновногоЗаработка.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетОсновногоЗаработка.Начисление,
	|	БухучетОсновногоЗаработка.ВидОперации,
	|	БухучетОсновногоЗаработка.ДатаНачала,
	|	БухучетОсновногоЗаработка.ДатаОкончания,
	|	БухучетОсновногоЗаработка.ДокументОснование,
	|	БухучетОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете,
	|	БухучетОсновногоЗаработка.СтатьяФинансирования,
	|	БухучетОсновногоЗаработка.СтатьяРасходов,
	|	БухучетОсновногоЗаработка.Сумма
	|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработка
	|ИЗ
	|	ВТБухучетОсновногоЗаработкаВременная КАК БухучетОсновногоЗаработка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетОсновногоЗаработкаВременная";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийПоДокументамИПлановые(Запрос)

	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетПервичныхДокументов.ДокументОснование,
	|	БухучетПервичныхДокументов.НачислениеУдержание КАК Начисление,
	|	БухучетПервичныхДокументов.СпособОтраженияЗарплатыВБухучете,
	|	БухучетПервичныхДокументов.СтатьяФинансирования,
	|	БухучетПервичныхДокументов.СтатьяРасходов
	|ПОМЕСТИТЬ ВТБухучетПервичногоДокументаПараметр
	|ИЗ
	|	&БухучетПервичногоДокумента КАК БухучетПервичныхДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Начисление,
	|	БухучетЗарплатыПервичныхДокументов.СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяФинансирования,
	|	БухучетЗарплатыПервичныхДокументов.СтатьяРасходов
	|ПОМЕСТИТЬ ВТНастройкиБухучетаПервичныхДокументов
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПервичныхДокументов КАК БухучетЗарплатыПервичныхДокументов
	|		ПО Начисления.Начисление = БухучетЗарплатыПервичныхДокументов.НачислениеУдержание
	|			И Начисления.ДокументОснование = БухучетЗарплатыПервичныхДокументов.ДокументОснование
	|			И (БухучетЗарплатыПервичныхДокументов.ДокументОснование <> &ДокументСсылка)
	|			И (БухучетЗарплатыПервичныхДокументов.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ &ИспользоватьСтатьиФинансирования
	|					И БухучетЗарплатыПервичныхДокументов.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ &РаботаВБюджетномУчреждении
	|					И БухучетЗарплатыПервичныхДокументов.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Начисление,
	|	БухучетПервичногоДокумента.СпособОтраженияЗарплатыВБухучете,
	|	БухучетПервичногоДокумента.СтатьяФинансирования,
	|	БухучетПервичногоДокумента.СтатьяРасходов
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетПервичногоДокументаПараметр КАК БухучетПервичногоДокумента
	|		ПО Начисления.Начисление = БухучетПервичногоДокумента.Начисление
	|			И Начисления.ДокументОснование = БухучетПервичногоДокумента.ДокументОснование
	|			И (БухучетПервичногоДокумента.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ &ИспользоватьСтатьиФинансирования
	|					И БухучетПервичногоДокумента.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ &РаботаВБюджетномУчреждении
	|					И БухучетПервичногоДокумента.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисления.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Организация КАК Организация,
	|	Начисления.ДатаНачала,
	|	Начисления.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(БухучетПлановыхНачислений.Период) КАК Период
	|ПОМЕСТИТЬ ВТНастройкиДатыПоследнихДвижений
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	|		ПО Начисления.Сотрудник = БухучетПлановыхНачислений.Сотрудник
	|			И Начисления.Организация = БухучетПлановыхНачислений.Организация
	|			И Начисления.Начисление = БухучетПлановыхНачислений.Начисление
	|			И Начисления.ДатаНачала >= БухучетПлановыхНачислений.Период
	|			И Начисления.ДокументОснование = БухучетПлановыхНачислений.ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ДатаНачала,
	|	Начисления.Организация,
	|	Начисления.Начисление,
	|	Начисления.Сотрудник,
	|	Начисления.ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление,
	|	Сотрудник,
	|	Организация,
	|	Период,
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыПоследнихДвижений.ИдентификаторСтроки,
	|	ДатыПоследнихДвижений.Начисление,
	|	БухучетПлановыхНачислений.СтатьяФинансирования,
	|	БухучетПлановыхНачислений.СтатьяРасходов,
	|	БухучетПлановыхНачислений.СпособОтраженияЗарплатыВБухучете
	|ПОМЕСТИТЬ ВТНастройкиБухучетаПлановыхНачислений
	|ИЗ
	|	ВТНастройкиДатыПоследнихДвижений КАК ДатыПоследнихДвижений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетПлановыхНачислений КАК БухучетПлановыхНачислений
	|		ПО ДатыПоследнихДвижений.Начисление = БухучетПлановыхНачислений.Начисление
	|			И ДатыПоследнихДвижений.Сотрудник = БухучетПлановыхНачислений.Сотрудник
	|			И ДатыПоследнихДвижений.Организация = БухучетПлановыхНачислений.Организация
	|			И ДатыПоследнихДвижений.Период = БухучетПлановыхНачислений.Период
	|			И ДатыПоследнихДвижений.ДокументОснование = БухучетПлановыхНачислений.ДокументОснование
	|			И (БухучетПлановыхНачислений.Используется)
	|			И (БухучетПлановыхНачислений.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ИЛИ БухучетПлановыхНачислений.ДействуетДо >= ДатыПоследнихДвижений.ДатаНачала)
	|			И (БухучетПлановыхНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|				ИЛИ &ИспользоватьСтатьиФинансирования
	|					И БухучетПлановыхНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|				ИЛИ &РаботаВБюджетномУчреждении
	|					И БухучетПлановыхНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатыПоследнихДвижений.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНастройкиДатыПоследнихДвижений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетПервичногоДокументаПараметр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки,
	|	НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации,
	|	НастройкиБухучетаПервичныхДокументов.Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПервичныхДокументов.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПервичныхДокументов.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.СтатьяРасходов
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяРасходов
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НастройкиБухучетаПервичныхДокументов.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПервичныхДокументов.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ) КАК СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	ЕСТЬNULL(НастройкиНачислений.СпособРасчетаПоСреднемуЗаработку, ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ПустаяСсылка)) КАК СпособРасчетаПоСреднемуЗаработку
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоДокументамИПлановые
	|ИЗ
	|	ВТНастройкиБухучетаПервичныхДокументов КАК НастройкиБухучетаПервичныхДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаПлановыхНачислений КАК НастройкиБухучетаПлановыхНачислений
	|		ПО НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки = НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО НастройкиБухучетаПервичныхДокументов.Начисление = СведенияОБухучетеНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО НастройкиБухучетаПервичныхДокументов.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки,
	|	НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации,
	|	НастройкиБухучетаПлановыхНачислений.Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА НастройкиБухучетаПлановыхНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СтатьяРасходов
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА НастройкиБухучетаПлановыхНачислений.СпособОтраженияЗарплатыВБухучете
	|		КОГДА ЕСТЬNULL(СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ,
	|	ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ),
	|	ЕСТЬNULL(НастройкиНачислений.СпособРасчетаПоСреднемуЗаработку, ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ПустаяСсылка))
	|ИЗ
	|	ВТНастройкиБухучетаПлановыхНачислений КАК НастройкиБухучетаПлановыхНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаПервичныхДокументов КАК НастройкиБухучетаПервичныхДокументов
	|		ПО НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки = НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО НастройкиБухучетаПлановыхНачислений.Начисление = СведенияОБухучетеНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО НастройкиБухучетаПлановыхНачислений.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО НастройкиБухучетаПлановыхНачислений.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|ГДЕ
	|	НастройкиБухучетаПервичныхДокументов.ИдентификаторСтроки ЕСТЬ NULL ";
	Запрос.Выполнить();
	
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВТНастройкиБухучетаПлановыхНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНастройкиБухучетаПервичныхДокументов";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийИзНастроекНачисления(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СписокНачислений.Начисление
	|ПОМЕСТИТЬ ВТНачисленияКакЗаданоВидуРасчета
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО (Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета))
	|			И СписокНачислений.Начисление = Начисления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО СписокНачислений.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиКУдалению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации,
	|	СписокНачислений.Начисление,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА СведенияОБухучетеНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА СведенияОБухучетеНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ) КАК СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	ЕСТЬNULL(НастройкиНачислений.СпособРасчетаПоСреднемуЗаработку, ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ПустаяСсылка)) КАК СпособРасчетаПоСреднемуЗаработку
	|ПОМЕСТИТЬ ВТБухучетНачисленийИзНастроекНачисления
	|ИЗ
	|	ВТНачисленияКакЗаданоВидуРасчета КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО СписокНачислений.Начисление = СведенияОБухучетеНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО СписокНачислений.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО СписокНачислений.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки";
	Запрос.Выполнить();	

	Запрос.Текст = "
	|УНИЧТОЖИТЬ ВТНачисленияКакЗаданоВидуРасчета";
	Запрос.Выполнить();	
	
КонецПроцедуры

Процедура СоздатьВТБухучетРасходыПоСтрахованию(Запрос, КоэффициентыРаспределенияСреднегоЗаработкаФСС)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Начисление,
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ВидОперации,
	|	Начисления.ДокументОснование,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ СведенияОБухучетеНачислений.СтатьяФинансирования ЕСТЬ NULL 
	|						И СведенияОБухучетеНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|					ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|				ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НЕ СведенияОБухучетеНачислений.СтатьяРасходов ЕСТЬ NULL 
	|						И СведенияОБухучетеНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|					ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|				ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА Начисления.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюРаботодатель)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете ЕСТЬ NULL 
	|							И СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|						ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|					ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|				КОНЕЦ
	|		КОГДА Начисления.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете ЕСТЬ NULL 
	|							И СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|						ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|					ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА Начисления.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюРаботодатель)
	|			ТОГДА НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку
	|		КОГДА НастройкиНачислений.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	Начисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетРасходыПоСтрахованиюВременная
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО Начисления.Начисление = СведенияОБухучетеНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|ГДЕ
	|	Начисления.ВидОперации В(&РасходыПоСтрахованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисления.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетРасходыПоСтрахованиюВременная.ИдентификаторСтроки,
	|	БухучетРасходыПоСтрахованиюВременная.Начисление,
	|	БухучетРасходыПоСтрахованиюВременная.ПериодРегистрации,
	|	БухучетРасходыПоСтрахованиюВременная.Организация,
	|	БухучетРасходыПоСтрахованиюВременная.Сотрудник,
	|	БухучетРасходыПоСтрахованиюВременная.ФизическоеЛицо,
	|	БухучетРасходыПоСтрахованиюВременная.Подразделение,
	|	БухучетРасходыПоСтрахованиюВременная.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетРасходыПоСтрахованиюВременная.ДатаНачала,
	|	БухучетРасходыПоСтрахованиюВременная.ДатаОкончания,
	|	БухучетРасходыПоСтрахованиюВременная.ВидОперации,
	|	БухучетРасходыПоСтрахованиюВременная.ДокументОснование,
	|	БухучетРасходыПоСтрахованиюВременная.СтатьяФинансирования,
	|	БухучетРасходыПоСтрахованиюВременная.СтатьяРасходов,
	|	БухучетРасходыПоСтрахованиюВременная.СпособОтраженияЗарплатыВБухучете,
	|	БухучетРасходыПоСтрахованиюВременная.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетРасходыПоСтрахованиюВременная.Сумма
	|ИЗ
	|	ВТБухучетРасходыПоСтрахованиюВременная КАК БухучетРасходыПоСтрахованиюВременная
	|ГДЕ
	|	БухучетРасходыПоСтрахованиюВременная.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку"; 
	
	РезультатПоБазе = Запрос.Выполнить();
	
	ТаблицаБухучетНачисленияПоБазе = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	ТаблицаБухучетНачисленияПоБазе.Колонки.НачислениеУдержание.Имя = "Начисление";  
	ТаблицаБухучетНачисленияПоБазе.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТаблицаБухучетНачисленияПоБазе.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	
	Если Не РезультатПоБазе.Пустой() Тогда
		
		НачисленияПоБазе = РезультатПоБазе.Выгрузить();
		КоэффициентыРаспределенияСреднегоЗаработкаФСС.Индексы.Добавить("ИдентификаторСтроки");
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Для каждого СтрокаНачисления Из НачисленияПоБазе Цикл
			
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаНачисления);
			СтрокиОтражения = КоэффициентыРаспределенияСреднегоЗаработкаФСС.НайтиСтроки(Отбор);
			Если СтрокиОтражения.Количество() = 0 Тогда
				// получим коэффициенты для всего документа
				Отбор.ИдентификаторСтроки =  0;
				СтрокиОтражения = КоэффициентыРаспределенияСреднегоЗаработкаФСС.НайтиСтроки(Отбор);	
			КонецЕсли;	
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"Результат");
			Результаты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = Результаты[Индекс];
				Если ЗначениеЗаполнено(СтрокаОтражения.СтатьяФинансирования) Тогда
					СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
				КонецЕсли;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетНачисленияПоБазе", ТаблицаБухучетНачисленияПоБазе);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазе
	|ИЗ
	|	&ТаблицаБухучетНачисленияПоБазе КАК БухучетНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ПОМЕСТИТЬ ВТБухучетРасходыПоСтрахованию
	|ИЗ
	|	ВТБухучетНачисленияПоБазе КАК БухучетНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ИЗ
	|	ВТБухучетРасходыПоСтрахованиюВременная КАК БухучетНачислений
	|ГДЕ
	|	НЕ БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетРасходыПоСтрахованиюВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияПоБазе";
	Запрос.Выполнить();

КонецПроцедуры

Процедура СоздатьВТБухучетНачисленийБезРаспределяемыхПоБазе(Запрос, КоэффициентыРаспределенияСреднегоЗаработка)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	НастройкиБухучетаСотрудников.СтатьяРасходов,
	|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ) КАК СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	ЕСТЬNULL(НастройкиНачислений.СпособРасчетаПоСреднемуЗаработку, ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОтпуска.ПустаяСсылка)) КАК СпособРасчетаПоСреднемуЗаработку
	|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|			И Начисления.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетНачислений.СпособРасчетаПоСреднемуЗаработку
	|ИЗ
	|	ВТБухучетНачисленийПоДокументамИПлановые КАК БухучетНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетНачислений.СпособРасчетаПоСреднемуЗаработку
	|ИЗ
	|	ВТБухучетНачисленийИзНастроекНачисления КАК БухучетНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетНачислений.СпособРасчетаПоСреднемуЗаработку
	|ИЗ
	|	ВТБухучетКомпенсацийЗаЗадержкуЗарплаты КАК БухучетНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетНачислений.СпособРасчетаПоСреднемуЗаработку,
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Начисление,
	|	Начисления.ВидОперации,
	|	Начисления.ДокументОснование,
	|	Начисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетЕстьСтатьяФинансирования
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО БухучетНачислений.ИдентификаторСтроки = Начисления.ИдентификаторСтроки
	|			И БухучетНачислений.ТерриторияВыполненияРаботВОрганизации = Начисления.ТерриторияВыполненияРаботВОрганизации
	|ГДЕ
	|	НЕ &ИспользоватьСтатьиФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетНачислений.СпособРасчетаПоСреднемуЗаработку,
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Начисление,
	|	Начисления.ВидОперации,
	|	Начисления.ДокументОснование,
	|	Начисления.Сумма
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО БухучетНачислений.ИдентификаторСтроки = Начисления.ИдентификаторСтроки
	|			И БухучетНачислений.ТерриторияВыполненияРаботВОрганизации = Начисления.ТерриторияВыполненияРаботВОрганизации
	|ГДЕ
	|	&ИспользоватьСтатьиФинансирования
	|	И НЕ БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	|	БухучетНачислений.СпособРасчетаПоСреднемуЗаработку,
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.Начисление,
	|	Начисления.ВидОперации,
	|	Начисления.ДокументОснование,
	|	Начисления.Сумма
	|ИЗ
	|	ВТБухучетНачисленийВременная КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО БухучетНачислений.ИдентификаторСтроки = Начисления.ИдентификаторСтроки
	|			И БухучетНачислений.ТерриторияВыполненияРаботВОрганизации = Начисления.ТерриторияВыполненияРаботВОрганизации
	|ГДЕ
	|	&ИспользоватьСтатьиФинансирования
	|	И БухучетНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	И БухучетНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВТСтрокиКУдалению
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТБухучетНачисленийИзНастроекНачисления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТБухучетКомпенсацийЗаЗадержкуЗарплаты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТБухучетНачисленийПоДокументамИПлановые
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	БухучетНачисленийВременная.ИдентификаторСтроки,
	               |	НастройкиБухучетаСотрудников.СтатьяФинансирования,
	               |	БухучетНачисленийВременная.СтатьяРасходов,
	               |	БухучетНачисленийВременная.СпособОтраженияЗарплатыВБухучете,
	               |	БухучетНачисленийВременная.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку,
	               |	БухучетНачисленийВременная.СпособРасчетаПоСреднемуЗаработку,
	               |	Начисления.ПериодРегистрации,
	               |	Начисления.Организация,
	               |	Начисления.Сотрудник,
	               |	Начисления.ФизическоеЛицо,
	               |	Начисления.Подразделение,
	               |	Начисления.ТерриторияВыполненияРаботВОрганизации,
	               |	Начисления.ДатаНачала,
	               |	Начисления.ДатаОкончания,
	               |	Начисления.ВидОперации,
	               |	Начисления.Начисление,
	               |	Начисления.ДокументОснование,
	               |	Начисления.Сумма
	               |ИЗ
	               |	ВТБухучетНачисленийВременная КАК БухучетНачисленийВременная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	               |		ПО БухучетНачисленийВременная.ИдентификаторСтроки = Начисления.ИдентификаторСтроки
	               |			И БухучетНачисленийВременная.ТерриторияВыполненияРаботВОрганизации = Начисления.ТерриторияВыполненияРаботВОрганизации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	               |		ПО (Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки)
	               |			И (Начисления.ТерриторияВыполненияРаботВОрганизации = НастройкиБухучетаСотрудников.ТерриторияВыполненияРаботВОрганизации)
	               |ГДЕ
	               |	&ИспользоватьСтатьиФинансирования
	               |	И БухучетНачисленийВременная.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	               |	И БухучетНачисленийВременная.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку";
	
	РезультатПоБазе = Запрос.Выполнить();
	
	ТаблицаБухучетНачисленияПоБазе = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	ТаблицаБухучетНачисленияПоБазе.Колонки.НачислениеУдержание.Имя = "Начисление";  
	ТаблицаБухучетНачисленияПоБазе.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТаблицаБухучетНачисленияПоБазе.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	
	Если Не РезультатПоБазе.Пустой() Тогда
		
		НачисленияПоБазе = РезультатПоБазе.Выгрузить();
		
		Отбор = Новый Структура("СпособРасчета");
		Для каждого СтрокаНачисления Из НачисленияПоБазе Цикл
			
			Отбор.СпособРасчета = СтрокаНачисления.СпособРасчетаПоСреднемуЗаработку;;
			СтрокиОтражения = КоэффициентыРаспределенияСреднегоЗаработка.НайтиСтроки(Отбор);
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"Результат");
			Результаты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = Результаты[Индекс];
				Если ЗначениеЗаполнено(СтрокаОтражения.СтатьяФинансирования) Тогда
					СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
				КонецЕсли;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетНачисленияПоБазе", ТаблицаБухучетНачисленияПоБазе);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазе
	|ИЗ
	|	&ТаблицаБухучетНачисленияПоБазе КАК БухучетНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ПОМЕСТИТЬ ВТБухучетВременная
	|ИЗ
	|	ВТБухучетНачисленияПоБазе КАК БухучетНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ИЗ
	|	ВТБухучетЕстьСтатьяФинансирования КАК БухучетНачислений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма
	|ИЗ
	|	ВТБухучетРасходыПоСтрахованию КАК БухучетНачислений
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	БухучетНачислений.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетНачислений.ДатаНачала < БухучетНачислений.ПериодРегистрации
	|			ТОГДА БухучетНачислений.ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачислений.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сумма  КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийБезРаспределяемыхПоБазе
	|ИЗ
	|	ВТБухучетВременная КАК БухучетНачислений
	|";
	
	Запрос.Выполнить(); 	
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТБухучетНачисленияПоБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетЕстьСтатьяФинансирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетРасходыПоСтрахованию
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетВременная";
	
	Запрос.Выполнить(); 	
	
КонецПроцедуры

Процедура СоздатьВТБухучетНачисленияПоБазе(Запрос)

	ТаблицаБухучетНачисленияПоБазеСвод = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	ТаблицаБухучетНачисленияПоБазеСвод.Колонки.НачислениеУдержание.Имя = "Начисление";
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТНачисленияПоБазе.ОчередностьОтраженияВУчете КАК ОчередностьОтраженияВУчете
		|ИЗ
		|	ВТНачисленияПоБазе КАК ВТНачисленияПоБазе
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОчередностьОтраженияВУчете";
	
	РезультатОчередностьРаспределенияПоБазе = Запрос.Выполнить();
	
	Если Не РезультатОчередностьРаспределенияПоБазе.Пустой() Тогда
	
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	БухучетНачисления.Организация,
			|	БухучетНачисления.Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо,
			|	БухучетНачисления.Подразделение,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.НачислениеУдержание КАК Начисление,
			|	БухучетНачисления.ВидОперации,
			|	БухучетНачисления.ДатаНачала,
			|	БухучетНачисления.ДатаОкончания,
			|	БухучетНачисления.ДокументОснование,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов,
			|	БухучетНачисления.Сумма
			|ПОМЕСТИТЬ ВТБухучетНачисленийИзФормы
			|ИЗ
			|	&БухучетНачисленийИзФормы КАК БухучетНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетНачисления.Организация,
			|	БухучетНачисления.Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо,
			|	БухучетНачисления.Подразделение,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.Начисление,
			|	БухучетНачисления.ДатаНачала,
			|	БухучетНачисления.ДатаОкончания,
			|	БухучетНачисления.ДокументОснование,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов,
			|	БухучетНачисления.Сумма
			|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
			|ИЗ
			|	ВТБухучетНачисленийБезРаспределяемыхПоБазе КАК БухучетНачисления
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БухучетНачисления.Организация,
			|	БухучетНачисления.Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо,
			|	БухучетНачисления.Подразделение,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.НачислениеУдержание,
			|	БухучетНачисления.ДатаНачала,
			|	БухучетНачисления.ДатаОкончания,
			|	БухучетНачисления.ДокументОснование,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов,
			|	БухучетНачисления.Сумма
			|ИЗ
			|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
			|ГДЕ
			|	БухучетНачисления.Организация = &Организация
			|	И БухучетНачисления.Период = &ПериодРегистрации
			|	И БухучетНачисления.Регистратор <> &ДокументСсылка
			|	И БухучетНачисления.Сотрудник В
			|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				НачисленияПоБазе.Сотрудник
			|			ИЗ
			|				ВТНачисленияПоБазе КАК НачисленияПоБазе)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БухучетНачисленийФормы.Организация,
			|	БухучетНачисленийФормы.Сотрудник,
			|	БухучетНачисленийФормы.ФизическоеЛицо,
			|	БухучетНачисленийФормы.Подразделение,
			|	БухучетНачисленийФормы.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисленийФормы.Начисление,
			|	БухучетНачисленийФормы.ДатаНачала,
			|	БухучетНачисленийФормы.ДатаОкончания,
			|	БухучетНачисленийФормы.ДокументОснование,
			|	БухучетНачисленийФормы.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисленийФормы.СтатьяФинансирования,
			|	БухучетНачисленийФормы.СтатьяРасходов,
			|	БухучетНачисленийФормы.Сумма
			|ИЗ
			|	ВТБухучетНачисленийИзФормы КАК БухучетНачисленийФормы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.Организация,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.Сотрудник,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.ФизическоеЛицо,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.Подразделение,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.Начисление,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.ДатаНачала,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.ДатаОкончания,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.ДокументОснование,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.СпособОтраженияЗарплатыВБухучете,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.СтатьяФинансирования,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.СтатьяРасходов,
			|	БухучетОсновногоЗаработкаРаспределениеПоПодразделению.Сумма
			|ИЗ
			|	ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению КАК БухучетОсновногоЗаработкаРаспределениеПоПодразделению
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БухучетОсновногоЗаработка.Организация,
			|	БухучетОсновногоЗаработка.Сотрудник,
			|	БухучетОсновногоЗаработка.ФизическоеЛицо,
			|	БухучетОсновногоЗаработка.Подразделение,
			|	БухучетОсновногоЗаработка.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетОсновногоЗаработка.Начисление,
			|	БухучетОсновногоЗаработка.ДатаНачала,
			|	БухучетОсновногоЗаработка.ДатаОкончания,
			|	БухучетОсновногоЗаработка.ДокументОснование,
			|	БухучетОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете,
			|	БухучетОсновногоЗаработка.СтатьяФинансирования,
			|	БухучетОсновногоЗаработка.СтатьяРасходов,
			|	БухучетОсновногоЗаработка.Сумма
			|ИЗ
			|	ВТБухучетОсновногоЗаработка КАК БухучетОсновногоЗаработка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Начисления.Регистратор КАК Регистратор,
			|	Начисления.НомерСтроки КАК НомерСтроки,
			|	НачисленияПоБазе.ИдентификаторСтроки,
			|	НачисленияПоБазе.ОчередностьОтраженияВУчете,
			|	НачисленияПоБазе.Сотрудник,
			|	НачисленияПоБазе.ФизическоеЛицо,
			|	НачисленияПоБазе.Начисление КАК ВидРасчета,
			|	НачисленияПоБазе.ДатаНачала,
			|	НачисленияПоБазе.ДатаОкончания
			|ПОМЕСТИТЬ ВТНачисленияПоБазеИзРегистраРасчета
			|ИЗ
			|	ВТНачисленияПоБазе КАК НачисленияПоБазе
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
			|		ПО (Начисления.ПериодРегистрации = НачисленияПоБазе.ПериодРегистрации)
			|			И (Начисления.Организация = НачисленияПоБазе.Организация)
			|			И (Начисления.Сотрудник = НачисленияПоБазе.Сотрудник)
			|			И (Начисления.ВидРасчета = НачисленияПоБазе.Начисление)
			|			И (Начисления.ПериодДействияНачало = НачисленияПоБазе.ДатаНачала)
			|			И (НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ) = НачисленияПоБазе.ДатаОкончания)
			|			И (Начисления.Регистратор <> &ДокументСсылка)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтборНачислений.Регистратор,
			|	ОтборНачислений.НомерСтроки
			|ПОМЕСТИТЬ ВТОтборНачислений
			|ИЗ
			|	ВТНачисленияПоБазеИзРегистраРасчета КАК ОтборНачислений";
			
		Запрос.Выполнить();	
	
		РасчетЗарплатыРасширенный.СоздатьВТРасчетнаяБазаНачисленийПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц, Запрос.Параметры.ДокументСсылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетнаяБаза.Регистратор,
		|	РасчетнаяБаза.НомерСтроки,
		|	РасчетнаяБаза.ВидРасчетаРазрез,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, ДЕНЬ) КАК ДатаНачала,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ) КАК ДатаОкончания,
		|	СУММА(РасчетнаяБаза.РезультатБаза) КАК РезультатБаза
		|ПОМЕСТИТЬ ВТРасчетнаяБазаСПериодом
		|ИЗ
		|	ВТРасчетнаяБаза КАК РасчетнаяБаза
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО РасчетнаяБаза.РегистраторРазрез = Начисления.Регистратор
		|			И РасчетнаяБаза.НомерСтрокиРазрез = Начисления.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетнаяБаза.Регистратор,
		|	РасчетнаяБаза.НомерСтроки,
		|	РасчетнаяБаза.ВидРасчетаРазрез,
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияНачало, ДЕНЬ),
		|	НАЧАЛОПЕРИОДА(Начисления.ПериодДействияКонец, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияПоБазе.ИдентификаторСтроки,
		|	НачисленияПоБазе.ОчередностьОтраженияВУчете,
		|	База.РезультатБаза КАК РезультатБаза,
		|	НачисленияПоБазе.Сотрудник КАК СотрудникБаза,
		|	НачисленияПоБазе.ФизическоеЛицо КАК ФизическоеЛицоБаза,
		|	База.ВидРасчетаРазрез КАК НачислениеБаза,
		|	База.ДатаНачала КАК ДатаНачалаБаза,
		|	База.ДатаОкончания КАК ДатаОкончанияБаза
		|ПОМЕСТИТЬ ВТБазовыеНачисления
		|ИЗ
		|	ВТНачисленияПоБазеИзРегистраРасчета КАК НачисленияПоБазе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасчетнаяБазаСПериодом КАК База
		|		ПО НачисленияПоБазе.Регистратор = База.Регистратор
		|			И НачисленияПоБазе.НомерСтроки = База.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияПоБазеИзРегистраРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРасчетнаяБаза
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРасчетнаяБазаСПериодом
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийИзФормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОтборНачислений"; 
		Запрос.Выполнить();
		
		Выборка = РезультатОчередностьРаспределенияПоБазе.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ОчередностьОтраженияВУчете = Выборка.ОчередностьОтраженияВУчете;
			Запрос.УстановитьПараметр("ОчередностьОтраженияВУчете", ОчередностьОтраженияВУчете);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	БазаНачислений.ИдентификаторСтроки,
			|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачислений.СтатьяФинансирования,
			|	БухучетНачислений.СтатьяРасходов,
			|	БазаНачислений.НачислениеБаза,
			|	БазаНачислений.РезультатБаза,
			|	БухучетНачислений.Сумма КАК СуммаБУ
			|ПОМЕСТИТЬ ВТБазовыеНачисленияБУ
			|ИЗ
			|	ВТБазовыеНачисления КАК БазаНачислений
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачисленийВременная КАК БухучетНачислений
			|		ПО БазаНачислений.СотрудникБаза = БухучетНачислений.Сотрудник
			|			И БазаНачислений.ФизическоеЛицоБаза = БухучетНачислений.ФизическоеЛицо
			|			И БазаНачислений.НачислениеБаза = БухучетНачислений.Начисление
			|			И БазаНачислений.ДатаНачалаБаза = БухучетНачислений.ДатаНачала
			|			И БазаНачислений.ДатаОкончанияБаза = БухучетНачислений.ДатаОкончания
			|ГДЕ
			|	БазаНачислений.ОчередностьОтраженияВУчете = &ОчередностьОтраженияВУчете
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.НачислениеБаза,
			|	СУММА(БазовыеНачисленияБУ.СуммаБУ) КАК СуммаБУ
			|ПОМЕСТИТЬ ВТБазовыеНачисленияБУСвод
			|ИЗ
			|	ВТБазовыеНачисленияБУ КАК БазовыеНачисленияБУ
			|
			|СГРУППИРОВАТЬ ПО
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.НачислениеБаза
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.СпособОтраженияЗарплатыВБухучете,
			|	БазовыеНачисленияБУ.СтатьяФинансирования,
			|	БазовыеНачисленияБУ.СтатьяРасходов,
			|	СУММА(ВЫБОР
			|			КОГДА ВТБазовыеНачисленияБУСвод.СуммаБУ = 0
			|				ТОГДА 0
			|			ИНАЧЕ ВЫРАЗИТЬ(БазовыеНачисленияБУ.РезультатБаза * БазовыеНачисленияБУ.СуммаБУ / ВТБазовыеНачисленияБУСвод.СуммаБУ КАК ЧИСЛО(25, 10))
			|		КОНЕЦ) КАК Сумма
			|ПОМЕСТИТЬ ВТБазовыеНачисленияБУКоэффициенты
			|ИЗ
			|	ВТБазовыеНачисленияБУ КАК БазовыеНачисленияБУ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазовыеНачисленияБУСвод КАК ВТБазовыеНачисленияБУСвод
			|		ПО БазовыеНачисленияБУ.ИдентификаторСтроки = ВТБазовыеНачисленияБУСвод.ИдентификаторСтроки
			|			И БазовыеНачисленияБУ.НачислениеБаза = ВТБазовыеНачисленияБУСвод.НачислениеБаза
			|
			|СГРУППИРОВАТЬ ПО
			|	БазовыеНачисленияБУ.ИдентификаторСтроки,
			|	БазовыеНачисленияБУ.СпособОтраженияЗарплатыВБухучете,
			|	БазовыеНачисленияБУ.СтатьяФинансирования,
			|	БазовыеНачисленияБУ.СтатьяРасходов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НачисленияПоБазе.ИдентификаторСтроки,
			|	НачисленияПоБазе.Сумма,
			|	НачисленияБУ.СтатьяФинансирования,
			|	НачисленияБУ.СтатьяРасходов,
			|	НачисленияБУ.СпособОтраженияЗарплатыВБухучете,
			|	НачисленияБУ.Сумма КАК СуммаБУ
			|ПОМЕСТИТЬ ВТНачисленияПоБазеБУКоэффициенты
			|ИЗ
			|	ВТНачисленияПоБазе КАК НачисленияПоБазе
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазовыеНачисленияБУКоэффициенты КАК НачисленияБУ
			|		ПО НачисленияПоБазе.ИдентификаторСтроки = НачисленияБУ.ИдентификаторСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НачисленияПоБазе.ИдентификаторСтроки,
			|	СУММА(НачисленияПоБазе.СуммаБУ) КАК СуммаБУ
			|ПОМЕСТИТЬ ВТНачисленияПоБазеБУКоэффициентыСвод
			|ИЗ
			|	ВТНачисленияПоБазеБУКоэффициенты КАК НачисленияПоБазе
			|
			|СГРУППИРОВАТЬ ПО
			|	НачисленияПоБазе.ИдентификаторСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Начисления.ИдентификаторСтроки,
			|	Начисления.СтатьяФинансирования,
			|	Начисления.СтатьяРасходов,
			|	Начисления.СпособОтраженияЗарплатыВБухучете,
			|	ВЫБОР
			|		КОГДА НачисленияСвод.СуммаБУ = 0
			|			ТОГДА 0
			|		ИНАЧЕ ВЫРАЗИТЬ(Начисления.Сумма * Начисления.СуммаБУ / НачисленияСвод.СуммаБУ КАК ЧИСЛО(25, 10))
			|	КОНЕЦ КАК База
			|ИЗ
			|	ВТНачисленияПоБазеБУКоэффициенты КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияПоБазеБУКоэффициентыСвод КАК НачисленияСвод
			|		ПО Начисления.ИдентификаторСтроки = НачисленияСвод.ИдентификаторСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НачисленияПоБазе.ПериодРегистрации,
			|	НачисленияПоБазе.Организация,
			|	НачисленияПоБазе.Сотрудник,
			|	НачисленияПоБазе.ФизическоеЛицо,
			|	НачисленияПоБазе.Подразделение,
			|	НачисленияПоБазе.Начисление,
			|	НачисленияПоБазе.ВидОперации,
			|	НачисленияПоБазе.ДатаНачала,
			|	НачисленияПоБазе.ДатаОкончания,
			|	НачисленияПоБазе.Сумма,
			|	НачисленияПоБазе.ДокументОснование,
			|	НачисленияПоБазе.ИдентификаторСтроки,
			|	НачисленияПоБазе.ТерриторияВыполненияРаботВОрганизации,
			|	НастройкиБухучетаСотрудников.СтатьяФинансирования,
			|	НастройкиБухучетаСотрудников.СтатьяРасходов,
			|	НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
			|ИЗ
			|	ВТНачисленияПоБазе КАК НачисленияПоБазе
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
			|		ПО НачисленияПоБазе.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
			|ГДЕ
			|	НачисленияПоБазе.ОчередностьОтраженияВУчете = &ОчередностьОтраженияВУчете";
			
			Пакет = Запрос.ВыполнитьПакет();
			КоличествоРезультатов = Пакет.ВГраница();
			
			ТаблицаКоэффициентов = Пакет[КоличествоРезультатов-1].Выгрузить();
			ТаблицаКоэффициентов.Индексы.Добавить("ИдентификаторСтроки");
			
			НачисленияПоБазе = Пакет[КоличествоРезультатов].Выгрузить();
			
			ТаблицаБухучетНачисленияПоБазе = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
			ТаблицаБухучетНачисленияПоБазе.Колонки.НачислениеУдержание.Имя = "Начисление";
			
			Отбор = Новый Структура("ИдентификаторСтроки");
			Для каждого СтрокаНачисления Из НачисленияПоБазе Цикл
				
				ЗаполнитьЗначенияСвойств(Отбор, СтрокаНачисления);
				СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
				Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"База");
				Результаты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
				
				Если Результаты = Неопределено Тогда
					СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
					Продолжить;
				КонецЕсли;
				
				Индекс = 0;
				Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
					
					СтрокаТаблицы = ТаблицаБухучетНачисленияПоБазе.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
					СтрокаТаблицы.Сумма = Результаты[Индекс];
					СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
					СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
					СтрокаТаблицы.СтатьяРасходов = СтрокаОтражения.СтатьяРасходов;
					
					Индекс = Индекс + 1;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(ТаблицаБухучетНачисленияПоБазе, ТаблицаБухучетНачисленияПоБазеСвод);
			
			Запрос.УстановитьПараметр("ТаблицаБухучетНачисления", ТаблицаБухучетНачисленияПоБазе);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	БухучетНачисления.Организация,
			|	БухучетНачисления.Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо,
			|	БухучетНачисления.Подразделение,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.Начисление,
			|	БухучетНачисления.ДатаНачала,
			|	БухучетНачисления.ДатаОкончания,
			|	БухучетНачисления.ДокументОснование,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов,
			|	БухучетНачисления.Сумма
			|ПОМЕСТИТЬ ВТБухучетНачисленийВременнаяНовая
			|ИЗ
			|	ВТБухучетНачисленийВременная КАК БухучетНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетНачисления.ИдентификаторСтроки,
			|	&ПериодРегистрации КАК ПериодРегистрации,
			|	БухучетНачисления.Организация,
			|	БухучетНачисления.Сотрудник,
			|	БухучетНачисления.ФизическоеЛицо,
			|	БухучетНачисления.Подразделение,
			|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисления.Начисление,
			|	БухучетНачисления.ВидОперации,
			|	БухучетНачисления.ДатаНачала,
			|	БухучетНачисления.ДатаОкончания,
			|	БухучетНачисления.ДокументОснование,
			|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисления.СтатьяФинансирования,
			|	БухучетНачисления.СтатьяРасходов,
			|	БухучетНачисления.Сумма
			|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазеПоОчередности
			|ИЗ
			|	&ТаблицаБухучетНачисления КАК БухучетНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	БухучетНачисленийВременнаяНовая.Организация КАК Организация,
			|	БухучетНачисленийВременнаяНовая.Сотрудник КАК Сотрудник,
			|	БухучетНачисленийВременнаяНовая.ФизическоеЛицо КАК ФизическоеЛицо,
			|	БухучетНачисленийВременнаяНовая.Подразделение КАК Подразделение,
			|	БухучетНачисленийВременнаяНовая.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисленийВременнаяНовая.Начисление КАК Начисление,
			|	БухучетНачисленийВременнаяНовая.ДатаНачала КАК ДатаНачала,
			|	БухучетНачисленийВременнаяНовая.ДатаОкончания КАК ДатаОкончания,
			|	БухучетНачисленийВременнаяНовая.ДокументОснование КАК ДокументОснование,
			|	БухучетНачисленийВременнаяНовая.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисленийВременнаяНовая.СтатьяФинансирования КАК СтатьяФинансирования,
			|	БухучетНачисленийВременнаяНовая.СтатьяРасходов КАК СтатьяРасходов,
			|	БухучетНачисленийВременнаяНовая.Сумма КАК Сумма
			|ПОМЕСТИТЬ ВТБухучетНачисленийВременная
			|ИЗ
			|	ВТБухучетНачисленийВременнаяНовая КАК БухучетНачисленийВременнаяНовая
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	БухучетНачисленияПоБазеПоОчередности.Организация,
			|	БухучетНачисленияПоБазеПоОчередности.Сотрудник,
			|	БухучетНачисленияПоБазеПоОчередности.ФизическоеЛицо,
			|	БухучетНачисленияПоБазеПоОчередности.Подразделение,
			|	БухучетНачисленияПоБазеПоОчередности.ТерриторияВыполненияРаботВОрганизации,
			|	БухучетНачисленияПоБазеПоОчередности.Начисление,
			|	БухучетНачисленияПоБазеПоОчередности.ДатаНачала,
			|	БухучетНачисленияПоБазеПоОчередности.ДатаОкончания,
			|	БухучетНачисленияПоБазеПоОчередности.ДокументОснование,
			|	БухучетНачисленияПоБазеПоОчередности.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачисленияПоБазеПоОчередности.СтатьяФинансирования,
			|	БухучетНачисленияПоБазеПоОчередности.СтатьяРасходов,
			|	БухучетНачисленияПоБазеПоОчередности.Сумма
			|ИЗ
			|	ВТБухучетНачисленияПоБазеПоОчередности КАК БухучетНачисленияПоБазеПоОчередности
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленияПоБазеБУКоэффициентыСвод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленияПоБазеБУКоэффициенты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБазовыеНачисленияБУКоэффициенты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБазовыеНачисленияБУСвод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБазовыеНачисленияБУ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачисленияПоБазеПоОчередности
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачисленийВременнаяНовая";
			
			Запрос.Выполнить();
			
		КонецЦикла;
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТБазовыеНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийВременная";
		Запрос.Выполнить();
		
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("ТаблицаБухучетНачисления", ТаблицаБухучетНачисленияПоБазеСвод);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БухучетНачисления.ИдентификаторСтроки,
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазеТаблица
	|ИЗ
	|	&ТаблицаБухучетНачисления КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачисления.ИдентификаторСтроки,
	|	БухучетНачисления.ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетНачисления.ДатаНачала < БухучетНачисления.ПериодРегистрации
	|			ТОГДА БухучетНачисления.ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленияПоБазе
	|ИЗ
	|	ВТБухучетНачисленияПоБазеТаблица КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияПоБазеТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияПоБазе";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению(Запрос)

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.Подразделение,
	|	Начисления.ПериодРегистрации
	|ПОМЕСТИТЬ ВТСтрокиКОбработке
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО Начисления.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиНачислений КАК НастройкиНачислений
	|		ПО Начисления.Начисление = НастройкиНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО (Начисления.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|				И (НастройкиБухучетаСотрудников.ЕстьБухучетСотрудника
	|					ИЛИ НастройкиБухучетаСотрудников.ЕстьБухучетТерритории))
	|ГДЕ
	|	СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL 
	|	И НЕ ЕСТЬNULL(НастройкиНачислений.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку, ЛОЖЬ)
	|	И НастройкиБухучетаСотрудников.ИдентификаторСтроки ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ИдентификаторСтроки,
	|	БухучетЗарплатыПодразделений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетЗарплатыПодразделений.СтатьяФинансирования,
	|	БухучетЗарплатыПодразделений.ДоляРаспределения
	|ПОМЕСТИТЬ ВТСтрокиОтражения
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныеПериоды.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		МаксимальныеПериоды.Подразделение КАК Подразделение,
	|		МаксимальныеПериоды.ПериодРегистрации КАК ПериодРегистрации,
	|		МаксимальныеПериоды.Период КАК Период
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СтрокиКОбработке.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|			СтрокиКОбработке.Подразделение КАК Подразделение,
	|			СтрокиКОбработке.ПериодРегистрации КАК ПериодРегистрации,
	|			МАКСИМУМ(БухучетЗарплатыПодразделений.Период) КАК Период
	|		ИЗ
	|			ВТСтрокиКОбработке КАК СтрокиКОбработке
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|				ПО СтрокиКОбработке.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|					И СтрокиКОбработке.ПериодРегистрации >= БухучетЗарплатыПодразделений.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СтрокиКОбработке.ИдентификаторСтроки,
	|			СтрокиКОбработке.Подразделение,
	|			СтрокиКОбработке.ПериодРегистрации) КАК МаксимальныеПериоды
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|			ПО МаксимальныеПериоды.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|				И МаксимальныеПериоды.Период = БухучетЗарплатыПодразделений.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныеПериоды.ИдентификаторСтроки,
	|		МаксимальныеПериоды.Подразделение,
	|		МаксимальныеПериоды.ПериодРегистрации,
	|		МаксимальныеПериоды.Период
	|	
	|	ИМЕЮЩИЕ
	|		КОЛИЧЕСТВО(БухучетЗарплатыПодразделений.ИдентификаторСтроки) > 1) КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.БухучетЗарплатыПодразделений КАК БухучетЗарплатыПодразделений
	|		ПО МаксимальныеПериоды.Подразделение = БухучетЗарплатыПодразделений.Подразделение
	|			И МаксимальныеПериоды.Период = БухучетЗарплатыПодразделений.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиОтражения.ИдентификаторСтроки,
	|	СтрокиОтражения.СтатьяФинансирования,
	|	СтрокиОтражения.СпособОтраженияЗарплатыВБухучете,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
	|	СтрокиОтражения.ДоляРаспределения КАК ДоляРаспределения
	|ИЗ
	|	ВТСтрокиОтражения КАК СтрокиОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ИдентификаторСтроки,
	|	Начисления.ПериодРегистрации,
	|	Начисления.Организация,
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ТерриторияВыполненияРаботВОрганизации,
	|	Начисления.ДатаНачала,
	|	Начисления.ДатаОкончания,
	|	Начисления.ВидОперации,
	|	Начисления.Начисление,
	|	Начисления.ДокументОснование,
	|	Начисления.Сумма КАК Сумма
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтрокиОтражения КАК СтрокиОтражения
	|		ПО Начисления.ИдентификаторСтроки = СтрокиОтражения.ИдентификаторСтроки";
	
	Результат = Запрос.ВыполнитьПакет();
	Распределение = Результат[2].Выгрузить();
	Начисления = Результат[3].Выгрузить();
	
	ТаблицаБухучетНачислений = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	ТаблицаБухучетНачислений.Колонки.НачислениеУдержание.Имя = "Начисление";  
	ТаблицаБухучетНачислений.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТаблицаБухучетНачислений.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));  
	
	Если Распределение.Количество() > 0 Тогда
		
		Распределение.Индексы.Добавить("ИдентификаторСтроки");
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Для каждого СтрокаНачисления Из Начисления Цикл
			
			Отбор.ИдентификаторСтроки = СтрокаНачисления.ИдентификаторСтроки;
			СтрокиОтражения = Распределение.НайтиСтроки(Отбор);
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"ДоляРаспределения");
			Результаты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаНачисления.Сумма, Коэффициенты);
			
			Если Результаты = Неопределено Тогда
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				Продолжить;
			КонецЕсли;
			
			Индекс = 0;
			Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
				
				СтрокаТаблицы = ТаблицаБухучетНачислений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаНачисления);
				СтрокаТаблицы.Сумма = Результаты[Индекс];
				СтрокаТаблицы.СтатьяФинансирования = СтрокаОтражения.СтатьяФинансирования;
				СтрокаТаблицы.СпособОтраженияЗарплатыВБухучете = СтрокаОтражения.СпособОтраженияЗарплатыВБухучете;
				СтрокаТаблицы.СтатьяРасходов = СтрокаОтражения.СтатьяРасходов;
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаБухучетНачислений", ТаблицаБухучетНачислений);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисления.ПериодРегистрации,
	|	БухучетНачисления.ИдентификаторСтроки,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.ПериодПринятияРасходов,
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделениюВременная
	|ИЗ
	|	&ТаблицаБухучетНачислений КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетОсновногоЗаработка.ПериодРегистрации,
	|	БухучетОсновногоЗаработка.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	БухучетОсновногоЗаработка.ТерриторияВыполненияРаботВОрганизации,
	|	ВЫБОР
	|		КОГДА БухучетОсновногоЗаработка.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетОсновногоЗаработка.ДатаНачала < БухучетОсновногоЗаработка.ПериодРегистрации
	|			ТОГДА БухучетОсновногоЗаработка.ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетОсновногоЗаработка.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	БухучетОсновногоЗаработка.Организация,
	|	БухучетОсновногоЗаработка.Сотрудник,
	|	БухучетОсновногоЗаработка.ФизическоеЛицо,
	|	БухучетОсновногоЗаработка.Подразделение,
	|	БухучетОсновногоЗаработка.Начисление,
	|	БухучетОсновногоЗаработка.ВидОперации,
	|	БухучетОсновногоЗаработка.ДатаНачала,
	|	БухучетОсновногоЗаработка.ДатаОкончания,
	|	БухучетОсновногоЗаработка.ДокументОснование,
	|	БухучетОсновногоЗаработка.Сумма,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьСтатьиФинансирования
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|		КОГДА БухучетОсновногоЗаработка.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетОсновногоЗаработка.СтатьяФинансирования
	|		КОГДА СведенияОБухучетеНачислений.СтатьяФинансирования <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		КОГДА БухучетОсновногоЗаработка.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА БухучетОсновногоЗаработка.СтатьяРасходов
	|		КОГДА СведенияОБухучетеНачислений.СтатьяРасходов <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА БухучетОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА БухучетОсновногоЗаработка.СпособОтраженияЗарплатыВБухучете
	|		КОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ НастройкиБухучетаСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете
	|ПОМЕСТИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению
	|ИЗ
	|	ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделениюВременная КАК БухучетОсновногоЗаработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО БухучетОсновногоЗаработка.Начисление = СведенияОБухучетеНачислений.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНастройкиБухучетаСотрудников КАК НастройкиБухучетаСотрудников
	|		ПО БухучетОсновногоЗаработка.ИдентификаторСтроки = НастройкиБухучетаСотрудников.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделениюВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиКУдалению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиОтражения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиКОбработке";
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует таблицу отражения в бухучете начислений - ВТБухучетНачислений.
//
//	МенеджерВременныхТаблиц должен содержать таблицу ВТНачисления.
//	Описание таблицы ВТНачисления
// 		ПериодРегистрации.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		Сумма
//		ДокументОснование
// 		ИдентификаторСтроки
//
// Поля таблицы ВТБухучетНачислений
// 		ПериодРегистрации
// 		ИдентификаторСтроки
// 		ФизическоеЛицо.
// 		Сотрудник
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		Сумма
// 		СпособОтраженияЗарплатыВБухучете
// 		ОблагаетсяЕНВД
// 		ВидНачисленияОплатыТрудаДляНУ.
//
// Параметры:
//		ДополнительныеПараметры - Структура
//			* ДокументСсылка  - ссылка на документ, начисления которого сейчас отражаем в бухучете.
//			* БухучетПервичногоДокумента - таблица значений содержит сведения о настройках бухучета, заданных в документе
//			                               ДокументСсылка.
//			* БухучетНачисленийИзФормы - таблица значений, содержит сведения о бухучете начислений документа,
//										 используется для отражения в бухучете зависимых начислений при редактировании документа.
//			* КоэффициентыРаспределенияСреднегоЗаработка - таблица значений, содержит сведения о распределении среднего
//			                                               заработка по статьям финансирования.
//
Процедура СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц, ДополнительныеПараметры = Неопределено) Экспорт
	
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ДополнительныеПараметры = ДополнительныеПараметрыДляОтраженияВБухучете();
	КонецЕсли;
	
	// ДокументСсылка - ссылка на документ, начисления которого сейчас отражаем в бухучете.
	// БухучетПервичногоДокумента - таблица значений содержит сведения о настройках бухучета, заданных в документе
	//                              ДокументСсылка.
	// БухучетНачисленийИзФормы - таблица значений, содержит сведения о бухучете начислений документа,
	//		 используется для отражения в бухучете зависимых начислений при редактировании документа.
	// КоэффициентыРаспределенияСреднегоЗаработка - таблица значений, содержит сведения о распределении среднего заработка
	//                                              по статьям финансирования.
	ДокументСсылка = ДополнительныеПараметры.ДокументСсылка;
	БухучетПервичногоДокумента = ДополнительныеПараметры.БухучетПервичногоДокумента;
	БухучетНачисленийИзФормы   = ДополнительныеПараметры.БухучетНачисленийИзФормы;
	КоэффициентыРаспределенияСреднегоЗаработка    = ДополнительныеПараметры.КоэффициентыРаспределенияСреднегоЗаработка;
	КоэффициентыРаспределенияСреднегоЗаработкаФСС = ДополнительныеПараметры.КоэффициентыРаспределенияСреднегоЗаработкаФСС;
	

	ИспользоватьСтатьиФинансирования = ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата();
	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ИспользоватьСтатьиФинансирования);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("БухучетПервичногоДокумента", БухучетПервичногоДокумента);
	Запрос.УстановитьПараметр("БухучетНачисленийИзФормы", БухучетНачисленийИзФормы);
		
	РасходыПоСтрахованию = Новый Массив;
	РасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюБюджет);
	РасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	РасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	РасходыПоСтрахованию.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюРаботодатель);
	Запрос.УстановитьПараметр("РасходыПоСтрахованию", РасходыПоСтрахованию);
	
	ОплатаПоДоговорам = Новый Массив;
	ОплатаПоДоговорам.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДоговорРаботыУслуги);
	ОплатаПоДоговорам.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДоговорАвторскогоЗаказа);
	Запрос.УстановитьПараметр("ОплатаПоДоговорам", ОплатаПоДоговорам);
	
	
	// ВТНастройкиНачислений
	// Таблица с настройками начислений
	СоздатьВТНастройкиНачислений(Запрос);
	
	// ВТБухучетНачисленийПоДоговорам
	// бухучет начислений по договорам ГПХ.
	СоздатьВТБухучетНачисленийПоДоговорам(Запрос);
	
	// ВТБухучетКомпенсацийЗаЗадержкуЗарплаты
	СоздатьВТБухучетКомпенсацийЗаЗадержкуЗарплаты(Запрос);
		
	// ВТНастройкиБухучетаСотрудников
	// настройки бухучета, указанные в сотруднике, подразделении, организации
	// будет использоваться как настройки бухучета по умолчанию.
	СоздатьВТНастройкиБухучетаСотрудников(Запрос);
	
	// ВТСведенияОБухучетеНачислений
	// настройки бухучета, указанные в виде расчета.
	СоздатьВТСведенияОБухучетеНачислений(Запрос.МенеджерВременныхТаблиц);
	
	// ВТБухучетНачисленийПоДокументамиПлановые
	// содержит строки у которых бухучет задан в первичном документе и в настройках бухучета плановых начислений.
	СоздатьВТБухучетНачисленийПоДокументамИПлановые(Запрос);
	
	// ВТБухучетРасходыПоСтрахованию 
	СоздатьВТБухучетРасходыПоСтрахованию(Запрос, КоэффициентыРаспределенияСреднегоЗаработкаФСС);
	
	// ВТБухучетНачисленийИзНастроекНачисления
	ИменаТаблиц = Новый Массив;
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДокументамИПлановые");
	ИменаТаблиц.Добавить("ВТБухучетРасходыПоСтрахованию");
	СоздатьВТСтрокиКУдалению(Запрос, ИменаТаблиц);
	СоздатьВТБухучетНачисленийИзНастроекНачисления(Запрос);
	
	// ВТНачисленияПоБазе
	ИменаТаблиц = Новый Массив;
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДокументамИПлановые");
	ИменаТаблиц.Добавить("ВТБухучетРасходыПоСтрахованию");
	СоздатьВТСтрокиКУдалению(Запрос, ИменаТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.ПериодРегистрации,
	|	СписокНачислений.Организация,
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ФизическоеЛицо,
	|	СписокНачислений.Подразделение,
	|	СписокНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ВидОперации,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.ДатаОкончания,
	|	СписокНачислений.Сумма,
	|	СписокНачислений.ДокументОснование,
	|	СписокНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Начисления.ОчередностьОтраженияВУчете
	|ПОМЕСТИТЬ ВТНачисленияПоБазе
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО (Начисления.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам))
	|			И СписокНачислений.Начисление = Начисления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиКУдалению КАК СтрокиКУдалению
	|		ПО СписокНачислений.ИдентификаторСтроки = СтрокиКУдалению.ИдентификаторСтроки
	|ГДЕ
	|	НЕ СписокНачислений.ВидОперации В (&РасходыПоСтрахованию)
	|	И СтрокиКУдалению.ИдентификаторСтроки ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиКУдалению";
	Запрос.Выполнить();
	
	// ВТБухучетОсновногоЗаработка
	// начисления для которых задано распределение на текущий месяц
	ИменаТаблиц = Новый Массив;  
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДоговорам");
	ИменаТаблиц.Добавить("ВТБухучетКомпенсацийЗаЗадержкуЗарплаты");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДокументамИПлановые");
	ИменаТаблиц.Добавить("ВТБухучетРасходыПоСтрахованию");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийИзНастроекНачисления");
	ИменаТаблиц.Добавить("ВТНачисленияПоБазе");
	СоздатьВТСтрокиКУдалению(Запрос, ИменаТаблиц);
	СоздатьВТБухучетОсновногоЗаработка(Запрос);
	
	// ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению
	// начисления для которых задано распределение на текущий месяц
	ИменаТаблиц = Новый Массив;
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДоговорам");
	ИменаТаблиц.Добавить("ВТБухучетКомпенсацийЗаЗадержкуЗарплаты");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДокументамИПлановые");
	ИменаТаблиц.Добавить("ВТБухучетРасходыПоСтрахованию");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийИзНастроекНачисления");
	ИменаТаблиц.Добавить("ВТБухучетОсновногоЗаработка");
	ИменаТаблиц.Добавить("ВТНачисленияПоБазе");
	СоздатьВТСтрокиКУдалению(Запрос, ИменаТаблиц);
	СоздатьВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению(Запрос);
	
	ИменаТаблиц = Новый Массив;
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДокументамИПлановые");
	ИменаТаблиц.Добавить("ВТБухучетКомпенсацийЗаЗадержкуЗарплаты");
	ИменаТаблиц.Добавить("ВТБухучетРасходыПоСтрахованию");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийИзНастроекНачисления");
	ИменаТаблиц.Добавить("ВТНачисленияПоБазе");
	ИменаТаблиц.Добавить("ВТБухучетОсновногоЗаработка");
	ИменаТаблиц.Добавить("ВТБухучетНачисленийПоДоговорам");
	ИменаТаблиц.Добавить("ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению");
	СоздатьВТСтрокиКУдалению(Запрос, ИменаТаблиц);
	
	// ВТБухучетНачисленийБезРаспределяемыхПоБазе
	// бухучет всех начислений кроме распределяемых по базе ВТНачисленияПоБазе.
	СоздатьВТБухучетНачисленийБезРаспределяемыхПоБазе(Запрос, КоэффициентыРаспределенияСреднегоЗаработка);
	
	// ВТБухучетНачисленияПоБазе
	СоздатьВТБухучетНачисленияПоБазе(Запрос); 
	
	// ВТБухучетНачислений - объединение сведений о бухучете начислений.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ПериодПринятияРасходов,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	(ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		БухучетНачисления.Организация КАК Организация,
	|		БухучетНачисления.Сотрудник КАК Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|		БухучетНачисления.Подразделение КАК Подразделение,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление КАК Начисление,
	|		БухучетНачисления.ВидОперации КАК ВидОперации,
	|		БухучетНачисления.ДатаНачала КАК ДатаНачала,
	|		БухучетНачисления.ДатаОкончания КАК ДатаОкончания,
	|		БухучетНачисления.ДокументОснование КАК ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|		БухучетНачисления.Сумма КАК Сумма
	|	ИЗ
	|		ВТБухучетНачисленийБезРаспределяемыхПоБазе КАК БухучетНачисления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов,
	|		БухучетНачисления.Организация,
	|		БухучетНачисления.Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление,
	|		БухучетНачисления.ВидОперации,
	|		БухучетНачисления.ДатаНачала,
	|		БухучетНачисления.ДатаОкончания,
	|		БухучетНачисления.ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов,
	|		БухучетНачисления.Сумма
	|	ИЗ
	|		ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению КАК БухучетНачисления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов,
	|		БухучетНачисления.Организация,
	|		БухучетНачисления.Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление,
	|		БухучетНачисления.ВидОперации,
	|		БухучетНачисления.ДатаНачала,
	|		БухучетНачисления.ДатаОкончания,
	|		БухучетНачисления.ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов,
	|		БухучетНачисления.Сумма
	|	ИЗ
	|		ВТБухучетНачисленияПоБазе КАК БухучетНачисления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов,
	|		БухучетНачисления.Организация,
	|		БухучетНачисления.Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление,
	|		БухучетНачисления.ВидОперации,
	|		БухучетНачисления.ДатаНачала,
	|		БухучетНачисления.ДатаОкончания,
	|		БухучетНачисления.ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов,
	|		БухучетНачисления.Сумма
	|	ИЗ
	|		ВТБухучетОсновногоЗаработка КАК БухучетНачисления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БухучетНачисления.ПериодРегистрации,
	|		БухучетНачисления.ИдентификаторСтроки,
	|		БухучетНачисления.ПериодПринятияРасходов,
	|		БухучетНачисления.Организация,
	|		БухучетНачисления.Сотрудник,
	|		БухучетНачисления.ФизическоеЛицо,
	|		БухучетНачисления.Подразделение,
	|		БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|		БухучетНачисления.Начисление,
	|		БухучетНачисления.ВидОперации,
	|		БухучетНачисления.ДатаНачала,
	|		БухучетНачисления.ДатаОкончания,
	|		БухучетНачисления.ДокументОснование,
	|		БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|		БухучетНачисления.СтатьяФинансирования,
	|		БухучетНачисления.СтатьяРасходов,
	|		БухучетНачисления.Сумма
	|	ИЗ
	|		ВТБухучетНачисленийПоДоговорам КАК БухучетНачисления) КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ДатаОкончания,
	|	БухучетНачислений.ИдентификаторСтроки,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.ПериодПринятияРасходов,
	|	БухучетНачислений.Организация,
	|	БухучетНачислений.ДокументОснование,
	|	БухучетНачислений.ПериодРегистрации,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачислений.ДатаНачала";
	
	Запрос.Выполнить();

	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТБухучетНачисленийПоДоговорам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетОсновногоЗаработкаРаспределениеПоПодразделению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетОсновногоЗаработка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленияПоБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийБезРаспределяемыхПоБазе"; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

Функция ЗарегистрироватьДвиженияДокументаДляРаспределенияНачисленийУдержаний(Форма, Сотрудники, ОписаниеДокумента, РегистрироватьНачисления, РегистрироватьНДФЛ, ЗаписыватьДвижения)

	Объект          = Форма.Объект;
	Организация     = Объект.Организация;
	МесяцНачисления = Объект[ОписаниеДокумента.МесяцНачисленияИмя];
	ОписаниеТаблицФормы = ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата;
	
	НачислениеИзШапкиДокумента = Неопределено;
	Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
		НачислениеИзШапкиДокумента = Объект[ОписаниеДокумента.ИменаПолейНачисления];
	КонецЕсли;
	
	НаборыЗаписей = ЗарплатаКадры.НаборыЗаписейРегистратора(Метаданные.Документы.НачислениеЗарплаты);
	
	Начисления = РасчетЗарплатыРасширенный.ПустаяТаблицаНачисления();
	Пособия    = РасчетЗарплатыРасширенный.ПустаяТаблицаНачисления();
	НачисленияПоДоговорам = РасчетЗарплатыРасширенный.ПустаяТаблицаНачисленияПоДоговорам();
	НачисленияПоДоговорам.Колонки.Добавить("Начисление", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	
	ИменаТаблиц = "";
	ВозможныеИменаТаблиц = "Начисления,ОплатаТруда,Пособия,ПособияПерерасчет,НачисленияПерерасчет,НачисленияПоДоговорам,Льготы,ОплатаЛьгот";
	Для каждого ОписаниеТаблицыФормы Из ОписаниеТаблицФормы Цикл
		ИмяТаблицы = ОписаниеТаблицыФормы.Ключ;
		Если СтрНайти(ВозможныеИменаТаблиц,ИмяТаблицы) > 0 Тогда
			ИменаТаблиц = ИменаТаблиц + ?(ПустаяСтрока(ИменаТаблиц),"",",") + ИмяТаблицы;
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(Сотрудники) <> Тип("Массив") Тогда
		СотрудникиМассив = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудники);
	Иначе
		СотрудникиМассив = Сотрудники;
	КонецЕсли;
	СоответствиеСотрудникФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СотрудникиМассив, "ФизическоеЛицо");
	
	Если Не ПустаяСтрока(ИменаТаблиц) Тогда
		
		ТаблицыФормы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаТаблиц, ",");
		
		Для каждого ТаблицаФормы Из ТаблицыФормы Цикл
			
			Если ТаблицаФормы = "НачисленияПоДоговорам" Тогда
				Таблица = НачисленияПоДоговорам;
				ВидРасчета = Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги;
			ИначеЕсли ТаблицаФормы = "Пособия" Или ТаблицаФормы = "ПособияПерерасчет" Тогда
				Таблица = Пособия;
				ВидРасчета = НачислениеИзШапкиДокумента;
			Иначе	
				Таблица = Начисления;
				ВидРасчета = НачислениеИзШапкиДокумента;
			КонецЕсли;
			
			НайденныеСтроки = НайтиСтрокиОтборПоМассиву(Объект[ОписаниеТаблицФормы[ТаблицаФормы].ИмяТаблицы], ОписаниеТаблицФормы[ТаблицаФормы].ИмяРеквизитаСотрудник, СотрудникиМассив); 
			
			Для Каждого СтрокаНачисления Из НайденныеСтроки Цикл
				// Заполняем коллекцию для формирования движений.
				НоваяСтрока = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНачисления);
				НоваяСтрока.Сумма = СтрокаНачисления.Результат;
				НоваяСтрока.ФизическоеЛицо = СоответствиеСотрудникФизическоеЛицо[НоваяСтрока.Сотрудник];
				
				Если ВидРасчета <> Неопределено Тогда
					НоваяСтрока.Начисление = ВидРасчета;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если РегистрироватьНачисления Тогда
		
		НачисленияДляДвижений = Начисления.Скопировать();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Пособия, НачисленияДляДвижений);
		
		// Заполняем регистры, необходимые для выполнения распределения:
		// - регистр расчета Начисления.
		РасчетЗарплатыРасширенный.СформироватьДвиженияНачислений(НаборыЗаписей, Ложь, Организация, МесяцНачисления, НачисленияДляДвижений, , ЗаписыватьДвижения);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НачисленияПоДоговорам, НачисленияДляДвижений);
		// - Регистр накопления НачисленияУдержанияПоСотрудникам.
		УчетНачисленнойЗарплаты.ЗарегистрироватьНачисленияУдержания(НаборыЗаписей, Ложь, Организация, МесяцНачисления, НачисленияДляДвижений, Неопределено, Неопределено, Неопределено, , ЗаписыватьДвижения);
		
		НачисленияДляДвижений = "";
		
	КонецЕсли;

	Если РегистрироватьНДФЛ Тогда
		
		НачисленияДляДвижений = Начисления.Скопировать();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Пособия, НачисленияДляДвижений);
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ИменаВТ = Новый Массив;
		
		ПараметрыСоздатьВТНачисления = РасчетЗарплатыРасширенный.ДополнительныеПараметрыСоздатьВТНачисления();
		ПараметрыСоздатьВТНачисления.Начисления = НачисленияДляДвижений;
		ПараметрыСоздатьВТНачисления.Организация = Организация;
		ПараметрыСоздатьВТНачисления.МесяцНачисления = МесяцНачисления;
		РасчетЗарплатыРасширенный.СоздатьВТНачисления(МенеджерВременныхТаблиц, ИменаВТ, ПараметрыСоздатьВТНачисления);
		
		УчетНДФЛРасширенный.СформироватьДоходыНДФЛПоНачислениям(
			НаборыЗаписей, Ложь, Организация, КонецМесяца(МесяцНачисления), КонецМесяца(МесяцНачисления), МенеджерВременныхТаблиц, МесяцНачисления, Ложь, Ложь, "ВТНачисления");
			
		РасчетЗарплатыРасширенный.СоздатьВТНачисленияПоДоговорам(МенеджерВременныхТаблиц, НачисленияПоДоговорам, ИменаВТ);
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачисленияПоДоговорам.Сотрудник,
		|	НачисленияПоДоговорам.ФизическоеЛицо,
		|	НачисленияПоДоговорам.Начисление,
		|	НачисленияПоДоговорам.Подразделение,
		|	НачисленияПоДоговорам.ПодразделениеОрганизации КАК ПодразделениеСотрудника,
		|	НачисленияПоДоговорам.ПланируемаяДатаВыплаты КАК ДатаПолученияДохода,
		|	НачисленияПоДоговорам.КодДохода,
		|	НачисленияПоДоговорам.Сумма КАК СуммаДохода,
		|	НачисленияПоДоговорам.КодВычетаНДФЛ КАК КодВычета,
		|	НачисленияПоДоговорам.СуммаВычета
		|ИЗ
		|	ВТНачисленияПоДоговорам КАК НачисленияПоДоговорам
		|ГДЕ
		|	НачисленияПоДоговорам.ПланируемаяДатаВыплаты <> ДАТАВРЕМЯ(1, 1, 1)";
		
		НачисленияПоДоговорам = Запрос.Выполнить().Выгрузить();
			
		// регистрация доходов
		УчетНДФЛ.СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(НаборыЗаписей, Ложь, Организация, МесяцНачисления, НачисленияПоДоговорам, Ложь, Ложь);
		
	КонецЕсли;

	Возврат НаборыЗаписей;

КонецФункции  

// Функция возвращает таблицу значений с данными бухучета удержаний.
//		Поля таблицы
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				Подразделение  - СправочникСсылка.ПодразделенияОрганизаций
//				ВидОперации    - ПеречислениеСсылка.ВидыОперацийПоЗарплате
//				СтатьяФинансирования - СправочникСсылка.СтатьиФинансированияЗарплата
//				СтатьяРасходов       - СправочникСсылка.СтатьиРасходовЗарплата
//				Контрагент           - СправочникСсылка.Контрагенты, контрагент, в пользу которого произведено удержание.
//				Сумма - Число 15.2
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//
Функция ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации) Экспорт

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ();
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетУдержаний.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетУдержаний.Сотрудник КАК Сотрудник,
	|	БухучетУдержаний.ВидОперации КАК ВидОперации,
	|	БухучетУдержаний.Подразделение КАК Подразделение,
	|	БухучетУдержаний.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетУдержаний.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетУдержаний.Контрагент КАК Контрагент,
	|	БухучетУдержаний.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетУдержаний
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетУдержаний
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(БухучетУдержаний.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетУдержаний.Организация = &Организация
	|	И БухучетУдержаний.Сумма <> 0
	|	И (БухучетУдержаний.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|				И НЕ БухучетУдержаний.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|			ИЛИ БухучетУдержаний.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетУдержаний.ФизическоеЛицо,
	|	БухучетУдержаний.Сотрудник,
	|	БухучетУдержаний.ВидОперации,
	|	БухучетУдержаний.Подразделение,
	|	БухучетУдержаний.СтатьяФинансирования,
	|	БухучетУдержаний.СтатьяРасходов,
	|	БухучетУдержаний.ФизическоеЛицо,
	|	БухучетУдержаний.Сумма
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетУдержаний
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(БухучетУдержаний.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетУдержаний.Организация = &Организация
	|	И БухучетУдержаний.Сумма <> 0
	|	И (БухучетУдержаний.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Удержано)
	|				И НЕ БухучетУдержаний.НачислениеУдержание В (&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|			ИЛИ БухучетУдержаний.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму))";
	Запрос.Выполнить();
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТБухучетУдержаний.Сотрудник КАК Сотрудник,
		|	&ПериодРегистрации КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТБухучетУдержаний КАК ВТБухучетУдержаний";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетУдержаний.ФизическоеЛицо,
	|	БухучетУдержаний.Сотрудник,
	|	БухучетУдержаний.ВидОперации КАК ВидОперации,
	|	БухучетУдержаний.Подразделение,
	|	БухучетУдержаний.СтатьяФинансирования КАК СтатьяФинансирования,
	|	БухучетУдержаний.СтатьяРасходов КАК СтатьяРасходов,
	|	БухучетУдержаний.Контрагент,
	|	СУММА(БухучетУдержаний.Сумма) КАК Сумма,
	|	ФизическиеЛица.Наименование КАК ФизическоеЛицоНаименование,
	|	ПодразделенияОрганизаций.Наименование КАК ПодразделениеНаименование
	|ИЗ
	|	ВТБухучетУдержаний КАК БухучетУдержаний
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО БухучетУдержаний.Сотрудник = Сотрудники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО БухучетУдержаний.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО БухучетУдержаний.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетУдержаний.Сотрудник,
	|	БухучетУдержаний.ВидОперации,
	|	БухучетУдержаний.Подразделение,
	|	БухучетУдержаний.Контрагент,
	|	БухучетУдержаний.ФизическоеЛицо,
	|	БухучетУдержаний.СтатьяРасходов,
	|	БухучетУдержаний.СтатьяФинансирования,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетУдержаний.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицоНаименование,
	|	ПодразделениеНаименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов";
	// Добавляем упорядочивание по настройкам.
	ПсевдонимыТаблиц = Новый Соответствие;
	ПсевдонимыТаблиц.Вставить("Справочник.ПодразделенияОрганизаций", "БухучетУдержаний");
	ПсевдонимыТаблиц.Вставить("Справочник.Должности", "Сотрудники");
	ПсевдонимыТаблиц.Вставить("Справочник.Сотрудники", "Сотрудники");
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудников(Запрос, ПсевдонимыТаблиц);	
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Функция возвращает таблицу значений с данными бухучета НДФЛ.
//		Поля таблицы
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ВидОперации    - ПеречислениеСсылка.ВидыОперацийПоЗарплате
//				СтатьяФинансирования     - СправочникСсылка.СтатьиФинансированияЗарплата
//				СтатьяРасходов     - СправочникСсылка.СтатьиРасходовЗарплата
//				КодПоОКАТО     - Строка, 11
//				КодПоОКТМО     - Строка, 11
//				КПП   - Строка, 9
//				Сумма - Число 15.2
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//
Функция ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации) Экспорт

	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	ВидыОсобыхНачисленийИУдержанийНДФЛ = ОтражениеЗарплатыВУчете.ВидыОсобыхНачисленийИУдержанийНДФЛ(Истина);
	Запрос.УстановитьПараметр("ВидыОсобыхНачисленийИУдержанийНДФЛ", ВидыОсобыхНачисленийИУдержанийНДФЛ);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	СУММА(БухучетНДФЛ.Сумма) КАК Сумма,
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации КАК Подразделение
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНДФЛ
	|ГДЕ
	|	БухучетНДФЛ.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНДФЛ.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНДФЛ.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНДФЛ.Сумма) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	СУММА(БухучетНДФЛ.Сумма),
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНДФЛ
	|ГДЕ
	|	БухучетНДФЛ.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНДФЛ.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНДФЛ.НачислениеУдержание В(&ВидыОсобыхНачисленийИУдержанийНДФЛ)
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНДФЛ.ФизическоеЛицо,
	|	БухучетНДФЛ.СтатьяРасходов,
	|	БухучетНДФЛ.СтатьяФинансирования,
	|	БухучетНДФЛ.ВидОперации,
	|	БухучетНДФЛ.Сотрудник,
	|	БухучетНДФЛ.ТерриторияВыполненияРаботВОрганизации
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНДФЛ.Сумма) <> 0";
	
	ТаблицаНДФЛ = Запрос.Выполнить().Выгрузить();
	
	// Помещаем таблицу в запрос.
	Запрос.УстановитьПараметр("ТаблицаНДФЛ", ТаблицаНДФЛ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.ВидОперации,
	|	ТаблицаНДФЛ.СтатьяФинансирования,
	|	ТаблицаНДФЛ.СтатьяРасходов,
	|	ТаблицаНДФЛ.Сумма,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ТаблицаНДФЛ
	|ИЗ
	|	&ТаблицаНДФЛ КАК ТаблицаНДФЛ";
	Запрос.Выполнить();
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаНДФЛ.Сотрудник КАК Сотрудник,
		|	&ПериодРегистрации КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ТаблицаНДФЛ КАК ТаблицаНДФЛ";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.ВидОперации КАК ВидОперации,
	|	ТаблицаНДФЛ.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ТаблицаНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(ТаблицаНДФЛ.Сумма) КАК Сумма,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """") КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """") КАК КодПоОКТМО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """") КАК КПП,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """") КАК КодНалоговогоОргана,
	|	ФизическиеЛица.Наименование КАК Наименование
	|ИЗ
	|	ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО ТаблицаНДФЛ.Сотрудник = Сотрудники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО ТаблицаНДФЛ.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.ВидОперации,
	|	ТаблицаНДФЛ.СтатьяФинансирования,
	|	ТаблицаНДФЛ.СтатьяРасходов,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """"),
	|	ФизическиеЛица.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов
	|АВТОУПОРЯДОЧИВАНИЕ";
	// Добавляем авто-упорядочивание.
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудниковПоВТСДаннымиПорядка(Запрос, "Сотрудники");
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц = Неопределено, ИсключаемыйРегистратор = Неопределено, ИсключатьМежрасчетныеВыплаты = Ложь, ТолькоДоходыСотрудников = Ложь)

	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	Запрос.УстановитьПараметр("РаботаВБюджетномУчреждении", РаботаВБюджетномУчреждении);
	Запрос.УстановитьПараметр("ИсключатьМежрасчетныеВыплаты", ИсключатьМежрасчетныеВыплаты);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.Сумма КАК Сумма,
	|	БухучетНачисления.ДокументОснование
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоСтатьямФинансирования
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
	|	И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
	|	И &УсловиеПоФизическимЛицам
	|	И &УсловиеИсключатьМежрасчетныеВыплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
	|	КОНЕЦ,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.Сумма,
	|	БухучетНачисления.ДокументОснование
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
	|	И БухучетНачисления.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления
	|	И &УсловиеПоФизическимЛицам
	|	И &УсловиеИсключатьМежрасчетныеВыплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА НЕ &РаботаВБюджетномУчреждении
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
	|	КОНЕЦ,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.Сумма,
	|	БухучетНачисления.ДокументОснование
	|ИЗ
	|	РегистрНакопления.БухучетНачисленияУдержанияПоСотрудникам КАК БухучетНачисления
	|ГДЕ
	|	БухучетНачисления.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Справочно)
	|	И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
	|	И БухучетНачисления.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов)
	|	И &УсловиеПоФизическимЛицам
	|	И &УсловиеИсключатьМежрасчетныеВыплаты";
	
	Если Не ТолькоДоходыСотрудников Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БухучетНачисления.Организация,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.ТерриторияВыполненияРаботВОрганизации,
		|	БухучетНачисления.НачислениеУдержание,
		|	БухучетНачисления.ВидОперации,
		|	БухучетНачисления.СтатьяФинансирования,
		|	ВЫБОР
		|		КОГДА НЕ &РаботаВБюджетномУчреждении
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
		|		ИНАЧЕ БухучетНачисления.СтатьяРасходов
		|	КОНЕЦ,
		|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачисления.ОблагаетсяЕНВД,
		|	БухучетНачисления.Период,
		|	БухучетНачисления.Период,
		|	БухучетНачисления.Сумма,
		|	БухучетНачисления.ДокументОснование
		|ИЗ
		|	РегистрНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам КАК БухучетНачисления
		|ГДЕ
		|	БухучетНачисления.Организация = &Организация
		|	И НАЧАЛОПЕРИОДА(БухучетНачисления.Период, МЕСЯЦ) = &ПериодРегистрации
		|	И БухучетНачисления.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)
		|	И БухучетНачисления.Регистратор <> &ИсключаемыйРегистратор
		|	И &УсловиеПоФизическимЛицам";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеПоФизическимЛицам", ?(МассивФизическихЛиц = Неопределено,"","И БухучетНачисления.ФизическоеЛицо В(&МассивФизическихЛиц)"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеИсключатьМежрасчетныеВыплаты", ?(ИсключатьМежрасчетныеВыплаты,"И НЕ БухучетНачисления.НеУчитыватьВРаспределенииПриОкончательномРасчете",""));
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует временные таблицы с данными бухучета начислений и взносов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	МенеджерВременныхТаблиц - помещает в менеджер таблицы
//			ВТБухучетНачислений и ВТБухучетСтраховыхВзносов.
//
Процедура СведенияОБухучетеНачисленийИВзносовПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	ОтражениеЗарплатыВБухучете.СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц);
	ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
	СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетНачисления.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	БухучетНачисления.Организация,
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.НачислениеУдержание КАК Начисление,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ,
	|	СУММА(БухучетНачисления.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачислений
	|ИЗ
	|	ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеВидНачисленияОплатыТрудаДляНУ КАК НачислениеВидНачисленияОплатыТрудаДляНУ
	|		ПО БухучетНачисления.НачислениеУдержание = НачислениеВидНачисленияОплатыТрудаДляНУ.Начисление
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеВидНачисленияОплатыТрудаДляНУ.ВидНачисленияОплатыТрудаДляНУ,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.Сотрудник,
	|	ВЫБОР
	|		КОГДА БухучетНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ БухучетНачисления.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(БухучетНачисления.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.ОблагаетсяЕНВД,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.ВидОперации,
	|	БухучетНачисления.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачисления.НачислениеУдержание,
	|	БухучетНачисления.ДатаНачала,
	|	БухучетНачисления.ДатаОкончания,
	|	БухучетНачисления.ДокументОснование,
	|	БухучетНачисления.Организация
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачисления.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Начисление,
	|	НачислениеУдержаниеВидОперации.ВидОперации,
	|	СУММА(0) КАК СтраховыеВзносы,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	СтраховыеВзносы.ДатаНачала
	|ПОМЕСТИТЬ ВТБухучетСтраховыхВзносов
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачислениеУдержаниеВидОперации
	|		ПО СтраховыеВзносы.Начисление = НачислениеУдержаниеВидОперации.НачислениеУдержание
	|ГДЕ
	|	СтраховыеВзносы.Организация = &Организация
	|	И НАЧАЛОПЕРИОДА(СтраховыеВзносы.Период, МЕСЯЦ) = &ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	НачислениеУдержаниеВидОперации.ВидОперации,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.ДатаНачала,
	|	СтраховыеВзносы.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачислениеВидНачисленияОплатыТрудаДляНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачислениеУдержаниеВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийПоСтатьямФинансирования";
	
	ТекстПолейВзносов = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		ТекстПолейВзносов = ТекстПолейВзносов + "СУММА(СтраховыеВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(0) КАК СтраховыеВзносы,", ТекстПолейВзносов);
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(ПроверяемаяСтрока, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении, РезультатыРаспределения = Неопределено)
	
	РезультатПроверки = Новый Структура;
	РезультатПроверки.Вставить("ЕстьОшибкиРаспределения", Истина);
	РезультатПроверки.Вставить("ЕстьОшибкиЗаполнения", Истина);
	РезультатПроверки.Вставить("СуммаКРаспределению", 0);
	РезультатПроверки.Вставить("РезультатРаспределения", Неопределено);
	
	ОписанияТаблиц = ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата;
	
	ОписаниеТаблицыФормы = Неопределено;
	Если Не ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата.Свойство(ИмяТаблицы, ОписаниеТаблицыФормы) Тогда
		Возврат РезультатПроверки;
	КонецЕсли;
		
	ИмяТаблицыРаспределениеРезультатовРасчета = ЗарплатаКадрыРасширенныйКлиентСервер.ИмяТаблицыРаспределениеРезультатовРасчета(ОписаниеТаблицыФормы);
	ЭтоТаблицаНачислений = ИмяТаблицыРаспределениеРезультатовРасчета = "РаспределениеРезультатовНачислений";
		
	Если ОписаниеДокумента.ВидНачисленияВШапке = Ложь И ЭтоТаблицаНачислений И ИмяТаблицы <> "НачисленияПоДоговорам" Тогда
		ВидРасчета = ПроверяемаяСтрока.Начисление;
	ИначеЕсли ОписаниеДокумента.ВидНачисленияВШапке = Истина Тогда
		ВидРасчета = ВидРасчетаИзШапки;
	Иначе
		ВидРасчета = Неопределено;
	КонецЕсли;
	
	ВидыОперацийПособия = Новый Массив;
	ВидыОперацийПособия.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС);
	ВидыОперацийПособия.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	
	ПроверяемыеПоля = Новый Структура;
	ПроверяемыеПоля.Вставить("СтатьяФинансирования", Истина);
	ПроверяемыеПоля.Вставить("СтатьяРасходов", РаботаВБюджетномУчреждении);
	
	ЭтоТаблицаНДФЛ = ИмяТаблицы = "НДФЛ";
	ЭтоТаблицаЗаймов = ИмяТаблицы = "ПогашениеЗаймов";
	УточнятьПроверкуСпособаОтражения = ЭтоТаблицаНачислений И ИмяТаблицы <> "НачисленияПоДоговорам" И ВидРасчета <> Неопределено;
	
	Если ЭтоТаблицаНачислений Тогда
		ПроверяемыеПоля.Вставить("СпособОтраженияЗарплатыВБухучете", Истина);
		ПроверяемыеПоля.Вставить("Сотрудник", Ложь);
	Иначе
		// Для удержаний не проверяем способ отражения.
		ПроверяемыеПоля.Вставить("СпособОтраженияЗарплатыВБухучете", Ложь);
		ПроверяемыеПоля.Вставить("Сотрудник", Истина);
	КонецЕсли;
	
	Если УточнятьПроверкуСпособаОтражения Тогда
		ПроверяемыеПоля.СпособОтраженияЗарплатыВБухучете = ВидыОперацийПособия.Найти(НачислениеУдержаниеВидОперации[ВидРасчета]) = Неопределено;
	КонецЕсли;
	
	Если ЭтоТаблицаНДФЛ Тогда
		Результат  = ПроверяемаяСтрока.Налог - ПроверяемаяСтрока.ЗачтеноАвансовыхПлатежей + ПроверяемаяСтрока.НалогКЗачетуВозврату;
	ИначеЕсли ЭтоТаблицаЗаймов Тогда
		Результат  = ПроверяемаяСтрока.НачисленоПроцентов + ПроверяемаяСтрока.ПогашениеПроцентов + ПроверяемаяСтрока.ПогашениеЗайма + ПроверяемаяСтрока.МатериальнаяВыгода + ПроверяемаяСтрока.НалогНаМатериальнуюВыгоду;
	Иначе
		Результат  = ПроверяемаяСтрока.Результат;
	КонецЕсли;
	РезультатРаспределения = 0;
	
	ЕстьОшибкиЗаполнения = Ложь;
	
	Если РезультатыРаспределения = Неопределено Тогда 
		РезультатыРаспределения = ПроверяемаяСтрока.РезультатРаспределения;
	КонецЕсли;
	
	Если РезультатыРаспределения <> Неопределено Тогда
		Для каждого СтрокаРаспределения Из РезультатыРаспределения Цикл
			РезультатРаспределения = РезультатРаспределения + СтрокаРаспределения.Результат;
			Для Каждого КлючИЗначение Из ПроверяемыеПоля Цикл
				Если КлючИЗначение.Значение И Не ЗначениеЗаполнено(СтрокаРаспределения[КлючИЗначение.Ключ]) Тогда
					ЕстьОшибкиЗаполнения = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если Результат = 0 И РезультатРаспределения = 0 Тогда
		ЕстьОшибкиРаспределения = Ложь;
		ЕстьОшибкиЗаполнения = Ложь;
	Иначе
		ЕстьОшибкиРаспределения = Результат <> РезультатРаспределения;
	КонецЕсли;
	
	РезультатПроверки.ЕстьОшибкиРаспределения = ЕстьОшибкиРаспределения;
	РезультатПроверки.ЕстьОшибкиЗаполнения    = ЕстьОшибкиЗаполнения;
	РезультатПроверки.СуммаКРаспределению     = Результат;
	РезультатПроверки.РезультатРаспределения  = РезультатРаспределения;
	
	Возврат РезультатПроверки;
	
КонецФункции

Функция НайтиСтрокиОтборПоМассиву(КоллекцияСтрок, ИмяПоля, МассивЗначений)
	
	НайденныеСтроки = Новый Массив;
	
	Для Каждого СтрокаКоллекции Из КоллекцияСтрок Цикл
		СоответствуетУсловиям = Истина;
		Если МассивЗначений <> Неопределено Тогда
			СоответствуетУсловиям = МассивЗначений.Найти(СтрокаКоллекции[ИмяПоля]) <> Неопределено;
		КонецЕсли;
		Если СоответствуетУсловиям Тогда
			НайденныеСтроки.Добавить(СтрокаКоллекции);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденныеСтроки;
	
КонецФункции

Функция БазовыеВидыРасчетаДляРаспределенияЗависимыхРезультатовФормы(ВидРасчета)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БазовыеВидыРасчета.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления.БазовыеВидыРасчета КАК БазовыеВидыРасчета
	|ГДЕ
	|	БазовыеВидыРасчета.ВидРасчета = &ВидРасчета
	|	И БазовыеВидыРасчета.Ссылка.СтратегияОтраженияВУчете = ЗНАЧЕНИЕ(Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции 

Функция СтрокиНачисленийУдержанийКРаспределению(ТаблицаДляОтбора, ИмяПоляОтбора, МассивЗначенийОтбора, ТаблицаКРаспределению, НачальныйИдентификатор = 1, ВторойМассивЗначенийОтбора = Неопределено, ВтороеИмяПоляОтбора = "")

	СтрокиКРаспределению = Новый Соответствие;
	
	Если ТипЗнч(ТаблицаДляОтбора) <> Тип("ДанныеФормыКоллекция") Тогда
		Если ТаблицаДляОтбора.Колонки.Найти("РезультатРаспределения") = Неопределено Тогда
			ТаблицаДляОтбора.Колонки.Добавить("РезультатРаспределения", Новый ОписаниеТипов("ФиксированныйМассив"));
		КонецЕсли;
		Если ТаблицаДляОтбора.Колонки.Найти("КомандаРедактированияРаспределения") = Неопределено Тогда
			ТаблицаДляОтбора.Колонки.Добавить("КомандаРедактированияРаспределения", Новый ОписаниеТипов("Строка"));
		КонецЕсли;
	КонецЕсли;
	
	НайденныеСтроки = НайтиСтрокиОтборПоМассиву(ТаблицаДляОтбора, ИмяПоляОтбора, МассивЗначенийОтбора);
	Если ВторойМассивЗначенийОтбора <> Неопределено Тогда
		НайденныеСтроки = НайтиСтрокиОтборПоМассиву(НайденныеСтроки, ВтороеИмяПоляОтбора, ВторойМассивЗначенийОтбора);
	КонецЕсли;
	
	Если ТаблицаКРаспределению.Колонки.Найти("ИдентификаторСтроки") = Неопределено Тогда
		ТаблицаКРаспределению.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число"));
	КонецЕсли;
	
	ИдентификаторСтроки = НачальныйИдентификатор;
	Для каждого Строка Из НайденныеСтроки Цикл
		НоваяСтрока = ТаблицаКРаспределению.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтроки;
		СтрокиКРаспределению.Вставить(ИдентификаторСтроки,Строка);
		ИдентификаторСтроки = ИдентификаторСтроки + 1;
	КонецЦикла;
	
	Возврат СтрокиКРаспределению;
	
КонецФункции 

Функция СоздатьТаблицуЗначенийПоОбразуКоллекции(КоллекцияЗначений)
	
	Если ТипЗнч(КоллекцияЗначений) = Тип("ДанныеФормыКоллекция") Тогда
		Возврат КоллекцияЗначений.Выгрузить(Новый Структура("НомерСтроки",""));
	Иначе
		Возврат КоллекцияЗначений.СкопироватьКолонки();
	КонецЕсли;

КонецФункции

Функция СотрудникиФизическиеЛица(Знач СотрудникиФизическиеЛица, Организация, МесяцНачисления)
	
	Если Не ЗначениеЗаполнено(СотрудникиФизическиеЛица) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(СотрудникиФизическиеЛица) <> Тип("Массив") Тогда
		СотрудникиФизическиеЛица = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СотрудникиФизическиеЛица);
	КонецЕсли;
	
	// В качестве параметров могут быть получены физические лица, а не сотрудники.
	Если ТипЗнч(СотрудникиФизическиеЛица[0]) = Тип("СправочникСсылка.Сотрудники") Тогда
		Сотрудники = СотрудникиФизическиеЛица;
		Физлица = КадровыйУчет.ФизическиеЛицаСотрудников(Сотрудники);
	Иначе
		Физлица = СотрудникиФизическиеЛица;
		Сотрудники = ВсеСотрудникиОрганизацииФизическихЛиц(Организация, Физлица, МесяцНачисления);
	КонецЕсли;
	
	СоответствиеСотрудникФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Сотрудники, "ФизическоеЛицо");
	
	Возврат Новый Структура("Сотрудники, ФизическиеЛица, СоответствиеСотрудникФизическоеЛицо", Сотрудники, Физлица, СоответствиеСотрудникФизическоеЛицо);
	
КонецФункции

Функция УдержаниеИмеетБазу(ВидРасчетаОбъект)
	
	Возврат Ложь;
		
КонецФункции

Функция НоваяТаблицаРаспределениеРезультатовНачислений(РасширенныйРежим = Ложь) Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	
	Если РасширенныйРежим Тогда
		// Эти колонки нужны для распределения удержаний.
		Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
		Таблица.Колонки.Добавить("ФизическоеЛицо",  Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
		Таблица.Колонки.Добавить("ГруппаНачисленияУдержанияВыплаты", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"));
		Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		
		МассивТиповНачисления = Новый Массив;
		МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
		МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
		МассивТиповНачисления.Добавить(Тип("СправочникСсылка.ВидыВыплатБывшимСотрудникам"));
		МассивТиповНачисления.Добавить(Тип("СправочникСсылка.ВидыПрочихДоходовФизическихЛиц"));
		Таблица.Колонки.Добавить("Начисление",  Новый ОписаниеТипов(МассивТиповНачисления));
		Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
		 
	КонецЕсли;
	
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("Территория", Новый ОписаниеТипов("СправочникСсылка.ТерриторииВыполненияРабот"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаРаспределениеРезультатовУдержаний() Экспорт
	
	МассивТиповВидУдержания = Новый Массив;
	МассивТиповВидУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповВидУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Удержания"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ВидУдержания", Новый ОписаниеТипов(МассивТиповВидУдержания));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));

	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам() Экспорт
	
	Таблица = УчетНачисленнойЗарплатыРасширенный.НоваяТаблицаНачисленияУдержанияПоСотрудникам();
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));

	Возврат Таблица;
	
КонецФункции  

Функция НоваяТаблицаБухучетНачисленияУдержанияПоКонтрагентамАкционерам() Экспорт
	
	МассивТиповНачислениеУдержание = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Измерения.НачислениеУдержание.Тип.Типы();
	МассивТиповДокументОснование = Метаданные.РегистрыНакопления.БухучетНачисленияУдержанияПоКонтрагентамАкционерам.Реквизиты.ДокументОснование.Тип.Типы();
	
	Таблица = Новый ТаблицаЗначений;

	Таблица.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("НачислениеУдержание", Новый ОписаниеТипов(МассивТиповНачислениеУдержание));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ГруппаНачисленияУдержанияВыплаты", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыНачисленияУдержанияВыплаты"));
	Таблица.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(МассивТиповДокументОснование));
	Таблица.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ТерриторииВыполненияРаботВОрганизации.Тип));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));

	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетЗарплатыПервичныхДокументов() Экспорт
	
	МассивТиповНачисленияУдержания = Новый Массив;
	МассивТиповНачисленияУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисленияУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	МассивТиповНачисленияУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Удержания"));
	МассивТиповНачисленияУдержания.Добавить(Тип("СправочникСсылка.ВидыВыплатБывшимСотрудникам"));
	МассивТиповНачисленияУдержания.Добавить(Тип("СправочникСсылка.ВидыПрочихДоходовФизическихЛиц"));
	
	МассивТиповДокументОснование = Метаданные.РегистрыСведений.БухучетЗарплатыПервичныхДокументов.Измерения.ДокументОснование.Тип.Типы();
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ДокументОснование",  Новый ОписаниеТипов(МассивТиповДокументОснование));
	Таблица.Колонки.Добавить("НачислениеУдержание",  Новый ОписаниеТипов(МассивТиповНачисленияУдержания));  
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете",  Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухучете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования",  Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов",  Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	
	Возврат Таблица;
КонецФункции

Функция НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("СпособРасчета", 			Новый ОписаниеТипов("ПеречислениеСсылка.СпособыРасчетаНачислений"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", 	Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("Результат", 				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));

	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИдентификаторСтроки", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("СтатьяФинансирования", 	Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("Результат", 				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));

	Возврат Таблица;
	
КонецФункции

Функция ОписаниеПараметровДляРаспределенияРезультатовРасчета()

	НачисленияУдержанияПоСотрудникам = УчетНачисленнойЗарплатыРасширенный.НоваяТаблицаНачисленияУдержанияПоСотрудникам();
	ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(НачисленияУдержанияПоСотрудникам);
	
	ПараметрыДляРаспределения = Новый Структура;
	ПараметрыДляРаспределения.Вставить("ОписаниеДокумента", Новый Структура);
	ПараметрыДляРаспределения.Вставить("ДанныеЗаполнения", Новый Структура);
	ПараметрыДляРаспределения.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыДляРаспределения.Вставить("ПериодРегистрации", Неопределено);
	ПараметрыДляРаспределения.Вставить("ДокументСсылка", Неопределено);
	ПараметрыДляРаспределения.Вставить("НачислениеИзШапкиДокумента", Неопределено);
	ПараметрыДляРаспределения.Вставить("БухучетПервичногоДокумента", НоваяТаблицаБухучетЗарплатыПервичныхДокументов());
	ПараметрыДляРаспределения.Вставить("БухучетНачисленийИзФормы",   НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам());
	ПараметрыДляРаспределения.Вставить("КоэффициентыРаспределенияСреднегоЗаработка",    НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка());
	ПараметрыДляРаспределения.Вставить("КоэффициентыРаспределенияСреднегоЗаработкаФСС", НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС());
	ПараметрыДляРаспределения.Вставить("ОкончательныйРасчет", Ложь);
	ПараметрыДляРаспределения.Вставить("НачисленияУдержанияПоСотрудникам", НачисленияУдержанияПоСотрудникам); 
	ПараметрыДляРаспределения.Вставить("БухучетНачисленияУдержанияПоСотрудникам", НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам());
	ПараметрыДляРаспределения.Вставить("Форма", Неопределено);
	ПараметрыДляРаспределения.Вставить("ДанныеРаспределенияПоТерриториямУсловиямТруда", Неопределено);
	ПараметрыДляРаспределения.Вставить("ОкончательныйРасчетНДФЛ", Ложь);
	
	МассивТиповНачисленияУдержания = Новый Массив;
	МассивТиповНачисленияУдержания.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисленияУдержания.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	МассивТиповНачисленияУдержания.Добавить(Тип("СправочникСсылка.ВидыВыплатБывшимСотрудникам"));
	МассивТиповНачисленияУдержания.Добавить(Тип("СправочникСсылка.ВидыПрочихДоходовФизическихЛиц"));
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник",  Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Начисление",  Новый ОписаниеТипов(МассивТиповНачисленияУдержания));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("СуммаДохода", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СуммаВычета", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ПараметрыДляРаспределения.Вставить("СведенияОДоходахНДФЛ", Таблица);

	Возврат ПараметрыДляРаспределения;

КонецФункции 

Функция ОписаниеПараметровДляРаспределенияДанныхЗаполнения() Экспорт

	ПараметрыДляРаспределения = Новый Структура;
	ПараметрыДляРаспределения.Вставить("НачисленияСРаспределениемПоЕНВД", Неопределено);
	ПараметрыДляРаспределения.Вставить("ТаблицаРаспределениеРезультатовНачислений", НоваяТаблицаРаспределениеРезультатовНачислений(Истина));
	ПараметрыДляРаспределения.Вставить("РаспределятьНачисления", Ложь);
	ПараметрыДляРаспределения.Вставить("РаспределятьУдержания", Ложь);
	ПараметрыДляРаспределения.Вставить("БудутРассчитыватьсяВзносы", Ложь);
	ПараметрыДляРаспределения.Вставить("СведенияОДоходахНДФЛЗаписаны", Ложь);
	ПараметрыДляРаспределения.Вставить("НДФЛИзменился", Ложь);
	ПараметрыДляРаспределения.Вставить("УдержанияИзменились", Ложь);
	ПараметрыДляРаспределения.Вставить("Движения", Неопределено);
	ПараметрыДляРаспределения.Вставить("РаспределениеИзХранилища", Неопределено);
	ПараметрыДляРаспределения.Вставить("ДанныеРаспределенияПоТерриториямУсловиямТруда", Неопределено);
	ПараметрыДляРаспределения.Вставить("ОкончательныйРасчетНДФЛ", Неопределено);
	
	Возврат ПараметрыДляРаспределения;              

КонецФункции 

Функция ДополнительныеПараметрыДляОтраженияВБухучете() Экспорт

	Параметры = Новый Структура;
	Параметры.Вставить("ДокументСсылка", Неопределено);
	Параметры.Вставить("БухучетПервичногоДокумента", НоваяТаблицаБухучетЗарплатыПервичныхДокументов());
	Параметры.Вставить("БухучетНачисленийИзФормы", НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам());
	Параметры.Вставить("КоэффициентыРаспределенияСреднегоЗаработка", НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка());
	Параметры.Вставить("КоэффициентыРаспределенияСреднегоЗаработкаФСС", НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС());
	
	Возврат Параметры;

КонецФункции

Процедура УстановитьСписокВыбораОтношениеКЕНВД(ЭлементыФормы, ИмяЭлемента) Экспорт
	

КонецПроцедуры


Функция КоэффициентыРаспределенияИзСтрокПособий(ДанныеПособий)

	КоэффициентыРаспределения = НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеПособий", ДанныеПособий);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пособия.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Пособия.СтраховойСлучай КАК СтраховойСлучай
	|ПОМЕСТИТЬ ВТПособия
	|ИЗ
	|	&ДанныеПособий КАК Пособия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пособия.ИдентификаторСтроки,
	|	ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.СтатьяФинансирования,
	|	СУММА(ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.Сумма) КАК Результат
	|ИЗ
	|	ВТПособия КАК Пособия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.СреднийЗаработокФСС КАК ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС
	|		ПО Пособия.СтраховойСлучай = ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Пособия.ИдентификаторСтроки,
	|	ОтпускПоУходуЗаРебенкомСреднийЗаработокФСС.СтатьяФинансирования";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(КоэффициентыРаспределения.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат КоэффициентыРаспределения;

КонецФункции 

#Область РаспределениеРезультатовРасчетаПоИсточникамФинансирования

Процедура ОбъектПриЧтенииНаСервереПредставлениеРаспределения(Форма, ОписаниеДокумента) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный") Тогда
		Возврат;
	КонецЕсли;

	Объект = Форма.Объект;
	
	НачислениеИзШапкиДокумента = Неопределено;
	Если ОписаниеДокумента.ВидНачисленияВШапке И ЗначениеЗаполнено(ОписаниеДокумента.ВидНачисленияИмя) Тогда
		НачислениеИзШапкиДокумента = Объект[ОписаниеДокумента.ИменаПолейНачисления];
	КонецЕсли;
	
	Если ОписаниеДокумента.НачисленияИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НачисленияИмя], ОписаниеДокумента, ОписаниеДокумента.НачисленияИмя, НачислениеИзШапкиДокумента);
	КонецЕсли;	
	Если ОписаниеДокумента.НачисленияПерерасчетИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НачисленияПерерасчетИмя], ОписаниеДокумента, ОписаниеДокумента.НачисленияПерерасчетИмя, НачислениеИзШапкиДокумента);
	КонецЕсли;	
	Если ОписаниеДокумента.ПособияИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ПособияИмя], ОписаниеДокумента, ОписаниеДокумента.ПособияИмя, НачислениеИзШапкиДокумента);
	КонецЕсли;	
	Если ОписаниеДокумента.НачисленияПоДоговорамИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НачисленияПоДоговорамИмя], ОписаниеДокумента, ОписаниеДокумента.НачисленияПоДоговорамИмя, НачислениеИзШапкиДокумента);
	КонецЕсли;
	Если ОписаниеДокумента.СторноИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.СторноИмя], ОписаниеДокумента, ОписаниеДокумента.СторноИмя, НачислениеИзШапкиДокумента);
	КонецЕсли;
	Если ОписаниеДокумента.ЛьготыИмя <> Неопределено Тогда
		ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ЛьготыИмя], ОписаниеДокумента, ОписаниеДокумента.ЛьготыИмя, НачислениеИзШапкиДокумента);
	КонецЕсли;
	
	ПорядокВыплаты = Неопределено;
	Если ЗначениеЗаполнено(ОписаниеДокумента.ПорядокВыплатыИмя) Тогда
		ПорядокВыплаты = Объект[ОписаниеДокумента.ПорядокВыплатыИмя];
	КонецЕсли;
	
	РассчитыватьУдержания = Неопределено;
	Если ЗначениеЗаполнено(ОписаниеДокумента.РассчитыватьУдержанияИмя) Тогда
		РассчитыватьУдержания = Объект[ОписаниеДокумента.РассчитыватьУдержанияИмя];
	Иначе 
		РассчитыватьУдержания = (ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Или ПорядокВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс);
	КонецЕсли;
	
	ОбрабатыватьУдержания = РассчитыватьУдержания Или Не ЗначениеЗаполнено(ПорядокВыплаты);
	
	Если ОбрабатыватьУдержания Тогда
		
		Если ОписаниеДокумента.УдержанияИмя <> Неопределено Тогда
			ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.УдержанияИмя], ОписаниеДокумента, "Удержания", НачислениеИзШапкиДокумента);
		КонецЕсли;
		Если ОписаниеДокумента.НДФЛИмя <> Неопределено Тогда
			ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.НДФЛИмя], ОписаниеДокумента, "НДФЛ", НачислениеИзШапкиДокумента);
		КонецЕсли;
		Если ОписаниеДокумента.ПогашениеЗаймовИмя <> Неопределено Тогда
			ЗаполнитьПредставлениеРаспределения(Объект[ОписаниеДокумента.ПогашениеЗаймовИмя], ОписаниеДокумента, "ПогашениеЗаймов", НачислениеИзШапкиДокумента);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Функция НачисленияПоСотрудникамИзДанныхЗаполненияДокумента(Параметры)

	Организация 			= Параметры.Организация;
	ПериодРегистрации 		= Параметры.ПериодРегистрации;
	ДанныеЗаполнения 		= Параметры.ДанныеЗаполнения;
	ДокументСсылка  		= Параметры.ДокументСсылка;
	НачислениеИзШапкиДокумента = Параметры.НачислениеИзШапкиДокумента;
	Форма 					= Параметры.Форма;
	ОписаниеДокумента       = Параметры.ОписаниеДокумента;
	ОписанияТаблицФормы     = ОписаниеДокумента.ОписанияТаблицДляРаспределенияРезультата;
	ДанныеРаспределенияПоТерриториямУсловиямТруда = Параметры.ДанныеРаспределенияПоТерриториямУсловиямТруда;
	
	// Подготовка таблицы НачисленияУдержанияПоСотрудникам по коллекциям из структуры ДанныеЗаполнения.
	НачисленияУдержанияПоСотрудникам = УчетНачисленнойЗарплатыРасширенный.НоваяТаблицаНачисленияУдержанияПоСотрудникам();
	ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(НачисленияУдержанияПоСотрудникам);
	
	ИспользоватьРаспределениеПоТерриториямУсловиямТруда = ЗарплатаКадрыРасширенный.ИспользоватьРаспределениеПоТерриториямУсловиямТруда(Организация);
	
	ИменаТаблицНачислений = Новый Массив;
	ВозможныеИменаТаблиц = "Начисления,ОплатаТруда,Пособия,ПособияПерерасчет,НачисленияПерерасчет,НачисленияПоСотрудникам,Льготы,ОплатаЛьгот,ДоначисленияИПерерасчеты";
	Для каждого ТаблицаДанныхЗаполнения Из ДанныеЗаполнения Цикл
		ИмяТаблицы = ТаблицаДанныхЗаполнения.Ключ;
		
		Если СтрНайти(ВозможныеИменаТаблиц, ИмяТаблицы) > 0 И ТипЗнч(ТаблицаДанныхЗаполнения.Значение) = Тип("ТаблицаЗначений") Тогда
			ИменаТаблицНачислений.Добавить(ИмяТаблицы);
		КонецЕсли;
		
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Если ИменаТаблицНачислений.Количество() > 0 Тогда
		
		// Поля, которые есть не во всех табличных частях, проверяем, и если нет, заменяем на NULL.
		НеобязательныеПоля = Новый Соответствие;
		НеобязательныеПоля.Вставить("СуммаВычета", "0");
		НеобязательныеПоля.Вставить("КодВычета", "ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)");
		НеобязательныеПоля.Вставить("ДатаНачала", "&МесяцНачисления");  
		НеобязательныеПоля.Вставить("Начисление", "&НачислениеИзШапки");
		НеобязательныеПоля.Вставить("ДокументОснование", "&ДокументСсылка");
		НеобязательныеПоля.Вставить("ДатаОкончания", "КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ)");
		
		// Составляем текст запроса таблицы значений.
		Запрос.УстановитьПараметр("МесяцНачисления", ПериодРегистрации);
		Запрос.УстановитьПараметр("НачислениеИзШапки", НачислениеИзШапкиДокумента);
		
		ТекстЗапроса = "";
		ТекстЗапросаОбъединения = "";
		ПерваяТаблица = Истина;
		Для Каждого ИмяТаблицыНачислений Из ИменаТаблицНачислений Цикл
			
			ТаблицаНачислений = ДанныеЗаполнения[ИмяТаблицыНачислений];
			
			Если ТипЗнч(ТаблицаНачислений) <> Тип("ТаблицаЗначений") Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстЗапросаПоТаблице =  
			"ВЫБРАТЬ
			|	Начисления.Сотрудник КАК Сотрудник,
			|	Начисления.Подразделение,
			|	Начисления.ДатаНачала КАК ДатаНачала,
			|	Начисления.ДатаОкончания КАК ДатаОкончания,
			|	Начисления.Начисление КАК Начисление,
			|	Начисления.Результат КАК Сумма,
			|	Начисления.СуммаВычета КАК СуммаВычета,
			|	Начисления.КодВычета КАК КодВычета,
			|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	Начисления.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета,
			|	Начисления.ДокументОснование КАК ДокументОснование
			|ПОМЕСТИТЬ ВТЗаписиНачислений
			|ИЗ
			|	#ТаблицаНачислений КАК Начисления
			|;";
			
			// Проверяем необязательные поля.
			Для Каждого КлючИЗначение Из НеобязательныеПоля Цикл
				ИмяПоля = КлючИЗначение.Ключ;
				ЗначениеПоУмолчанию = КлючИЗначение.Значение;
				Если ТаблицаНачислений.Колонки.Найти(ИмяПоля) = Неопределено Тогда
					ТекстЗапросаПоТаблице = СтрЗаменить(ТекстЗапросаПоТаблице, "Начисления." + ИмяПоля + " КАК", ЗначениеПоУмолчанию + " КАК")
				КонецЕсли;
			КонецЦикла;
			
			ТекстЗапросаПоТаблице = СтрЗаменить(ТекстЗапросаПоТаблице, "ПОМЕСТИТЬ ВТЗаписиНачислений", "ПОМЕСТИТЬ ВТЗаписиНачислений" + ИмяТаблицыНачислений);
			Запрос.УстановитьПараметр(ИмяТаблицыНачислений, ТаблицаНачислений);
			
			ТекстЗапросаПоТаблице = СтрЗаменить(ТекстЗапросаПоТаблице, "#ТаблицаНачислений", "&"+ИмяТаблицыНачислений);
			
			ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПоТаблице;
			
			Если Не ПерваяТаблица Тогда
				ТекстЗапросаОбъединения = ТекстЗапросаОбъединения + "
				|ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;
			
			ТекстОбъединения = 
			"ВЫБРАТЬ * 
			|	ПОМЕСТИТЬ ВТЗаписиНачислений
			|ИЗ ВТЗаписиНачислений" + ИмяТаблицыНачислений;
			Если Не ПерваяТаблица Тогда
				ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "ПОМЕСТИТЬ ВТЗаписиНачислений", "");
			КонецЕсли;
			
			ТекстЗапросаОбъединения = ТекстЗапросаОбъединения + ТекстОбъединения;
			
			ПерваяТаблица = Ложь;
			
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаОбъединения;
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		
		Если ИспользоватьРаспределениеПоТерриториямУсловиямТруда Тогда
			
			РаспределениеПоТерриториямУсловиямТруда = РасчетЗарплатыРасширенный.ПустаяТаблицаРаспределениеПоТерриториямУсловиямТруда();
			
			Для Каждого ИмяТаблицы Из ИменаТаблицНачислений Цикл
				
				Для Каждого СтрокаТаблицы Из ДанныеЗаполнения[ИмяТаблицы] Цикл
					
					Если Не РасчетЗарплатыРасширенный.ЕстьПолеВСтрокеКоллекции(СтрокаТаблицы, "РаспределениеПоТерриториямУсловиямТруда") Тогда
						Продолжить;
					КонецЕсли;
					
					РаспределениеРезультатов = СтрокаТаблицы.РаспределениеПоТерриториямУсловиямТруда;
					ИдентификаторСтроки = СтрокаТаблицы[ОписанияТаблицФормы[ИмяТаблицы].ИмяРеквизитаИдентификаторСтроки];
					
					Если РаспределениеРезультатов = Неопределено И ДанныеРаспределенияПоТерриториямУсловиямТруда <> Неопределено Тогда
						
						Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
						РаспределениеРезультатов = ДанныеРаспределенияПоТерриториямУсловиямТруда.НайтиСтроки(Отбор);
						
					КонецЕсли;
					
					Если РаспределениеРезультатов = Неопределено Тогда 
						Продолжить;
					КонецЕсли;
					
					Для Каждого СтрокаРаспределения Из РаспределениеРезультатов Цикл
						НоваяСтрока = РаспределениеПоТерриториямУсловиямТруда.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспределения);
						НоваяСтрока.ИдентификаторСтроки = СтрокаТаблицы.ИдентификаторСтроки;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ИмяВТРаспределениеПоТерриториямУсловиямТрудаПредварительно = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТРаспределениеПоТерриториямУсловиямТрудаПредварительно");
			ИмяВТСводноеРаспределениеПоТерриториям = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТСводноеРаспределениеПоТерриториям");
			
			Запрос.УстановитьПараметр("РаспределениеПоТерриториямУсловиямТруда", РаспределениеПоТерриториямУсловиямТруда);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РаспределениеПоТерриториямУсловиямТруда.ИдентификаторСтроки,
			|	РаспределениеПоТерриториямУсловиямТруда.Территория,
			|	РаспределениеПоТерриториямУсловиямТруда.УсловияТруда,
			|	РаспределениеПоТерриториямУсловиямТруда.Результат
			|ПОМЕСТИТЬ ВТРаспределениеПоТерриториямУсловиямТрудаПредварительно
			|ИЗ
			|	&РаспределениеПоТерриториямУсловиямТруда КАК РаспределениеПоТерриториямУсловиямТруда
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РаспределениеПоТерриториямУсловиямТрудаПредварительно.ИдентификаторСтроки,
			|	РаспределениеПоТерриториямУсловиямТрудаПредварительно.Территория,
			|	СУММА(РаспределениеПоТерриториямУсловиямТрудаПредварительно.Результат) КАК Результат
			|ПОМЕСТИТЬ ВТСводноеРаспределениеПоТерриториям
			|ИЗ
			|	ВТРаспределениеПоТерриториямУсловиямТрудаПредварительно КАК РаспределениеПоТерриториямУсловиямТрудаПредварительно
			|
			|СГРУППИРОВАТЬ ПО
			|	РаспределениеПоТерриториямУсловиямТрудаПредварительно.ИдентификаторСтроки,
			|	РаспределениеПоТерриториямУсловиямТрудаПредварительно.Территория";
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТРаспределениеПоТерриториямУсловиямТрудаПредварительно", ИмяВТРаспределениеПоТерриториямУсловиямТрудаПредварительно);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТСводноеРаспределениеПоТерриториям", ИмяВТСводноеРаспределениеПоТерриториям);
			Запрос.Выполнить();
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаписиНачислений.Сотрудник КАК Сотрудник,
			|	ЗаписиНачислений.Подразделение,
			|	ЗаписиНачислений.ДатаНачала КАК ДатаНачала,
			|	НАЧАЛОПЕРИОДА(ЗаписиНачислений.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
			|	ЗаписиНачислений.Начисление КАК Начисление,
			|	ЕСТЬNULL(РаспределениеПоТерриториямУсловиямТруда.Результат, ЗаписиНачислений.Сумма) КАК Сумма,
			|	ЗаписиНачислений.СуммаВычета КАК СуммаВычета,
			|	ЗаписиНачислений.КодВычета КАК КодВычета,
			|	ЗаписиНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	ЗаписиНачислений.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета,
			|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Начисления.ИспользованиеПериода КАК ИспользованиеПериода,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(РаспределениеПоТерриториямУсловиямТруда.Территория, ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
			|			ТОГДА ЗаписиНачислений.Подразделение
			|		ИНАЧЕ РаспределениеПоТерриториямУсловиямТруда.Территория
			|	КОНЕЦ КАК ТерриторияВыполненияРаботВОрганизации,
			|	ЗаписиНачислений.ДокументОснование КАК ДокументОснование
			|ИЗ
			|	ВТЗаписиНачислений КАК ЗаписиНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
			|		ПО ЗаписиНачислений.Сотрудник = Сотрудники.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
			|		ПО ЗаписиНачислений.Начисление = Начисления.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСводноеРаспределениеПоТерриториям КАК РаспределениеПоТерриториямУсловиямТруда
			|		ПО ЗаписиНачислений.ИдентификаторСтроки = РаспределениеПоТерриториямУсловиямТруда.ИдентификаторСтроки";
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТСводноеРаспределениеПоТерриториям", ИмяВТСводноеРаспределениеПоТерриториям);
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаписиНачислений.Сотрудник КАК Сотрудник,
			|	ЗаписиНачислений.Подразделение,
			|	ЗаписиНачислений.ДатаНачала КАК ДатаНачала,
			|	НАЧАЛОПЕРИОДА(ЗаписиНачислений.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
			|	ЗаписиНачислений.Начисление КАК Начисление,
			|	ЗаписиНачислений.Сумма КАК Сумма,
			|	ЗаписиНачислений.СуммаВычета КАК СуммаВычета,
			|	ЗаписиНачислений.КодВычета КАК КодВычета,
			|	ЗаписиНачислений.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	ЗаписиНачислений.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета,
			|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
			|	Начисления.ИспользованиеПериода КАК ИспользованиеПериода,
			|	ЗаписиНачислений.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
			|	ЗаписиНачислений.ДокументОснование КАК ДокументОснование
			|ИЗ
			|	ВТЗаписиНачислений КАК ЗаписиНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
			|		ПО ЗаписиНачислений.Сотрудник = Сотрудники.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
			|		ПО ЗаписиНачислений.Начисление = Начисления.Ссылка";
			
		КонецЕсли;
		
		НачисленияПоСотрудникам = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Строка Из НачисленияПоСотрудникам Цикл
			
			НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание	= Строка.Начисление;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= НачалоМесяца(НоваяСтрока.ДатаНачала);
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("НачисленияПоДоговорам") И ДанныеЗаполнения.НачисленияПоДоговорам.Количество() > 0 Тогда
		
		КодыНДФЛДоговорыРаботыУслуги = УчетНДФЛРасширенный.ДоходыНДФЛПоВидуОсобыхНачислений(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги);
		
		Запрос.УстановитьПараметр("НачисленияПоДоговорам", ДанныеЗаполнения.НачисленияПоДоговорам);
		Запрос.УстановитьПараметр("КодыНДФЛДоговорыРаботыУслуги",КодыНДФЛДоговорыРаботыУслуги);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Начисления.ИдентификаторСтроки,
		|	Начисления.Сотрудник,
		|	Начисления.Подразделение,
		|	Начисления.Результат,
		|	Начисления.СуммаВычета,
		|	Начисления.КодДохода,
		|	Начисления.КодВычета,
		|	Начисления.ДокументОснование
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	&НачисленияПоДоговорам КАК Начисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.Подразделение КАК Подразделение,
		|	ВЫБОР
		|		КОГДА Начисления.КодДохода В (&КодыНДФЛДоговорыРаботыУслуги)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа)
		|	КОНЕЦ КАК Начисление,
		|	Начисления.Результат КАК Сумма,
		|	Начисления.СуммаВычета КАК СуммаВычета,
		|	Начисления.КодДохода КАК КодДохода,
		|	Начисления.КодВычета КАК КодВычета,
		|	Начисления.ДокументОснование КАК ДокументОснование,
		|	Сотрудники.ФизическоеЛицо,
		|	Начисления.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
		|	Начисления.ИдентификаторСтроки
		|ИЗ
		|	ВТНачисления КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
		|		ПО Начисления.Сотрудник = Сотрудники.Ссылка";
		
		НачисленияПоСотрудникам = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Строка Из НачисленияПоСотрудникам Цикл
			
			НоваяСтрока = НачисленияУдержанияПоСотрудникам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.Период				= ПериодРегистрации;
			НоваяСтрока.НачислениеУдержание	= Строка.Начисление;
			НоваяСтрока.Организация			= Организация;
			НоваяСтрока.ПериодДействия		= НачалоМесяца(НоваяСтрока.ДатаНачала);
			
			НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат НачисленияУдержанияПоСотрудникам;

КонецФункции

// Функция возвращает таблицу значений с данными распределения начислений.
//		Поля таблицы описаны в НоваяТаблицаРаспределениеРезультатовНачислений().
//
// Параметры:
//	ПараметрыДляРаспределения - структура параметров.
//
Функция РаспределениеРезультатовНачисленийПоИсточникамФинансирования(ПараметрыДляРаспределения)
	
	Организация 			= ПараметрыДляРаспределения.Организация;
	ПериодРегистрации 		= ПараметрыДляРаспределения.ПериодРегистрации;
	ДанныеЗаполнения 		= ПараметрыДляРаспределения.ДанныеЗаполнения;
	ДокументСсылка  		= ПараметрыДляРаспределения.ДокументСсылка;
	ОписаниеДокумента 		= ПараметрыДляРаспределения.ОписаниеДокумента; 
	НачислениеИзШапкиДокумента = ПараметрыДляРаспределения.НачислениеИзШапкиДокумента;
	БухучетПервичногоДокумента = ПараметрыДляРаспределения.БухучетПервичногоДокумента;
	БухучетНачисленийИзФормы   = ПараметрыДляРаспределения.БухучетНачисленийИзФормы;
	КоэффициентыРаспределенияСреднегоЗаработка    = ПараметрыДляРаспределения.КоэффициентыРаспределенияСреднегоЗаработка;
	КоэффициентыРаспределенияСреднегоЗаработкаФСС = ПараметрыДляРаспределения.КоэффициентыРаспределенияСреднегоЗаработкаФСС;
	
	ТаблицаРаспределениеРезультатовНачислений = НоваяТаблицаРаспределениеРезультатовНачислений(Истина);
	
	// Подготовим таблицу с начислениями по сотрудникам
	// структура таблицы см УчетНачисленнойЗарплатыРасширенный.НоваяТаблицаНачисленияУдержанияПоСотрудникам
	// в таблицу добавлена колонка ИдентификаторСтроки.
	НачисленияПоСотрудникам = НачисленияПоСотрудникамИзДанныхЗаполненияДокумента(ПараметрыДляРаспределения);
	
	РезультатыРасчетаЗарплаты = ОтражениеЗарплатыВУчете.НоваяСтруктураРезультатыРасчетаЗарплаты();
	РезультатыРасчетаЗарплаты.НачисленияУдержания = НачисленияПоСотрудникам;
	ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаНачислений.Организация,
	|	ТаблицаНачислений.Сотрудник,
	|	ТаблицаНачислений.ФизическоеЛицо,
	|	ТаблицаНачислений.Подразделение,
	|	ТаблицаНачислений.ВидОперации,
	|	ТаблицаНачислений.Начисление,
	|	ТаблицаНачислений.ДатаНачала,
	|	ТаблицаНачислений.ДатаОкончания,
	|	ТаблицаНачислений.Сумма,
	|	ТаблицаНачислений.ДокументОснование,
	|	ТаблицаНачислений.ИдентификаторСтроки,
	|	ТаблицаНачислений.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаНачислений";
	Запрос.Выполнить();
	
	ПроцентЕНВД = ?(Не ЗначениеЗаполнено(Организация), Неопределено, ОтражениеЗарплатыВБухучете.ПроцентЕНВД(Организация, ПериодРегистрации));
	
	ДанныеФормы = ДополнительныеПараметрыДляОтраженияВБухучете();
	ДанныеФормы.ДокументСсылка = ДокументСсылка;
	ДанныеФормы.БухучетПервичногоДокумента = БухучетПервичногоДокумента;
	ДанныеФормы.БухучетНачисленийИзФормы   = БухучетНачисленийИзФормы;
	ДанныеФормы.КоэффициентыРаспределенияСреднегоЗаработка    = КоэффициентыРаспределенияСреднегоЗаработка;
	ДанныеФормы.КоэффициентыРаспределенияСреднегоЗаработкаФСС = КоэффициентыРаспределенияСреднегоЗаработкаФСС;
	
	СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц, ДанныеФормы);
	
	Запрос.УстановитьПараметр("НачисленияПоСотрудникам", НачисленияПоСотрудникам);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК Период,
	|	НачисленияПоСотрудникам.Организация,
	|	НачисленияПоСотрудникам.ФизическоеЛицо,
	|	НачисленияПоСотрудникам.Сотрудник,
	|	НачисленияПоСотрудникам.Подразделение,
	|	НачисленияПоСотрудникам.НачислениеУдержание,
	|	НачисленияПоСотрудникам.Сумма,
	|	НачисленияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияПоСотрудникам.ПериодДействия,
	|	НачисленияПоСотрудникам.ДокументОснование,
	|	НачисленияПоСотрудникам.Контрагент,
	|	НачисленияПоСотрудникам.ДатаНачала,
	|	НачисленияПоСотрудникам.ДатаОкончания,
	|	НачисленияПоСотрудникам.ИдентификаторСтроки,
	|	НачисленияПоСотрудникам.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТНачисленияПоСотрудникам
	|ИЗ
	|	&НачисленияПоСотрудникам КАК НачисленияПоСотрудникам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияПоСотрудникам.ИдентификаторСтроки,
	|	НачисленияПоСотрудникам.Сотрудник,
	|	НачисленияПоСотрудникам.ФизическоеЛицо,
	|	НачисленияПоСотрудникам.Подразделение,
	|	ЕСТЬNULL(БухучетНачислений.ПериодПринятияРасходов, НачисленияПоСотрудникам.ПериодДействия) КАК ПериодПринятияРасходов,
	|	ЕСТЬNULL(БухучетНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(БухучетНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(БухучетНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	|	ЕСТЬNULL(БухучетНачислений.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации,
	|	ЕСТЬNULL(БухучетНачислений.Сумма, НачисленияПоСотрудникам.Сумма) КАК Результат,
	|	ЕСТЬNULL(БухучетНачислений.Сумма, НачисленияПоСотрудникам.Сумма) КАК Сумма,
	|	ЕСТЬNULL(БухучетНачислений.ОблагаетсяЕНВД, ЛОЖЬ) КАК ОблагаетсяЕНВД,
	|	ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено) КАК ГруппаНачисленияУдержанияВыплаты,
	|	НачисленияПоСотрудникам.ДатаНачала,
	|	НачисленияПоСотрудникам.НачислениеУдержание КАК Начисление,
	|	НачисленияПоСотрудникам.ТерриторияВыполненияРаботВОрганизации КАК Территория
	|ИЗ
	|	ВТНачисленияПоСотрудникам КАК НачисленияПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
	|		ПО НачисленияПоСотрудникам.ИдентификаторСтроки = БухучетНачислений.ИдентификаторСтроки
	|			И НачисленияПоСотрудникам.ТерриторияВыполненияРаботВОрганизации = БухучетНачислений.ТерриторияВыполненияРаботВОрганизации";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(Результат, ТаблицаРаспределениеРезультатовНачислений);
	
	Возврат ТаблицаРаспределениеРезультатовНачислений;

КонецФункции

// Возвращает таблицу значений с колонками
//	ФизическоеЛицо.
//	Сотрудник
//	Подразделение
//	СтатьяФинансирования
//	СтатьяРасходов
//	Сумма
//
// Параметры:
//	Движения - движения регистратора, которые формируются в СформироватьДвижения
//	МассивФизическихЛиц
//	ПериодРегистрации.
//	Организация
//
Функция БазаУдержанийДляРаспределенияПоИсточникам(БухучетНачисленияУдержанияПоСотрудникам, МассивФизическихЛиц, ПериодРегистрации, Организация, ОкончательныйРасчет, ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("БухучетНачисления", БухучетНачисленияУдержанияПоСотрудникам);
	
	Если ОкончательныйРасчет Тогда
		
		// Получим уже зарегистрированное распределение начислений по статьям финансирования, без учета текущего документа и
		// без учета начислений межрасчетного периода.
		СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, Запрос.МенеджерВременныхТаблиц, МассивФизическихЛиц, ДокументСсылка, Истина, Истина);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Начисление,
		|	БухучетНачисления.СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов,
		|	БухучетНачисления.Сумма
		|ПОМЕСТИТЬ ВТБухучетНачисленийТекущегоДокумента
		|ИЗ
		|	&БухучетНачисления КАК БухучетНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Начисление,
		|	БухучетНачисления.СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов,
		|	СУММА(БухучетНачисления.Сумма) КАК Сумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник КАК Сотрудник,
		|		БухучетНачисления.Подразделение КАК Подразделение,
		|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|		БухучетНачисления.НачислениеУдержание КАК Начисление,
		|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|		БухучетНачисления.Сумма КАК Сумма
		|	ИЗ
		|		ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник,
		|		БухучетНачисления.Подразделение,
		|		БухучетНачисления.ФизическоеЛицо,
		|		БухучетНачисления.Начисление,
		|		БухучетНачисления.СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов,
		|		БухучетНачисления.Сумма
		|	ИЗ
		|		ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачисления) КАК БухучетНачисления
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Начисление,
		|	БухучетНачисления.СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов
		|
		|ИМЕЮЩИЕ
		|	СУММА(БухучетНачисления.Сумма) <> 0";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачисления.Сотрудник,
		|	БухучетНачисления.Подразделение,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.Начисление,
		|	БухучетНачисления.СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов,
		|	БухучетНачисления.Сумма
		|ПОМЕСТИТЬ ВТБухучетНачисленийТекущегоДокумента
		|ИЗ
		|	&БухучетНачисления КАК БухучетНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма
		|ИЗ
		|	ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов
		|
		|ИМЕЮЩИЕ
		|	СУММА(БухучетНачислений.Сумма) <> 0";
		
	КонецЕсли;
	
	БазаУдержаний = Запрос.Выполнить().Выгрузить();

	Возврат БазаУдержаний;
	
КонецФункции

// Возвращает таблицу значений со структурой, описанной в методе НоваяТаблицаРаспределениеРезультатовУдержаний().
//	
// Параметры:	
// 		ПараметрыДляРаспределения - структура, см ОписаниеПараметровДляРаспределенияРезультатовРасчета.
//
Функция РаспределениеРезультатовУдержанийПоИсточникамФинансирования(ПараметрыДляРаспределения)

	ТаблицаРаспределениеРезультатовУдержаний = НоваяТаблицаРаспределениеРезультатовУдержаний();
	
	Организация 			= ПараметрыДляРаспределения.Организация;
	ПериодРегистрации 		= ПараметрыДляРаспределения.ПериодРегистрации;
	ДанныеЗаполнения 		= ПараметрыДляРаспределения.ДанныеЗаполнения;
	ДокументСсылка  		= ПараметрыДляРаспределения.ДокументСсылка;
	ОкончательныйРасчет 	= ПараметрыДляРаспределения.ОкончательныйРасчет;
	БухучетНачисленияУдержанияПоСотрудникам = ПараметрыДляРаспределения.БухучетНачисленияУдержанияПоСотрудникам;
	
	Если НЕ ДанныеЗаполнения.Свойство("Удержания") Или ДанныеЗаполнения.Удержания.Количество() = 0 Тогда
		Возврат ТаблицаРаспределениеРезультатовУдержаний;
	КонецЕсли;
	
	Колонки = "ФизическоеЛицо,Удержание,Результат,ДокументОснование,ПлатежныйАгент,Получатель,ДатаНачала,ДатаОкончания,ИдентификаторСтроки";
	ТаблицаУдержаний = ДанныеЗаполнения.Удержания.Скопировать(,Колонки);
	ТаблицаУдержаний.Колонки.ПлатежныйАгент.Имя = "Контрагент";
	ТаблицаУдержаний.Колонки.Результат.Имя = "Сумма";
	
	МассивФизическихЛиц = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаУдержаний, "ФизическоеЛицо", Истина);
	БазаУдержаний = БазаУдержанийДляРаспределенияПоИсточникам(БухучетНачисленияУдержанияПоСотрудникам, МассивФизическихЛиц, ПериодРегистрации, Организация, ОкончательныйРасчет, ДокументСсылка);
	БазаУдержаний.Индексы.Добавить("ФизическоеЛицо");
	
	КатегорииОплатыБольничного = ПланыВидовРасчета.Начисления.КатегорииОплатыБольничного();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КатегорииБЛ", КатегорииОплатыБольничного);
	Запрос.УстановитьПараметр("Удержания", ТаблицаУдержаний);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо,
	|	Удержания.Удержание,
	|	Удержания.Сумма,
	|	Удержания.ДатаНачала,
	|	Удержания.ДатаОкончания,
	|	Удержания.ДокументОснование,
	|	Удержания.Контрагент,
	|	Удержания.Получатель,
	|	Удержания.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТУдержания
	|ИЗ
	|	&Удержания КАК Удержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(УсловияУдержанияПоИсполнительномуДокументу.Период) КАК Период,
	|	УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент,
	|	Удержания.ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТМаксимальныеПериоды
	|ИЗ
	|	РегистрСведений.УсловияУдержанияПоИсполнительномуДокументу КАК УсловияУдержанияПоИсполнительномуДокументу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержания КАК Удержания
	|		ПО УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент = Удержания.ДокументОснование
	|			И УсловияУдержанияПоИсполнительномуДокументу.Период <= Удержания.ДатаНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ИдентификаторСтроки,
	|	УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеПериоды.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	УсловияУдержанияПоИсполнительномуДокументу.УчитыватьБольничныеЛисты
	|ПОМЕСТИТЬ ВТУсловияУдержания
	|ИЗ
	|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УсловияУдержанияПоИсполнительномуДокументу КАК УсловияУдержанияПоИсполнительномуДокументу
	|		ПО МаксимальныеПериоды.Период = УсловияУдержанияПоИсполнительномуДокументу.Период
	|			И МаксимальныеПериоды.ИсполнительныйДокумент = УсловияУдержанияПоИсполнительномуДокументу.ИсполнительныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанияБазовыеВидыРасчета.Ссылка КАК Ссылка,
	|	УдержанияБазовыеВидыРасчета.ВидРасчета,
	|	УдержанияБазовыеВидыРасчета.Ссылка.КатегорияУдержания КАК КатегорияУдержания
	|ИЗ
	|	ПланВидовРасчета.Удержания.БазовыеВидыРасчета КАК УдержанияБазовыеВидыРасчета
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУдержаний.ФизическоеЛицо,
	|	СписокУдержаний.Удержание,
	|	СписокУдержаний.Сумма,
	|	СписокУдержаний.ДатаНачала,
	|	СписокУдержаний.ДатаОкончания,
	|	СписокУдержаний.ДокументОснование,
	|	СписокУдержаний.Контрагент,
	|	СписокУдержаний.ИдентификаторСтроки,
	|	ЕСТЬNULL(УсловияУдержанияПоИсполнительномуДокументу.УчитыватьБольничныеЛисты, ЛОЖЬ) КАК УчитыватьБольничныеЛисты
	|ИЗ
	|	ВТУдержания КАК СписокУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО СписокУдержаний.Удержание = Удержания.Ссылка
	|			И (Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУсловияУдержания КАК УсловияУдержанияПоИсполнительномуДокументу
	|		ПО СписокУдержаний.ИдентификаторСтроки = УсловияУдержанияПоИсполнительномуДокументу.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУдержаний.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(УдержанияИсполнительныйЛист.ИдентификаторСтроки, 0) КАК ИдентификаторСтрокиБазыУдержаний
	|ИЗ
	|	ВТУдержания КАК СписокУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО СписокУдержаний.Удержание = Удержания.Ссылка
	|			И (Удержания.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержания КАК УдержанияИсполнительныйЛист
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК УдержанияВторойСписок
	|			ПО УдержанияИсполнительныйЛист.Удержание = УдержанияВторойСписок.Ссылка
	|				И (УдержанияВторойСписок.КатегорияУдержания = ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист))
	|		ПО СписокУдержаний.Контрагент = УдержанияИсполнительныйЛист.Контрагент
	|			И СписокУдержаний.Получатель = УдержанияИсполнительныйЛист.Получатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокУдержаний.ФизическоеЛицо,
	|	СписокУдержаний.Удержание,
	|	СписокУдержаний.Сумма,
	|	СписокУдержаний.ДатаНачала,
	|	СписокУдержаний.ДатаОкончания,
	|	СписокУдержаний.ДокументОснование,
	|	СписокУдержаний.Контрагент,
	|	СписокУдержаний.ИдентификаторСтроки
	|ИЗ
	|	ВТУдержания КАК СписокУдержаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания КАК Удержания
	|		ПО СписокУдержаний.Удержание = Удержания.Ссылка
	|			И (НЕ Удержания.КатегорияУдержания В (ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ВознаграждениеПлатежногоАгента), ЗНАЧЕНИЕ(Перечисление.КатегорииУдержаний.ИсполнительныйЛист)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&КатегорииБЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМаксимальныеПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУсловияУдержания";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаБазовыеВР = Результат[3].Выбрать();
	УдержанияИсполнительныеЛисты = Результат[4].Выгрузить();
	РезультатВознагражденияПлатежногоАгента = Результат[5];
	ПрочиеУдержания = Результат[6].Выгрузить();
	ВРОплатыБЛ = Результат[7].Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ВидыНачисленийДополненияРасчетнойБазы = ИсполнительныеЛисты.ВидыНачисленийДополненияРасчетнойБазыУдержанийПоИсполнительнымДокументам();
	
	БазовыеВидыРасчета = Новый Соответствие;
	БазовыеВидыРасчетаБезБЛ = Новый Соответствие;
	Пока ВыборкаБазовыеВР.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		ВРУдержание = ВыборкаБазовыеВР.Ссылка;
		
		МассивВР = Новый Массив;
		МассивВРБезБЛ = Новый Массив;
		Если ВыборкаБазовыеВР.КатегорияУдержания = Перечисления.КатегорииУдержаний.ИсполнительныйЛист Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивВР, ВидыНачисленийДополненияРасчетнойБазы);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивВРБезБЛ, ВидыНачисленийДополненияРасчетнойБазы);
			Пока ВыборкаБазовыеВР.Следующий() Цикл
				МассивВР.Добавить(ВыборкаБазовыеВР.ВидРасчета);
				Если ВРОплатыБЛ.Найти(ВыборкаБазовыеВР.ВидРасчета) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;	
				МассивВРБезБЛ.Добавить(ВыборкаБазовыеВР.ВидРасчета);
			КонецЦикла;
		Иначе
			Пока ВыборкаБазовыеВР.Следующий() Цикл
				МассивВР.Добавить(ВыборкаБазовыеВР.ВидРасчета);
			КонецЦикла;
		КонецЕсли;
			
		БазовыеВидыРасчета.Вставить(ВРУдержание, МассивВР);
		БазовыеВидыРасчетаБезБЛ.Вставить(ВРУдержание, МассивВРБезБЛ);
		
	КонецЦикла;
	
	Если ПрочиеУдержания.Количество()>0 Тогда
		ТаблицаРаспределения = ТаблицаРаспределениеРезультатовУдержаний.СкопироватьКолонки();
		РаспределитьУдержанияПоБазе(ТаблицаРаспределения, ПрочиеУдержания, БазаУдержаний, Организация, ПериодРегистрации, БазовыеВидыРасчета);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, ТаблицаРаспределениеРезультатовУдержаний);
	КонецЕсли;

	// Исполнительные листы
	Если УдержанияИсполнительныеЛисты.Количество()>0 Тогда
		
		Отбор = Новый Структура("УчитыватьБольничныеЛисты", Истина);
		НайденныеСтроки = УдержанияИсполнительныеЛисты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			ТаблицаРаспределения = ТаблицаРаспределениеРезультатовУдержаний.СкопироватьКолонки();
			РаспределитьУдержанияПоБазе(ТаблицаРаспределения, НайденныеСтроки, БазаУдержаний, Организация, ПериодРегистрации, БазовыеВидыРасчета);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, ТаблицаРаспределениеРезультатовУдержаний);
		КонецЕсли;
		
		Отбор.УчитыватьБольничныеЛисты = Ложь;
		НайденныеСтроки = УдержанияИсполнительныеЛисты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество()>0 Тогда
			ТаблицаРаспределения = ТаблицаРаспределениеРезультатовУдержаний.СкопироватьКолонки();
			РаспределитьУдержанияПоБазе(ТаблицаРаспределения, НайденныеСтроки, БазаУдержаний, Организация, ПериодРегистрации, БазовыеВидыРасчетаБезБЛ);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, ТаблицаРаспределениеРезультатовУдержаний);
		КонецЕсли
		
	КонецЕсли;
	
	// Вознаграждение платежного агента, распределяем по базе исполнительных листов
	Если Не РезультатВознагражденияПлатежногоАгента.Пустой() Тогда
		
		Отбор = Новый Структура("ИдентификаторСтроки");
		Выборка = РезультатВознагражденияПлатежногоАгента.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторСтроки") Цикл
			
			ИдентификаторСтроки = Выборка.ИдентификаторСтроки;
			СтрокиКРаспределению = ТаблицаУдержаний.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки));
			СтрокаКРаспределению = СтрокиКРаспределению[0]; // строка ТЗ которую надо распределить
			
			МассивБаз = Новый Массив;
			Пока Выборка.Следующий() Цикл
				Отбор.ИдентификаторСтроки = Выборка.ИдентификаторСтрокиБазыУдержаний;
				ТаблицаБазы = ТаблицаРаспределениеРезультатовУдержаний.Скопировать(Отбор);
				Если ТаблицаБазы.Количество() > 0 Тогда
					ТаблицаБазы.Колонки.Результат.Имя = "Сумма";
					ТаблицаБазы.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
					ТаблицаБазы.ЗаполнитьЗначения(СтрокаКРаспределению.ФизическоеЛицо,"ФизическоеЛицо");
					МассивБаз.Добавить(ТаблицаБазы);
				КонецЕсли;
			КонецЦикла;
			
			Если МассивБаз.Количество() = 0 Тогда
				// удерживаем из всех начислений
				ТаблицаРаспределения = ТаблицаРаспределениеРезультатовУдержаний.СкопироватьКолонки();
				РаспределитьУдержанияПоБазе(ТаблицаРаспределения, СтрокиКРаспределению, БазаУдержаний, Организация, ПериодРегистрации);
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, ТаблицаРаспределениеРезультатовУдержаний);
			Иначе
				
				ТаблицаБазы = МассивБаз[0];
				Для Сч = 1 По МассивБаз.Количество() - 1 Цикл
					ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаБазы, МассивБаз[Сч]);
				КонецЦикла;
				
				ТаблицаРаспределения = ТаблицаРаспределениеРезультатовУдержаний.СкопироватьКолонки();
				РаспределитьУдержанияПоБазе(ТаблицаРаспределения, СтрокиКРаспределению, ТаблицаБазы, Организация, ПериодРегистрации);
				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения, ТаблицаРаспределениеРезультатовУдержаний);
				
			КонецЕсли;
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат ТаблицаРаспределениеРезультатовУдержаний;
	
КонецФункции

// Возвращает таблицу значений со структурой, описанной в методе НоваяТаблицаРаспределениеРезультатовУдержаний().
//	
// Параметры:	
//		ПараметрыДляРаспределения - структура, см ОписаниеПараметровДляРаспределенияРезультатовРасчета.
//
Функция РаспределениеРезультатовПогашениеЗаймовПоИсточникамФинансирования(ПараметрыДляРаспределения)

	ТаблицаРаспределениеРезультатовУдержаний = НоваяТаблицаРаспределениеРезультатовУдержаний();
	
	Организация 			= ПараметрыДляРаспределения.Организация;
	ПериодРегистрации 		= ПараметрыДляРаспределения.ПериодРегистрации;
	ДанныеЗаполнения 		= ПараметрыДляРаспределения.ДанныеЗаполнения;
	ДокументСсылка  		= ПараметрыДляРаспределения.ДокументСсылка;
	ОкончательныйРасчет 	= ПараметрыДляРаспределения.ОкончательныйРасчет;
	БухучетНачисленияУдержанияПоСотрудникам = ПараметрыДляРаспределения.БухучетНачисленияУдержанияПоСотрудникам;
	
	Если НЕ ДанныеЗаполнения.Свойство("ПогашениеЗаймов") Или ДанныеЗаполнения.ПогашениеЗаймов.Количество() = 0 Тогда
		Возврат ТаблицаРаспределениеРезультатовУдержаний;
	КонецЕсли;
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ПогашениеЗаймов", ДанныеЗаполнения.ПогашениеЗаймов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПогашениеЗаймов.ИдентификаторСтроки,
	|	ПогашениеЗаймов.ФизическоеЛицо,
	|	ПогашениеЗаймов.Подразделение,
	|	ПогашениеЗаймов.ПогашениеЗайма,
	|	ПогашениеЗаймов.ПогашениеПроцентов,
	|	ПогашениеЗаймов.НачисленоПроцентов,
	|	ПогашениеЗаймов.МатериальнаяВыгода,
	|	ПогашениеЗаймов.НалогНаМатериальнуюВыгоду
	|ПОМЕСТИТЬ ВТПогашениеЗаймов
	|ИЗ
	|	&ПогашениеЗаймов КАК ПогашениеЗаймов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПогашениеЗаймов.ИдентификаторСтроки,
	|	ПогашениеЗаймов.ФизическоеЛицо,
	|	ПогашениеЗаймов.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПогашениеЗаймаИзЗарплаты) КАК Удержание,
	|	ПогашениеЗаймов.ПогашениеЗайма КАК Сумма
	|ИЗ
	|	ВТПогашениеЗаймов КАК ПогашениеЗаймов
	|ГДЕ
	|	ПогашениеЗаймов.ПогашениеЗайма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПогашениеЗаймов.ИдентификаторСтроки,
	|	ПогашениеЗаймов.ФизическоеЛицо,
	|	ПогашениеЗаймов.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ),
	|	ПогашениеЗаймов.НалогНаМатериальнуюВыгоду
	|ИЗ
	|	ВТПогашениеЗаймов КАК ПогашениеЗаймов
	|ГДЕ
	|	ПогашениеЗаймов.НалогНаМатериальнуюВыгоду <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПогашениеЗаймов.ИдентификаторСтроки,
	|	ПогашениеЗаймов.ФизическоеЛицо,
	|	ПогашениеЗаймов.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПроцентыПоЗайму),
	|	ПогашениеЗаймов.ПогашениеПроцентов
	|ИЗ
	|	ВТПогашениеЗаймов КАК ПогашениеЗаймов
	|ГДЕ
	|	ПогашениеЗаймов.ПогашениеПроцентов <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПогашениеЗаймов.ИдентификаторСтроки,
	|	ПогашениеЗаймов.ФизическоеЛицо,
	|	ПогашениеЗаймов.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НачисленоПроцентовПоЗайму),
	|	ПогашениеЗаймов.НачисленоПроцентов
	|ИЗ
	|	ВТПогашениеЗаймов КАК ПогашениеЗаймов
	|ГДЕ
	|	ПогашениеЗаймов.ПогашениеПроцентов <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПогашениеЗаймов.ИдентификаторСтроки,
	|	ПогашениеЗаймов.ФизическоеЛицо,
	|	ПогашениеЗаймов.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.МатериальнаяВыгодаПоЗаймам),
	|	ПогашениеЗаймов.МатериальнаяВыгода
	|ИЗ
	|	ВТПогашениеЗаймов КАК ПогашениеЗаймов
	|ГДЕ
	|	ПогашениеЗаймов.МатериальнаяВыгода <> 0";
	
	ПогашениеЗаймов = Запрос.Выполнить().Выгрузить();
	
	МассивФизическихЛиц = ОбщегоНазначения.ВыгрузитьКолонку(ПогашениеЗаймов, "ФизическоеЛицо", Истина);
	БазаУдержаний = БазаУдержанийДляРаспределенияПоИсточникам(БухучетНачисленияУдержанияПоСотрудникам, МассивФизическихЛиц, ПериодРегистрации, Организация, ОкончательныйРасчет, ДокументСсылка);
	БазаУдержаний.Индексы.Добавить("ФизическоеЛицо");
	
	РаспределитьУдержанияПоБазе(ТаблицаРаспределениеРезультатовУдержаний, ПогашениеЗаймов, БазаУдержаний, Организация, ПериодРегистрации);
	
	Возврат ТаблицаРаспределениеРезультатовУдержаний;
	
КонецФункции

Процедура РассчитатьБазыНДФЛДляРаспределенияПоСтатьямФинансирования(БазаРасчетаНДФЛ, БазаВсеНачисления, БухучетНачисления, СведенияОДоходахНДФЛ, МассивФизическихЛиц, ПериодРегистрации, Организация, ОкончательныйРасчет, ДокументСсылка)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	Запрос.УстановитьПараметр("БухучетНачисления", БухучетНачисления); // Бухучет начислений текущего документа.
	Запрос.УстановитьПараметр("СведенияОДоходахНДФЛ", СведенияОДоходахНДФЛ); 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачисления.Сотрудник,
	|	БухучетНачисления.Подразделение,
	|	БухучетНачисления.Территория КАК ТерриторияВыполненияРаботВОрганизации,
	|	БухучетНачисления.Начисление,
	|	БухучетНачисления.ФизическоеЛицо,
	|	БухучетНачисления.СтатьяФинансирования,
	|	БухучетНачисления.СтатьяРасходов,
	|	БухучетНачисления.Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийТекущегоДокумента
	|ИЗ
	|	&БухучетНачисления КАК БухучетНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахНДФЛ.Сотрудник,
	|	СведенияОДоходахНДФЛ.Подразделение,
	|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	|	СведенияОДоходахНДФЛ.СуммаДохода,
	|	СведенияОДоходахНДФЛ.СуммаВычета,
	|	СведенияОДоходахНДФЛ.Начисление
	|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛТекущегоДокумента
	|ИЗ
	|	&СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ";
	Запрос.Выполнить();
	
	Если ОкончательныйРасчет Тогда
		
		// Получим уже зарегистрированное распределение начислений по статьям финансирования, без учета текущего документа и
		// без учета начислений межрасчетного периода.
		СоздатьВТБухучетНачисленийПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МассивФизическихЛиц, ДокументСсылка, Истина, Истина);
		
		// Поле Подразделение это территория выполняемых работ,
		// тип СправочникСсылка.ТерриторииВыполненияРабот или СправочникСсылка.ПодразделенияОрганизаций
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.Сотрудник КАК Сотрудник,
		|	БухучетНачислений.Подразделение КАК Подразделение,
		|	БухучетНачислений.Начисление КАК Начисление,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТБухучетНачислений
		|ИЗ
		|	(ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник КАК Сотрудник,
		|		ВЫБОР
		|			КОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации ЕСТЬ НЕ NULL 
		|					И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> НЕОПРЕДЕЛЕНО
		|					И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|				ТОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации
		|			ИНАЧЕ БухучетНачисления.Подразделение
		|		КОНЕЦ КАК Подразделение,
		|		БухучетНачисления.НачислениеУдержание КАК Начисление,
		|		БухучетНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|		БухучетНачисления.СтатьяФинансирования КАК СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов КАК СтатьяРасходов,
		|		БухучетНачисления.Сумма КАК Сумма
		|	ИЗ
		|		ВТБухучетНачисленийПоСтатьямФинансирования КАК БухучетНачисления
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		БухучетНачисления.Сотрудник,
		|		ВЫБОР
		|			КОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации ЕСТЬ НЕ NULL 
		|					И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> НЕОПРЕДЕЛЕНО
		|					И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|				ТОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации
		|			ИНАЧЕ БухучетНачисления.Подразделение
		|		КОНЕЦ,
		|		БухучетНачисления.Начисление,
		|		БухучетНачисления.ФизическоеЛицо,
		|		БухучетНачисления.СтатьяФинансирования,
		|		БухучетНачисления.СтатьяРасходов,
		|		БухучетНачисления.Сумма
		|	ИЗ
		|		ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачисления) КАК БухучетНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	Начисление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	База.ФизическоеЛицо,
		|	СУММА(База.Сумма) КАК Сумма,
		|	База.Сотрудник КАК Сотрудник,
		|	База.Подразделение КАК Подразделение,
		|	База.Начисление КАК Начисление
		|ПОМЕСТИТЬ ВТБаза
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета КАК Сумма,
		|		СведенияОДоходах.Сотрудник КАК Сотрудник,
		|		СведенияОДоходах.Подразделение КАК Подразделение,
		|		СведенияОДоходах.Начисление КАК Начисление
		|	ИЗ
		|		РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
		|	ГДЕ
		|		СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|		И СведенияОДоходах.Организация = &Организация
		|		И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
		|		И СведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
		|		И СведенияОДоходах.ФизическоеЛицо В(&МассивФизическихЛиц)
		|		И НЕ СведенияОДоходах.ДоходМежрасчетногоПериода
		|		И СведенияОДоходах.Регистратор <> &Регистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.ФизическоеЛицо,
		|		СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета,
		|		СведенияОДоходах.Сотрудник,
		|		СведенияОДоходах.Подразделение,
		|		СведенияОДоходах.Начисление
		|	ИЗ
		|		ВТСведенияОДоходахНДФЛТекущегоДокумента КАК СведенияОДоходах) КАК База
		|
		|СГРУППИРОВАТЬ ПО
		|	База.ФизическоеЛицо,
		|	База.Сотрудник,
		|	База.Подразделение,
		|	База.Начисление
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	Начисление";
		
		Запрос.Выполнить();
		
	Иначе
		
		// Поле Подразделение это территория выполняемых работ,
		// тип СправочникСсылка.ТерриторииВыполненияРабот или СправочникСсылка.ПодразделенияОрганизаций
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачисления.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации ЕСТЬ НЕ NULL 
		|				И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> НЕОПРЕДЕЛЕНО
		|				И БухучетНачисления.ТерриторияВыполненияРаботВОрганизации <> ЗНАЧЕНИЕ(Справочник.ТерриторииВыполненияРабот.ПустаяСсылка)
		|			ТОГДА БухучетНачисления.ТерриторияВыполненияРаботВОрганизации
		|		ИНАЧЕ БухучетНачисления.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	БухучетНачисления.Начисление КАК Начисление,
		|	БухучетНачисления.ФизическоеЛицо,
		|	БухучетНачисления.СтатьяФинансирования,
		|	БухучетНачисления.СтатьяРасходов,
		|	БухучетНачисления.Сумма
		|ПОМЕСТИТЬ ВТБухучетНачислений
		|ИЗ
		|	ВТБухучетНачисленийТекущегоДокумента КАК БухучетНачисления
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	Начисление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(СведенияОДоходах.СуммаДохода - СведенияОДоходах.СуммаВычета) КАК Сумма,
		|	СведенияОДоходах.Сотрудник КАК Сотрудник,
		|	СведенияОДоходах.Подразделение КАК Подразделение,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ПОМЕСТИТЬ ВТБаза
		|ИЗ
		|	ВТСведенияОДоходахНДФЛТекущегоДокумента КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.Сотрудник,
		|	СведенияОДоходах.Подразделение,
		|	СведенияОДоходах.Начисление
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	Начисление";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетСвод
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	Подразделение,
	|	Начисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БазаНДФЛ.Сотрудник,
	|	БазаНДФЛ.Подразделение,
	|	БазаНДФЛ.ФизическоеЛицо,
	|	БазаНДФЛ.СтатьяФинансирования,
	|	БазаНДФЛ.СтатьяРасходов,
	|	СУММА(БазаНДФЛ.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		База.Сотрудник КАК Сотрудник,
	|		База.Подразделение КАК Подразделение,
	|		База.ФизическоеЛицо КАК ФизическоеЛицо,
	|		БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|		БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|		ВЫБОР
	|			КОГДА БухучетНачисленийСвод.Сумма = 0
	|				ТОГДА 0
	|			ИНАЧЕ База.Сумма * (ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10)))
	|		КОНЕЦ КАК Сумма
	|	ИЗ
	|		ВТБаза КАК База
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
	|			ПО База.Сотрудник = БухучетНачислений.Сотрудник
	|				И База.Начисление = БухучетНачислений.Начисление
	|				И База.Подразделение = БухучетНачислений.Подразделение
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБухучетСвод КАК БухучетНачисленийСвод
	|			ПО База.Сотрудник = БухучетНачисленийСвод.Сотрудник
	|				И База.Начисление = БухучетНачисленийСвод.Начисление
	|				И База.Подразделение = БухучетНачисленийСвод.Подразделение) КАК БазаНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	БазаНДФЛ.ФизическоеЛицо,
	|	БазаНДФЛ.Сотрудник,
	|	БазаНДФЛ.Подразделение,
	|	БазаНДФЛ.СтатьяФинансирования,
	|	БазаНДФЛ.СтатьяРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(БазаНДФЛ.Сумма) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение
	|
	|ИМЕЮЩИЕ
	|	СУММА(БухучетНачислений.Сумма) <> 0";
	
	Результат = Запрос.ВыполнитьПакет();
	Количество = Результат.Количество();
	
	БазаРасчетаНДФЛ = Результат[Количество-2].Выгрузить();
	БазаВсеНачисления = Результат[Количество-1].Выгрузить();
	
КонецПроцедуры

// Возвращает таблицу значений со структурой, описанной в методе НоваяТаблицаРаспределениеРезультатовУдержаний().
//	
// Параметры:	
// 		ДанныеДляРаспределения - структура, содержащая таблицы значений
//			- БухучетНачисленияУдержанияПоСотрудникам, в таблице должны быть сведения о распределении начислений по источникам
//			финансирования текущего документа.
//		ДанныеЗаполнения - структура, содержащая таблицу значений НДФЛ, соответствующую структуре табличной части НДФЛ
//		                   документов.
//		Организация
//		МесяцНачисления
//		ДокументСсылка
//
Функция РаспределениеРезультатовНДФЛПоИсточникамФинансирования(ПараметрыДляРаспределения)
	
	ТаблицаРаспределениеРезультатовНДФЛ = НоваяТаблицаРаспределениеРезультатовУдержаний();
	
	Организация 			= ПараметрыДляРаспределения.Организация;
	ПериодРегистрации 		= ПараметрыДляРаспределения.ПериодРегистрации;
	ДанныеЗаполнения 		= ПараметрыДляРаспределения.ДанныеЗаполнения;
	ДокументСсылка  		= ПараметрыДляРаспределения.ДокументСсылка;
	ОкончательныйРасчет 	= ПараметрыДляРаспределения.ОкончательныйРасчетНДФЛ;
	СведенияОДоходахНДФЛ 	= ПараметрыДляРаспределения.СведенияОДоходахНДФЛ;
	БухучетНачисленияУдержанияПоСотрудникам = ПараметрыДляРаспределения.БухучетНачисленияУдержанияПоСотрудникам;
	
	Если НЕ ДанныеЗаполнения.Свойство("НДФЛ") Или ДанныеЗаполнения.НДФЛ.Количество() = 0 Тогда
		Возврат ТаблицаРаспределениеРезультатовНДФЛ;
	КонецЕсли;
	
	Колонки = "ФизическоеЛицо,МесяцНалоговогоПериода,Подразделение,Налог,ЗачтеноАвансовыхПлатежей,НалогКЗачетуВозврату,ИдентификаторСтроки";
	ДанныеЗаполненияНДФЛ = ДанныеЗаполнения.НДФЛ.Скопировать(,Колонки);
	Для каждого СтрокаТЗ Из ДанныеЗаполненияНДФЛ Цикл
		СтрокаТЗ.Налог = СтрокаТЗ.Налог - СтрокаТЗ.ЗачтеноАвансовыхПлатежей
	КонецЦикла; 
	
	МассивФизическихЛиц = ОбщегоНазначения.ВыгрузитьКолонку(ДанныеЗаполненияНДФЛ, "ФизическоеЛицо", Истина);
	БазаРасчетаНДФЛ = Неопределено;
	БазаВсеНачисления = Неопределено;
	РассчитатьБазыНДФЛДляРаспределенияПоСтатьямФинансирования(БазаРасчетаНДФЛ, БазаВсеНачисления, БухучетНачисленияУдержанияПоСотрудникам, СведенияОДоходахНДФЛ, МассивФизическихЛиц, ПериодРегистрации, Организация, ОкончательныйРасчет, ДокументСсылка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаНДФЛ", ДанныеЗаполненияНДФЛ);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ИдентификаторСтроки,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.Налог,
	|	ТаблицаНДФЛ.НалогКЗачетуВозврату
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	&ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ИдентификаторСтроки,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.Налог КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ) КАК ВидУдержания
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|ГДЕ
	|	ТаблицаНДФЛ.Налог <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНДФЛ.ИдентификаторСтроки,
	|	ТаблицаНДФЛ.МесяцНалоговогоПериода,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Подразделение,
	|	ТаблицаНДФЛ.НалогКЗачетуВозврату,
	|	ВЫБОР
	|		КОГДА ТаблицаНДФЛ.НалогКЗачетуВозврату > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛЗачтено)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛКЗачету)
	|	КОНЕЦ
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|ГДЕ
	|	ТаблицаНДФЛ.НалогКЗачетуВозврату <> 0";
	ТаблицаНДФЛ = Запрос.Выполнить().Выгрузить();
	
	СтрокиБезБазы = Новый Массив;
	
	Для Каждого Строка Из ТаблицаНДФЛ Цикл
		
		СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаРасчетаНДФЛ, Строка.Подразделение);
		Если СтрокиРаспределения.Количество() = 0 Тогда
			// Если не нашлись строки по физическому лицу и подразделению, то попробуем найти хотя бы по физическому лицу.
			СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаРасчетаНДФЛ);
			Если СтрокиРаспределения.Количество() = 0 Тогда
				// Если вовсе нет строк по физлицу в базе НДФЛ, получим базу по всем начислениям.
				СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаВсеНачисления, Строка.Подразделение);
				Если СтрокиРаспределения.Количество() = 0 Тогда
					СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаВсеНачисления);
					Если СтрокиРаспределения.Количество() = 0 Тогда
						СтрокиБезБазы.Добавить(Строка);
						Продолжить;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения,"Сумма");
		МассивСумм = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(Строка.Сумма, Коэффициенты,0);
		Если МассивСумм = Неопределено Тогда
			СтрокиБезБазы.Добавить(Строка);
			Продолжить;
		КонецЕсли;
		
		Для ИндексСтроки = 0 По СтрокиРаспределения.Количество() - 1 Цикл
			
			Если МассивСумм[ИндексСтроки] <> 0 Тогда
				
				СтрокаРаспределения = СтрокиРаспределения[ИндексСтроки];
				
				НоваяСтрока = ТаблицаРаспределениеРезультатовНДФЛ.Добавить();
				
				НоваяСтрока.Сотрудник		     = СтрокаРаспределения.Сотрудник;
				НоваяСтрока.Подразделение	     = СтрокаРаспределения.Подразделение;
				НоваяСтрока.СтатьяФинансирования = СтрокаРаспределения.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов       = СтрокаРаспределения.СтатьяРасходов;
				
				НоваяСтрока.ВидУдержания        = Строка.ВидУдержания;
				НоваяСтрока.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
				НоваяСтрока.Результат           = МассивСумм[ИндексСтроки];
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Массив физических лиц, данные которых еще не распределились.
	МассивФизическихЛиц = Новый Массив;
	Для Каждого СтрокаБезБазы Из СтрокиБезБазы Цикл
		МассивФизическихЛиц.Добавить(СтрокаБезБазы.ФизическоеЛицо);
	КонецЦикла;
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда
		
		БазаПоУмолчанию = РасчетЗарплаты.ПолучитьБазуУдержанийПоУмолчанию(МассивФизическихЛиц, ПериодРегистрации, Организация);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Период", КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("БазаПоУмолчанию", БазаПоУмолчанию);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	БазаПоУмолчанию.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БазаПоУмолчанию.Сотрудник КАК Сотрудник,
		|	БазаПоУмолчанию.Подразделение КАК Подразделение,
		|	БазаПоУмолчанию.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	БазаПоУмолчанию.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	&БазаПоУмолчанию КАК БазаПоУмолчанию";
		Запрос.Выполнить();
		
		ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо,
		|	Сотрудники.Сотрудник,
		|	Сотрудники.Подразделение,
		|	ВЫБОР
		|		КОГДА Сотрудники.Сумма = 0
		|			ТОГДА 1
		|		ИНАЧЕ Сотрудники.Сумма
		|	КОНЕЦ КАК Сумма,
		|	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
		|	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
		|ИЗ
		|	ВТСотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
		|		ПО Сотрудники.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
		|			И Сотрудники.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение";
		БазаНДФЛ = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Строка Из СтрокиБезБазы Цикл
			
			СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаНДФЛ);
			
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения,"Сумма");
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.Сумма, Коэффициенты,0);
			Если МассивСумм = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для ИндексСтроки = 0 По СтрокиРаспределения.Количество() - 1 Цикл
				
				СтрокаРаспределения = СтрокиРаспределения[ИндексСтроки];
				
				НоваяСтрока = ТаблицаРаспределениеРезультатовНДФЛ.Добавить();
				
				НоваяСтрока.Сотрудник		     = СтрокаРаспределения.Сотрудник;
				НоваяСтрока.Подразделение	     = СтрокаРаспределения.Подразделение;
				НоваяСтрока.СтатьяФинансирования = СтрокаРаспределения.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов       = СтрокаРаспределения.СтатьяРасходов;
				
				НоваяСтрока.ВидУдержания        = Строка.ВидУдержания;
				НоваяСтрока.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
				НоваяСтрока.Результат           = МассивСумм[ИндексСтроки];
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаРаспределениеРезультатовНДФЛ;
	
КонецФункции

Процедура ДополнитьСтрокиОсновнойТаблицыРезультатамиРаспределения(КоллекцияСтрок, ТаблицаРаспределения, ИменаКолонок, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки = Неопределено) 

	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	ТаблицаРаспределения.Индексы.Добавить("ИдентификаторСтроки");
	ОтборСтрок = Новый Структура("ИдентификаторСтроки");
	
	ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(ТаблицаРаспределения);
	ИменаКолонокСКодом = ИменаКолонок + ",КодСтатьиФинансирования";
	
	Для Каждого СтрокаОсновнойТаблицы Из КоллекцияСтрок Цикл
		
		ОтборСтрок.ИдентификаторСтроки = СтрокаОсновнойТаблицы["ИдентификаторСтроки"];
		ТаблицаРаспределенияСтроки     = ТаблицаРаспределения.Скопировать(ОтборСтрок, ИменаКолонокСКодом);
		СтруктураРаспределения         = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(ТаблицаРаспределенияСтроки);
		СтрокаОсновнойТаблицы.РезультатРаспределения = СтруктураРаспределения;
		
		РезультатПроверкиСтроки = ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(
			СтрокаОсновнойТаблицы, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении);
			
		РаспределениеСодержитОшибки = РезультатПроверкиСтроки.ЕстьОшибкиРаспределения Или РезультатПроверкиСтроки.ЕстьОшибкиЗаполнения;
		
		ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ЗаполнитьПредставлениеРаспределенияВСтроке(
			СтрокаОсновнойТаблицы, РаспределениеСодержитОшибки, ИмяТаблицы, РаботаВБюджетномУчреждении);
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбновитьРезультатыРаспределенияВСтрокахОсновнойТаблицы(КоллекцияСтрок, ТаблицаРаспределения, ИменаКолонок, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки = Неопределено) 

	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();

	ТаблицаРаспределения.Индексы.Добавить("ИдентификаторСтроки");
	ОтборСтрок = Новый Структура("ИдентификаторСтроки");
	
	Если Найти(ВРег(ИменаКолонок), Врег("Территория")) <> 0 Тогда
		ОтборСтрок.Вставить("Территория", -1);
	КонецЕсли;
	
	ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(ТаблицаРаспределения);
	ИменаКолонокСКодом = ИменаКолонок + ",КодСтатьиФинансирования";
	
	Для каждого КлючИЗначение Из КоллекцияСтрок Цикл
		
		СтрокаТаблицы = КлючИЗначение.Значение;
		ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаТаблицы);
		ОтборСтрок.ИдентификаторСтроки = КлючИЗначение.Ключ;
		
		Если ОтборСтрок.Свойство("Территория") И ОтборСтрок.Территория = -1 Тогда
			ОтборСтрок.Удалить("Территория");
		КонецЕсли; 
		
		ТаблицаРаспределенияСтроки     = ТаблицаРаспределения.Скопировать(ОтборСтрок, ИменаКолонокСКодом);
		СтруктураРаспределения         = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(ТаблицаРаспределенияСтроки);
		СтрокаТаблицы.РезультатРаспределения = СтруктураРаспределения;
		
		РезультатПроверкиСтроки = ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(
			СтрокаТаблицы, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении);
			
		РаспределениеСодержитОшибки = РезультатПроверкиСтроки.ЕстьОшибкиРаспределения Или РезультатПроверкиСтроки.ЕстьОшибкиЗаполнения;
		
		ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ЗаполнитьПредставлениеРаспределенияВСтроке(
			СтрокаТаблицы, РаспределениеСодержитОшибки, ИмяТаблицы, РаботаВБюджетномУчреждении);
	
	КонецЦикла;

КонецПроцедуры

Функция БухучетНачисленийИзФормыПоСотрудникам(Форма, Сотрудники, СоответствиеСотрудникФизическоеЛицо, ОписаниеТаблицФормы, ВидРасчетаИзШапки = Неопределено, РаспределениеИзХранилища = Неопределено)

	Объект = Форма.Объект;
	Организация = Объект.Организация;
	
	ТаблицаБухучетНачисленияУдержанияПоСотрудникам = НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам();
	ТаблицаБухучетНачисленияУдержанияПоСотрудникам.Колонки.Добавить("Результат", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Если ОписаниеТаблицФормы = Неопределено Тогда
		Возврат ТаблицаБухучетНачисленияУдержанияПоСотрудникам;
	КонецЕсли;	
	
	ИменаТаблиц = "";
	ВозможныеИменаТаблиц = "Начисления,ОплатаТруда,Пособия,ПособияПерерасчет,НачисленияПерерасчет,НачисленияПоДоговорам,Льготы,ОплатаЛьгот";
	Для каждого ОписаниеТаблицыФормы Из ОписаниеТаблицФормы Цикл
		ИмяТаблицы = ОписаниеТаблицыФормы.Ключ;
		ОписаниеТаблицы = ОписаниеТаблицыФормы.Значение;
		Если СтрНайти(ВозможныеИменаТаблиц,ИмяТаблицы) > 0 Тогда
			ИменаТаблиц = ИменаТаблиц + ?(ПустаяСтрока(ИменаТаблиц),"",",") + ИмяТаблицы;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПустаяСтрока(ИменаТаблиц) Тогда
		
		ТаблицыФормы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаТаблиц, ",");
		
		КодыНДФЛДоговорыРаботыУслуги = УчетНДФЛРасширенный.ДоходыНДФЛПоВидуОсобыхНачислений(Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги);
		
		Для каждого ТаблицаФормы Из ТаблицыФормы Цикл
			
			НайденныеСтроки = НайтиСтрокиОтборПоМассиву(Объект[ОписаниеТаблицФормы[ТаблицаФормы].ИмяТаблицы], "Сотрудник", Сотрудники);
			
			ПутьКДаннымАдресаРаспределения = ОписаниеТаблицФормы[ТаблицаФормы].ПутьКДаннымАдресРаспределенияРезультатовВХранилище;
			РаспределениеРезультатовИзХранилища = Неопределено;
			
			Для каждого СтрокаТаблицы Из НайденныеСтроки Цикл
				
				РаспределениеРезультатов = СтрокаТаблицы.РезультатРаспределения;
				ИдентификаторСтроки = СтрокаТаблицы[ОписаниеТаблицФормы[ТаблицаФормы].ИмяРеквизитаИдентификаторСтроки];
				
				Если РаспределениеРезультатов = Неопределено И ЗначениеЗаполнено(ПутьКДаннымАдресаРаспределения) Тогда
					
					Если РаспределениеРезультатовИзХранилища = Неопределено И РаспределениеИзХранилища <> Неопределено Тогда
						РаспределениеИзХранилища.Свойство(ПутьКДаннымАдресаРаспределения, РаспределениеРезультатовИзХранилища); 
					КонецЕсли;
					
					Если РаспределениеРезультатовИзХранилища = Неопределено И ТипЗнч(Форма) = Тип("УправляемаяФорма") Тогда 
						Если ЗначениеЗаполнено(Форма[ПутьКДаннымАдресаРаспределения]) Тогда 
							РаспределениеРезультатовИзХранилища = ПолучитьИзВременногоХранилища(Форма[ПутьКДаннымАдресаРаспределения]);
						КонецЕсли;
					КонецЕсли;
					
					Если РаспределениеРезультатовИзХранилища <> Неопределено Тогда 
						
						Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
						РаспределениеРезультатов = РаспределениеРезультатовИзХранилища.НайтиСтроки(Отбор);
						
						МассивРаспределения = Новый Массив;
						Для каждого СтрокаТЗ Из РаспределениеРезультатов Цикл
							МассивРаспределения.Добавить(ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТЗ));
						КонецЦикла;
						СтрокаТаблицы.РезультатРаспределения = Новый ФиксированныйМассив(МассивРаспределения);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если РаспределениеРезультатов = Неопределено Тогда 
					Продолжить;
				КонецЕсли;
				
				Если ТаблицаФормы = "НачисленияПоДоговорам" Тогда
					Если КодыНДФЛДоговорыРаботыУслуги.Найти(СтрокаТаблицы.КодДохода) = Неопределено Тогда
						Начисление = Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа;
					Иначе
						Начисление = Перечисления.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги;
					КонецЕсли;	
				ИначеЕсли ВидРасчетаИзШапки = Неопределено Тогда
					Начисление = СтрокаТаблицы.Начисление;
				Иначе
					Начисление = ВидРасчетаИзШапки;
				КонецЕсли;
				
				Для каждого ЭлементКоллекции Из РаспределениеРезультатов Цикл
					
					НоваяСтрока = ТаблицаБухучетНачисленияУдержанияПоСотрудникам.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементКоллекции);
					НоваяСтрока.Сумма = НоваяСтрока.Результат;
					НоваяСтрока.ТерриторияВыполненияРаботВОрганизации = ЭлементКоллекции.Территория;
					НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтроки;
					НоваяСтрока.ГруппаНачисленияУдержанияВыплаты = Перечисления.ГруппыНачисленияУдержанияВыплаты.Начислено;
					НоваяСтрока.ФизическоеЛицо = СоответствиеСотрудникФизическоеЛицо[НоваяСтрока.Сотрудник];
					НоваяСтрока.НачислениеУдержание = Начисление;
					НоваяСтрока.Организация = Организация;
					
				КонецЦикла;
			
			КонецЦикла;
		
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТаблицаБухучетНачисленияУдержанияПоСотрудникам;

КонецФункции

Процедура ДобавитьКолонкиДляРаспределенияРезультатов(ОсновнаяТаблица) 

	Если ОсновнаяТаблица.Колонки.Найти("РезультатРаспределения") = Неопределено Тогда
		ОсновнаяТаблица.Колонки.Добавить("РезультатРаспределения", Новый ОписаниеТипов("ФиксированныйМассив"));
	КонецЕсли;
	Если ОсновнаяТаблица.Колонки.Найти("КомандаРедактированияРаспределения") = Неопределено Тогда
		ОсновнаяТаблица.Колонки.Добавить("КомандаРедактированияРаспределения", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	КонецЕсли;
	Если ОсновнаяТаблица.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		ОсновнаяТаблица.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(ТаблицаРаспределения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиФинансированияЗарплата.Код КАК КодСтатьиФинансирования,
	|	СтатьиФинансированияЗарплата.Ссылка
	|ИЗ
	|	Справочник.СтатьиФинансированияЗарплата КАК СтатьиФинансированияЗарплата";
	Выборка = Запрос.Выполнить().Выбрать();
	
	КодыСтатей = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		КодыСтатей.Вставить(Выборка.Ссылка, Выборка.КодСтатьиФинансирования);
	КонецЦикла;	
	
	Если ТаблицаРаспределения.Колонки.Найти("КодСтатьиФинансирования") = Неопределено Тогда
		ТаблицаРаспределения.Колонки.Добавить("КодСтатьиФинансирования", Новый ОписаниеТипов("Строка"));
	КонецЕсли;
	Для каждого СтрокаТЗ Из ТаблицаРаспределения Цикл
		СтрокаТЗ.КодСтатьиФинансирования = КодыСтатей[СтрокаТЗ.СтатьяФинансирования]
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеРаспределения(ДанныеЗаполнения, ОписаниеДокумента, ИмяТаблицы, ВидРасчетаИзШапки = Неопределено) 
	Если ДанныеЗаполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	РаботаВБюджетномУчреждении = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении");
	
	НачислениеУдержаниеВидОперации = ОтражениеЗарплатыВУчете.НачислениеУдержаниеВидОперации();
	
	Для Каждого СтрокаТаблицы Из ДанныеЗаполнения Цикл
			
		РезультатПроверкиСтроки = ПроверитьРезультатыРаспределенияНачисленийУдержанийВСтроке(
			СтрокаТаблицы, ИмяТаблицы, ОписаниеДокумента, ВидРасчетаИзШапки, НачислениеУдержаниеВидОперации, РаботаВБюджетномУчреждении);
			
		РаспределениеСодержитОшибки = РезультатПроверкиСтроки.ЕстьОшибкиРаспределения Или РезультатПроверкиСтроки.ЕстьОшибкиЗаполнения;
		
		ОтражениеЗарплатыВБухучетеКлиентСерверРасширенный.ЗаполнитьПредставлениеРаспределенияВСтроке(
			СтрокаТаблицы, РаспределениеСодержитОшибки, ИмяТаблицы, РаботаВБюджетномУчреждении);			
			
	КонецЦикла	

КонецПроцедуры

Процедура РаспределитьУдержанияПоБазе(ТаблицаРаспределениеРезультатовУдержаний, ТаблицаУдержаний, БазаУдержаний, Организация, ПериодРегистрации, БазовыеВидыРасчета = Неопределено)

	СтрокиБезБазы = Новый Массив;
	
	Для Каждого Строка Из ТаблицаУдержаний Цикл
		
		СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаУдержаний);
		Если СтрокиРаспределения.Количество() = 0 Тогда
			СтрокиБезБазы.Добавить(Строка);
			Продолжить;
		КонецЕсли;
		
		Если БазовыеВидыРасчета <> Неопределено Тогда
			
			БазовыеНачисления = БазовыеВидыРасчета[Строка.Удержание];
			Если БазовыеНачисления <> Неопределено И БазовыеНачисления.Количество()>0 Тогда
				
				НовыеСтрокиРаспределения = Новый Массив;
				Для каждого СтрокаРаспределения Из СтрокиРаспределения Цикл
					Если БазовыеНачисления.Найти(СтрокаРаспределения.Начисление) <> Неопределено Тогда
						НовыеСтрокиРаспределения.Добавить(СтрокаРаспределения);
					КонецЕсли;
				КонецЦикла;
				СтрокиРаспределения = БазаУдержаний.Скопировать(НовыеСтрокиРаспределения);
				СтрокиРаспределения.Свернуть("Сотрудник,Подразделение,СтатьяФинансирования,СтатьяРасходов","Сумма");
				
			КонецЕсли;
			
		КонецЕсли;
		
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения,"Сумма");
		МассивСумм = ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(Строка.Сумма, Коэффициенты);
		Если МассивСумм = Неопределено Тогда
			СтрокиБезБазы.Добавить(Строка);
			Продолжить;
		КонецЕсли;
		
		Для ИндексСтроки = 0 По СтрокиРаспределения.Количество() - 1 Цикл
			
			Если МассивСумм[ИндексСтроки] <> 0 Тогда
				
				СтрокаРаспределения = СтрокиРаспределения[ИндексСтроки];
				
				НоваяСтрока = ТаблицаРаспределениеРезультатовУдержаний.Добавить();
				
				НоваяСтрока.Сотрудник		     = СтрокаРаспределения.Сотрудник;
				НоваяСтрока.Подразделение	     = СтрокаРаспределения.Подразделение;
				НоваяСтрока.СтатьяФинансирования = СтрокаРаспределения.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов       = СтрокаРаспределения.СтатьяРасходов;
				
				НоваяСтрока.ВидУдержания        = Строка.Удержание;
				НоваяСтрока.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
				НоваяСтрока.Результат           = МассивСумм[ИндексСтроки];
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Массив физических лиц, данные которых еще не распределились.
	МассивФизическихЛиц = Новый Массив;
	Для Каждого СтрокаБезБазы Из СтрокиБезБазы Цикл
		МассивФизическихЛиц.Добавить(СтрокаБезБазы.ФизическоеЛицо);
	КонецЦикла;
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда
		
		БазаПоУмолчанию = РасчетЗарплаты.ПолучитьБазуУдержанийПоУмолчанию(МассивФизическихЛиц, ПериодРегистрации, Организация);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Период", КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("БазаПоУмолчанию", БазаПоУмолчанию);
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	&Организация КАК Организация,
		|	БазаПоУмолчанию.ФизическоеЛицо КАК ФизическоеЛицо,
		|	БазаПоУмолчанию.Сотрудник КАК Сотрудник,
		|	БазаПоУмолчанию.Подразделение КАК Подразделение,
		|	БазаПоУмолчанию.ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
		|	1000 КАК Сумма
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	&БазаПоУмолчанию КАК БазаПоУмолчанию";
		Запрос.Выполнить();
		
		ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.ФизическоеЛицо,
		|	Сотрудники.Сотрудник,
		|	Сотрудники.Подразделение,
		|	Сотрудники.Сумма,
		|	СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования,
		|	СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
		|ИЗ
		|	ВТСотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
		|		ПО Сотрудники.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник";
		БазаУдержанийПоУмолчанию = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Строка Из СтрокиБезБазы Цикл
			
			СтрокиРаспределения = УчетНачисленнойЗарплаты.СтрокиРаспределенияПоБазе(Строка.ФизическоеЛицо, БазаУдержанийПоУмолчанию);
			
			Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиРаспределения,"Сумма");
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.Сумма, Коэффициенты);
			Если МассивСумм = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для ИндексСтроки = 0 По СтрокиРаспределения.Количество() - 1 Цикл
				
				СтрокаРаспределения = СтрокиРаспределения[ИндексСтроки];
				
				НоваяСтрока = ТаблицаРаспределениеРезультатовУдержаний.Добавить();
				
				НоваяСтрока.Сотрудник		     = СтрокаРаспределения.Сотрудник;
				НоваяСтрока.Подразделение	     = СтрокаРаспределения.Подразделение;
				НоваяСтрока.СтатьяФинансирования = СтрокаРаспределения.СтатьяФинансирования;
				НоваяСтрока.СтатьяРасходов       = СтрокаРаспределения.СтатьяРасходов;
				
				НоваяСтрока.ВидУдержания        = Строка.Удержание;
				НоваяСтрока.ИдентификаторСтроки = Строка.ИдентификаторСтроки;
				НоваяСтрока.Результат           = МассивСумм[ИндексСтроки];
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Функция СтрокаПолейТаблицыНачисленияСРаспределениемПоЕНВД() Экспорт

	Возврат ОтражениеЗарплатыВБухучетеБазовый.СтрокаПолейТаблицыНачисленияСРаспределениемПоЕНВД() + ",Территория";

КонецФункции

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

////////////////////////////////////////////////////////////////////////////////
// Блок функций первоначального заполнения и обновления ИБ.
//

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.0.9";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучетеРасширенный.ЗаполнитьНастройкаГруппУчетаОсобыхНачисленийИУдержаний";
	
КонецПроцедуры

Процедура ЗаполнитьНастройкаГруппУчетаОсобыхНачисленийИУдержаний() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "НастройкаГруппУчетаОсобыхНачисленийИУдержаний");
	
КонецПроцедуры	

Функция ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете() Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленнаяЗарплатаИВзносы.Ссылка,
	|	НачисленнаяЗарплатаИВзносы.ФизическоеЛицо,
	|	НачисленнаяЗарплатаИВзносы.Подразделение,
	|	НачисленнаяЗарплатаИВзносы.ВидОперации,
	|	НачисленнаяЗарплатаИВзносы.СтатьяФинансирования,
	|	НачисленнаяЗарплатаИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	НачисленнаяЗарплатаИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленнаяЗарплатаИВзносы.ОблагаетсяЕНВД,
	|	НачисленнаяЗарплатаИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленнаяЗарплатаИВзносы.ПериодПринятияРасходов,
	|	НачисленнаяЗарплатаИВзносы.Сумма,
	|	НачисленнаяЗарплатаИВзносы.ПФРСтраховая,
	|	НачисленнаяЗарплатаИВзносы.ПФРНакопительная,
	|	НачисленнаяЗарплатаИВзносы.ФСС,
	|	НачисленнаяЗарплатаИВзносы.ФФОМС,
	|	НачисленнаяЗарплатаИВзносы.ТФОМС,
	|	НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуЛетчикам,
	|	НачисленнаяЗарплатаИВзносы.ПФРНаДоплатуШахтерам,
	|	НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	НачисленнаяЗарплатаИВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	НачисленнаяЗарплатаИВзносы.ФССНесчастныеСлучаи,
	|	НачисленнаяЗарплатаИВзносы.ПФРПоСуммарномуТарифу
	|ПОМЕСТИТЬ ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете
	|ИЗ
	|	#НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы
	|ГДЕ
	|	НачисленнаяЗарплатаИВзносы.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				НачисленнаяЗарплатаИВзносы.Ссылка
	|			ИЗ
	|				#НачисленнаяЗарплатаИВзносы КАК НачисленнаяЗарплатаИВзносы
	|			ГДЕ
	|				НачисленнаяЗарплатаИВзносы.ВидОперации В (&ВидыОпераций))";
	
	ТекстЗапроса1 = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.БухучетХозрасчетныхОрганизаций") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("БухучетХозрасчетныхОрганизацийРасширенный");
		ТекстЗапроса1 = Модуль.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете(ТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса2 = "";
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		ТекстЗапроса2 = Модуль.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете(ТекстЗапроса);
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗапроса1) И ПустаяСтрока(ТекстЗапроса2) Тогда
		Возврат "";
	КонецЕсли;	
	
	Если Не ПустаяСтрока(ТекстЗапроса1) И НЕ ПустаяСтрока(ТекстЗапроса2) Тогда
		
		ТекстЗапроса2 = СтрЗаменить(ТекстЗапроса2,"ПОМЕСТИТЬ ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете","");
		
		ТекстЗапроса = ТекстЗапроса1 + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" + ТекстЗапроса2;
		
	ИначеЕсли Не ПустаяСтрока(ТекстЗапроса1) Тогда
		ТекстЗапроса = ТекстЗапроса1;
	Иначе
		ТекстЗапроса = ТекстЗапроса2;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками()Экспорт

	Запрос = Новый Запрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.ВидОперацииПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПрочиеРасчетыСПерсоналом)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УдержаниеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		УдержаниеОбъект.ВидОперацииПоЗарплате = Перечисления.ВидыОперацийПоЗарплате.УдержаниеПоПрочимОперациямСРаботниками;
		УдержаниеОбъект.ОбменДанными.Загрузка = Истина;
		УдержаниеОбъект.Записать();
		
	КонецЦикла;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.БухучетХозрасчетныхОрганизаций") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("БухучетХозрасчетныхОрганизацийРасширенный");
		Модуль.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками();
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		Модуль.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками();
	КонецЕсли;

КонецПроцедуры

Процедура УчетнаяПолитикаОрганизацииПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	
КонецПроцедуры

Процедура ЗаполнитьБухучетНовойОрганизацииПриЗаписи(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Константы.ИспользоватьСтатьиФинансированияЗарплата.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	РаботаВБюджетномУчреждении = Константы.РаботаВБюджетномУчреждении.Получить();
	РаботаВХозрасчетнойОрганизации = Константы.РаботаВХозрасчетнойОрганизации.Получить();
	
	ЗаписьПоУмолчанию = Неопределено;
	Если РаботаВБюджетномУчреждении И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
		ЗаписьПоУмолчанию = Модуль.БухучетОрганизацииПоУмолчанию();
	ИначеЕсли РаботаВХозрасчетнойОрганизации И ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетХозрасчетныхОрганизаций") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УчетХозрасчетныхОрганизаций");
		ЗаписьПоУмолчанию = Модуль.БухучетОрганизацииПоУмолчанию();	
	КонецЕсли;
	
	Если ЗаписьПоУмолчанию = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	НаборЗаписей = РегистрыСведений.БухучетЗарплатыОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения");
	НаборЗаписей.Отбор.Организация.Установить(Источник.Ссылка);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ЗаписьПоУмолчанию);
		НоваяЗапись.Организация = Источник.Ссылка;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидОперацииПоЗарплатеЕжегодныйОтпускПриЗаписи(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидОтпуска", Источник.Ссылка);
	Запрос.УстановитьПараметр("ОтпускЯвляетсяЕжегодным", Источник.ОтпускЯвляетсяЕжегодным);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Ссылка,
	|	ВЫБОР
	|		КОГДА Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В (ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска), ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ДенежноеСодержаниеКомпенсацияОтпуска))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КомпенсацияОтпуска
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.ВидОтпуска = &ВидОтпуска
	|	И (&ОтпускЯвляетсяЕжегодным
	|				И НЕ Начисления.ВидОперацииПоЗарплате В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска))
	|			ИЛИ НЕ &ОтпускЯвляетсяЕжегодным
	|				И Начисления.ВидОперацииПоЗарплате В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска)))";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Источник.ОтпускЯвляетсяЕжегодным Тогда
			ВидОперации = ?(Выборка.КомпенсацияОтпуска,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск);
		Иначе
			ВидОперации = Перечисления.ВидыОперацийПоЗарплате.НачисленоДоход;
		КонецЕсли;
		ВидРасчетаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВидРасчетаОбъект.ВидОперацииПоЗарплате = ВидОперации;
		ВидРасчетаОбъект.ОбменДанными.Загрузка = Истина;
		ВидРасчетаОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти