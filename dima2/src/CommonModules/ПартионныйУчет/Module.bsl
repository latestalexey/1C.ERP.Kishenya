////////////////////////////////////////////////////////////////////////////////////////////////////
// ПартионныйУчет - модуль оффлайнового (неоперативного) расчета регистров партий
// 
// Заметки по концепции:
//
// * Партии.Первичное = Истина означает, что запись не будет разбита, но может быть дополнена данными.
// Если Партии.Первичное = Ложь, то запись может быть перезаписана, разбита на записи, удалена и т.д.
//
// * Партии.ДокументИсточник показывает документ возникновения остатка.
// Для расходов текущего периода это будет документ поступления или перемещения на организацию/склад,
// для приходов перемещений/пересортиц и прочих расходно-приходных документов это будет сам документ
// перемещения, для сторнирующих документов это будет документ реализации.
// При расходах по остаткам прошлого периода это будет документ партии (поступления).
// Реквизит нужен для протягивания партий затрат и партий расходов на с/с по движениям перемещений.
//
// * Записи с типом "Остаток" никогда не пишутся в базу.
////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет полный партионный расчет по ОкончаниеПериодаРасчета
Процедура РассчитатьВсе(ОкончаниеПериодаРасчета, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УровеньИнформация = УровеньЖурналаРегистрации.Информация;
	ФорматПериода = "ДФ='дд.ММ.гггг'";
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	Комментарий = НСтр("ru='Выполняется расчет по %ОкончаниеПериода%';uk='Виконується розрахунок за %ОкончаниеПериода%'",КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%ОкончаниеПериода%", Формат(ОкончаниеПериодаРасчета, ФорматПериода));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.Начало расчета';uk='Партіонний облік.Початок розрахунку'",КодЯзыка), УровеньИнформация, , ОкончаниеПериодаРасчета, Комментарий);
		
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Партионный учет';uk='Партіонний облік'"));
	
	СхемаРасчета = СхемаРасчетаПартий(ОкончаниеПериодаРасчета, Организация);
	
	Если СхемаРасчета.Количество() = 0 Тогда
		
		// Расчет не требуется
		Комментарий = НСтр("ru='Расчет партий по %ОкончаниеПериода% не требуется - партии уже рассчитаны';uk='Розрахунок партій по %ОкончаниеПериода% не потрібен - партії вже розраховані'",КодЯзыка);
		Комментарий = СтрЗаменить(Комментарий, "%ОкончаниеПериода%", Формат(ОкончаниеПериодаРасчета, ФорматПериода));
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Партионный учет.Расчет не требуется';uk='Партіонний облік.Розрахунок не вимагається'",КодЯзыка), УровеньИнформация, , ОкончаниеПериодаРасчета, Комментарий);
		
		Возврат;
		
	КонецЕсли;
	
	ИспользоватьПартионныйУчет = Константы.ИспользоватьПартионныйУчет.Получить();
	
	УвеличитьНомерЗадания();
	
	Для Каждого СтрокаСхемыРасчета Из СхемаРасчета Цикл
		
		НачалоПериода     = НачалоМесяца(СтрокаСхемыРасчета.Дата);
		ОкончаниеПериода  = КонецМесяца(СтрокаСхемыРасчета.Дата);
		МассивОрганизаций = СтрокаСхемыРасчета.Организации;
		
		
		Если ИспользоватьПартионныйУчет Тогда
			// Этап 1Х: расчет партий товаров
			РассчитатьПартииТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 16: расчет партий переданных на комиссию
			РассчитатьПартииПереданные(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 18: расчет партий производственных затрат
			//++ НЕ УТ
			РассчитатьТрудозатраты(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			РассчитатьРаспределениеМатериаловИРабот(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//-- НЕ УТ
			РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//++ НЕ УТ
			РассчитатьПартииНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			РаспределитьПрочиеРасходыПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Истина);
			РассчитатьПрочиеРасходыНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//-- НЕ УТ
			// Этап 2Х: расчет партий затрат на выпуск
			РассчитатьПартииЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этапы 3Х и 4Х: расчет партий прочих расходов на себестоимость товаров, партионный учет включен
			РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 5Х: расчет партий расходов на себестоимость выбытия товаров
			РассчитатьПартииРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 64: расчет приходов партий прочих расходов
			РассчитатьПриходыПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//++ НЕ УТ
			РассчитатьСебестоимостьПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//-- НЕ УТ
		Иначе
			// Этап 2Х: расчет партий затрат на выпуск
			//++ НЕ УТ
			РассчитатьТрудозатраты(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			РассчитатьРаспределениеМатериаловИРабот(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//-- НЕ УТ
			РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//++ НЕ УТ
			РассчитатьПартииНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			РаспределитьПрочиеРасходыПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Истина);
			РассчитатьПрочиеРасходыНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			РассчитатьСебестоимостьПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			//-- НЕ УТ
			// Этапы 3Х и 4Х: расчет партий прочих расходов на себестоимость товаров при выключенном партионном учете
			РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		КонецЕсли;
		
		// Этап 7Х: Выполнение расчета себестоимости
		РассчитатьСебестоимость(ОкончаниеПериода, МассивОрганизаций);
		
		СформироватьДвиженияПоНДС(ОкончаниеПериода, МассивОрганизаций);
		
		// Этап 8Х: Запись новых границ рассчитанных партий - завершение партионного расчета за период
		УстановитьГраницыПартииТоваровОрганизаций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
		СформироватьЗаданияККорректировкеНалоговыхНазначенийКапитальныхИнвестиций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Партионный учет.Рассчитан период';uk='Партіонний облік.Розрахований період'",КодЯзыка), УровеньИнформация, , Формат(НачалоПериода, "ДФ='ММ.гггг'"));
		
	КонецЦикла;
	
	Комментарий = НСтр("ru='Выполнен расчет с %НачалоПериода% по %ОкончаниеПериода%';uk='Виконаний розрахунок з %НачалоПериода% по %ОкончаниеПериода%'",КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%НачалоПериода%", Формат(СхемаРасчета[0].Дата, ФорматПериода));
	Комментарий = СтрЗаменить(Комментарий, "%ОкончаниеПериода%", Формат(ОкончаниеПериодаРасчета, ФорматПериода));
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Комментарий = Комментарий + "
			|" + НСтр("ru='Организация: %Организация%';uk='Організація: %Организация%'");
		Комментарий = СтрЗаменить(Комментарий, "%Организация%", СокрЛП(Организация));
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.Окончание расчета';uk='Партіонний облік.Закінчення розрахунку'",КодЯзыка), УровеньИнформация, , ОкончаниеПериодаРасчета, Комментарий);
	
КонецПроцедуры

// Фактическое требуемое начало периода расчета для даты окончания периода расчета
Функция НачалоПериодаРасчета(ОкончаниеПериодаРасчета, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	МИНИМУМ(Задания.Месяц) КАК Месяц
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Задания
	|		ПО Организации.Ссылка = Задания.Организация
	|ГДЕ
	|	Организации.Ссылка В(&МассивОрганизаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	Организации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Периоды.Месяц) КАК НачалоПериодаРасчета
	|ИЗ
	|	ВТПериоды КАК Периоды
	|ГДЕ
	|	Периоды.Месяц ЕСТЬ НЕ NULL 
	|	И Периоды.Месяц <= &ОкончаниеПериодаРасчета
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(Периоды.Месяц) ЕСТЬ НЕ NULL ";
	
	Запрос.УстановитьПараметр("ОкончаниеПериодаРасчета", ОкончаниеПериодаРасчета);
	Запрос.УстановитьПараметр("МассивОрганизаций",       МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.НачалоПериодаРасчета, КонецМесяца(ОкончаниеПериодаРасчета) + 1);
	
КонецФункции

// Возвращает информацию о том, в каких периодах и по каким организациям необходимо пересчитать партии и себестоимость.
// Параметрами функции являются требуемые пользователю отборы по дате и организациям,
// а результат - это необходимые по факту (по данным ИБ) пересчеты.
// Например, может получится так, что
//	- пересчитать хочется только одну организацию в текущем месяце,
//  - но для этого надо пересчитать все организации начиная с прошлого года,
//	  т.к. по ним есть записи в регистре ЗаданияКРасчетуСебестоимости и они связаны по схеме Интеркампани
//
// Параметры:
//	Дата - Дата - конец периода (месяца), в котором надо выполнить пересчет
//	ОтборОрганизации - СправочникСсылка.Организации, Массив - организации, по которым надо выполнить пересчет
//
// Возвращаемое значение:
//	ТаблицаЗначений - схема выполнения пересчета партий и себестоимости
//		Дата - Дата - требуемый по факту период пересчета
//		Организации - Массив - массив организаций, по которым требуется пересчет.
// Таблица отсортирована по колонке Дата и содержит все периоды (без пропусков),
// начиная с самой ранней необходимой даты пересчета и до даты из параметра Дата.
// В таблице не будет строк если пересчет не требуется,
// т.е. если параметр Дата больше, чем даты в записях регистра ЗаданияКРасчетуСебестоимости.
//
Функция СхемаРасчетаПартий(Знач Дата = Неопределено, ОтборОрганизации = Неопределено) Экспорт
	
	Дата = КонецМесяца(?(НЕ ЗначениеЗаполнено(Дата), ТекущаяДатаСеанса(), Дата));
	
	СхемаРасчета = Новый ТаблицаЗначений; // результат выполнения этой функции
	СхемаРасчета.Колонки.Добавить("Дата"); // период пересчета
	СхемаРасчета.Колонки.Добавить("Организации"); // массив организаций, которые надо пересчитать в этом периоде
	СхемаРасчета.Индексы.Добавить("Дата");
	
	ДатыПересчетаПоОрганизациям = Новый Соответствие; // Организация - Дата, с которой по ней необходим пересчет
	СамаяРанняяДатаПересчета      = КонецМесяца(КонецМесяца(Дата) + 1);
	
	// Запомним даты начала пересчета по каждой организации
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задания.Организация КАК Организация,
	|	МИНИМУМ(КОНЕЦПЕРИОДА(Задания.Месяц, МЕСЯЦ)) КАК Месяц
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Задания
	|ГДЕ
	|	Задания.Месяц <= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.Организация";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДатыПересчетаПоОрганизациям.Вставить(Выборка.Организация, Выборка.Месяц);
		СамаяРанняяДатаПересчета = Мин(СамаяРанняяДатаПересчета, Выборка.Месяц);
	КонецЦикла;
	
	// Добавим в схему расчета строки для каждого периода, начиная с самого раннего и до рассчитываемого периода
	ОбрабатываемаяДата = СамаяРанняяДатаПересчета;
	
	Пока ОбрабатываемаяДата <= Дата Цикл
		
		НоваяСтрока = СхемаРасчета.Добавить();
		НоваяСтрока.Дата 		= ОбрабатываемаяДата;
		НоваяСтрока.Организации = ?(ОбрабатываемаяДата = Дата,
			СвязиОрганизацийПоСхемеИнтеркампани(Дата, ОтборОрганизации),
			Новый Массив);
		
		ОбрабатываемаяДата = КонецМесяца(КонецМесяца(ОбрабатываемаяДата) + 1);
		
	КонецЦикла;
	
	// Заполним итеративно организации для перерасчета
	ОбрабатываемаяДата = Макс(СамаяРанняяДатаПересчета, Дата);
	
	Пока ОбрабатываемаяДата <= Дата Цикл
		
		ТекущаяСтрока    = СхемаРасчета.Найти(ОбрабатываемаяДата, "Дата");
		ПредыдущаяСтрока = СхемаРасчета.Найти(НачалоМесяца(ОбрабатываемаяДата) - 1, "Дата");
		
		Если ПредыдущаяСтрока <> Неопределено Тогда
			
			ПоявилисьИзмененияВМассивеОрганизаций = Ложь;
			
			// Организации, которые пересчитывались в прошлом периоде, надо пересчитать и в текущем
			Для Каждого ПредыдущаяОрганизация Из ПредыдущаяСтрока.Организации Цикл
				Если ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТекущаяСтрока.Организации, ПредыдущаяОрганизация) Тогда
					ПоявилисьИзмененияВМассивеОрганизаций = Истина;
				КонецЕсли;
			КонецЦикла;
			
			// Дополним массив расчитываемых организаций связанными с ними организациями
			Если ПоявилисьИзмененияВМассивеОрганизаций Тогда
				ТекущаяСтрока.Организации = СвязиОрганизацийПоСхемеИнтеркампани(ТекущаяСтрока.Дата, ТекущаяСтрока.Организации);
			КонецЕсли;
			
		КонецЕсли;
		
		ИзмененнаяОбрабатываемаяДата = ОбрабатываемаяДата;
		
		// Проверим необходимость пересчета организаций текущего периода в более ранних периодах
		Для Каждого ТекущаяОрганизация Из ТекущаяСтрока.Организации Цикл
			
			ДатаПересчетаПоОрганизации = ДатыПересчетаПоОрганизациям[ТекущаяОрганизация];
			
			Если ЗначениеЗаполнено(ДатаПересчетаПоОрганизации) И ДатаПересчетаПоОрганизации < ОбрабатываемаяДата Тогда
				
				СтрокаПоДатеОрганизации = СхемаРасчета.Найти(ДатаПересчетаПоОрганизации, "Дата");
				
				Если ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(СтрокаПоДатеОрганизации.Организации, ТекущаяОрганизация) Тогда
					// Такая организация в том периоде еще не была отобрана для пересчета
					ИзмененнаяОбрабатываемаяДата = Мин(ИзмененнаяОбрабатываемаяДата, ДатаПересчетаПоОрганизации);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ИзмененнаяОбрабатываемаяДата < ОбрабатываемаяДата Тогда
			
			// Следующий цикл начнем с самого раннего измененного прошлого периода
			ОбрабатываемаяДата = ИзмененнаяОбрабатываемаяДата;
			
			// Дополним в нем массив расчитываемых организаций связанными с ними организациями
			ТекущаяСтрока = СхемаРасчета.Найти(ОбрабатываемаяДата, "Дата");
			ТекущаяСтрока.Организации = СвязиОрганизацийПоСхемеИнтеркампани(ТекущаяСтрока.Дата, ТекущаяСтрока.Организации);
			
		Иначе
			
			// В прошлых периодах ничего не поменялось - переходим к следующему периоду
			ОбрабатываемаяДата = КонецМесяца(КонецМесяца(ОбрабатываемаяДата) + 1);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Пока СхемаРасчета.Количество() > 0 И СхемаРасчета[0].Организации.Количество() = 0 Цикл
		// Удалим строки ранних периодов, в которых нет организаций для пересчета
		СхемаРасчета.Удалить(0);
	КонецЦикла;
	
	Возврат СхемаРасчета;
	
КонецФункции

Процедура РассчитатьКорректировкиНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт	
	ИспользоватьПартионныйУчет = Константы.ИспользоватьПартионныйУчет.Получить();
	ИспользоватьРаздельныйУчетПоНалогообложению = Константы.ИспользоватьРаздельныйУчетПоНалогообложению.Получить();
	Если НЕ ИспользоватьПартионныйУчет ИЛИ НЕ ИспользоватьРаздельныйУчетПоНалогообложению Тогда
		Возврат;
	КонецЕсли; 
	УстановитьПривилегированныйРежим(Истина);
	РассчитатьЗаписиКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
КонецПроцедуры

Процедура РассчитатьВсеПоГраницу(ПараметрыРасчета, Знач Период, НомерЗадания = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(НомерЗадания) Тогда
		НомерЗадания = РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПолучитьНомерЗадания();
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	МИНИМУМ(Очередь.Месяц) КАК НачалоПериодаРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Очередь
	|ГДЕ
	|	&ИспользоватьПартионныйУчет
	|	И Очередь.НомерЗадания <= &НомерЗадания
	|ИМЕЮЩИЕ 
	|	НЕ (МИНИМУМ(Очередь.Месяц) ЕСТЬ NULL)
	|	И МИНИМУМ(Очередь.Месяц) <= &РасчетныйПериод
	|");
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет", Константы.ИспользоватьПартионныйУчет.Получить());
	Запрос.УстановитьПараметр("НомерЗадания", НомерЗадания);
	Запрос.УстановитьПараметр("РасчетныйПериод", НачалоМесяца(Период));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ГраницаРасчета = Выборка.НачалоПериодаРасчета;
		КоличествоДокументов = РегистрыСведений.ЗаданияКРасчетуСебестоимости.КоличествоНеактуальныхДокументов(Период, НомерЗадания);
		Если НачалоМесяца(Период) < НачалоМесяца(ТекущаяДатаСеанса()) Тогда
			ПериодРасчета = НачалоМесяца(ТекущаяДатаСеанса()) - 1; // предыдущий месяц
		Иначе
			ПериодРасчета = КонецМесяца(ТекущаяДатаСеанса()); // текущий месяц
		КонецЕсли;
		РассчитатьФоновымЗаданием(ПериодРасчета);
	Иначе
		ГраницаРасчета = Неопределено;
		КоличествоДокументов = 0;
	КонецЕсли;
	
	ПараметрыРасчета.Вставить("ГраницаРасчета", ГраницаРасчета);
	ПараметрыРасчета.Вставить("КоличествоДокументов", КоличествоДокументов);
	ПараметрыРасчета.Вставить("НомерЗадания", НомерЗадания);
	ПараметрыРасчета.Вставить("ГраницаПартионногоУчета", Период);
	
КонецПроцедуры

Процедура РассчитатьФоновымЗаданием(Период, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ФоновоеЗаданиеАктивно() ИЛИ ЗакрытиеМесяцаУТВызовСервера.АктивноЗаданиеЗакрытияМесяца() Тогда
		Возврат;
	КонецЕсли;
	
	НаименованиеЗадания = НСтр("ru='Восстановление последовательности партионного учета';uk='Відновлення послідовності партіонного обліку'");
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив;
	ПараметрыЭкспортнойПроцедуры.Добавить(Период);
	ПараметрыЭкспортнойПроцедуры.Добавить(Организация);
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить("ПартионныйУчет.РассчитатьВсе");
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	Ключ = ИмяФоновогоЗадания();

	ФоновыеЗадания.Выполнить("РаботаВБезопасномРежиме.ВыполнитьМетодКонфигурации", ПараметрыЗадания, Ключ, НаименованиеЗадания);
	
КонецПроцедуры

// Возвращает имя фонового предопределенного задания расчета партий.
Функция ИмяФоновогоЗадания() Экспорт
	Возврат "ПартионныйУчет";
КонецФункции

// Выполняет проверку на активное задание расчета партий.
Функция ФоновоеЗаданиеАктивно() Экспорт
	
	КлючЗадания = ИмяФоновогоЗадания();
	
	Отбор = Новый Структура();
	Отбор.Вставить("Ключ", КлючЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Если АктивныеЗадания.Количество() > 0 Тогда
		ФоновоеЗаданиеАктивно = Истина;
	Иначе
		ФоновоеЗаданиеАктивно = Ложь;
	КонецЕсли;
	Возврат ФоновоеЗаданиеАктивно;
КонецФункции

//++ НЕ УТ
Функция Текст_Данные_ПоНормативамРасшифровка() Экспорт
	ТекстЗапроса = ТекстДанныеПоНормативамРасходаМатериала() + ";" + "
	|ВЫБРАТЬ
    |	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.НоменклатураВыпуска КАК Продукция,
	|	ДД.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
	|	ДД.Спецификация,
	|	ДД.ЗаказНаПроизводство КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	ВЫБОР
	|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВыпускПоЗаказу,
	|	ДД.ЗапланированоПродукции КАК ЗапланированоПродукции,
	|	ДД.ЗапланированоЭтапов,
	|	ДД.ВыполненоЭтапов,
	|	ДД.Количество КАК РасчетноеКоличествоВыпуска,
	|	ДД.Количество * СУММА(СПМ.Количество) / СУММА(СПВ.Количество) КАК НормативРасходаМатериала,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Цена,
	|	0. КАК Стоимость
	|ИЗ
	|	Данные_ПоНормативамРасходаМатериала КАК ДД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК СПМ
	|	ПО ДД.Спецификация = СПМ.Ссылка
	|		И &Номенклатура = СПМ.Номенклатура
	|		И &Характеристика = СПМ.Характеристика
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК СПВ
	|	ПО ДД.Спецификация = СПВ.Ссылка
	|		И ДД.НоменклатураВыпуска = СПВ.Номенклатура
	|		И ДД.ХарактеристикаВыпуска = СПВ.Характеристика
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала)
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|	И (&ПоВсемНазначениям ИЛИ ДД.Назначение = &Назначение)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.НоменклатураВыпуска,
    |	ДД.Подразделение,
	|	ДД.ГруппаПродукции,
	|	ДД.Спецификация,
	|	ДД.ЗаказНаПроизводство,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	ДД.ЗапланированоПродукции,
	|	ДД.ЗапланированоЭтапов,
	|	ДД.ВыполненоЭтапов,
	|	ДД.Количество
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоУказаннымТрудозатратамРасшифровка() Экспорт
	ТекстЗапроса = ТекстДанныеПоУказаннымТрудозатратам() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	ДД.ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	ВЫБОР
	|		КОГДА ДД.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка)
	|			ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство
	|	КОНЕЦ КАК Заказ,
	|	ВЫБОР
	|		КОГДА ДД.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка)
	|			ТОГДА ДД.КодСтроки
	|		ИНАЧЕ ДД.КодСтрокиПродукция
	|	КОНЕЦ КАК КодСтроки,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	ЛОЖЬ КАК ВыпускПоЗаказу,
	|	0. КАК ЗапланированоПродукции,
	|	0. КАК ЗапланированоЭтапов,
	|	0. КАК ВыполненоЭтапов,
	|	0. КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	ДД.Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Цена,
	|	0. КАК Стоимость
	|ИЗ
	|	Данные_ПоУказаннымТрудозатратам КАК ДД
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов)
	|	И (&ПоВсемВидамРабот ИЛИ (ДД.ВидРабот В (&ВидыРабот)))
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|	И (&ПоВсемНазначениям ИЛИ ДД.Назначение = &Назначение)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоУказаннымМатериаламРасшифровка() Экспорт
	ТекстЗапроса = ТекстДанныеПоУказаннымМатериалам() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.Материал КАК Материал,
	|	ДД.Продукция КАК Продукция,
	|	ДД.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	ДД.ЗаказНаПроизводство КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	ЛОЖЬ КАК ВыпускПоЗаказу,
	|	0. КАК ЗапланированоПродукции,
	|	0. КАК ЗапланированоЭтапов,
	|	0. КАК ВыполненоЭтапов,
	|	0. КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	ДД.Количество,
	|	ДД.Объем,
	|	ДД.Вес,
	|	0. КАК Цена,
	|	0. КАК Стоимость
	|ИЗ
	|	Данные_ПоУказаннымМатериалам КАК ДД
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И (&БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов)
	|		ИЛИ &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов)
	|		ИЛИ &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов))
	|	И (&ПоВсемМатериалам ИЛИ (ДД.Материал В (&Материалы)))
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|	И (&ПоВсемНазначениям ИЛИ ДД.Назначение = &Назначение)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоПродукцииРасшифровка() Экспорт
	ТекстЗапроса = ТекстДанныеПоПродукции() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	ДД.ЗаказНаПроизводство КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	ВЫБОР
	|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВыпускПоЗаказу,
	|	ДД.ЗапланированоПродукции,
	|	ДД.ЗапланированоЭтапов,
	|	ДД.ВыполненоЭтапов,
	|	ДД.Количество КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	0. КАК Количество,
	|	ДД.Объем КАК Объем,
	|	ДД.Вес КАК Вес,
	|	0. КАК Цена,
	|	0. КАК Стоимость
	|ИЗ
	|	Данные_ПоПродукции КАК ДД
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И (&БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции)
	|		ИЛИ &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции)
	|		ИЛИ &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции))
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|	И (&ПоВсемНазначениям ИЛИ ДД.Назначение = &Назначение)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоПлановойСтоимостиРасшифровка() Экспорт
	ТекстЗапроса = ТекстДанныеПоПлановойСтоимости() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.Номенклатура КАК Продукция,
	|	ДД.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	ДД.ЗаказНаПроизводство КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	ВЫБОР
	|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВыпускПоЗаказу,
	|	ДД.ЗапланированоПродукции,
	|	ДД.ЗапланированоЭтапов,
	|	ДД.ВыполненоЭтапов,
	|	ДД.Количество КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	ЕСТЬNULL(Ц.Цена, 0) КАК Цена,
	|	ДД.Количество * ЕСТЬNULL(Ц.Цена, 0) КАК Стоимость
	|ИЗ
	|	Данные_ПоПлановойСтоимости КАК ДД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ОкончаниеПериода, ВидЦены = &ВидПлановыхЦен ) КАК Ц
	|	ПО (ДД.Номенклатура = Ц.Номенклатура)
	|		И (ДД.Характеристика = Ц.Характеристика)
	|
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции)
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|	И (&ПоВсемНазначениям ИЛИ ДД.Назначение = &Назначение)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоСтоимостиМатЗатратРасшифровка() Экспорт
	ТекстЗапроса = ТекстВыпускРаботСписанныхНаЗатратыБезЗаказа() + ";"
	+ ТекстДанныеПоСтоимостиМатЗатрат()
	+ "ОБЪЕДИНИТЬ ВСЕ"+ ТекстДанныеПоСтоимостиМатЗатратБезПУ() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ) КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ВыпускПоЗаказу,
	|	0. КАК ЗапланированоПродукции,
	|	0. КАК ЗапланированоЭтапов,
	|	0. КАК ВыполненоЭтапов,
	|	0. КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Цена,
	|	СУММА(ДД.Стоимость) КАК Стоимость
	|ИЗ
	|	Данные_СтоимостьМатЗатрат КАК ДД
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат)
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Подразделение,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ),
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоСтоимостиЗатратНаОплатуТрудаРасшифровка() Экспорт
	ТекстЗапроса = ТекстВыпускРаботСписанныхНаЗатратыБезЗаказа() + ";"
	+ ТекстДанныеПоЗатратамНаОплатуТрудаНЗП()
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоЗатратамНаОплатуТрудаБезЗаказа() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	ДД.ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ) КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ВыпускПоЗаказу,
	|	0. КАК ЗапланированоПродукции,
	|	0. КАК ЗапланированоЭтапов,
	|	0. КАК ВыполненоЭтапов,
	|	0. КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Цена,
	|	СУММА(ДД.Стоимость) КАК Стоимость
	|ИЗ
	|	Данные_ЗатратыНаОплатуТруда КАК ДД
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда)
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Подразделение,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	ДД.ВидРабот,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ),
	|	ДД.КодСтрокиПродукция,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции

Функция Текст_Данные_ПоНормативнойСтоимостиЗатратНаОплатуТрудаРасшифровка() Экспорт
	ТекстЗапроса = ТекстВыпускРаботСписанныхНаЗатратыБезЗаказа() + ";"
	+ТекстДанныеПоНормативнымЗатратамНаОплатуТрудаНЗП()
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоНормативнымЗатратамНаОплатуТрудаБезЗаказа() + ";" + "
	|ВЫБРАТЬ
	|	ДД.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Материал,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	ДД.ВидРабот,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ) КАК Заказ,
	|	ДД.КодСтрокиПродукция КАК КодСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК ВыпускПоЗаказу,
    |	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	0. КАК ЗапланированоПродукции,
	|	0. КАК ЗапланированоЭтапов,
	|	0. КАК ВыполненоЭтапов,
	|	0. КАК РасчетноеКоличествоВыпуска,
	|	0. КАК НормативРасходаМатериала,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Цена,
	|	СУММА(ДД.Стоимость) КАК Стоимость
	|ИЗ
	|	Данные_НормативныеЗатратыНаОплатуТруда КАК ДД
	|ГДЕ
	|	ДД.Организация = &Организация
	|	И &БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда)
	|	И (&ПоВсемГруппамПродукции ИЛИ (ДД.ГруппаПродукции В (&ГруппыПродукции)))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Подразделение,
	|	ДД.Продукция,
	|	ДД.ГруппаПродукции,
	|	ДД.ВидРабот,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ДД.ДокументВыпуска
	|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ),
	|	ДД.КодСтрокиПродукция,
    |	ДД.НалоговоеНазначениеВыпуска,
	|	(ВЫБОР
	|		КОГДА НЕ ДД.ДокументВыпуска.Дата ЕСТЬ NULL ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ)
	|";
	Возврат СтрЗаменить(ТекстЗапроса, "В (&МассивОрганизаций)", "= &Организация");
КонецФункции
//-- НЕ УТ
#КонецОбласти


#Область ЭтапыРасчета

// Этап 1Х: расчет партий товаров
Процедура РассчитатьПартииТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 0:
	//++ НЕ УТ
	// Восстановление некорректных движений документа ВозвратМатериаловИзПроизводства по товарам организаций
	ВосстановитьДвиженияВозвратМатериаловИзПроизводстваПоТоварамОрганизаций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	//-- НЕ УТ
	// Восстановление "потерянных" первичных движений по партиям товаров
	ВосстановитьДвиженияПоПартиямТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 10: Выборка исходных данных для расчета партий товаров организаций
	ДанныеДляПартийТоваров = ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Расчет партий товаров по исходным данным
	МассивИсключаемыхТипов = Новый Массив;
	МассивИсключаемыхТипов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра, МассивИсключаемыхТипов);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийТоваров, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииТоваров = РасчетныеПартииТоваров(ДанныеДляПартийТоваров, Регистраторы);
	// ФАЗА 14: Запись регистра ПартииТоваровОрганизаций
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииТоваров, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийТоваров, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийТоваров);
	ДанныеДляПартийТоваров.Закрыть();
	РасчетныеПартииТоваров = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииТоваровОрганизаций';uk='Партіонний облік.ПартииТоваровОрганизаций'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 16: расчет партий переданных на комиссию
Процедура РассчитатьПартииПереданные(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию.Имя;
	
	// ФАЗА 10: Выборка исходных данных для расчета партий товаров организаций
	ДанныеДляПартийПереданных = ДанныеДляПартийПереданных(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Расчет партий товаров по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийПереданных, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииПереданные = РасчетныеПартииПереданные(ДанныеДляПартийПереданных, Регистраторы);
	// ФАЗА 14: Запись регистра ПартииТоваровОрганизаций
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииПереданные, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийПереданных, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	ДанныеДляПартийПереданных.Закрыть();
	РасчетныеПартииПереданные = Неопределено;
КонецПроцедуры

//++ НЕ УТ
// Этап 18-0: распределение материалов и работ
Процедура РассчитатьРаспределениеМатериаловИРабот(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве.Имя;
	
	// ФАЗА 10: Выборка исходных данных для распределения материалов и работ
	ДанныеДляРаспределенияМатериаловИРабот = ДанныеДляРаспределенияМатериаловИРабот(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Распределение материалов и работ по исходным данным
	РасчетноеРаспределениеМатериаловИРабот = РасчетноеРаспределениеМатериаловИРабот(ДанныеДляРаспределенияМатериаловИРабот, Неопределено);
	// ФАЗА 14: Запись регистра "МатериалыИРаботыВПроизводстве"
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетноеРаспределениеМатериаловИРабот, Неопределено);
КонецПроцедуры
//-- НЕ УТ

// Этап 18-1: расчет партий производственных затрат
Процедура РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	//++ НЕ УТ
	// ФАЗА 10: Заполнение нового реквизита ПодразделениеРасходов.
	ВосстановитьДвиженияВыпускаПродукцииПоПартиямПроизводственныхЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// Заполнение реквизита "ЗаказНаПроизводство".
	ВосстановитьДвиженияСписанияЗатратНаВыпускПоПроизводственнымЗатратам(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	//-- НЕ УТ
	// ФАЗА 11: Выборка данных партий производственных затрат
	ДанныеДляПартийПроизводства = ДанныеДляПартийПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Расчет партий производственных затрат по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийПроизводства, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииПроизводства = РасчетныеПартииПроизводства(ДанныеДляПартийПроизводства, Регистраторы);
	// ФАЗА 14: запись партий производственных затрат
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииПроизводства, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийПроизводства, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийПроизводства);
	ДанныеДляПартийПроизводства.Закрыть();
	РасчетныеПартииПроизводства = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииПроизводственныхЗатрат';uk='Партіонний облік.ПартииПроизводственныхЗатрат'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

//++ НЕ УТ
// Этап 18-2: расчет партий незавершенного производства 
Процедура РассчитатьПартииНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииНезавершенногоПроизводства.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 20: Выборка данных партий незавершенного производства
	ДанныеДляПартийНЗП = ДанныеДляПартийНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 22: Расчет партий незавершенного производства по исходным данным
	МассивИсключаемыхТипов = Новый Массив;
	МассивИсключаемыхТипов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра, МассивИсключаемыхТипов);
	РасчетныеПартииНЗП = РасчетныеПартииНЗП(ДанныеДляПартийНЗП, Регистраторы);
	// ФАЗА 24: запись партий незавершенного производства
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииНЗП, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийНЗП);
	ДанныеДляПартийНЗП.Закрыть();
	РасчетныеПартииНЗП = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииНезавершенногоПроизводства';uk='Партіонний облік.ПартииНезавершенногоПроизводства'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 18-3: расчет трудозатрат незавершенного производства
Процедура РассчитатьТрудозатраты(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ТрудозатратыНезавершенногоПроизводства.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 30: Выборка данных трудозатрат незавершенного производства
	ДанныеДляТрудозатратНЗП = ДанныеДляТрудозатратНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 31: Расчет трудозатрат незавершенного производства по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляТрудозатратНЗП, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеТрудозатратыНЗП = РасчетныеТрудозатратыНЗП(ДанныеДляТрудозатратНЗП, Регистраторы);
	// ФАЗА 32: запись трудозатрат незавершенного производства
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеТрудозатратыНЗП, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляТрудозатратНЗП, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляТрудозатратНЗП);
	ДанныеДляТрудозатратНЗП.Закрыть();
	РасчетныеТрудозатратыНЗП = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ТрудозатратыНезавершенногоПроизводства';uk='Партіонний облік.ТрудозатратыНезавершенногоПроизводства'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 18-4: распределение прочих производственных расходов по базе распределения
Процедура РаспределитьПрочиеРасходыПоБазе(НачалоПериода, ОкончаниеПериода, Организации, РассчитатьВсе = Ложь) Экспорт
	
	Если ТипЗнч(Организации) <> Тип("Массив") Тогда
		// Передана организация - связанными организациями
		МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организации);
	Иначе
		// Переданы связанные по Интеркампани организации
		МассивОрганизаций = Организации;
	КонецЕсли;
	
	Если НЕ РассчитатьВсе Тогда
		// вызывается "снаружи"; при вызове из этого модуля проверка не нужна - уже выполнялась при старте расчета
		ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Распределение производственных расходов';uk='Розподіл виробничих витрат'"));
	КонецЕсли;
	
	
	// Расчет расходов на продукцию
	СебестоимостьРассчитана = РасчетСебестоимости.РассчитатьВсеВПопыткеИсключении(
		ОкончаниеПериода,
		Истина, // Предварительный расчет
		МассивОрганизаций,
		,
		Новый Структура("МестоВызоваРасчета", "ПартионныйУчет.РаспределитьПрочиеРасходыПоБазе"));
		
	// ФАЗА 40: Выборка данных для распределения прочих производственных расходов
	ДанныеДляРасходовКРаспределению = ДанныеДляРасходовКРаспределению(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 41: Расчет данных для распределения прочих производственных расходов по исходным данным
	РасчетныеРасходыКРаспределению = РасчетныеРасходыКРаспределению(ДанныеДляРасходовКРаспределению);
	ДанныеДляРасходовКРаспределению = Неопределено;
	// ФАЗА 42: Выборка данных для распределения прочих производственных расходов по подразделениям по базе
	ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе = 
		ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеРасходыКРаспределению);
	// ФАЗА 43: Расчет распределения по подразделениям прочих производственных расходов по исходным данным
	МассивИсключаемыхТиповРегистраторов = Новый Массив;
	МассивИсключаемыхТиповРегистраторов.Добавить(Тип("ДокументСсылка.РасчетСебестоимостиТоваров"));
	МассивИсключаемыхТиповРегистраторов.Добавить(Тип("ДокументСсылка.ОтчетПереработчика"));
	МассивИсключаемыхТиповРегистраторов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "ПрочиеРасходыНезавершенногоПроизводства", МассивИсключаемыхТиповРегистраторов);
	РегистраторыПрочиеРасходы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "ПрочиеРасходыНезавершенногоПроизводства", МассивИсключаемыхТиповРегистраторов);
	РегистраторыПрочиеРасходы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РегистраторыПрочиеРасходы);
	РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе = 
		РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе(ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе, Регистраторы);
	ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе = Неопределено;
	// ФАЗА 44: Выборка данных для распределения прочих производственных расходов по этапам по базе
	ДанныеДляПрочихРасходовНЗППоЭтапамПоБазе = 
		ДанныеДляПрочихРасходовНЗППоЭтапамПоБазе(НачалоПериода,
												 ОкончаниеПериода,
												 МассивОрганизаций,
												 РасчетныеРасходыКРаспределению,
												 РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе);
	// ФАЗА 45: Расчет распределения прочих производственных расходов по этапам по базе
	РасчетныеПрочиеРасходыНЗППоЭтапамПоБазе = 
		РасчетныеПрочиеРасходыНЗППоЭтапамПоБазе(ДанныеДляПрочихРасходовНЗППоЭтапамПоБазе, Регистраторы);
	ДанныеДляПрочихРасходовНЗППоЭтапамПоБазе = Неопределено;
	// ФАЗА 46: Запись прочих расходов незавершенного производства
	ЗаписатьРасчетныеПартии(РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства, РасчетныеПрочиеРасходыНЗППоЭтапамПоБазе, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, "ПрочиеРасходыНезавершенногоПроизводства");
	РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе = Неопределено;
	РасчетныеПрочиеРасходыНЗППоЭтапамПоБазе = Неопределено;
	// ФАЗА 47: Выборка данных для распределения прочих производственных расходов на другие статьи расходов,
	// и данных о расходах, распределенных по базе или вручную.
	ДанныеДляПрочихРасходов = ДанныеДляПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеРасходыКРаспределению);
	РасчетныеПрочиеРасходы = РасчетныеПрочиеРасходы(ДанныеДляПрочихРасходов, РегистраторыПрочиеРасходы);
	ДанныеДляПрочихРасходов = Неопределено;
	РасчетныеРасходыКРаспределению = Неопределено;
	// ФАЗА 48: Запись прочих расходов
	ЗаписатьРасчетныеПартии(РегистрыНакопления.ПрочиеРасходы, РасчетныеПрочиеРасходы, РегистраторыПрочиеРасходы);
	ОчиститьРегистрНаСервере(РегистраторыПрочиеРасходы, "ПрочиеРасходы");
	ВернутьДокументыРаспределенияРасходовПоБазеКОтражениюВРеглУчете(РегистраторыПрочиеРасходы);
	ВернутьДокументыРаспределенияРасходовПоБазеКОтражениюВРеглУчете(РасчетныеПрочиеРасходы);
	
	Если НЕ РассчитатьВсе Тогда
		РассчитатьПрочиеРасходыНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций); // формирует часть движений по ПрочиеРасходыНезавершенногоПроизводства
	КонецЕсли;
КонецПроцедуры

// Этап 18-5: расчет прочих расходов НЗП
Процедура РассчитатьПрочиеРасходыНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 50: Выборка данных прочих расходов незавершенного производства
	ДанныеДляПрочихРасходовНЗП = ДанныеДляПрочихРасходовНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 51: Расчет прочих расходов незавершенного производства по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РасчетныеПрочиеРасходыНЗП = РасчетныеПрочиеРасходыНЗП(ДанныеДляПрочихРасходовНЗП, Регистраторы);
	// ФАЗА 52: запись прочих расходов незавершенного производства
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПрочиеРасходыНЗП, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПрочихРасходовНЗП);
	ДанныеДляПрочихРасходовНЗП.Закрыть();
	РасчетныеПрочиеРасходыНЗП = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПрочиеРасходыНезавершенногоПроизводства';uk='Партіонний облік.ПрочиеРасходыНезавершенногоПроизводства'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 18-6: расчет движений себестоимости производства
Процедура РассчитатьСебестоимостьПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 60: Устранение дублей первичных движений по себестоимости товаров
	ВосстановитьДвиженияПрочегоОприходованияТоваровПоСебестоимостиТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 61: Расчет (трансляция в себестоимость товаров)
	ДанныеДляСебестоимостиПроизводства = ДанныеДляСебестоимостиПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	Регистраторы = РегистраторыСебестоимостиПроизводства(ДанныеДляСебестоимостиПроизводства, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 62: Запись расходов в СебестоимостьТоваров
	Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ Данные КАК Т");
	Запрос.МенеджерВременныхТаблиц = ДанныеДляСебестоимостиПроизводства;
	ДвиженияСебестоимостиПроизводства = Запрос.Выполнить().Выгрузить();
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], ДвиженияСебестоимостиПроизводства, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра);
	// Завершение этапа
	КоличествоЗаписей = ДвиженияСебестоимостиПроизводства.Количество();
	ДвиженияСебестоимостиПроизводства = Неопределено;
	ДанныеДляСебестоимостиПроизводства.Закрыть();
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.СебестоимостьТоваров';uk='Партіонний облік.СебестоимостьТоваров'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры
//-- НЕ УТ

// Этап 2Х: расчет партий затрат на выпуск
Процедура РассчитатьПартииЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 20: Выборка исходных данных для расчета партий затрат на выпуск
	ДанныеДляПартийЗатрат = ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	
	// ФАЗА 22: Расчет партий затрат по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийЗатрат, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииЗатрат = РасчетныеПартииЗатрат(ДанныеДляПартийЗатрат, Регистраторы);
	// ФАЗА 24: Запись регистра ПартииЗатратНаВыпуск
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииЗатрат, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийЗатрат, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийЗатрат);
	ДанныеДляПартийЗатрат.Закрыть();
	РасчетныеПартииЗатрат = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииЗатратНаВыпуск';uk='Партіонний облік.ПартииЗатратНаВыпуск'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этапы 3Х и 4Х: расчет партий прочих расходов на себестоимость товаров, партионный учет включен
Процедура РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИспользоватьПартионныйУчет = Константы.ИспользоватьПартионныйУчет.Получить();
// Область РасчетПартийПрочих
	// ФАЗА 30: Выборка исходных данных для расчета списания партий прочих расходов
	Если ИспользоватьПартионныйУчет Тогда
		ДанныеДляПартийПрочих = ДанныеДляПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	Иначе
		ДанныеДляПартийПрочих = ДанныеДляПартийПрочихСебестоимость(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	КонецЕсли;
	// ФАЗА 32: Расчет расхода ПартииПрочихРасходов
	РасчетныеПартииПрочих = РасчетныеПартииПрочих(ДанныеДляПартийПрочих, Неопределено);
	// ФАЗА 34: Запись регистра ПартииПрочихРасчетов
	ЗаписатьРасчетныеПартии(РегистрыНакопления.ПартииПрочихРасходов, РасчетныеПартииПрочих, Неопределено);
	РасчетныеПартииПрочих = Неопределено;
	
// Область РасчетПриходыРасходовСебестоимость
	// ФАЗА 40: Расчет прихода в ПартииРасходовНаСебестоимостьТоваров
	РасчетныеПриходыПартийРасходов = РасчетныеПриходыПартийРасходов(ДанныеДляПартийПрочих, Неопределено);
	ДанныеДляПартийПрочих = Неопределено;
	// ФАЗА 42: Запись прихода в ПартииРасходовНаСебестоимостьТоваров
	Если ИспользоватьПартионныйУчет Тогда
		ЗаписатьРасчетныеПартии(РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров, РасчетныеПриходыПартийРасходов, Неопределено);
	КонецЕсли;
	
	// ФАЗА 44: Расчет (трансляция приходов партий расходов) приходов в себестоимость товаров
	РасчетныеПриходыСебестоимости = РасчетныеПриходыСебестоимости(РасчетныеПриходыПартийРасходов, Неопределено);
	РасчетныеПриходыПартийРасходов = Неопределено;
	// ФАЗА 46: Запись прихода в СебестоимостьТоваров
	ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПриходыСебестоимости, Неопределено);
	
	//++ НЕ УТ
	// ФАЗА 47: Запись в ОтражениеДокументовВРеглУчете
	ВернутьДокументыКОтражениюВРеглУчете(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	//-- НЕ УТ
	РасчетныеПриходыСебестоимости = Неопределено;
	
// Область РасчетЗаписейНоменклатураДоходыРасходы
	// ФАЗА 47: Выборка исходных данных для движений в НоменклатураДоходыРасходы
	ДанныеДляНоменклатураДоходыРасходы = ДанныеДляНоменклатураДоходыРасходы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 48: Запись движений в НоменклатураДоходыРасходы
	ЗаписатьРасчетныеПартии(РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы, ДанныеДляНоменклатураДоходыРасходы, Неопределено);
	ДанныеДляНоменклатураДоходыРасходы = Неопределено;
КонецПроцедуры

// Этап 5Х: расчет партий расходов на себестоимость выбытия товаров
Процедура РассчитатьПартииРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 50: Выборка исходных данных для расчета списания партий расходов на себестоимость товаров
	ДанныеДляПартийРасходов = ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 52: Расчет расхода ПартииРасходовНаСебестоимостьТоваров
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийРасходов, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииРасходов = РасчетныеПартииРасходов(ДанныеДляПартийРасходов, Регистраторы);
	// ФАЗА 54: Запись расхода ПартииРасходовНаСебестоимостьТоваров
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииРасходов, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийРасходов, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийРасходов);
	ДанныеДляПартийРасходов.Закрыть();
	РасчетныеПартииРасходов = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% стор. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииРасходовНаСебестоимостьТоваров';uk='Партіонний облік.ПартииРасходовНаСебестоимостьТоваров'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 6Х: расчет записей регистировк при корректировках налогового назначения НДС
Процедура РассчитатьЗаписиКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)		
    
	// ФАЗА 60: выборка данных по восстановлению НДС и условным продажам
	ДанныеДляКорректировокНДС = ДанныеДляКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
    
    // ФАЗА 61: выборка устаревших регистраторов по регистру КорректировкиНДСПартий
    УстаревшиеРегистраторыКорректировокНДС = ТаблицаУстаревшихРегистраторовКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ДанныеДляКорректировокНДС, "КорректировкиНДСПартий");
	// ФАЗА 62: дополнить ДанныеДляКорректировокНДС движениями организаций, по которым расчет сейчас не выполняется
	ДополнитьДанныеДляКорректировокНДССохраняемымиДвижениями(ДанныеДляКорректировокНДС, УстаревшиеРегистраторыКорректировокНДС, НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "КорректировкиНДСПартий");
	
	// ФАЗА 63: фильтрация данных по восстановлению НДС
	РасчетныеНДСВосстановлениеНДС = РасчетныеНДСВосстановлениеНДС(ДанныеДляКорректировокНДС);
	// ФАЗА 64: запись данных по восстановлению НДС
	ЗаписатьРасчетныеПартии(РегистрыНакопления.КорректировкиНДСПартий, РасчетныеНДСВосстановлениеНДС, Неопределено);
	
	// ФАЗА 65: фильтрация данных по условным продажам
	РасчетныеНДСУсловнаяПродажа = РасчетныеНДСУсловнаяПродажа(ДанныеДляКорректировокНДС);
	// ФАЗА 66: запись данных по условным продажам
	ЗаписатьРасчетныеПартии(РегистрыНакопления.КорректировкиНДСПартий, РасчетныеНДСУсловнаяПродажа, Неопределено);
    
	// ФАЗА 67: очистка движений устаревших регистраторов по регистру КорректировкиНДСПартий
	ОчиститьДвиженияУстаревшихРегистраторовКорректировокНДС(УстаревшиеРегистраторыКорректировокНДС, "КорректировкиНДСПартий");
	УстаревшиеРегистраторыКорректировокНДС = Неопределено;
    
    // ФАЗА 68: расчет записей по регистру НДСУсловныеПродажи 
	РасчетныеНДСУсловныеПродажи = РасчетныеНДСУсловныеПродажи(РасчетныеНДСУсловнаяПродажа, РасчетныеНДСВосстановлениеНДС);
    
    // ФАЗА 69: выборка устаревших регистраторов по регистру НДСУсловныеПродажи
    УстаревшиеРегистраторыНДСУсловныеПродажи = ТаблицаУстаревшихРегистраторовКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеНДСУсловныеПродажи, "НДСУсловныеПродажи");
	// ФАЗА 70: дополнить РасчетныеНДСУсловныеПродажи движениями организаций, по которым расчет сейчас не выполняется
	ДополнитьДанныеДляКорректировокНДССохраняемымиДвижениями(РасчетныеНДСУсловныеПродажи, УстаревшиеРегистраторыНДСУсловныеПродажи, НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "НДСУсловныеПродажи");
    
    // ФАЗА 71: запись данных по регистру НДСУсловныеПродажи 
	ЗаписатьРасчетныеПартии(РегистрыНакопления.НДСУсловныеПродажи, РасчетныеНДСУсловныеПродажи, Неопределено);
    
	// ФАЗА 72: очистка движений устаревших регистраторов по регистру НДСУсловныеПродажи
	ОчиститьДвиженияУстаревшихРегистраторовКорректировокНДС(УстаревшиеРегистраторыНДСУсловныеПродажи, "НДСУсловныеПродажи");
	УстаревшиеРегистраторыНДСУсловныеПродажи = Неопределено;
    
    РасчетныеНДСВосстановлениеНДС = Неопределено;
    РасчетныеНДСУсловнаяПродажа   = Неопределено;
	РасчетныеНДСУсловныеПродажи   = Неопределено;
    
КонецПроцедуры

// Этап 64: расчет приходов партий прочих расходов
Процедура РассчитатьПриходыПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	
	// ФАЗА 60: выборка данных для приходов партий прочих расходов
	ДанныеДляПартийПрочихРасходов = ДанныеДляПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 62: запись книги продаж
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийПрочихРасходов, Неопределено);
	// Завершение этапа
	ДанныеДляПартийПрочихРасходов = Неопределено;
КонецПроцедуры
	
// Этап 7Х: Запись новых границ рассчитанных партий - завершение партионного расчета за период
Процедура УстановитьГраницыПартииТоваровОрганизаций(РассчитанныйПериод, ОкончаниеПериодаРасчета, МассивОрганизаций)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НачалоПериодаРасчета(ОкончаниеПериодаРасчета, МассивОрганизаций) < РассчитанныйПериод Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Месяц,
	|	ДД.Организация
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.НомерЗаданияКРасчетуСебестоимости КАК НомерКРасчету
	|		ПО ИСТИНА
	|ГДЕ
	|	ДД.Месяц МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.НомерЗадания < НомерКРасчету.Значение
	|	И ДД.Организация В (&МассивОрганизаций)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.Месяц,
	|	ДД.НомерЗадания,
	|	ДД.Организация,
	|	ДД.Документ
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.НомерЗаданияКРасчетуСебестоимости КАК НомерКРасчету
	|		ПО ИСТИНА
	|ГДЕ
	|	ДД.Месяц МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.НомерЗадания >= НомерКРасчету.Значение
	|	И ДД.Организация В (&МассивОрганизаций)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&ОкончаниеПериода, МЕСЯЦ), СЕКУНДА, 1) КАК Месяц,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&МассивОрганизаций)
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоМесяца(РассчитанныйПериод));
	Запрос.УстановитьПараметр("ОкончаниеПериода",  КонецМесяца(РассчитанныйПериод));
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьНаборЗаписей();
		Набор.Отбор.Месяц.Установить(Выборка.Месяц);
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Набор.Записать(Истина);
	КонецЦикла;
	
	Если НЕ Результаты[1].Пустой() Тогда
		Набор = РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьНаборЗаписей();
		Набор.Загрузить(Результаты[1].Выгрузить());
		Набор.Записать(Ложь);
	КонецЕсли;
	
	РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписиРегистраПоДаннымВыборки(
		Результаты[2].Выбрать(),
		РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПолучитьНомерЗадания() - 1);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоНДС(ОкончаниеПериода, МассивОрганизаций)
	
	// Корректировка использования НДС
	ПартионныйУчетСервер.СформироватьДвиженияПоКорректировкамНДС(ОкончаниеПериода, МассивОрганизаций);
	
    //++ НЕ УТ
	НачатьТранзакцию();
	Попытка
		Для Каждого ТекущаяОрганизация Из МассивОрганизаций Цикл
			Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.КорректироватьНалоговыеНазначенияКапитальныхИнвестиций(
			  	ОкончаниеПериода, 
			  	ТекущаяОрганизация, 
			  	Истина
			);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось выполнить корректировку налогового назначения капитальных инвестиций по причине %1';uk='Не вдалося виконати коригування податкового призначення капітальних інвестицій з причини %1'"),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Партионный учет.Корректировка налогового назначения капитальных инвестиций.';uk='Партіонний облік.Коригування податкового призначення капітальних інвестицій.'"), 
			УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
	КонецПопытки;
    //-- НЕ УТ
	
КонецПроцедуры

Процедура РассчитатьСебестоимость(ОкончаниеПериода, МассивОрганизаций)
	СебестоимостьРассчитана = РасчетСебестоимости.РассчитатьВсеВПопыткеИсключении(
		ОкончаниеПериода,
		Ложь, // Фактический расчет
		МассивОрганизаций,
		,
		Новый Структура("МестоВызоваРасчета", "ПартионныйУчет.РассчитатьСебестоимость"));
	
	Если НЕ СебестоимостьРассчитана Тогда
		ВызватьИсключение
			НСтр("ru='При расчете себестоимости возникла ошибка.
                     |Подробности см. в Журнале регистрации.'
                     |;uk='При розрахунку собівартості виникла помилка.
                     |Подробиці див. у Журналі реєстрації.'");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область РасчетПартийТоваров

// Текст запроса исходных движений для расчета партий
Функция ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	// СОРТИРОВКА по аналитикам, приоритету и моменту движения - требование алгоритма обсчета партий
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, ПериодПоступления, Приоритет ВОЗР, РазделУчета, Организация, ВидЗапасов, АналитикаУчетаПартий, Регистратор
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|";
	
	ИсходныйТекстЗапроса =
		ТекстПартииТоваровИнициализация() + ";" // вт ПрошлыеПоступления
		+ ТекстОписаниеПартийТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийТоваров() // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПеремещенияТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРеализацииПрошлыхМесяцев()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписанияКомиссионныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПеремещений()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеИмпортныхПартий()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеТаможеннойДекларацией()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыРастаможенногоТовара()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияЧужихЗапасов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыЧужихЗапасов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияСобственныхЗапасов()
		//++ НЕ УТ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВПроизводстве()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВводыОстатковВПроизводстве()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияОтходовВПроизводство()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачиВПроизводствоКомиссионныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачиВПроизводство()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыИзПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПеремещенияМатериаловВПроизводстве()
		//-- НЕ УТ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПереданныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВводыОстатковПереданныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачиНаКомиссию()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыПереданныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыНаСкладПереданныхТоваров()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийТоваров());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Номенклатура", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииТоваров(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина) // ДанныеДляРасчета будут изменены
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийТоваров());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Партия, Остаток, Сторно, Перемещение, Прошлое, Материал, Производство,
		|Возврат, Корректировка, Импорт, Декларация, ВозвратКомиссия, ПеремещениеВПроизводстве");
	
	ПоляПотреблений = "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета";
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииТоваровОрганизаций",
		"ПартииТоваровОрганизаций",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Знаменатель, Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументИсточник", "ПериодПоступления", "ДокументПоступления", Истина);
		
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", 	 ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", 	 ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Импорт", 	 ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", 	 ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Декларация", "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Декларация", "Остаток", "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Декларация", "Импорт",  "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, ДокументПоступления");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Материал", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Остаток", 	  ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Партия", 	  ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Сторно", 	  ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Корректировка", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Остаток", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Партия",  "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", "ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Прошлое", 	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Материал", 	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Возврат", 	"Регистратор, АналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "ВозвратКомиссия", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Декларация",  "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Материал", 	 "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "ПеремещениеВПроизводстве", "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Производство", "ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Производство", "Потребление", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПеремещениеВПроизводстве", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПеремещениеВПроизводстве", "Производство", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПеремещениеВПроизводстве", "Остаток", 	  "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Возврат", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Производство", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Остаток", 	  "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Перемещение",  "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВозвратКомиссия", "ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратКомиссия", "Перемещение", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратКомиссия", "Остаток", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем строки, не требующие записи в базу.
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, Приоритет", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииТоваровИнициализация() // вт ПотребленияЧужихЗапасов, ПрошлыеРеализации, ПрошлыеПоступления, МатериалыИРаботыВПроизводстве, ПрошлыеПоступленияПроизводство
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.ОрганизацияВладелец,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НомерГТД,
		|	ДД.ВидЗапасовПродавца,
		|	ВидыЗапасов.ВидЗапасовВладельца,
		|	ВидыЗапасов.Организация КАК ОрганизацияПродавец
		|ПОМЕСТИТЬ
		|	ПотребленияЧужихЗапасов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасовПродавца
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расходы
		|		ПО Расходы.Регистратор = ДД.Регистратор
		|		И Расходы.Организация = ДД.ОрганизацияВладелец
		|		И Расходы.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Расходы.НомерГТД = ДД.НомерГТД
		|		И Расходы.ВидЗапасов = ВидыЗапасов.ВидЗапасовВладельца
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ВидыЗапасов.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Расходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|;
	    |ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасовПродавца = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Период) КАК Период,
		|	(ВЫБОР КОГДА Импорт.Регистратор ЕСТЬ NULL
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.Регистратор = ДД.ДокументПоступления
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению КАК Импорт
		|		ПО Импорт.Период < &НачалоПериода
		|		И Импорт.Регистратор = ДД.ДокументПоступления
		|		И Импорт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления,
		|	(ВЫБОР КОГДА Импорт.Регистратор ЕСТЬ NULL
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ)
		|;
	    |ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
		|		ПО Товары.Ссылка = ДД.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ДД.Количество > 0
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступленияПроизводство
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления
		|";
КонецФункции

Функция ТекстОписаниеПартийТоваров()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ТекстОписаниеПартийТоваров______________________"" КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|";
КонецФункции

// КОНТУР ПартииТоваровОрганизаций
Функция ТекстОстаткиПартийТоваров() // использует ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЕСТЬNULL(Периодика.РазделУчета, ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)) КАК РазделУчета,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	Периодика.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|";
КонецФункции

Функция ТекстПервичныеПартииТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПервичныеПартииТоваров"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА 15
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА ""Корректировка""
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) ТОГДА ""Импорт""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	(ВЫБОР КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ) КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	АналитикиПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.Ссылка = ДД.АналитикаУчетаПартий
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Первичное
		|	И ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА 15
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА ""Корректировка""
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) ТОГДА ""Импорт""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.ВидДвижения,
		|	(ВЫБОР КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Первичное,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И (ДД.Стоимость < 0 ИЛИ ДД.Количество = 0) ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстПервичныеПеремещенияТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПервичныеПеремещенияТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL ТОГДА ""Сторно""
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ""Перемещение"" 
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.НДСРегл КОНЕЦ) КАК НДСРегл,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.ВременнаяРазница КОНЕЦ) КАК ВременнаяРазница,
		|	ДД.Первичное,
		|	(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Сборка
		|		ПО Сборка.Дата = ДД.Период
		|		И Сборка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
		|		ПО Передача.Дата = ДД.Период
		|		И Передача.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаКомиссия
		|		ПО ПередачаКомиссия.Дата = ДД.Период
		|		И ПередачаКомиссия.Ссылка = ДД.Регистратор
		|		И ПередачаКомиссия.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возврат
		|		ПО Возврат.Дата = ДД.Период
		|		И Возврат.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступления
		|	И ДД.Первичное
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL ТОГДА ""Сторно""
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ""Перемещение"" 
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Первичное,
		|	(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстРеализацииПрошлыхМесяцев()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстРеализацииПрошлыхМесяцев"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Первичное,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

// КОНТУР ТоварыОрганизаций
Функция ТекстПотребленияТоваров()
	// потребления товаров - реализации, возвраты, расходы перемещений и передач - без расходов чужих видов запасов
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияТоваров"" КАК ЗапросИсточник,
		|	(ВЫБОР КОГДА ДД.Количество > 0. ТОГДА 90 ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Разборка.Ссылка ЕСТЬ NULL ТОГДА ""Материал""
		|		КОГДА ДД.Количество > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику ТОГДА ДД.ДокументРеализации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаНалоговогоНазначенияЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Количество < 0. ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.ВидЗапасов
		|		КОГДА ДД.Количество < 0. И ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.Количество > 0. ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.ДокументРеализации КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Разборка
		|		ПО Разборка.Дата = ДД.Период
		|		И Разборка.Ссылка = ДД.Регистратор
		|		И Разборка.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Организация = ДД.ОрганизацияОтгрузки
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Количество > 0. ИЛИ ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО) 
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.Количество > 0. ТОГДА 90 ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Разборка.Ссылка ЕСТЬ NULL ТОГДА ""Материал""
		|		КОГДА ДД.Количество > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику ТОГДА ДД.ДокументРеализации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(Разборка.Количество, 0),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаНалоговогоНазначенияЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Количество < 0. ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.ВидЗапасов
		|		КОГДА ДД.Количество < 0. И ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Количество > 0. ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.ДокументРеализации КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстСписанияКомиссионныхТоваров()
	// списание товаров, полученных на комиссию, по аналитике номенклатуры у комитента
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписанияКомиссионныхТоваров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.ВидЗапасов.Организация КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.КоличествоСписано) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	ТоварыОрганизаций.ДокументРеализации КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ТоварыОрганизаций.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ТоварыОрганизаций.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|		ПО ТоварыОрганизаций.Регистратор = ДД.Регистратор
		|		И ТоварыОрганизаций.Период = ДД.Период
		|		И ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И ТоварыОрганизаций.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.ВидЗапасов.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.КоличествоСписано <> 0
		|	И ДД.ВидЗапасов.Организация = ДД.КорВидЗапасов.Организация
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		|	ТоварыОрганизаций.ДокументРеализации,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ТоварыОрганизаций.СтатьяРасходов,
		|	ТоварыОрганизаций.АналитикаРасходов
		|";
КонецФункции

Функция ТекстПриходыПеремещений()
	// приходы перемещений, передач, пересортиц по ценам списания, порч по ценам списания
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПриходыПеремещений"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Регистратор = ДД.Регистратор
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Партии.Первичное
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.ВидЗапасов = ДД.ВидЗапасов
		|		И НЕ (Партии.Регистратор ССЫЛКА Документ.ПересортицаТоваров И Партии.ДокументИсточник <> НЕОПРЕДЕЛЕНО)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаОбособленногоУчета),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаНалоговыхНазначений),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
		|	И Партии.Регистратор ЕСТЬ NULL
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.ВидЗапасов,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции
	
// КОНТУР ТоварыОрганизацийКОформлению -> оформление импорта
Функция ТекстСписаниеИмпортныхПартий()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписаниеИмпортныхПартий"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ДокументПоступления,
		|	Строки.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Дата КАК ПериодПоступления,
		|	Строки.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	Строки.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Строки.Номенклатура,
		|	Строки.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению КАК КОформлению
		|		ПО КОформлению.Период = ДД.Дата
		|		И КОформлению.Регистратор = ДД.Ссылка
		|		И КОформлению.АналитикаУчетаНоменклатуры = Строки.АналитикаУчетаНоменклатуры
		|		И КОформлению.ВидЗапасов = Строки.ВидЗапасов
		|		И КОформлению.ДокументПоступления = Строки.ДокументПоступления
		|		И КОформлению.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И КОформлению.ДокументПоступления ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	Строки.ДокументПоступления,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ВидЗапасов,
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

Функция ТекстСписаниеТаможеннойДекларацией()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписаниеТаможеннойДекларацией"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Декларация"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитики
		|		ПО Аналитики.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ДокументПоступления,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика
		|";
КонецФункции

Функция ТекстПриходыРастаможенногоТовара()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПриходыРастаможенногоТовара"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитики
		|		ПО Аналитики.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика
		|";
КонецФункции

// КОНТУР ТоварыОрганизацийКПередаче -> оформление продаж между организациями по расходу чужих запасов
Функция ТекстПотребленияЧужихЗапасов()
	// потребления чужих видов запасов (реализации, перемещения, возвраты от клиентов)
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияЧужихЗапасов"" КАК ЗапросИсточник,
		|	(ВЫБОР КОГДА ДД.Количество > 0. ТОГДА 90 ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Разборка.Ссылка ЕСТЬ NULL ТОГДА ""Материал""
		|		КОГДА ДД.Количество > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ОрганизацияОтгрузки КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	ДД.ДокументРеализации КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПотребленияЧужихЗапасов КАК КПередаче
		|		ПО КПередаче.Регистратор = ДД.Регистратор
		|		И КПередаче.ОрганизацияВладелец = ДД.Организация
		|		И КПередаче.ОрганизацияПродавец = ДД.ОрганизацияОтгрузки
		|		И КПередаче.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И КПередаче.НомерГТД = ДД.НомерГТД
		|		И КПередаче.ВидЗапасовВладельца = ДД.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Разборка
		|		ПО Разборка.Дата = ДД.Период
		|		И Разборка.Ссылка = ДД.Регистратор
		|		И Разборка.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.ОрганизацияОтгрузки В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя))
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации И ДД.Количество < 0)
		|";
КонецФункции

Функция ТекстВозвратыЧужихЗапасов()
	// возвраты от клиентов чужих видов запасов
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыЧужихЗапасов"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ОрганизацияОтгрузки КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ДД.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|		 И Возврат.ВозвратПереданнойМногооборотнойТары
		|			ТОГДА ДД.ДокументРеализации
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументРеализации КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
		|		ПО СправочникВидыЗапасов.Ссылка = ДД.КорВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК Возврат
		|		ПО Возврат.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	И ДД.Организация <> ДД.ОрганизацияОтгрузки
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|       ИЛИ (ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя))
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
		|	И СправочникВидыЗапасов.РеализацияЗапасовДругойОрганизации
		|";
КонецФункции

Функция ТекстПотребленияСобственныхЗапасов()
	// списание под обеспечение потреблений чужих видов запасов (передачи, возвраты передач)
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияСобственныхЗапасов"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА Не Возврат.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА СправочникВидыЗапасов.Организация ИНАЧЕ ДД.ОрганизацияВладелец КОНЕЦ) КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА ДД.ВидЗапасовПродавца ИНАЧЕ СправочникВидыЗапасов.ВидЗапасовВладельца КОНЕЦ) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество + ДД.Возвращено) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА ДД.КорВидЗапасов ИНАЧЕ ДД.ВидЗапасовПродавца КОНЕЦ) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
		|		ПО СправочникВидыЗапасов.Ссылка = ДД.ВидЗапасовПродавца
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возврат
		|		ПО Возврат.Дата = ДД.Период
		|		И Возврат.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И (ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА СправочникВидыЗапасов.Организация ИНАЧЕ ДД.ОрганизацияВладелец КОНЕЦ) В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Не Возврат.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА СправочникВидыЗапасов.Организация ИНАЧЕ ДД.ОрганизацияВладелец КОНЕЦ),
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА ДД.ВидЗапасовПродавца ИНАЧЕ СправочникВидыЗапасов.ВидЗапасовВладельца КОНЕЦ),
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА ДД.КорВидЗапасов ИНАЧЕ ДД.ВидЗапасовПродавца КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

//++ НЕ УТ
// КОНТУР ПроизводственныеЗатраты
Функция ТекстОстаткиВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиВПроизводстве"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступленияПроизводство КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|";
КонецФункции

Функция ТекстВводыОстатковВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВводыОстатковВПроизводстве"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество КАК Количество,
		|	ДД.Стоимость КАК Стоимость,
		|	ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРегл КАК СтоимостьРегл,
		|	ДД.НДСРегл КАК НДСРегл,
		|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазница КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		|";
КонецФункции

Функция ТекстПоступленияОтходовВПроизводство()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПоступленияОтходовВПроизводство"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество КАК Количество,
		|	ДД.Стоимость КАК Стоимость,
		|	ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРегл КАК СтоимостьРегл,
		|	ДД.НДСРегл КАК НДСРегл,
		|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазница КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|	И ДД.Количество > 0
		|";
КонецФункции

Функция ТекстПередачиВПроизводство()
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПередачиВПроизводство"" КАК ЗапросИсточник,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Возврат""
		|		ИНАЧЕ ""Производство"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация КАК Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ) КАК ДокументИсточник,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ДД.ВидЗапасов.Назначение
		|		ИНАЧЕ ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КОНЕЦ) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Возврат""
		|		ИНАЧЕ ""Производство"" КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ДД.ВидЗапасов.Назначение
		|		ИНАЧЕ ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстПередачиВПроизводствоКомиссионныхТоваров()
	// передачи в производство товаров, принятых на комиссию
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПередачиВПроизводствоКомиссионныхТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Производство"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	СпрВидыЗапасов.Организация КАК Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.КоличествоСписано) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.КорВидЗапасов.Назначение КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.КоличествоСписано <> 0
		|	И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	СпрВидыЗапасов.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.КорВидЗапасов.Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстВозвратыИзПроизводства()
	// возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыИзПроизводства"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	-ДД.Количество КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|";
КонецФункции

Функция ТекстПеремещенияМатериаловВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПеремещенияМатериаловВПроизводстве"" КАК ЗапросИсточник,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""ПеремещениеВПроизводстве""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЕСТЬNULL(АналитикаПолучателя.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ) КАК ДокументИсточник,
		|	ДД.Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
		|		ПО АналитикаПолучателя.Номенклатура = ДД.Номенклатура
		|		И АналитикаПолучателя.Характеристика = ДД.Характеристика
		|		И АналитикаПолучателя.Серия = ДД.Серия
		|		И АналитикаПолучателя.Склад = ДД.ПодразделениеПолучатель
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ПеремещениеМатериаловВПроизводстве
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(АналитикаПолучателя.КлючАналитики, НЕОПРЕДЕЛЕНО),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	ДД.Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение 
		|";
КонецФункции
//-- НЕ УТ

// КОНТУР ПартииТоваровПереданныеНаКомиссию
Функция ТекстОстаткиПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПереданныхТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументПередачиНаКомиссию КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|";
КонецФункции

Функция ТекстВводыОстатковПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВводыОстатковПереданныхТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументПередачиНаКомиссию КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		|";
КонецФункции

Функция ТекстПередачиНаКомиссию()
	// передачи товаров на комиссию
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПередачиНаКомиссию"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстВозвратыПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыПереданныхТоваров"" КАК ЗапросИсточник,
		|	90 Приоритет,
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ""ВозвратКомиссия""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.ДокументРеализации КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реализация
		|		ПО Реализация.Ссылка = ДД.ДокументРеализации
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ""ВозвратКомиссия""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ДокументРеализации,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
	КонецФункции
	
Функция ТекстВозвратыНаСкладПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыНаСкладПереданныхТоваров"" КАК ЗапросИсточник,
		|	90 Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
		|		ПО СправочникВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Организация = ДД.ОрганизацияОтгрузки
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|	И НЕ СправочникВидыЗапасов.РеализацияЗапасовДругойОрганизации
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументРеализации,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

#КонецОбласти


#Область РасчетПартийПереданных

// Текст запроса исходных движений для расчета партий
// ПРИОРИТЕТ:
//	{10, Партия}, {10, Сторно}, {10, Перемещение}, {10, Перемещение/Собственные},
//	{80, Сторно/Чужие},
//	{90, Потребление}, {90, Потребление/Чужие}, {90, Потребление/Собственные}
// ПРИМЕЧАНИЯ:
//	ДокументПоступления - нужен для партий/остатков, приходных движений перемещений и для сторно
//	КорАналитикаУчетаНоменклатуры, КорВидЗапасов - нужны для расходных движений перемещений и для сторно
Функция ДанныеДляПартийПереданных(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	// СОРТИРОВКА по аналитикам, приоритету и моменту движения - требование алгоритма обсчета партий
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Приоритет ВОЗР, ПериодПоступления, Регистратор
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|";	
		
	ИсходныйТекстЗапроса =
		ТекстПартииПереданныхИнициализация() + ";" // вт ПрошлыеПоступления
		+ ТекстОписаниеПартийПереданных()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПереданных()  // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстНачальныеОстаткиПереданные()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииПереданные()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииВПути()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииВПутиРеализовано()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыКомиссионеров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыМеждуОрганизациями()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетыКомиссионеров()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийПереданных());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Номенклатура", ТекстСортировка, РасчетныеПартии, МВТ);

	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииПереданные(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь) // ДанныеДляРасчета будут изменены
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийПереданных());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Партия, Остаток, Сторно, Возврат, ВПути");
	
	ПоляПотреблений = "РазделУчета, Организация, АналитикаУчетаНоменклатуры, ВидЗапасов";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ВПути", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", "АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Партия", "АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ПоляВозврата = "РазделУчета, Организация, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления, ДокументПередачиНаКомиссию";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Возврат", ПоляВозврата);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Остаток", ПоляВозврата);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Партия", ПоляВозврата);
	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииТоваровПереданныеНаКомиссию",
		"ПартииТоваровПереданныеНаКомиссию",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументПередачиНаКомиссию", "Период");
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииПереданныхИнициализация()
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|";
КонецФункции

Функция ТекстОписаниеПартийПереданных()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ТекстОписаниеПартийПереданных______________________"" КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ДД.ДокументПередачиНаКомиссию,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийПереданных() // использует ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийПереданных"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	Периодика.Период КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПередачиНаКомиссию,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	Периодика.Период КАК ПериодПоступления,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			МАКСИМУМ(Периодика.Период) КАК Период, ПрошлыеПоступления.Ссылка
		|		ИЗ
		|			ПрошлыеПоступления КАК ПрошлыеПоступления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Периодика
		|				ПО Периодика.Период < &НачалоПериода
		|				И Периодика.ДокументПоступления = ПрошлыеПоступления.Ссылка
		|		СГРУППИРОВАТЬ ПО
		|			ПрошлыеПоступления.Ссылка
		|	) КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузки
		|		ПО Отгрузки.Ссылка = ДД.ДокументПередачиНаКомиссию
		|		И Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|	И Отгрузки.Ссылка ЕСТЬ NULL
		|";
КонецФункции

Функция ТекстНачальныеОстаткиПереданные()
	Возврат "
		// Ввод начальных остатков
		|ВЫБРАТЬ
		|	""ТекстНачальныеОстаткиПереданные"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПередачиНаКомиссию,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор = ДД.ДокументПоступления
		|	И Товары.Регистратор ЕСТЬ NULL
		|";
КонецФункции

Функция ТекстПартииПереданные()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПартииПереданные"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.Регистратор КАК ДокументПередачиНаКомиссию,
		|	СУММА(Партии.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	СУММА(Партии.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Стоимость,
		|	СУММА(Партии.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(Партии.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьРегл,
		|	СУММА(Партии.НДСРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК НДСРегл,
		|	СУММА(Партии.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(Партии.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Партии.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.Количество > 0.
		|	И НЕ Партии.Первичное
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.Регистратор,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстПартииВПути()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПартииВПути"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода ТОГДА ""ВПути""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор КАК ДокументПередачиНаКомиссию,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузки
		|		ПО Отгрузки.Ссылка = ДД.Регистратор
		|ГДЕ
		|	(ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		ИЛИ Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода ТОГДА ""ВПути""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстПартииВПутиРеализовано()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПартииВПутиРеализовано"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути) КАК РазделУчета,
		|	Отгрузки.ДатаПереходаПраваСобственности КАК Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор КАК ДокументПередачиНаКомиссию,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	Отгрузки.ДатаПереходаПраваСобственности КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузки
		|		ПО Отгрузки.Ссылка = ДД.Регистратор
		|ГДЕ
		|	Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	Отгрузки.ДатаПереходаПраваСобственности,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстВозвратыКомиссионеров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыКомиссионеров"" КАК ЗапросИсточник,
		|	45 КАК Приоритет,
		|	""Возврат"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.ДокументИсточник КАК ДокументПередачиНаКомиссию,
		|	- СУММА(Партии.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	- СУММА(Партии.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Стоимость,
		|	- СУММА(Партии.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьБезНДС,
		|	- СУММА(Партии.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьРегл,
		|	- СУММА(Партии.НДСРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК НДСРегл,
		|	- СУММА(Партии.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ПостояннаяРазница,
		|	- СУММА(Партии.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ВременнаяРазница,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.КорВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|	И Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.Количество < 0.
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(НЕ Партии.Первичное),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстВозвратыМеждуОрганизациями()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыМеждуОрганизациями"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПередачиНаКомиссию,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстОтчетыКомиссионеров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОтчетыКомиссионеров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И ДД.Количество < 0
		|		ТОГДА ""Сторно""
		|		ИНАЧЕ ""Потребление""
		|	КОНЕЦ КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПередачиНаКомиссию,
		|	ДД.Количество КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК ТоварыКПередаче
		|		ПО ТоварыКПередаче.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Регистратор ЕСТЬ NULL
		|	И ТоварыКПередаче.Регистратор ЕСТЬ NULL
		|";
КонецФункции

#КонецОбласти


#Область РасчетПартийЗатрат

Функция ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	ДокументВыпуска, Период, Регистратор, Приоритет ВОЗР
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументВыпуска
		|";	
	// Выбираем приходные движения партий затрат, которые дальше будем двигать по партиям
	ИсходныйТекстЗапроса =
		ТекстПартииЗатратИнициализация() + ";" // вт Выпуски
		+ ТекстОписаниеПартийЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийЗатрат() // использует Выпуски
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыСборокТоваров() // использует Выпуски
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыПартийЗатратПрошлыхМесяцев() // использует ПрошлыеРеализации
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийЗатратКомиссия()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийЗатратКомиссияВозврат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеПартийЗатрат()
		//++ НЕ УТ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыПрочихРасходовНЗП()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыНЗП()
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииНезавершенногоПроизводстваОтчетДавальцу()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетДавальцу()
		//-- НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИспользованныеПолуфабрикаты() // использует Выпуски
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПередачиВПроизводство()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияВыпускПродукции()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияРаботыИПеремещенияВПроизводстве()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПроизводственныхЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПроизводственныхЗатратПрочее()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРаспределениеПроизводственныхЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРаспределениеПроизводственныхЗатратПрочее()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВыпускИзПроизводственныхЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеПроизводственныхЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетПереработчика()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетПереработчикаРаспределение()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратИзПроизводстваИЛИОтПереработчика()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратИзПроизводстваИЛИОтПереработчикаНаСклад()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеВПроизводстве()
		//-- НЕ УТ
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("Итерация", Ложь);
	ИсходныйЗапрос.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов());
	ИсходныйЗапрос.УстановитьПараметр("ЕстьФИФОСкользящая", ЕстьФИФОСкользящая(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийЗатрат());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("ДокументВыпуска", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииЗатрат(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина) // ДанныеДляРасчета будут изменены
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийЗатрат());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Перемещение, Партия, Остаток, Выпуск, Сторно, Замещение, Продукция, Передача,
	|Сборка, Затраты, ЗатратыПрочие, Распределение, ВыпускПрочие, ВПути, Прочее, Списание, Прошлое");
	
	ПоляПотреблений = "РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация, ДокументИсточник";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Замещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Выпуск", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ВыпускПрочие", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Передача", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сборка", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", "РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация, Регистратор");

	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "Регистратор, АналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор, КорАналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Продукция", "Регистратор, КорАналитикаУчетаПродукции, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Замещение", "ДокументИсточник, АналитикаУчетаПродукции");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Замещение", "Потребление", "Регистратор, КорАналитикаУчетаПродукции");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Передача", "Регистратор, КорАналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Передача", "Потребление", "Регистратор, АналитикаУчетаПродукции, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "ДокументИсточник, АналитикаУчетаПродукции, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Потребление", "Регистратор, КорАналитикаУчетаПродукции, АналитикаУчетаПродукции, ДокументПоступления, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Продукция", "Регистратор, КорАналитикаУчетаПродукции, АналитикаУчетаПродукции, ДокументВыпуска, КорВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сборка", "ДокументИсточник");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сборка", "Потребление", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Продукция", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Партия", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Остаток", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Перемещение", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Выпуск", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "ВыпускПрочие", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", "ДокументИсточник, РазделУчета, КорАналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление", "Регистратор, РазделУчета, АналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Прошлое", "Регистратор, РазделУчета, АналитикаУчетаПродукции, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ЗатратыПрочие", "ДокументИсточник, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ЗатратыПрочие", "Потребление", "Регистратор, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", "ДокументИсточник");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Затраты", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "ЗатратыПрочие", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Прочее", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Прочее", "Затраты", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Прочее", "ЗатратыПрочие", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Прочее", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускПрочие", "ДокументИсточник, АналитикаУчетаПродукции, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускПрочие", "Распределение", "Регистратор, КорАналитикаУчетаПродукции, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	// Шаг 4: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииЗатратНаВыпуск",
		"ПартииЗатратНаВыпуск",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Знаменатель, Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Знаменатель", "Знаменатель", "ДокументИсточник", "Период");
	КонтекстДвижений.Вставить("ЗаполнятьАналитикуПартий", Истина);
	КонтекстДвижений.Вставить("ПоляСуммирования", "Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница");
	КонтекстДвижений.Вставить("ПоляГруппировки", ПереченьПолей(РасчетныеПартии.Колонки, КонтекстДвижений.ПоляСуммирования));
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииЗатратИнициализация() // вт ПрошлыеРеализации, Выпуски, ОстаткиПартийСборок, ПроизводственныеЗатраты, ДолиСтоимости, ВыпускиПродукции, ПриходыСборок, ПрошлыеПоступления, ИсключаемыеВыпуски
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасовПродавца = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|;
		// Документы и даты выпусков и сборок
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	МАКСИМУМ(ДД.Период) КАК Период
		|ПОМЕСТИТЬ Выпуски
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументВыпуска КАК Регистратор,
		|		Приходы.Период
		|	ИЗ
		|		РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК Приходы
		|			ПО Приходы.Период < &НачалоПериода
		|			И Приходы.Регистратор = ДД.ДокументВыпуска
		|			И Приходы.Регистратор = Приходы.ДокументВыпуска
		|	ГДЕ
		|		ДД.КоличествоОстаток > 0.
		|
		//++ НЕ УТ
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Регистратор,
		|		ДД.Период
		|	ИЗ РегистрНакопления.ВыпускПродукции КАК ДД
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		//-- НЕ УТ
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Регистратор,
		|		ДД.Период
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		|		И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.СборкаТоваров)
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		|;
		// Остатки партионных регистров на начало
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ
		|	ОстаткиПартийСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|;
		// Документы передачи в производство и возврата из производства
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
		|		ПО Товары.Ссылка = Аналитика.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Регистратор
		|;
		//++ НЕ УТ
		// Доли распределения производственных затрат
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	МАКСИМУМ(ДД.Период) КАК Период,
		|	МАКСИМУМ(ДД.Регистратор) КАК Регистратор,
		|	СУММА(ДД.ДоляСтоимости) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ДолиСтоимости
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		ДД.ДоляСтоимостиПоПравилам КАК ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ВыпускиБезРаспоряжения КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Вручную КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ПоБазе КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение
		|;
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ДД.АналитикаУчетаПродукции <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.АналитикаУчетаПродукции
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаПродукции,
		|	ДД.ВидЗапасов,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ВыпускиПродукции
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ДД.АналитикаУчетаПродукции <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.АналитикаУчетаПродукции
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	ДД.ВидЗапасов
		|;
		//-- НЕ УТ
		// Поступления комплектов сборок товаров
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ПриходыСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.СборкаТоваров
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления
		|;
		// Подразделение документов-регистраторов
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.Подразделение
		|ПОМЕСТИТЬ
		|	ПодразделенияРегистраторов
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		//++ НЕ УТ
		|;
		// Выпуски продукции, реализованные без смены налогообложения НДС.
		|ВЫБРАТЬ
		|	Партии.Номенклатура,
		|	Партии.Характеристика,
		|	Партии.ДокументПоступления,
		|	СУММА(Партии.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ИсключаемыеВыпуски
		|ИЗ (
		|	ВЫБРАТЬ
		|		Аналитика.Номенклатура,
		|		Аналитика.Характеристика,
		|		ДД.ДокументПоступления,
		|		СУММА(ДД.Количество) КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|			ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|		И НЕ &ЕстьФИФОСкользящая
		|	СГРУППИРОВАТЬ ПО
		|		Аналитика.Номенклатура,
		|		Аналитика.Характеристика,
		|		ДД.ДокументПоступления
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Аналитика.Номенклатура,
		|		Аналитика.Характеристика,
		|		ДД.ДокументПоступления,
		|		-СУММА(ДД.Количество) КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|			ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
		|		И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|		И ДД.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая)
		|		И НЕ &ЕстьФИФОСкользящая
		|	СГРУППИРОВАТЬ ПО
		|		Аналитика.Номенклатура,
		|		Аналитика.Характеристика,
		|		ДД.ДокументПоступления
		|	) КАК Партии
		|СГРУППИРОВАТЬ ПО
		|	Партии.Номенклатура,
		|	Партии.Характеристика,
		|	Партии.ДокументПоступления
		|ИМЕЮЩИЕ
		|	СУММА(Партии.Количество) = 0
		//-- НЕ УТ
		|";
КонецФункции

Функция ТекстОписаниеПартийЗатрат()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ТекстОписаниеПартийЗатрат______________________"" КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийЗатрат() // использует Выпуски, ОстаткиПартийСборок, ПрошлыеПоступления
	Возврат "
		// остатки партий затрат на выпуск
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА Периодика.Регистратор ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		//++ НЕ УТ
		|		КОГДА Периодика.Регистратор ССЫЛКА Документ.ПередачаСырьяПереработчику
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		//-- НЕ УТ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	Выпуски.Период КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументВыпуска) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	Партии.Количество КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументВыпуска) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументВыпуска
		|		И (ДД.АналитикаУчетаПродукции.Склад ССЫЛКА Справочник.СтруктураПредприятия
		|			ИЛИ ДД.АналитикаУчетаПродукции.Склад ССЫЛКА Справочник.Партнеры)
		|ГДЕ
		|	Партии.Количество > 0.
		|";
КонецФункции

Функция ТекстПриходыСборокТоваров() // использует Выпуски, ПриходыСборок
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПриходыСборокТоваров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ""Партия""
		|		ИНАЧЕ ""Сборка"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ) КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	Приходы.Количество КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	Приходы.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходыСборок КАК Приходы
		|		ПО Приходы.Регистратор = ДД.Регистратор
		|		И Приходы.ВидЗапасов = ДД.КорВидЗапасов
		|		И Приходы.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.СборкаТоваров)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ""Партия""
		|		ИНАЧЕ ""Сборка"" КОНЕЦ),
		|	(ВЫБОР КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ),
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.АналитикаУчетаПартий,
		|	Приходы.Количество,
		|	Приходы.ДокументИсточник,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстРасходыПартийЗатратПрошлыхМесяцев() // использует ПрошлыеРеализации
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстРасходыПартийЗатратПрошлыхМесяцев"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеПродукции КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаПродукции = Прошлые.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Знаменатель,
		|	ДД.ДокументИсточник,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеПродукции 
		|";
КонецФункции

Функция ТекстИтерацияПартийЗатрат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПартийЗатрат"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передачи
		|		ПО Передачи.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Передачи.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
		|		ПО Возвраты.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Возвраты.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратыОтКлиента
		|		ПО ВозвратыОтКлиента.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ВозвратыОтКлиента.Ссылка = ДД.Регистратор
		|		И ВозвратыОтКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Сборка
		|		ПО Сборка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Сборка.Ссылка = ДД.Регистратор
		|		И Сборка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И ВозвратыОтКлиента.Ссылка ЕСТЬ NULL
		|	И НЕ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И НЕ Сборка.Ссылка ЕСТЬ NULL)
		|	И НЕ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И НЕ Сборка.Ссылка ЕСТЬ NULL
		|		И ДД.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры)
		|	И ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ВводОстатков
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
		//++ НЕ УТКА
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеСырьяОтДавальца
		//-- НЕ УТКА
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И НЕ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И ЕСТЬNULL(Передачи.ХозяйственнаяОперация, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию))
		//++ НЕ УТ
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		//-- НЕ УТ
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|";
КонецФункции

Функция ТекстИтерацияПартийЗатратКомиссия()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПартийЗатратКомиссия"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Передача"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументПоступления КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор <> ДД.ДокументПоступления ИЛИ &Итерация)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Передача"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстИтерацияПартийЗатратКомиссияВозврат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПартийЗатратКомиссияВозврат"" КАК ЗапросИсточник,
		|	40 КАК Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(-ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратыОтКлиента
		|		ПО ВозвратыОтКлиента.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ВозвратыОтКлиента.Ссылка = ДД.Регистратор
		|		И ВозвратыОтКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор <> ДД.ДокументПоступления ИЛИ &Итерация)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ДокументПередачиНаКомиссию,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстДополнениеПартийЗатрат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстДополнениеПартийЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""ВПути"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Знаменатель) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.КорВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК Отгрузки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|		ПО ДД.Регистратор = Отгрузки.Ссылка
		|ГДЕ
		|	Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|	И Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение
		|";
КонецФункции

//++ НЕ УТКА
Функция ТекстОтчетДавальцу()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОтчетДавальцу"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов
		|";
КонецФункции

Функция ТекстПартииНезавершенногоПроизводстваОтчетДавальцу()
	Возврат "
		// собственные материалы и полуфабрикаты, использованные на выпуск продукции из давальческого сырья
		|ВЫБРАТЬ
		|	""ТекстПартииНезавершенногоПроизводстваОтчетДавальцу"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ""Партия"" ИНАЧЕ ""Выпуск"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	МАКСИМУМ(ДД.КоличествоПродукции) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ""Партия"" ИНАЧЕ ""Выпуск"" КОНЕЦ),
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеВыпуска
		|";
КонецФункции
//-- НЕ УТКА

//++ НЕ УТ
Функция ТекстПриходыПартийЗатрат()
	Возврат "
		// приходы из партий затрат, где регистратор не является сборкой
		|ВЫБРАТЬ
		|	""ТекстПриходыПартийЗатрат"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ""Партия"" ИНАЧЕ ""Выпуск"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ВыпускиПродукции.Количество КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.КорВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаПродукции
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыпускиПродукции КАК ВыпускиПродукции
		|		ПО ВыпускиПродукции.Регистратор = ДД.Регистратор
		|		И ВыпускиПродукции.АналитикаУчетаПродукции = ДД.АналитикаУчетаПродукции
		|		И ВыпускиПродукции.ВидЗапасов = ДД.КорВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ИсключаемыеВыпуски КАК ИсключаемыеВыпуски
		|		ПО НЕ &ЕстьФИФОСкользящая
		|		И ИсключаемыеВыпуски.Номенклатура = Аналитика.Номенклатура
		|		И ИсключаемыеВыпуски.Характеристика = Аналитика.Характеристика
		|		И ИсключаемыеВыпуски.ДокументПоступления = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика)
		|	И ДД.Количество <> 0
		|	И ДД.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|	И ИсключаемыеВыпуски.ДокументПоступления ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ""Партия"" ИНАЧЕ ""Выпуск"" КОНЕЦ),
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КорВидЗапасов,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ВыпускиПродукции.Количество
		|";
КонецФункции

Функция ТекстРасходыПрочихРасходовНЗП()
	Возврат "
		// расходы прочих расходов незавершенного производства
		|ВЫБРАТЬ
		|	""ТекстРасходыПрочихРасходовНЗП"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	МАКСИМУМ(ДД.КоличествоПродукции) КАК Знаменатель,
		|	0 КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРеглБезНДС) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика)
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение,
		|	ДД.ВидЗапасов
		|ИМЕЮЩИЕ
		|	СУММА(ДД.Стоимость) <> 0
		|	ИЛИ СУММА(ДД.СтоимостьРеглБезНДС) <> 0
		|	ИЛИ СУММА(ДД.НДСРегл) <> 0
		|	ИЛИ СУММА(ДД.ВременнаяРазница) <> 0
		|	ИЛИ СУММА(ДД.ПостояннаяРазница) <> 0
		|";
КонецФункции

Функция ТекстТрудозатратыНЗП()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстТрудозатратыНЗП"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	МАКСИМУМ(ДД.КоличествоПродукции) КАК Знаменатель,
		|	0 КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.Стоимость) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		)
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции
		|";
	КонецФункции

Функция ТекстИспользованныеПолуфабрикаты()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИспользованныеПолуфабрикаты"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Выпуск"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	ВыпускиПродукции.Количество КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.КорВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыпускиПродукции КАК ВыпускиПродукции
		|		ПО ВыпускиПродукции.Регистратор = ДД.Регистратор
		|		И ВыпускиПродукции.АналитикаУчетаПродукции = ДД.АналитикаУчетаПродукции
		|		И ВыпускиПродукции.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество > 0
		|	И ДД.Стоимость = 0
		|	И ДД.СтоимостьРегл = 0
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.ВидЗапасов,
		|	ДД.КорВидЗапасов,
		|	ВыпускиПродукции.Количество
		|";
КонецФункции
	
Функция ТекстИтерацияПередачиВПроизводство()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПередачиВПроизводство"" КАК ЗапросИсточник,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ) КАК ВидДвижения,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.КорВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор <> ДД.ДокументПоступления ИЛИ &Итерация)
		|	И ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ВводОстатков
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
		//++ НЕ УТКА
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеСырьяОтДавальца
		//-- НЕ УТКА
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		|	
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ),
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстИтерацияВыпускПродукции()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияВыпускПродукции"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Продукция"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаПродукции,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество <> 0
		|	И ДД.Стоимость = 0 
		|	И ДД.СтоимостьРегл = 0
		|	И ДД.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначениеВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстИтерацияРаботыИПеремещенияВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияРаботыИПеремещенияВПроизводстве"" КАК ЗапросИсточник,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Не Выпуск.Ссылка ЕСТЬ NULL
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Не Перемещение.Ссылка ЕСТЬ NULL
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаПродукции,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|	ДД.ПодразделениеРасходов КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО ДД.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Аналитика.Номенклатура = Работы.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК Выпуск
		|		ПО Выпуск.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Выпуск.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериаловВПроизводстве КАК Перемещение
		|		ПО Перемещение.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Перемещение.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор <> ДД.ДокументПоступления 
		|		ИЛИ ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИЛИ &Итерация)
		|	И (Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|		ИЛИ НЕ Перемещение.Ссылка ЕСТЬ NULL)
		//++ НЕ УТКА
		|	И Не ДД.Регистратор ССЫЛКА Документ.МаршрутныйЛистПроизводства
		|	И Не ДД.Регистратор ССЫЛКА Документ.СписаниеЗатратНаВыпуск
		|	И Не (ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|			И ДД.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
		//-- НЕ УТКА
		|	И ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ВводОстатков
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
		//++ НЕ УТКА
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеСырьяОтДавальца
		//-- НЕ УТКА
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Не Выпуск.Ссылка ЕСТЬ NULL
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Не Перемещение.Ссылка ЕСТЬ NULL
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов
		|";
КонецФункции

Функция ТекстПриходыПроизводственныхЗатрат() // использует ДолиСтоимости
	Возврат "
		// приходы из партий товаров по списаниям на статьи производственных затрат
		|ВЫБРАТЬ
		|	""ТекстПриходыПроизводственныхЗатрат"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ""Затраты"" ИНАЧЕ ""ЗатратыПрочие"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДолиСтоимости.Период КАК Период,
		|	ДолиСтоимости.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	МАКСИМУМ(ДолиСтоимости.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(
		|		(ВЫБОР ДД.ХозяйственнаяОперация
		|			КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию) ТОГДА 0.
		|			ИНАЧЕ ДД.СтоимостьРегл КОНЕЦ)
		|		+
		|		(ВЫБОР КОГДА (ДД.АналитикаУчетаПартий.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая) 
		|		      		  И ДД.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая))
		|              	ИЛИ 
		|					(ДД.АналитикаУчетаПартий.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) 
		|		      		И ДД.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность))
		|		ТОГДА (ВЫБОР
		|				КОГДА ДД.Количество < 0 ТОГДА 0 - ДД.НДСРегл
		|				ИНАЧЕ ДД.НДСРегл КОНЕЦ)
		|
		|		КОГДА ДД.АналитикаУчетаПартий.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
		|		      И ДД.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая) 
		|		ТОГДА (ВЫБОР
		|				КОГДА ДД.Количество < 0 ТОГДА ДД.НДСРегл
		|				ИНАЧЕ - ДД.НДСРегл КОНЕЦ)
		|		ИНАЧЕ 0 КОНЕЦ)
		|		) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДолиСтоимости.ПодразделениеРасходов КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК ДолиСтоимости
		|		ПО ДолиСтоимости.Организация = ДД.Организация
		|		И ДолиСтоимости.СтатьяРасходов = ДД.СтатьяРасходовСписания
		|		И ДолиСтоимости.АналитикаРасходов = ДД.АналитикаРасходов
		|		И ДолиСтоимости.ПодразделениеРасходов = ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
		|	И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ""Затраты"" ИНАЧЕ ""ЗатратыПрочие"" КОНЕЦ),
		|	(ВЫБОР КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.Регистратор,
		|	ДолиСтоимости.Период,
		|	ДолиСтоимости.Регистратор,
		|	ДД.Организация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.НалоговоеНазначение,
		|	ДолиСтоимости.ПодразделениеРасходов
		|";
КонецФункции

Функция ТекстПриходыПроизводственныхЗатратПрочее() // использует ДолиСтоимости
	Возврат "
		// приходы из партий производственных затрат по списаниям на статьи производственных затрат
		|ВЫБРАТЬ
		|	""ТекстПриходыПроизводственныхЗатратПрочее"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""ЗатратыПрочие"" КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0  ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДолиСтоимости.Период КАК Период,
		|	ДолиСтоимости.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	МАКСИМУМ(ДолиСтоимости.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК ДолиСтоимости
		|		ПО ДолиСтоимости.Организация = ДД.Организация
		|		И ДолиСтоимости.СтатьяРасходов = ДД.СтатьяРасходовСписания
		|		И ДолиСтоимости.АналитикаРасходов = ДД.АналитикаРасходов
		|		И ДолиСтоимости.ПодразделениеРасходов = ДД.ПодразделениеРасходов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Стоимость <> 0 ИЛИ ДД.СтоимостьРегл <> 0  ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДолиСтоимости.Период,
		|	ДД.Регистратор,
		|	ДолиСтоимости.Регистратор,
		|	ДД.Организация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов
		|";
КонецФункции

Функция ТекстРаспределениеПроизводственныхЗатрат()
	Возврат "
		// распределение производственных затрат на документы выпуска продукции
		|ВЫБРАТЬ
		|	""ТекстРаспределениеПроизводственныхЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	СУММА(ДД.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаПродукции,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		// |	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументИсточник.Подразделение КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ДоляСтоимости <> 0
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстРаспределениеПроизводственныхЗатратПрочее()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстРаспределениеПроизводственныхЗатратПрочее"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Прочее"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	СУММА(Строки.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Ссылка КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение КАК ПодразделениеРасходов
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		| 		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ДоляСтоимости <> 0
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение
		|";
КонецФункции

Функция ТекстВыпускИзПроизводственныхЗатрат()
	Возврат "
		// распределение производственных затрат на документы выпуска продукции
		|ВЫБРАТЬ
		|	""ТекстВыпускИзПроизводственныхЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""ВыпускПрочие"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	МАКСИМУМ(ДД.КоличествоПродукции) КАК Знаменатель,
		|	СУММА(ДД.ДоляСтоимости) КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаПродукции,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		// |	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение  КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументИсточник.Подразделение КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ДоляСтоимости <> 0
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументИсточник.Подразделение
		|";
КонецФункции

Функция ТекстСписаниеПроизводственныхЗатрат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписаниеПроизводственныхЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Списание"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	СУММА(Строки.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Ссылка КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПродукции,
		|	Строки.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	Строки.АналитикаРасходов,
		|	ДД.Подразделение КАК ПодразделениеРасходов
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		| 		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ДоляСтоимости <> 0
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	Строки.СтатьяРасходов,
		|	Строки.АналитикаРасходов,
		|	ДД.Подразделение
		|";
КонецФункции

Функция ТекстОтчетПереработчика()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОтчетПереработчика"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстОтчетПереработчикаРаспределение()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОтчетПереработчикаРаспределение"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстВозвратИзПроизводстваИЛИОтПереработчика()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратИзПроизводстваИЛИОтПереработчика"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(-ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстВозвратИзПроизводстваИЛИОтПереработчикаНаСклад()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратИзПроизводстваИЛИОтПереработчикаНаСклад"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(-ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстСписаниеВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписаниеВПроизводстве"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|	И ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов
		|";
КонецФункции

//-- НЕ УТ

#КонецОбласти


#Область РасчетПартийПрочих

Функция ДанныеДляПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	МВТ = Новый МенеджерВременныхТаблиц;
	// распределяем только по собственным запасам, исключаем комиссионные и давальческие запасы
	СобственныеТипыЗапасов = СобственныеТипыЗапасов();
	
	// Определяем базу распределения прочих расходов на заказы поставщикам и заказы перемещений,
	// т.е. распределяем выполненные строки заказов на поступления партий - указываем заказ в партии.
	ТекстСортировкаЗаказов = "
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор, Номенклатура, Характеристика, Склад, Приоритет
		|";
	ТекстРасчетаЗаказов = 
		ТекстТаможенныеДекларацииИПоступления() + ";" + // вт Декларации
		ТекстАналитикиРасходовВсе() + ";" + // вт АналитикиРасходовВсе
		ТекстЗаказыИзАналитикРасходов() + ";" + // вт ЗаказыИзАналитикРасходов, использует АналитикиРасходовВсе
		ТекстПоступившиеЗаказы() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПоступленийПоЗаказам() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПоступленийПоЗаказам() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыРаботПоЗаказам() + // использует ЗаказыИзАналитикРасходов
		ТекстСортировкаЗаказов;
	ЗапросРасчетаЗаказов = Новый Запрос(ТекстРасчетаЗаказов);
	ЗапросРасчетаЗаказов.МенеджерВременныхТаблиц = МВТ;
	ЗапросРасчетаЗаказов.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ЗапросРасчетаЗаказов.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов);
	
	ДанныеРасчетаЗаказов = ЗапросРасчетаЗаказов.Выполнить().Выгрузить();
	РасчетныеПартииПоЗаказам = Новый ТаблицаЗначений;
	ПоляРасчетаЗаказов = СкопироватьКолонки(ДанныеРасчетаЗаказов.Колонки, РасчетныеПартииПоЗаказам.Колонки);
	КонтекстДвижений = ОписаниеДвижений(
		"ЗаказыПоставщикам", "",
		ПоляРасчетаЗаказов,
		"Номенклатура, Регистратор, Характеристика, Склад", "Количество, Стоимость",
		"Количество", "Количество", "Заказ", "Период");
	РаспределитьПриходыНаРасходы(КонтекстДвижений, ДанныеРасчетаЗаказов, РасчетныеПартииПоЗаказам);
	
	// Получаем данные для расчета списания партий прочих расходов и прихода партий расходов на с/с товаров
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Приоритет, ВидДвижения, Период, Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления";
	ИсходныйТекстЗапроса =
		ТекстПартииПоЗаказам() + ";" + // вт ПартииПоЗаказам, использует &РасчетныеПартииПоЗаказам
		ТекстПрошлыеПеремещения() + ";" + // вт ПрошлыеПеремещения
		ТекстРегистраторыПрочих() + ";" + // вт РегистраторыПрочих
		ТекстОстаткиПартийСборок() + ";" + // вт ОстаткиЗатратПоСборкам, ОстаткиПартийСборок
		ТекстОстаткиСебестоимости() + ";" + // вт ОстаткиСебестоимости
		ТекстПриходыПартийСборок() + ";" + // вт ПриходыПартийСборок
		ТекстОписаниеПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПрочих() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстДополненияПартийПрочих() + // использует РегистраторыПрочих
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисОстатки() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисОстаткиСборок() + // использует ОстаткиПартийСборок, АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходы() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыСборок() + // использует ПриходыПартийСборок, АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисРаботы() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПеремещения() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПрошлыеПеремещения() + // использует ПрошлыеПеремещения
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисЗаказы() + // использует ПартииПоЗаказам, ЗаказыИзАналитикРасходов
		ТекстСортировка;
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Вес", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Объем", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеПартииПоЗаказам", РасчетныеПартииПоЗаказам);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция РасчетныеПартииПрочих(ДанныеДляРасчета, Регистраторы, УзлыДвижений = Неопределено, Тест = Ложь) // ДанныеДляРасчета будут изменены
	// Движения, которые надо сохранить в расчетных партиях, но не нужно учитывать в расчетах
	Дополнения = Новый Массив;
	// кэшируем получение пустых ссылок - на множественных итерациях есть выигрыш
	ПустыеСсылки = Новый Соответствие;
	ПропорциональноКоличеству = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству;
	ПропорциональноВесу = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу;
	ПропорциональноОбъему = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему;
	// Шаг 1: Рассчитываем базу распределения для каждого прихода прочих расходов с учетом налогообложения партии распределения
	УзлыДвижений = Новый Соответствие; // [Организация, [АналитикаРасходов, [ИндексСтроки, [НалогообложениеНДС, Базис]]]]
	Ключи = Новый Массив(4); // {Организация, АналитикаРасходов, ИндексСтроки, НалоговоеНазначение}
	// расчет базы по для каждой строки прихода по налоговому назначению каждого расхода
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		Ключи[0] = Движение.Организация;
		Ключи[1] = Неопределено;
		Ключи[2] = ДанныеДляРасчета.Индекс(Движение);
		Ключи[3] = Движение.НалоговоеНазначение;
		// фиксируем дополнение и уходим на следующую запись
		Если Движение.ТипЗаписи = "Дополнение" Тогда
			Дополнения.Добавить(Ключи[2]);
			Продолжить;
		// накапливаем приход партий прочих расходов для распределения по налоговым назначениям
		ИначеЕсли ЗначениеЗаполнено(Движение.СтатьяРасходов) Тогда
			Ключи[1] = Движение.АналитикаРаспределения;
			ДобавитьУзелИндекса(УзлыДвижений, Ключи, Неопределено);
			Продолжить;
		КонецЕсли;
		// Возвраты добавляются как положительный базис
		Количество = ?(Движение.Количество < 0., -Движение.Количество, Движение.Количество);
		Стоимость = ?(Движение.Стоимость < 0., -Движение.Стоимость, Движение.Стоимость);
		Вес = ?(Движение.Вес < 0., -Движение.Вес, Движение.Вес);
		Объем = ?(Движение.Объем < 0., -Движение.Объем, Движение.Объем);
		// непосредственно расчет базисов по налоговым назначениям
		Аналитики = УзелИндекса(УзлыДвижений, Ключи);
		Если Аналитики = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого Значение Из АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки) Цикл
			ИндексыСтрок = Аналитики[Значение];
			Если ИндексыСтрок = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого ИндексСтроки Из ИндексыСтрок Цикл
				Приход = ДанныеДляРасчета[ИндексСтроки.Ключ];
				Если Приход.ПравилоРаспределения = ПропорциональноКоличеству Тогда
					Базис = Количество;
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноВесу Тогда
					Базис = Вес;
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноОбъему Тогда
					Базис = Объем;	
				Иначе
					Базис = Стоимость;
				КонецЕсли;
				Приход.Базис = Приход.Базис + Базис;
				// увеличим базу по налоговому назначению (Ключи[3])
				Налоги = ИндексСтроки.Значение;
				ОписаниеБазы = ?(Налоги[Ключи[3]] = Неопределено, Новый Структура("Базис", 0.), Налоги[Ключи[3]]);
				ОписаниеБазы.Базис = ОписаниеБазы.Базис + Базис;
				Налоги.Вставить(Ключи[3], ОписаниеБазы);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 2: создаем буфер накопления рассчитанных партий
	РасчетныеПартии = Новый ТаблицаЗначений;
	СкопироватьКолонки(ДанныеДляРасчета.Колонки, РасчетныеПартии.Колонки);
	// Шаг 3: Копируем дополнительные движения в расчетные партии
	Для Каждого Дополнение Из Дополнения Цикл
		Движение = ДанныеДляРасчета[Дополнение];
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьРасчетнуюПартию("ПартииПрочихРасходов", РасчетнаяПартия, Движение, Неопределено);
	КонецЦикла;
	// Шаг 4: Создаем расчетные партии расходов по каждому накопленному налоговому назначению
	Для Каждого Организация Из УзлыДвижений Цикл
		Для Каждого Аналитика Из Организация.Значение Цикл
			Для Каждого ИндексСтроки Из Аналитика.Значение Цикл
				Движение = ДанныеДляРасчета[ИндексСтроки.Ключ];
				Если Движение.ТипЗаписи = "Партия" Тогда
					РасчетнаяПартия = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию("ПартииПрочихРасходов", РасчетнаяПартия, Движение, Неопределено);
				КонецЕсли;
				Если Движение.Базис = 0. Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого РаспределениеБазиса Из ИндексСтроки.Значение Цикл
					Если РаспределениеБазиса.Значение = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					РасчетнаяПартия = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию("ПартииПрочихРасходов", РасчетнаяПартия, Движение, РаспределениеБазиса);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 4: Удаляем измененные записи ДанныеДляРасчета (партии, остатки, дополнения) - они теперь лишние
	МинимальныйИндекс = 1 - ДанныеДляРасчета.Количество();
	Для Индекс = МинимальныйИндекс По 0 Цикл
		Движение = ДанныеДляРасчета[-Индекс];
		Если Движение.ТипЗаписи = "Партия" Или Движение.ТипЗаписи = "Остаток" Или Движение.ТипЗаписи = "Дополнение" Тогда
			ДанныеДляРасчета.Удалить(-Индекс);
		КонецЕсли;
	КонецЦикла;
	// Шаг 5: Копируем расчитанные партии с указанием налогового назначения в ДанныеДляРасчета
	// эти движения понадобятся для формирования прихода в партии расходов на себестоимость
	Для Каждого РасчетнаяПартия Из РасчетныеПартии Цикл
		Если РасчетнаяПартия.ТипЗаписи = "Потребление" Тогда
			Движение = ДанныеДляРасчета.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, РасчетнаяПартия);
			Движение.ТипЗаписи = "Остаток";
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		КонецЕсли;
	КонецЦикла;
	// Шаг 6: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстТаможенныеДекларацииИПоступления() // вт Декларации, КоличествоДеклараций
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	Партии.ДокументПоступления КАК Поступление
		|ПОМЕСТИТЬ
		|	Декларации
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.ДокументПоступления
		|		И Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
		|		И Партии.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
		|ГДЕ
		|	ДД.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И Партии.Период < &НачалоПериода
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление
		|;
		|ВЫБРАТЬ
		|	ДД.Поступление,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.Ссылка) КАК Количество
		|ПОМЕСТИТЬ
		|	КоличествоДеклараций
		|ИЗ
		|	Декларации КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Поступление
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление
		|";
КонецФункции

Функция ТекстАналитикиРасходовВсе() // вт АналитикиРасходовВсе, использует Декларации
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ключи.Организация,
		|	Ключи.СтатьяРасходов,
		|	Ключи.АналитикаРасходов
		|ПОМЕСТИТЬ
		|	АналитикиРасходовВсе
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРасходов
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) как ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|			ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ГДЕ
		|		Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРасходов
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов как ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|			ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		|		И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|) КАК Ключи
		|";
КонецФункции

Функция ТекстПрошлыеПеремещения() // вт ПрошлыеПеремещения
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаРасходов КАК Перемещение,
		|	Партии.Период,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ПрошлыеПеремещения
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК Перемещение
		|		ПО Перемещение.Ссылка = ДД.АналитикаРасходов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Период = Перемещение.Дата
		|		И Партии.Регистратор = Перемещение.Ссылка
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Перемещение.Дата < &НачалоПериода
		|	И Партии.ДокументПоступления <> ДД.Регистратор
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДокументПоступления,
		|	АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстРегистраторыПрочих() // вт РегистраторыПрочих
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ключи.Регистратор
		|ПОМЕСТИТЬ
		|	РегистраторыПрочих
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументПоступленияРасходов КАК Регистратор
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ГДЕ
		|		ДД.СтоимостьОстаток > 0.
		|		И Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Регистратор КАК Регистратор
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов как ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		|		И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|) КАК Ключи
		|";
КонецФункции
	
Функция ТекстОстаткиПартийСборок() // вт ОстаткиЗатратПоСборкам, ОстаткиПартийСборок
	
	Возврат "
		|ВЫБРАТЬ
		|	ДД.ДокументВыпуска
		|ПОМЕСТИТЬ
		|	ОстаткиЗатратПоСборкам
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументВыпуска
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ
		|	ОстаткиПартийСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)
		|		И ДокументПоступления В (
		|			ВЫБРАТЬ
		|				Затраты.ДокументВыпуска
		|			ИЗ
		|				ОстаткиЗатратПоСборкам КАК Затраты
		|		)
		|) КАК ДД
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ДокументПоступления
		|";
КонецФункции

Функция ТекстПриходыПартийСборок() // вт ПриходыПартийСборок
	
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ПриходыПартийСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.СборкаТоваров
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ДокументПоступления
		|";
КонецФункции

Функция ТекстОстаткиСебестоимости() // вт ОстаткиСебестоимости
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ОстаткиСебестоимости
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|ГДЕ
		|	ДД.КоличествоОстаток > 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстЗаказыИзАналитикРасходов() // вт ЗаказыИзАналитикРасходов, использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДатаПоступления,
		|	ДД.Поступление,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.Склад,
		|	ДД.Количество
		|ПОМЕСТИТЬ
		|	ЗаказыИзАналитикРасходов
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказПоставщику КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ДД.Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщикам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказПоставщику
		|	ГДЕ
		|		ДД.Период <= &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказПоставщику КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ДД.Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщикам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказПоставщику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		// Расходы по заказам на перемещение
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаПеремещение КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.СкладПолучатель КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаПеремещение
		|	ГДЕ
		|		ДД.Период <= &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаПеремещение КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.СкладПолучатель КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		// Расходы по заказам на сборку
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаСборку КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.Склад КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаСборку
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаСборку
		|	ГДЕ
		|		ДД.Период <= &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаСборку КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.Склад КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаСборку
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|) КАК ДД
		|";
КонецФункции

Функция ТекстПоступившиеЗаказы() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.ДатаПоступления КАК Период,
		|	ДД.Поступление КАК Регистратор,
		|	ДД.Поступление КАК ДокументПоступления,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.Склад,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ДД.Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение 
		|ИЗ
		|	ЗаказыИзАналитикРасходов КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПоступленийПоЗаказам() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.ДокументПоступления КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	АналитикиПартий.НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика, Заказы.Склад
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &НачалоПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.ДокументПоступления
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|		И Заказы.Склад = АналитикиТоваров.Склад
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстПриходыПоступленийПоЗаказам() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.ДокументПоступления КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	АналитикиПартий.НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика, Заказы.Склад
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &ОкончаниеПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|		И Заказы.Склад = АналитикиТоваров.Склад
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстПриходыРаботПоЗаказам() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.ДокументПоступления КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	АналитикиПартий.НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Работы.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &ОкончаниеПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстПартииПоЗаказам() // вт ПартииПоЗаказам, использует &РасчетныеПартииПоЗаказам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.НалоговоеНазначение 
		|ПОМЕСТИТЬ
		|	ПартииПоЗаказам
		|ИЗ
		|	&РасчетныеПартииПоЗаказам КАК ДД
		|";
КонецФункции

Функция ТекстОписаниеПартийПрочих()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК РасчетныйПериод
		|";
КонецФункции

Функция ТекстОстаткиПартийПрочих() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	Периоды.Период,
		|	ДД.ДокументПоступленияРасходов КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			ДД.Регистратор КАК ДокументПоступленияРасходов,
		|			ДД.Организация,
		|			ДД.СтатьяРасходов,
		|			ДД.АналитикаРасходов,
		|			МАКСИМУМ(ДД.Период) КАК Период
		|		ИЗ
		|			РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|				ПО КлючиРасходов.Организация = ДД.Организация
		|				И КлючиРасходов.СтатьяРасходов = ДД.СтатьяРасходов
		|				И КлючиРасходов.АналитикаРасходов = ДД.АналитикаРасходов
		|		ГДЕ
		|			ДД.Период < &НачалоПериода
		|			И ДД.Организация В (&МассивОрганизаций)
		|			И ДД.Активность
		|			И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|			И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		СГРУППИРОВАТЬ ПО
		|			ДД.Регистратор,
		|			ДД.Организация,
		|			ДД.СтатьяРасходов,
		|			ДД.АналитикаРасходов
		|	) КАК Периоды
		|		ПО Периоды.ДокументПоступленияРасходов = ДД.ДокументПоступленияРасходов
		|		И Периоды.Организация = ДД.Организация
		|		И Периоды.СтатьяРасходов = ДД.СтатьяРасходов
		|		И Периоды.АналитикаРасходов = ДД.АналитикаРасходов
		|ГДЕ
		|	Статьи.ВариантРаспределенияРасходов =
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|";
КонецФункции

Функция ТекстПриходыПартийПрочих() // использует Декларации
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	СУММА(ДД.Стоимость / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК ВременнаяРазница,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ДД.ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|		ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДеклараций КАК Знаменатели
		|		ПО Знаменатели.Поступление = ДД.АналитикаРасходов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Статьи.ВариантРаспределенияРасходов =
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов),
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументРеализации,
		|	ДД.СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость
		|";
КонецФункции

Функция ТекстДополненияПартийПрочих() // использует РегистраторыПрочих
	Возврат "
		|ВЫБРАТЬ
		|	99 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ДД.ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистраторыПрочих КАК Регистраторы
		|		ПО Регистраторы.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|ГДЕ
		|	НЕ (ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	ИЛИ Статьи.ВариантРаспределенияРасходов <>
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|	ИЛИ Статьи.Ссылка ЕСТЬ NULL
		|";
КонецФункции

Функция ТекстБазисОстатки() // использует АналитикиРасходовВсе, ОстаткиСебестоимости
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиСебестоимости КАК Остатки
		|		ПО Остатки.Организация = ДД.Организация
		|		И Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.СтоимостьОстаток > 0.
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисОстаткиСборок() // использует ОстаткиПартийСборок, АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументВыпуска КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументВыпуска КАК ДокументПоступления,
		|	Партии.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаПродукции
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	(ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисПриходы() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК Перемещения
		|		ПО Перемещения.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Перемещения.Ссылка = ДД.Регистратор
		|		И Перемещения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
		|		ПО Возвраты.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Возвраты.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор = ДД.ДокументПоступления ИЛИ Не Перемещения.Ссылка ЕСТЬ NULL)
		|	И Возвраты.Ссылка ЕСТЬ NULL
		|	И НЕ ДД.Регистратор Ссылка Документ.СборкаТоваров
		//++ НЕ УТ
		|	И НЕ (ДД.Регистратор Ссылка Документ.ВыпускПродукции И ДД.Стоимость = 0)
		|	И НЕ (ДД.Регистратор Ссылка Документ.ПоступлениеОтПереработчика И ДД.Стоимость = 0)
		//-- НЕ УТ
		|	И (ДД.Первичное ИЛИ
		|		ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями) ИЛИ Не Перемещения.Ссылка ЕСТЬ NULL)
		|	)
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|	И СпрВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	АналитикиПартий.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстБазисПриходыСборок() // использует ПриходыПартийСборок, АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументВыпуска КАК ДокументПоступления,
		|	Партии.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходыПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаПродукции
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = Партии.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументВыпуска
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка)
		|	)
		|	И СпрВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументВыпуска,
		|	Партии.ВидЗапасов,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество,
		|	АналитикиПартий.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстБазисРаботы() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Работы.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ДД.Регистратор = ДД.ДокументПоступления
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	АналитикиПартий.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстБазисПеремещения() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ДД.Регистратор КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество КАК Объем,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				ДД.Регистратор,
		|				ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисПрошлыеПеремещения() // использует ПрошлыеПеремещения
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ПрошлыеПеремещения.Период,
		|	ПрошлыеПеремещения.Перемещение КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ПрошлыеПеремещения.Перемещение КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ДД.ДокументПоступления КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеПеремещения КАК ПрошлыеПеремещения
		|		ПО ПрошлыеПеремещения.Организация = ДД.Организация
		|		И ПрошлыеПеремещения.ДокументПоступления = ДД.ДокументПоступления
		|		И ПрошлыеПеремещения.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисЗаказы() // использует ПартииПоЗаказам, ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	(ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.Заказ) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	(ВЫБОР КОГДА ДД.Период < &НачалоПериода ТОГДА &НачалоПериода ИНАЧЕ ДД.Период КОНЕЦ) КАК РасчетныйПериод
		|ИЗ
		|	ПартииПоЗаказам КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.Поступление,
		|			Заказы.Заказ
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|	) КАК Заказы
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Заказ = ДД.Заказ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	(ВЫБОР КОГДА ДД.Период < &НачалоПериода ТОГДА &НачалоПериода ИНАЧЕ ДД.Период КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.Заказ) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|";
КонецФункции

Функция СобственныеТипыЗапасов()
	СобственныеТипыЗапасов = Новый Массив;
	СобственныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	СобственныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Материал);
	СобственныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Услуга);
	Возврат СобственныеТипыЗапасов;
КонецФункции

#КонецОбласти


#Область РасчетПриходыРасходовСебестоимость

Функция ДанныеДляПартийПрочихСебестоимость(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	МВТ = Новый МенеджерВременныхТаблиц;
	// распределяем только по собственным запасам, исключаем комиссионные и давальческие запасы
	СобственныеТипыЗапасов = СобственныеТипыЗапасов();
	
	// Определяем базу распределения прочих расходов на заказы поставщикам и заказы перемещений,
	// т.е. распределяем выполненные строки заказов на поступления партий - указываем заказ в партии.
	ТекстСортировкаЗаказов = "
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор, Номенклатура, Характеристика, Склад, Приоритет
		|";
	ТекстРасчетаЗаказов = 
		ТекстТаможенныеДекларацииИПоступления() + ";" + // вт Декларации
		ТекстАналитикиРасходовВсе() + ";" + // вт АналитикиРасходовВсе
		ТекстЗаказыИзАналитикРасходов() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстЗаказыНаПеремещенияИзАналитикРасходов() + ";" + // вт ЗаказыИзАналитикРасходов, использует АналитикиРасходовВсе
		ТекстПоступившиеЗаказы() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПоступленийПоЗаказамСебестоимости() + // использует ЗаказыИзАналитикРасходов
		ТекстСортировкаЗаказов;
	ЗапросРасчетаЗаказов = Новый Запрос(ТекстРасчетаЗаказов);
	ЗапросРасчетаЗаказов.МенеджерВременныхТаблиц = МВТ;
	ЗапросРасчетаЗаказов.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	
	ДанныеРасчетаЗаказов = ЗапросРасчетаЗаказов.Выполнить().Выгрузить();
	РасчетныеПартииПоЗаказам = Новый ТаблицаЗначений;
	ПоляРасчетаЗаказов = СкопироватьКолонки(ДанныеРасчетаЗаказов.Колонки, РасчетныеПартииПоЗаказам.Колонки);
	КонтекстДвижений = ОписаниеДвижений(
		"ЗаказыПоставщикам", "",
		ПоляРасчетаЗаказов,
		"Номенклатура, Регистратор, Характеристика, Склад", "Количество, Стоимость",
		"Количество", "Количество", "Заказ", "Период");
	РаспределитьПриходыНаРасходы(КонтекстДвижений, ДанныеРасчетаЗаказов, РасчетныеПартииПоЗаказам);
	
	// Получаем данные для расчета списания партий прочих расходов и прихода партий расходов на с/с товаров
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Приоритет, ВидДвижения, Период, Регистратор";
	ИсходныйТекстЗапроса =
		ТекстПартииПоЗаказам() + ";" + // вт ПартииПоЗаказам, использует &РасчетныеПартииПоЗаказам
		ТекстРегистраторыПрочих() + ";" + // вт РегистраторыПрочих
		ТекстОписаниеПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПрочих() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстДополненияПартийПрочих() + // использует РегистраторыПрочих
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисОстаткиСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыТоваровСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыИнтеркампаниСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыИмпортСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыРаботСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПеремещенияСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПрошлыеПриходыТоваровСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисЗаказы() + // использует ПартииПоЗаказам, ЗаказыИзАналитикРасходов
		ТекстСортировка;
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Вес", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Объем", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеПартииПоЗаказам", РасчетныеПартииПоЗаказам);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("УчитыватьВидыЗапасов", Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить());
	ИсходныйЗапрос.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция РасчетныеПриходыПартийРасходов(ДанныеДляРасчета, Регистраторы, УзлыДвижений = Неопределено, Тест = Ложь) // ДанныеДляРасчета будут изменены
	// кэшируем получение пустых ссылок - на множественных итерациях есть выигрыш
	ПустыеСсылки = Новый Соответствие;
	ПравилаРаспределения = Новый Массив(4);
	ПравилаРаспределения[0] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству;
	ПравилаРаспределения[1] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноСебестоимости;
	ПравилаРаспределения[2] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу;
	ПравилаРаспределения[3] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему;
	// Шаг 1: Строим сопоставление приходов с базисом и расходов, по которым базис рассчитан
	ДанныеДляРасчета.Сортировать("Организация, НалоговоеНазначение, Приоритет, Период, Регистратор, АналитикаУчетаНоменклатуры", Новый СравнениеЗначений);
	УзлыДвижений = Новый Соответствие;
	Ключи = Новый Массив(6); // {Организация, НалоговоеНазначение, ПравилоРаспределения, АналитикаРасходов, ДокументПоступленияРасходов, НомерСтроки}
	// формирование упорядоченных массивов строк таблицы ДанныеДляРасчета
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		Ключи[0] = Движение.Организация;
		Ключи[1] = Движение.НалоговоеНазначение;
		Ключи[2] = Движение.ПравилоРаспределения;
		Ключи[3] = Неопределено;
		Ключи[4] = Неопределено;
		Ключи[5] = Неопределено;
		// накапливаем приход партий прочих расходов для дальнейшего сопоставления
		Если ЗначениеЗаполнено(Движение.СтатьяРасходов) Тогда
			Ключи[3] = Движение.АналитикаРаспределения;
			Ключи[4] = Движение.ДокументПоступленияРасходов;
			Ключи[5] = ДанныеДляРасчета.Индекс(Движение);
			Движения = УзелИндекса(УзлыДвижений, Ключи);
			Если Движения = Неопределено Тогда
				Движения = ДобавитьУзелИндекса(УзлыДвижений, Ключи, Новый Массив);
			КонецЕсли;
			Движения.Добавить(Движение);
			Продолжить;
		КонецЕсли;
		// непосредственно вставка строки расхода в сопоставления по каждой аналитике
		Для Каждого Правило Из ПравилаРаспределения Цикл
			Ключи[2] = Правило;
			Аналитики = УзелИндекса(УзлыДвижений, Ключи);
			Если Аналитики = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			// Аналитики содержат соответствие, в ключах которого значение аналитики расхода,
			// в значениях - соответствие между документом поступления расхода и движениями относящимися к этому расходу
			Для Каждого Значение Из АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки) Цикл
				ПоступленияРасходов = Аналитики[Значение];
				Если ПоступленияРасходов = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого ПоступлениеРасхода Из ПоступленияРасходов Цикл
					Для Каждого НомерСтроки Из  ПоступлениеРасхода.Значение Цикл
						НомерСтроки.Значение.Добавить(Движение);
					КонецЦикла
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 2: создаем буфер накопления рассчитанных партий
	РасчетныеПартии = Новый ТаблицаЗначений;
	ПоляРасчета = СкопироватьКолонки(ДанныеДляРасчета.Колонки, РасчетныеПартии.Колонки);
	// Шаг 3: распределяем каждый массив строк в аналитиках
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииРасходовНаСебестоимостьТоваровПриход",
		"ПартииРасходовНаСебестоимостьТоваров",
		ПоляРасчета,
		"Организация",
		"Базис, Количество, Вес, Объем, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Базис", "<БАЗИС_РАСХОДА>", "ДокументРеализации", "Период");
	Для Каждого Организации Из УзлыДвижений Цикл
		Для Каждого НалоговыеНазначения Из Организации.Значение Цикл	
			Для Каждого Правила Из НалоговыеНазначения.Значение Цикл	
				Если Правила.Ключ = ПравилаРаспределения[0] Тогда
					КонтекстДвижений.БазисРасхода = "Количество";
				ИначеЕсли Правила.Ключ = ПравилаРаспределения[2] Тогда
					КонтекстДвижений.БазисРасхода = "Вес";
				ИначеЕсли Правила.Ключ = ПравилаРаспределения[3] Тогда
					КонтекстДвижений.БазисРасхода = "Объем";	
				Иначе
					КонтекстДвижений.БазисРасхода = "Стоимость";
				КонецЕсли;
				Для Каждого Аналитики Из Правила.Значение Цикл
					Для Каждого ПоступлениеРасхода Из Аналитики.Значение Цикл
						Для Каждого НомерСтроки Из  ПоступлениеРасхода.Значение Цикл
							РаспределитьПриходыНаРасходы(КонтекстДвижений, НомерСтроки.Значение, РасчетныеПартии);
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 4: Дополнение расчетных партий данными прямого прихода в партии расходов на с/с
	ИндексРегистраторов = Новый Соответствие;
	Регистраторы = Новый Массив;
	ВсегоРегистраторов = 0;
	НачалоПериода = Дата(1,1,1);
	Для Каждого РасчетнаяПартия Из РасчетныеПартии Цикл
		Ключ = РасчетнаяПартия.Регистратор;
		Если ИндексРегистраторов[Ключ] = Неопределено Тогда
			Регистраторы.Добавить(Ключ);
			ИндексРегистраторов.Вставить(Ключ, ВсегоРегистраторов);
			ВсегоРегистраторов = ВсегоРегистраторов + 1;
			Если НачалоПериода = Дата(1,1,1) Тогда
				НачалоПериода = НачалоМесяца(Движение.Период);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗапросИсходныхПартий = Новый Запрос(ТекстИсходныеПриходыПартийРасходов());
	ЗапросИсходныхПартий.УстановитьПараметр("Регистраторы", Регистраторы);
	ЗапросИсходныхПартий.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ВыборкаИсходныхПартий = ЗапросИсходныхПартий.Выполнить().Выбрать();
	Пока ВыборкаИсходныхПартий.Следующий() Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, ВыборкаИсходныхПартий);
	КонецЦикла;
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период, АналитикаУчетаНоменклатуры", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция РасчетныеПриходыСебестоимости(РасчетныеПриходыПартийРасходов, Регистраторы, АналитикиПартнеров = Неопределено, Тест = Ложь)
	// Шаг 1: получаем аналитики учета по партнерам и регистраторы расчетных приходов
	АналитикиПартнеров = Новый Соответствие;
	Поступления = Новый Массив;
	ИндексРегистраторов = Новый Соответствие;
	Регистраторы = Новый Массив;
	ВсегоРегистраторов = 0;
	НачалоПериода = Дата(1,1,1);
	РасчетныеПриходыПартийРасходов.Сортировать("Регистратор", Новый СравнениеЗначений);
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		Если Движение.ТипЗаписи = "Дополнение" Тогда
			Продолжить;
		КонецЕсли;
		// аналитики учета по партнерам для дальнейшего заполнения по документам поступлений
		Если АналитикиПартнеров[Движение.ДокументПоступления] = Неопределено Тогда
			Поступления.Добавить(Движение.ДокументПоступления);
			АналитикиПартнеров.Вставить(Движение.ДокументПоступления, Неопределено);
		КонецЕсли;
		// регистраторы для дальнейшей выборки онлайн-движений из регистра себестоимости товаров
		Если ИндексРегистраторов[Движение.Регистратор] = Неопределено Тогда
			Регистраторы.Добавить(Движение.Регистратор);
			ИндексРегистраторов.Вставить(Движение.Регистратор, ВсегоРегистраторов);
			ВсегоРегистраторов = ВсегоРегистраторов + 1;
			Если НачалоПериода = Дата(1,1,1) Тогда
				НачалоПериода = НачалоМесяца(Движение.Период);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	// заполняем аналитики учета по партнерам по документам поступлений товаров
	ЗапросАналитик = Новый Запрос(ТекстАналитикиПартнеров()); // использует &Поступления
	ЗапросАналитик.УстановитьПараметр("Поступления", Поступления);
	ВыборкаАналитик = ЗапросАналитик.Выполнить().Выбрать();
	Пока ВыборкаАналитик.Следующий() Цикл
		АналитикиПартнеров[ВыборкаАналитик.ДокументПоступления] = ВыборкаАналитик.АналитикаУчетаПоПартнерам;
	КонецЦикла;
	Поступления.Очистить();
	// Шаг 2: создаем буфер накопления рассчитанных приходов в себестоимость
	Запрос = Новый Запрос(ТекстОписаниеСебестоимость());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ТекстСортировка = "УПОРЯДОЧИТЬ ПО Регистратор";
	ЗапросОписания = Новый Запрос(
		ТекстОписаниеСебестоимость() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстИсходныеДвиженияСебестоимость() +
		ТекстСортировка
		); // использует &Регистраторы
	ЗапросОписания.УстановитьПараметр("Регистраторы", Регистраторы);
	ЗапросОписания.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Выборка = ЗапросОписания.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
		Если Не Тест И РасчетныеПартии.Количество() > 1000 Тогда
			ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПартии, ИндексРегистраторов);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	Регистраторы.Очистить();
	// кэшируем константы
	ЗаполнятьВидЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
	// Шаг 3: Заполняем буфер накопления
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		Если Не ЗначениеЗаполнено(Движение.СтатьяРасходов)
		 ИЛИ Движение.ТипЗаписи = "Дополнение" Тогда
			Продолжить;
		КонецЕсли;
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Движение,
			"Период, Регистратор, АналитикаУчетаНоменклатуры, Организация, РазделУчета, Подразделение, АналитикаРасходов");
		РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход;
		РасчетнаяПартия.ВидЗапасов = ?(ЗаполнятьВидЗапасов, Движение.ВидЗапасов, Неопределено);
		РасчетнаяПартия.СуммаДопРасходов = Движение.Стоимость;
		РасчетнаяПартия.СуммаДопРасходовБезНДС = Движение.СтоимостьБезНДС;
		РасчетнаяПартия.СтоимостьРегл = Движение.СтоимостьРегл;
		Если ЗначениеЗаполнено(Движение.НалоговоеНазначениеПартии) И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Движение.НалоговоеНазначениеПартии, "ВидДеятельностиНДС") = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда 
			РасчетнаяПартия.СтоимостьРегл = РасчетнаяПартия.СтоимостьРегл + Движение.НДСРегл;
		КонецЕсли;
		РасчетнаяПартия.СтоимостьРеглБезНДС = Движение.СтоимостьРегл;
		РасчетнаяПартия.НДСРегл = Движение.НДСРегл;
		//++ НЕ УТ
		РасчетнаяПартия.ПостояннаяРазница = Движение.ПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = Движение.ВременнаяРазница;
		//-- НЕ УТ
		РасчетнаяПартия.АналитикаУчетаПоПартнерам = АналитикиПартнеров[Движение.ДокументПоступления];
		РасчетнаяПартия.СтатьяРасходовСписания = Движение.СтатьяРасходов;
		РасчетнаяПартия.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		РасчетнаяПартия.НалоговоеНазначение    = Движение.НалоговоеНазначениеПартии;
		РасчетнаяПартия.КорНалоговоеНазначение = Движение.НалоговоеНазначение;
		
		Если Не Тест И РасчетныеПартии.Количество() > 1000 Тогда
			ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПартии, ИндексРегистраторов);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	АналитикиПартнеров.Очистить();
	Если Не Тест Тогда
		ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПартии, ИндексРегистраторов);
		РасчетныеПартии.Очистить();
	КонецЕсли;
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстИсходныеПриходыПартийРасходов() // использует &Регистраторы
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Регистратор В (&Регистраторы)
		|	И ДД.ДокументПоступленияРасходов = ДД.Регистратор
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		ИЛИ ДД.Период < &НачалоПериода)
		|";
КонецФункции

Функция ТекстАналитикиПартнеров() // использует &Поступления
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Декларация,
		|	ДД.ДокументПоступления КАК Поступление
		|ПОМЕСТИТЬ
		|	Импорт
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И ДД.Регистратор В (&Поступления)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|;
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК ДокументПоступления,
		|	МИНИМУМ(ДД.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Количество > 0
		|	И ДД.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
		|	И ДД.Регистратор В (&Поступления)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	Импорт.Декларация КАК ДокументПоступления,
		|	МИНИМУМ(ДД.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Импорт КАК Импорт
		|		ПО Импорт.Поступление = ДД.Регистратор
		|ГДЕ
		|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Количество > 0
		|	И ДД.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Импорт.Декларация
		|";
КонецФункции

Функция ТекстОписаниеСебестоимость()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК КорНалоговоеНазначение,
		|	""ХХ"" КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ДанныеПредварительные
		|";
КонецФункции

Функция ТекстИсходныеДвиженияСебестоимость() // использует &Регистраторы
	Возврат "
		|ВЫБРАТЬ
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СуммаДопРасходов,
		|	ДД.СуммаДопРасходовБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.СтоимостьРеглБезНДС,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.НалоговоеНазначение,
		|	ДД.КорНалоговоеНазначение,
		|	ДД.ИдентификаторСтроки,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Регистратор В (&Регистраторы)
		|	И (ДД.СуммаДопРасходов = 0. И ДД.Количество <> 0
		|		ИЛИ ДД.СуммаДопРасходов <> 0. И ДД.Период < &НачалоПериода
		|		ИЛИ ДД.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
		|";
КонецФункции

Функция ТекстЗаказыНаПеремещенияИзАналитикРасходов() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Период КАК ДатаПоступления,
		|	ДД.Регистратор КАК Поступление,
		|	ДД.ЗаказНаПеремещение КАК Заказ,
		|	КлючиРасходов.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	Заказ.СкладПолучатель,
		|	ДД.КОформлению КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|		ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|		ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаПеремещение
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Период КАК ДатаПоступления,
		|	ДД.Регистратор КАК Поступление,
		|	ДД.ЗаказНаПеремещение КАК Заказ,
		|	КлючиРасходов.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	Заказ.СкладПолучатель КАК Склад,
		|	ДД.КОформлению КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|		ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|		ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
		|		И КлючиРасходов.Организация = Заказ.Организация
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|";
КонецФункции

Функция ТекстПриходыПоступленийПоЗаказамСебестоимости() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка),
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика, Заказы.Склад
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &ОкончаниеПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|		И Заказы.Склад = АналитикиТоваров.Склад
		|ГДЕ
		|	ДД.Период <= &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	Заказы.ДатаПоступления,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов
		|";
КонецФункции

Функция ТекстБазисОстаткиСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)
		|		И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|		И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|	) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ДД.СтоимостьОстаток > 0.
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				)
		|	)
		|";
КонецФункции

Функция ТекстБазисПриходыТоваровСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|		И Товары.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Товары.Организация = ДД.Организация
		|		И (Товары.ВидЗапасов = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Товары.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПриходыИнтеркампаниСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|		И Товары.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Товары.ВидЗапасовПродавца.Организация = ДД.Организация
		|		И (Товары.ВидЗапасовПродавца = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Товары.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПриходыРаботСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|		И Затраты.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Затраты.Организация = ДД.Организация
		|		И (Затраты.Назначение = ДД.ВидЗапасов.Назначение
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Затраты.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПриходыИмпортСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|		И Товары.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Товары.Организация = ДД.Организация
		|		И (Товары.ВидЗапасов = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Товары.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПеремещенияСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество КАК Объем,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	0,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				ДД.Регистратор,
		|				ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
		|	)
		|";
КонецФункции

Функция ТекстБазисПрошлыеПриходыТоваровСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода) КАК Остатки
		|		ПО Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Остатки.РазделУчета = ДД.РазделУчета
		|		И Остатки.ВидЗапасов = ДД.ВидЗапасов
		|		И Остатки.Организация = ДД.Организация
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Поступление
		|				ПО Поступление.Регистратор = КлючиРасходов.АналитикаРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов = ДД.Регистратор
		|			И Поступление.Период < &НачалоПериода
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

#КонецОбласти


#Область РасчетЗаписейНоменклатураДоходыРасходы

Функция ДанныеДляНоменклатураДоходыРасходы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "";
	ИсходныйТекстЗапроса = 
		ТекстРегистраторыДляНоменклатураДоходыРасходы() + ";" + // вт Регистраторы
		ТекстОписаниеДанныхДляНоменклатураДоходыРасходы()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстНоменклатураДоходыРасходыИзСебестоимости() // использует Регистраторы
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	ДанныеДляРасчета.Сортировать("Регистратор", Новый СравнениеЗначений);
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция ТекстРегистраторыДляНоменклатураДоходыРасходы() // вт Регистраторы
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор
		|ПОМЕСТИТЬ
		|	Регистраторы
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Партии
		|		ПО Партии.Период = ДД.Период
		|		И Партии.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Регистратор
		|";
	
КонецФункции

Функция ТекстОписаниеДанныхДляНоменклатураДоходыРасходы()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|
		|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения
		|";
КонецФункции

Функция ТекстНоменклатураДоходыРасходыИзСебестоимости() // использует Регистраторы
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.Период,
		|	ДД.Регистратор,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость),
		|	ДД.Организация,
		|	ДД.Подразделение,
		|
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Аналитика.Склад,
		|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
		|	ДД.ВидЗапасов,
		|
		|	ДД.СтатьяРасходовСписания КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|
		|	0. КАК Количество,
		|	СУММА(ДД.СуммаДопРасходов) КАК Стоимость,
		|	СУММА(ДД.СуммаДопРасходовБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|
		|	ДД.ВидЗапасов КАК ИсточникГФУНоменклатуры,
		|	ДД.Регистратор КАК ДокументДвижения
		|
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Регистраторы КАК Регистраторы
		|		ПО Регистраторы.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.СуммаДопРасходов <> 0. ИЛИ ДД.СуммаДопРасходов <> 0.)
		|	И ДД.Количество = 0
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОформлениеГТДСамостоятельно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Аналитика.Склад,
		|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

#КонецОбласти


#Область РасчетПартийРасходов

Функция ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	ДокументПоступления, Период, Регистратор, Приоритет УБЫВ,
		|	КорАналитикаУчетаНоменклатуры, КорВидЗапасов, АналитикаУчетаНоменклатуры, ВидЗапасов,
		|	ДокументИсточник, ПодразделениеРасходов, СтатьяРасходовСписания, АналитикаРасходов
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления
		|";
	// Выбираем приходные движения партий расходов и дальнейшие движения партий товаров
	ИсходныйТекстЗапроса =
		ТекстПартииРасходовИнициализация() + ";" + // вт ПрошлыеРеализации, Отработано, Аналитики, ОстаткиПартий, ДолиСтоимости, ПрошлыеПоступления
		ТекстОписаниеПартийРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийРасходов() // использует ОстаткиПартий, ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополненияПартийРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыПартийРасходовПрошлыхМесяцев() // использует ПрошлыеРеализации
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийПереданных()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииРасходовВПути()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийПроизводства()
		//++ НЕ УТ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийПродукции()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийВыпуска()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияОтчетПереработчика()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияОтчетПереработчикаРаспределение()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыДопРасходовПроизводственныхЗатрат() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыДопРасходовПроизводственныхЗатратПрочее() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРаспределениеДопРасходовПроизводственныхЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВыпускИзДопРасходовПроизводственныхЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДопРасходыПроизводственныхЗатратПрочее()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДопРасходыПроизводственныхЗатратСписание()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДопРасходыСписаниеВПроизводстве()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияВозвратИзПроизводстваИЛИОтПереработчика()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияВозвратИзПроизводстваИЛИОтПереработчикаНаСклад()
		//-- НЕ УТ
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияОтчетДавальцу()
		//-- НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийРаботИПеремещенияВПроизводстве()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("ЕстьФИФОСкользящая", ЕстьФИФОСкользящая(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийРасходов());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("ДокументПоступления", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииРасходов(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина)
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийРасходов());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Перемещение, Партия, Остаток, Сторно, Прошлое, Замещение,
		|Продукция, Выпуск, Затраты, Распределение, ВыпускПрочие, ВПути, Дополнение, Прочее, Списание");
	
	ПоляПотреблений = "РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, ДокументПоступления, ДокументИсточник";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Замещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Выпуск", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ВыпускПрочие",
		"РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, ДокументПоступления, Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно",
		"РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, ДокументПоступления, Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление",
		"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Продукция",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");	
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Замещение",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Замещение", "Потребление",
		"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Продукция", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Перемещение", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Выпуск", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "ВыпускПрочие", "Регистратор, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Партия", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Остаток", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Продукция", "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно",
		"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Прошлое",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Перемещение",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Сторно",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Затраты", "Организация, АналитикаУчетаНоменклатуры, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Затраты", "Потребление", "Организация, АналитикаУчетаНоменклатуры, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Затраты", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Прочее", "Организация, СтатьяРасходов, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Прочее", "Затраты", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Прочее", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускПрочие",
		"ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускПрочие", "Распределение",
		"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
		
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииРасходовНаСебестоимостьТоваров",
		"ПартииРасходовНаСебестоимостьТоваров",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Знаменатель, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументИсточник", "Период");
	КонтекстДвижений.Вставить("ПоляСуммирования", "Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница");
	КонтекстДвижений.Вставить("ПоляГруппировки", ПереченьПолей(РасчетныеПартии.Колонки, КонтекстДвижений.ПоляСуммирования));
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииРасходовИнициализация() // вт ПрошлыеРеализации, ОстаткиПартий, ПроизводственныеЗатраты, ПрошлыеРегистраторы, Выпуски, ДолиСтоимости, ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасовПродавца = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|;
		// Потенциальные источники, потребления которых надо списывать из знаменателя
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель
		|ПОМЕСТИТЬ
		|	Знаменатели
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.Первичное
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|       ИЛИ (ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя))
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПрочееОприходованиеТоваров
		//++ НЕ УТ
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		//-- НЕ УТ
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий
		|;
		// Остатки партионных регистров на начало по аналитикам доп.расходов
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ
		|	ОстаткиПартий
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		//++ НЕ УТ
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		//-- НЕ УТ
		|;
		// Документы передачи в производство и возврата из производства
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
		|		ПО Товары.Ссылка = Аналитика.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|;
		// Документы распределения расходов, возникших в прошлых периодах
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступленияРасходов КАК Ссылка
		|ПОМЕСТИТЬ
		|	ПрошлыеРегистраторы
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
		|		ПО Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Регистратор = ДД.ДокументПоступленияРасходов
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступленияРасходов
		//++ НЕ УТ
		|;
		// Доли распределения производственных затрат
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	МАКСИМУМ(ДД.Период) КАК Период,
		|	МАКСИМУМ(ДД.Регистратор) КАК Регистратор,
		|	СУММА(ДД.ДоляСтоимости) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ДолиСтоимости
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		ДД.ДоляСтоимостиПоПравилам КАК ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ВыпускиБезРаспоряжения КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Вручную КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ПоБазе КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ДД.АналитикаРасходов,
		|		ДД.Подразделение,
		|		ДД.Дата КАК Период,
		|		ДД.Ссылка КАК Регистратор,
		|		Строки.ДоляСтоимости
		|	ИЗ
		|		Документ.РаспределениеПрочихЗатрат КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		|			ПО Строки.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|		И Строки.ДоляСтоимости <> 0
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение
		|
		//-- НЕ УТ
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления
		|;
		// Подразделение документов-регистраторов
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.Подразделение
		|ПОМЕСТИТЬ
		|	ПодразделенияРегистраторов
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|";
КонецФункции

Функция ТекстОписаниеПартийРасходов()
	Возврат "
		// соединения и ЕСТЬNULL использованы для расширения типов полей таблицы ДанныеДляПартийХХХ
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	0. КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийРасходов() // использует ОстаткиПартий, ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА Периодика.Регистратор ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		//++ НЕ УТ
		|		КОГДА Периодика.Регистратор ССЫЛКА Документ.ПередачаСырьяПереработчику
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		КОГДА Периодика.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
		|		 И Аналитика.Склад ССЫЛКА Справочник.Партнеры
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		//-- НЕ УТ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	Партии.Количество,
		|	0. КАК Знаменатель,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартий КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.ДокументПоступления = ДД.ДокументПоступления
		|		И Партии.ВидЗапасов = ДД.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|		И (Аналитика.Склад ССЫЛКА Справочник.СтруктураПредприятия
		|			ИЛИ Аналитика.Склад ССЫЛКА Справочник.Партнеры)
		|ГДЕ
		|	Партии.Количество > 0.
		|";
КонецФункции

Функция ТекстПриходыПартийРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка) ТОГДА ДД.ДокументИсточник
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка) ТОГДА ДД.АналитикаРасходов
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.ДокументИсточник
		|		КОГДА ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ) КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР 
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка) ТОГДА ДД.ДокументИсточник
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка) ТОГДА ДД.АналитикаРасходов
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.ДокументИсточник
		|		КОГДА ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ),
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстДополненияПартийРасходов() // использует ПрошлыеРегистраторы
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Количество,
		|	0. КАК Знаменатель,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРегистраторы КАК ПрошлыеРегистраторы
		|		ПО ПрошлыеРегистраторы.Ссылка = ДД.ДокументПоступленияРасходов
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|";
КонецФункции

Функция ТекстРасходыПартийРасходовПрошлыхМесяцев() // использует ПрошлыеРеализации
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	МАКСИМУМ(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстИтерацияПартийТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ДД.ВидДвижения КОНЕЦ) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления И ДД.Количество < 0. ТОГДА -ДД.Количество
		|		ИНАЧЕ ДД.Количество КОНЕЦ) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(Комиссия.НомерСтроки, -1)) КАК Количество,
		|	ЕСТЬNULL(Знаменатели.Знаменатель, 0.) КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	(ВЫБОР
		|		КОГДА Не Возвраты.Ссылка ЕСТЬ NULL И ДД.Количество < 0. ТОГДА ИСТИНА
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК СохранятьРегл,
		|	ЕСТЬNULL(Комиссия.АналитикаУчетаНоменклатуры, ДД.КорАналитикаУчетаНоменклатуры) КАК КорАналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(Комиссия.ВидЗапасов, ДД.КорВидЗапасов) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА ДД.Регистратор
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Знаменатели КАК Знаменатели
		|		ПО Знаменатели.Регистратор = ДД.Регистратор
		|		И Знаменатели.Организация = ДД.Организация
		|		И Знаменатели.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Знаменатели.ДокументПоступления = ДД.ДокументПоступления
		|		И Знаменатели.ВидЗапасов = ДД.ВидЗапасов
		|		И Знаменатели.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передачи
		|		ПО Передачи.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Передачи.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
		|		ПО Возвраты.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Возвраты.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Комиссия
		|		ПО Комиссия.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Комиссия.Регистратор = ДД.Регистратор
		|		И Комиссия.Организация = ДД.Организация
		|		И Комиссия.ДокументПоступления = ДД.ДокументПоступления
		|		И Комиссия.ВидЗапасов = ДД.ВидЗапасов
		|		И Комиссия.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидЗапасовПрихода
		|		ПО ВидЗапасовПрихода.Ссылка = ДД.ВидЗапасов
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И ЕСТЬNULL(ВидЗапасовПрихода.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар), ИСТИНА)
		//++ НЕ УТ
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		//-- НЕ УТ
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ДД.ВидДвижения КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(Знаменатели.Знаменатель, 0.),
		|	(ВЫБОР
		|		КОГДА Не Возвраты.Ссылка ЕСТЬ NULL И ДД.Количество < 0. ТОГДА ИСТИНА
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ЕСТЬNULL(Комиссия.АналитикаУчетаНоменклатуры, ДД.КорАналитикаУчетаНоменклатуры),
		|	ЕСТЬNULL(Комиссия.ВидЗапасов, ДД.КорВидЗапасов),
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА ДД.Регистратор
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|";
КонецФункции

Функция ТекстИтерацияПартийПереданных()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ДД.ДокументПередачиНаКомиссию
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реализация
		|		ПО Реализация.Ссылка = ДД.ДокументПередачиНаКомиссию
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ДД.ДокументПередачиНаКомиссию
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстПартииРасходовВПути()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ВПути"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Количество,
		|	0. КАК Знаменатель,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК Отгрузки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ  РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|		ПО ДД.Регистратор = Отгрузки.Ссылка
		|ГДЕ
		|	Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|	И Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|";
КонецФункции

Функция ТекстИтерацияПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ) КАК ВидДвижения,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.КорАналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		//++ НЕ УТ
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		//-- НЕ УТ
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ),
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.КорАналитикаУчетаНоменклатуры КОНЕЦ),
		|	ДД.ДокументПоступления,
		|	ДД.КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

//++ НЕ УТ
Функция ТекстИтерацияПартийПродукции()
	Возврат "
		|ВЫБРАТЬ
		|	45 КАК Приоритет,
		|	""Продукция"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество),
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|   ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|   ДД.НалоговоеНазначениеВыпуска,
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ)
		|";
КонецФункции
	
Функция ТекстИтерацияПартийВыпуска() // использует Выпуски
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	10 КАК Приоритет,
		|	""Выпуск"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ДД.КоличествоПродукции КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|   ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика)
		|";
КонецФункции

Функция ТекстИтерацияОтчетПереработчика()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстИтерацияОтчетПереработчикаРаспределение()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстПриходыДопРасходовПроизводственныхЗатрат() // использует ДолиСтоимости
	Возврат "
		// приходы из партий расходов на себестоимость по списаниям на статьи производственных затрат
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Затраты"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДолиСтоимости.Период КАК Период,
		|	ДолиСтоимости.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	МАКСИМУМ(ДолиСтоимости.ДоляСтоимости) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДолиСтоимости.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК ДолиСтоимости
		|		ПО ДолиСтоимости.Организация = ДД.Организация
		|		И ДолиСтоимости.СтатьяРасходов = ДД.СтатьяРасходовСписания
		|		И ДолиСтоимости.АналитикаРасходов = ДД.АналитикаРасходов
		|		И ДолиСтоимости.ПодразделениеРасходов = ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
		|	И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДолиСтоимости.Период,
		|	ДолиСтоимости.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.НалоговоеНазначение,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДолиСтоимости.ПодразделениеРасходов
		|";
КонецФункции

Функция ТекстПриходыДопРасходовПроизводственныхЗатратПрочее() // использует ДолиСтоимости
	Возврат "
		// приходы из партий расходов на себестоимость по списаниям на статьи производственных затрат
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Затраты"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДолиСтоимости.Период КАК Период,
		|	ДолиСтоимости.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	МАКСИМУМ(ДолиСтоимости.ДоляСтоимости) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДолиСтоимости.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК ДолиСтоимости
		|		ПО ДолиСтоимости.Организация = ДД.Организация
		|		И ДолиСтоимости.СтатьяРасходов = ДД.СтатьяРасходовСписания
		|		И ДолиСтоимости.АналитикаРасходов = ДД.АналитикаРасходов
		|		И ДолиСтоимости.ПодразделениеРасходов = ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДолиСтоимости.Период,
		|	ДолиСтоимости.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Регистратор,
		|	ДД.НалоговоеНазначение,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДолиСтоимости.ПодразделениеРасходов
		|";
КонецФункции

Функция ТекстРаспределениеДопРасходовПроизводственныхЗатрат()
	Возврат "
		// распределение производственных затрат на документы выпуска продукции
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(ДД.ДоляСтоимости) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|   ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДД.ДокументИсточник.Подразделение КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ДоляСтоимости <> 0
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПродукции,
		|   ДД.НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстВыпускИзДопРасходовПроизводственныхЗатрат()
	Возврат "
		// распределение производственных затрат на документы выпуска продукции
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ВыпускПрочие"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(ДД.ДоляСтоимости) КАК Количество,
		|	МАКСИМУМ(ДД.КоличествоПродукции) КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|   ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДД.ДокументИсточник.Подразделение КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ДоляСтоимости <> 0
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПродукции,
		|   ДД.НалоговоеНазначениеВыпуска,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстДопРасходыПроизводственныхЗатратПрочее()
	Возврат "
		// отнесение доп.расходов производственных затрат на другие статьи расходов
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Прочее"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(Строки.ДоляСтоимости) КАК Количество,
		|	СУММА(Строки.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	Строки.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		| 		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ДоляСтоимости <> 0
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	Строки.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.Подразделение
		|";
КонецФункции

Функция ТекстДопРасходыПроизводственныхЗатратСписание()
	Возврат "
		// отнесение доп.расходов производственных затрат на другие статьи расходов
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Списание"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов КАК СтатьяРасходов,
		|	СУММА(Строки.ДоляСтоимости) КАК Количество,
		|	СУММА(Строки.ДоляСтоимости) КАК Знаменатель,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДД.Подразделение КАК ПодразделениеРасходов,
		|	Строки.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	Строки.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
		| 		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ДоляСтоимости <> 0
		|	И &ЕстьФИФОСкользящая
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов,
		|	Строки.СтатьяРасходов,
		|	Строки.АналитикаРасходов,
		|	ДД.Подразделение
		|";
КонецФункции

Функция ТекстДопРасходыСписаниеВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|	И ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.НалоговоеНазначение,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов
		|";
КонецФункции

Функция ТекстИтерацияВозвратИзПроизводстваИЛИОтПереработчика()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(-ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ДокументИсточник,
		|	ДД.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстИтерацияВозвратИзПроизводстваИЛИОтПереработчикаНаСклад()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(-ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.НалоговоеНазначение 
		|";
КонецФункции
//-- НЕ УТ

//++ НЕ УТКА
Функция ТекстИтерацияОтчетДавальцу()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.Регистратор.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов
		|";
КонецФункции
//-- НЕ УТКА

Функция ТекстИтерацияПартийРаботИПеремещенияВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		//++ НЕ УТКА
		|		И (Не Перемещение.Ссылка ЕСТЬ NULL)
		//-- НЕ УТКА
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Работы.Ссылка = АналитикиТоваров.Номенклатура
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериаловВПроизводстве КАК Перемещение
		|		ПО Перемещение.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Перемещение.Ссылка = ДД.Регистратор
		//-- НЕ УТКА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		//++ НЕ УТКА
		|		ИЛИ НЕ Перемещение.Ссылка ЕСТЬ NULL
		//-- НЕ УТКА
		|		)
		//++ НЕ УТКА
		|	И Не ДД.Регистратор ССЫЛКА Документ.МаршрутныйЛистПроизводства
		|	И Не ДД.Регистратор ССЫЛКА Документ.СписаниеЗатратНаВыпуск
		|	И Не ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		//-- НЕ УТКА
		|	И Не ДД.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		//++ НЕ УТ
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		//-- НЕ УТ
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		//++ НЕ УТКА
		|		И (Не Перемещение.Ссылка ЕСТЬ NULL)
		//-- НЕ УТКА
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

#КонецОбласти




#Область РасчетЗаписейКорректировокНДС

Функция ДанныеДляКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)			
		
	ТекстСортировка = "";
	
	ИсходныйТекстЗапроса =
		ТекстПартииДляРасчетаКорректировокНДС() + " ; "
		+ ТекстОписаниеДанныхДляКорректировокНДС()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКорректировкиНДСВосстановлениеНДС()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКорректировкиНДСУсловнаяПродажа()
		+ ТекстСортировка;
		
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция РасчетныеНДСВосстановлениеНДС(ДанныеДляРасчета, ВнутренниеДанные = Неопределено, Тест = Ложь)
	РасчетныеПартии = ДанныеДляРасчета.Скопировать(Новый Структура("ТипЗаписи", "НДСВосстановлениеНДС"));
	РасчетныеПартии.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция РасчетныеНДСУсловнаяПродажа(ДанныеДляРасчета, ВнутренниеДанные = Неопределено, Тест = Ложь)
	РасчетныеПартии = ДанныеДляРасчета.Скопировать(Новый Структура("ТипЗаписи", "НДСУсловнаяПродажа"));
	РасчетныеПартии.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииДляРасчетаКорректировокНДС()	
	
	Возврат "
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|
		|   Партии.НалоговоеНазначение					КАК НалоговоеНазначение,
		|   Партии.НалоговоеНазначениеПоФакту           КАК НалоговоеНазначениеПоФакту,
		|
		|   Партии.РазделКорректировки               	КАК РазделКорректировки,
		|	Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель КАК СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель КАК АналитикаРасходовПолучатель,
		|
		|	СУММА(Партии.Количество) КАК Количество,
		|	СУММА(Партии.НДСРегл) КАК НДСРегл,
		|	СУММА(Партии.НДСРеглПродукции) КАК НДСРеглПродукции,
		|	СУММА(Партии.СтоимостьРегл) КАК СтоимостьРегл
		|
		|ПОМЕСТИТЬ Партии
		|ИЗ (
		|	ВЫБРАТЬ
		|		Партии.Период,
		|		Партии.Регистратор,
		|		Партии.Организация,
		|		Партии.Количество КАК Количество,
		|		Партии.СтоимостьРегл,
		|		Партии.НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступления,
		|		Партии.АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ТоварыНаСкладах) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|		Партии.ВидЗапасов КАК ВидЗапасов,
		|		Партии.КорВидЗапасов КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|			ПО АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.ВидЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Материал), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> АналитикаПартий.НалоговоеНазначение 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		МАКСИМУМ(ПартииТоваров.Количество) КАК Количество,
		|		СУММА(Партии.СтоимостьРегл) КАК СтоимостьРегл,
		|		СУММА(Партии.НДСРегл) КАК НДСРегл,
		|       СУММА(Партии.СтоимостьРегл * (
		|			ВЫБОР АналитикаПродукции.Номенклатура.СтавкаНДС 
		|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20) ТОГДА 0.20
		|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)  ТОГДА 0.07
		|               ИНАЧЕ 0
		|	        КОНЕЦ
		|       )) КАК НДСРеглПродукции,
		|		ПартииТоваров.ДокументПоступления  КАК ДокументПоступления,
		|		ПартииТоваров.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначениеПродукции КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|		АналитикаПродукции.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.Продукция) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
        |		НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|		Партии.КорВидЗапасов КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту 
		|	ИЗ
		|		РегистрНакопления.ПартииЗатратНаВыпуск КАК Партии
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваров
		|		ПО 
		|			Партии.Регистратор = ПартииТоваров.Регистратор 
		|			И Партии.Организация = ПартииТоваров.Организация
		|			И Партии.АналитикаУчетаПродукции = ПартииТоваров.АналитикаУчетаНоменклатуры
		|			И Партии.НалоговоеНазначениеПродукции = ПартииТоваров.АналитикаУчетаПартий.НалоговоеНазначение 
		|			И Партии.НалоговоеНазначение = ПартииТоваров.НалоговоеНазначение 
		|			И ПартииТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|		ПО 
		|			АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукции
		|		ПО
		|			Партии.АналитикаУчетаПродукции = АналитикаПродукции.КлючАналитики
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.Активность
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> Партии.НалоговоеНазначениеПродукции
        //++ НЕ УТ
        |		И НЕ (Партии.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат)
        //-- НЕ УТ
		|	СГРУППИРОВАТЬ ПО
		|		Партии.Период,
		|		Партии.Регистратор,
		|		Партии.Организация,
		|		ПартииТоваров.ДокументПоступления,
		|		ПартииТоваров.АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначениеПродукции,
		|		Партии.АналитикаУчетаПродукции,
		|		Партии.СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов,
		|		Партии.НалоговоеНазначение,
		|		Партии.АналитикаУчетаПродукции,
		|		Партии.КорВидЗапасов,
		|		АналитикаПродукции.Номенклатура.СтавкаНДС
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		0 КАК Количество,
		|		Партии.СтоимостьРегл КАК СтоимостьРегл,
		|		Партии.НДСРегл КАК НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
		|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.РасходыНаСебестоимостьТоваров) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		Партии.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|		Партии.ВидЗапасов КАК ВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|			ПО АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> АналитикаПартий.НалоговоеНазначение 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		0 КАК Количество,
		|		Партии.СтоимостьРегл КАК СтоимостьРегл,
		|		Партии.НДСРегл КАК НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
		|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.СтатьяРасходов КАК АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ТЗР) КАК РазделКорректировки,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Партии.СтатьяРасходов = Статьи.Ссылка
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Статьи.ВариантРаспределенияРасходов В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> Партии.АналитикаУчетаПартий.НалоговоеНазначение 
        //++ НЕ УТ
		|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций // Документ формирует движения по НДС по данным регистра при проведении
        //-- НЕ УТ
		|
        //++ НЕ УТ
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период,
		|		Партии.Регистратор,
		|		Партии.Организация,
		|		Партии.Количество КАК Количество,
		|		Партии.СтоимостьРегл,
		|		Партии.НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступления,
		|		Партии.АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ПроизводственныеЗатраты) КАК РазделКорректировки,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|		Партии.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|		Партии.ВидЗапасов КАК ВидЗапасов,
		|		Партии.КорВидЗапасов КАК КорВидЗапасов,
		|		ЕСТЬNULL(Выпуск.Подразделение, НЕОПРЕДЕЛЕНО) КАК ПодразделениеПолучатель,
		|		ВЫБОР КОГДА ЕСТЬNULL(Выпуск.СписатьНаРасходы, ЛОЖЬ) ТОГДА ЕСТЬNULL(Выпуск.СтатьяРасходов, НЕОПРЕДЕЛЕНО)    ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК СтатьяРасходовПолучатель,
		|		ВЫБОР КОГДА ЕСТЬNULL(Выпуск.СписатьНаРасходы, ЛОЖЬ) ТОГДА ЕСТЬNULL(Выпуск.АналитикаРасходов, НЕОПРЕДЕЛЕНО) ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПартииНезавершенногоПроизводства КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|			ПО АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуск
		|			ПО Выпуск.Ссылка = Партии.ДокументВыпуска
		|			И Выпуск.КодСтроки = Партии.КодСтрокиПродукция
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.НалоговоеНазначениеВыпуска <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначениеВыпуска <> АналитикаПартий.НалоговоеНазначение 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период,
		|  		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация,
		|		0 КАК Количество,
		|		Партии.СтоимостьРеглБезНДС КАК СтоимостьРегл,
		|		Партии.НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.СтатьяРасходов КАК АналитикаУчетаНоменклатуры,
		|		ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20) КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ОбщепроизводственныеЗатраты) КАК РазделКорректировки,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|		ЕСТЬNULL(Выпуск.Подразделение, НЕОПРЕДЕЛЕНО) КАК ПодразделениеПолучатель,
		|		ВЫБОР КОГДА ЕСТЬNULL(Выпуск.СписатьНаРасходы, ЛОЖЬ) ТОГДА ЕСТЬNULL(Выпуск.СтатьяРасходов, НЕОПРЕДЕЛЕНО)    ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК СтатьяРасходовПолучатель,
		|		ВЫБОР КОГДА ЕСТЬNULL(Выпуск.СписатьНаРасходы, ЛОЖЬ) ТОГДА ЕСТЬNULL(Выпуск.АналитикаРасходов, НЕОПРЕДЕЛЕНО) ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Партии
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуск
		|			ПО Выпуск.Ссылка = Партии.ДокументВыпуска
		|			И Выпуск.КодСтроки = Партии.КодСтрокиПродукция
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> Партии.НалоговоеНазначениеВыпуска 
        |
        |	ОБЪЕДИНИТЬ ВСЕ
        |
        |	ВЫБРАТЬ
        |		Партии.Период,
        |		Партии.Регистратор,
        |		Партии.Организация,
        |		Партии.Количество КАК Количество,
		| 		Партии.СтоимостьРегл,
		| 		Партии.НДСРегл,
		|		0 КАК НДСРеглПродукции,
		| 		Партии.ДокументПоступления,
		|		Партии.АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ПроизводственныеЗатраты) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		Партии.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|		Партии.ВидЗапасов КАК ВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПартииПроизводственныхЗатрат КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|			ПО АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> АналитикаПартий.НалоговоеНазначение 
        |
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		МАКСИМУМ(ПартииПроизводственныхЗатрат.Количество) КАК Количество,
		|		СУММА(Партии.СтоимостьРегл) КАК СтоимостьРегл,
		|		СУММА(Партии.НДСРегл) КАК НДСРегл,
		|       СУММА(Партии.СтоимостьРегл * (
		|			ВЫБОР АналитикаПродукции.Номенклатура.СтавкаНДС 
		|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20) ТОГДА 0.20
		|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)  ТОГДА 0.07
		|               ИНАЧЕ 0
		|	        КОНЕЦ
		|       )) КАК НДСРеглПродукции,
		|		ПартииПроизводственныхЗатрат.ДокументПоступления  КАК ДокументПоступления,
		|		ПартииПроизводственныхЗатрат.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначениеПартии КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|		АналитикаПродукции.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ПроизводственныеЗатраты) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|		Партии.КорВидЗапасов КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту 
		|	ИЗ
		|		РегистрНакопления.ПартииЗатратНаВыпуск КАК Партии
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрНакопления.ПартииПроизводственныхЗатрат КАК ПартииПроизводственныхЗатрат
		|		ПО 
		|			Партии.Регистратор = ПартииПроизводственныхЗатрат.Регистратор 
		|			И Партии.Организация = ПартииПроизводственныхЗатрат.Организация
		|			И Партии.АналитикаУчетаПродукции = ПартииПроизводственныхЗатрат.АналитикаУчетаНоменклатуры
		|			И Партии.НалоговоеНазначениеПартии = ПартииПроизводственныхЗатрат.АналитикаУчетаПартий.НалоговоеНазначение 
		|			И Партии.НалоговоеНазначение = ПартииПроизводственныхЗатрат.НалоговоеНазначение 
		|			И ПартииПроизводственныхЗатрат.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
        |		    И ПартииПроизводственныхЗатрат.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|		ПО 
		|			АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукции
		|		ПО
		|			Партии.АналитикаУчетаПродукции = АналитикаПродукции.КлючАналитики
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
        |		И Партии.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.Активность
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> Партии.НалоговоеНазначениеПартии
		|	СГРУППИРОВАТЬ ПО
		|		Партии.Период,
		|		Партии.Регистратор,
		|		Партии.Организация,
		|		ПартииПроизводственныхЗатрат.ДокументПоступления,
		|		ПартииПроизводственныхЗатрат.АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначениеПартии,
		|		Партии.АналитикаУчетаПродукции,
		|		Партии.СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов,
		|		Партии.НалоговоеНазначение,
		|		Партии.АналитикаУчетаПродукции,
		|		Партии.КорВидЗапасов,
		|		АналитикаПродукции.Номенклатура.СтавкаНДС
        |
		//-- НЕ УТ
		|	) КАК Партии
		|
		|СГРУППИРОВАТЬ ПО
		|	Партии.Период,
		|	Партии.Регистратор,
		|	Партии.Организация,
		// |	АналитикаУчетаПартий.Контрагент,
		|	Партии.ДокументПоступления,
		|	Партии.АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС,
		|
		|   Партии.НалоговоеНазначение,
		|   Партии.НалоговоеНазначениеПоФакту,
		|
		|	Партии.СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов,
		|	Партии.ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов,
		|	Партии.КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель,
		|
		|   Партии.РазделКорректировки
		|";
		
КонецФункции

Функция ТекстОписаниеДанныхДляКорректировокНДС()
	
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПоФакту,
		|
		|	0. КАК Количество,
		|	0. КАК НДСРегл,
		|	0. КАК НДСРеглПоФакту,
		|
		|	0. КАК СтоимостьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ПустаяСсылка) КАК РазделКорректировки,
		|	0. КАК НДСРеглПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
		|";

КонецФункции

Функция ТекстКорректировкиНДСВосстановлениеНДС()	
	
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""НДСВосстановлениеНДС"" КАК ТипЗаписи,
		|	ИСТИНА КАК ЗаписыватьВРегистр,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Партии.НалоговоеНазначениеПоФакту КАК НалоговоеНазначениеПоФакту,
		|
		|	Партии.Количество КАК Количество,
		|	0. КАК НДСРегл,
		|	Партии.НДСРегл КАК НДСРеглПоФакту,
		|
		|	Партии.СтоимостьРегл КАК СтоимостьРегл,
		|	Партии.РазделКорректировки КАК РазделКорректировки,
		|	Партии.НДСРеглПродукции КАК НДСРеглПродукции,
		|	Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель КАК СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель КАК АналитикаРасходовПолучатель,
		|   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПредполагаемоеВосстановлениеНДС) КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	Партии КАК Партии
		|ГДЕ
		|   Партии.НДСРегл <> 0.
		|	И Партии.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)		
		|	И Партии.НалоговоеНазначениеПоФакту.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая)
		|";
		
КонецФункции

Функция ТекстКорректировкиНДСУсловнаяПродажа()	
	
	Возврат "
		|ВЫБРАТЬ
		|	20 КАК Приоритет,
		|	""НДСУсловнаяПродажа"" КАК ТипЗаписи,
		|	ИСТИНА КАК ЗаписыватьВРегистр,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Партии.НалоговоеНазначениеПоФакту КАК НалоговоеНазначениеПоФакту,
		|
		|	Партии.Количество КАК Количество,
		|	Партии.НДСРегл КАК НДСРегл,
		|	0. КАК НДСРеглПоФакту,
		|
		|	Партии.СтоимостьРегл КАК СтоимостьРегл,
		|	Партии.РазделКорректировки КАК РазделКорректировки,
		|	Партии.НДСРеглПродукции КАК НДСРеглПродукции,
		|	Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель КАК СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель КАК АналитикаРасходовПолучатель,
		|   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПредполагаемаяУсловнаяПродажа) КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	Партии КАК Партии
		|ГДЕ
		|   Партии.НДСРегл <> 0.
		|	И (
		|		(Партии.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая) И Партии.НалоговоеНазначениеПоФакту.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая))
		|		ИЛИ (Партии.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) И Партии.НалоговоеНазначениеПоФакту = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность))
		|   )
		|";
		
КонецФункции

Функция ТаблицаНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС)
	
	ТаблицаНДСУсловныеПродажи = РегистрыНакопления.НДСУсловныеПродажи.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаНДСУсловныеПродажи.Колонки.Удалить("Активность");
	
    Для Каждого СтрокаУсловнаяПродажа Из ТаблицаНДСУсловнаяПродажа Цикл
        
		
		НоваяСтрока = ТаблицаНДСУсловныеПродажи.Добавить();
		
		НоваяСтрока.Период             			= СтрокаУсловнаяПродажа.Период;
		НоваяСтрока.Регистратор             	= СтрокаУсловнаяПродажа.Регистратор;
		
		НоваяСтрока.Организация        			= СтрокаУсловнаяПродажа.Организация;
		НоваяСтрока.ВидУсловнойПродажи        	= Перечисления.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажа;
		
		Если ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры") Тогда
			НоваяСтрока.Номенклатура 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры, "Номенклатура"); 
			НоваяСтрока.Характеристика 	            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры, "Характеристика"); 
		ИначеЕсли ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда	
			НоваяСтрока.Номенклатура 				= СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			НоваяСтрока.Номенклатура 				= Неопределено; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли; 
		
		НоваяСтрока.СтавкаНДС        			= СтрокаУсловнаяПродажа.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение         = СтрокаУсловнаяПродажа.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаУсловнаяПродажа.НалоговоеНазначениеПоФакту;
		
		НоваяСтрока.Количество     				= СтрокаУсловнаяПродажа.Количество;
		НоваяСтрока.СтоимостьРегл  				= СтрокаУсловнаяПродажа.СтоимостьРегл;
		НоваяСтрока.НДСРегл        				= СтрокаУсловнаяПродажа.НДСРегл;
		НоваяСтрока.НДСРеглРучныеКорректировки 	= 0;
		
	КонецЦикла;
	
    Для Каждого СтрокаВосстановлениеНДС Из ТаблицаНДСВосстановлениеНДС Цикл
        
		
		НоваяСтрока = ТаблицаНДСУсловныеПродажи.Добавить();
		
		НоваяСтрока.Период             			= СтрокаВосстановлениеНДС.Период;
		НоваяСтрока.Регистратор             	= СтрокаВосстановлениеНДС.Регистратор;
		
		НоваяСтрока.Организация        			= СтрокаВосстановлениеНДС.Организация;
		НоваяСтрока.ВидУсловнойПродажи        	= Перечисления.ВидУсловнойПродажи.ПредполагаемоеВосстановлениеНДС;
		
		Если ТипЗнч(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры) = Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры") Тогда
			НоваяСтрока.Номенклатура 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры, "Номенклатура"); 
			НоваяСтрока.Характеристика 	            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры, "Характеристика"); 
		ИначеЕсли ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда	
			НоваяСтрока.Номенклатура 				= СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			НоваяСтрока.Номенклатура 				= Неопределено; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли; 
		
		НоваяСтрока.СтавкаНДС        			= СтрокаВосстановлениеНДС.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение         = СтрокаВосстановлениеНДС.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаВосстановлениеНДС.НалоговоеНазначениеПоФакту;
		
		НоваяСтрока.Количество     				= СтрокаВосстановлениеНДС.Количество;
		НоваяСтрока.СтоимостьРегл  				= СтрокаВосстановлениеНДС.СтоимостьРегл;
		НоваяСтрока.НДСРегл        				= СтрокаВосстановлениеНДС.НДСРеглПоФакту;
		НоваяСтрока.НДСРеглРучныеКорректировки 	= 0;
		
	КонецЦикла;
	
		
	Возврат ТаблицаНДСУсловныеПродажи;
	
КонецФункции // ТаблицаНДСУсловныеПродажи

Функция РасчетныеНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС)
	РасчетныеНДСУсловныеПродажи = ТаблицаНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС);
	РасчетныеНДСУсловныеПродажи.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеНДСУсловныеПродажи;
КонецФункции

Процедура ДополнитьДанныеДляКорректировокНДССохраняемымиДвижениями(ДанныеДляКорректировокНДС, УстаревшиеРегистраторыКорректировокНДС, НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра)
	
	// Получим регистраторы, по которым будут формироваться движения по НДС
	НовыеРегистраторыКорректировокНДС = ДанныеДляКорректировокНДС.Скопировать(, "Регистратор");
	НовыеРегистраторыКорректировокНДС.Свернуть("Регистратор", "");
	
	// Подготовим запрос
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",  	  		            НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  	  		            ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",    		            МассивОрганизаций);
	Запрос.УстановитьПараметр("НовыеРегистраторыКорректировокНДС", 		НовыеРегистраторыКорректировокНДС);
	Запрос.УстановитьПараметр("УстаревшиеРегистраторыКорректировокНДС", УстаревшиеРегистраторыКорректировокНДС);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТСтарыеРегистраторы
	|ИЗ
	|	РегистрНакопления.КорректировкиНДСПартий КАК ДД
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТНовыеРегистраторы
	|ИЗ
	|	&НовыеРегистраторыКорректировокНДС КАК Т
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТСохраняемыеРегистраторы
	|ИЗ
	|	ВТНовыеРегистраторы КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтарыеРегистраторы КАК Т2
	|		ПО Т.Регистратор = Т2.Регистратор
	|ГДЕ
	|	%1
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТУстаревшиеРегистраторыКорректировокНДС
	|ИЗ
	|	&УстаревшиеРегистраторыКорректировокНДС КАК Т
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСохраняемыеДвиженияКорректировкиНДСПартий
	|ИЗ
	|	РегистрНакопления.КорректировкиНДСПартий КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И НЕ (Т.Организация В (&МассивОрганизаций))
	|	И Т.Регистратор В 
	|		(ВЫБРАТЬ Т.Регистратор ИЗ ВТСохраняемыеРегистраторы КАК Т 
	|		 ОБЪЕДИНИТЬ ВСЕ
	|		 ВЫБРАТЬ Т.Регистратор ИЗ ВТУстаревшиеРегистраторыКорректировокНДС КАК Т)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ИЗ
	|	ВТУстаревшиеРегистраторыКорректировокНДС КАК Т
	|ГДЕ
	|	НЕ Т.Регистратор В
	|	   (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Регистратор ИЗ ВТСохраняемыеДвиженияКорректировкиНДСПартий КАК Т)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТСохраняемыеДвиженияКорректировкиНДСПартий КАК Т
	|";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		ТекстОтборПоТипамРегистраторовДляСохраненияДвижений()
    );
    
    Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрНакопления.КорректировкиНДСПартий", "РегистрНакопления." + ИмяРегистра);
		
	Результат = Запрос.ВыполнитьПакет();
	
	// Из УстаревшиеРегистраторыКорректировокНДС удалим те регистраторы, по которым есть сохраняемые движения по другим организациям
	УстаревшиеРегистраторыКорректировокНДС = Результат[5].Выгрузить();
	
	// Дополним ДанныеДляКорректировокНДС сохраняемыми движениями регистра КорректировкиНДСПартий/НДСУсловныеПродажи по другим организациям
	Выборка = Результат[6].Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДанныеДляКорректировокНДС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); 
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаУстаревшихРегистраторовКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, НовыеДанныеДляКорректировокНДС, ИмяРегистра)
	
	// Получим типы документов, двигающих партионные регистры
	// Очищать движения корректировок НДС можно только у этих типов документов
	РегистраторыПартий = Новый Массив;
	Для Каждого Мета Из Метаданные.Документы Цикл
        Если Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииПрочихРасходов)
            //++ НЕ УТ
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииНезавершенногоПроизводства)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства)
            //-- НЕ УТ
		    ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат) 
            
            Тогда
            
			РегистраторыПартий.Добавить(Тип("ДокументСсылка." + Мета.Имя));
            
		КонецЕсли;
	КонецЦикла;
	ТипыРегистраторовПартий = Новый ОписаниеТипов(РегистраторыПартий);
	
	// Создадим таблицу для хранения устаревших регистраторов по регистру КорректировкиНДСПартий или НДСУсловныеПродажи
	УстаревшиеРегистраторыКорректировокНДС = Новый ТаблицаЗначений;
	УстаревшиеРегистраторыКорректировокНДС.Колонки.Добавить("Регистратор", Новый ОписаниеТипов(Документы.ТипВсеСсылки()));
	
	// Заполним таблицу устаревших регистраторов
	ВычислитьУстаревшиеРегистраторыКорректировокНДС(
		НачалоПериода,
		ОкончаниеПериода,
		МассивОрганизаций,
		НовыеДанныеДляКорректировокНДС,
		ТипыРегистраторовПартий,
		УстаревшиеРегистраторыКорректировокНДС,
        ИмяРегистра
    );
	
	Возврат УстаревшиеРегистраторыКорректировокНДС;
	
КонецФункции

Процедура ВычислитьУстаревшиеРегистраторыКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, НовыеДанныеДляКорректировокНДС, ТипыРегистраторовПартий, УстаревшиеРегистраторыКорректировокНДС, ИмяРегистра)
	
	// Получим описание типов документов, которые делают онлайн движения по корректировкам НДС
	// Движения этих документов очищать не надо
	ТипыРегистраторовКорректировокНДСОнлайн = РегистраторыКорректировокНДССОнлайнДвижениями(ИмяРегистра);
	
	// Получим старые регистраторы из ИБ, по данным регистра корректировок НДС
	СтарыеРегистраторыКорректировокНДС = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	
	// Получим новые регистраторы из таблицы новых движений корректировок НДС
	НовыеРегистраторыКорректировокНДС = НовыеДанныеДляКорректировокНДС.Скопировать(,"Регистратор");
	НовыеРегистраторыКорректировокНДС.Свернуть("Регистратор", "");
	
	Для Каждого Строка Из НовыеРегистраторыКорректировокНДС Цикл
		// Если есть новые движения по регистратору, то его старые движения очищать не надо - будут замещены при записи
		СтарыеРегистраторыКорректировокНДС.Удалить(Строка.Регистратор);
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из СтарыеРегистраторыКорректировокНДС Цикл
		Если ТипыРегистраторовПартий.СодержитТип(ТипЗнч(КлючИЗначение.Ключ))
		 И НЕ ТипыРегистраторовКорректировокНДСОнлайн.СодержитТип(ТипЗнч(КлючИЗначение.Ключ)) Тогда
		 	// Если старый регистратор двигает партионные регистры и не делает движения по корректировкам НДС онлайн,
			// значит его движения были сформированы механизмом партионного учета - их надо очистить
			ОписаниеОчищаемогоНабора = УстаревшиеРегистраторыКорректировокНДС.Добавить();
			ОписаниеОчищаемогоНабора.Регистратор = КлючИЗначение.Ключ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьДвиженияУстаревшихРегистраторовКорректировокНДС(УстаревшиеРегистраторыКорректировокНДС, ИмяРегистра)
    
	Для Каждого ОписаниеОчищаемогоНабора Из УстаревшиеРегистраторыКорректировокНДС Цикл
		Движения = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(ОписаниеОчищаемогоНабора.Регистратор);
		Движения.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает описание типов документов, формирующих онлайн движения по корректировкам НДС (при проведении).
// Также в это описание типов добавляется служебный документ КорректировкаРегистров.
//
// Параметры:
//	ИмяРегистра - Строка - имя регистра корректировок НДС из метаданных конфигурации ("КорректировкиНДСПартий" или "НДСУсловныеПродажи")
//
// Возвращаемое значение:
//	ОписаниеТипов - типы документов с онлайн движениями по корректировкам НДС
//	
Функция РегистраторыКорректировокНДССОнлайнДвижениями(ИмяРегистра)
    
    Если ИмяРегистра = "КорректировкиНДСПартий" Тогда
        // У этих документов в модуле менеджера в ДополнительныеСвойства.ТаблицыДляДвижений добавляется "ТаблицаКорректировкиНДСПартий"
        Возврат Новый ОписаниеТипов("
            |ДокументСсылка.ВыкупВозвратнойТарыУПоставщика,    
            //++ НЕ УТ
            |ДокументСсылка.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций,
            //-- НЕ УТ
            |ДокументСсылка.КорректировкаРегистров"
        );
    ИначеЕсли ИмяРегистра = "НДСУсловныеПродажи" Тогда    
        // У этих документов в модуле менеджера в ДополнительныеСвойства.ТаблицыДляДвижений добавляется "ТаблицаНДСУсловныеПродажи"
        Возврат Новый ОписаниеТипов("
            |ДокументСсылка.ВыкупВозвратнойТарыУПоставщика,    
            //++ НЕ УТ
            |ДокументСсылка.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций,
            |ДокументСсылка.КорректировкаНалоговогоНазначенияОС,
            //-- НЕ УТ
            |ДокументСсылка.НалоговаяНакладная,
            |ДокументСсылка.Приложение2КНалоговойНакладной,
            |ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента,
            |ДокументСсылка.ТаможеннаяДекларацияИмпорт,
            |ДокументСсылка.КорректировкаРегистров"
        );
    Иначе 
        Возврат Неопределено; 
    КонецЕсли; 
	
КонецФункции

// Обработчик подписки ПроверитьВозможностьФормированияОнлайнДвиженийКорректировокНДС на событие ПередЗаписью наборов записей регистров корректировок НДС.
Процедура ПроверитьВозможностьФормированияОнлайнДвиженийКорректировокНДСПередЗаписью(НаборЗаписей, Отказ, Замещение) Экспорт
	
	Если НаборЗаписей.ОбменДанными.Загрузка ИЛИ НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ НаборЗаписей.ДополнительныеСвойства.Свойство(ИмяДополнительногоСвойстваЗаписываемогоНабора()) Тогда
		
		// Выполняется формирование онлайн движений первичными документами (не механизмом партионного учета)
		// Проверим, что документ-регистратор указан в перечне допустимых регистраторов для онлайн движений по корректировкам НДС
		ИмяРегистра = НаборЗаписей.Метаданные().Имя;
		Регистратор = НаборЗаписей.Отбор.Регистратор.Значение;
		ДопустимыеРегистраторы = РегистраторыКорректировокНДССОнлайнДвижениями(ИмяРегистра);
		
		Если НЕ ДопустимыеРегистраторы.СодержитТип(ТипЗнч(Регистратор)) Тогда
			Отказ = Истина;
			ТекстОшибки = НСтр("ru='Документ ""%1"" не может формировать онлайн движения по регистру накопления ""%2"".
                                   |см. ПартионныйУчет.РегистраторыКорректировокНДССОнлайнДвижениями()'
                                   |;uk='Документ ""%1"" не може формувати онлайн рухи по регістру накопичення ""%2"".
                                   |див. ПартионныйУчет.РегистраторыКорректировокНДССОнлайндвижениями()'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Регистратор, ИмяРегистра);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти


//++ НЕ УТ
#Область РаспределениеМатериаловИРабот

Функция ДанныеДляРаспределенияМатериаловИРабот(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Период, Регистратор, ТипЗаписи
		|";
	
	ИсходныйТекстЗапроса =
		ТекстРаспределениеМатериаловИРаботИнициализация() + ";" + // вт ОтборПоМатериалам, КРаспределению 
		ТекстДанныеПоУказаннымМатериалам() + ";" + // вт ДанныеПоУказаннымМатериалам
		ТекстДанныеПоПродукции() + ";" + //вт Данные_ПоПродукции
		ТекстДанныеПоПлановойСтоимости() + ";" + //вт Данные_ПоПлановойСтоимости
		ТекстДанныеПоУказаннымТрудозатратам() + ";" + //вт Данные_ПоУказаннымТрудозатратам
		ТекстДанныеПоНормативамРасходаМатериала() + ";" + //вт Данные_ПоНормативамРасходаМатериала
		ТекстБазаРаспределения() + ";" + // вт БазаРаспределения
		ТекстСуммыПоказателей() + ";" + // вт ОбщиеСуммы
		ТекстОписаниеРаспределениеМатериаловИРабот()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКРаспределению()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРаспределениеПоБазе()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнение()
		+ ТекстСортировка;
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Вес", Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СН.ЕдиницаИзмерения", "СН"));
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Объем", Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СН.ЕдиницаИзмерения", "СН"));
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("ВидПлановыхЦен", Константы.ВидЦеныПлановойСтоимостиМатериаловРабот.Получить());
	ИсходныйЗапрос.УстановитьПараметр("ОтборПоМатериаламИерархия", ОтборПоМатериаламИерархия(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "РаспределениеМатериаловИРабот"));
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить();
	Возврат ДанныеДляРасчета;
	
КонецФункции

Функция РасчетноеРаспределениеМатериаловИРабот(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных данных
	Запрос = Новый Запрос(ТекстОписаниеРаспределениеМатериаловИРабот());
	РасчетныеДанные = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Партия, Потребление, Дополнение");
	
	ПоляПотреблений = "Регистратор, Серия";
	КонтекстДвижений = ОписаниеДвижений(
		"РаспределениеМатериаловИРабот",
		"МатериалыИРаботыВПроизводстве",
		ПереченьПолей(РасчетныеДанные.Колонки),
		ПоляПотреблений,
		"Партия",
		"Количество", "Количество", "", "Период");
	
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	
	ЦепочкиДвижений = ЦепочкиДвиженийЗапросом(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамИзВыборки(КонтекстДвижений, ДанныеДляРасчета, РасчетныеДанные, ЦепочкиДвижений, Регистраторы, Тест);

	// Шаг 4: Удаляем строки, не требующие записи в базу.
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеДанные);
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеДанные.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеДанные;
	
КонецФункции

Функция ТекстРаспределениеМатериаловИРаботИнициализация() // вт ОтборПоМатериалам, Распределить
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.Материал КАК Материал
	|ПОМЕСТИТЬ
	|	ОтборПоМатериалам
	|ИЗ
	|	&ОтборПоМатериаламИерархия КАК ДД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Дата,
	|	ДД.Организация,
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Серия,
	|	ДД.Подразделение,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.СтатьяКалькуляции,
	|	ДД.Назначение,
	|	ДД.БазаРаспределения,
	|	ДД.КРаспределению,
	|	ЕСТЬNULL(ОтборПоМатериалам.Материал, НЕОПРЕДЕЛЕНО) КАК Материал,
	|	ЕСТЬNULL(ОтборПоВидамРабот.ВидРабот, НЕОПРЕДЕЛЕНО) КАК ВидРабот,
	|	ЕСТЬNULL(ОтборПоГруппамПродукции.ГруппаПродукции, НЕОПРЕДЕЛЕНО) КАК ГруппаПродукции,
	|	(ВЫБОР
	|		КОГДА ОтборПоГруппамПродукции.ГруппаПродукции ЕСТЬ NULL ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ПоВсемГруппамПродукции
	|ПОМЕСТИТЬ
	|	Распределить
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Регистратор,
	|		ДД.Дата,
	|		ДД.Организация,
	|		ДД.Номенклатура,
	|		ДД.Характеристика,
	|		ДД.Серия,
	|		ДД.Подразделение,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Правила.БазаРаспределения КАК БазаРаспределения,
	|		ДД.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		ДД.Назначение КАК Назначение,
	|		ДД.КоличествоКРаспределениюПоПравилу КАК КРаспределению
	|	ИЗ
	|		Документ.РаспределениеПроизводственныхЗатрат КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Номенклатура = ДД.Номенклатура
	|			И Аналитика.Характеристика = ДД.Характеристика
	|			И Аналитика.Серия = ДД.Серия
	|			И Аналитика.Склад = ДД.Подразделение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК Правила
	|			ПО ДД.ПравилоРаспределения = Правила.Ссылка
	|	ГДЕ
	|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Проведен
	|		И ДД.СтатусУказанияСерий НЕ В(9,10)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Регистратор,
	|		Т.Дата,
	|		Т.Организация,
	|		ДД.Номенклатура,
	|		ДД.Характеристика,
	|		ДД.Серия,
	|		Т.Подразделение,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Правила.БазаРаспределения КАК БазаРаспределения,
	|		Т.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		Т.Назначение КАК Назначение,
	|		ДД.КоличествоКРаспределениюПоПравилу КАК КРаспределению
	|	ИЗ
	|		Документ.РаспределениеПроизводственныхЗатрат.Серии КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПроизводственныхЗатрат КАК Т
	|			ПО Т.Ссылка = ДД.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Номенклатура = ДД.Номенклатура
	|			И Аналитика.Характеристика = ДД.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Склад = Т.Подразделение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК Правила
	|			ПО Т.ПравилоРаспределения = Правила.Ссылка
	|	ГДЕ
	|		Т.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И Т.Организация В (&МассивОрганизаций)
	|		И Т.Проведен
	|		И Т.СтатусУказанияСерий В (9,10)
	|	) КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОтборПоМатериалам КАК ОтборПоМатериалам
	|		ПО ОтборПоМатериалам.Регистратор = ДД.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеПроизводственныхЗатрат.ОтборПоГруппамПродукции КАК ОтборПоГруппамПродукции
	|		ПО ОтборПоГруппамПродукции.Ссылка = ДД.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеПроизводственныхЗатрат.ОтборПоВидамРабот КАК ОтборПоВидамРабот
	|		ПО ОтборПоВидамРабот.Ссылка = ДД.Регистратор
	|";
	
	Возврат ТекстЗапроса
			
КонецФункции

Функция ТекстДанныеПоУказаннымМатериалам() // вт ДанныеПоУказаннымМатериалам
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Организация,
	|	ЕСТЬNULL(ОтчетПереработчика.Подразделение, ДД.Подразделение) КАК Подразделение,
	|	Аналитика.Номенклатура КАК Материал,
	|	(ВЫБОР
	//++ НЕ УТКА
	|		КОГДА НЕ ЗаказыНаПроизводство.Ссылка ЕСТЬ NULL ТОГДА ЗаказыНаПроизводство.Номенклатура
	//-- НЕ УТКА
	|		КОГДА НЕ ЗаказыПереработчику.Ссылка ЕСТЬ NULL ТОГДА ЗаказыПереработчику.Номенклатура
	|		КОГДА НЕ Выпуск.Ссылка ЕСТЬ NULL ТОГДА Выпуск.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК Продукция,
	|	(ВЫБОР
	//++ НЕ УТКА
	|		КОГДА НЕ ЗаказыНаПроизводство.Ссылка ЕСТЬ NULL ТОГДА ЗаказыНаПроизводство.Номенклатура.ГруппаАналитическогоУчета
	//-- НЕ УТКА
	|		КОГДА НЕ ЗаказыПереработчику.Ссылка ЕСТЬ NULL ТОГДА ЗаказыПереработчику.Номенклатура.ГруппаАналитическогоУчета
	|		КОГДА НЕ Выпуск.Ссылка ЕСТЬ NULL ТОГДА Выпуск.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ГруппаПродукции,
	|	ДД.Назначение,
	|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	СУММА(ДД.Количество) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
	|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес
	|ПОМЕСТИТЬ
	|	Данные_ПоУказаннымМатериалам
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО СН.Ссылка = Аналитика.Номенклатура
	//++ НЕ УТКА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ЗаказыНаПроизводство
	|		ПО ЗаказыНаПроизводство.Ссылка = ДД.ЗаказНаПроизводство
	|		И ЗаказыНаПроизводство.КодСтроки = ДД.КодСтрокиПродукция
	//-- НЕ УТКА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Продукция КАК ЗаказыПереработчику
	|		ПО ЗаказыПереработчику.Ссылка = ДД.ЗаказНаПроизводство
	|		И ЗаказыПереработчику.КодСтроки = ДД.КодСтрокиПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуск
	|		ПО Выпуск.Ссылка = ДД.ЗаказНаПроизводство
	|		И Выпуск.КодСтроки = ДД.КодСтрокиПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|		ПО ОтчетПереработчика.Ссылка = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДД.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ЕСТЬNULL(ОтчетПереработчика.Подразделение, ДД.Подразделение),
	|	Аналитика.Номенклатура,
	|	(ВЫБОР
	//++ НЕ УТКА
	|		КОГДА НЕ ЗаказыНаПроизводство.Ссылка ЕСТЬ NULL ТОГДА ЗаказыНаПроизводство.Номенклатура
	//-- НЕ УТКА
	|		КОГДА НЕ ЗаказыПереработчику.Ссылка ЕСТЬ NULL ТОГДА ЗаказыПереработчику.Номенклатура
	|		КОГДА НЕ Выпуск.Ссылка ЕСТЬ NULL ТОГДА Выпуск.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	(ВЫБОР
	//++ НЕ УТКА
	|		КОГДА НЕ ЗаказыНаПроизводство.Ссылка ЕСТЬ NULL ТОГДА ЗаказыНаПроизводство.Номенклатура.ГруппаАналитическогоУчета
	//-- НЕ УТКА
	|		КОГДА НЕ ЗаказыПереработчику.Ссылка ЕСТЬ NULL ТОГДА ЗаказыПереработчику.Номенклатура.ГруппаАналитическогоУчета
	|		КОГДА НЕ Выпуск.Ссылка ЕСТЬ NULL ТОГДА Выпуск.Номенклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	ДД.Назначение,
	|	ДД.ЗаказНаПроизводство,
	|	ДД.НалоговоеНазначение,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап
	|";
КонецФункции

Функция ТекстДанныеПоПродукции() // вт ФактЭтапов_ПоПродукции, ПланЭтаповПоЗаказам_ПоПродукции, Данные_ПоПродукции
	
	Возврат "
	//++ НЕ УТКА
	|ВЫБРАТЬ
	|	ДД.Подразделение,
	|	ДД.Распоряжение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	ДД.Этап.Владелец КАК Спецификация,
	|	СУММА(ДД.ЗапланированоПроизводством + ДД.КВыполнению + ДД.Выполнено + ДД.Брак) КАК ФактЭтапов
	|ПОМЕСТИТЬ
	|	ФактЭтапов_ПоПродукции
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК ДД
	|ГДЕ
	// Выполняющийся этап
	|	((ДД.НачалоПредварительногоБуфера <= &ОкончаниеПериода
	|		И ДД.ОкончаниеЗавершающегоБуфера >= &НачалоПериода
	|		И (ДД.ЗапланированоПроизводством <> 0 ИЛИ ДД.КВыполнению <> 0))
	|	ИЛИ
	//Выполненный этап
	|	(ДД.ОкончаниеЗавершающегоБуфера МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И (ДД.Выполнено <> 0 ИЛИ ДД.Брак <> 0)))
	|	И ДД.Распоряжение.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Подразделение,
	|	ДД.Распоряжение,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	ДД.Этап.Владелец
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.Распоряжение,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Спецификация,
	|	СУММА(Этапы.ЗапланированоЗаказом) КАК ПланЭтапов
	|ПОМЕСТИТЬ
	|	ПланЭтаповПоЗаказам_ПоПродукции
	|ИЗ
	|	ФактЭтапов_ПоПродукции КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЭтапыПроизводства КАК Этапы
	|		ПО Этапы.Распоряжение = ДД.Распоряжение
	|		И Этапы.КодСтрокиПродукция = ДД.КодСтрокиПродукция
	|		И Этапы.Этап = ДД.Этап
	|		И Этапы.ЗапланированоЗаказом <> 0
	|		И Этапы.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Распоряжение,
	|	ДД.НалоговоеНазначение,
	|	ДД.НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Спецификация
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|
	//-- НЕ УТКА
	//Данные по выпуску без распоряжений
	|ВЫБРАТЬ
	|	Выпуск.Организация,
	|	Выпуск.Подразделение,
	|	ДД.Номенклатура КАК Продукция,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	ДД.Назначение,
	|	ДД.Ссылка КАК ЗаказНаПроизводство,
	|	ДД.Ссылка.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Ссылка.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	ДД.Количество КАК ЗапланированоПродукции,
	|	1 КАК ЗапланированоЭтапов,
	|	1 КАК ВыполненоЭтапов,
	|	ДД.Количество,
	|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество КАК Объем,
	|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество КАК Вес
	|ПОМЕСТИТЬ Данные_ПоПродукции
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК Выпуск
	|		ПО (Выпуск.Ссылка = ДД.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО (СН.Ссылка = ДД.Номенклатура)
	|ГДЕ
	|	Выпуск.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Выпуск.Организация В (&МассивОрганизаций)
	|	И НЕ Выпуск.ВыпускПоРаспоряжениям
	|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И Выпуск.Проведен
	|
	//++ НЕ УТКА
	//Данные по выпуску по распоряжениям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказНаПроизводство.Организация,
	|	ДД.Подразделение,
	|	Строки.Номенклатура КАК Продукция,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	Строки.Назначение,
	|	ДД.Распоряжение,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	Строки.Количество,
	|	План.ПланЭтапов,
	|	ДД.ФактЭтапов,
	|	ВЫБОР
	|		КОГДА План.ПланЭтапов <> 0
	|		ТОГДА Строки.Количество * ДД.ФактЭтапов / План.ПланЭтапов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество, //Это расчетный выпуск
	|	ВЫБОР
	|		КОГДА План.ПланЭтапов <> 0
	|		ТОГДА ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Строки.Количество * ДД.ФактЭтапов / План.ПланЭтапов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Объем,
	|	ВЫБОР
	|		КОГДА План.ПланЭтапов <> 0
	|		ТОГДА ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Строки.Количество * ДД.ФактЭтапов / План.ПланЭтапов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Вес
	|
	|ИЗ ФактЭтапов_ПоПродукции КАК ДД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланЭтаповПоЗаказам_ПоПродукции КАК План
	|		ПО План.Распоряжение = ДД.Распоряжение
	|		И План.КодСтрокиПродукция = ДД.КодСтрокиПродукция
	|		И План.Спецификация = ДД.Спецификация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК СтрокиПродукция
	|		ПО СтрокиПродукция.Ссылка = ДД.Распоряжение
	|		И СтрокиПродукция.КодСтроки = ДД.КодСтрокиПродукция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.ВыходныеИзделия КАК Строки
	|		ПО Строки.Ссылка = СтрокиПродукция.Ссылка
	|		И Строки.КлючСвязиПродукция = СтрокиПродукция.КлючСвязи
	|		И Строки.Этап.Владелец = ДД.Спецификация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|		ПО ЗаказНаПроизводство.Ссылка = ДД.Распоряжение
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО СН.Ссылка = Строки.Номенклатура
	|
	//-- НЕ УТКА
	// Поступление от переработчика.
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказ.Организация,
	|	Заказ.Подразделение,
	|	Аналитика.Номенклатура,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	Заказ.Назначение,
	|	ДД.Распоряжение КАК ЗаказНаПроизводство,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	ДД.Количество КАК ЗапланированоПродукции,
	|	1 КАК ЗапланированоЭтапов,
	|	1 КАК ВыполненоЭтапов,
	|	ДД.Количество,
	|	&Объем * ДД.Количество,
	|	&Вес * ДД.Количество
	|
	|ИЗ
	|	РегистрНакопления.ТоварыПолученныеОтПереработчика КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК Заказ
	|		ПО ДД.Распоряжение = Заказ.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ДД.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО СН.Ссылка = Аналитика.Номенклатура
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Заказ.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ДД.Активность
	|";
	
КонецФункции

Функция ТекстДанныеПоПлановойСтоимости() // вт ФактЭтапов_ПоПлановойСтоимости, -, Данные_ПоПлановойСтоимости
	
	Возврат "
	//++ НЕ УТКА
	|ВЫБРАТЬ
	|	ДД.Подразделение,
	|	ДД.Распоряжение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	СУММА(ДД.ЗапланированоПроизводством + ДД.КВыполнению + ДД.Выполнено + ДД.Брак) КАК ФактЭтапов
	|
	|ПОМЕСТИТЬ ФактЭтапов_ПоПлановойСтоимости
	|
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК ДД
	|ГДЕ
	// Выполняющийся этап
	|	((ДД.НачалоПредварительногоБуфера <= &ОкончаниеПериода
	|		И ДД.ОкончаниеЗавершающегоБуфера >= &НачалоПериода
	|		И (ДД.ЗапланированоПроизводством <> 0 ИЛИ ДД.КВыполнению <> 0))
	|	ИЛИ
	//Выполненный этап
	|	ДД.ОкончаниеЗавершающегоБуфера МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	)
	|	И ДД.Распоряжение.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Подразделение,
	|	ДД.Распоряжение,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Распоряжение,
	|	Т.НалоговоеНазначение,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.КодСтрокиПродукция,
	|	СУММА(ДД.ЗапланированоЗаказом) КАК ПланЭтапов
	|
	|ПОМЕСТИТЬ ПланЭтаповПоЗаказам_ПоПлановойСтоимости
	|
	|ИЗ ФактЭтапов_ПоПлановойСтоимости КАК Т
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЭтапыПроизводства КАК ДД
	|	ПО Т.Распоряжение = ДД.Распоряжение
	|	И Т.КодСтрокиПродукция = ДД.КодСтрокиПродукция
	|	И Т.Этап = ДД.Этап
	|	И ДД.ЗапланированоЗаказом <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Распоряжение,
	|	Т.НалоговоеНазначение,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.КодСтрокиПродукция
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|
	//-- НЕ УТКА
	// Данные по выпуску без распоряжений.
	|ВЫБРАТЬ
	|	Выпуск.Организация,
	|	Выпуск.Подразделение,
	|	ДД.Номенклатура КАК Номенклатура,
	|	ДД.Характеристика КАК Характеристика,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	ДД.Назначение,
	|	ДД.Ссылка КАК ЗаказНаПроизводство,
	|	ДД.Ссылка.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Ссылка.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	ДД.Количество КАК ЗапланированоПродукции,
	|	1 КАК ЗапланированоЭтапов,
	|	1 КАК ВыполненоЭтапов,
	|	ДД.Количество
	|ПОМЕСТИТЬ Данные_ПоПлановойСтоимости
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК Выпуск
	|		ПО (Выпуск.Ссылка = ДД.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО (СН.Ссылка = ДД.Номенклатура)
	|ГДЕ
	|	Выпуск.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Выпуск.Организация В (&МассивОрганизаций)
	|	И НЕ Выпуск.ВыпускПоРаспоряжениям
	|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И Выпуск.Проведен
	//++ НЕ УТКА
	// Данные по выпуску по распоряжениям.
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Д.Организация,
	|	ФК.Подразделение,
	|	П.Номенклатура КАК Номенклатура,
	|	П.Характеристика КАК Характеристика,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	П.Назначение,
	|	ФК.Распоряжение,
	|	ФК.НалоговоеНазначение,
	|	ФК.НалоговоеНазначениеВыпуска,
	|	ФК.КодСтрокиПродукция,
	|	ФК.Этап,
	|	П.Количество,
	|	ПЛ.ПланЭтапов,
	|	ФК.ФактЭтапов,
	|	ВЫБОР
	|		КОГДА ФК.ФактЭтапов <> 0 И ПЛ.ПланЭтапов <> 0
	|		ТОГДА П.Количество * ФК.ФактЭтапов / ПЛ.ПланЭтапов
	|		ИНАЧЕ П.Количество
	|	КОНЕЦ КАК Количество //Это расчетный выпуск
	|
	|ИЗ ФактЭтапов_ПоПлановойСтоимости КАК ФК
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланЭтаповПоЗаказам_ПоПлановойСтоимости КАК ПЛ
	|	ПО ФК.Распоряжение = ПЛ.Распоряжение
	|	И ФК.КодСтрокиПродукция = ПЛ.КодСтрокиПродукция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК П
	|	ПО ФК.Распоряжение = П.Ссылка
	|	И ФК.КодСтрокиПродукция = П.КодСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК Д
	|	ПО ФК.Распоряжение = Д.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|	ПО П.Номенклатура = СН.Ссылка
	|
	//-- НЕ УТКА
	// Поступление от переработчика.
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказ.Организация,
	|	Заказ.Подразделение,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	СпрНоменклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	Заказ.Назначение,
	|	ДД.Распоряжение КАК ЗаказНаПроизводство,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	ДД.Количество КАК ЗапланированоПродукции,
	|	1 КАК ЗапланированоЭтапов,
	|	1 КАК ВыполненоЭтапов,
	|	ДД.Количество
	|ИЗ
	|	РегистрНакопления.ТоварыПолученныеОтПереработчика КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК Заказ
	|		ПО ДД.Распоряжение = Заказ.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ДД.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Аналитика.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Заказ.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|";
	
КонецФункции

Функция ТекстДанныеПоУказаннымТрудозатратам() // вт Данные_ПоУказаннымТрудозатратам
	
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Организация КАК Организация,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.ВидРабот КАК ВидРабот,
	|	Аналитика.Номенклатура КАК Продукция,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	Выпуски.Назначение КАК Назначение,
	|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ДД.ЗаказНаПроизводство.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.ЗаказНаПроизводство.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	ДД.ДокументВыпуска КАК ДокументВыпуска,
	|	ДД.КодСтроки КАК КодСтроки,
	|	ДД.Количество КАК Количество
	|ПОМЕСТИТЬ Данные_ПоУказаннымТрудозатратам
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ДД.АналитикаУчетаПродукции = Аналитика.КлючАналитики
	|		И ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ДД.Активность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|	ПО Аналитика.Номенклатура = СН.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуски
	|	ПО ДД.ДокументВыпуска = Выпуски.Ссылка
	|	И ДД.КодСтроки = Выпуски.КодСтроки
	|
	|ГДЕ
	|	ДД.КодСтрокиПродукция = 0
	|	И ДД.Количество <> 0
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДД.Организация КАК Организация,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.ВидРабот КАК ВидРабот,
	|	Аналитика.Номенклатура КАК Продукция,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	ЕСТЬNULL(З.Назначение, НЕОПРЕДЕЛЕНО) КАК Назначение,
	|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	ДД.ЗаказНаПроизводство.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.ЗаказНаПроизводство.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
	|	ДД.Этап КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
	|	0. КАК КодСтроки,
	|	ДД.Количество КАК Количество
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ДД.АналитикаУчетаПродукции = Аналитика.КлючАналитики
	|		И ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И ДД.Активность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|	ПО Аналитика.Номенклатура = СН.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК З
	|	ПО ДД.ЗаказНаПроизводство = З.Ссылка
	|
	|ГДЕ
	|	ДД.Количество <> 0
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	//-- НЕ УТКА
	|";
	
КонецФункции

Функция ТекстДанныеПоНормативамРасходаМатериала()
	
	Возврат "
	//++ НЕ УТКА
	|ВЫБРАТЬ
	|	ДД.Распоряжение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	ДД.Этап.Владелец КАК Спецификация,
	|	СУММА(ДД.ЗапланированоПроизводством + ДД.КВыполнению + ДД.Выполнено + ДД.Брак) КАК ФактЭтапов
	|
	|ПОМЕСТИТЬ ФактЭтапов_ПоНормативам
	|
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК ДД
	|ГДЕ
	// Выполняющийся этап
	|	((ДД.НачалоПредварительногоБуфера <= &ОкончаниеПериода
	|		И ДД.ОкончаниеЗавершающегоБуфера >= &НачалоПериода
	|		И (ДД.ЗапланированоПроизводством <> 0 ИЛИ ДД.КВыполнению <> 0))
	|	ИЛИ
	//Выполненный этап
	|	(ДД.ОкончаниеЗавершающегоБуфера МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И (ДД.Выполнено <> 0 ИЛИ ДД.Брак <> 0)))
	|	И ДД.Распоряжение.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Распоряжение,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	ДД.Этап.Владелец
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Распоряжение,
	|	Т.НалоговоеНазначение,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.КодСтрокиПродукция,
	|	Т.Спецификация,
	|	СУММА(ДД.ЗапланированоЗаказом) КАК ПланЭтапов
	|
	|ПОМЕСТИТЬ ПланЭтаповПоЗаказам_ПоНормативам
	|
	|ИЗ ФактЭтапов_ПоНормативам КАК Т
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЭтапыПроизводства КАК ДД
	|	ПО Т.Распоряжение = ДД.Распоряжение
	|	И Т.КодСтрокиПродукция = ДД.КодСтрокиПродукция
	|	И Т.Этап = ДД.Этап
	|	И ДД.ЗапланированоЗаказом <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Распоряжение,
	|	Т.НалоговоеНазначение,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.КодСтрокиПродукция,
	|	Т.Спецификация
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|
	//-- НЕ УТКА
	// Данные по выпуску без распоряжений.
	|ВЫБРАТЬ
	|	Выпуск.Организация,
    |	Выпуск.Подразделение,    
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	ДД.Назначение,
	|	ДД.Ссылка КАК ЗаказНаПроизводство,
	|	Выпуск.НалоговоеНазначение КАК НалоговоеНазначение,
	|	Выпуск.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	ДД.Номенклатура КАК НоменклатураВыпуска,
	|	ДД.Характеристика КАК ХарактеристикаВыпуска,
	|	ДД.Спецификация КАК Спецификация,
	|	ДД.Количество КАК ЗапланированоПродукции,
	|	1 КАК ЗапланированоЭтапов,
	|	1 КАК ВыполненоЭтапов,
	|	ДД.Количество
	|ПОМЕСТИТЬ Данные_ПоНормативамРасходаМатериала
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК Выпуск
	|		ПО (Выпуск.Ссылка = ДД.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО (СН.Ссылка = ДД.Номенклатура)
	|ГДЕ
	|	Выпуск.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Выпуск.Организация В (&МассивОрганизаций)
	|	И НЕ Выпуск.ВыпускПоРаспоряжениям
	|	И Выпуск.Проведен
	|
	//++ НЕ УТКА
	// Данные по выпуску по распоряжениям.
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказНаПроизводство.Организация,
    |	Строки.Подразделение,
	|	СН.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	Строки.Назначение,
	|	ДД.Распоряжение,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	Строки.Номенклатура,
	|	Строки.Характеристика,
	|	ДД.Спецификация,
	|	Строки.Количество,
	|	План.ПланЭтапов,
	|	ДД.ФактЭтапов,
	|	ВЫБОР
	|		КОГДА План.ПланЭтапов <> 0
	|		ТОГДА Строки.Количество * ДД.ФактЭтапов / План.ПланЭтапов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество //Это расчетный выпуск
	|
	|ИЗ ФактЭтапов_ПоНормативам КАК ДД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланЭтаповПоЗаказам_ПоНормативам КАК План
	|		ПО ДД.Распоряжение = План.Распоряжение
	|		И ДД.КодСтрокиПродукция = План.КодСтрокиПродукция
	|		И ДД.Спецификация = План.Спецификация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК СтрокиПродукция
	|		ПО ДД.Распоряжение = СтрокиПродукция.Ссылка
	|		И ДД.КодСтрокиПродукция = СтрокиПродукция.КодСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.ВыходныеИзделия КАК Строки
	|		ПО СтрокиПродукция.Ссылка = Строки.Ссылка
	|		И СтрокиПродукция.КлючСвязи = Строки.КлючСвязиПродукция
	|		И ДД.Этап = Строки.Этап
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|		ПО ДД.Распоряжение = ЗаказНаПроизводство.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
	|		ПО Строки.Номенклатура = СН.Ссылка
	//-- НЕ УТКА
	|";
	
КонецФункции

Функция ТекстБазаРаспределения() // вт БазаРаспределения
	
	Возврат "
	// по указанным материалам
	|ВЫБРАТЬ
	|	ДД.Регистратор,
    |	ДД.Подразделение,
	|	ДД.Дата,
	|	ДД.Серия,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.Количество,
	|	Данные.Объем,
	|	Данные.Вес,
	|	0. КАК Стоимость
	|ПОМЕСТИТЬ
	|	БазаРаспределения
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоУказаннымМатериалам КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И Данные.Подразделение = ДД.Подразделение
	|		И Данные.Материал = ДД.Материал
	|		И (Данные.ГруппаПродукции = ДД.ГруппаПродукции ИЛИ ДД.ПоВсемГруппамПродукции)
	|		И (Данные.Назначение = ДД.Назначение ИЛИ ДД.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|ГДЕ
	|	ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов)
	|	ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов)
	|	ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов)
	|
	// по продукции
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Регистратор,
    |	ДД.Подразделение,
	|	ДД.Дата,
	|	ДД.Серия,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.Количество,
	|	Данные.Объем,
	|	Данные.Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоПродукции КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.ГруппаПродукции = ДД.ГруппаПродукции ИЛИ ДД.ПоВсемГруппамПродукции)
	|		И (Данные.Назначение = ДД.Назначение ИЛИ ДД.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И Данные.Подразделение = ДД.Подразделение
	|ГДЕ
	|	ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции)
	|	ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции)
	|	ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции)
	|
	// по плановой стоимости
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Регистратор,
    |	ДД.Подразделение,
	|	ДД.Дата,
	|	ДД.Серия,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	Данные.Количество * Цены.Цена КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоПлановойСтоимости КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.ГруппаПродукции = ДД.ГруппаПродукции ИЛИ ДД.ПоВсемГруппамПродукции)
	|		И (Данные.Назначение = ДД.Назначение ИЛИ ДД.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|		И Данные.Подразделение = ДД.Подразделение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ОкончаниеПериода, ВидЦены = &ВидПлановыхЦен) КАК Цены
	|		ПО Цены.Номенклатура = Данные.Номенклатура
	|		И Цены.Характеристика = Данные.Характеристика
	|ГДЕ
	|	ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции)
	|
	// по указанным трудозатратам
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Регистратор,
    |	ДД.Подразделение,
	|	ДД.Дата,
	|	ДД.Серия,
	|	ВЫБОР
	|		КОГДА Данные.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка)
	|			И Данные.ДокументВыпуска <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Данные.ДокументВыпуска
	|		ИНАЧЕ Данные.ЗаказНаПроизводство
	|	КОНЕЦ КАК ЗаказНаПроизводство,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ВЫБОР
	|		КОГДА Данные.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка)
	|			И Данные.ДокументВыпуска <> НЕОПРЕДЕЛЕНО
	|			ТОГДА Данные.КодСтроки
	|		ИНАЧЕ Данные.КодСтрокиПродукция
	|	КОНЕЦ КАК КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоУказаннымТрудозатратам КАК Данные
	|		ПО Данные.Организация = ДД.Организация
    |		И Данные.Подразделение = ДД.Подразделение
	|		И Данные.ВидРабот = ДД.ВидРабот
	|		И (Данные.ГруппаПродукции = ДД.ГруппаПродукции ИЛИ ДД.ПоВсемГруппамПродукции)
	|		И (Данные.Назначение = ДД.Назначение ИЛИ ДД.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|ГДЕ
	|	ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов)
	|
	// по нормативам
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Регистратор,
    |	ДД.Подразделение,
	|	ДД.Дата,
	|	ДД.Серия,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА СУММА(Продукция.Количество) <> 0 ТОГДА СУММА(Данные.Количество) * СУММА(Материалы.Количество) / СУММА(Продукция.Количество)
	|		ИНАЧЕ 0 КОНЕЦ) КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоНормативамРасходаМатериала КАК Данные
	|		ПО Данные.Организация = ДД.Организация
    |		И Данные.Подразделение = ДД.Подразделение
	|		И (Данные.ГруппаПродукции = ДД.ГруппаПродукции ИЛИ ДД.ПоВсемГруппамПродукции)
	|		И (Данные.Назначение = ДД.Назначение ИЛИ ДД.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК Материалы
	|		ПО Материалы.Ссылка = Данные.Спецификация
	|		И Материалы.Номенклатура = Аналитика.Номенклатура
	|		И (Материалы.Характеристика = Аналитика.Характеристика ИЛИ Материалы.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК Продукция
	|		ПО Продукция.Ссылка = Данные.Спецификация
	|		И Продукция.Номенклатура = Данные.НоменклатураВыпуска
	|		И (Продукция.Характеристика = Данные.ХарактеристикаВыпуска ИЛИ Продукция.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|ГДЕ
	|	ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
    |	ДД.Подразделение,
	|	ДД.Дата,
	|	ДД.Серия,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап
	|";

КонецФункции

Функция ТекстСуммыПоказателей() // вт ОбщиеСуммы
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Серия,
	|	СУММА(ДД.Количество) КАК ОбщееКоличество,
	|	СУММА(ДД.Объем) КАК ОбщийОбъем,
	|	СУММА(ДД.Вес) КАК ОбщийВес,
	|	СУММА(ДД.Стоимость) КАК ОбщаяСтоимость
	|ПОМЕСТИТЬ
	|	ОбщиеСуммы
	|ИЗ
	|	БазаРаспределения КАК ДД
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Серия
	|";
	
КонецФункции

Функция ТекстОписаниеРаспределениеМатериаловИРабот()
	
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	0. КАК Количество,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	0 КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка) КАК БазаРаспределения,
		|	0. КАК КРаспределению,
		|	0. КАК Объем,
		|	0. КАК Вес,
		|	0. КАК Стоимость
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|";
	
КонецФункции

Функция ТекстКРаспределению() // использует Распределить, ОбщиеСуммы  
	
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""Партия"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Дата КАК Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Подразделение,
	|	ДД.Серия,
	|	ДД.Назначение КАК Назначение,
	|	Итог.ОбщееКоличество КАК Количество,
	|	ДД.СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
	|	0. КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
	|	ДД.БазаРаспределения,
	|	ДД.КРаспределению,
	|	Итог.ОбщийОбъем КАК Объем,
	|	Итог.ОбщийВес КАК Вес,
	|	Итог.ОбщаяСтоимость КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеСуммы КАК Итог
	|		ПО Итог.Регистратор = ДД.Регистратор
	|		И Итог.Серия = ДД.Серия
	|ГДЕ
	|	ДД.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|";
	
КонецФункции

Функция ТекстРаспределениеПоБазе() // использует БазаРаспределения
	
	Возврат "
	|ВЫБРАТЬ
	|	""Потребление"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Дата КАК Период,
	|	ДД.Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
    |	ДД.Подразделение КАК Подразделение,
	|	ДД.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК Назначение,
	|	ДД.Количество,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
	|	ДД.ЗаказНаПроизводство,
	|	ДД.НалоговоеНазначение,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
	|	НЕОПРЕДЕЛЕНО КАК БазаРаспределения,
	|	0. КАК КРаспределению,
	|	ДД.Объем,
	|	ДД.Вес,
	|	ДД.Стоимость
	|ИЗ
	|	БазаРаспределения КАК ДД
	|";
	
КонецФункции

Функция ТекстДополнение()
	
	Возврат "
	|ВЫБРАТЬ
	|	""Дополнение"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	ДД.ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Период КАК Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.Номенклатура,
	|	ДД.Характеристика,
	|	ДД.Подразделение,
	|	ДД.Серия,
	|	ДД.Назначение,
	|	ДД.Количество,
	|	ДД.СтатьяКалькуляции,
	|	ДД.ЗаказНаПроизводство,
	|	ДД.НалоговоеНазначение,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	ДД.АналитикаУчетаПродукции,
	|	ДД.Спецификация,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ПодразделениеПолучатель,
	|	НЕОПРЕДЕЛЕНО КАК БазаРаспределения,
	|	0. КАК КРаспределению,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка)
	|	И ДД.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|";
	
КонецФункции

Функция ОтборПоМатериаламИерархия(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Контекст)
	
	ТекстЗапроса = "";
	Если Контекст = "РаспределениеМатериаловИРабот" Тогда
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Д.Ссылка КАК Регистратор,
		|	ТЧ.Материал КАК Материал
		|ИЗ
		|	Документ.РаспределениеПроизводственныхЗатрат.ОтборПоМатериалам КАК ТЧ
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПроизводственныхЗатрат КАК Д
		|	ПО ТЧ.Ссылка = Д.Ссылка
		|
		|ГДЕ
		|	Д.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Д.Организация В (&МассивОрганизаций)
		|	И Д.Проведен";
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводстваПоБазе" Тогда
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Д.Ссылка КАК Регистратор,
		|	ТЧ.Материал КАК Материал
		|ИЗ
		|	Документ.РаспределениеПрочихЗатрат.ОтборПоМатериалам КАК ТЧ
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Д
		|	ПО ТЧ.Ссылка = Д.Ссылка
		|
		|ГДЕ
		|	Д.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Д.Организация В (&МассивОрганизаций)
		|	И Д.Проведен";
	КонецЕсли;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Материалы = Новый ТаблицаЗначений;
	Материалы.Колонки.Добавить("Регистратор", Документы.ТипВсеСсылки());
	Материалы.Колонки.Добавить("Материал", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ЗапросИерархия = Новый Запрос("
		|ВЫБРАТЬ
		|	&Док КАК Регистратор,
		|	Н.Ссылка КАК Материал
		|ИЗ
		|	Справочник.Номенклатура КАК Н
		|ГДЕ
		|	Н.Ссылка В ИЕРАРХИИ(&Ном)
		|	И НЕ Н.ЭтоГруппа");
		
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		ЗапросИерархия.УстановитьПараметр("Док", Результат.Регистратор);
		ЗапросИерархия.УстановитьПараметр("Ном", Результат.Материал);
		РезультатИерархия = ЗапросИерархия.Выполнить().Выбрать();
		Пока РезультатИерархия.Следующий() Цикл
			НоваяСтрока = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатИерархия);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Материалы;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область РасчетПартийПроизводственныхЗатрат

Функция ДанныеДляПартийПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Приоритет ВОЗР, ПериодПоступления, Регистратор, Назначение
		//++ НЕ УТ
		|	,ЗаказНаПроизводство, КодСтрокиПродукция, Этап 
		//-- НЕ УТ
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|";	
	ИсходныйТекстЗапроса =
		ТекстПартииПроизводстваИнициализация() + ";" // вт МатериалыИРаботыВПроизводстве, ПрошлыеПоступления
		+ ТекстОписаниеДанныхДляПартийПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПроизводства() // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПеремещенияПартийПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияВПроизводство()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияВПроизводстве()
		//++ НЕ УТ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииПроизводстваБезПУ()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеПартийПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеПрошлыеДвижения()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПеремещенияВПроизводстве()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияОтчетомПереработчика()
		//-- НЕ УТ
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("ИспользоватьПартионныйУчет", Константы.ИспользоватьПартионныйУчет.Получить());
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПартийПроизводства());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Номенклатура", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииПроизводства(ДанныеДляРасчета, Регистраторы, ВнутренниеДанные = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПартийПроизводства());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Партия, Остаток, ОстатокСторно, Сторно, ПартияСторно, Перемещение, Списание, Дополнение, ВозвратСторно, Корректировка");
	
	ПоляПотреблений = "Организация, АналитикаУчетаНоменклатуры, Назначение";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Корректировка", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Остаток", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Партия", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВозвратСторно", "ДокументИсточник, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратСторно", "Остаток", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратСторно", "Партия", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Партия", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "ОстатокСторно", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "ПартияСторно", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "ДокументИсточник, АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор, КорАналитикаУчетаНоменклатуры");
	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииПроизводственныхЗатрат",
		"ПартииПроизводственныхЗатрат",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументИсточник", "Период"
		//++ НЕ УТ
		, "ГруппаПродукции, НалоговоеНазначениеПартии"
		//-- НЕ УТ
		);
	КонтекстДвижений.Вставить("ЗаполнятьАналитикуПартий", Истина);
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	ВнутренниеДанные = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	
	Возврат РасчетныеПартии;
	
КонецФункции

Функция ТекстПартииПроизводстваИнициализация() // вт МатериалыИРаботыВПроизводстве, ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		//++ НЕ УТ
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		//-- НЕ УТ
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.ДокументИсточник,
		//++ НЕ УТ
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	ДД.ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		//-- НЕ УТ
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийПроизводства() // использует ПрошлыеПоступления
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.КоличествоОстаток < 0 ТОГДА ""ОстатокСторно""
		|		ИНАЧЕ ""Остаток"" КОНЕЦ) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		//++ НЕ УТ
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		//-- НЕ УТ
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		//++ НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		//-- НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.КоличествоОстаток <> 0
		|";
КонецФункции

Функция ТекстПоступленияВПроизводство()
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ""ВозвратСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК ВидЗапасов,
		//++ НЕ УТ
		|	ДД.КорВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		//-- НЕ УТ
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	ДД.ДокументИсточник,
		//++ НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		//-- НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Не ДД.Первичное
		|	И СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|	И &ИспользоватьПартионныйУчет
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ""ВозвратСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		//++ НЕ УТ
		|	ДД.КорВидЗапасов.ГруппаПродукции,
		//-- НЕ УТ
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	ДД.ДокументИсточник,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПервичныеПартииПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ""Корректировка""
		|		КОГДА ДД.Количество < 0 ТОГДА ""ПартияСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		//++ НЕ УТ
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		//-- НЕ УТ
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ) КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		//++ НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		//-- НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.КорректировкаПоступления
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		//++ НЕ УТ
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		//-- НЕ УТ
		|		)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ""Корректировка""
		|		КОГДА ДД.Количество < 0 ТОГДА ""ПартияСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ),
		|	ДД.АналитикаУчетаПартий,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПервичныеПеремещенияПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		//++ НЕ УТ
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		//-- НЕ УТ
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	ДД.Регистратор КАК ДокументИсточник,
		//++ НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		//-- НЕ УТ
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	ДД.АналитикаУчетаПартий,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПотребленияВПроизводстве()
	// распределение материалов на выпуск, списание
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		//++ НЕ УТ
		|	(ВЫБОР
		|		КОГДА НЕ СпрНоменклатура.ГруппаАналитическогоУчета ЕСТЬ NULL ТОГДА СпрНоменклатура.ГруппаАналитическогоУчета
		//++ НЕ УТКА
		|		КОГДА НЕ ПродукцияЗаказа.ГруппаАналитическогоУчета ЕСТЬ NULL ТОГДА ПродукцияЗаказа.ГруппаАналитическогоУчета
		//-- НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК ГруппаПродукции,
		//-- НЕ УТ
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
		|		КОГДА ДД.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КОНЕЦ) КАК ХозяйственнаяОперация,
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА НЕ Передача.Ссылка ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		//++ НЕ УТ
		|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаПродукции
		//-- НЕ УТ
		|		ИНАЧЕ ЕСТЬNULL(Получатель.КлючАналитики, ДД.АналитикаУчетаПродукции) КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		//++ НЕ УТ
		|	ДД.СтатьяКалькуляции,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|		ИНАЧЕ ДД.Спецификация КОНЕЦ) КАК Спецификация,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		//-- НЕ УТ
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеПолучатель КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Получатель
		|		ПО Получатель.Номенклатура = Аналитика.Номенклатура
		|		И Получатель.Характеристика = Аналитика.Характеристика
		|		И Получатель.Серия = Аналитика.Серия
		|		И Получатель.Склад = ДД.ПодразделениеПолучатель
		|		И ДД.ПодразделениеПолучатель <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
		|		ПО Передача.Ссылка = ДД.Регистратор
		//++ НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратМатериаловИзПроизводства КАК Возврат
		|		ПО Возврат.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск КАК СписаниеЗатрат
		|		ПО СписаниеЗатрат.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = СписаниеЗатрат.Номенклатура
		//-- НЕ УТ
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК СтрокиЗаказа
		|		ПО СтрокиЗаказа.Ссылка = ДД.ЗаказНаПроизводство
		|		И СтрокиЗаказа.КодСтроки = ДД.КодСтрокиПродукция
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ПродукцияЗаказа
		|		ПО ПродукцияЗаказа.Ссылка = СтрокиЗаказа.Номенклатура
		//-- НЕ УТКА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		//++ НЕ УТ
		|	И (НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства ИЛИ НЕ &ИспользоватьПартионныйУчет)
		|	И (НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика ИЛИ НЕ &ИспользоватьПартионныйУчет)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		//-- НЕ УТ
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		//++ НЕ УТ
		|	(ВЫБОР
		|		КОГДА НЕ СпрНоменклатура.ГруппаАналитическогоУчета ЕСТЬ NULL ТОГДА СпрНоменклатура.ГруппаАналитическогоУчета
		//++ НЕ УТКА
		|		КОГДА НЕ ПродукцияЗаказа.ГруппаАналитическогоУчета ЕСТЬ NULL ТОГДА ПродукцияЗаказа.ГруппаАналитическогоУчета
		//-- НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ),
		//-- НЕ УТ
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
		|		КОГДА ДД.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	(ВЫБОР КОГДА НЕ Передача.Ссылка ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		//++ НЕ УТ
		|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаПродукции
		//-- НЕ УТ
		|		ИНАЧЕ ЕСТЬNULL(Получатель.КлючАналитики, ДД.АналитикаУчетаПродукции) КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.Назначение,
		//++ НЕ УТ
		|	ДД.СтатьяКалькуляции,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|		ИНАЧЕ ДД.Спецификация КОНЕЦ),
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		//-- НЕ УТ
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеПолучатель,
		|	ДД.Номенклатура
		|";
КонецФункции

//++ НЕ УТ
Функция ТекстПервичныеПартииПроизводстваБезПУ()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЕСТЬNULL(КорВидыЗапасов.Ссылка, ДД.ВидЗапасов) КАК ВидЗапасов,
		|	ЕСТЬNULL(КорВидыЗапасов.ГруппаПродукции, ДД.ВидЗапасов.ГруппаПродукции) КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
		|		ПО КорВидыЗапасов.Ссылка = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ &ИспользоватьПартионныйУчет
		|	И (ДД.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПередачаСырьяПереработчику)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(КорВидыЗапасов.Ссылка, ДД.ВидЗапасов),
		|	ЕСТЬNULL(КорВидыЗапасов.ГруппаПродукции, ДД.ВидЗапасов.ГруппаПродукции),
		|	ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	ДД.Номенклатура
		|";
КонецФункции

Функция ТекстДополнениеПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика И ДД.ДокументПоступления = ДД.Регистратор
		|			ТОГДА ""Дополнение""
		|		ИНАЧЕ ""Списание"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика И ДД.ДокументПоступления = ДД.Регистратор
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	ДД.СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|	ДД.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	ДД.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика И ДД.ДокументПоступления = ДД.Регистратор)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика И ДД.ДокументПоступления = ДД.Регистратор
		|			ТОГДА ""Дополнение""
		|		ИНАЧЕ ""Списание"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика И ДД.ДокументПоступления = ДД.Регистратор
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ДокументИсточник,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	ДД.АналитикаУчетаПартий,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов,
		|	ДД.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстДополнениеПрошлыеДвижения()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	ДД.СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов,
		|	ДД.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Движения
		|		ПО Движения.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ДокументИсточник,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов,
		|	ДД.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПеремещенияВПроизводстве()
	// распределение материалов на выпуск, списание
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.Назначение,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	НЕОПРЕДЕЛЕНО КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ПеремещениеМатериаловВПроизводстве
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Назначение,
		|	ДД.Номенклатура
		|";
	КонецФункции
	
Функция ТекстПотребленияОтчетомПереработчика()
	// распределение материалов на выпуск, списание
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(Строки.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Дата КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Строки.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	(ВЫБОР
		|		КОГДА ДД.ПоЗаказам ТОГДА ДД.ЗаказПереработчику
		|		ИНАЧЕ Строки.ДокументПоступления КОНЕЦ) КАК ЗаказНаПроизводство,
		|	НЕОПРЕДЕЛЕНО КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	Строки.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.ВидыЗапасов КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = Строки.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ПоЗаказам ТОГДА ДД.ЗаказПереработчику
		|		ИНАЧЕ Строки.ДокументПоступления КОНЕЦ),
		|	Строки.ВидЗапасов.Назначение,
		|	Строки.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|";
КонецФункции
//-- НЕ УТ
#КонецОбласти

//++ НЕ УТ
#Область РасчетПартийНезавершенногоПроизводства

Функция ДанныеДляПартийНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, ЗаказНаПроизводство, Приоритет, Период, Регистратор
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|";
	ИсходныйТекстЗапроса =
		ТекстПартииНЗПИнициализация() + ";" // вт ПрошлыеПоступленияНЗП, ЗаказыКРаспределению, ДолиСтоимости, ВыпускиБезЗаказов, РаспределениеНаВыпускиБезЗаказов, РаспределенияПоБазе
		+ ТекстОписаниеДанныхДляПартийНЗП()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийНЗП() // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииНЗП() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииПереработчик() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеПартийНЗП()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеПрошлыеПартииНЗП() // использует МатериалыИРаботыВПроизводстве
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииНЗПБезЗаказов() // использует ВыпускиБезЗаказов, РаспределениеНаВыпускиБезЗаказов
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииРаспределеноПоБазе() // использует ВыпускиБезЗаказов
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстМаршрутныеЛисты()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрошлыеМаршрутныеЛисты()
		//-- НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетыПереработчика()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписанияЗатратНаВыпуск()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписанияЗатратНаВыпускПоБазе() // использует РаспределенияПоБазе
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВыпускиПоЗаказам()
		//-- НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВыпускиБезЗаказов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВыпускиБезЗаказовБезСписанияЗатратНаВыпуск()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияОтПереработчиков()
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДавальческиеПолуфабрикаты() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДавальческаяПродукция()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетыДавальцам()
		//-- НЕ УТКА
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПартийНЗП());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Организация", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииНЗП(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина)
	
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПартийНЗП());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений
	КонтекстЦепочек = ОписаниеЦепочек("Распределение, ЗатратыБезЗаказа, Перемещение, Партия, Остаток, 
	|Сторно, Выпуск, ВыпускБезЗаказа, Переработка, ОтчетДавальцу, ПолуфабрикатДавальца, ПродукцияДавальца, Дополнение");
	
	ПоляПотреблений = "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, ДокументВыпуска, НомерГруппыЗатрат";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "ПолуфабрикатДавальца", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ЗатратыБезЗаказа", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ЗатратыБезЗаказа", "Партия", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Распределение", "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПолуфабрикатДавальца", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПолуфабрикатДавальца", "ПродукцияДавальца", "Организация, Назначение, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПродукцияДавальца", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПродукцияДавальца", "Выпуск", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПродукцияДавальца", "ВыпускБезЗаказа", "Организация, Назначение, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ОтчетДавальцу", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ОтчетДавальцу", "ПродукцияДавальца", "Организация, Назначение, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Переработка", "Организация, ЗаказНаПроизводство, Продукция, Характеристика, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Переработка", "Распределение", "Организация, ЗаказНаПроизводство, Продукция, Характеристика, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускБезЗаказа", "Регистратор, КодСтрокиПродукция");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускБезЗаказа", "ЗатратыБезЗаказа", "ДокументВыпуска, КодСтрокиПродукция");

	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииНезавершенногоПроизводства",
		"ПартииНезавершенногоПроизводства",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Знаменатель", "Знаменатель", "ДокументИсточник", "Период");
	КонтекстДвижений.Вставить("ПоляСуммирования", "Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница");
	КонтекстДвижений.Вставить("ПоляГруппировки", ПереченьПолей(РасчетныеПартии.Колонки, КонтекстДвижений.ПоляСуммирования));
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
		
	// Шаг 4: Удаляем нерассчитанные партии
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	Возврат РасчетныеПартии;
	
КонецФункции

Функция ТекстПартииНЗПИнициализация() // вт ПрошлыеПоступленияНЗП, ЗаказыКРаспределению, ДолиСтоимости, ВыпускиБезЗаказов, РаспределениеНаВыпускиБезЗаказов, РаспределенияПоБазе, МатериалыИРаботыВПроизводстве
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступленияНЗП
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииНезавершенногоПроизводства КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления
		|;
		|////////////////////////////////////////////////////////////////////////////
		//++ НЕ УТКА
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Распоряжение.Распоряжение КАК Заказ,
		|	Т.Распоряжение.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ
		|	ЗаказыКРаспределению
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции.ОстаткиИОбороты(&НачалоПериода, &ОкончаниеПериода, , , Распоряжение.Организация В (&МассивОрганизаций)) КАК Т
		|ГДЕ
		|	Т.ЗаказаноПриход <> 0
		|	ИЛИ Т.ЗаказаноКонечныйОстаток <> 0
		|;
		|////////////////////////////////////////////////////////////////////////////
		//-- НЕ УТКА
		|ВЫБРАТЬ
		|	Строки.ЗаказПереработчику КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	Строки.НомерГруппыЗатрат,
		|	СУММА(ВЫБОР Строки.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Строки.ДоляСтоимости КОНЕЦ) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ДолиСтоимости
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Продукция КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	Строки.ЗаказПереработчику,
		|	Строки.НомерГруппыЗатрат
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	Строки.ДокументПоступления КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	Строки.НомерГруппыЗатрат,
		|	СУММА(ВЫБОР Строки.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Строки.ДоляСтоимости КОНЕЦ) КАК ДоляСтоимости
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Продукция КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	Строки.ДокументПоступления,
		|	Строки.НомерГруппыЗатрат
		//++ НЕ УТКА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	0 КАК НомерГруппыЗатрат,
		|	СУММА(ВЫБОР ДД.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ ДД.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК ДоляСтоимости
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыКРаспределению КАК Заказы
		|		ПО Заказы.Заказ = МаршрутныйЛист.Распоряжение
		|			И Заказы.КодСтроки = МаршрутныйЛист.КодСтроки
		|ГДЕ
		|	ДД.Период >= &НачалоПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец
		//-- НЕ УТКА
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Ссылка КАК Распоряжение,
		|	СУММА(ВЫБОР Выходы.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Выходы.ДоляСтоимости КОНЕЦ) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ВыпускиБезЗаказов
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.ЗаказНаПроизводство КАК ДокументВыпуска,
		|	ДД.КодСтрокиПродукция КАК КодСтроки,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Характеристика КАК Характеристика,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	МАКСИМУМ(Выпуск.Количество) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	РаспределениеНаВыпускиБезЗаказов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуск
		|	ПО Выпуск.Ссылка = ДД.ЗаказНаПроизводство
		|		И Выпуск.КодСтроки = ДД.КодСтрокиПродукция
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.СписаниеЗатратНаВыпуск)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Выпуск.Номенклатура,
		|	Выпуск.Характеристика
		|	,ДД.НалоговоеНазначение
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Списание.Ссылка КАК СписаниеНаВыпуск,
		|	ДД.Период,
		|	ДД.Регистратор
		|ПОМЕСТИТЬ
		|	РаспределенияПоБазе
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск КАК Списание
		|		ПО Списание.Ссылка = ДД.ЗаказНаПроизводство
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляПартийНЗП()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ДД.ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	0. КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеВыпуска,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.ДокументИсточник,
		|	ДД.ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийНЗП() // использует ПрошлыеПоступления
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ЕСТЬNULL(Этапы.Владелец, ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)) КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЕСТЬNULL(Доли.ДоляСтоимости, 1) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступленияНЗП КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|";
КонецФункции

Функция ТекстПервичныеПартииНЗП() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	ДД.НомерГруппыЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник,
		|	ДД.НомерГруппыЗатрат
		|";
КонецФункции

Функция ТекстПервичныеПартииПереработчик() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ПоступлениеОтПереработчика ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ) КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	ДД.ДокументИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ПоступлениеОтПереработчика ТОГДА ДД.ЗаказНаПроизводство
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументВыпуска,
		|	ДД.НомерГруппыЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.НомерГруппыЗатрат = ДД.НомерГруппыЗатрат
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетПереработчика
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	Аналитика.Склад,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ПоступлениеОтПереработчика ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.ЗаказНаПроизводство КОНЕЦ),
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.НомерГруппыЗатрат
		|";
КонецФункции

Функция ТекстДополнениеПартийНЗП()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЕСТЬNULL(Этапы.Владелец, ДД.Спецификация)
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция КАК КодСтрокиПродукция,
		|	ЕСТЬNULL(Этапы.Владелец, ДД.Спецификация) КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	0. КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	ДД.ДокументИсточник,
		|	ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|			ТОГДА ДД.ЗаказНаПроизводство
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА НЕ Заказ.Номенклатура ЕСТЬ NULL ТОГДА Заказ.Номенклатура
		//-- НЕ УТКА
		|		КОГДА НЕ ЗаказПереработчику.Номенклатура ЕСТЬ NULL ТОГДА ЗаказПереработчику.Номенклатура
		|		КОГДА НЕ Выпуск.Номенклатура ЕСТЬ NULL ТОГДА Выпуск.Номенклатура
		|		ИНАЧЕ ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО)
		|	КОНЕЦ КАК Продукция,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА НЕ Заказ.Характеристика ЕСТЬ NULL ТОГДА Заказ.Характеристика
		//-- НЕ УТКА
		|		КОГДА НЕ ЗаказПереработчику.Характеристика ЕСТЬ NULL ТОГДА ЗаказПереработчику.Характеристика
		|		КОГДА НЕ Выпуск.Характеристика ЕСТЬ NULL ТОГДА Выпуск.Характеристика
		|		ИНАЧЕ ЕСТЬNULL(КорАналитика.Характеристика, НЕОПРЕДЕЛЕНО)
		|	КОНЕЦ КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
		|		ПО КорАналитика.Ссылка = ДД.КорАналитикаУчетаНоменклатуры
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК Заказ
		|		ПО Заказ.Ссылка = ДД.ЗаказНаПроизводство
		|		И Заказ.КодСтроки = ДД.КодСтрокиПродукция
		//-- НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Продукция КАК ЗаказПереработчику
		|		ПО ЗаказПереработчику.Ссылка = ДД.ЗаказНаПроизводство
		|		И ЗаказПереработчику.КодСтроки = ДД.КодСтрокиПродукция
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуск
		|		ПО Выпуск.Ссылка = ДД.ЗаказНаПроизводство
		|		И Выпуск.КодСтроки = ДД.КодСтрокиПродукция
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.МаршрутныйЛистПроизводства
		//-- НЕ УТКА
		|		)
		|	И ДД.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ЗаказНаПроизводство,
		|	ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЕСТЬNULL(Этапы.Владелец, ДД.Спецификация)
		|		ИНАЧЕ ДД.ЗаказНаПроизводство
		|	КОНЕЦ,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец,
		|	ДД.Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА НЕ Заказ.Номенклатура ЕСТЬ NULL ТОГДА Заказ.Номенклатура
		//-- НЕ УТКА
		|		КОГДА НЕ ЗаказПереработчику.Номенклатура ЕСТЬ NULL ТОГДА ЗаказПереработчику.Номенклатура
		|		КОГДА НЕ Выпуск.Номенклатура ЕСТЬ NULL ТОГДА Выпуск.Номенклатура
		|		ИНАЧЕ ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО)
		|	КОНЕЦ,
		|	ВЫБОР
		//++ НЕ УТКА
		|		КОГДА НЕ Заказ.Характеристика ЕСТЬ NULL ТОГДА Заказ.Характеристика
		//-- НЕ УТКА
		|		КОГДА НЕ ЗаказПереработчику.Характеристика ЕСТЬ NULL ТОГДА ЗаказПереработчику.Характеристика
		|		КОГДА НЕ Выпуск.Характеристика ЕСТЬ NULL ТОГДА Выпуск.Характеристика
		|		ИНАЧЕ ЕСТЬNULL(КорАналитика.Характеристика, НЕОПРЕДЕЛЕНО)
		|	КОНЕЦ
		|";
КонецФункции

Функция ТекстДополнениеПрошлыеПартииНЗП() // использует МатериалыИРаботыВПроизводстве
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	0. КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Движения
		|		ПО Движения.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник
		|";
КонецФункции

Функция ТекстПервичныеПартииНЗПБезЗаказов() // использует РаспределениеНаВыпускиБезЗаказов
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА ""ЗатратыБезЗаказа""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|			И ТИПЗНАЧЕНИЯ(ЕСТЬNULL(Распределение.Регистратор, НЕОПРЕДЕЛЕНО)) <>ТИП(Документ.РаспределениеПроизводственныхЗатрат)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Спецификация КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	МАКСИМУМ(ЕСТЬNULL(Распределение.ДоляСтоимости, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	Распределение.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	ДД.ДокументИсточник,
		|	Распределение.ДокументВыпуска КАК ДокументВыпуска,
		|	ДД.НомерГруппыЗатрат,
		|	ЕСТЬNULL(Распределение.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Продукция,
		|	ЕСТЬNULL(Распределение.Характеристика, НЕОПРЕДЕЛЕНО) КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РаспределениеНаВыпускиБезЗаказов КАК Распределение
		|		ПО Распределение.Регистратор = ДД.Регистратор
		|		И Распределение.ДокументВыпуска = ДД.ЗаказНаПроизводство
		|		И Распределение.КодСтроки = ДД.КодСтрокиПродукция
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.ЗаказНаПроизводство = НЕОПРЕДЕЛЕНО
		|		ИЛИ ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции)
		|	И ДД.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.АктВыполненныхРабот
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА ""ЗатратыБезЗаказа""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|			И ТИПЗНАЧЕНИЯ(ЕСТЬNULL(Распределение.Регистратор, НЕОПРЕДЕЛЕНО)) <>ТИП(Документ.РаспределениеПроизводственныхЗатрат)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Спецификация,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ДокументИсточник,
		|	Распределение.НалоговоеНазначениеВыпуска,
		|	Распределение.ДокументВыпуска,
		|	ДД.НомерГруппыЗатрат,
		|	ЕСТЬNULL(Распределение.Номенклатура, НЕОПРЕДЕЛЕНО),
		|	ЕСТЬNULL(Распределение.Характеристика, НЕОПРЕДЕЛЕНО)
		|";
КонецФункции

Функция ТекстПартииРаспределеноПоБазе() // использует ВыпускиБезЗаказов
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.Спецификация КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	МАКСИМУМ(Выпуски.ДоляСтоимости) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	ДД.НомерГруппыЗатрат,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыпускиБезЗаказов КАК Выпуски
		|		ПО Выпуски.Распоряжение = ДД.ЗаказНаПроизводство
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ЗаказНаПроизводство ССЫЛКА Документ.СписаниеЗатратНаВыпуск
		|	И ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Спецификация,
		|	ДД.СтатьяКалькуляции,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументИсточник,
		|	ДД.НомерГруппыЗатрат
		|";
КонецФункции

//++ НЕ УТКА

Функция ТекстМаршрутныеЛисты()
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	СУММА(ВЫБОР ДД.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ ДД.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК Знаменатель,
		|	СУММА(ДД.Заказано) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|ГДЕ
		|	ДД.Период >= &НачалоПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|	И ДД.Заказано <> 0
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛист.Организация,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

Функция ТекстПрошлыеМаршрутныеЛисты()
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	СУММА(ВЫБОР Продукция.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Продукция.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК Знаменатель,
		|	СУММА(Продукция.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	Продукция.Номенклатура КАК Продукция,
		|	Продукция.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РаспоряженияНаВыпускПродукции КАК Приходы
		|		ПО Приходы.Регистратор = ДД.Распоряжение
		|		И Приходы.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Продукция
		|		ПО Продукция.Ссылка = МаршрутныйЛист.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|	И Приходы.Регистратор ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛист.Организация,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	Продукция.Номенклатура,
		|	Продукция.Характеристика
		|";
КонецФункции

//-- НЕ УТКА

Функция ТекстОтчетыПереработчика()
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	(ВЫБОР
		|		КОГДА ДД.ПоЗаказам ТОГДА Строки.ЗаказПереработчику
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	СУММА(ВЫБОР Строки.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Строки.ДоляСтоимости КОНЕЦ) КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ПоЗаказам ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Строки.ДокументПоступления КОНЕЦ) КАК ДокументВыпуска,
		|	Строки.НомерГруппыЗатрат,
		|	Строки.Номенклатура КАК Продукция,
		|	Строки.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Продукция КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ПоЗаказам ТОГДА Строки.ЗаказПереработчику
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	Строки.Номенклатура,
		|	Строки.Характеристика,
		|	(ВЫБОР
		|		КОГДА ДД.ПоЗаказам ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Строки.ДокументПоступления КОНЕЦ),
		|	Строки.НомерГруппыЗатрат
		|";
КонецФункции

Функция ТекстСписанияЗатратНаВыпуск()
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	""ЗатратыБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.Спецификация КАК ЗаказНаПроизводство,
		|	Выходы.КодСтроки КАК КодСтрокиПродукция,
		|	ДД.Спецификация КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	СУММА(ВЫБОР Выходы.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Выходы.ДоляСтоимости КОНЕЦ) КАК Знаменатель,
		|	СУММА(Выходы.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	Выходы.Распоряжение КАК ДокументИсточник,
		|	Выходы.Распоряжение КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	ДД.Спецификация,
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки,
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

Функция ТекстСписанияЗатратНаВыпускПоБазе() // использует РаспределенияПоБазе
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	""ЗатратыБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	Распределение.Период,
		|	Распределение.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.Спецификация КАК ЗаказНаПроизводство,
		|	Выходы.КодСтроки КАК КодСтрокиПродукция,
		|	ДД.Спецификация КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	СУММА(ВЫБОР Выходы.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Выходы.ДоляСтоимости КОНЕЦ) КАК Знаменатель,
		|	СУММА(Выходы.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	Выходы.Распоряжение КАК ДокументИсточник,
		|	Выходы.Распоряжение КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределенияПоБазе КАК Распределение
		|		ПО Распределение.СписаниеНаВыпуск = ДД.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	Распределение.Период,
		|	Распределение.Регистратор,
		|	ДД.Организация,
		|	ДД.Спецификация,
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки,
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

//++ НЕ УТКА

Функция ТекстВыпускиПоЗаказам()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Выпуск"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	СУММА(ДД.Заказано) КАК Знаменатель,
		|	СУММА(ДД.Заказано) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	(ВЫБОР КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = ДД.ВидЗапасов.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	МаршрутныйЛист.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	(ВЫБОР КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

Функция ТекстДавальческиеПолуфабрикаты() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ПолуфабрикатДавальца"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	ДД.НомерГруппыЗатрат,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|	И ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И ДД.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец,
		|	ДД.Этап,
		|	ДД.ВидЗапасов.Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.НомерГруппыЗатрат
		|";
КонецФункции

Функция ТекстДавальческаяПродукция()
	Возврат "
		|ВЫБРАТЬ
		|	45 КАК Приоритет,
		|	""ПродукцияДавальца"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	СУММА(Строки.Количество) КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	Строки.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	Строки.Номенклатура КАК Продукция,
		|	Строки.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	Строки.Назначение,
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

Функция ТекстОтчетыДавальцам()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ОтчетДавальцу"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика
		|";
КонецФункции
//-- НЕ УТКА

Функция ТекстВыпускиБезЗаказов()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ВыпускБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА
		//-- НЕ УТКА
		|		 ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		//++ НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ)
		//-- НЕ УТКА
		|		  КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.КодСтроки КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаПродукции,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ДД.КорРазделУчета,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	ДД.Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Распоряжение КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаСписаниеПоНормативам КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Выпуск
		|		ПО Выпуск.Ссылка = ДД.Регистратор
		|		И Выпуск.КодСтроки = ДД.КодСтроки
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = ДД.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		//-- НЕ УТКА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Выпуск.ТипСтоимости <> ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		//-- НЕ УТКА
		|	ДД.Организация,
		|	ДД.Распоряжение,
		|	ДД.КодСтроки,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.КорВидЗапасов,
		|	ДД.КорРазделУчета,
		|	ДД.НалоговоеНазначение,
		|	ДД.Назначение,
		|	ДД.Распоряжение
		|";
КонецФункции

Функция ТекстВыпускиБезЗаказовБезСписанияЗатратНаВыпуск()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ВыпускБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА
		//-- НЕ УТКА
		|		 ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		//++ НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ)
		//-- НЕ УТКА
		|		  КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	Т.КодСтроки КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	(ВЫБОР КОГДА Т.СписатьНаРасходы ТОГДА АналитикаВПодразделении.КлючАналитики
		|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаПродукции,
		|	СУММА(Т.Количество) КАК Знаменатель,
		|	СУММА(Т.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	(ВЫБОР ДД.НаправлениеВыпуска
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА Т.СписатьНаРасходы ТОГДА АналитикаВПодразделении.КлючАналитики
		|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	Т.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	Т.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	Т.Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Ссылка КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	Т.Номенклатура КАК Продукция,
		|	Т.Характеристика КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Т
		|		ПО Т.Ссылка = ДД.Ссылка
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = Т.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		//-- НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
		|	ПО
		|		Т.Номенклатура = АналитикаВПодразделении.Номенклатура
		|		И Т.Характеристика = АналитикаВПодразделении.Характеристика
		|		И (ДД.Подразделение = АналитикаВПодразделении.Склад)
		|		И ВЫБОР
		|			КОГДА Т.СтатусУказанияСерий = 14
		|			ТОГДА Т.Серия = АналитикаВПодразделении.Серия
		|			ИНАЧЕ АналитикаВПодразделении.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|		   КОНЕЦ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК СП
		|		ПО СП.Ссылка = ДД.Подразделение
		|		И НЕ СП.ИспользуетсяСписаниеЗатратНаВыпуск
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И НЕ ДД.ВыпускПоРаспоряжениям
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		//-- НЕ УТКА
		|	ДД.Организация,
		|	Т.КодСтроки,
		|	(ВЫБОР КОГДА Т.СписатьНаРасходы ТОГДА АналитикаВПодразделении.КлючАналитики
		|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	Т.Номенклатура,
		|	Т.Характеристика,
		|	Т.ВидЗапасов,
		|	Т.Назначение
		|";
КонецФункции

Функция ТекстПоступленияОтПереработчиков()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Переработка"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Строки.ЗаказПереработчику КОНЕЦ) КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
		|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	СУММА(Строки.Количество) КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
		|	Строки.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	Строки.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	Строки.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА ДД.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументВыпуска,
		|	0. КАК НомерГруппыЗатрат,
		|	Строки.Номенклатура КАК Продукция,
		|	Строки.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ПоступлениеОтПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Строки.ЗаказПереработчику КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА ДД.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

#КонецОбласти


#Область РасчетТрудозатратНезавершенногоПроизводства

Функция ДанныеДляТрудозатратНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Период, Регистратор, Приоритет
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|";
	ИсходныйТекстЗапроса =
		ТекстТрудозатратыНЗПИнициализация() + ";" // вт ЗаказыКРаспределению, ДолиСтоимости, ВыпускиБезЗаказов, ПриходыБезЗаказов, КРаспределению, ОстаткиБезЗаказов
		+ ТекстОписаниеДанныхДляТрудозатратНЗП()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиТрудозатратБезЗаказов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеТрудозатратыБезЗаказов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеТрудозатратБезЗаказов()
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиТрудозатратНЗП()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеТрудозатратыНЗП() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыМаршрутныеЛисты()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыВыпускиПоЗаказам()
		//-- НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыБезЗаказовПотребление() // Использует ВыпускиБезЗаказов
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыБезЗаказовПеремещение()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыБезЗаказовРаспределение() // Использует КРаспределению
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыВыпускиБезЗаказов()
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыОтчетыДавальцам()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыДавальческиеПолуфабрикаты() // использует ДолиСтоимости
		//-- НЕ УТКА
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляТрудозатратНЗП());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Организация", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеТрудозатратыНЗП(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляТрудозатратНЗП());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений
	КонтекстЦепочек = ОписаниеЦепочек("Партия, ПартияБезЗаказа, Остаток, ОстатокБезЗаказа, Дополнение, МаршрутныйЛист, Распределение, Потребление, Перемещение,
	|Выпуск, ВыпускБезЗаказа, ОтчетДавальцу, ПолуфабрикатДавальца");
	
	ПоляПотреблений = "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "МаршрутныйЛист", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "МаршрутныйЛист", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "МаршрутныйЛист", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "МаршрутныйЛист", "ПолуфабрикатДавальца", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПолуфабрикатДавальца", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПолуфабрикатДавальца", "Выпуск", "Организация, Назначение, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "МаршрутныйЛист", "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", "РазделУчета, Организация, Подразделение, ВидРабот");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ПартияБезЗаказа", "РазделУчета, Организация, Подразделение, ВидРабот");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ОстатокБезЗаказа", "РазделУчета, Организация, Подразделение, ВидРабот");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Распределение", "РазделУчета, Организация, Подразделение, ВидРабот");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", "РазделУчета, Организация, Подразделение, ВидРабот");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "ПартияБезЗаказа", "РазделУчета, Организация, Подразделение, ВидРабот");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускБезЗаказа", "ДокументВыпуска, КодСтроки");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускБезЗаказа", "Перемещение", "ДокументВыпуска, КодСтроки");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ОтчетДавальцу", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ОтчетДавальцу", "Выпуск", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ОтчетДавальцу", "ВыпускБезЗаказа", "Организация, Назначение, Продукция, Характеристика");
	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ТрудозатратыНезавершенногоПроизводства",
		"ТрудозатратыНезавершенногоПроизводства",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, НормативнаяСтоимость, Стоимость, СтоимостьРегл",
		"Знаменатель", "Знаменатель", "ДокументИсточник", "Период");
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамТолкающимМетодом(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
		
	// Шаг 4: Удаляем нерассчитанные партии
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	Возврат РасчетныеПартии;
	
КонецФункции

Функция ТекстТрудозатратыНЗПИнициализация() // вт ЗаказыКРаспределению, ДолиСтоимости, ВыпускиБезЗаказов, ПриходыБезЗаказов, КРаспределению, ОстаткиБезЗаказов
	Возврат "
		//++ НЕ УТКА
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Распоряжение.Распоряжение КАК Заказ,
		|	Т.Распоряжение.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ
		|	ЗаказыКРаспределению
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции.ОстаткиИОбороты(&НачалоПериода, &ОкончаниеПериода, , , Распоряжение.Организация В (&МассивОрганизаций)) КАК Т
		|ГДЕ
		|	Т.ЗаказаноПриход <> 0
		|	ИЛИ Т.ЗаказаноКонечныйОстаток <> 0
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	СУММА(ВЫБОР ДД.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ ДД.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ДолиСтоимости
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыКРаспределению КАК Заказы
		|		ПО Заказы.Заказ = МаршрутныйЛист.Распоряжение
		|			И Заказы.КодСтроки = МаршрутныйЛист.КодСтроки
		|ГДЕ
		|	ДД.Период >= &НачалоПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец
		|;
		|////////////////////////////////////////////////////////////////////////////
		//-- НЕ УТКА
		|ВЫБРАТЬ
		|	ДД.Ссылка КАК Ссылка,
		|	СУММА(Выходы.Количество) КАК Количество,
		|	СУММА(Выходы.ДоляСтоимости) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ВыпускиБезЗаказов
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидРабот,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ПриходыБезЗаказов
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		//++ НЕ УТКА
		|	И ДД.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		//-- НЕ УТКА
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидРабот
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидРабот,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Распределено) КАК Распределено
		|ПОМЕСТИТЬ
		|	КРаспределению
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.Подразделение,
		|		ДД.ВидРабот,
		|		ДД.КоличествоНачальныйОстаток + ДД.КоличествоПриход КАК Количество,
		|		0 КАК Распределено
		|	ИЗ
		|		РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.ОстаткиИОбороты(&НачалоПериода, &ОкончаниеПериода, Период, , Организация В (&МассивОрганизаций)) КАК ДД
		//++ НЕ УТКА
		|	ГДЕ
		|		ДД.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		|		ИЛИ ДД.ЗаказНаПроизводство = НЕОПРЕДЕЛЕНО
		//-- НЕ УТКА
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ВидыРабот.Подразделение,
		|		ВидыРабот.ВидРабот,
		|		-ВидыРабот.Количество,
		|		ВидыРабот.Количество КАК Распределено
		|	ИЗ
		|		Документ.СписаниеЗатратНаВыпуск КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.Трудозатраты КАК ВидыРабот
		|			ПО ВидыРабот.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ВидыРабот.Подразделение,
		|		ВидыРабот.ВидРабот,
		|		-ВидыРабот.Количество,
		|		0 КАК Распределено
		|	ИЗ
		|		Документ.ИзделияИЗатратыНЗП КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзделияИЗатратыНЗП.Трудозатраты КАК ВидыРабот
		|			ПО ВидыРабот.Ссылка = ДД.Ссылка
		|	ГДЕ
		|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Проведен
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидРабот
		|
		|ИМЕЮЩИЕ
		|	СУММА(ДД.Количество) > 0
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	ДД.КоличествоОстаток КАК Знаменатель
		|ПОМЕСТИТЬ
		|	ОстаткиБезЗаказов
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		//++ НЕ УТКА
		|ГДЕ
		|	ДД.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		//-- НЕ УТКА
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляТрудозатратНЗП()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыФондовВзносов.ПустаяСсылка) КАК ВидФондаВзносов,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыРаботСотрудников.ПустаяСсылка) КАК ВидРабот,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	0. КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляцииБезЗаказа,
		|	ДД.ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиТрудозатратБезЗаказов() // использует ОстаткиБезЗаказов
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ОстатокБезЗаказа"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ДД.ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	Остатки.Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.НормативнаяСтоимостьОстаток КАК НормативнаяСтоимость,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ИСТИНА КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО как СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиБезЗаказов КАК Остатки
		|		ПО Остатки.Организация = ДД.Организация
		|		И Остатки.Подразделение = ДД.Подразделение
		|		И Остатки.ВидРабот = ДД.ВидРабот
		|		И Остатки.ГруппаПродукции = ДД.ГруппаПродукции
		//++ НЕ УТКА
		|ГДЕ
		|	ДД.ЗаказНаПроизводство = ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
		//-- НЕ УТКА
		|";
КонецФункции

Функция ТекстПервичныеТрудозатратыБезЗаказов() // использует ПриходыБезЗаказов
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ПартияБезЗаказа"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ДД.ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	Приходы.Количество КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.НормативнаяСтоимость) КАК НормативнаяСтоимость,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходыБезЗаказов КАК Приходы
		|		ПО Приходы.Организация = ДД.Организация
		|		И Приходы.Подразделение = ДД.Подразделение
		|		И Приходы.ВидРабот = ДД.ВидРабот
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.КодСтрокиПродукция = 0
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидФондаВзносов,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	Приходы.Количество,
		|	ДД.СтатьяКалькуляцииБезЗаказа
		|";
КонецФункции

Функция ТекстДополнениеТрудозатратБезЗаказов()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ДД.ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	0. КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.НормативнаяСтоимость) КАК НормативнаяСтоимость,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДД.Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.КодСтрокиПродукция = 0
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ВидФондаВзносов,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	ДД.Сотрудник,
		|	ДД.СтатьяКалькуляцииБезЗаказа
		|";
КонецФункции

//++ НЕ УТКА
Функция ТекстОстаткиТрудозатратНЗП() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ВидФондаВзносов,
		|	Этапы.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	ЕСТЬNULL(Доли.ДоляСтоимости, 1) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.НормативнаяСтоимостьОстаток КАК НормативнаяСтоимость,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ИСТИНА КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО как СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|ГДЕ
		|	ДД.КодСтрокиПродукция > 0
		|";
КонецФункции

Функция ТекстПервичныеТрудозатратыНЗП() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ВидФондаВзносов,
		|	Этапы.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.НормативнаяСтоимость) КАК НормативнаяСтоимость,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	ДД.Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.КодСтрокиПродукция > 0
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ВидФондаВзносов,
		|	Этапы.Владелец,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	ДД.ГруппаПродукции,
		|	ДД.Сотрудник
		|";
КонецФункции

Функция ТекстТрудозатратыМаршрутныеЛисты()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""МаршрутныйЛист"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	Этапы.Владелец КАК Спецификация,
		|	МаршрутныйЛист.Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ВЫБОР ДД.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ ДД.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК Знаменатель,
		|	СУММА(ДД.Заказано) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	МаршрутныйЛист.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	МаршрутныйЛист.Этап,
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

Функция ТекстТрудозатратыВыпускиПоЗаказам()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Выпуск"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	Этапы.Владелец КАК Спецификация,
		|	МаршрутныйЛист.Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ДД.Заказано) КАК Знаменатель,
		|	СУММА(ДД.Заказано) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	(ВЫБОР КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	ДД.ВидЗапасов.Назначение КАК Назначение
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = МаршрутныйЛист.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	МаршрутныйЛист.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.Назначение,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	МаршрутныйЛист.Этап,
		|	(ВЫБОР КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции
//-- НЕ УТКА

Функция ТекстТрудозатратыБезЗаказовПотребление() // Использует ВыпускиБезЗаказов
	Возврат "
		|ВЫБРАТЬ
		|	40 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ВидыРабот.Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	ВидыРабот.ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ВидыРабот.Количество) КАК Знаменатель,
		|	МАКСИМУМ(ВЫБОР Выпуски.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Выпуски.ДоляСтоимости КОНЕЦ) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ВидыРабот.СтатьяКалькуляции КАК СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	0. КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.Трудозатраты КАК ВидыРабот
		|		ПО ВидыРабот.Ссылка = ДД.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВыпускиБезЗаказов КАК Выпуски
		|		ПО Выпуски.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	ВидыРабот.Подразделение,
		|	ВидыРабот.ВидРабот,
		|	ВидыРабот.СтатьяКалькуляции
		|";
КонецФункции

Функция ТекстТрудозатратыБезЗаказовПеремещение()
	Возврат "
		|ВЫБРАТЬ
		|	50 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ВЫБОР Выходы.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Выходы.ДоляСтоимости КОНЕЦ) КАК Знаменатель,
		|	СУММА(Выходы.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	Выходы.Распоряжение КАК ДокументВыпуска,
		|	Выходы.КодСтроки КАК КодСтроки,
		|	Выходы.Распоряжение КАК ДокументИсточник,
		|	Выходы.Номенклатура КАК Продукция,
		|	Выходы.Характеристика,
		|	Выходы.Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	Выходы.Номенклатура,
		|	Выходы.Характеристика,
		|	Выходы.Серия,
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки,
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки
		|";
КонецФункции

Функция ТекстТрудозатратыБезЗаказовРаспределение() // Использует КРаспределению
	Возврат "
		|ВЫБРАТЬ
		|	45 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&ОкончаниеПериода КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	ДД.ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.Количество КАК Знаменатель,
		|	ДД.Распределено КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Назначение
		|ИЗ
		|	КРаспределению КАК ДД
		|";
КонецФункции

Функция ТекстТрудозатратыВыпускиБезЗаказов()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ВыпускБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА
		//-- НЕ УТКА
		|		 ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		//++ НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ)
		//-- НЕ УТКА
		|		  КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	ДД.АналитикаУчетаПродукции,
		|	(ВЫБОР КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	ДД.КодСтроки КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика КАК Характеристика,
		|	Аналитика.Серия КАК Серия,
		|	ДД.Назначение КАК Назначение
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаСписаниеПоНормативам КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаПродукции
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = ДД.Назначение
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		//-- НЕ УТКА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		//-- НЕ УТКА
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|	ДД.Назначение,
		|	ДД.КодСтроки,
		|	(ВЫБОР КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	ДД.КодСтроки,
		|	ДД.КорВидЗапасов,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	Аналитика.Серия
		|";
КонецФункции
	
//++ НЕ УТКА	
Функция ТекстТрудозатратыОтчетыДавальцам()
	Возврат "
		|ВЫБРАТЬ
		|	95 КАК Приоритет,
		|	""ОтчетДавальцу"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0 КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	ДД.Спецификация КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК КорРазделУчета,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	ДД.КодСтроки КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика КАК Характеристика,
		|	Аналитика.Серия КАК Серия,
		|	ДД.ВидЗапасов.Назначение КАК Назначение
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.КодСтроки,
		|	ДД.Организация,
		|	ДД.Спецификация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	Аналитика.Серия,
		|	ДД.ВидЗапасов.Назначение
		|";
	КонецФункции
	
Функция ТекстТрудозатратыДавальческиеПолуфабрикаты() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ПолуфабрикатДавальца"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК ВидФондаВзносов,
		|	Этапы.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ВидРабот,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК КоличествоПродукции,
		|	0. КАК Количество,
		|	0. КАК НормативнаяСтоимость,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьРегл,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК Сотрудник,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляцииБезЗаказа,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК КодСтроки,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия,
		|	ДД.ВидЗапасов.Назначение КАК Назначение
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|	И ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И ДД.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.ВидЗапасов.Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика
		|";
КонецФункции	
//-- НЕ УТКА
#КонецОбласти


#Область РасчетПрочихРасходовНезавершенногоПроизводстваПоБазе

#Область РасходыКРаспределению

Функция ДанныеДляРасходовКРаспределению(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор, ТипЗаписи
		|";
	ИсходныйТекстЗапроса =
		ТекстРасходыКРаспределениюИнициализация() + ";" // вт ВТПриход, ВТПоступило, ДолиСтоимости
		+ ТекстОписаниеДанныхДляРасходовКРаспределению()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыКРаспределениюПартия() // использует ВТПоступило, ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыКРаспределениюПотребление() // использует ДолиСтоимости
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СписокОрганизаций", МассивОрганизаций);
	ИсходныйЗапрос.УстановитьПараметр("СписокПодразделений", Неопределено);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить();
	Возврат ДанныеДляРасчета;
	
КонецФункции

Функция РасчетныеРасходыКРаспределению(ДанныеДляРасчета, Регистраторы = Неопределено, ВнутренниеДанные = Неопределено, Тест = Истина)
	
	// Шаг 1: создаем буфер накопления рассчитанных данных
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляРасходовКРаспределению());
	РасчетныеДанные = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Партия, Потребление");
	
	ПоляПотреблений = "Регистратор";
	КонтекстДвижений = ОписаниеДвижений(
		"ПрочиеРасходыНезавершенногоПроизводстваПоБазе",
		"ПрочиеРасходыНезавершенногоПроизводства",
		ПереченьПолей(РасчетныеДанные.Колонки),
		ПоляПотреблений,
		"Партия",
		"Знаменатель", "Знаменатель", "", "Регистратор");
		
	КонтекстДвижений.Вставить("ЗаполнятьНалоговоеНазначение", Истина);
	
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	
	ЦепочкиДвижений = ЦепочкиДвиженийЗапросом(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамИзВыборки(КонтекстДвижений, ДанныеДляРасчета, РасчетныеДанные, ЦепочкиДвижений, Регистраторы, Тест);

	// Шаг 4: Удаляем строки, не требующие записи в базу.
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеДанные);
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеДанные.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеДанные;
	
КонецФункции

Функция ТекстРасходыКРаспределениюИнициализация() // вт ВТПриход, ВТПоступило, ДолиСтоимости, ДолиСписанияКосвенныхРасходов
	Возврат Документы.РаспределениеПрочихЗатрат.ТекстЗапросаПоступилоПрочихРасходов()
	+ ТекстДолиСтоимости();
КонецФункции

Функция ТекстОписаниеДанныхДляРасходовКРаспределению()
	Возврат "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК Приоритет,
	|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	Т.Регистратор КАК Регистратор,
	|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК Направление,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	0. КАК Знаменатель,
	|	0. КАК ДоляСтоимости,
	|	0. КАК Стоимость,
	|	0. КАК СтоимостьБезНДС,
	|	0. КАК СтоимостьРегл,
	|	0. КАК СтоимостьРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Т
	|";
КонецФункции

Функция ТекстДолиСтоимости() //вт ДолиСтоимости
	Возврат "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	СУММА(Т.ПоПравилам + Т.ПоБазе) КАК ДоляСтоимостиПоПравилам,
	|	СУММА(Т.Вручную + Т.ВыпускиБезРаспоряжения) КАК ВсегоДолейСтоимостиВручную,
	|	СУММА(Т.Списание) КАК ВсегоДолейСтоимостиСписание,
	|	СУММА(Т.ПоПравилам + Т.ПоБазе + Т.Вручную + Т.ВыпускиБезРаспоряжения + Т.Списание) КАК ВсегоДолейСтоимости
	|ПОМЕСТИТЬ
	|	ДолиСтоимости
	|ИЗ (
	|	ВЫБРАТЬ
	|		Т.Ссылка КАК Регистратор,
	|		Т.ДоляСтоимостиПоПравилам КАК ПоПравилам,
	|		0 КАК ПоБазе,
	|		0 КАК Вручную,
	|		0 КАК ВыпускиБезРаспоряжения,
	|		0 КАК Списание
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат КАК Т
	|	ГДЕ
	|		Т.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И Т.Проведен
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.Ссылка КАК Регистратор,
	|		0 КАК ПоПравилам,
	|		Т.ДоляСтоимости КАК ПоБазе,
	|		0 КАК Вручную,
	|		0 КАК ВыпускиБезРаспоряжения,
	|		0 КАК Списание
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.ПоБазе КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|		ПО Т.Ссылка = ДД.Ссылка
	|			И ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|			И ДД.Проведен
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.Ссылка КАК Регистратор,
	|		0 КАК ПоПравилам,
	|		0 КАК ПоБазе,
	|		Т.ДоляСтоимости КАК Вручную,
	|		0 КАК ВыпускиБезРаспоряжения,
	|		0 КАК Списание
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.Вручную КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|		ПО Т.Ссылка = ДД.Ссылка
	|			И ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|			И ДД.Проведен
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.Ссылка КАК Регистратор,
	|		0 КАК ПоПравилам,
	|		0 КАК ПоБазе,
	|		0 КАК Вручную,
	|		Т.ДоляСтоимости КАК ВыпускиБезРаспоряжения,
	|		0 КАК Списание
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.ВыпускиБезРаспоряжения КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|		ПО Т.Ссылка = ДД.Ссылка
	|			И ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|			И ДД.Проведен
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.Ссылка КАК Регистратор,
	|		0 КАК ПоПравилам,
	|		0 КАК ПоБазе,
	|		0 КАК Вручную,
	|		0 КАК ВыпускиБезРаспоряжения,
	|		Т.ДоляСтоимости КАК Списание
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.Списание КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|		ПО Т.Ссылка = ДД.Ссылка
	|			И ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|			И ДД.Проведен
	|	) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор
	|";
КонецФункции

Функция ТекстРасходыКРаспределениюПартия() // использует ВТПоступило, ДолиСтоимости, ДолиСписанияКосвенныхРасходов
	Возврат "
	|ВЫБРАТЬ
	|	10 КАК Приоритет,
	|	""Партия"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	ДД.Ссылка КАК Регистратор,
	|	"""" КАК Направление,
	|	Т.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ДолиСтоимости.ВсегоДолейСтоимости КАК Знаменатель,
	|	ДолиСтоимости.ВсегоДолейСтоимости КАК ДоляСтоимости,
	|	Т.ПоступилоУпр КАК Стоимость,
	|	Т.ПоступилоУпрБезНДС КАК СтоимостьБезНДС,
	|	Т.ПоступилоРегл КАК СтоимостьРегл,
	|	Т.ПоступилоРеглБезНДС КАК СтоимостьРеглБезНДС,
	|	Т.ПоступилоНДСРегл КАК НДСРегл,
	|	Т.ПоступилоПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ПоступилоВременнаяРазница КАК ВременнаяРазница
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоступило КАК Т
	|	ПО Т.Организация = ДД.Организация
	|		И Т.Подразделение = ДД.Подразделение
	|		И Т.СтатьяРасходов = ДД.СтатьяРасходов
	|		И Т.АналитикаРасходов = ДД.АналитикаРасходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолиСтоимости КАК ДолиСтоимости
	|		ПО ДолиСтоимости.Регистратор = ДД.Ссылка
	|ГДЕ
	|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Проведен
	|";
КонецФункции

Функция ТекстРасходыКРаспределениюПотребление() // использует ДолиСтоимости
	Возврат "
	|ВЫБРАТЬ
	|	20 КАК Приоритет,
	|	""Потребление"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	Доли.Регистратор КАК Регистратор,
	|	""ПоПравилам"" КАК Направление,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	Доли.ДоляСтоимостиПоПравилам КАК Знаменатель,
	|	Доли.ДоляСтоимостиПоПравилам КАК ДоляСтоимости,
	|	0. КАК Стоимость,
	|	0. КАК СтоимостьБезНДС,
	|	0. КАК СтоимостьРегл,
	|	0. КАК СтоимостьРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	ДолиСтоимости КАК Доли
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	20 КАК Приоритет,
	|	""Потребление"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	Доли.Регистратор КАК Регистратор,
	|	""Вручную"" КАК Направление,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	Доли.ВсегоДолейСтоимостиВручную КАК Знаменатель,
	|	Доли.ВсегоДолейСтоимостиВручную КАК ДоляСтоимости,
	|	0. КАК Стоимость,
	|	0. КАК СтоимостьБезНДС,
	|	0. КАК СтоимостьРегл,
	|	0. КАК СтоимостьРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	ДолиСтоимости КАК Доли
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	20 КАК Приоритет,
	|	""Потребление"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	Доли.Регистратор КАК Регистратор,
	|	""Списание"" КАК Направление,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	Доли.ВсегоДолейСтоимостиСписание КАК Знаменатель,
	|	Доли.ВсегоДолейСтоимостиСписание КАК ДоляСтоимости,
	|	0. КАК Стоимость,
	|	0. КАК СтоимостьБезНДС,
	|	0. КАК СтоимостьРегл,
	|	0. КАК СтоимостьРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	ДолиСтоимости КАК Доли
	|";
КонецФункции

#КонецОбласти

#Область ПоПодразделениям

Функция ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеРасходыКРаспределению)
	
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Период, Регистратор, ТипЗаписи
		|";
	ИсходныйТекстЗапроса =
		ТекстПрочиеРасходыНЗППоПодразделениямПоБазеИнициализация() + ";" //вт ВТПриход, ВТПоступило, ОтборПоГруппамПродукции, РасходыКРаспределению, Распределить
		+ ТекстВыпускРаботСписанныхНаЗатратыБезЗаказа() + ";"//вт ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ ТекстДанныеПоСтоимостиМатЗатрат() // вт Данные_СтоимостьМатЗатрат
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоСтоимостиМатЗатратБезПУ() + ";"
		+ ТекстДанныеПоЗатратамНаОплатуТрудаНЗП() // вт Данные_ЗатратыНаОплатуТруда
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоЗатратамНаОплатуТрудаБезЗаказа() + ";"
		+ ТекстПоказателиПриИзменении() // вт ЗначенияПоказателей
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоказателиЕжемесячно() + ";"
		+ ТекстПоПодразделениямБазаРаспределенияМатЗатраты() //вт БазаРаспределения, использует Распределить, Данные_СтоимостьМатЗатрат, ОтборПоПодразделениям, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоПодразделениямБазаРаспределенияОплатаТруда() //использует Распределить, Данные_ЗатратыНаОплатуТруда, ОтборПоПодразделениям, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоПодразделениямБазаРаспределенияПоПоказателям() //использует Распределить, ЗначенияПоказателей, ОтборПоПодразделениям
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоПодразделениямБазаРаспределенияВручную() + ";" // использует Распределить
		+ ТекстОбщиеСуммыПоРегистратору() + ";" // вт ОбщиеСуммы, использует БазаРаспределения
		+ ТекстОписаниеДанныхДляПрочихРасходовНЗППоПодразделениямПоБазе()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоПодразделениямПартия() // использует Распределить, ОбщиеСуммы
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоПодразделениям() // использует БазаРаспределения
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СписокОрганизаций", МассивОрганизаций);
	ИсходныйЗапрос.УстановитьПараметр("СписокПодразделений", Неопределено);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
	ИсходныйЗапрос.УстановитьПараметр("ПартионныйУчетВключен", ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	ИсходныйЗапрос.УстановитьПараметр("АналитическийУчетПоГруппамПродукции", ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	ИсходныйЗапрос.УстановитьПараметр("НеВедетсяУчетСебестоимостиПоВидамЗапасов", НЕ ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеРасходыКРаспределению", РасчетныеРасходыКРаспределению);
	ИсходныйЗапрос.УстановитьПараметр("ФормироватьВыпускРаботСписанныхНаЗатраты", Истина);
	МВТ = Новый МенеджерВременныхТаблиц;
	СформироватьПодразделенияПриемникиРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, МВТ);
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить();
	МВТ.Закрыть();
	Возврат ДанныеДляРасчета;
	
КонецФункции

Функция РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе(ДанныеДляРасчета, Регистраторы, ВнутренниеДанные = Неопределено, Тест = Истина)
	
	// Шаг 1: создаем буфер накопления рассчитанных данных
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПрочихРасходовНЗППоПодразделениямПоБазе());
	РасчетныеДанные = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Партия, ПоПодразделениям");
	
	ПоляПотреблений = "Регистратор";
	КонтекстДвижений = ОписаниеДвижений(
		"ПрочиеРасходыНезавершенногоПроизводстваПоБазе",
		"ПрочиеРасходыНезавершенногоПроизводства",
		ПереченьПолей(РасчетныеДанные.Колонки),
		ПоляПотреблений,
		"Партия",
		"Знаменатель", "Знаменатель", "", "Регистратор", "Период");
	
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПоПодразделениям", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПоПодразделениям", "Партия", ПоляПотреблений);
	
	ЦепочкиДвижений = ЦепочкиДвиженийЗапросом(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамИзВыборки(КонтекстДвижений, ДанныеДляРасчета, РасчетныеДанные, ЦепочкиДвижений, Регистраторы, Тест);

	// Шаг 4: Удаляем строки, не требующие записи в базу.
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеДанные);
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеДанные.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеДанные;
	
КонецФункции

Функция ТекстПрочиеРасходыНЗППоПодразделениямПоБазеИнициализация() //вт ВТПриход, ВТПоступило, ОтборПоГруппамПродукции, РасходыКРаспределению, Распределить
	Возврат Документы.РаспределениеПрочихЗатрат.ТекстЗапросаПоступилоПрочихРасходов()
	+ ТекстОтборПоГруппамПродукции() + ";" + "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Направление,
	|	Т.НалоговоеНазначение,
	|	Т.ДоляСтоимости,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.СтоимостьРеглБезНДС,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница
	|ПОМЕСТИТЬ
	|	РасходыКРаспределению
	|ИЗ
	|	&РасчетныеРасходыКРаспределению КАК Т
	|;
	|ВЫБРАТЬ
	|	ДД.Ссылка КАК Регистратор,
	|	ДД.Дата,
	|	ДД.Организация,
	|	ДД.Подразделение КАК ПодразделениеИсточник,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.ПравилоРаспределенияПоПодразделениям,
	|	ЕСТЬNULL(Правила.БазаРаспределения, ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка)) КАК БазаРаспределения,
	|	Р.ДоляСтоимости КАК ДоляСтоимости,
	|	(ВЫБОР ДД.ВариантРаспределения
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам) ТОГДА ДД.СтатьяКалькуляции
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СтатьяКалькуляции,
	|	Р.НалоговоеНазначение,
	|	Р.Стоимость,
	|	Р.СтоимостьБезНДС,
	|	Р.СтоимостьРегл,
	|	Р.СтоимостьРеглБезНДС,
	|	Р.НДСРегл,
	|	Р.ПостояннаяРазница,
	|	Р.ВременнаяРазница
	|ПОМЕСТИТЬ
	|	Распределить
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоступило КАК Т
	|	ПО Т.Организация = ДД.Организация
	|		И Т.Подразделение = ДД.Подразделение
	|		И Т.СтатьяРасходов = ДД.СтатьяРасходов
	|		И Т.АналитикаРасходов = ДД.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК Правила
	|		ПО ДД.ПравилоРаспределенияПоПодразделениям = Правила.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыКРаспределению КАК Р
	|		ПО Р.Регистратор = ДД.Ссылка
	|		И Р.Направление = ""ПоПравилам""
	|ГДЕ
	|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И (ДД.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам)
	|		ИЛИ ДД.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу))
	|	И ДД.Проведен
	|	И Р.ДоляСтоимости <> 0
	|";
КонецФункции

Функция ТекстОписаниеДанныхДляПрочихРасходовНЗППоПодразделениямПоБазе()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	Т.Регистратор КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	Т.АналитикаРасходов КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПриемник,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	0. КАК Знаменатель,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Т
		|";
КонецФункции

#Область ДанныеДляБазыРаспределенияПоПодразделениям

Функция ТекстПоказателиПриИзменении()//вт ЗначенияПоказателей
	Возврат "
	|ВЫБРАТЬ
	|	Т.Показатель,
	|	Т.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВводитсяПриИзменении) КАК БазаРаспределения,
	|	Т.ЗначениеПоказателя
	|ПОМЕСТИТЬ
	|	ЗначенияПоказателей
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейДляРаспределенияРасходов.СрезПоследних(
	|			&НачалоПериода,
	|			Показатель В
	|				(ВЫБРАТЬ
	|					Показатели.Ссылка
	|				ИЗ
	|				Справочник.ПравилаРаспределенияРасходов КАК Показатели
	|				ГДЕ
	|					Показатели.ПометкаУдаления = ЛОЖЬ
	|					И Показатели.БазаРаспределения = 
	|						ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВводитсяПриИзменении)
	|				)
	|																							) КАК Т
	|";
КонецФункции

Функция ТекстПоказателиЕжемесячно()
	Возврат "
	|ВЫБРАТЬ
	|	Т.Показатель,
	|	Т.Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВводитсяЕжемесячно) КАК БазаРаспределения,
	|	Т.ЗначениеПоказателя
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейДляРаспределенияРасходов КАК Т
	|ГДЕ
	|	Т.Период = &НачалоПериода
	|	И Т.Показатель В
	|			(ВЫБРАТЬ
	|				Показатели.Ссылка
	|			ИЗ
	|				Справочник.ПравилаРаспределенияРасходов КАК Показатели
	|			ГДЕ
	|				Показатели.ПометкаУдаления = ЛОЖЬ
	|				И Показатели.БазаРаспределения = 
	|					ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВводитсяЕжемесячно)
	|			)
	|";
КонецФункции

#КонецОбласти

#Область ИтоговаяБазаРаспределенияПоПодразделениям

Функция ТекстПоПодразделениямБазаРаспределенияМатЗатраты() //вт БазаРаспределения, использует Распределить, Данные_СтоимостьМатЗатрат, ОтборПоПодразделениям, ВыпускРаботСписанныхНаЗатратыБезЗаказа, ОтборПоГруппамПродукции
	Возврат "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Дата,
	|	ЛОЖЬ КАК ГруппироватьСуммыПоПодразделениям,
	|	Т.СтатьяКалькуляции,
	|	Т.Подразделение КАК ПодразделениеПриемник,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Т.Стоимость) КАК Стоимость
	|ПОМЕСТИТЬ
	|	БазаРаспределения
	|ИЗ
	|	(ВЫБРАТЬ
	|	Строки.Регистратор,
	|	Строки.Дата,
	|	Строки.СтатьяКалькуляции,
	|	Данные.Подразделение,
	|	Данные.ГруппаПродукции,
	|	Данные.Стоимость
	|	ИЗ
	|		Распределить КАК Строки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_СтоимостьМатЗатрат КАК Данные
	|			ПО (Данные.Организация = Строки.Организация
	|				ИЛИ Данные.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			И Данные.БазаРаспределения = Строки.БазаРаспределения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоПодразделениям КАК ОП
	|			ПО ОП.Регистратор = Строки.Регистратор
	|				И (ОП.Подразделение = Данные.Подразделение
	|					ИЛИ ОП.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|	ГДЕ
	|		НЕ(Строки.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|			И Строки.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|			И Строки.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|			И Строки.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|	) КАК Т
	|ГДЕ
	|	(Т.Регистратор, Т.ГруппаПродукции) В (
	|												ВЫБРАТЬ
	|													Т.Регистратор,
	|													Т.ГруппаПродукции
	|												ИЗ
	|													ОтборПоГруппамПродукции КАК Т)
	|	ИЛИ
	|	(Т.Регистратор, ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)) В (
	|												ВЫБРАТЬ
	|													Т.Регистратор,
	|													Т.ГруппаПродукции
	|												ИЗ
	|													ОтборПоГруппамПродукции КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Дата,
	|	Т.СтатьяКалькуляции,
	|	Т.Подразделение
	|";
КонецФункции

Функция ТекстПоПодразделениямБазаРаспределенияОплатаТруда() // использует Распределить, Данные_ЗатратыНаОплатуТруда, ОтборПоПодразделениям, ВыпускРаботСписанныхНаЗатратыБезЗаказа, ОтборПоГруппамПродукции
	Возврат "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Дата,
	|	ЛОЖЬ КАК ГруппироватьСуммыПоПодразделениям,
	|	Т.СтатьяКалькуляции,
	|	Т.Подразделение КАК ПодразделениеПриемник,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Т.Стоимость) КАК Стоимость
	|ИЗ
	|	(ВЫБРАТЬ
	|	Строки.Регистратор,
	|	Строки.Дата,
	|	Строки.СтатьяКалькуляции,
	|	Данные.Подразделение,
	|	Данные.ГруппаПродукции,
	|	Данные.Стоимость
	|	ИЗ
	|		Распределить КАК Строки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ЗатратыНаОплатуТруда КАК Данные
	|			ПО (Данные.Организация = Строки.Организация
	|				ИЛИ Данные.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			И Данные.БазаРаспределения = Строки.БазаРаспределения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоПодразделениям КАК ОП
	|			ПО ОП.Регистратор = Строки.Регистратор
	|				И (ОП.Подразделение = Данные.Подразделение
	|					ИЛИ ОП.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|	ГДЕ
	|		НЕ(Строки.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|			И Строки.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|			И Строки.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|			И Строки.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|	) КАК Т
	|ГДЕ
	|	(Т.Регистратор, Т.ГруппаПродукции) В (
	|												ВЫБРАТЬ
	|													Т.Регистратор,
	|													Т.ГруппаПродукции
	|												ИЗ
	|													ОтборПоГруппамПродукции КАК Т)
	|	ИЛИ
	|	(Т.Регистратор, ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)) В (
	|												ВЫБРАТЬ
	|													Т.Регистратор,
	|													Т.ГруппаПродукции
	|												ИЗ
	|													ОтборПоГруппамПродукции КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Дата,
	|	Т.СтатьяКалькуляции,
	|	Т.Подразделение
	|";
КонецФункции

Функция ТекстПоПодразделениямБазаРаспределенияПоПоказателям() // использует Распределить, ЗначенияПоказателей, ОтборПоПодразделениям
	Возврат "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Дата,
	|	ЛОЖЬ КАК ГруппироватьСуммыПоПодразделениям,
	|	Т.СтатьяКалькуляции,
	|	Т.Подразделение КАК ПодразделениеПриемник,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Т.Стоимость) КАК Стоимость
	|ИЗ
	|	(ВЫБРАТЬ
	|	Строки.Регистратор,
	|	Строки.Дата,
	|	Строки.СтатьяКалькуляции,
	|	Данные.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
	|	Данные.ЗначениеПоказателя КАК Стоимость
	|	ИЗ
	|		Распределить КАК Строки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗначенияПоказателей КАК Данные
	|			ПО Данные.БазаРаспределения = Строки.БазаРаспределения
	|			И Данные.Показатель = Строки.ПравилоРаспределенияПоПодразделениям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоПодразделениям КАК ОП
	|			ПО ОП.Регистратор = Строки.Регистратор
	|				И (ОП.Подразделение = Данные.Подразделение
	|					ИЛИ ОП.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Дата,
	|	Т.СтатьяКалькуляции,
	|	Т.Подразделение
	|";
КонецФункции

Функция ТекстПоПодразделениямБазаРаспределенияВручную() // использует Распределить
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Дата,
	|	ЛОЖЬ КАК ГруппироватьСуммыПоПодразделениям,
	|	Строки.СтатьяКалькуляции,
	|	Строки.Подразделение КАК ПодразделениеПриемник,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Строки.ДоляСтоимости) КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ПоБазе КАК Строки
	|		ПО Строки.Ссылка = ДД.Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Дата,
	|	Строки.СтатьяКалькуляции,
	|	Строки.Подразделение
	|";
КонецФункции

#КонецОбласти

#Область ФормированиеТаблицыДанныхДляРасчетаПоПодразделениям

Функция ТекстПоПодразделениямПартия() // использует Распределить, ОбщиеСуммы
	Возврат "
	|ВЫБРАТЬ
	|	10 КАК Приоритет,
	|	""Партия"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Дата КАК Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.ПодразделениеИсточник,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПриемник,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
	|	ДД.НалоговоеНазначение,
	|	Итог.ОбщаяСтоимость КАК Знаменатель,
	|	ДД.ДоляСтоимости,
	|	ДД.Стоимость,
	|	ДД.СтоимостьБезНДС,
	|	ДД.СтоимостьРегл,
	|	ДД.СтоимостьРеглБезНДС,
	|	ДД.НДСРегл,
	|	ДД.ПостояннаяРазница,
	|	ДД.ВременнаяРазница
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеСуммы КАК Итог
	|		ПО Итог.Регистратор = ДД.Регистратор
	|";
КонецФункции

Функция ТекстПоПодразделениям() // использует БазаРаспределения
	Возврат "
	|ВЫБРАТЬ
	|	20 КАК Приоритет,
	|	""ПоПодразделениям"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Дата КАК Период,
	|	ДД.Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеИсточник,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ДД.ПодразделениеПриемник КАК ПодразделениеПриемник,
	|	ДД.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
	|	ДД.Стоимость КАК Знаменатель,
	|	0. КАК ДоляСтоимости,
	|	0. КАК Стоимость,
	|	0. КАК СтоимостьБезНДС,
	|	0. КАК СтоимостьРегл,
	|	0. КАК СтоимостьРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	БазаРаспределения КАК ДД
	|";
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПоЭтапам

Функция ДанныеДляПрочихРасходовНЗППоЭтапамПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеРасходыКРаспределению, РасчетноеРаспределениеПоПодразделениям)
	
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Период, Регистратор, ТипЗаписи
		|";
	ИсходныйТекстЗапроса =
		ТекстПрочиеРасходыНЗППоЭтапамПоБазеИнициализация() + ";" //вт ОтборПоМатериалам, ОтборПоВидамРабот, ОтборПоГруппамПродукции, ДанныеРаспределенияПоПодразделениям, РасходыКРаспределению, Распределить
		+ ТекстВыпускРаботСписанныхНаЗатратыБезЗаказа() + ";"//вт ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ ТекстДанныеПоСтоимостиМатЗатрат() //вт Данные_СтоимостьМатЗатрат
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоСтоимостиМатЗатратБезПУ() + ";"
		+ ТекстДанныеПоЗатратамНаОплатуТрудаНЗП() //вт Данные_ЗатратыНаОплатуТруда
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоЗатратамНаОплатуТрудаБезЗаказа() + ";"
		+ ТекстДанныеПоНормативнымЗатратамНаОплатуТрудаНЗП() // вт Данные_НормативныеЗатратыНаОплатуТруда
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДанныеПоНормативнымЗатратамНаОплатуТрудаБезЗаказа() + ";"
		+ ТекстДанныеПоУказаннымМатериалам() + ";" // вт ДанныеПоУказаннымМатериалам
		+ ТекстДанныеПоПродукции() + ";" // вт ФактЭтапов_ПоПродукции, ПланЭтаповПоЗаказам_ПоПродукции, Данные_ПоПродукции
		+ ТекстДанныеПоПлановойСтоимости() + ";" // вт ФактЭтапов_ПоПлановойСтоимости, ПланЭтаповПоЗаказам_ПоПлановойСтоимости, Данные_ПоПлановойСтоимости
		+ ТекстДанныеПоУказаннымТрудозатратам() + ";" // вт Данные_ПоУказаннымТрудозатратам
		+ ТекстПоЭтапамБазаПоСтоимостиМатЗатрат() //вт БазаРаспределения, использует Распределить, Данные_СтоимостьМатЗатрат, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаПоЗатратамНаОплатуТруда() // использует Распределить, Данные_ЗатратыНаОплатуТруда, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаПоНормативнымЗатратамНаОплатуТруда() // использует Распределить, Данные_НормативныеЗатратыНаОплатуТруда, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаПоУказаннымМатериалам() // использует Распределить, Данные_ПоУказаннымМатериалам, ОтборПоМатериалам, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаПоПродукции() // вт Распределить, Данные_ПоПродукции, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаПоПлановойСтоимости() // использует Распределить, Данные_ПоПлановойСтоимости, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаПоКоличествуУказанныхТрудозатрат() // использует Распределить, Данные_ПоУказаннымТрудозатратам, ОтборПоВидамРабот, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаВручнуюПоЗаказам() // использует Распределить
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамБазаВручнуюПоВыпускамБезРаспоряжения() + ";" // использует Распределить, ВыпускРаботСписанныхНаЗатратыБезЗаказа
		+ ТекстОбщиеСуммыПоРегистратору() + ";" // вт ОбщиеСуммы, использует БазаРаспределения
		+ ТекстОписаниеДанныхДляПрочихРасходовНЗППоЭтапамПоБазе()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапамПартия() // использует Распределить, ОбщиеСуммы
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоЭтапам() // использует БазаРаспределения
		+ ТекстСортировка;
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Вес", Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СН.ЕдиницаИзмерения", "СН"));
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Объем", Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СН.ЕдиницаИзмерения", "СН"));
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СписокОрганизаций", МассивОрганизаций);
	ИсходныйЗапрос.УстановитьПараметр("СписокПодразделений", Неопределено);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеРасходыКРаспределению", РасчетныеРасходыКРаспределению);
	ИсходныйЗапрос.УстановитьПараметр("РасчетноеРаспределениеПоПодразделениям", РасчетноеРаспределениеПоПодразделениям);
	ИсходныйЗапрос.УстановитьПараметр("ПартионныйУчетВключен", ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	ИсходныйЗапрос.УстановитьПараметр("АналитическийУчетПоГруппамПродукции", ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	ИсходныйЗапрос.УстановитьПараметр("НеВедетсяУчетСебестоимостиПоВидамЗапасов", НЕ ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	ИсходныйЗапрос.УстановитьПараметр("ВидПлановыхЦен", Константы.ВидЦеныПлановойСтоимостиМатериаловРабот.Получить());
	ИсходныйЗапрос.УстановитьПараметр("ФормироватьВыпускРаботСписанныхНаЗатраты", Истина);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить();
	
	
	
	
	Возврат ДанныеДляРасчета;
	
КонецФункции

Функция РасчетныеПрочиеРасходыНЗППоЭтапамПоБазе(ДанныеДляРасчета, Регистраторы, ВнутренниеДанные = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных данных
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПрочихРасходовНЗППоЭтапамПоБазе());
	РасчетныеДанные = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Партия, ПоЭтапам");
	
	ПоляПотреблений = "Регистратор, Подразделение";
	КонтекстДвижений = ОписаниеДвижений(
		"ПрочиеРасходыНезавершенногоПроизводстваПоБазе",
		"ПрочиеРасходыНезавершенногоПроизводства",
		ПереченьПолей(РасчетныеДанные.Колонки),
		ПоляПотреблений,
		"Партия",
		"Знаменатель", "Знаменатель", "", "Регистратор, Подразделение", "Период");
	
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПоЭтапам", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПоЭтапам", "Партия", ПоляПотреблений);
	
	ЦепочкиДвижений = ЦепочкиДвиженийЗапросом(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамИзВыборки(КонтекстДвижений, ДанныеДляРасчета, РасчетныеДанные, ЦепочкиДвижений, Регистраторы, Тест);

	// Шаг 4: Удаляем строки, не требующие записи в базу.
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеДанные);
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеДанные.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеДанные;
	
КонецФункции

Функция ТекстПрочиеРасходыНЗППоЭтапамПоБазеИнициализация() //вт ОтборПоМатериалам, ОтборПоВидамРабот, ОтборПоГруппамПродукции, ДанныеРаспределенияПоПодразделениям, РасходыКРаспределению, Распределить
	Возврат Документы.РаспределениеПрочихЗатрат.ТекстЗапросаПоступилоПрочихРасходов()
	+ ТекстОтборПоМатериалам() + ";"
	+ ТекстОтборПоВидамРабот() + ";"
	+ ТекстОтборПоГруппамПродукции() + ";"
	+ ТекстДанныеРаспределенияПоПодразделениям() + ";"
	+ ТекстРасходыКРаспределению() + ";" + "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Период,
	|	Т.Организация,
	|	Т.ПодразделениеИсточник,
	|	Т.ПодразделениеПриемник,
	|	(ВЫБОР
	|		КОГДА Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам)
	|			ИЛИ Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу)
	|			ИЛИ Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении)
	|		ТОГДА Т.ПодразделениеПриемник
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК Подразделение,
	|	Д.ВариантРаспределения,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.СтатьяКалькуляции,
	|	Д.БазаРаспределенияПоЭтапам КАК БазаРаспределения,
	|	(ВЫБОР
	|		КОГДА Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам)
	|			ИЛИ Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ГруппироватьСуммыПоПодразделениям,
	|	Т.ДоляСтоимости,
	|	Т.НалоговоеНазначение,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.СтоимостьРеглБезНДС,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница
	|ПОМЕСТИТЬ
	|	Распределить
	|ИЗ
	|	ДанныеРаспределенияПоПодразделениям КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Д
	|	ПО Д.Ссылка = Т.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Д.Ссылка КАК Регистратор,
	|	Д.Дата КАК Период,
	|	Д.Организация,
	|	Д.Подразделение КАК ПодразделениеИсточник,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПриемник,
	|	(ВЫБОР
	|		КОГДА Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении)
	|		ТОГДА Д.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КОНЕЦ) КАК Подразделение,
	|	Д.ВариантРаспределения,
	|	Д.СтатьяРасходов,
	|	Д.АналитикаРасходов,
	|	Д.СтатьяКалькуляции,
	|	ЕСТЬNULL(Правила.БазаРаспределения, ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка)) КАК БазаРаспределения,
	|	(ВЫБОР
	|		КОГДА Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК ГруппироватьСуммыПоПодразделениям,
	|	Р.ДоляСтоимости КАК ДоляСтоимости,
	|	Р.НалоговоеНазначение,
	|	Р.Стоимость,
	|	Р.СтоимостьБезНДС,
	|	Р.СтоимостьРегл,
	|	Р.СтоимостьРеглБезНДС,
	|	Р.НДСРегл,
	|	Р.ПостояннаяРазница,
	|	Р.ВременнаяРазница
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК Д
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоступило КАК Т
	|	ПО Т.Организация = Д.Организация
	|		И Т.Подразделение = Д.Подразделение
	|		И Т.СтатьяРасходов = Д.СтатьяРасходов
	|		И Т.АналитикаРасходов = Д.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК Правила
	|		ПО Д.ПравилоРаспределенияПоЭтапам = Правила.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыКРаспределению КАК Р
	|		ПО Р.Регистратор = Д.Ссылка
	|		И Р.Направление = ""ПоПравилам""
	|ГДЕ
	|	Д.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Д.Организация В (&МассивОрганизаций)
	|	И (Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении)
	|		ИЛИ Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуПоВсемПодразделениям))
	|	И Д.Проведен
	|	И Р.ДоляСтоимости <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Д.Ссылка КАК Регистратор,
	|	Д.Дата КАК Период,
	|	Д.Организация,
	|	Д.Подразделение КАК ПодразделениеИсточник,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПриемник,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	Д.ВариантРаспределения,
	|	Д.СтатьяРасходов,
	|	Д.АналитикаРасходов,
	|	Д.СтатьяКалькуляции,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка) КАК БазаРаспределения,
	|	ЛОЖЬ КАК ГруппироватьСуммыПоПодразделениям,
	|	Р.ДоляСтоимости КАК ДоляСтоимости,
	|	Р.НалоговоеНазначение,
	|	Р.Стоимость,
	|	Р.СтоимостьБезНДС,
	|	Р.СтоимостьРегл,
	|	Р.СтоимостьРеглБезНДС,
	|	Р.НДСРегл,
	|	Р.ПостояннаяРазница,
	|	Р.ВременнаяРазница
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК Д
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоступило КАК Т
	|	ПО Т.Организация = Д.Организация
	|		И Т.Подразделение = Д.Подразделение
	|		И Т.СтатьяРасходов = Д.СтатьяРасходов
	|		И Т.АналитикаРасходов = Д.АналитикаРасходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыКРаспределению КАК Р
	|		ПО Р.Регистратор = Д.Ссылка
	|		И Р.Направление = ""Вручную""
	|ГДЕ
	|	Д.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Д.Организация В (&МассивОрганизаций)
	|	И Д.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям)
	|	И Д.Проведен
	|	И Р.ДоляСтоимости <> 0
	|";
КонецФункции

Функция ТекстОписаниеДанныхДляПрочихРасходовНЗППоЭтапамПоБазе()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	Т.Регистратор КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеИсточник,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПриемник,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	Т.АналитикаРасходов КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	Т.ДокументВыпуска КАК ДокументВыпуска,
		|	Т.ДокументДвижения КАК ДокументДвижения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеВыпуска,
		|	0. КАК Знаменатель,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Т
		|";
КонецФункции

#Область Инициализация

Функция ТекстДанныеРаспределенияПоПодразделениям() // вт ДанныеРаспределенияПоПодразделениям
	Возврат "
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.ПодразделениеИсточник,
	|	Т.ПодразделениеПриемник,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	Т.ДоляСтоимости КАК ДоляСтоимости,
	|	Т.НалоговоеНазначение КАК НалоговоеНазначение,
	|	Т.Стоимость КАК Стоимость,
	|	Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.СтоимостьРеглБезНДС КАК СтоимостьРеглБезНДС,
	|	Т.НДСРегл КАК НДСРегл,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница
	|ПОМЕСТИТЬ
	|	ДанныеРаспределенияПоПодразделениям
	|ИЗ
	|	&РасчетноеРаспределениеПоПодразделениям КАК Т
	|";
КонецФункции

Функция ТекстРасходыКРаспределению() // вт РасходыКРаспределению
	Возврат "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Направление,
	|	Т.ДоляСтоимости,
	|	Т.НалоговоеНазначение КАК НалоговоеНазначение,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.СтоимостьРеглБезНДС,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница
	|ПОМЕСТИТЬ
	|	РасходыКРаспределению
	|ИЗ
	|	&РасчетныеРасходыКРаспределению КАК Т
	|";
КонецФункции

#КонецОбласти

#Область ДанныеДляБазыРаспределенияПоЭтапам

Функция ТекстДанныеПоНормативнымЗатратамНаОплатуТрудаНЗП() // вт Данные_НормативныеЗатратыНаОплатуТруда
	Возврат "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.ВидРабот,
	|	Т.Продукция,
	|	Т.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда) КАК БазаРаспределения,
	|	СУММА(Т.НормативнаяСтоимость) КАК Стоимость
	|ПОМЕСТИТЬ
	|	Данные_НормативныеЗатратыНаОплатуТруда
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Т.КодСтрокиПродукция <> 0
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.ВидРабот,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.Продукция,
	|	Т.ГруппаПродукции
	|";
КонецФункции

Функция ТекстДанныеПоНормативнымЗатратамНаОплатуТрудаБезЗаказа()
	Возврат "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение КАК ПодразделениеПриемник,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	Т.КодСтроки КАК КодСтрокиПродукция,
	|	Т.ВидРабот,
	|	СА.Номенклатура КАК Продукция,
	|	Т.ГруппаПродукции,
	|	Т.ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда) КАК БазаРаспределения,
	|	СУММА(Т.НормативнаяСтоимость) КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СА
	|	ПО СА.Ссылка = Т.АналитикаУчетаПродукции
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Т.КодСтрокиПродукция = 0
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.КодСтроки,
	|	Т.ВидРабот,
	|	СА.Номенклатура,
	|	Т.ГруппаПродукции,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.ДокументВыпуска
	|";
КонецФункции

#КонецОбласти

#Область ИтоговаяБазаРаспределенияПоЭтапам

Функция ТекстПоЭтапамБазаПоСтоимостиМатЗатрат() //вт БазаРаспределения, использует Распределить, Данные_СтоимостьМатЗатрат, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Данные.Стоимость) КАК Стоимость
	|ПОМЕСТИТЬ
	|	БазаРаспределения
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_СтоимостьМатЗатрат КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаПоЗатратамНаОплатуТруда() // использует Распределить, Данные_ЗатратыНаОплатуТруда, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Данные.Стоимость) КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ЗатратыНаОплатуТруда КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаПоНормативнымЗатратамНаОплатуТруда() // использует Распределить, Данные_НормативныеЗатратыНаОплатуТруда, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	0. КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Данные.Стоимость) КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_НормативныеЗатратыНаОплатуТруда КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаПоУказаннымМатериалам() // использует Распределить, Данные_ПоУказаннымМатериалам, ОтборПоМатериалам, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
	|			ТОГДА Данные.ЗаказНаПроизводство
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	СУММА(Данные.Количество) КАК Количество,
	|	СУММА(Данные.Объем) КАК Объем,
	|	СУММА(Данные.Вес) КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоУказаннымМатериалам КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И (ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов)
	|			ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов)
	|			ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов))
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоМатериалам КАК ОМ
	|		ПО ОМ.Регистратор = ДД.Регистратор
	|		И ОМ.Материал = Данные.Материал
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ЗаказНаПроизводство
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
	|			ТОГДА Данные.ЗаказНаПроизводство
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаПоПродукции() // вт Распределить, Данные_ПоПродукции, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Данные.ЗаказНаПроизводство КОНЕЦ) КАК ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА Данные.ЗаказНаПроизводство
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	СУММА(Данные.Количество) КАК Количество,
	|	СУММА(Данные.Объем) КАК Объем,
	|	СУММА(Данные.Вес) КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоПродукции КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И (ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции)
	|			ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции)
	|			ИЛИ ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции))
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ЗаказНаПроизводство
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Данные.ЗаказНаПроизводство КОНЕЦ),
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА Данные.ЗаказНаПроизводство
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаПоПлановойСтоимости() // использует Распределить, Данные_ПоПлановойСтоимости, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Данные.ЗаказНаПроизводство КОНЕЦ) КАК ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА Данные.ЗаказНаПроизводство
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	СУММА(Данные.Количество) КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	СУММА(Данные.Количество * Цены.Цена) КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоПлановойСтоимости КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ОкончаниеПериода, ВидЦены = &ВидПлановыхЦен) КАК Цены
	|		ПО Цены.Номенклатура = Данные.Номенклатура
	|		И Цены.Характеристика = Данные.Характеристика
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ЗаказНаПроизводство
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Данные.ЗаказНаПроизводство КОНЕЦ),
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	(ВЫБОР
	|		КОГДА Данные.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции ТОГДА Данные.ЗаказНаПроизводство
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаПоКоличествуУказанныхТрудозатрат() // использует Распределить, Данные_ПоУказаннымТрудозатратам, ОтборПоВидамРабот, ОтборПоГруппамПродукции, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ) КАК ГруппаПродукции,
	|	(ВЫБОР
	|		КОГДА Данные.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Данные.ЗаказНаПроизводство КОНЕЦ) КАК ЗаказНаПроизводство,
	|	(ВЫБОР
	|		КОГДА Данные.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка) ТОГДА Данные.КодСтроки
	|		ИНАЧЕ Данные.КодСтрокиПродукция КОНЕЦ) КАК КодСтрокиПродукция,
	|	Данные.Этап,
	|	Данные.ДокументВыпуска КАК ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	СУММА(Данные.Количество) КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные_ПоУказаннымТрудозатратам КАК Данные
	|		ПО Данные.Организация = ДД.Организация
	|		И (Данные.Подразделение = ДД.Подразделение ИЛИ ДД.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|		И ДД.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоВидамРабот КАК ОР
	|		ПО ОР.Регистратор = ДД.Регистратор
	|		И ОР.ВидРабот = Данные.ВидРабот
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоГруппамПродукции КАК ОГ
	|		ПО ОГ.Регистратор = ДД.Регистратор
	|		И (ОГ.ГруппаПродукции = Данные.ГруппаПродукции
	|			ИЛИ ОГ.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтрокиПродукция
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Данные.ГруппаПродукции КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Данные.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Данные.ЗаказНаПроизводство КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Данные.ДокументВыпуска <> ЗНАЧЕНИЕ(Документ.ВыпускПродукции.ПустаяСсылка) ТОГДА Данные.КодСтроки
	|		ИНАЧЕ Данные.КодСтрокиПродукция КОНЕЦ),
	|	Данные.Этап,
	|	Данные.ДокументВыпуска,
	|	Данные.НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	Данные.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаВручнуюПоЗаказам() // использует Распределить
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции ТОГДА 
	|			ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ
	|			ВЫБОР
	//++ НЕ УТКА
	|				КОГДА НЕ ТабПродукция.Ссылка ЕСТЬ NULL ТОГДА ТабПродукция.Номенклатура.ГруппаАналитическогоУчета
	//-- НЕ УТКА
	|				КОГДА НЕ ПродукцияОтПереработчика.Ссылка ЕСТЬ NULL ТОГДА ПродукцияОтПереработчика.Номенклатура.ГруппаАналитическогоУчета
	|			КОНЕЦ
	|	КОНЕЦ КАК ГруппаПродукции,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
	|	Данные.ЗаказНаПроизводство.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	ЕСТЬNULL(ЗП.Подразделение, Данные.Этап.Подразделение) КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	СУММА(Данные.ДоляСтоимости) КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Вручную КАК Данные
	|		ПО Данные.Ссылка = ДД.Регистратор
	|		И ДД.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям)
	//++ НЕ УТКА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ТабПродукция
	|		ПО &АналитическийУчетПоГруппамПродукции
	|		И Данные.ЗаказНаПроизводство = ТабПродукция.Ссылка
	|		И Данные.КодСтрокиПродукция = ТабПродукция.КодСтроки
	//-- НЕ УТКА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Продукция КАК ПродукцияОтПереработчика
	|		ПО &АналитическийУчетПоГруппамПродукции
	|		И Данные.ЗаказНаПроизводство = ПродукцияОтПереработчика.Ссылка
	|		И Данные.КодСтрокиПродукция = ПродукцияОтПереработчика.КодСтроки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК ЗП
	|		ПО Данные.ЗаказНаПроизводство = ЗП.Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции ТОГДА 
	|			ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ
	|			ВЫБОР
	//++ НЕ УТКА
	|				КОГДА НЕ ТабПродукция.Ссылка ЕСТЬ NULL ТОГДА ТабПродукция.Номенклатура.ГруппаАналитическогоУчета
	//-- НЕ УТКА
	|				КОГДА НЕ ПродукцияОтПереработчика.Ссылка ЕСТЬ NULL ТОГДА ПродукцияОтПереработчика.Номенклатура.ГруппаАналитическогоУчета
	|			КОНЕЦ
	|	КОНЕЦ,
	|	Данные.ЗаказНаПроизводство,
	|	Данные.КодСтрокиПродукция,
	|	Данные.Этап,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	ЕСТЬNULL(ЗП.Подразделение, Данные.Этап.Подразделение),
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

Функция ТекстПоЭтапамБазаВручнуюПоВыпускамБезРаспоряжения() // использует Распределить, ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ (ВЫБОР
	|					КОГДА НЕ Строки.Номенклатура ЕСТЬ NULL
	|					ТОГДА Строки.Номенклатура.ГруппаАналитическогоУчета
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|		КОНЕЦ) КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	Данные.КодСтроки КАК КодСтрокиПродукция,
	|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
	|	Данные.ДокументВыпуска КАК ДокументВыпуска,
	|	Данные.ДокументВыпуска.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	ВП.Подразделение КАК ПодразделениеПриемник,
	|	ДД.ГруппироватьСуммыПоПодразделениям,
	|	СУММА(Данные.ДоляСтоимости) КАК Количество,
	|	0. КАК Объем,
	|	0. КАК Вес,
	|	0. КАК Стоимость
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ВыпускиБезРаспоряжения КАК Данные
	|		ПО Данные.Ссылка = ДД.Регистратор
	|		И ДД.ВариантРаспределения = ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК ВП
	|		ПО ВП.Ссылка = Данные.ДокументВыпуска
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Строки
	|		ПО &АналитическийУчетПоГруппамПродукции
	|		И Строки.Ссылка = Данные.ДокументВыпуска
	|		И Строки.КодСтроки = Данные.КодСтроки,
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускРаботСписанныхНаЗатратыБезЗаказа КАК ВыпускРабот
	|			ПО ВыпускРабот.Распоряжение = Данные.ДокументВыпуска
	|				И ВыпускРабот.КодСтроки = Данные.КодСтроки
	|ГДЕ
	|	НЕ(ДД.Организация = ЕСТЬNULL(ВыпускРабот.Организация, ЛОЖЬ)
	|		И ДД.ПодразделениеИсточник = ЕСТЬNULL(ВыпускРабот.ПодразделениеПриемник, ЛОЖЬ)
	|		И ДД.СтатьяРасходов = ЕСТЬNULL(ВыпускРабот.СтатьяРасходов, ЛОЖЬ)
	|		И ДД.АналитикаРасходов = ЕСТЬNULL(ВыпускРабот.АналитикаРасходов, ЛОЖЬ))
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	ДД.Период,
	|	(ВЫБОР
	|		КОГДА НЕ &АналитическийУчетПоГруппамПродукции
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ (ВЫБОР
	|					КОГДА НЕ Строки.Номенклатура ЕСТЬ NULL
	|					ТОГДА Строки.Номенклатура.ГруппаАналитическогоУчета
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ)
	|		КОНЕЦ),
	|	Данные.КодСтроки,
	|	Данные.ДокументВыпуска,
	|	ДД.БазаРаспределения,
	|	ДД.Подразделение,
	|	ВП.Подразделение,
	|	ДД.ГруппироватьСуммыПоПодразделениям
	|";
КонецФункции

#КонецОбласти

#Область ФормированиеТаблицыДанныхДляРасчетаПоЭтапам

Функция ТекстПоЭтапамПартия() // использует Распределить, ОбщиеСуммы
	Возврат "
	|ВЫБРАТЬ
	|	10 КАК Приоритет,
	|	""Партия"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.ПодразделениеИсточник,
	|	ДД.ПодразделениеПриемник,
	|	ДД.Подразделение,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	0. КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
	|	(ВЫБОР ДД.БазаРаспределения
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов) ТОГДА Итог.ОбщееКоличество
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов) ТОГДА Итог.ОбщийОбъем
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов) ТОГДА Итог.ОбщийВес
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции) ТОГДА Итог.ОбщееКоличество
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции) ТОГДА Итог.ОбщийОбъем
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции) ТОГДА Итог.ОбщийВес
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов) ТОГДА Итог.ОбщееКоличество
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции) ТОГДА Итог.ОбщаяСтоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат) ТОГДА Итог.ОбщаяСтоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда) ТОГДА Итог.ОбщаяСтоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда) ТОГДА Итог.ОбщаяСтоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка) ТОГДА Итог.ОбщееКоличество
	|		ИНАЧЕ 0.
	|	КОНЕЦ) КАК Знаменатель,
	|	ДД.ДоляСтоимости,
	|	ДД.Стоимость,
	|	ДД.СтоимостьБезНДС,
	|	ДД.СтоимостьРегл,
	|	ДД.СтоимостьРеглБезНДС,
	|	ДД.НДСРегл,
	|	ДД.ПостояннаяРазница,
	|	ДД.ВременнаяРазница
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеСуммы КАК Итог
	|		ПО Итог.Регистратор = ДД.Регистратор
	|			И (Итог.ПодразделениеПриемник = ДД.Подразделение
	|				ИЛИ НЕ ДД.ГруппироватьСуммыПоПодразделениям)
	|";
КонецФункции

Функция ТекстПоЭтапам() // использует БазаРаспределения
	Возврат "
	|ВЫБРАТЬ
	|	20 КАК Приоритет,
	|	""ПоЭтапам"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ДД.Период,
	|	ДД.Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеИсточник,
	|	ДД.ПодразделениеПриемник,
	|	ДД.Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
	|	ДД.ЗаказНаПроизводство,
	|	ДД.КодСтрокиПродукция,
	|	ДД.Этап,
	|	ДД.ДокументВыпуска,
	|	ДД.Регистратор КАК ДокументДвижения,
	|	ДД.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
	|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначениеВыпуска,
	|	(ВЫБОР ДД.БазаРаспределения
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов) ТОГДА ДД.Количество
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов) ТОГДА ДД.Объем
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов) ТОГДА ДД.Вес
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоПродукции) ТОГДА ДД.Количество
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ОбъемПродукции) ТОГДА ДД.Объем
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ВесПродукции) ТОГДА ДД.Вес
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов) ТОГДА ДД.Количество
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции) ТОГДА ДД.Стоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат) ТОГДА ДД.Стоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда) ТОГДА ДД.Стоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.НормативыОплатыТруда) ТОГДА ДД.Стоимость
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка) ТОГДА ДД.Количество
	|		ИНАЧЕ 0.
	|	КОНЕЦ) КАК Знаменатель,
	|	0. КАК ДоляСтоимости,
	|	0. КАК Стоимость,
	|	0. КАК СтоимостьБезНДС,
	|	0. КАК СтоимостьРегл,
	|	0. КАК СтоимостьРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	БазаРаспределения КАК ДД
	|";
КонецФункции

#КонецОбласти

#КонецОбласти

#Область РаспределениеПрочихРасходов

Функция ДанныеДляПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеРасходыКРаспределению)
	
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Период, Регистратор, ТипЗаписи
		|";
	ИсходныйТекстЗапроса =
		ТекстПрочиеРасходыИнициализация() + ";" //вт ВТПриход, ВТПоступило, РасходыКРаспределению, Распределить
		+ ТекстОписаниеДанныхДляПрочихРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыПартия() // использует Распределить
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыПотребление() // использует Распределить
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыСписание() // использует Распределить
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыДополнение()
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СписокОрганизаций", МассивОрганизаций);
	ИсходныйЗапрос.УстановитьПараметр("СписокПодразделений", Неопределено);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемОрганизациям", Ложь);
	ИсходныйЗапрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеРасходыКРаспределению", РасчетныеРасходыКРаспределению);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить();

	Возврат ДанныеДляРасчета;
	
КонецФункции

Функция РасчетныеПрочиеРасходы(ДанныеДляРасчета, Регистраторы, ВнутренниеДанные = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных данных
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПрочихРасходов());
	РасчетныеДанные = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Партия, Списание, Потребление, Дополнение");
	
	ПоляПотреблений = "Регистратор";
	КонтекстДвижений = ОписаниеДвижений(
		"ПрочиеРасходыПоБазе",
		"ПрочиеРасходы",
		ПереченьПолей(РасчетныеДанные.Колонки),
		ПоляПотреблений,
		"Списание",
		"ДоляСтоимости", "ДоляСтоимости", "", "Регистратор");
	
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор, СтатьяРасходов, АналитикаРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Потребление", "Регистратор, СтатьяРасходов, АналитикаРасходов");
	
	ЦепочкиДвижений = ЦепочкиДвиженийЗапросом(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамИзВыборки(КонтекстДвижений, ДанныеДляРасчета, РасчетныеДанные, ЦепочкиДвижений, Регистраторы, Тест);

	// Шаг 4: Удаляем строки, не требующие записи в базу.
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеДанные);
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеДанные.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеДанные;
	
КонецФункции

Функция ТекстПрочиеРасходыИнициализация() //вт ВТПриход, ВТПоступило, РасходыКРаспределению, Распределить
	Возврат Документы.РаспределениеПрочихЗатрат.ТекстЗапросаПоступилоПрочихРасходов() + "
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Направление,
	|	Т.ДоляСтоимости,
	|	Т.НалоговоеНазначение,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.СтоимостьРеглБезНДС,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница
	|ПОМЕСТИТЬ
	|	РасходыКРаспределению
	|ИЗ
	|	&РасчетныеРасходыКРаспределению КАК Т
	|;
	|ВЫБРАТЬ
	|	Д.Ссылка КАК Регистратор,
	|	Д.Дата КАК Период,
	|	Д.Организация,
	|	Д.Подразделение КАК ПодразделениеИсточник,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПриемник,
	|	Д.Подразделение КАК Подразделение,
	|	Д.ВариантРаспределения,
	|	Д.СтатьяРасходов,
	|	Д.АналитикаРасходов,
	|	Д.СтатьяКалькуляции,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.ПустаяСсылка) КАК БазаРаспределения,
	|	ЛОЖЬ КАК ГруппироватьСуммыПоПодразделениям,
	|	Р.ДоляСтоимости КАК ДоляСтоимости,
	|	Р.НалоговоеНазначение,
	|	Р.Стоимость КАК Сумма,
	|	Р.СтоимостьБезНДС КАК СуммаБезНДС,
	|	Р.СтоимостьРегл КАК СуммаРегл,
	|	Р.СтоимостьРеглБезНДС КАК СуммаРеглБезНДС,
	|	Р.НДСРегл КАК НДСРегл,
	|	Р.ПостояннаяРазница,
	|	Р.ВременнаяРазница
	|ПОМЕСТИТЬ
	|	Распределить
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК Д
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоступило КАК Т
	|	ПО Т.Организация = Д.Организация
	|		И Т.Подразделение = Д.Подразделение
	|		И Т.СтатьяРасходов = Д.СтатьяРасходов
	|		И Т.АналитикаРасходов = Д.АналитикаРасходов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыКРаспределению КАК Р
	|		ПО Р.Регистратор = Д.Ссылка
	|		И Р.Направление = ""Списание""
	|ГДЕ
	|	Д.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Д.Организация В (&МассивОрганизаций)
	|	И Д.Проведен
	|	И Р.ДоляСтоимости <> 0
	|";
КонецФункции

Функция ТекстОписаниеДанныхДляПрочихРасходов()
	Возврат "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	0 КАК Приоритет,
	|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.Регистратор КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК КорСтатьяРасходов,
	|	Т.АналитикаРасходов КАК КорАналитикаРасходов,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
	|	0. КАК Знаменатель,
	|	0. КАК ДоляСтоимости,
	|	0. КАК Сумма,
	|	0. КАК СуммаБезНДС,
	|	0. КАК СуммаРегл,
	|	0. КАК СуммаРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Т
	|";
КонецФункции

Функция ТекстПрочиеРасходыПартия() // использует Распределить
	Возврат "
	|ВЫБРАТЬ
	|	10 КАК Приоритет,
	|	""Партия"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДД.Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.Регистратор КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
	|	ДД.НалоговоеНазначение,
	|	ДД.ДоляСтоимости КАК Знаменатель,
	|	ДД.ДоляСтоимости,
	|	ДД.Сумма,
	|	ДД.СуммаБезНДС,
	|	ДД.СуммаРегл,
	|	ДД.СуммаРеглБезНДС,
	|	ДД.НДСРегл,
	|	ДД.ПостояннаяРазница,
	|	ДД.ВременнаяРазница
	|ИЗ
	|	Распределить КАК ДД
	|";
КонецФункции

Функция ТекстПрочиеРасходыПотребление() // использует Распределить
	Возврат "
	|ВЫБРАТЬ
	|	20 КАК Приоритет,
	|	""Потребление"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	Строки.СтатьяРасходов,
	|	Строки.АналитикаРасходов,
	|	ДД.Регистратор КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	СУММА(Строки.ДоляСтоимости) КАК Знаменатель,
	|	СУММА(Строки.ДоляСтоимости) КАК ДоляСтоимости,
	|	0. КАК Сумма,
	|	0. КАК СуммаБезНДС,
	|	0. КАК СуммаРегл,
	|	0. КАК СуммаРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
	|	ПО Строки.Ссылка = ДД.Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НалоговоеНазначение,
	|	Строки.СтатьяРасходов,
	|	Строки.АналитикаРасходов
	|";
КонецФункции

Функция ТекстПрочиеРасходыСписание() // использует Распределить
	Возврат "
	|ВЫБРАТЬ
	|	30 КАК Приоритет,
	|	""Списание"" КАК ТипЗаписи,
	|	ЛОЖЬ КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	Строки.СтатьяРасходов,
	|	Строки.АналитикаРасходов,
	|	ДД.Регистратор КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
	|	СУММА(Строки.ДоляСтоимости) КАК Знаменатель,
	|	СУММА(Строки.ДоляСтоимости) КАК ДоляСтоимости,
	|	0. КАК Сумма,
	|	0. КАК СуммаБезНДС,
	|	0. КАК СуммаРегл,
	|	0. КАК СуммаРеглБезНДС,
	|	0. КАК НДСРегл,
	|	0. КАК ПостояннаяРазница,
	|	0. КАК ВременнаяРазница
	|ИЗ
	|	Распределить КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.Списание КАК Строки
	|	ПО Строки.Ссылка = ДД.Регистратор
	|СГРУППИРОВАТЬ ПО
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НалоговоеНазначение,
	|	Строки.СтатьяРасходов,
	|	Строки.АналитикаРасходов
	|";
КонецФункции

Функция ТекстПрочиеРасходыДополнение()
	Возврат "
	|ВЫБРАТЬ
	|	40 КАК Приоритет,
	|	""Дополнение"" КАК ТипЗаписи,
	|	ИСТИНА КАК РасчетЗавершен,
	|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Т.Период,
	|	Т.Регистратор,
	|	Т.Организация,
	|	ДД.Подразделение,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.Регистратор КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорСтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	Т.Подразделение КАК КорПодразделение,
	|	Т.ГруппаПродукции КАК ГруппаПродукции,
	|	Т.НалоговоеНазначение КАК НалоговоеНазначение,
	|	0. КАК Знаменатель,
	|	0. КАК ДоляСтоимости,
	|	СУММА(Т.Стоимость) КАК Сумма,
	|	СУММА(Т.СтоимостьБезНДС) КАК СуммаБезНДС,
	|	СУММА(Т.СтоимостьРегл) КАК СуммаРегл,
	|	СУММА(Т.СтоимостьРеглБезНДС) КАК СуммаРеглБезНДС,
	|	СУММА(Т.НДСРегл) КАК НДСРегл,
	|	СУММА(Т.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Т.ВременнаяРазница) КАК ВременнаяРазница
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ПО ДД.Ссылка = Т.Регистратор
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Т.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|СГРУППИРОВАТЬ ПО
	|	Т.Период,
	|	Т.Регистратор,
	|	Т.Организация,
	|	ДД.Подразделение,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.Подразделение,
	|	Т.НалоговоеНазначение,
	|	Т.ГруппаПродукции
	|";
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедуры

Процедура СформироватьПодразделенияПриемникиРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, МВТ) //вт ОтборПоПодразделениям
	
	// Формируем таблицу регистратор-организация-подр.источник-вышестоящее подр.
	
	ЗапросДокументыРаспределения = Новый Запрос("
	|ВЫБРАТЬ
	|	ДД.Ссылка КАК Документ,
	|	ДД.Подразделение КАК Подразделение,
	|	ДД.Подразделение.Родитель КАК ВышестоящееПодразделение
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК ДД
	|ГДЕ
	|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Проведен
	|	И ДД.НаправлениеРаспределения = &НаправлениеРаспределения");
	
	ЗапросДокументыРаспределения.УстановитьПараметр("НачалоПериода",		НачалоПериода);
	ЗапросДокументыРаспределения.УстановитьПараметр("ОкончаниеПериода",	КонецДня(ОкончаниеПериода));
	ЗапросДокументыРаспределения.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	
	ТЗРезультат = Новый ТаблицаЗначений;
	ТЗРезультат.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.РаспределениеПрочихЗатрат"));
	ТЗРезультат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	// Подразделения, затраты которых распределяются на вышестоящее.
	
	ЗапросДокументыРаспределения.УстановитьПараметр("НаправлениеРаспределения", 
		Перечисления.СпособыРаспределенияСтатейРасходов.ПоПоказателюНаВышестоящееПодразделение);
	Выборка = ЗапросДокументыРаспределения.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если Выборка.ВышестоящееПодразделение <> Справочники.СтруктураПредприятия.ПустаяСсылка() Тогда
			НовСтр = ТЗРезультат.Добавить();
			НовСтр.Документ = Выборка.Документ;
			НовСтр.Подразделение = Выборка.ВышестоящееПодразделение;
		КонецЕсли;
	КонецЦикла;
	
	// На нижестоящие.

	ЗапросНижестоящие = Новый Запрос("
		|ВЫБРАТЬ
		|	ДС.Ссылка КАК Подразделение
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК ДС
		|ГДЕ
		|	ДС.Ссылка В ИЕРАРХИИ(&ПодразделениеИсточник)
		|	И ДС.Ссылка <> &ПодразделениеИсточник");

	ЗапросДокументыРаспределения.УстановитьПараметр("НаправлениеРаспределения", 
		Перечисления.СпособыРаспределенияСтатейРасходов.ПоПоказателюНаНижестоящиеПодразделения);
	Выборка = ЗапросДокументыРаспределения.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ЗапросНижестоящие.УстановитьПараметр("ПодразделениеИсточник", Выборка.Подразделение);
		ВыборкаНижестоящие = ЗапросНижестоящие.Выполнить().Выбрать();
		Пока ВыборкаНижестоящие.Следующий() Цикл 
			НовСтр = ТЗРезультат.Добавить();
			НовСтр.Документ = Выборка.Документ;
			НовСтр.Подразделение = ВыборкаНижестоящие.Подразделение;
		КонецЦикла;
	КонецЦикла;
	
	// На все подразделения.
	
	ЗапросДокументыРаспределения.УстановитьПараметр("НаправлениеРаспределения", 
		Перечисления.СпособыРаспределенияСтатейРасходов.ПоПоказателюНаВсеПодразделения);
	Выборка = ЗапросДокументыРаспределения.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НовСтр = ТЗРезультат.Добавить();
		НовСтр.Документ = Выборка.Документ;
		НовСтр.Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЦикла;
	
	// По указанным подразделениям.
	
	ЗапросДокументыРаспределения.Текст = "
	|ВЫБРАТЬ
	|	ДД.Ссылка КАК Документ,
	|	ДД.Подразделение
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат.ОтборПоПодразделениям КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Т
	|	ПО ДД.Ссылка = Т.Ссылка
	|ГДЕ
	|	Т.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Проведен";
	
	Выборка = ЗапросДокументыРаспределения.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НовСтр = ТЗРезультат.Добавить();
		НовСтр.Документ = Выборка.Документ;
		НовСтр.Подразделение = Выборка.Подразделение;
	КонецЦикла;
	
	ЗапросРезультат = Новый Запрос("
	|ВЫБРАТЬ
	|	Т.Документ КАК Регистратор,
	|	Т.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ОтборПоПодразделениям
	|ИЗ
	|	&ТЗРезультат КАК Т");
	
	ЗапросРезультат.МенеджерВременныхТаблиц = МВТ;
	ЗапросРезультат.УстановитьПараметр("ТЗРезультат", ТЗРезультат);
	ЗапросРезультат.Выполнить();
	
КонецПроцедуры

Функция ТекстОбщиеСуммыПоРегистратору() // вт ОбщиеСуммы, использует БазаРаспределения
	Возврат "
	|ВЫБРАТЬ
	|	ДД.Регистратор,
	|	(ВЫБОР
	|		КОГДА ДД.ГруппироватьСуммыПоПодразделениям ТОГДА ДД.ПодразделениеПриемник
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ПодразделениеПриемник,
	|	СУММА(ДД.Количество) КАК ОбщееКоличество,
	|	СУММА(ДД.Объем) КАК ОбщийОбъем,
	|	СУММА(ДД.Вес) КАК ОбщийВес,
	|	СУММА(ДД.Стоимость) КАК ОбщаяСтоимость
	|ПОМЕСТИТЬ
	|	ОбщиеСуммы
	|ИЗ
	|	БазаРаспределения КАК ДД
	|СГРУППИРОВАТЬ ПО
	|	ДД.Регистратор,
	|	(ВЫБОР
	|		КОГДА ДД.ГруппироватьСуммыПоПодразделениям ТОГДА ДД.ПодразделениеПриемник
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
	|";
КонецФункции

Функция ТекстОтборПоГруппамПродукции() //вт ОтборПоГруппамПродукции
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор,
	|	Т.ГруппаПродукции
	|ПОМЕСТИТЬ
	|	ОтборПоГруппамПродукции
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Регистратор,
	|		Т.ГруппаПродукции,
	|		0
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат.ОтборПоГруппамПродукции КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|		ПО Т.Ссылка = ДД.Ссылка
	|	ГДЕ
	|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Проведен
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.Ссылка КАК Регистратор,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка),
	|		СУММА(ВЫБОР
	|					КОГДА Т.ГруппаПродукции ЕСТЬ NULL ТОГДА 0
	|					ИНАЧЕ 1 КОНЕЦ)
	|	ИЗ
	|		Документ.РаспределениеПрочихЗатрат КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат.ОтборПоГруппамПродукции КАК Т
	|		ПО ДД.Ссылка = Т.Ссылка
	|	ГДЕ
	|		ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Проведен
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Ссылка
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|					КОГДА Т.ГруппаПродукции ЕСТЬ NULL ТОГДА 0
	|					ИНАЧЕ 1 КОНЕЦ) = 0
	|	) КАК Т
	|";
КонецФункции

Функция ТекстОтборПоМатериалам() //вт ОтборПоМатериалам
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Ссылка КАК Регистратор,
	|	Т.Материал
	|ПОМЕСТИТЬ
	|	ОтборПоМатериалам
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат.ОтборПоМатериалам КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ПО ДД.Ссылка = Т.Ссылка
	|ГДЕ
	|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Проведен
	|";
КонецФункции

Функция ТекстОтборПоВидамРабот() //вт ОтборПоВидамРабот
	Возврат "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Ссылка КАК Регистратор,
	|	Т.ВидРабот
	|ПОМЕСТИТЬ
	|	ОтборПоВидамРабот
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат.ОтборПоВидамРабот КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДД
	|	ПО ДД.Ссылка = Т.Ссылка
	|ГДЕ
	|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Проведен
	|";
КонецФункции

Функция ТекстВыпускРаботСписанныхНаЗатратыБезЗаказа() //вт ВыпускРаботСписанныхНаЗатратыБезЗаказа
	Возврат "
	|ВЫБРАТЬ
	|	Выпуск.Ссылка КАК Распоряжение,
	|	Выпуск.КодСтроки КАК КодСтроки,
	|	ДД.Организация КАК Организация,
	|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
	|	Выпуск.Подразделение КАК ПодразделениеПриемник,
	|	Выпуск.СтатьяРасходов КАК СтатьяРасходов,
	|	Выпуск.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ
	|	ВыпускРаботСписанныхНаЗатратыБезЗаказа
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК Выпуск
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК ДД
	|		ПО ДД.Ссылка = Выпуск.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СР
	|		ПО СР.Ссылка = Выпуск.СтатьяРасходов
	|		И СР.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|ГДЕ
	|	&ФормироватьВыпускРаботСписанныхНаЗатраты
	|	И ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Проведен
	|	И НЕ ДД.ВыпускПоРаспоряжениям
	|";
КонецФункции

Функция ТекстДанныеПоСтоимостиМатЗатрат() //вт Данные_СтоимостьМатЗатрат
	Возврат "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.Продукция,
	|	Т.ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат) КАК БазаРаспределения,
	|	СУММА(
	|		(ВЫБОР
	|			КОГДА Т.Стоимость <> 0 ТОГДА Т.Стоимость
	|			ИНАЧЕ Т.Количество *
	|				(ЕСТЬNULL(Цены.Стоимость, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходы, 0)) КОНЕЦ)) КАК Стоимость,
	|	СУММА(
	|		(ВЫБОР
	|			КОГДА Т.СтоимостьБезНДС <> 0 ТОГДА Т.СтоимостьБезНДС
	|			ИНАЧЕ Т.Количество * 
	|				(ЕСТЬNULL(Цены.СтоимостьБезНДС, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходыБезНДС, 0)) КОНЕЦ)) КАК СтоимостьБезНДС,
	|	СУММА(
	|		(ВЫБОР
	|			КОГДА Т.СтоимостьРегл <> 0 ТОГДА Т.СтоимостьРегл
	|			ИНАЧЕ Т.Количество * ЕСТЬNULL(Цены.СтоимостьРегл, 0) КОНЕЦ)) КАК СтоимостьРегл
	|ПОМЕСТИТЬ Данные_СтоимостьМатЗатрат
	|ИЗ (
	|	ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(Д.Период, МЕСЯЦ) КАК Период,
	|		Д.Организация,
	|		ЕСТЬNULL(ОтчетПереработчика.Подразделение, ВЫРАЗИТЬ(Д.АналитикаУчетаНоменклатуры.Склад КАК Справочник.СтруктураПредприятия)) КАК Подразделение,
	|		Д.ЗаказНаПроизводство,
	|		Д.Этап,
	|		Д.КодСтрокиПродукция,
	|		Д.АналитикаУчетаНоменклатуры,
	|		Д.ВидЗапасов,
	|		Д.Продукция,
	|		Д.ДокументВыпуска,
	|		Д.НалоговоеНазначениеВыпуска,
	|		(ВЫБОР
	|			КОГДА НЕ &АналитическийУчетПоГруппамПродукции ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Д.Продукция.ГруппаАналитическогоУчета КОНЕЦ) КАК ГруппаПродукции,
	|		Д.Количество,
	|		Д.Стоимость,
	|		Д.СтоимостьБезНДС,
	|		Д.СтоимостьРегл
	|	ИЗ
	|		РегистрНакопления.ПартииНезавершенногоПроизводства КАК Д
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|			ПО Д.Регистратор = ОтчетПереработчика.Ссылка
	|	ГДЕ
	|		&ПартионныйУчетВключен
	|		И Д.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И Д.Организация В (&МассивОрганизаций)
	|		И Д.Активность
	|		И (Д.СтатьяКалькуляции.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Материальные)
	|			ИЛИ
	|			Д.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|			И Д.Регистратор ССЫЛКА Документ.ОтчетПереработчика)
	|		И Д.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Д.Продукция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	) КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК Цены
	|		ПО Цены.Организация = Т.Организация
	|		И Цены.Период = Т.Период
	|		И Цены.АналитикаУчетаНоменклатуры = Т.АналитикаУчетаНоменклатуры
	|		И (&НеВедетсяУчетСебестоимостиПоВидамЗапасов ИЛИ Цены.ВидЗапасов = Т.ВидЗапасов)
	|		И Цены.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.Продукция,
	|	Т.ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.ГруппаПродукции
	|ИМЕЮЩИЕ
	|	СУММА(
	|		(ВЫБОР
	|			КОГДА Т.Стоимость <> 0 ТОГДА Т.Стоимость
	|			ИНАЧЕ Т.Количество *
	|				(ЕСТЬNULL(Цены.Стоимость, 0) + ЕСТЬNULL(Цены.СтоимостьДопРасходы, 0)) КОНЕЦ)) > 0
	|";
КонецФункции

Функция ТекстДанныеПоСтоимостиМатЗатратБезПУ()
	Возврат "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.Продукция,
	|	Т.ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаМатериальныхЗатрат) КАК БазаРаспределения,
	|	ВЫРАЗИТЬ(СУММА(Т.Количество * ЕСТЬNULL(С.Стоимость, 0) + Т.Количество * ЕСТЬNULL(С.СтоимостьДопРасходы, 0)) КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	ВЫРАЗИТЬ(СУММА(Т.Количество * ЕСТЬNULL(С.СтоимостьБезНДС, 0) + Т.Количество * ЕСТЬNULL(С.СтоимостьДопРасходыБезНДС, 0)) КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(СУММА(Т.Количество * ЕСТЬNULL(С.СтоимостьРегл, 0)) КАК ЧИСЛО(15, 2)) КАК СтоимостьРегл
	|ИЗ (
	|	ВЫБРАТЬ
	|		Д.Период,
	|		Д.Организация,
	|		ЕСТЬNULL(ОтчетПереработчика.Подразделение, ВЫРАЗИТЬ(Д.АналитикаУчетаНоменклатуры.Склад КАК Справочник.СтруктураПредприятия)) КАК Подразделение,
	|		Д.ЗаказНаПроизводство,
	|		Д.Этап,
	|		Д.КодСтрокиПродукция,
	|		Д.Продукция,
	|		Д.АналитикаУчетаНоменклатуры,
	|		Д.ВидЗапасов,
	|		Д.ДокументВыпуска,
	|		Д.НалоговоеНазначениеВыпуска,
	|		(ВЫБОР
	|			КОГДА НЕ &АналитическийУчетПоГруппамПродукции ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ Д.Продукция.ГруппаАналитическогоУчета КОНЕЦ) КАК ГруппаПродукции,
	|		Д.Количество
	|	ИЗ
	|		РегистрНакопления.ПартииНезавершенногоПроизводства КАК Д
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|		ПО Д.Регистратор = ОтчетПереработчика.Ссылка
	|	ГДЕ
	|		НЕ &ПартионныйУчетВключен
	|		И Д.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И Д.Организация В (&МассивОрганизаций)
	|		И Д.Активность
	|		И (Д.СтатьяКалькуляции.ТипЗатрат = ЗНАЧЕНИЕ(Перечисление.ТипыЗатрат.Материальные)
	|			ИЛИ
	|			Д.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|			И Д.Регистратор ССЫЛКА Документ.ОтчетПереработчика)
	|		И Д.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Д.Продукция <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	) КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК С
	|	ПО Т.Организация = С.Организация
	|		И С.Период = НАЧАЛОПЕРИОДА(Т.Период, МЕСЯЦ)
	|		И С.АналитикаУчетаНоменклатуры = Т.АналитикаУчетаНоменклатуры
	|		И (&НеВедетсяУчетСебестоимостиПоВидамЗапасов ИЛИ Т.ВидЗапасов = С.ВидЗапасов)
	|		И С.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.Продукция,
	|	Т.ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.ГруппаПродукции
	|ИМЕЮЩИЕ
	|	ВЫРАЗИТЬ(СУММА(Т.Количество * ЕСТЬNULL(С.Стоимость, 0) + Т.Количество * ЕСТЬNULL(С.СтоимостьДопРасходы, 0)) КАК ЧИСЛО(15, 2)) > 0
	|";
КонецФункции

Функция ТекстДанныеПоЗатратамНаОплатуТрудаНЗП()//вт Данные_ЗатратыНаОплатуТруда
	Возврат "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.ВидРабот,
	|	Т.Продукция,
	|	Т.ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда) КАК БазаРаспределения,
	|	СУММА(Т.Стоимость) КАК Стоимость
	|ПОМЕСТИТЬ
	|	Данные_ЗатратыНаОплатуТруда
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Т.КодСтрокиПродукция <> 0
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.ЗаказНаПроизводство,
	|	Т.Этап,
	|	Т.КодСтрокиПродукция,
	|	Т.ВидРабот,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.Продукция,
	|	Т.ГруппаПродукции
	|";
КонецФункции

Функция ТекстДанныеПоЗатратамНаОплатуТрудаБезЗаказа()
	Возврат "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение КАК ПодразделениеПриемник,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	Т.КодСтроки КАК КодСтрокиПродукция,
	|	Т.ВидРабот,
	|	СА.Номенклатура КАК Продукция,
	|	Т.ГруппаПродукции,
	|	Т.ДокументВыпуска,
	|	Т.НалоговоеНазначениеВыпуска,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыБазыРаспределенияРасходов.СуммаРасходовНаОплатуТруда) КАК БазаРаспределения,
	|	СУММА(Т.Стоимость) КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СА
	|	ПО СА.Ссылка = Т.АналитикаУчетаПродукции
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Т.КодСтрокиПродукция = 0
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.КодСтроки,
	|	Т.ВидРабот,
	|	СА.Номенклатура,
	|	Т.ГруппаПродукции,
	|	Т.НалоговоеНазначениеВыпуска,
	|	Т.ДокументВыпуска
	|";
КонецФункции

#КонецОбласти

#КонецОбласти


#Область РасчетПрочихРасходовНезавершенногоПроизводства

Функция ДанныеДляПрочихРасходовНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Период, Регистратор, Приоритет 
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|";
	ИсходныйТекстЗапроса =
		ТекстПрочиеРасходыНЗПИнициализация() + ";" // вт ЗаказыКРаспределению, ДолиСтоимости, ВыпускиБезЗаказа
		+ ТекстОписаниеДанныхДляПрочихРасходовНЗП()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПрочихРасходовНЗП() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПрочихРасходовНЗПуПереработчика() // использует ДолиСтоимости
		//++ НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПрочиеРасходыНЗП() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыРаспределение()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыВыпускиПоЗаказам()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыОтчетыДавальцам()
		//-- НЕ УТКА
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПрочиеРасходыНЗПБезЗаказов() // ВыпускиБезЗаказа
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПрочиеРасходыНЗПБезЗаказовПоБазе() // использует СписанияНаВыпуск
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПрочиеРасходыПереработчик() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыДавальческиеПолуфабрикаты() // использует ДолиСтоимости
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыОтчетыПереработчика()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыСписанияЗатратНаВыпуск()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыВыпускиБезЗаказов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыВыпускиБезЗаказовБезСписанияЗатратНаВыпуск()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыПоступленияОтПереработчиков()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПрочихРасходовНЗП());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Организация", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПрочиеРасходыНЗП(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПрочихРасходовНЗП());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений
	КонтекстЦепочек = ОписаниеЦепочек("Дополнение, Распределение, ПоБазеБезЗаказа, СписанияНаВыпуск, Партия, ПартияБезЗаказа, Остаток, Выпуск, ВыпускБезЗаказа, ПолуфабрикатДавальца, ОтчетДавальцу");
	
	ПоляПотреблений = "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "ПолуфабрикатДавальца", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Распределение", "Организация, ЗаказНаПроизводство, КодСтрокиПродукция, Спецификация, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "СписанияНаВыпуск", "Организация, ЗаказНаПроизводство");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "СписанияНаВыпуск", "ПоБазеБезЗаказа", "Организация, ЗаказНаПроизводство");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускБезЗаказа", "Регистратор, КодСтрокиПродукция");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускБезЗаказа", "ПартияБезЗаказа", "ДокументВыпуска, КодСтрокиПродукция");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускБезЗаказа", "СписанияНаВыпуск", "ДокументВыпуска, КодСтрокиПродукция");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПолуфабрикатДавальца", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПолуфабрикатДавальца", "Выпуск", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПолуфабрикатДавальца", "ВыпускБезЗаказа", "Организация, Назначение, Продукция, Характеристика");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ОтчетДавальцу", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ОтчетДавальцу", "Выпуск", "Организация, Назначение, Продукция, Характеристика");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ОтчетДавальцу", "ВыпускБезЗаказа", "Организация, Назначение, Продукция, Характеристика");
	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПрочиеРасходыНезавершенногоПроизводства",
		"ПрочиеРасходыНезавершенногоПроизводства",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"ДоляСтоимости, Стоимость, СтоимостьБезНДС, СтоимостьРегл, ПостояннаяРазница, ВременнаяРазница",
		"Знаменатель", "Знаменатель", "ДокументИсточник", "Период");
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкамТолкающимМетодом(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
		
	// Шаг 4: Удаляем нерассчитанные партии
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	Возврат РасчетныеПартии;
	
КонецФункции

Функция ТекстПрочиеРасходыНЗПИнициализация() // вт ЗаказыКРаспределению, ДолиСтоимости, ВыпускиБезЗаказов, СписанияНаВыпуск
	Возврат "
		//++ НЕ УТКА
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Распоряжение.Распоряжение КАК Заказ,
		|	ДД.Распоряжение.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ
		|	ЗаказыКРаспределению
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции.ОстаткиИОбороты(&НачалоПериода, &ОкончаниеПериода, , , Распоряжение.Организация В (&МассивОрганизаций)) КАК ДД
		|ГДЕ
		|	ДД.ЗаказаноПриход <> 0
		|	ИЛИ ДД.ЗаказаноКонечныйОстаток <> 0
		|;
		|////////////////////////////////////////////////////////////////////////////
		//-- НЕ УТКА
		|ВЫБРАТЬ
		|	Строки.ЗаказПереработчику КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	СУММА(ВЫБОР Строки.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Строки.ДоляСтоимости КОНЕЦ) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ДолиСтоимости
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Продукция КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ТипСтоимости <> ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
		|СГРУППИРОВАТЬ ПО
		|	Строки.ЗаказПереработчику
		//++ НЕ УТКА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	СУММА(ВЫБОР ДД.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ ДД.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК ДоляСтоимости
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыКРаспределению КАК Заказы
		|		ПО Заказы.Заказ = МаршрутныйЛист.Распоряжение
		|			И Заказы.КодСтроки = МаршрутныйЛист.КодСтроки
		|ГДЕ
		|	ДД.Период >= &НачалоПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец
		//-- НЕ УТКА
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки,
		|	СУММА(Выходы.Количество) КАК Количество,
		|	СУММА(Выходы.ДоляСтоимости) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	ВыпускиБезЗаказов
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Ссылка КАК Распоряжение,
		|	Строки.КодСтроки,
		|	СУММА(Строки.Количество) КАК Количество,
		|	1 КАК ДоляСтоимости
		|ИЗ
		|	Документ.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Подразделения
		|		ПО Подразделения.Ссылка = ДД.Подразделение
		|		И НЕ Подразделения.ИспользуетсяСписаниеЗатратНаВыпуск
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Распоряжение = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И НЕ ДД.ВыпускПоРаспоряжениям
		|	И Выходы.Ссылка ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка,
		|	Строки.КодСтроки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК Распоряжение,
		|	0. КАК КодСтроки,
		|	СУММА(ДД.Количество) КАК Количество,
		|	1 КАК ДоляСтоимости
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		|	И НЕ ДД.Заказ ССЫЛКА Документ.ЗаказПереработчику
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Ссылка,
		|	СУММА(Выходы.Количество) КАК Количество,
		|	СУММА(Выходы.ДоляСтоимости) КАК ДоляСтоимости
		|ПОМЕСТИТЬ
		|	СписанияНаВыпуск
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляПрочихРасходовНЗП()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка) КАК Этап,
		|	ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) КАК СтатьяКалькуляции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеВыпуска,
		|	0. КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументДвижения КАК ДокументДвижения,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.ДокументИсточник КАК ДокументИсточник,
		|	ДД.ДокументВыпуска КАК ДокументВыпуска,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПрочихРасходовНЗП() // использует ДолиСтоимости
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ЭтапыПроизводства.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	ЕСТЬNULL(Доли.ДоляСтоимости, 1) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	ДД.ДоляСтоимостиОстаток КАК ДоляСтоимости,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.СтоимостьРеглБезНДСОстаток КАК СтоимостьРеглБезНДС,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		//++ НЕ УТКА
		|	ЕСТЬNULL(Заказы.Назначение,
		//-- НЕ УТКА
		|	НЕОПРЕДЕЛЕНО
		//++ НЕ УТКА
		|	)
		//-- НЕ УТКА
		|	КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК ЭтапыПроизводства
		|		ПО ЭтапыПроизводства.Ссылка = ДД.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = ЭтапыПроизводства.Владелец
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК Заказы
		|		ПО Заказы.Ссылка = ДД.ЗаказНаПроизводство
		|		И Заказы.ПроизводствоПоЗаказу
		//-- НЕ УТКА
		|";
КонецФункции

Функция ТекстОстаткиПрочихРасходовНЗПуПереработчика() // использует ДолиСтоимости
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	ЕСТЬNULL(Доли.ДоляСтоимости, 1) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	ДД.ДоляСтоимостиОстаток КАК ДоляСтоимости,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.СтоимостьРеглБезНДСОстаток КАК СтоимостьРеглБезНДС,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства.Остатки(&НачалоПериода,
		|		Организация В (&МассивОрганизаций)
		|		И ЗаказНаПроизводство ССЫЛКА Документ.ЗаказПереработчику) КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|";
КонецФункции

//++ НЕ УТКА
Функция ТекстПервичныеПрочиеРасходыНЗП() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ЭтапыПроизводства.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.ДоляСтоимости) КАК ДоляСтоимости,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьРеглБезНДС) КАК СтоимостьРеглБезНДС,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	ЕСТЬNULL(Заказы.Назначение, НЕОПРЕДЕЛЕНО) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.ДокументВыпуска КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК ЭтапыПроизводства
		|		ПО ЭтапыПроизводства.Ссылка = ДД.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = ЭтапыПроизводства.Владелец
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК Заказы
		|		ПО Заказы.Ссылка = ДД.ЗаказНаПроизводство
		|		И Заказы.ПроизводствоПоЗаказу
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказНаПроизводство
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ЭтапыПроизводства.Владелец,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументВыпуска,
		|	ЕСТЬNULL(Заказы.Назначение, НЕОПРЕДЕЛЕНО)
		|";
КонецФункции

Функция ТекстПрочиеРасходыРаспределение()
	Возврат "
		|ВЫБРАТЬ
		|	30 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	МаршрутныйЛист.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ВЫБОР ДД.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ ДД.ДоляСтоимости КОНЕЦ
		|		* (МаршрутныйЛист.Произведено + МаршрутныйЛист.Брак)) КАК Знаменатель,
		|	СУММА(ДД.Заказано) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьБезРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	МаршрутныйЛист.Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|ГДЕ
		|	ДД.Период >= &НачалоПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|	И ДД.Заказано <> 0
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛист.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	МаршрутныйЛист.Этап,
		|	МаршрутныйЛист.Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

Функция ТекстПрочиеРасходыВыпускиПоЗаказам()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Выпуск"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	МаршрутныйЛист.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	МаршрутныйЛист.Распоряжение КАК ЗаказНаПроизводство,
		|	МаршрутныйЛист.КодСтроки КАК КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	МаршрутныйЛист.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ДД.Заказано) КАК Знаменатель,
		|	СУММА(ДД.Заказано) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьБезНДСРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	(ВЫБОР 
		|		КОГДА НЕ ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК РазделУчета,
		|	ДД.ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства КАК МаршрутныйЛист
		|		ПО МаршрутныйЛист.Ссылка = ДД.Распоряжение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = МаршрутныйЛист.Этап
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = ДД.ВидЗапасов.Назначение
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И МаршрутныйЛист.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	МаршрутныйЛист.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	МаршрутныйЛист.Распоряжение,
		|	МаршрутныйЛист.КодСтроки,
		|	Этапы.Владелец,
		|	МаршрутныйЛист.Этап,
		|	(ВЫБОР
		|		КОГДА НЕ ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		КОГДА Аналитика.Склад ССЫЛКА Справочник.Склады ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	ДД.ВидЗапасов.Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика
		|";
КонецФункции

Функция ТекстПрочиеРасходыОтчетыДавальцам()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ОтчетДавальцу"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.Регистратор.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Заказ,
		|	ДД.КодСтроки,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ВидЗапасов.Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика
		|";
КонецФункции
//-- НЕ УТКА

Функция ТекстПервичныеПрочиеРасходыНЗПБезЗаказов() // использует ВыпускиБезЗаказа
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА Выпуски.ДоляСтоимости ЕСТЬ NULL ТОГДА ""Партия""
		|		ИНАЧЕ ""ПартияБезЗаказа"" КОНЕЦ) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ЗаказНаПроизводство КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ЕСТЬNULL(Выпуски.Количество, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.ДоляСтоимости) КАК ДоляСтоимости,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьРеглБезНДС) КАК СтоимостьРеглБезНДС,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	ДД.ЗаказНаПроизводство КАК ДокументИсточник,
		|	ДД.ДокументВыпуска КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВыпускиБезЗаказов КАК Выпуски
		|		ПО Выпуски.Распоряжение = ДД.ДокументВыпуска
		|		И Выпуски.КодСтроки = ДД.КодСтрокиПродукция
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.ЗаказНаПроизводство ССЫЛКА Справочник.РесурсныеСпецификации
		|		ИЛИ ДД.ЗаказНаПроизводство ССЫЛКА Документ.ВыпускПродукции
		|		ИЛИ ДД.ЗаказНаПроизводство = НЕОПРЕДЕЛЕНО)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Выпуски.ДоляСтоимости ЕСТЬ NULL ТОГДА ""Партия""
		|		ИНАЧЕ ""ПартияБезЗаказа"" КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ДокументВыпуска,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.НалоговоеНазначение,
		|	ДД.ГруппаПродукции
		|";
КонецФункции

Функция ТекстПервичныеПрочиеРасходыНЗПБезЗаказовПоБазе() // использует СписанияНаВыпуск
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ПоБазеБезЗаказа"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ЗаказНаПроизводство КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ВЫБОР ЕСТЬNULL(СписанияНаВыпуск.ДоляСтоимости, 1) КОГДА 0 ТОГДА 1
		|				ИНАЧЕ ЕСТЬNULL(СписанияНаВыпуск.ДоляСтоимости, 1) КОНЕЦ) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.ДоляСтоимости) КАК ДоляСтоимости,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьРеглБезНДС) КАК СтоимостьРеглБезНДС,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	ДД.ЗаказНаПроизводство КАК ДокументИсточник,
		|	ДД.ДокументВыпуска КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ СписанияНаВыпуск КАК СписанияНаВыпуск
		|		ПО СписанияНаВыпуск.Ссылка = ДД.ЗаказНаПроизводство
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ЗаказНаПроизводство ССЫЛКА Документ.СписаниеЗатратНаВыпуск
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	ДД.ДокументВыпуска,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.НалоговоеНазначение,
		|	ДД.ГруппаПродукции
		|";
КонецФункции

Функция ТекстПервичныеПрочиеРасходыПереработчик() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК Знаменатель,
		|	0. КАК КоличествоПродукции,
		|	СУММА(ДД.ДоляСтоимости) КАК ДоляСтоимости,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьРеглБезНДС) КАК СтоимостьРеглБезНДС,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.ДокументВыпуска КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК Продукция,
		|	НЕОПРЕДЕЛЕНО КАК Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ЗаказНаПроизводство ССЫЛКА Документ.ЗаказПереработчику
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
		|	И НЕ ДД.РасчетСебестоимости
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументВыпуска,
		|	ДД.НалоговоеНазначение,
		|	ДД.ГруппаПродукции
		|";
КонецФункции

Функция ТекстПрочиеРасходыДавальческиеПолуфабрикаты() // использует ДолиСтоимости
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ПолуфабрикатДавальца"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	Аналитика.Склад КАК Подразделение,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец КАК Спецификация,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	МАКСИМУМ(ЕСТЬNULL(Доли.ДоляСтоимости, 1)) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	ДД.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	Аналитика.Номенклатура КАК Продукция,
		|	Аналитика.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|		ПО Этапы.Ссылка = ДД.Этап
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ДолиСтоимости КАК Доли
		|		ПО Доли.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|		И Доли.КодСтрокиПродукция = ДД.КодСтрокиПродукция
		|		И Доли.Спецификация = Этапы.Владелец
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|	И ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И ДД.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	Аналитика.Склад,
		|	ДД.ЗаказНаПроизводство,
		|	ДД.КодСтрокиПродукция,
		|	Этапы.Владелец,
		|	ДД.Этап,
		|	ДД.СтатьяКалькуляции,
		|	ДД.НалоговоеНазначение,
		|	ДД.ВидЗапасов.Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика
		|";
КонецФункции

Функция ТекстПрочиеРасходыОтчетыПереработчика()
	Возврат "
		|ВЫБРАТЬ
		|	30 КАК Приоритет,
		|	""Распределение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	Строки.ЗаказПереработчику КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ВЫБОР Строки.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Строки.ДоляСтоимости КОНЕЦ) КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК ДокументВыпуска,
		|	Строки.Номенклатура КАК Продукция,
		|	Строки.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ОтчетПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика.Продукция КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И Строки.ТипСтоимости <> ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
		|	И Строки.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Организация,
		|	ДД.НалоговоеНазначение,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ЗаказПереработчику,
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

Функция ТекстПрочиеРасходыСписанияЗатратНаВыпуск()
	Возврат "
		|ВЫБРАТЬ
		|	30 КАК Приоритет,
		|	""СписанияНаВыпуск"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1,1,1) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	ДД.Ссылка КАК ЗаказНаПроизводство,
		|	Выходы.КодСтроки КАК КодСтрокиПродукция,
		|	ДД.Ссылка КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	Выходы.Распоряжение.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ВЫБОР Выходы.ДоляСтоимости КОГДА 0 ТОГДА 1
		|		ИНАЧЕ Выходы.ДоляСтоимости КОНЕЦ) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК РазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	НЕОПРЕДЕЛЕНО КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	Выходы.Распоряжение КАК ДокументВыпуска,
		|	Выходы.Номенклатура КАК Продукция,
		|	Выходы.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.СписаниеЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеЗатратНаВыпуск.ВыходныеИзделия КАК Выходы
		|		ПО Выходы.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	Выходы.Распоряжение,
		|	Выходы.КодСтроки,
		|	Выходы.Номенклатура,
		|	Выходы.Характеристика
		|";
КонецФункции

Функция ТекстПрочиеРасходыВыпускиБезЗаказов()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ВыпускБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	ДД.КодСтроки КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	ДД.АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА
		//-- НЕ УТКА
		|			ДД.КорРазделУчета
		//++ НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) КОНЕЦ)
		//-- НЕ УТКА
		|		КАК РазделУчета,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Распоряжение КАК ДокументВыпуска,
		|	ДД.Номенклатура КАК Продукция,
		|	ДД.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаСписаниеПоНормативам КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = ДД.Назначение
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		//-- НЕ УТКА
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Подразделения
		|		ПО Подразделения.Ссылка = ДД.Подразделение
		|		И Подразделения.ИспользуетсяСписаниеЗатратНаВыпуск
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КодСтроки,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.НалоговоеНазначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		//++ НЕ УТКА
		|	(ВЫБОР
		|		КОГДА ЗаказДавальца.Ссылка ЕСТЬ NULL ТОГДА
		//-- НЕ УТКА
		|			ДД.КорРазделУчета
		//++ НЕ УТКА
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) КОНЕЦ)
		//-- НЕ УТКА
		|		,
		|	ДД.КорВидЗапасов,
		|	ДД.Распоряжение,
		|	ДД.Назначение
		|";
КонецФункции
	
Функция ТекстПрочиеРасходыВыпускиБезЗаказовБезСписанияЗатратНаВыпуск()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""ВыпускБезЗаказа"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
		|	Строки.КодСтроки КАК КодСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	(ВЫБОР КОГДА Строки.СписатьНаРасходы ТОГДА АналитикаВПодразделении.КлючАналитики
		|		ИНАЧЕ Строки.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(Строки.Количество) КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	(ВЫБОР
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказДавальца.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		//-- НЕ УТКА
		|		КОГДА ДД.НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
		|	Строки.ВидЗапасов КАК ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	Строки.Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Ссылка КАК ДокументВыпуска,
		|	Строки.Номенклатура КАК Продукция,
		|	Строки.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ВыпускПродукции КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
		|		ПО Назначения.Ссылка = Строки.Назначение
		//++ НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ПО ЗаказДавальца.Ссылка = Назначения.Заказ
		//-- НЕ УТКА
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
		|	ПО
		|		Строки.Номенклатура = АналитикаВПодразделении.Номенклатура
		|		И Строки.Характеристика = АналитикаВПодразделении.Характеристика
		|		И (ДД.Подразделение = АналитикаВПодразделении.Склад)
		|		И (ВЫБОР
		|			КОГДА Строки.СтатусУказанияСерий = 14 ТОГДА Строки.Серия = АналитикаВПодразделении.Серия
		|			ИНАЧЕ АналитикаВПодразделении.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ)
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Подразделения
		|		ПО Подразделения.Ссылка = ДД.Подразделение
		|		И НЕ Подразделения.ИспользуетсяСписаниеЗатратНаВыпуск
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И НЕ ДД.ВыпускПоРаспоряжениям
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	Строки.КодСтроки,
		|	(ВЫБОР КОГДА Строки.СписатьНаРасходы ТОГДА АналитикаВПодразделении.КлючАналитики
		|		ИНАЧЕ Строки.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	(ВЫБОР
		//++ НЕ УТКА
		|		КОГДА НЕ ЗаказДавальца.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		//-- НЕ УТКА
		|		КОГДА ДД.НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	Строки.ВидЗапасов,
		|	Строки.Назначение,
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

Функция ТекстПрочиеРасходыПоступленияОтПереработчиков()
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА ""ВыпускБезЗаказа""
		|		ИНАЧЕ ""Выпуск"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Строки.ЗаказПереработчику КОНЕЦ) КАК ЗаказНаПроизводство,
		|	0. КАК КодСтрокиПродукция,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	НЕОПРЕДЕЛЕНО КАК Этап,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеВыпуска,
		|	СУММА(Строки.Количество) КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК КоличествоПродукции,
		|	0. КАК ДоляСтоимости,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	Строки.ВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	Строки.ВидЗапасов.Назначение КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.Ссылка КАК ДокументВыпуска,
		|	Строки.Номенклатура КАК Продукция,
		|	Строки.Характеристика,
		|	НЕОПРЕДЕЛЕНО КАК Серия
		|ИЗ
		|	Документ.ПоступлениеОтПереработчика КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА ""ВыпускБезЗаказа""
		|		ИНАЧЕ ""Выпуск"" КОНЕЦ),
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	ДД.Организация,
		|	(ВЫБОР
		|		КОГДА Строки.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ Строки.ЗаказПереработчику КОНЕЦ),
		|	Строки.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение,
		|	Строки.ВидЗапасов,
		|	Строки.ВидЗапасов.Назначение,
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

#КонецОбласти


#Область РасчетСебестоимостиПроизводства

Функция ДанныеДляСебестоимостиПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "";
	ИсходныйТекстЗапроса = 
		ТекстСебестоимостьПроизводстваИнициализация() + ";" // вт Возвраты
		+ ТекстОписаниеСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИсходныеДвиженияСебестоимостиПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратИзПроизводстваСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратИзПроизводстваСебестоимостьБезПУ() // использует Возвраты
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратИзПроизводстваНаСкладСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеИзПроизводстваСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПеремещенияВПроизводствеСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииНезавершенногоПроизводстваСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТрудозатратыНЗПСебестоимость()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходыНЗПСебестоимость()
		+ ТекстСортировка;
		
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СебестоимостьПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	ИсходныйЗапрос.УстановитьПараметр("ИспользоватьПартионныйУчет", Константы.ИспользоватьПартионныйУчет.Получить());
	ИсходныйЗапрос.УстановитьПараметр("ВключатьНДСВСебестоимостьПриУсловнойПродаже", НДСОбщегоНазначенияПовтИсп.ВключатьНДСВСебестоимостьПриУсловнойПродаже());
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	УдалитьНеИзменившиесяДанныеСебестоимостиПроизводства(МВТ, НачалоПериода, ОкончаниеПериода);
	Возврат МВТ;
КонецФункции

Функция ТекстСебестоимостьПроизводстваИнициализация() // вт Возвраты, АналитикаДавальца
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов
		|ПОМЕСТИТЬ
		|	Возвраты
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
		|	И НЕ &ИспользоватьПартионныйУчет
		|;
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК АналитикаУчетаПоПартнерам
		|ПОМЕСТИТЬ
		|	АналитикаДавальца
		|
		//++ НЕ УТКА
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	МАКСИМУМ(ДД.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		|	И ДД.АналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		//-- НЕ УТКА
		|";
КонецФункции

Функция ТекстИсходныеДвиженияСебестоимостиПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СуммаДопРасходов,
		|	ДД.СуммаДопРасходовБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.СтоимостьРеглБезНДС КАК СтоимостьРеглБезНДС,
		|	ДД.НДСРегл КАК НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.НалоговоеНазначение,
		|	ДД.КорНалоговоеНазначение,
		|	ДД.ИдентификаторСтроки,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИЛИ ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)))
		|	И ДД.Количество <> 0
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		ИЛИ (ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства И НЕ &ИспользоватьПартионныйУчет))
		|";
КонецФункции
	
Функция ТекстВозвратИзПроизводстваСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА
		|		(ВЫБОР
		|			КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|			ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов, 
		|	ДД.Организация,
		|	СУММА(-ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорВидЗапасов, 
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	АналитикаПроизводства.Склад КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.КорВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаПроизводства
		|		ПО АналитикаПроизводства.Ссылка = ДД.КорАналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
		|	И ДД.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И &ИспользоватьПартионныйУчет
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА
		|		(ВЫБОР
		|			КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|			ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	АналитикаПроизводства.Склад,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение,
		|	ДД.КорВидЗапасов.ГруппаПродукции
		|";
КонецФункции

Функция ТекстВозвратИзПроизводстваСебестоимостьБезПУ() // использует Возвраты
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов, 
		|	ДД.Организация,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) КАК ХозяйственнаяОперация,
		|	Возвраты.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА Возвраты.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорВидЗапасов, 
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	АналитикаПроизводства.Склад КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаПроизводства
		|		ПО АналитикаПроизводства.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Возвраты КАК Возвраты
		|		ПО Возвраты.Регистратор = ДД.Регистратор
		|		И Возвраты.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
		|	И ДД.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И НЕ &ИспользоватьПартионныйУчет
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Возвраты.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА Возвраты.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	АналитикаПроизводства.Склад,
		|	ДД.НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение,
		|	ДД.ВидЗапасов.ГруппаПродукции
		|";
КонецФункции

Функция ТекстВозвратИзПроизводстваНаСкладСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов, 
		|	ДД.Организация,
		|	СУММА(-ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) КАК ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорВидЗапасов, 
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	АналитикаПроизводства.Склад КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.КорВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаПроизводства
		|		ПО АналитикаПроизводства.Ссылка = ДД.КорАналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
		|	И ДД.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И &ИспользоватьПартионныйУчет
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	АналитикаПроизводства.Склад,
		|	ДД.НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение,
		|	ДД.КорВидЗапасов.ГруппаПродукции
		|";
КонецФункции

Функция ТекстСписаниеИзПроизводстваСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов, 
		|	ДД.Организация,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов, 
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ДД.ПодразделениеРасходов КАК Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И ДД.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	ДД.ПодразделениеРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.ВидЗапасов.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ВидЗапасов.ГруппаПродукции
		|";
КонецФункции

Функция ТекстПеремещенияВПроизводствеСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов,
		|	ДД.Организация,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров) КАК ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.ПеремещениеМатериаловВПроизводстве
		|	И ДД.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов.НалоговоеНазначение,
		|	ДД.ВидЗапасов.ГруппаПродукции
		|";
КонецФункции

Функция ТекстПартииНезавершенногоПроизводстваСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов, 
		|	ДД.Организация,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПродукции КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ДД.КорРазделУчета КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорВидЗапасов, 
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	АналитикаДавальца.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика ТОГДА Поступление.Подразделение
		|		ИНАЧЕ Аналитика.Склад КОНЕЦ) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ДД.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеВыпуска КАК КорНалоговоеНазначение,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 И ДД.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции ТОГДА ""ВО""
		|		ИНАЧЕ """" КОНЕЦ) КАК ИдентификаторСтроки,
		|	ДД.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПартииНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика КАК Поступление
		|		ПО Поступление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ АналитикаДавальца КАК АналитикаДавальца
		|		ПО АналитикаДавальца.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
		|	И ДД.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ДД.КорРазделУчета КОНЕЦ),
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ), 
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика ТОГДА Поступление.Подразделение
		|		ИНАЧЕ Аналитика.Склад КОНЕЦ),
		|	АналитикаДавальца.АналитикаУчетаПоПартнерам,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 И ДД.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции ТОГДА ""ВО""
		|		ИНАЧЕ """" КОНЕЦ),
		|	ДД.ВидЗапасов.НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеВыпуска,
		|	ДД.ВидЗапасов.ГруппаПродукции
		|";
КонецФункции

Функция ТекстТрудозатратыНЗПСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов,
		|	ДД.Организация,
		|	0. КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.Стоимость) КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ДД.Подразделение КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	НЕОПРЕДЕЛЕНО КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаПродукции
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.КорРазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.Подразделение,
		|	ДД.НалоговоеНазначениеВыпуска,
		|	ДД.ГруппаПродукции
		|";
КонецФункции

Функция ТекстПрочиеРасходыНЗПСебестоимость()
	Возврат "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета КАК РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасов,
		|	ДД.Организация,
		|	0. КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	СУММА(ДД.СтоимостьРеглБезНДС +  
		|		ВЫБОР 
		|			КОГДА ДД.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
		|				ТОГДА ДД.НДСРегл 
		|			КОГДА 
		|			(
		|				(ДД.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая) 
		|	   			И ДД.НалоговоеНазначениеВыпуска.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая))
		|				ИЛИ (ДД.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) 
		|	   			И ДД.НалоговоеНазначениеВыпуска = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность))
		|			)
		|			И &ВключатьНДСВСебестоимостьПриУсловнойПродаже
		|				ТОГДА ДД.НДСРегл
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СтоимостьРегл,
		|	СУММА(ДД.СтоимостьРеглБезНДС) КАК СтоимостьРеглБезНДС,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ДД.Подразделение КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	ДД.Регистратор КАК ДокументДвижения,
		|	ДД.НалоговоеНазначениеВыпуска КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК КорНалоговоеНазначение,
		|	"""" КАК ИдентификаторСтроки,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаПродукции
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.РазделУчета,
		|	(ВЫБОР КОГДА &СебестоимостьПоВидамЗапасов ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.Подразделение,
		|	ДД.НалоговоеНазначениеВыпуска,
		|	ДД.НалоговоеНазначение,
		|	ДД.ГруппаПродукции
		|";
КонецФункции

Функция РегистраторыСебестоимостиПроизводства(ДанныеДляСебестоимостиПроизводства, НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	// Регистраторы из НеИзменившиесяДокументы не выбираем, чтобы не очистились их движения
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ НеИзменившиесяДокументы КАК Регистраторы
		|		ПО ДД.Регистратор = Регистраторы.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		//++ НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПеремещениеМатериаловВПроизводстве
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства)
		|	И Регистраторы.Регистратор ЕСТЬ NULL
		|";
	Регистраторы = Новый Соответствие;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеДляСебестоимостиПроизводства;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
	Возврат Регистраторы;
КонецФункции

Процедура УдалитьНеИзменившиесяДанныеСебестоимостиПроизводства(МВТ, НачалоПериода, ОкончаниеПериода)
	
	// Получим из метаданных информацию о структуре регистра
	КолонкиРегистра = Новый Структура;
	ТаблицаРегистра = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	Для Каждого Колонка Из ТаблицаРегистра.Колонки Цикл
		КолонкиРегистра.Вставить(
			Колонка.Имя,
			Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.Найти(Колонка.Имя) <> Неопределено);
	КонецЦикла;
	
	// Получим из текста запроса информацию о полях формируемых записей регистров
	// и сформируем запрос для отбора измененных движений 
	Запрос = Новый Запрос(ТекстОписаниеСебестоимость());
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	
	ТекстПоляГруппировки = "";
	ТекстПриведенныеПоля = "";
	ТекстПоляСуммирования = "";
	ТекстОтбор = "";
	ЭтоРесурсРегистра = Ложь;
	
	Для Каждого Колонка Из ТаблицаДвижений.Колонки Цикл
		Если КолонкиРегистра.Свойство(Колонка.Имя, ЭтоРесурсРегистра) Тогда
			Если ЭтоРесурсРегистра Тогда
				ТекстПоляСуммирования = ТекстПоляСуммирования + ?(ТекстПоляСуммирования = "", "", ", 
					|	") + "Т." + Колонка.Имя + " КАК " + Колонка.Имя;
				ТекстОтбор = ТекстОтбор + ?(ТекстОтбор = "", "", " 
					|	ИЛИ ") + "СУММА(Т." + Колонка.Имя + ") <> 0";
			Иначе
				ТекстПоляГруппировки = ТекстПоляГруппировки + ?(ТекстПоляГруппировки = "", "", ", 
					|	") + "Т." + Колонка.Имя;
				ТекстПриведенныеПоля = ТекстПриведенныеПоля + ?(ТекстПриведенныеПоля = "", "", ", 
					|	") + ТекстПриведениеЗначенияПоляКНужномуТипу(Колонка.Имя, Колонка.ТипЗначения);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТДокументыСНовымиДвижениями
	|ИЗ
	|	ДанныеПредварительные КАК Т
	|;
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТИзмененныеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		%5,
	|		%2
	|	ИЗ
	|		ДанныеПредварительные КАК Т
	|	
	|   ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		%1,
	|		%3
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыСНовымиДвижениями КАК ОтборРегистраторы
	|			ПО Т.Регистратор = ОтборРегистраторы.Регистратор
	|	ГДЕ
	|		Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И НЕ Т.РасчетСебестоимости
	|	) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	%1
	|ИМЕЮЩИЕ
	|	%4
	|;
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	%5,
	|	%2
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	ДанныеПредварительные КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзмененныеДокументы КАК ОтборРегистраторы
	|		ПО Т.Регистратор = ОтборРегистраторы.Регистратор
	|;
	|//////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеПредварительные
	|;
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ НеИзменившиесяДокументы
	|ИЗ
	|	ВТДокументыСНовымиДвижениями КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТИзмененныеДокументы КАК ИзмененныеДокументы
	|		ПО Т.Регистратор = ИзмененныеДокументы.Регистратор
	|ГДЕ
	|	ИзмененныеДокументы.Регистратор ЕСТЬ NULL
	|;
	|//////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДокументыСНовымиДвижениями
	|;
	|//////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИзмененныеДокументы
	|";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		ТекстПоляГруппировки, // %1
		ТекстПоляСуммирования, // %2
		СтрЗаменить(ТекстПоляСуммирования, "Т.", "-Т."), // %3
		ТекстОтбор, // %4
		ТекстПриведенныеПоля); // %5
		
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	// Сформируем две временные таблицы:
	// - Данные - новые движения, отличающиеся от старых движений (хранящихся в ИБ)
	// - НеИзменившиесяДокументы - перечень регистраторов, по которым не изменились движения
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстПриведениеЗначенияПоляКНужномуТипу(ИмяПоля, ТипПоля)
	
	// Используется для приведения значений измерений и реквизитов регистра к типу, указанному в их метаданных.
	// - считаем, что ресурсы приводить к типу не требуется - они всегда корректно выбираются в запросе
	// - в ТипПоля может быть Тип("NULL"), т.к. поле получаем из запроса, а не из самого регистра
	// Без приведения типа нельзя сравнивать новые движения (сформированные запросом) и старые движения (хранящиеся в регистре).
	
	ОсновнойТип = Неопределено;
	ТекстПоля   = "Т." + ИмяПоля;
	ТипыПоля    = ТипПоля.Типы();
	
	Если ТипыПоля.Количество() = 1 Тогда
		ОсновнойТип = ТипыПоля[0];
	ИначеЕсли ТипыПоля.Количество() = 2 Тогда
		Если ТипыПоля[0] = Тип("NULL") Тогда
			ОсновнойТип = ТипыПоля[1];
		ИначеЕсли ТипыПоля[1] = Тип("NULL") Тогда
			ОсновнойТип = ТипыПоля[0];
		Иначе
			Возврат ТекстПоля; // составной тип приводить к какому-то типу не надо
		КонецЕсли;
	Иначе
		Возврат ТекстПоля; // составной тип приводить к какому-то типу не надо
	КонецЕсли;
	
	ПримитивныеТипы    = Новый ОписаниеТипов("Строка, Число, Дата, Булево, Неопределено, Null, ХранилищеЗначения, УникальныйИдентификатор");
	ИмяТипа 		   = "";
	ПустоеЗначениеТипа = "";
	
	Если ПримитивныеТипы.СодержитТип(ОсновнойТип) Тогда
		Если ОсновнойТип = Тип("Строка") Тогда
			ИмяТипа = "Строка";
			ПустоеЗначениеТипа = """""";
		ИначеЕсли ОсновнойТип = Тип("Число") Тогда
			ИмяТипа = "Число";
			ПустоеЗначениеТипа = "0";
		ИначеЕсли ОсновнойТип = Тип("Дата") Тогда
			ИмяТипа = "Дата";
			ПустоеЗначениеТипа = "ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
		ИначеЕсли ОсновнойТип = Тип("Булево") Тогда
			ИмяТипа = "Булево";
			ПустоеЗначениеТипа = "ЛОЖЬ";
		Иначе
			Возврат ТекстПоля; // такой тип не поддерживаем
		КонецЕсли;
	Иначе
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ОсновнойТип);
		Если ОбъектМетаданных = Неопределено Тогда
			Возврат ТекстПоля; // такой тип не поддерживаем
		КонецЕсли;
		ИмяТипа = ОбъектМетаданных.ПолноеИмя();
		ПустоеЗначениеТипа = "ЗНАЧЕНИЕ(" + ИмяТипа + ".ПустаяСсылка)";
	КонецЕсли;
	
	ТекстПоля = "ВЫБОР КОГДА ТипЗначения(Т." + ИмяПоля + ") <> Тип(" + ИмяТипа + ") ТОГДА " 
		+ ПустоеЗначениеТипа + " ИНАЧЕ Т." + ИмяПоля + " КОНЕЦ КАК " + ИмяПоля;
	
	Возврат ТекстПоля;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область РасчетПриходыПартийПрочихРасходов

Функция ДанныеДляПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "";
	ИсходныйТекстЗапроса =
		ТекстОписаниеДанныхДляПартийПрочихРасходов()
        //++ НЕ УТ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияПартийПрочихРасходовИзПартий()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияПартийПрочихРасходовИзДопРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияПартийПрочихРасходовИзЗатратНаВыпуск()
        //-- НЕ УТ
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	ДанныеДляРасчета.Сортировать("Регистратор", Новый СравнениеЗначений);
	
	Для Каждого Строка Из ДанныеДляРасчета Цикл
		Строка.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Строка.АналитикаУчетаПартий, Строка.НалоговоеНазначениеПартии, Строка.НалоговоеНазначение);	
	КонецЦикла;
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция ТекстОписаниеДанныхДляПартийПрочихРасходов()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзПартий()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		//++ НЕ УТ
		|		КОГДА НЕ ПередачаМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ПередачаМатериалов.Подразделение
		|		КОГДА НЕ ВозвратМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ВозвратМатериалов.Подразделение
		//-- НЕ УТ
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления КАК ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		//++ НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериалов
		|		ПО ПередачаМатериалов.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратМатериаловИзПроизводства КАК ВозвратМатериалов
		|		ПО ВозвратМатериалов.Ссылка = ДД.Регистратор
		//-- НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|   И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И ДД.НДСРегл <> 0
		|	И ДД.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		//++ НЕ УТ
		|		КОГДА НЕ ПередачаМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ПередачаМатериалов.Подразделение
		|		КОГДА НЕ ВозвратМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ВозвратМатериалов.Подразделение
		//-- НЕ УТ
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение
		|";
        
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзДопРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		//++ НЕ УТ
		|		КОГДА НЕ ПередачаМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ПередачаМатериалов.Подразделение
		|		КОГДА НЕ ВозвратМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ВозвратМатериалов.Подразделение
		//-- НЕ УТ
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		//++ НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериалов
		|		ПО ПередачаМатериалов.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратМатериаловИзПроизводства КАК ВозвратМатериалов
		|		ПО ВозвратМатериалов.Ссылка = ДД.Регистратор
		//-- НЕ УТ
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|   И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И ДД.НДСРегл <> 0
		|	И ДД.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		//++ НЕ УТ
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		//-- НЕ УТ
		//++ НЕ УТКА
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		//++ НЕ УТ
		|		КОГДА НЕ ПередачаМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ПередачаМатериалов.Подразделение
		|		КОГДА НЕ ВозвратМатериалов.Подразделение ЕСТЬ NULL
		|			ТОГДА ВозвратМатериалов.Подразделение
		//-- НЕ УТ
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение 
		|";
        
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзЗатратНаВыпуск()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЕСТЬNULL(Потребление.Подразделение, Сторно.Подразделение) КАК Подразделение,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|   И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И ДД.НДСРегл <> 0
		|	И ДД.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		//++ НЕ УТ
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВыпускПродукции
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПоступлениеОтПереработчика
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РаспределениеПроизводственныхЗатрат
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		//-- НЕ УТ
		//++ НЕ УТКА
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ОтчетДавальцу
		//-- НЕ УТКА
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЕСТЬNULL(Потребление.Подразделение, Сторно.Подразделение),
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение
		|";
        
КонецФункции

#КонецОбласти

// Контекстные методы заполнения новой расчетной партии по строке расхода и строке прихода
#Область ЗаполнитьРасчетнуюПартию

// Используется для ВСЕХ вызовов заполнения расчетной партии
Процедура ЗаполнитьРасчетнуюПартию(Контекст, РасчетнаяПартия, Расход, Приход)
	Если Контекст = "ПартииТоваровОрганизаций" Тогда
		ЗаполнитьПартиюТоваров(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииТоваровПереданныеНаКомиссию" Тогда
		ЗаполнитьПартиюПереданную(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииЗатратНаВыпуск" Тогда
		ЗаполнитьПартиюЗатрат(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ЗаказыПоставщикам" Тогда
		ЗаполнитьЗаказВПриходе(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииПрочихРасходов" Тогда
		ЗаполнитьПартиюПрочих(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииРасходовНаСебестоимостьТоваровПриход" Тогда
		ЗаполнитьПриходПартииРасходов(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииРасходовНаСебестоимостьТоваров" Тогда
		ЗаполнитьПартиюРасходов(РасчетнаяПартия, Расход, Приход);
		
	//++ НЕ УТ
	ИначеЕсли Контекст = "РаспределениеМатериаловИРабот" Тогда
		ЗаполнитьРаспределениеМатериаловИРабот(РасчетнаяПартия, Расход, Приход);
	//-- НЕ УТ	
		
	ИначеЕсли Контекст = "ПартииПроизводственныхЗатрат" Тогда
		ЗаполнитьПартиюПроизводственныхЗатрат(РасчетнаяПартия, Расход, Приход);
		
	//++ НЕ УТ
	ИначеЕсли Контекст = "ПартииНезавершенногоПроизводства" Тогда
		ЗаполнитьПартиюНезавершенногоПроизводства(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ТрудозатратыНезавершенногоПроизводства" Тогда
		ЗаполнитьТрудозатратыНезавершенногоПроизводства(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводстваПоБазе" Тогда
		ЗаполнитьПрочиеРасходыНезавершенногоПроизводстваПоБазе(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПрочиеРасходыПоБазе" Тогда
		ЗаполнитьПрочиеРасходыПоБазе(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводства" Тогда
		ЗаполнитьПрочиеРасходыНезавершенногоПроизводства(РасчетнаяПартия, Расход, Приход);
	//-- НЕ УТ
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПартиюТоваров(РасчетнаяПартия, Расход, Приход) // ПартииТоваровОрганизаций
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Расход.ТипЗаписи = "Корректировка" Тогда
		Приход.Стоимость = Приход.Стоимость + Расход.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС + Расход.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл + Расход.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл + Расход.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница + Расход.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница + Расход.ВременнаяРазница;
	Иначе	
		// расчетная партия заполняется на наибольшее общее вычитаемое
		Если Расход.ТипЗаписи = "Материал" И Приход.Количество <= Расход.Знаменатель Тогда
			Приход.Знаменатель = ?(Приход.Знаменатель = 0., Приход.Количество, Приход.Знаменатель);
			КоличествоСписания = Приход.Знаменатель / Расход.Знаменатель * Расход.Количество;
			РасчетнаяПартия.Знаменатель = Приход.Знаменатель;
			Расход.Знаменатель = Расход.Знаменатель - Приход.Знаменатель;
		Иначе
			Приход.Знаменатель = 0.;
			КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		КонецЕсли;
		РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
		
		РасходСтоимостьРегл = Окр(РасходБазис * Расход.СтоимостьРегл, 2);
		РасходНДСРегл = Окр(РасходБазис * Расход.НДСРегл, 2);
		РасходПостояннаяРазница = Окр(РасходБазис * Расход.ПостояннаяРазница, 2);
		РасходВременнаяРазница = Окр(РасходБазис * Расход.ВременнаяРазница, 2);
		
		ПриходСтоимостьРегл = Окр(ПриходБазис * Приход.СтоимостьРегл, 2);
		ПриходНДСРегл = Окр(ПриходБазис * Приход.НДСРегл, 2);
		ПриходПостояннаяРазница = Окр(ПриходБазис * Приход.ПостояннаяРазница, 2);
		ПриходВременнаяРазница = Окр(ПриходБазис * Приход.ВременнаяРазница, 2);
		
		// заполняем показатели расчетной партии
		РасчетнаяПартия.Стоимость = Окр(ПриходБазис * Приход.Стоимость, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(ПриходБазис * Приход.СтоимостьБезНДС, 2);
		РасчетнаяПартия.Количество = Окр(КоличествоСписания, 3);
		
		Если РасчетнаяПартия.СохранятьРегл Тогда
			РасчетнаяПартия.СтоимостьРегл = РасходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = РасходНДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = РасходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = РасходВременнаяРазница;
		Иначе
			Если РасчетнаяПартия.ТипЗаписи = "Перемещение"
			 И ТипЗнч(РасчетнаяПартия.Регистратор) = Тип("ДокументСсылка.ПересортицаТоваров")
			 И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Приход.НалоговоеНазначение, "ВидДеятельностиНДС") = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда
				РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл + ПриходНДСРегл;
				РасчетнаяПартия.НДСРегл = 0;
		 	Иначе
			 	РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
				РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
			КонецЕсли;
			РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
		КонецЕсли;
		
		// корректируем базу расчета в потреблении
		Расход.Стоимость = Расход.Стоимость - Окр(РасходБазис * Расход.Стоимость, 2);
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - Окр(РасходБазис * Расход.СтоимостьБезНДС, 2);
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасходСтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасходНДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасходПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасходВременнаяРазница;
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		
		// корректируем базу расчета в приходе
		Если НЕ (Расход.ТипЗаписи = "Перемещение"
		 И Расход.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) Тогда
			Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
			Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
			Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
			Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
			Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
			Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
			Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
		КонецЕсли;
	
		// Заполняем партионную идентификацию в расчетной партии
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления)
		 ИЛИ Не ЗначениеЗаполнено(Расход.РазделУчета)
		 ИЛИ Расход.ТипЗаписи = "Потребление" Тогда
			РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
			Если (РасчетнаяПартия.ТипЗаписи <> "Сторно") Тогда
				РасчетнаяПартия.ПериодПоступления = Приход.ПериодПоступления;
			КонецЕсли;
		КонецЕсли;
		Если Приход.ТипЗаписи = "Возврат"
		 ИЛИ Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		КонецЕсли;
		Если Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты
		 И Расход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		КонецЕсли;
		Если РасчетнаяПартия.ТипЗаписи = "Сторно"
		 И (Приход.ТипЗаписи = "Потребление" ИЛИ Приход.ТипЗаписи = "ВозвратКомиссия" ИЛИ Приход.ТипЗаписи = "Перемещение")
		 И (Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты
			ИЛИ Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ВидЗапасов) Тогда
			РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.КорВидЗапасов) И РасчетнаяПартия.ТипЗаписи <> "Перемещение" Тогда
			РасчетнаяПартия.КорВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.АналитикаУчетаПартий) Тогда
			Если (РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход ИЛИ РасчетнаяПартия.ТипЗаписи = "Сторно")
			//++ НЕ УТ
			 И ТипЗнч(РасчетнаяПартия.Регистратор) <> Тип("ДокументСсылка.ВозвратСырьяОтПереработчика")
			//-- НЕ УТ
			Тогда
				Если РасчетнаяПартия.ТипЗаписи = "Сторно" Тогда
					РасчетнаяПартия.АналитикаУчетаПартий      = Приход.АналитикаУчетаПартий;
					РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
				ИначеЕсли РасчетнаяПартия.ТипЗаписи = "Перемещение" И Расход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию Тогда 
					РасчетнаяПартия.АналитикаУчетаПартий      = Приход.АналитикаУчетаПартий;
					РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
				Иначе
					РасчетнаяПартия.АналитикаУчетаПартий =
						АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
					Если ЗначениеЗаполнено(Приход.НалоговоеНазначение) Тогда
						РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
					Иначе
						РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
					КонецЕсли;
				КонецЕсли; 
			Иначе
				РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
				РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// По результатам партионной идентификации определяем завершенность расчета
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
КонецПроцедуры

Процедура ЗаполнитьПартиюПереданную(РасчетнаяПартия, Расход, Приход) // ПартииТоваровПереданныеНаКомиссию
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Расход.ТипЗаписи = "Возврат" Тогда
		Приход.Количество = Приход.Количество - Расход.Количество;
		Приход.Стоимость = Приход.Стоимость - Расход.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - Расход.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - Расход.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - Расход.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - Расход.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - Расход.ВременнаяРазница;
		
		Расход.Количество = 0;
		Расход.Стоимость = 0;
		Расход.СтоимостьБезНДС = 0;
		Расход.СтоимостьРегл = 0;
		Расход.НДСРегл = 0;
		Расход.ПостояннаяРазница = 0;
		Расход.ВременнаяРазница = 0;
	Иначе	
		Если Расход.Количество = 0 ИЛИ Приход.Количество = 0 Тогда
			Возврат;
		КонецЕсли;
	
		// расчетная партия заполняется на наибольшее общее вычитаемое
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		
		ПотреблениеСтоимость = Окр(КоличествоСписания * Расход.Стоимость / Расход.Количество, 2);
		ПотреблениеСтоимостьБезНДС = Окр(КоличествоСписания * Расход.СтоимостьБезНДС / Расход.Количество, 2);
		ПотреблениеСтоимостьРегл = Окр(КоличествоСписания * Расход.СтоимостьРегл / Расход.Количество, 2);
		ПотреблениеНДСРегл = Окр(КоличествоСписания * Расход.НДСРегл / Расход.Количество, 2);
		ПотреблениеПостояннаяРазница = Окр(КоличествоСписания * Расход.ПостояннаяРазница / Расход.Количество, 2);
		ПотреблениеВременнаяРазница = Окр(КоличествоСписания * Расход.ВременнаяРазница / Расход.Количество, 2);

		ПартияСтоимость = Окр(КоличествоСписания * Приход.Стоимость / Приход.Количество, 2);
		ПартияСтоимостьБезНДС = Окр(КоличествоСписания * Приход.СтоимостьБезНДС / Приход.Количество, 2);
		ПартияСтоимостьРегл = Окр(КоличествоСписания * Приход.СтоимостьРегл / Приход.Количество, 2);
		ПартияНДСРегл = Окр(КоличествоСписания * Приход.НДСРегл / Приход.Количество, 2);
		ПартияПостояннаяРазница = Окр(КоличествоСписания * Приход.ПостояннаяРазница / Приход.Количество, 2);
		ПартияВременнаяРазница = Окр(КоличествоСписания * Приход.ВременнаяРазница / Приход.Количество, 2);

		// заполняем показатели расчетной партии
		РасчетнаяПартия.Количество = КоличествоСписания;
		РасчетнаяПартия.Стоимость = ПартияСтоимость;
		РасчетнаяПартия.СтоимостьБезНДС = ПартияСтоимостьБезНДС;
		РасчетнаяПартия.СтоимостьРегл = ПартияСтоимостьРегл;
		РасчетнаяПартия.НДСРегл = ПартияНДСРегл;
		РасчетнаяПартия.ПостояннаяРазница = ПартияПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = ПартияВременнаяРазница;
		
		// корректируем базу расчета в расходе
		Если Расход <> РасчетнаяПартия Тогда
			Расход.Количество = Расход.Количество - КоличествоСписания;
			Расход.Стоимость = Расход.Стоимость - ПотреблениеСтоимость;
			Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - ПотреблениеСтоимостьБезНДС;
			Расход.СтоимостьРегл = Расход.СтоимостьРегл - ПотреблениеСтоимостьРегл;
			Расход.НДСРегл = Расход.НДСРегл - ПотреблениеНДСРегл;
			Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - ПотреблениеПостояннаяРазница;
			Расход.ВременнаяРазница = Расход.ВременнаяРазница - ПотреблениеВременнаяРазница;
		КонецЕсли;
		
		// корректируем базу расчета в партии
		Приход.Количество = Приход.Количество - КоличествоСписания;
		Приход.Стоимость = Приход.Стоимость - ПартияСтоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - ПартияСтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПартияСтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - ПартияНДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПартияПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПартияВременнаяРазница;
		
		// Заполняем партионную идентификацию в расчетной партии
		РасчетнаяПартия.ДокументПередачиНаКомиссию = Приход.ДокументПередачиНаКомиссию;
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
	КонецЕсли;
	
	// По результатам партионной идентификации определяем завершенность расчета
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен И
		ЗначениеЗаполнено(РасчетнаяПартия.АналитикаУчетаПартий) И ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления);
	
КонецПроцедуры

Процедура ЗаполнитьПартиюЗатрат(РасчетнаяПартия, Расход, Приход) // ПартииЗатратНаВыпуск
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	//++ НЕ УТ
	Если Расход.ТипЗаписи = "ЗатратыПрочие" И Приход.ТипЗаписи = "Потребление" Тогда
		Если ТипЗнч(Приход.ДокументПоступления) = Тип("ДокументСсылка.ВыпускПродукции")
		 И Не ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) Тогда
			РасчетнаяПартия.Стоимость = 0;
			РасчетнаяПартия.СтоимостьБезНДС = 0;
			РасчетнаяПартия.СтоимостьРегл = 0;
			РасчетнаяПартия.НДСРегл = 0;
			РасчетнаяПартия.ПостояннаяРазница = 0;
			РасчетнаяПартия.ВременнаяРазница = 0;
			РасчетнаяПартия.РасчетЗавершен = Ложь;
		Иначе
			РасчетнаяПартия.Стоимость = Приход.Стоимость;
			РасчетнаяПартия.СтоимостьБезНДС = Приход.СтоимостьБезНДС;
			РасчетнаяПартия.СтоимостьРегл = Приход.СтоимостьРегл;
			РасчетнаяПартия.НДСРегл = Приход.НДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = Приход.ПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = Приход.ВременнаяРазница;
			РасчетнаяПартия.РасчетЗавершен = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	//-- НЕ УТ
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	Если Расход.ТипЗаписи = "Выпуск" ИЛИ Расход.ТипЗаписи = "Сборка" ИЛИ Расход.ТипЗаписи = "ВыпускПрочие" Тогда
		ЗнаменательСписания = Мин(Расход.Количество, Приход.Знаменатель);
		РасчетнаяПартия.Знаменатель = Расход.Знаменатель;
	Иначе
		ЗнаменательСписания = Мин(Расход.Знаменатель, Приход.Знаменатель);
		Если Расход.ТипЗаписи <> "Перемещение" И Расход.ТипЗаписи <> "Замещение" Тогда
			РасчетнаяПартия.Знаменатель = ЗнаменательСписания;
		КонецЕсли;
	КонецЕсли;
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = Окр(ЗнаменательСписания * Приход.Количество / Приход.Знаменатель, 3);
	Если ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) И РасчетнаяПартия.Количество = 0 Тогда
		РасчетнаяПартия.Стоимость = 0;
		РасчетнаяПартия.СтоимостьБезНДС = 0;
		ПриходСтоимостьРегл = 0;
		ПриходНДСРегл = 0;
		ПриходПостояннаяРазница = 0;
		ПриходВременнаяРазница = 0;
	ИначеЕсли ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) И РасчетнаяПартия.Количество = Приход.Количество Тогда
		РасчетнаяПартия.Стоимость = Приход.Стоимость;
		РасчетнаяПартия.СтоимостьБезНДС = Приход.СтоимостьБезНДС;
		
		ПриходСтоимостьРегл = Приход.СтоимостьРегл;
		ПриходНДСРегл = Приход.НДСРегл;
		ПриходПостояннаяРазница = Приход.ПостояннаяРазница;
		ПриходВременнаяРазница = Приход.ВременнаяРазница;
	Иначе
		РасчетнаяПартия.Стоимость = Окр(ЗнаменательСписания * Приход.Стоимость / Приход.Знаменатель, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(ЗнаменательСписания * Приход.СтоимостьБезНДС / Приход.Знаменатель, 2);
		
		ПриходСтоимостьРегл = Окр(ЗнаменательСписания * Приход.СтоимостьРегл / Приход.Знаменатель, 2);
		ПриходНДСРегл = Окр(ЗнаменательСписания * Приход.НДСРегл / Приход.Знаменатель, 2);
		ПриходПостояннаяРазница = Окр(ЗнаменательСписания * Приход.ПостояннаяРазница / Приход.Знаменатель, 2);
		ПриходВременнаяРазница = Окр(ЗнаменательСписания * Приход.ВременнаяРазница / Приход.Знаменатель, 2);
	КонецЕсли;
	
	Если РасчетнаяПартия.СохранятьРегл Тогда
		РасчетнаяПартия.СтоимостьРегл = 0.;
		РасчетнаяПартия.НДСРегл = 0.;
		РасчетнаяПартия.ПостояннаяРазница = 0.;
		РасчетнаяПартия.ВременнаяРазница = 0.;
	Иначе
		РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
		РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
		РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Приход.Знаменатель = Приход.Знаменатель - ЗнаменательСписания;
	Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
	
	Если Не ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) Тогда
		Приход.Количество = 0.;
		РасчетнаяПартия.Количество = 0.;
	КонецЕсли;
	
	Если Приход.Количество = 0.
	 И Приход.Стоимость = 0.
	 И Приход.СтоимостьБезНДС = 0.
	 И Приход.СтоимостьРегл = 0.
	 И Приход.НДСРегл = 0.
	 И Приход.ПостояннаяРазница = 0.
	 И Приход.ВременнаяРазница = 0. Тогда
		Приход.Знаменатель = 0.;
	КонецЕсли;
	
	// Заполняем партионную идентификацию в расчетной партии
    Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход ИЛИ РасчетнаяПартия.ТипЗаписи = "Сторно" Тогда
        Если Приход.НалоговоеНазначениеПартии = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально Тогда
            РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
            РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
        Иначе
    		РасчетнаяПартия.АналитикаУчетаПартий = АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
    		Если ЗначениеЗаполнено(Приход.НалоговоеНазначение) Тогда
    			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
    		Иначе
    			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
            КонецЕсли;
        КонецЕсли; 
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
	КонецЕсли;
	РасчетнаяПартия.АналитикаУчетаНоменклатуры = Приход.АналитикаУчетаНоменклатуры;
	РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
	РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
	Если Приход.ТипЗаписи = "Затраты" Тогда
		РасчетнаяПартия.АналитикаУчетаПродукции = Приход.АналитикаУчетаПродукции;
	ИначеЕсли Приход.ТипЗаписи = "Распределение" Тогда
		РасчетнаяПартия.СтатьяРасходовСписания = Приход.СтатьяРасходовСписания;
		РасчетнаяПартия.АналитикаРасходов = Приход.АналитикаРасходов;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(РасчетнаяПартия.ПодразделениеРасходов) Тогда 
		РасчетнаяПартия.ПодразделениеРасходов = Приход.ПодразделениеРасходов;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Продукция" Тогда
		РасчетнаяПартия.ДокументИсточник = Неопределено;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.АналитикаУчетаПартий) И ЗначениеЗаполнено(РасчетнаяПартия.НалоговоеНазначениеПартии) Тогда
		РасчетнаяПартия.АналитикаУчетаПартий = АналитикаУчетаПартийПоНалоговомуНазначению(РасчетнаяПартия.НалоговоеНазначениеПартии);
	КонецЕсли; 
	Если РасчетнаяПартия.Количество = 0.
	 И РасчетнаяПартия.Стоимость = 0.
	 И РасчетнаяПартия.СтоимостьБезНДС = 0.
	 И РасчетнаяПартия.СтоимостьРегл = 0.
	 И РасчетнаяПартия.НДСРегл = 0.
	 И РасчетнаяПартия.ПостояннаяРазница = 0.
	 И РасчетнаяПартия.ВременнаяРазница = 0. Тогда
		РасчетнаяПартия.Знаменатель = 0.;
		РасчетнаяПартия.РасчетЗавершен = Ложь;
	Иначе
		РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьЗаказВПриходе(РасчетнаяПартия, Расход, Приход) // ЗаказыПоставщикам
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	РасчетнаяПартия.РасчетЗавершен = Истина;
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	КоличествоСписания = ?(Расход.Количество >= Приход.Количество, Приход.Количество, Расход.Количество);
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Стоимость = Окр(КоличествоСписания * Расход.Стоимость / Расход.Количество, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(КоличествоСписания * Расход.СтоимостьБезНДС / Расход.Количество, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(КоличествоСписания * Расход.СтоимостьРегл / Расход.Количество, 2);
	РасчетнаяПартия.НДСРегл = Окр(КоличествоСписания * Расход.НДСРегл / Расход.Количество, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(КоличествоСписания * Расход.ПостояннаяРазница / Расход.Количество, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(КоличествоСписания * Расход.ВременнаяРазница / Расход.Количество, 2);
	РасчетнаяПартия.Количество = КоличествоСписания;
	// корректируем базу расчета в расходе
	Если Расход <> РасчетнаяПартия Тогда
		Расход.Стоимость = Расход.Стоимость - РасчетнаяПартия.Стоимость;
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
		Расход.Количество = Расход.Количество - КоличествоСписания;
	КонецЕсли;
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - Окр(КоличествоСписания * Приход.Стоимость / Приход.Количество, 2);
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - Окр(КоличествоСписания * Приход.СтоимостьБезНДС / Приход.Количество, 2);
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - Окр(КоличествоСписания * Приход.СтоимостьРегл / Приход.Количество, 2);
	Приход.НДСРегл = Приход.НДСРегл - Окр(КоличествоСписания * Приход.НДСРегл / Приход.Количество, 2);
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - Окр(КоличествоСписания * Приход.ПостояннаяРазница / Приход.Количество, 2);
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - Окр(КоличествоСписания * Приход.ВременнаяРазница / Приход.Количество, 2);
	Приход.Количество = Приход.Количество - КоличествоСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	РасчетнаяПартия.Заказ = Приход.Заказ;
КонецПроцедуры

Функция АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки)
	Результат = Новый Массив;
	Результат.Добавить(Движение.Номенклатура);
	Если Движение.Номенклатура <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Номенклатура, ПустыеСсылки));
	КонецЕсли;
	Результат.Добавить(Движение.Склад);
	Если Движение.Склад <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Склад, ПустыеСсылки));
	КонецЕсли;
	Результат.Добавить(Движение.Регистратор);
	Результат.Добавить(ПустаяСсылка(Движение.Регистратор, ПустыеСсылки));
	Возврат Результат;
КонецФункции

Процедура ЗаполнитьПартиюПрочих(РасчетнаяПартия, Расход, Приход) // ПартииПрочихРасходов
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	РасчетнаяПартия.ТипЗаписи = "Потребление";
	РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Расход;
	РасчетнаяПартия.Период = Макс(Расход.Период, Расход.РасчетныйПериод);
	
	Если Расход.Базис = 0 Тогда
		Возврат;
	КонецЕсли;
	// расчетная партия заполняется на наибольшее общее вычитаемое
	БазисСписания = ?(Расход.Базис >= Приход.Значение.Базис, Приход.Значение.Базис, Расход.Базис);
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Стоимость = Окр(БазисСписания * Расход.Стоимость / Расход.Базис, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(БазисСписания * Расход.СтоимостьБезНДС / Расход.Базис, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(БазисСписания * Расход.СтоимостьРегл / Расход.Базис, 2);
	РасчетнаяПартия.НДСРегл = Окр(БазисСписания * Расход.НДСРегл / Расход.Базис, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(БазисСписания * Расход.ПостояннаяРазница / Расход.Базис, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(БазисСписания * Расход.ВременнаяРазница / Расход.Базис, 2);
	РасчетнаяПартия.Базис = БазисСписания;
	// корректируем базу расчета в расходе
	Расход.Стоимость = Расход.Стоимость - РасчетнаяПартия.Стоимость;
	Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	Расход.НДСРегл = Расход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	Расход.Базис = Расход.Базис - БазисСписания;
	// корректируем базу расчета в приходе
	Приход.Значение.Базис = Приход.Значение.Базис - БазисСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	РасчетнаяПартия.НалоговоеНазначение = Приход.Ключ;
КонецПроцедуры

Процедура ЗаполнитьПриходПартииРасходов(РасчетнаяПартия, Расход, Приход) // ПартииРасходовНаСебестоимостьТоваровПриход
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	Если Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству Тогда
		Расход.Базис = Расход.Количество;
	ИначеЕсли Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу Тогда
		Расход.Базис = Расход.Вес;
	ИначеЕсли Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему Тогда
		Расход.Базис = Расход.Объем;
	Иначе
		Расход.Базис = Расход.Стоимость;
	КонецЕсли;
	БазисСписания = ?(Расход.Базис >= Приход.Базис, Приход.Базис, Расход.Базис);
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = Окр(БазисСписания * Расход.Количество / Расход.Базис, 3);
	РасчетнаяПартия.Вес = Окр(БазисСписания * Расход.Вес / Расход.Базис, 3);
	РасчетнаяПартия.Объем = Окр(БазисСписания * Расход.Объем / Расход.Базис, 3);
	РасчетнаяПартия.Стоимость = Окр(БазисСписания * Приход.Стоимость / Приход.Базис, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(БазисСписания * Приход.СтоимостьБезНДС / Приход.Базис, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(БазисСписания * Приход.СтоимостьРегл / Приход.Базис, 2);
	РасчетнаяПартия.НДСРегл = Окр(БазисСписания * Приход.НДСРегл / Приход.Базис, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(БазисСписания * Приход.ПостояннаяРазница / Приход.Базис, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(БазисСписания * Приход.ВременнаяРазница / Приход.Базис, 2);
	РасчетнаяПартия.Базис = БазисСписания;
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	Приход.Базис = Приход.Базис - БазисСписания;
	// корректируем базу расчета в расходе
	Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
	Расход.Вес = Расход.Вес - РасчетнаяПартия.Вес;
	Расход.Объем = Расход.Объем - РасчетнаяПартия.Объем;
	Расход.Стоимость = Расход.Стоимость - Окр(БазисСписания * Расход.Стоимость / Расход.Базис, 2);
	Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - Окр(БазисСписания * Расход.СтоимостьБезНДС / Расход.Базис, 2);
	Расход.СтоимостьРегл = Расход.СтоимостьРегл - Окр(БазисСписания * Расход.СтоимостьРегл / Расход.Базис, 2);
	Расход.НДСРегл = Расход.НДСРегл - Окр(БазисСписания * Расход.НДСРегл / Расход.Базис, 2);
	Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - Окр(БазисСписания * Расход.ПостояннаяРазница / Расход.Базис, 2);
	Расход.ВременнаяРазница = Расход.ВременнаяРазница - Окр(БазисСписания * Расход.ВременнаяРазница / Расход.Базис, 2);
	Расход.Базис = Расход.Базис - БазисСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход,
		"ВидДвижения, Период, Регистратор, ДокументПоступленияРасходов, СтатьяРасходов, ХозяйственнаяОперация,
		|Подразделение, ПравилоРаспределения");
		
	Если ЗначениеЗаполнено(Приход.АналитикаРасходов) Тогда
		РасчетнаяПартия.АналитикаРасходов = Приход.АналитикаРасходов;
	КонецЕсли;
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		РасчетнаяПартия.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
		РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначениеПартии;
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
		РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначение;
	КонецЕсли;
	РасчетнаяПартия.ПодразделениеРасходов = Приход.Подразделение;
	РасчетнаяПартия.ТипЗаписи = "Партия";
	РасчетнаяПартия.РасчетЗавершен = Истина;
КонецПроцедуры

Процедура ЗаполнитьПартиюРасходов(РасчетнаяПартия, Расход, Приход) // ПартииРасходовНаСебестоимостьТоваров
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	ВключаяКоличество = (Расход.ТипЗаписи <> "Перемещение" И Расход.ТипЗаписи <> "Замещение" И Расход.ТипЗаписи <> "Выпуск" И Расход.ТипЗаписи <> "Затраты");
	СписыватьЗнаменатель = (Приход.Знаменатель = Приход.Количество) И (Приход.Знаменатель <> 0.);
	ПриходКоличество = Приход.Количество;
	Если Приход.ТипЗаписи = "Сторно" Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
	ИначеЕсли Приход.ТипЗаписи = "ВыпускПрочие" Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Знаменатель);
		ПриходКоличество = Приход.Знаменатель;
		СписыватьЗнаменатель = Истина;
	ИначеЕсли ВключаяКоличество Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
	Иначе
		КоличествоСписания = Приход.Количество;
	КонецЕсли;
	
	ПриходСтоимостьРегл = Окр(КоличествоСписания * Приход.СтоимостьРегл / ПриходКоличество, 2);
	ПриходНДСРегл = Окр(КоличествоСписания * Приход.НДСРегл / ПриходКоличество, 2);
	ПриходПостояннаяРазница = Окр(КоличествоСписания * Приход.ПостояннаяРазница / ПриходКоличество, 2);
	ПриходВременнаяРазница = Окр(КоличествоСписания * Приход.ВременнаяРазница / ПриходКоличество, 2);
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Стоимость = Окр(КоличествоСписания * Приход.Стоимость / ПриходКоличество, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(КоличествоСписания * Приход.СтоимостьБезНДС / ПриходКоличество, 2);
	Если РасчетнаяПартия.СохранятьРегл Тогда
		РасчетнаяПартия.СтоимостьРегл = 0.;
		РасчетнаяПартия.НДСРегл = 0.;
		РасчетнаяПартия.ПостояннаяРазница = 0.;
		РасчетнаяПартия.ВременнаяРазница = 0.;
	Иначе
		Если РасчетнаяПартия.ТипЗаписи = "Замещение"
		 И ТипЗнч(РасчетнаяПартия.Регистратор) = Тип("ДокументСсылка.ПересортицаТоваров")
         И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Приход.НалоговоеНазначение, "ВидДеятельностиНДС") = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда
			РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл + ПриходНДСРегл;
			РасчетнаяПартия.НДСРегл = 0;
	 	Иначе
		 	РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
		КонецЕсли;
		РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
	КонецЕсли;
	Если ВключаяКоличество Тогда
		РасчетнаяПартия.Количество = КоличествоСписания;
		Если Расход.Количество <> 0 И РасчетнаяПартия.ТипЗаписи <> "ВыпускПрочие" Тогда
			РасчетнаяПартия.Знаменатель = РасчетнаяПартия.Знаменатель * РасчетнаяПартия.Количество / Расход.Количество;
		КонецЕсли;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
	Приход.Количество = Приход.Количество - КоличествоСписания;
	Если СписыватьЗнаменатель Тогда
		Приход.Знаменатель = Приход.Знаменатель - КоличествоСписания;
	КонецЕсли;
	
	Если Приход.Стоимость = 0.
	 И Приход.СтоимостьБезНДС = 0.
	 И Приход.СтоимостьРегл = 0.
	 И Приход.НДСРегл = 0.
	 И Приход.ПостояннаяРазница = 0.
	 И Приход.ВременнаяРазница = 0. Тогда
	 	Приход.Количество = 0.;
		Приход.Знаменатель = 0.;
	КонецЕсли;
	
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход ИЛИ РасчетнаяПартия.ТипЗаписи = "Сторно" Тогда
		РасчетнаяПартия.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
		Если ЗначениеЗаполнено(Приход.НалоговоеНазначение) Тогда
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
		Иначе
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
		КонецЕсли;
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
	КонецЕсли;

	// Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход,
		"РасчетЗавершен, ДокументПоступленияРасходов, СтатьяРасходов");
//++ НЕ УТ
	Если (Расход.ТипЗаписи = "Распределение" И Приход.ТипЗаписи = "Затраты")
	   ИЛИ (Расход.ТипЗаписи = "Прочее" И Приход.ТипЗаписи = "Затраты")
	   ИЛИ (Расход.ТипЗаписи = "Списание" И Приход.ТипЗаписи = "Прочее") Тогда
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов");
	КонецЕсли;
	Если Расход.ТипЗаписи = "Продукция" Тогда
		РасчетнаяПартия.ДокументИсточник = Неопределено;
	КонецЕсли;
//-- НЕ УТ
	Если РасчетнаяПартия.Стоимость = 0.
	 И РасчетнаяПартия.СтоимостьБезНДС = 0.
	 И РасчетнаяПартия.СтоимостьРегл = 0.
	 И РасчетнаяПартия.НДСРегл = 0.
	 И РасчетнаяПартия.ПостояннаяРазница = 0.
	 И РасчетнаяПартия.ВременнаяРазница = 0. Тогда
	 	РасчетнаяПартия.Количество = 0.;
		РасчетнаяПартия.Знаменатель = 0.;
		РасчетнаяПартия.РасчетЗавершен = Ложь;
	КонецЕсли;		
КонецПроцедуры

//++ НЕ УТ
Процедура ЗаполнитьРаспределениеМатериаловИРабот(РасчетнаяПартия, Расход, Приход) 
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.ТипЗаписи = "Потребление";
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "Организация, Номенклатура, Характеристика, Подразделение, Серия,
		|АналитикаУчетаНоменклатуры, БазаРаспределения, Назначение, СтатьяКалькуляции");
	
	Если Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов
	 ИЛИ Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции
	 ИЛИ Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов
	 ИЛИ Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала Тогда
		РасчетнаяПартия.Количество = Окр(Приход.КРаспределению * ?(Приход.Количество = 0, 0, Расход.Количество / Приход.Количество), 3);
		
	ИначеЕсли Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов
	 ИЛИ Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции Тогда
		РасчетнаяПартия.Количество = Окр(Приход.КРаспределению * ?(Приход.Объем = 0, 0, Расход.Объем / Приход.Объем), 3);
		
	ИначеЕсли Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов
	 ИЛИ Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции Тогда
		РасчетнаяПартия.Количество = Окр(Приход.КРаспределению * ?(Приход.Вес = 0, 0, Расход.Вес / Приход.Вес), 3);
		
	ИначеЕсли Приход.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции Тогда
		РасчетнаяПартия.Количество = Окр(Приход.КРаспределению * ?(Приход.Стоимость = 0, 0, Расход.Стоимость / Приход.Стоимость), 3);
		
	КонецЕсли;
	РасчетнаяПартия.КРаспределению = Приход.КРаспределению;
	
	// корректируем базу расчета в приходе
	Приход.КРаспределению = Приход.КРаспределению - РасчетнаяПартия.Количество;
	Приход.Количество = Приход.Количество - Расход.Количество;
	Приход.Объем = Приход.Объем - Расход.Объем;
	Приход.Вес = Приход.Вес - Расход.Вес;
	Приход.Стоимость = Приход.Стоимость - Расход.Стоимость;
	
	// корректируем базу расчета в расходе
	Расход.Количество = 0;
	Расход.Объем = 0;
	Расход.Вес = 0;
	Расход.Стоимость = 0;
	
	РасчетнаяПартия.РасчетЗавершен = Истина;
	
КонецПроцедуры
//-- НЕ УТ

Процедура ЗаполнитьПартиюПроизводственныхЗатрат(РасчетнаяПартия, Расход, Приход) // ПартииПроизводственныхЗатрат
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Расход.ТипЗаписи = "Корректировка" Тогда
		Приход.Стоимость = Приход.Стоимость + Расход.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС + Расход.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл + Расход.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл + Расход.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница + Расход.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница + Расход.ВременнаяРазница;
	ИначеЕсли Расход.ТипЗаписи = "ВозвратСторно" Тогда
		РасчетнаяПартия.Количество = Мин(Приход.Количество, Расход.Количество);
		РасчетнаяПартия.Стоимость = Мин(Приход.Стоимость, Расход.Стоимость);
		РасчетнаяПартия.СтоимостьБезНДС = Мин(Приход.СтоимостьБезНДС, Расход.СтоимостьБезНДС);
		РасчетнаяПартия.СтоимостьРегл = Мин(Приход.СтоимостьРегл, Расход.СтоимостьРегл);
		РасчетнаяПартия.НДСРегл = Мин(Приход.НДСРегл, Расход.НДСРегл);
		РасчетнаяПартия.ПостояннаяРазница = Мин(Приход.ПостояннаяРазница, Расход.ПостояннаяРазница);
		РасчетнаяПартия.ВременнаяРазница = Мин(Приход.ВременнаяРазница, Расход.ВременнаяРазница);
		
		Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
		Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
		
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		Расход.Стоимость = Расход.Стоимость - РасчетнаяПартия.Стоимость;
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
		
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
		КонецЕсли;
	Иначе
		Если Приход.Количество = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// расчетная партия заполняется на наибольшее общее вычитаемое
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		
		РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
		
		РасходСтоимостьРегл = Окр(РасходБазис * Расход.СтоимостьРегл, 2);
		РасходНДСРегл = Окр(РасходБазис * Расход.НДСРегл, 2);
		РасходПостояннаяРазница = Окр(РасходБазис * Расход.ПостояннаяРазница, 2);
		РасходВременнаяРазница = Окр(РасходБазис * Расход.ВременнаяРазница, 2);
		
		ПриходСтоимостьРегл = Окр(ПриходБазис * Приход.СтоимостьРегл, 2);
		ПриходНДСРегл = Окр(ПриходБазис * Приход.НДСРегл, 2);
		ПриходПостояннаяРазница = Окр(ПриходБазис * Приход.ПостояннаяРазница, 2);
		ПриходВременнаяРазница = Окр(ПриходБазис * Приход.ВременнаяРазница, 2);
		
		// заполняем показатели расчетной партии
		РасчетнаяПартия.Стоимость = Окр(КоличествоСписания * Приход.Стоимость / Приход.Количество, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(КоличествоСписания * Приход.СтоимостьБезНДС / Приход.Количество, 2);
		Если РасчетнаяПартия.СохранятьРегл Тогда
			РасчетнаяПартия.СтоимостьРегл = РасходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = РасходНДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = РасходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = РасходВременнаяРазница;
		Иначе
			РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
		КонецЕсли;
		РасчетнаяПартия.Количество = КоличествоСписания;
		
		// корректируем базу расчета в потреблении
		Расход.Стоимость = Расход.Стоимость - Окр(РасходБазис * Расход.Стоимость, 2);
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - Окр(РасходБазис * Расход.СтоимостьБезНДС, 2);
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасходСтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасходНДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасходПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасходВременнаяРазница;
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		
		// корректируем базу расчета в приходе
		Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
		Приход.Количество = Приход.Количество - КоличествоСписания;

		// Заполняем партионную идентификацию в расчетной партии
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления) Тогда
			РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
		КонецЕсли;
		Если Расход.ТипЗаписи = "Перемещение" ИЛИ Приход.ТипЗаписи = "Перемещение" Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		ИначеЕсли Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ВидЗапасов) Тогда
			РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		//++ НЕ УТ
		РасчетнаяПартия.ГруппаПродукции = Приход.ГруппаПродукции;
		//-- НЕ УТ
		Если ЗначениеЗаполнено(РасчетнаяПартия.КорАналитикаУчетаНоменклатуры) Тогда
			РасчетнаяПартия.КорВидЗапасов = РасчетнаяПартия.ВидЗапасов;
		КонецЕсли;
		
		Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			РасчетнаяПартия.АналитикаУчетаПартий =
				АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
		Иначе
			РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РасчетнаяПартия.ПодразделениеРасходов) Тогда 
			РасчетнаяПартия.ПодразделениеРасходов = Приход.ПодразделениеРасходов;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "РасчетЗавершен");
КонецПроцедуры

//++ НЕ УТ
Процедура ЗаполнитьПартиюНезавершенногоПроизводства(РасчетнаяПартия, Расход, Приход) // ПартииНезавершенногоПроизводства
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Приход.Знаменатель = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	ЗнаменательСписания = Мин(Расход.Знаменатель, Приход.Знаменатель);
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = Окр(ЗнаменательСписания * Приход.Количество / Приход.Знаменатель, 3);
	Если РасчетнаяПартия.Количество = Приход.Количество Тогда
		РасчетнаяПартия.Стоимость = Приход.Стоимость;
		РасчетнаяПартия.СтоимостьБезНДС = Приход.СтоимостьБезНДС;
		РасчетнаяПартия.СтоимостьРегл = Приход.СтоимостьРегл;
		РасчетнаяПартия.НДСРегл = Приход.НДСРегл;
		РасчетнаяПартия.ПостояннаяРазница = Приход.ПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = Приход.ВременнаяРазница;
	ИначеЕсли РасчетнаяПартия.Количество <> 0 Тогда
		РасчетнаяПартия.Стоимость = Окр(ЗнаменательСписания * Приход.Стоимость / Приход.Знаменатель, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(ЗнаменательСписания * Приход.СтоимостьБезНДС / Приход.Знаменатель, 2);
		РасчетнаяПартия.СтоимостьРегл = Окр(ЗнаменательСписания * Приход.СтоимостьРегл / Приход.Знаменатель, 2);
		РасчетнаяПартия.НДСРегл = Окр(ЗнаменательСписания * Приход.НДСРегл / Приход.Знаменатель, 2);
		РасчетнаяПартия.ПостояннаяРазница = Окр(ЗнаменательСписания * Приход.ПостояннаяРазница / Приход.Знаменатель, 2);
		РасчетнаяПартия.ВременнаяРазница = Окр(ЗнаменательСписания * Приход.ВременнаяРазница / Приход.Знаменатель, 2);
	КонецЕсли;
	
	Если Расход.ТипЗаписи = "Распределение" ИЛИ Расход.ТипЗаписи = "ЗатратыБезЗаказа" ИЛИ Расход.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Знаменатель = Расход.КоличествоПродукции;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Распределение"
	 И (Приход.ТипЗаписи = "Остаток" ИЛИ Приход.ТипЗаписи = "ОстатокСторно" ИЛИ Приход.ТипЗаписи = "ПолуфабрикатДавальца") Тогда
		РасчетнаяПартия.ТипЗаписи = Приход.ТипЗаписи;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Выпуск" И Приход.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ТипЗаписи = Приход.ТипЗаписи;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	
	Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
	Приход.Знаменатель = Приход.Знаменатель - ЗнаменательСписания;

	// Заполняем партионную идентификацию в расчетной партии
	Если Расход.ТипЗаписи = "Распределение" И Приход.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка();	
	КонецЕсли;
	РасчетнаяПартия.Подразделение = Приход.Подразделение;
	РасчетнаяПартия.АналитикаУчетаНоменклатуры = Приход.АналитикаУчетаНоменклатуры;
	РасчетнаяПартия.СтатьяКалькуляции = Приход.СтатьяКалькуляции;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ЗаказНаПроизводство) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ЗаказНаПроизводство = Приход.ЗаказНаПроизводство;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.КодСтрокиПродукция) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.КодСтрокиПродукция = Приход.КодСтрокиПродукция;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Этап) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Этап = Приход.Этап;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Спецификация) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Спецификация = Приход.Спецификация;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Распределение" ИЛИ Расход.ТипЗаписи = "Выпуск" ИЛИ Расход.ТипЗаписи = "ВыпускБезСтрок"
	 ИЛИ Расход.ТипЗаписи = "ЗатратыБезЗаказа" ИЛИ Расход.ТипЗаписи = "ВыпускБезЗаказа" ИЛИ Расход.ТипЗаписи = "Переработка"
	 ИЛИ Расход.ТипЗаписи = "ОтчетДавальцу" ИЛИ Расход.ТипЗаписи = "ПродукцияДавальца" Тогда
		РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Партия" И Приход.ТипЗаписи = "ЗатратыБезЗаказа" Тогда
		РасчетнаяПартия.ДокументВыпуска = Приход.ДокументВыпуска;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
		РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ВидЗапасов) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
	КонецЕсли;
	РасчетнаяПартия.ГруппаПродукции = Приход.ГруппаПродукции;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Период) И РасчетнаяПартия.ТипЗаписи <> "ПродукцияДавальца" Тогда
		РасчетнаяПартия.Период = Приход.Период;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Регистратор) И РасчетнаяПартия.ТипЗаписи <> "ПродукцияДавальца" Тогда
		РасчетнаяПартия.Регистратор = Приход.Регистратор;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Назначение) Тогда
		РасчетнаяПартия.Назначение = Приход.Назначение;
	КонецЕсли;
	
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		РасчетнаяПартия.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "РасчетЗавершен");
	
	Если РасчетнаяПартия.Количество = 0.
	 И РасчетнаяПартия.Стоимость = 0.
	 И РасчетнаяПартия.СтоимостьБезНДС = 0.
	 И РасчетнаяПартия.СтоимостьРегл = 0.
	 И РасчетнаяПартия.НДСРегл = 0.
	 И РасчетнаяПартия.ПостояннаяРазница = 0.
	 И РасчетнаяПартия.ВременнаяРазница = 0. Тогда
		РасчетнаяПартия.Знаменатель = 0.;
		РасчетнаяПартия.РасчетЗавершен = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТрудозатратыНезавершенногоПроизводства(РасчетнаяПартия, Расход, Приход) // ТрудозатратыНезавершенногоПроизводства
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Приход.Знаменатель = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	ЗнаменательСписания = Мин(Расход.Знаменатель, Приход.Знаменатель);
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = Окр(ЗнаменательСписания * Приход.Количество / Приход.Знаменатель, 3);
	РасчетнаяПартия.НормативнаяСтоимость = Окр(ЗнаменательСписания * Приход.НормативнаяСтоимость / Приход.Знаменатель, 2);
	РасчетнаяПартия.Стоимость = Окр(ЗнаменательСписания * Приход.Стоимость / Приход.Знаменатель, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(ЗнаменательСписания * Приход.СтоимостьРегл / Приход.Знаменатель, 2);
	
	Если Расход.ТипЗаписи = "МаршрутныйЛист" ИЛИ Расход.ТипЗаписи = "Перемещение" ИЛИ Расход.ТипЗаписи = "Распределение" ИЛИ Расход.ТипЗаписи = "Потребление" Тогда
		РасчетнаяПартия.Знаменатель = Расход.КоличествоПродукции;
	КонецЕсли;
	Если Расход.ТипЗаписи = "ОтчетДавальцу" И (Приход.ТипЗаписи = "Выпуск" ИЛИ Приход.ТипЗаписи = "ВыпускБезЗаказа") Тогда
		РасчетнаяПартия.ДокументВыпуска = Приход.ДокументВыпуска;
		РасчетнаяПартия.КодСтроки = Приход.КодСтроки;
		РасчетнаяПартия.ЗаказНаПроизводство = Приход.ЗаказНаПроизводство;
		РасчетнаяПартия.КодСтрокиПродукция = Приход.КодСтрокиПродукция;
		РасчетнаяПартия.Этап = Приход.Этап;
		РасчетнаяПартия.СтатьяКалькуляции = Приход.СтатьяКалькуляции;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
	Приход.НормативнаяСтоимость = Приход.НормативнаяСтоимость - РасчетнаяПартия.НормативнаяСтоимость;
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	
	Приход.Знаменатель = Приход.Знаменатель - ЗнаменательСписания;
	
	Если Расход.ТипЗаписи <> "ОтчетДавальцу" И Приход.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ТипЗаписи = Приход.ТипЗаписи;
	КонецЕсли;

	// Заполняем партионную идентификацию в расчетной партии
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ЗаказНаПроизводство) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ЗаказНаПроизводство = Приход.ЗаказНаПроизводство;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.КодСтрокиПродукция) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.КодСтрокиПродукция = Приход.КодСтрокиПродукция;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Этап) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Этап = Приход.Этап;
	КонецЕсли;
	
	РасчетнаяПартия.Подразделение = Приход.Подразделение;
	РасчетнаяПартия.ВидФондаВзносов = Приход.ВидФондаВзносов;
	РасчетнаяПартия.СтатьяКалькуляции = Приход.СтатьяКалькуляции;
	РасчетнаяПартия.ВидРабот = Приход.ВидРабот;
	РасчетнаяПартия.ГруппаПродукции = Приход.ГруппаПродукции;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
		РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Регистратор) Тогда
		РасчетнаяПартия.Регистратор = Приход.Регистратор;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.СтатьяКалькуляцииБезЗаказа) Тогда
		РасчетнаяПартия.СтатьяКалькуляцииБезЗаказа = Приход.СтатьяКалькуляцииБезЗаказа;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "РасчетЗавершен");
КонецПроцедуры

Процедура ЗаполнитьПрочиеРасходыНезавершенногоПроизводстваПоБазе(РасчетнаяПартия, Расход, Приход) // ПрочиеРасходыНезавершенногоПроизводства
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// заполняем показатели расчетной партии
	Если Расход.ТипЗаписи = "ПоПодразделениям" Тогда
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "Организация, ПодразделениеИсточник, СтатьяРасходов, АналитикаРасходов");
	ИначеЕсли Расход.ТипЗаписи = "ПоЭтапам" Тогда
		Если Не ЗначениеЗаполнено(Расход.ПодразделениеПриемник) Тогда
			Возврат;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "Организация, ПодразделениеИсточник, СтатьяКалькуляции, СтатьяРасходов, АналитикаРасходов");
		РасчетнаяПартия.Подразделение = Расход.ПодразделениеПриемник;
	КонецЕсли;
	РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначение; 
		
	РасчетнаяПартия.ДоляСтоимости = Окр(Приход.ДоляСтоимости * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	Если РасчетнаяПартия.ДоляСтоимости <> 0 Тогда
		// Вычисляем долю стоимости в приходе, и, если она равна 0, то списываем весь остаток из прихода
		Приход.ДоляСтоимости = Приход.ДоляСтоимости - РасчетнаяПартия.ДоляСтоимости;
		
		Если Приход.ДоляСтоимости = 0 Тогда
			РасчетнаяПартия.Стоимость = Приход.Стоимость;
			РасчетнаяПартия.СтоимостьБезНДС = Приход.СтоимостьБезНДС;
			РасчетнаяПартия.СтоимостьРегл = Приход.СтоимостьРегл;
			РасчетнаяПартия.СтоимостьРеглБезНДС = Приход.СтоимостьРеглБезНДС;
			РасчетнаяПартия.НДСРегл = Приход.НДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = Приход.ПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = Приход.ВременнаяРазница;
		Иначе
			РасчетнаяПартия.Стоимость = Окр(Приход.Стоимость * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
			РасчетнаяПартия.СтоимостьБезНДС = Окр(Приход.СтоимостьБезНДС * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
			РасчетнаяПартия.СтоимостьРегл = Окр(Приход.СтоимостьРегл * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
			РасчетнаяПартия.СтоимостьРеглБезНДС = Окр(Приход.СтоимостьРеглБезНДС * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
			РасчетнаяПартия.НДСРегл = Окр(Приход.НДСРегл * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
			РасчетнаяПартия.ПостояннаяРазница = Окр(Приход.ПостояннаяРазница * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
			РасчетнаяПартия.ВременнаяРазница = Окр(Приход.ВременнаяРазница * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
		КонецЕсли;
		
		// Корректируем базу расчета в приходе
		Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Приход.СтоимостьРеглБезНДС = Приход.СтоимостьРеглБезНДС - РасчетнаяПартия.СтоимостьРеглБезНДС;
		Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	КонецЕсли;
	Приход.Знаменатель = Приход.Знаменатель - Расход.Знаменатель;
	
	// корректируем базу расчета в расходе
	Расход.Знаменатель = 0;
	
	Если РасчетнаяПартия.ДоляСтоимости = 0.
		И РасчетнаяПартия.Стоимость = 0.
		И РасчетнаяПартия.СтоимостьБезНДС = 0.
		И РасчетнаяПартия.СтоимостьРегл = 0.
		И РасчетнаяПартия.СтоимостьРеглБезНДС = 0.
		И РасчетнаяПартия.НДСРегл = 0.
		И РасчетнаяПартия.ПостояннаяРазница = 0.
		И РасчетнаяПартия.ВременнаяРазница = 0. Тогда
		РасчетнаяПартия.РасчетЗавершен = Ложь;
	Иначе
		РасчетнаяПартия.РасчетЗавершен = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПрочиеРасходыПоБазе(РасчетнаяПартия, Расход, Приход) // ПрочиеРасходы
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// заполняем показатели расчетной партии
	Если Расход.ТипЗаписи = "Потребление" И Приход.ТипЗаписи = "Партия" Тогда
		РасчетнаяПартия.КорСтатьяРасходов = Приход.СтатьяРасходов;
		РасчетнаяПартия.КорАналитикаРасходов = Приход.АналитикаРасходов;
		РасчетнаяПартия.КорПодразделение = Приход.Подразделение;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Списание" И Приход.ТипЗаписи = "Потребление" Тогда
		РасчетнаяПартия.КорСтатьяРасходов = Расход.СтатьяРасходов;
		РасчетнаяПартия.КорАналитикаРасходов = Расход.АналитикаРасходов;
		РасчетнаяПартия.КорПодразделение = Расход.Подразделение;
		РасчетнаяПартия.СтатьяРасходов = Приход.КорСтатьяРасходов;
		РасчетнаяПартия.АналитикаРасходов = Приход.КорАналитикаРасходов;
		РасчетнаяПартия.Подразделение = Приход.КорПодразделение;
	КонецЕсли;
	
	РасчетнаяПартия.ДоляСтоимости = Окр(Приход.ДоляСтоимости * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.Сумма = Окр(Приход.Сумма * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.СуммаБезНДС = Окр(Приход.СуммаБезНДС * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.СуммаРегл = Окр(Приход.СуммаРегл * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.СуммаРеглБезНДС = Окр(Приход.СуммаРеглБезНДС * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.НДСРегл = Окр(Приход.НДСРегл * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(Приход.ПостояннаяРазница * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(Приход.ВременнаяРазница * ?(Приход.Знаменатель = 0, 0, Расход.Знаменатель / Приход.Знаменатель), 2);
	
	// корректируем базу расчета в приходе
	Приход.ДоляСтоимости = Приход.ДоляСтоимости - РасчетнаяПартия.ДоляСтоимости;
	Приход.Сумма = Приход.Сумма - РасчетнаяПартия.Сумма;
	Приход.СуммаБезНДС = Приход.СуммаБезНДС - РасчетнаяПартия.СуммаБезНДС;
	Приход.СуммаРегл = Приход.СуммаРегл - РасчетнаяПартия.СуммаРегл;
	Приход.СуммаРеглБезНДС = Приход.СуммаРеглБезНДС - РасчетнаяПартия.СуммаРеглБезНДС;
	Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	Приход.Знаменатель = Приход.Знаменатель - Расход.Знаменатель;
	
	// корректируем базу расчета в расходе
	Расход.Знаменатель = 0;
	
	РасчетнаяПартия.РасчетЗавершен = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьПрочиеРасходыНезавершенногоПроизводства(РасчетнаяПартия, Расход, Приход) // ПрочиеРасходыНезавершенногоПроизводства
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	ЗнаменательСписания = Мин(Расход.Знаменатель, Приход.Знаменатель);
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.ДоляСтоимости = Окр(ЗнаменательСписания * Приход.ДоляСтоимости / Приход.Знаменатель, 2);
	РасчетнаяПартия.Стоимость = Окр(ЗнаменательСписания * Приход.Стоимость / Приход.Знаменатель, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(ЗнаменательСписания * Приход.СтоимостьБезНДС / Приход.Знаменатель, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(ЗнаменательСписания * Приход.СтоимостьРегл / Приход.Знаменатель, 2);
	РасчетнаяПартия.СтоимостьРеглБезНДС = Окр(ЗнаменательСписания * Приход.СтоимостьРеглБезНДС / Приход.Знаменатель, 2);
	РасчетнаяПартия.НДСРегл = Окр(ЗнаменательСписания * Приход.НДСРегл / Приход.Знаменатель, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(ЗнаменательСписания * Приход.ПостояннаяРазница / Приход.Знаменатель, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(ЗнаменательСписания * Приход.ВременнаяРазница / Приход.Знаменатель, 2);
	
	Если Расход.ТипЗаписи = "Распределение" ИЛИ Расход.ТипЗаписи = "ЗатратыБезЗаказа" ИЛИ Расход.ТипЗаписи = "ПолуфабрикатДавальца"
	 ИЛИ Расход.ТипЗаписи = "СписанияНаВыпуск" Тогда
		РасчетнаяПартия.Знаменатель = Расход.КоличествоПродукции;
	КонецЕсли;	
	
	// корректируем базу расчета в приходе
	Приход.ДоляСтоимости = Приход.ДоляСтоимости - РасчетнаяПартия.ДоляСтоимости;
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	Приход.СтоимостьРеглБезНДС = Приход.СтоимостьРеглБезНДС - РасчетнаяПартия.СтоимостьРеглБезНДС;
	Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	
	Приход.Знаменатель = Приход.Знаменатель - ЗнаменательСписания;
	
	Если Расход.ТипЗаписи <> "ОтчетДавальцу" И Приход.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ТипЗаписи = Приход.ТипЗаписи;
	КонецЕсли;

	// Заполняем партионную идентификацию в расчетной партии
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Подразделение) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Подразделение = Приход.Подразделение;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ЗаказНаПроизводство) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.ЗаказНаПроизводство = Приход.ЗаказНаПроизводство;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.КодСтрокиПродукция) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.КодСтрокиПродукция = Приход.КодСтрокиПродукция;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Этап) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Этап = Приход.Этап;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Спецификация) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.Спецификация = Приход.Спецификация;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.СтатьяКалькуляции) ИЛИ РасчетнаяПартия.ТипЗаписи = "ПолуфабрикатДавальца" Тогда
		РасчетнаяПартия.СтатьяКалькуляции = Приход.СтатьяКалькуляции;
	КонецЕсли;
	РасчетнаяПартия.СтатьяРасходов = Приход.СтатьяРасходов;
	РасчетнаяПартия.АналитикаРасходов = Приход.АналитикаРасходов;
	РасчетнаяПартия.ГруппаПродукции = Приход.ГруппаПродукции;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Период) Тогда
		РасчетнаяПартия.Период = Приход.Период;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.Регистратор) Тогда
		РасчетнаяПартия.Регистратор = Приход.Регистратор;
	КонецЕсли;
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход
	 И Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументДвижения) Тогда
		РасчетнаяПартия.ДокументДвижения = Приход.ДокументДвижения;
	КонецЕсли;
	Если РасчетнаяПартия.ТипЗаписи = "ОтчетДавальцу" Тогда
		РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) ИЛИ РасчетнаяПартия.ДокументИсточник = НЕОПРЕДЕЛЕНО Тогда
		РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
	КонецЕсли;
	РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначение; 
	
	
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
КонецПроцедуры
//-- НЕ УТ
#КонецОбласти

// Общие алгоритмы расчета партий
#Область ОбщиеРасчетныеМетоды

Процедура УдалитьНезаписываемыеСтроки(Контекст, РасчетныеПартии)
	
	УдаляемыеТипы = Новый Структура;
	УдаляемыеРазделы = Новый Соответствие;
	Если Контекст = "ПартииТоваровОрганизаций" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Прошлое");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты, "");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию, "");
		УдалятьНезавершенные = Ложь;
	ИначеЕсли Контекст = "ПартииТоваровПереданныеНаКомиссию" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПартииРасходовНаСебестоимостьТоваров" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Прочее");
		УдаляемыеТипы.Вставить("Прошлое");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПартииЗатратНаВыпуск" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Прочее");
		УдаляемыеТипы.Вставить("Прошлое");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПартииПроизводственныхЗатрат" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("ОстатокСторно");
		УдалятьНезавершенные = Ложь;	
	ИначеЕсли Контекст = "ПартииНезавершенногоПроизводства" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("ОстатокСторно");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка(), "");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ТрудозатратыНезавершенногоПроизводства" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("МаршрутныйЛист");
		УдаляемыеТипы.Вставить("ОстатокБезЗаказа");
		УдаляемыеТипы.Вставить("ПартияБезЗаказа");
		УдаляемыеТипы.Вставить("Потребление");
		УдаляемыеТипы.Вставить("Перемещение");
		УдаляемыеТипы.Вставить("Распределение");
		УдаляемыеТипы.Вставить("ПолуфабрикатДавальца");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка(), "");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводства" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Распределение");
		УдаляемыеТипы.Вставить("ПоБазеБезЗаказа");
		УдаляемыеТипы.Вставить("ПолуфабрикатДавальца");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку, "");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводстваКРаспределению" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводстваПоБазе" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыПоБазе" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "РаспределениеМатериаловИРабот" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;	
	КонецЕсли;
	
	МинимальныйИндекс = 1 - РасчетныеПартии.Количество();
	Для Индекс = МинимальныйИндекс По 0 Цикл
		РасчетнаяПартия = РасчетныеПартии[-Индекс];
		Если УдалятьНезавершенные И РасчетнаяПартия.РасчетЗавершен <> Истина
		 Или УдаляемыеТипы.Свойство(РасчетнаяПартия.ТипЗаписи)
		 Или УдаляемыеРазделы[РасчетнаяПартия.РазделУчета] <> Неопределено
		Тогда
			РасчетныеПартии.Удалить(-Индекс);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра, МассивИсключаемыхТипов = Неопределено)
	ШаблонЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ИЗ
		|	&ШаблонРегистра КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И НЕ ТипЗначения(ДД.Регистратор) В (&МассивИсключаемыхТипов)
		|";
	ШаблонРегистра = "РегистрНакопления.";
	ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ШаблонРегистра", ШаблонРегистра + ИмяРегистра);
	Регистраторы = Новый Соответствие;
	Если МассивИсключаемыхТипов = Неопределено Тогда
		МассивИсключаемыхТипов = Новый Массив;
	КонецЕсли;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Запрос.УстановитьПараметр("МассивИсключаемыхТипов", МассивИсключаемыхТипов);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
	Возврат Регистраторы;
КонецФункции

Процедура РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы)
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ДД.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ДД
		|ГДЕ
		|	ДД.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаписатьРасчетныеПартии(МенеджерРегистра, РасчетныеПартии, Регистраторы)
	РасчетныеПартии.Сортировать("Регистратор", Новый СравнениеЗначений);
	
	Движения = МенеджерРегистра.СоздатьНаборЗаписей();
	Движения.ДополнительныеСвойства.Вставить(ИмяДополнительногоСвойстваЗаписываемогоНабора());
	
	Если ИсходящиеДанныеМеханизма().Получить(Движения.Метаданные()) = Неопределено Тогда
		ВызватьИсключение
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Движения по регистру ""%1"" не должны формироваться механизмом расчета партий.';uk='Рухи по регістру ""%1"" не повинні формуватися механізмом розрахунку партій.'"),
				Движения.Метаданные().Имя);
	КонецЕсли;
	
	Регистратор = Неопределено;
	Замещать = Истина;
	Счетчик = 0;
	МаксимумСчетчика = РасчетныеПартии.Количество() - 1;
	Пока Счетчик <= МаксимумСчетчика Цикл
		РасчетнаяПартия = РасчетныеПартии[Счетчик];
		Если Регистратор <> РасчетнаяПартия.Регистратор Тогда
			Регистратор = РасчетнаяПартия.Регистратор;
			
			Движения.Очистить();
			Движения.Отбор.Регистратор.Установить(Регистратор);
			
			НачатьТранзакцию();
			Если Регистраторы <> Неопределено Тогда
				Если Регистраторы[Регистратор] <> Неопределено Тогда
					Замещать = Истина;
					Регистраторы.Удалить(Регистратор);
				Иначе
					Замещать = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		Движение = Движения.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, РасчетнаяПартия);
		Движение.Активность = Истина;
		
		Счетчик = Счетчик + 1;
		Если Счетчик > МаксимумСчетчика Или (Регистратор <> РасчетныеПартии[Счетчик].Регистратор) Тогда
			Движения.Записать(Замещать);
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ТекстОтборПоТипамРегистраторовДляСохраненияДвижений()
	
	// Получим перечень метаданные документов, формирующих движения по нескольким организациям
	МетаданныеСохраняемыхРегистраторов = РасчетСебестоимости.ДокументыСРазнымиПериодамиИлиОрганизациямиВДвижениях(Ложь, Истина);
	
	// Сформируем текст для отбора по типу регистратора
	ТекстОтборПоТипамРегистраторов = "";
	
	Для Каждого КлючИЗначение Из МетаданныеСохраняемыхРегистраторов Цикл
		ТекстОтборПоТипамРегистраторов = ТекстОтборПоТипамРегистраторов
			+ ?(ТекстОтборПоТипамРегистраторов = "", "", ", ") + "ТИП(" + КлючИЗначение.Ключ.ПолноеИмя() + ")";
	КонецЦикла;
	
	Возврат "ТИПЗНАЧЕНИЯ(Т.Регистратор) В (" + ТекстОтборПоТипамРегистраторов + ")";
	
КонецФункции

Функция РегистраторыССохраняемымиДвижениями(ИмяРегистра, МенеджерВременныхТаблиц, СтарыеРегистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	
	// Подготовим запрос
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода",  	НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  	ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  МассивОрганизаций);
	Запрос.УстановитьПараметр("СтарыеРегистраторы",
		ОбщегоНазначенияУТКлиентСервер.ПреобразоватьСоответствиеИлиСтруктуруВМассив(СтарыеРегистраторы));
	
	// Надо сохранить движения по "другим" организациям из тех регистраторов, которые
	//	- входят в регистраторы таблицы данных для расчета партий
	//  - могут формировать движения по нескольким организациям
	//  - входят в список "старых" регистраторов (для них запись расчетных движений будет выполняться с замещением)
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТСохраняемыеРегистраторы
	|ИЗ
	|	Данные КАК Т
	|ГДЕ
	|	%1
	|	И Т.Регистратор В (&СтарыеРегистраторы)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСохраняемыеДвижения
	|ИЗ
	|	РегистрНакопления.%2 КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Регистратор В (ВЫБРАТЬ Т.Регистратор ИЗ ВТСохраняемыеРегистраторы КАК Т)
	|	И НЕ (Т.Организация В (&МассивОрганизаций))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ИЗ
	|	ВТСохраняемыеДвижения КАК Т
	|";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		ТекстОтборПоТипамРегистраторовДляСохраненияДвижений(),
		ИмяРегистра);
		
	// Получим перечень регистраторов, у которых нужно сохранить движения
	РегистраторыССохраняемымиДвижениями = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// При восстановлении сохраненных движений их надо добавлять к сформированным расчетным движениям (без замещения)
		РегистраторыССохраняемымиДвижениями.Вставить(Выборка.Регистратор, Ложь);
	КонецЦикла;
	
	Возврат РегистраторыССохраняемымиДвижениями;
	
КонецФункции

Процедура ЗаписатьСохраняемыеДвижения(МенеджерРегистра, МенеджерВременныхТаблиц, РегистраторыССохраняемымиДвижениями)
	
	Если РегистраторыССохраняемымиДвижениями.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТСохраняемыеДвижения КАК Т
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.Регистратор,
	|	Т.НомерСтроки
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Движения = МенеджерРегистра.СоздатьНаборЗаписей();
	Движения.ДополнительныеСвойства.Вставить(ИмяДополнительногоСвойстваЗаписываемогоНабора());
	
	Регистратор = Неопределено;
	Замещать = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если Регистратор <> Выборка.Регистратор Тогда
			
			Если Регистратор <> Неопределено Тогда
				Движения.Записать(Замещать);
			КонецЕсли;
			
			Регистратор = Выборка.Регистратор;
			Замещать = РегистраторыССохраняемымиДвижениями.Получить(Регистратор);
			
			Движения.Очистить();
			Движения.Отбор.Регистратор.Установить(Регистратор);
			
		КонецЕсли;
		
		Движение = Движения.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
	КонецЦикла;
	
	Если Регистратор <> Неопределено Тогда
		Движения.Записать(Замещать);
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТ

Процедура РегистраторыПрочиеРасходы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы)
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.РаспределениеПрочихЗатрат
		|");
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ВернутьДокументыКОтражениюВРеглУчете(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор КАК Документ,
	|	ДД.Организация КАК Организация,
	|	ДД.ДатаОтражения КАК ДатаОтражения
	|ПОМЕСТИТЬ
	|	ДокументыКОтражению
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ПартииПрочихРасходов КАК Партии
	|	ПО 
	|		ДД.Регистратор = Партии.Регистратор
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Партии.Организация В (&МассивОрганизаций)
	|	И Партии.Активность
	|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Партии.СтатьяРасходов.ВариантРаспределенияРасходов =
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ДД.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|	И ДД.ДатаОтражения МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Запрос.Выполнить();
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(МВТ);
	
КонецПроцедуры

Процедура ВернутьДокументыРаспределенияРасходовПоБазеКОтражениюВРеглУчете(Знач Регистраторы)
	
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор   КАК Документ,
	|	ДД.Организация  КАК Организация,
	|	ДД.ДатаОтражения КАК ДатаОтражения
	|ПОМЕСТИТЬ
	|	ДокументыКОтражению
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Док
	|		ПО Док.Ссылка = ДД.Регистратор
	|ГДЕ
	|	ДД.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|	И ДД.Регистратор В (&Регистраторы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|");
	
	Массив = Новый Массив;
	
	Если ТипЗнч(Регистраторы) = Тип("ТаблицаЗначений") Тогда
		Массив = Регистраторы.ВыгрузитьКолонку("Регистратор");
	ИначеЕсли ТипЗнч(Регистраторы) = Тип("Соответствие") Тогда
		Для Каждого Строка Из Регистраторы Цикл
			Массив.Добавить(Строка.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("Регистраторы", Массив);
	Запрос.Выполнить();
	
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(МВТ);
	
КонецПроцедуры
//-- НЕ УТ

Функция ЕстьФИФОСкользящая(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетныеПолитики.МетодОценкиСтоимостиТоваров
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&ОкончаниеПериода, Организация В (&МассивОрганизаций)) КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитики
	|		ПО УчетныеПолитики.Ссылка = ДД.УчетнаяПолитика
	|ГДЕ
	|	УчетныеПолитики.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Расчет.Ссылка.МетодОценки
	|ИЗ
	|	Документ.РасчетСебестоимостиТоваров.Организации КАК Расчет
	|ГДЕ
	|	Расчет.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Расчет.Организация В (&МассивОрганизаций)
	|	И Расчет.Ссылка.МетодОценки = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка)
	|	И Расчет.Ссылка.Проведен
	|");
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции

Функция ИмяДополнительногоСвойстваЗаписываемогоНабора()
	Возврат "ПартионныйУчет_ЗаписьПартии";
КонецФункции

Процедура ВременнаяТаблицаДанныхПоОтбору(ПолеОтбора, ТекстСортировка, Таблица, МВТ)
	Таблица.Колонки.Добавить("К", ОбщегоНазначения.ОписаниеТипаЧисло(15));
	ШаблонРезультата = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	ПустаяТаблица
	|ИЗ
	|	&ПустаяТаблица КАК ДД
	|;
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	Данные
	|ИЗ
	|	ПустаяТаблица КАК ДД
	|";
	ШаблонУдаления = "УНИЧТОЖИТЬ ИсходныеДанные;";
	ИндексСтроки = -1;
	НомерТаблицы = 1;
	
	ШаблонЗначенийОтбора = "
	|ВЫБРАТЬ
	|	ДД.ПолеОтбора КАК ЗначениеОтбора,
	|	КОЛИЧЕСТВО(ДД.ПолеОтбора) КАК Количество
	|ИЗ
	|	ИсходныеДанные КАК ДД
	|СГРУППИРОВАТЬ ПО
	|	ДД.ПолеОтбора
	|УПОРЯДОЧИТЬ ПО
	|	ДД.ПолеОтбора
	|";
	ЗапросЗначенийОтбора = Новый Запрос(СтрЗаменить(ШаблонЗначенийОтбора, "ПолеОтбора", ПолеОтбора));
	ЗапросЗначенийОтбора.МенеджерВременныхТаблиц = МВТ;
	ВыборкаЗначенийОтбора = ЗапросЗначенийОтбора.Выполнить().Выбрать();
	Счетчик = 0;
	МассивОтбора = Новый Массив;
	СтрокВыборки = ВыборкаЗначенийОтбора.Количество();
	Пока ВыборкаЗначенийОтбора.Следующий() Цикл
		Счетчик = Счетчик + ВыборкаЗначенийОтбора.Количество;
		МассивОтбора.Добавить(ВыборкаЗначенийОтбора.ЗначениеОтбора);
		СтрокВыборки = СтрокВыборки - 1;
		Если Счетчик >= 100000 ИЛИ СтрокВыборки = 0 Тогда
			ШаблонДанных = "
			|ВЫБРАТЬ
			|	*
			|ИЗ
			|	ИсходныеДанные КАК ДД
			|ГДЕ
			|	ДД.ПолеОтбора В (&ЗначениеОтбора)
			|" + ТекстСортировка;
			ЗапросДанных = Новый Запрос(СтрЗаменить(ШаблонДанных, "ПолеОтбора", ПолеОтбора));
			ЗапросДанных.УстановитьПараметр("ЗначениеОтбора", МассивОтбора);
			ЗапросДанных.МенеджерВременныхТаблиц = МВТ;
			Выборка = ЗапросДанных.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				ИндексСтроки = ИндексСтроки + 1;
				НоваяСтрока = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.К = ИндексСтроки;
			КонецЦикла;
			Выборка = Неопределено;
			МассивОтбора.Очистить();
			Счетчик = 0;
			
			ШаблонЗапроса = "
			|ВЫБРАТЬ
			|	*
			|ПОМЕСТИТЬ
			|	&ИмяТаблицы
			|ИЗ
			|	&Таблица КАК &ИмяТаблицы
			|";
			ИмяТаблицы = "Данные" + Формат(НомерТаблицы,"ЧГ=0");
			НомерТаблицы = НомерТаблицы + 1;
			Запрос = Новый Запрос(СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", ИмяТаблицы));
			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.УстановитьПараметр("Таблица", Таблица);
			Запрос.Выполнить();
			Таблица.Очистить();
			
			ШаблонТаблицы = "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|ВЫБРАТЬ
			|	*
			|ИЗ
			|	&ИмяТаблицы КАК &ИмяТаблицы
			|";
			ШаблонРезультата = ШаблонРезультата + СтрЗаменить(ШаблонТаблицы, "&ИмяТаблицы", ИмяТаблицы);
			ШаблонУдаления = ШаблонУдаления + Символы.ПС + "УНИЧТОЖИТЬ " + ИмяТаблицы + ";";
		КонецЕсли;
	КонецЦикла;
	ШаблонИндексы = "
	|ИНДЕКСИРОВАТЬ ПО
	|	К
	|";
	Запрос = Новый Запрос(ШаблонРезультата + ШаблонИндексы + ";" + ШаблонУдаления);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ПустаяТаблица", Таблица);
	Запрос.Выполнить();
КонецПроцедуры

Функция КоличествоЗаписей(МВТ)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.К) КАК Количество
	|ИЗ
	|	Данные КАК ДД
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	Возврат Количество;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Распределение приходов на расходы

// Основной расчетный метод - заполняет расчетные партии из данных для расчета
// Поля прямого обращения: ТипЗаписи, ВидДвижения, Регистратор
// Обращения к остальным полям происходит через структуру ОписаниеДвижений
Процедура РаспределитьПриходыНаРасходы(ОписаниеДвижений, ДанныеДляРасчета, РасчетныеПартии)
	ПредыдущееДвижение = Неопределено;
	// Буфер партий по аналитике - очередь копий партионных движений
	Приходы = Новый Структура("Очередь, Указатель, УказательРестарта", Новый Массив, 0, -1);
	// Буфер потреблений по аналитике - очередь копий движений потребления
	Расходы = Новый Структура("Очередь, Указатель, УказательРестарта", Новый Массив, 0, -1);
	
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		// сменилась аналитика
		Если Не ПоляЗаписейРавны(ПредыдущееДвижение, Движение, ОписаниеДвижений.КлючиСравнения) Тогда
			// сбрасываем оставшийся буфер потреблений (партии не подобраны) в расчетные партии
			Расходы.Указатель = ?(Расходы.УказательРестарта > 0, Расходы.УказательРестарта, Расходы.Указатель);
			Пока Расходы.Указатель < Расходы.Очередь.Количество() Цикл
				Расход = Расходы.Очередь[Расходы.Указатель];
				Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
					// перемещения, что приведет к очистке документа поступления у перемещения.
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Расход, Неопределено);
				КонецЕсли;
				Расходы.Указатель = Расходы.Указатель + 1;
			КонецЦикла;
			// инициализируемся
			ПредыдущееДвижение = Движение;
			Приходы.Очередь.Очистить();
			Приходы.Указатель = 0;
			Приходы.УказательРестарта = -1;
			Расходы.Очередь.Очистить();
			Расходы.Указатель = 0;
			Расходы.УказательРестарта = -1;
		КонецЕсли;
		
		ЭтоПриход = ("Остаток" = Движение.ТипЗаписи) Или ("Партия" = Движение.ТипЗаписи)
			Или ("Перемещение" = Движение.ТипЗаписи) Или ("Сторно" = Движение.ТипЗаписи);
		ИнвертироватьПоказатели = ЭтоПриход И Движение[ОписаниеДвижений.БазисПрихода] < 0.
			Или НЕ ЭтоПриход И Движение[ОписаниеДвижений.БазисРасхода] < 0.;
		
		Если ЭтоПриход Тогда
			Приход = КопияЗаписиСтруктурой(Движение, ОписаниеДвижений.ПоляРасчета);
			ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			// если ранее пропустили расход, то текущий приход начинаем распределять на него
			Если Расходы.УказательРестарта >= 0 Тогда
				Расходы.Указатель = Расходы.УказательРестарта;
				Расходы.УказательРестарта = -1;
			КонецЕсли;
			// покрываем расходы из буфера расходов по очереди (FIFO)
			Пока Приход[ОписаниеДвижений.БазисПрихода] > 0. И Расходы.Указатель < Расходы.Очередь.Количество() Цикл
				Расход = Расходы.Очередь[Расходы.Указатель];
				// приход, сделанный по расходу не может быть распределен на этот расход
				Если Расход.Регистратор = Приход[ОписаниеДвижений.КлючРасхода] Тогда
					Расходы.УказательРестарта = Расходы.Указатель;
					Расходы.Указатель = Расходы.Указатель + 1;
					Продолжить;
				КонецЕсли;
				// добавляем в партии покрытую часть расхода
				Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Расход, Приход);
				КонецЕсли;
				// если расход покрыт, то ставим на покрытие следующий расход
				Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
					Расходы.Указатель = Расходы.Указатель + 1;
				КонецЕсли;
			КонецЦикла;
			// если приход еще остался, то регистрируемся в буфере приходов
			Если Приход[ОписаниеДвижений.БазисПрихода] > 0. Тогда
				Приходы.Очередь.Добавить(Приход);
			КонецЕсли;
			// приход надо добавить в партии - код должен быть здесь для сохранения сортировки
			Если "Остаток" <> Движение.ТипЗаписи Тогда
				Распределение = РасчетныеПартии.Добавить();
				ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Движение, Неопределено);
			КонецЕсли;
		КонецЕсли;
		
		Если "Потребление" = Движение.ТипЗаписи Тогда
			Расход = КопияЗаписиСтруктурой(Движение, ОписаниеДвижений.ПоляРасчета);
			ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			// если ранее пропустили приход, то текущий расход начинаем потреблять с него
			Если Приходы.УказательРестарта >= 0 Тогда
				Приходы.Указатель = Приходы.УказательРестарта;
				Приходы.УказательРестарта = -1;
			КонецЕсли;
			// списываем приходы из буфера приходов по очереди (FIFO)
			Пока Расход[ОписаниеДвижений.БазисРасхода] > 0. И Приходы.Указатель < Приходы.Очередь.Количество() Цикл
				Приход = Приходы.Очередь[Приходы.Указатель];
				// приход, сделанный по расходу не может быть распределен на этот расход
				Если Расход.Регистратор = Приход[ОписаниеДвижений.КлючРасхода] Тогда
					Приходы.УказательРестарта = Приходы.Указатель;
					Приходы.Указатель = Приходы.Указатель + 1;
					Продолжить;
				КонецЕсли;
				// добавляем в партии покрытую часть расхода
				Если Приход[ОписаниеДвижений.БазисПрихода] > 0. Тогда
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Расход, Приход);
				КонецЕсли;
				// если приход потреблен, то выбираем следующий приход
				Если Приход[ОписаниеДвижений.БазисПрихода] <= 0. Тогда
					Приходы.Указатель = Приходы.Указатель + 1;
				КонецЕсли;
			КонецЦикла;
			// если расход еще остался, то регистрируемся в буфере расходов
			Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
				Расходы.Очередь.Добавить(Расход);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Функция ОписаниеДвижений(Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели, БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки = "", СортировкаПоУсловию = "")
	Возврат
		Новый Структура(
			"Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели, БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки, СортировкаПоУсловию",
			Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели, БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки, СортировкаПоУсловию);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Построение цепочек движений для проброса партий

Функция ОписаниеЦепочек(ПереченьТиповЗаписей)
	ОписаниеЦепочек = Новый Структура(ПереченьТиповЗаписей);
	Для Каждого Описание Из ОписаниеЦепочек Цикл
		ОписаниеЦепочек[Описание.Ключ] = Новый Структура("ПоляСвязи, ТипыПриемников, ТипыИсточников");
		ОписаниеЦепочек[Описание.Ключ].ПоляСвязи = Новый Массив;
		ОписаниеЦепочек[Описание.Ключ].ТипыПриемников = Новый Соответствие;
		ОписаниеЦепочек[Описание.Ключ].ТипыИсточников = Новый Соответствие;
	КонецЦикла;
	Возврат ОписаниеЦепочек;
КонецФункции

Процедура ДобавитьОписаниеПриемника(ОписаниеЦепочек, ТипПриемника, ПоляПриемника)
	Для Каждого ОписаниеПоля Из Новый Структура(ПоляПриемника) Цикл
		ОписаниеЦепочек[ТипПриемника].ПоляСвязи.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьОписаниеИсточника(ОписаниеЦепочек, ТипПриемника, ТипИсточника, ПоляИсточника)
	ПоляСвязи = Новый Массив;
	Для Каждого ОписаниеПоля Из Новый Структура(ПоляИсточника) Цикл
		ПоляСвязи.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла;
	ОписаниеЦепочек[ТипИсточника].ТипыПриемников.Вставить(ТипПриемника, ПоляСвязи);
	ОписаниеЦепочек[ТипПриемника].ТипыИсточников.Вставить(ТипИсточника, ПоляСвязи);
КонецПроцедуры

// ждем, что источников будем менее десятка и они будут почти всегда уже упорядочены, поэтому делаем сортировку вставками
Процедура СортироватьИсточники(Источники, ПолеПорядка, РасчетныеПартии)
	Для У = 1 По Источники.ВГраница() Цикл
		Если Неопределено = РасчетныеПартии[Источники[У]] Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(РасчетныеПартии[Источники[У]]) = Тип("Массив") Тогда
			Если РасчетныеПартии[Источники[У]].Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ИсточникУ = РасчетныеПартии[Источники[У]][0];
		Иначе
			ИсточникУ = РасчетныеПартии[Источники[У]];
		КонецЕсли;
		Элемент = Новый Структура("Порядок, Источник", ИсточникУ[ПолеПорядка], Источники[У]);
		Х = У - 1;
		Пока Х >= 0 Цикл
			Если ТипЗнч(РасчетныеПартии[Источники[Х]]) = Тип("Массив") Тогда
				Если РасчетныеПартии[Источники[Х]].Количество() = 0 Тогда
					Х = Х - 1;
					Продолжить;
				КонецЕсли;
				ИсточникХ = РасчетныеПартии[Источники[Х]][0];
			Иначе
				ИсточникХ = РасчетныеПартии[Источники[Х]];
			КонецЕсли;
			Если Неопределено = ИсточникХ Тогда
				Х = Х - 1;
				Продолжить;
			КонецЕсли;
			Если ИсточникХ[ПолеПорядка] <= Элемент.Порядок Тогда
				Прервать;
			КонецЕсли;
			Источники[Х + 1] = Источники[Х];
			Х = Х - 1;
		КонецЦикла;
		Источники[Х + 1] = Элемент.Источник;
	КонецЦикла;
КонецПроцедуры

Процедура СортироватьПриходыПоЛИФО(ПолеПорядка, МассивПриходов)
	Список = Новый СписокЗначений;
	Для Каждого Приход Из МассивПриходов Цикл
		Список.Добавить(Приход, Приход[ПолеПорядка]);
	КонецЦикла;
	Список.СортироватьПоПредставлению(НаправлениеСортировки.Убыв);
	МассивПриходов = Список.ВыгрузитьЗначения();
КонецПроцедуры

Процедура СортироватьИсточникиПоЗначениямПолей(Источники, ЗначенияПолей, Приходы)
	Список = Новый СписокЗначений;
	Для Каждого ИндексИсточника Из Источники Цикл
		МассивПриходов = Приходы[ИндексИсточника];
		Если Неопределено = МассивПриходов ИЛИ МассивПриходов.Количество() = 0 Тогда
			Список.Добавить(ИндексИсточника, 0);
		Иначе
			Номер = 0;
			Для Каждого ПолеСортировки Из ЗначенияПолей Цикл
				Если МассивПриходов[0][ПолеСортировки.Ключ] = ПолеСортировки.Значение Тогда
					Номер = Номер + 1;
				КонецЕсли;
			КонецЦикла;
			Список.Добавить(ИндексИсточника, Номер);
		КонецЕсли;
	КонецЦикла;
	Список.СортироватьПоПредставлению(НаправлениеСортировки.Убыв);
	Источники = Список.ВыгрузитьЗначения();
КонецПроцедуры

Функция ТребуетсяСортировка(Контекст, Расход)
	ТребуетсяСортировка = Истина;
	Если Контекст = "ПартииТоваровОрганизаций" Тогда
		ТребуетсяСортировка = (ТипЗнч(Расход.Регистратор) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") И Расход.ТипЗаписи = "Потребление")
			ИЛИ (ТипЗнч(Расход.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И Расход.ТипЗаписи = "Потребление");
	КонецЕсли;
	Возврат ТребуетсяСортировка;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Построение цепочек движений с помощью запроса

Процедура ЦепочкиДвижений(ОписаниеЦепочек, МВТ)
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	Приемники.К КАК Приемник,
	|	Источники.К КАК Источник
	|ПОМЕСТИТЬ
	|	&Результат
	|ИЗ
	|	Данные КАК Приемники
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные КАК Источники
	|		ПО &Условия
	|ГДЕ
	|	Приемники.К <> Источники.К
	|	И Приемники.ТипЗаписи = &ТипПриемника
	|	И Источники.ТипЗаписи = &ТипИсточника
	|;
	|";
	ТекстЗапроса = "";
	Результаты = Новый Массив;
	Для Каждого Описание Из ОписаниеЦепочек Цикл
		ПоляПриемника = Описание.Значение.ПоляСвязи;
		Если ПоляПриемника.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ОписаниеИсточника Из Описание.Значение.ТипыИсточников Цикл
			ПоляИсточника = ОписаниеИсточника.Значение;
			Если ПоляИсточника.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			НомерПоля = -1;
			Для Каждого ПолеПриемника Из ПоляПриемника Цикл
				НомерПоля = НомерПоля + 1;
				Если НомерПоля = 0 Тогда
					Условия = "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				Иначе
					Условия = Условия + Символы.ПС + " И " + "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				КонецЕсли;
			КонецЦикла;
			ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&Результат", Описание.Ключ + ОписаниеИсточника.Ключ);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условия", Условия);
			Результаты.Добавить(Описание.Ключ + ОписаниеИсточника.Ключ);
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.УстановитьПараметр("ТипПриемника", Описание.Ключ);
			Запрос.УстановитьПараметр("ТипИсточника", ОписаниеИсточника.Ключ);
			Запрос.Выполнить();
		КонецЦикла;
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	-1 КАК Приемник,
	|	-1 КАК Источник
	|ПОМЕСТИТЬ
	|	Цепочки
	|";
	ШаблонЗапроса = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Приемник,
	|	ДД.Источник
	|ИЗ
	|	&ИмяТаблицы КАК ДД
	|";
	Для Каждого Результат Из Результаты Цикл
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", Результат);
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ";";
	Для Каждого Результат Из Результаты Цикл
		ТекстЗапроса = ТекстЗапроса + "УНИЧТОЖИТЬ " + Результат + ";";
	КонецЦикла;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Выполнить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Приемник КАК Ключ,
	|	ДД.Источник
	|ПОМЕСТИТЬ
	|	Источники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Источник КАК Ключ,
	|	ДД.Приемник
	|ПОМЕСТИТЬ
	|	Приемники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|УНИЧТОЖИТЬ Цепочки
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Выполнить();
КонецПроцедуры

//++ НЕ УТ
Функция ЦепочкиДвиженийЗапросом(ОписаниеЦепочек, РасчетныеПартии)
	Таблицы = Новый Структура;
	КолонкиЗапроса = РасчетныеПартии.Колонки;
	Для Каждого Описание Из ОписаниеЦепочек Цикл
		ТипЗаписи = Описание.Ключ;
		Если Не Таблицы.Свойство(ТипЗаписи) Тогда
			ДобавитьТаблицу(ТипЗаписи, Таблицы);
		КонецЕсли;
		ДобавитьКолонки(ТипЗаписи, Описание.Значение.ПоляСвязи, КолонкиЗапроса, Таблицы);
		Для Каждого ОписаниеИсточника Из Описание.Значение.ТипыИсточников Цикл
			ТипИсточника = ОписаниеИсточника.Ключ;
			Если Не Таблицы.Свойство(ТипИсточника) Тогда
				ДобавитьТаблицу(ТипИсточника, Таблицы);
			КонецЕсли;
			ДобавитьКолонки(ТипИсточника, ОписаниеИсточника.Значение, КолонкиЗапроса, Таблицы);
		КонецЦикла;
	КонецЦикла;
	МВТ = ДобавитьВременныеТаблицы(РасчетныеПартии, Таблицы);
	ЗаполнитьЦепочки(ОписаниеЦепочек, Таблицы, МВТ);
	Возврат МВТ;
КонецФункции

Процедура ДобавитьТаблицу(ТипЗаписи, Таблицы)
	Таблицы.Вставить(ТипЗаписи, Новый ТаблицаЗначений);
	Колонки = Таблицы[ТипЗаписи].Колонки;
	Колонки.Добавить("К", ОбщегоНазначения.ОписаниеТипаЧисло(15));
КонецПроцедуры

Процедура ДобавитьКолонки(ТипЗаписи, ПоляСвязи, КолонкиЗапроса, Таблицы)
	Колонки = Таблицы[ТипЗаписи].Колонки;
	Для Каждого ПолеСвязи Из ПоляСвязи Цикл
		Если Колонки.Найти(ПолеСвязи) = Неопределено Тогда
			Колонки.Добавить(ПолеСвязи, КолонкиЗапроса[ПолеСвязи].ТипЗначения);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ДобавитьВременныеТаблицы(РасчетныеПартии, Таблицы)
	Движение = РасчетныеПартии.Выбрать();
	НомерСтроки = -1;
	Пока Движение.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		НоваяСтрока = Таблицы[Движение.ТипЗаписи].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Движение);
		НоваяСтрока.К = НомерСтроки;
	КонецЦикла;
	
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	&ИмяТаблицы
	|ИЗ
	|	&Таблица КАК &ИмяТаблицы
	|";
	МВТ = Новый МенеджерВременныхТаблиц;
	ПустыеТаблицы = Новый Массив;
	Для Каждого Таблица Из Таблицы Цикл
		Если Таблица.Значение.Количество() > 0 Тогда
			ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", Таблица.Ключ);
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.УстановитьПараметр("Таблица", Таблица.Значение);
			Запрос.Выполнить();
			Таблица.Значение.Очистить();
		Иначе
			ПустыеТаблицы.Добавить(Таблица.Ключ);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Имя Из ПустыеТаблицы Цикл
		Таблицы.Удалить(Имя);
	КонецЦикла;
	Возврат МВТ;
КонецФункции

Процедура ЗаполнитьЦепочки(ОписаниеЦепочек, Таблицы, МВТ)
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	Приемники.К КАК Приемник,
	|	Источники.К КАК Источник
	|ПОМЕСТИТЬ
	|	&Результат
	|ИЗ
	|	&ИмяПриемника КАК Приемники
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ИмяИсточника КАК Источники
	|		ПО &Условия
	|ГДЕ
	|	Приемники.К <> Источники.К
	|;
	|";
	ТекстЗапроса = "";
	Результаты = Новый Массив;
	Для Каждого Описание Из ОписаниеЦепочек Цикл
		ПоляПриемника = Описание.Значение.ПоляСвязи;
		Если Не Таблицы.Свойство(Описание.Ключ) ИЛИ ПоляПриемника.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ОписаниеИсточника Из Описание.Значение.ТипыИсточников Цикл
			ПоляИсточника = ОписаниеИсточника.Значение;
			Если Не Таблицы.Свойство(ОписаниеИсточника.Ключ) ИЛИ ПоляИсточника.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			НомерПоля = -1;
			Для Каждого ПолеПриемника Из ПоляПриемника Цикл
				НомерПоля = НомерПоля + 1;
				Если НомерПоля = 0 Тогда
					Условия = "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				Иначе
					Условия = Условия + Символы.ПС + " И " + "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				КонецЕсли;
			КонецЦикла;
			ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяПриемника", Описание.Ключ);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", ОписаниеИсточника.Ключ);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Результат", Описание.Ключ + ОписаниеИсточника.Ключ);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условия", Условия);
			Результаты.Добавить(Описание.Ключ + ОписаниеИсточника.Ключ);
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.Выполнить();
		КонецЦикла;
	КонецЦикла;
	
	Если Таблицы.Количество() > 0 Тогда
		ТекстЗапроса = "";
		Для Каждого Таблица Из Таблицы Цикл
			ШаблонЗапроса = "
			|УНИЧТОЖИТЬ &ИмяТаблицы
			|;
			|";
			ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", Таблица.Ключ);
		КонецЦикла;
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Выполнить();
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	-1 КАК Приемник,
	|	-1 КАК Источник
	|ПОМЕСТИТЬ
	|	Цепочки
	|";
	ШаблонЗапроса = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Приемник,
	|	ДД.Источник
	|ИЗ
	|	&ИмяТаблицы КАК ДД
	|";
	Для Каждого Результат Из Результаты Цикл
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", Результат);
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ";";
	Для Каждого Результат Из Результаты Цикл
		ТекстЗапроса = ТекстЗапроса + "УНИЧТОЖИТЬ " + Результат + ";";
	КонецЦикла;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Выполнить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Приемник КАК Ключ,
	|	ДД.Источник
	|ПОМЕСТИТЬ
	|	Источники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Источник КАК Ключ,
	|	ДД.Приемник
	|ПОМЕСТИТЬ
	|	Приемники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|УНИЧТОЖИТЬ Цепочки
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Выполнить();
КонецПроцедуры
//-- НЕ УТ

Процедура ЦепочкиДвиженийПоИндексу(МВТ, НачальныйИндекс, КонечныйИндекс, ЦепочкиДвижений, СтрокиЦепочек)
	Колонки = СтрокиЦепочек.Колонки;
	Если Колонки.Количество() = 0 Тогда
		Колонки.Добавить("Источники", Новый ОписаниеТипов("Массив"));
		Колонки.Добавить("Приемники", Новый ОписаниеТипов("Массив"));
		Колонки.Добавить("ПройденныйПуть", Новый ОписаниеТипов("Соответствие"));
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДД.Ключ КАК Ключ,
	|	ДД.Источник,
	|	НЕОПРЕДЕЛЕНО КАК Приемник
	|ИЗ
	|	Источники КАК ДД
	|ГДЕ
	|	ДД.Ключ >= &НачальныйИндекс
	|	И ДД.Ключ <= &КонечныйИндекс
	|	И ДД.Ключ <> ДД.Источник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Ключ КАК Ключ,
	|	НЕОПРЕДЕЛЕНО КАК Источник,
	|	ДД.Приемник
	|ИЗ
	|	Приемники КАК ДД
	|ГДЕ
	|	ДД.Ключ >= &НачальныйИндекс
	|	И ДД.Ключ <= &КонечныйИндекс
	|	И ДД.Ключ <> ДД.Приемник
	|УПОРЯДОЧИТЬ ПО
	|	Ключ ВОЗР,
	|	Источник ВОЗР,
	|	Приемник ВОЗР
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачальныйИндекс", НачальныйИндекс);
	Запрос.УстановитьПараметр("КонечныйИндекс", КонечныйИндекс);
	
	ТекущийКлюч = -1;
	Строка = Неопределено;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Ключ = Выборка.Ключ;
		Если ТекущийКлюч <> Ключ Тогда
			Если ТекущийКлюч <> -1 Тогда
				ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
			КонецЕсли;
			Строка = СтрокиЦепочек.Добавить();
		КонецЕсли;
		Если Выборка.Источник <> Неопределено Тогда
			Строка.Источники.Добавить(Выборка.Источник);
		КонецЕсли;
		Если Выборка.Приемник <> Неопределено Тогда
			Строка.Приемники.Добавить(Выборка.Приемник);
		КонецЕсли;
		ТекущийКлюч = Ключ;
	КонецЦикла;
	Если ТекущийКлюч <> -1 Тогда
		ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Расчет партий по цепочкам движений и выборки из результата запроса

Функция ВыборкаДанныеПоИндексу(МВТ, НачальныйИндекс, КонечныйИндекс)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Данные КАК ДД
	|ГДЕ
	|	ДД.К >= &НачальныйИндекс
	|	И ДД.К <= &КонечныйИндекс
	|УПОРЯДОЧИТЬ ПО
	|	ДД.К ВОЗР
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачальныйИндекс", НачальныйИндекс);
	Запрос.УстановитьПараметр("КонечныйИндекс", КонечныйИндекс);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка;
КонецФункции

Процедура РассчитатьПартииПоЦепочкам(ОписаниеДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест)
	Приходы = Новый Соответствие; // буфер копий партий для покрытия расходов
	Расходы = Новый Соответствие; // буфер нерассчитанных партий для расчета на следующих итерациях
	СтрокиПриходов = РасчетныеПартии.СкопироватьКолонки();
	СтрокиРасходов = РасчетныеПартии.СкопироватьКолонки();
	ПройденныйПуть = Новый Соответствие; // используется для прерывания циклов
	ИндексыРасходов = Новый Массив;
	ЦепочкиДвижений = Новый Соответствие;
	СтрокиЦепочек = Новый ТаблицаЗначений;
	
	ПриходыКолвоСтрок = 0;
	КлючГруппировки = Неопределено;
	ЗаполнятьАналитикуПартий = ОписаниеДвижений.Свойство("ЗаполнятьАналитикуПартий");
	
	Данные = Новый Структура;
	Данные.Вставить("РасчетныеПартии", РасчетныеПартии);
	Данные.Вставить("ЦепочкиДвижений", ЦепочкиДвижений);
	Данные.Вставить("СтрокиЦепочек", СтрокиЦепочек);
	Данные.Вставить("Приходы", Приходы);
	Данные.Вставить("Расходы", Расходы);
	Данные.Вставить("СтрокиПриходов", СтрокиПриходов);
	Данные.Вставить("СтрокиРасходов", СтрокиРасходов);
	Данные.Вставить("ИндексыРасходов", ИндексыРасходов);
	Данные.Вставить("ПройденныйПуть", ПройденныйПуть);
	
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляРасчета);
	
	Комментарий = НСтр("ru='К расчету: %КолвоСтрок% стр.';uk='До розрахунку: %КолвоСтрок% стр.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
		
	ИндексСтроки = -1;
	КонечнаяЦепочка = -1;
	Пока ИндексСтроки <= КоличествоЗаписей Цикл
		ИндексСтроки = ИндексСтроки + 1;
		Если ИндексСтроки > КонечнаяЦепочка Тогда
			НачальнаяЦепочка = ИндексСтроки;
			КонечнаяЦепочка = КонечнаяЦепочка + 10000;
			Выборка = ВыборкаДанныеПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка);
			ЦепочкиДвиженийПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
		КонецЕсли;
		
		Если Не Выборка.Следующий() Тогда
			Прервать;
		КонецЕсли;
		
		ЦепочкаДвижений = ЦепочкиДвижений[ИндексСтроки];
		Если ЦепочкаДвижений = Неопределено Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
			Если ЗаполнятьАналитикуПартий И Выборка.ТипЗаписи = "Партия" И Выборка.РасчетЗавершен Тогда
				РасчетнаяПартия.АналитикаУчетаПартий =
					АналитикаУчетаПартий(Выборка.АналитикаУчетаПартий, Выборка.НалоговоеНазначениеПартии, Выборка.НалоговоеНазначение);
			КонецЕсли;
		ИначеЕсли Выборка.РасчетЗавершен Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
			Если ЗаполнятьАналитикуПартий И Выборка.ТипЗаписи = "Партия" Тогда
				РасчетнаяПартия.АналитикаУчетаПартий =
					АналитикаУчетаПартий(Выборка.АналитикаУчетаПартий, Выборка.НалоговоеНазначениеПартии, Выборка.НалоговоеНазначение);
				Если ЗначениеЗаполнено(Выборка.НалоговоеНазначениеПартии) И ЗначениеЗаполнено(Выборка.НалоговоеНазначение) Тогда
					РасчетнаяПартия.НалоговоеНазначениеПартии = Выборка.НалоговоеНазначение;
				КонецЕсли;
			КонецЕсли;
			Если ЦепочкаДвижений.Приемники.Количество() > 0 Тогда
				Приход = СтрокиПриходов.Добавить();
				ЗаполнитьЗначенияСвойств(Приход, РасчетнаяПартия);
				ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ("Сторно" = Приход.ТипЗаписи ИЛИ "ПартияСторно" = Приход.ТипЗаписи ИЛИ "ОстатокСторно" = Приход.ТипЗаписи));
				Приходы.Вставить(ИндексСтроки, Новый Массив);
				Приходы[ИндексСтроки].Добавить(Приход);
			КонецЕсли;
			СтрокиЦепочек.Удалить(ЦепочкаДвижений);
			ЦепочкиДвижений.Удалить(ИндексСтроки);
		Иначе
			Расход = СтрокиРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(Расход, Выборка);
			Расходы.Вставить(ИндексСтроки, Расход);
			ИндексыРасходов.Добавить(ИндексСтроки);
		КонецЕсли;
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
				РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
			КонецЕсли;
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
		
		Если ИндексСтроки > 0 И ИндексСтроки % 10000 = 0 Тогда
			Данные.Вставить("ИндексСтроки", ИндексСтроки);
			Если Приходы.Количество() > 0 Тогда // есть записи по которым расчет завершен
				Пока ИндексыРасходов.Количество() > 0 Цикл
					ИндексРасхода = ИндексыРасходов.Получить(0);
					ИндексыРасходов.Удалить(0);
					Если Расходы[ИндексРасхода] = Неопределено Тогда
						Продолжить; // строка к обсчету НЕ зарегистрирована
					КонецЕсли;
					ПройденныйПуть.Очистить();
					РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
					
					// Запишем порцию движений в регистр.
					Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
						Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
							РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
						КонецЕсли;
						УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
						ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
						РасчетныеПартии.Очистить();
					КонецЕсли;
				КонецЦикла;
				
				Для Каждого Элемент Из Расходы Цикл
					ИндексРасхода = Элемент.Ключ;
					ИндексыРасходов.Добавить(ИндексРасхода);
				КонецЦикла;
				Список = Новый СписокЗначений;
				Список.ЗагрузитьЗначения(ИндексыРасходов);
				Список.СортироватьПоЗначению();
				ИндексыРасходов = Список.ВыгрузитьЗначения();
			КонецЕсли;
			
			Комментарий = НСтр("ru='Рассчитано: %КолвоСтрок% стр.';uk='Розраховано: %КолвоСтрок% стр.'",Метаданные.ОсновнойЯзык.КодЯзыка);
			Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", ИндексСтроки);
			ЗаписьЖурналаРегистрации(
				НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
				УровеньЖурналаРегистрации.Информация,,, Комментарий);
		КонецЕсли;
	КонецЦикла;
	
	Если ИндексСтроки > КонечнаяЦепочка Тогда
		НачальнаяЦепочка = ИндексСтроки;
		КонечнаяЦепочка = КонечнаяЦепочка + 10000;
		ЦепочкиДвиженийПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
	КонецЕсли;
	
	Данные.Вставить("ИндексСтроки", ИндексСтроки);
	Пока ИндексыРасходов.Количество() > 0 Цикл
		ИндексРасхода = ИндексыРасходов.Получить(0);
		ИндексыРасходов.Удалить(0);
		Если Расходы[ИндексРасхода] = Неопределено Тогда
			Продолжить; // строка к обсчету НЕ зарегистрирована
		КонецЕсли;
		ПройденныйПуть.Очистить();
		РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
				РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
			КонецЕсли;
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из Расходы Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Строка.Значение);
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
				РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
			КонецЕсли;
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
		РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
	КонецЕсли;
	
	Выборка = Неопределено;
	Приходы.Очистить();
	Расходы.Очистить();
	СтрокиПриходов.Очистить();
	СтрокиРасходов.Очистить();
	Если Не Тест Тогда
		СтрокиЦепочек.Очистить();
		ЦепочкиДвижений.Очистить();
	КонецЕсли;
КонецПроцедуры

//++ НЕ УТ
Процедура РассчитатьПартииПоЦепочкамИзВыборки(ОписаниеДвижений, РезультатЗапроса, РасчетныеПартии, СохраненныеЦепочки, Регистраторы, Тест)
	Приходы = Новый Соответствие; // буфер копий партий для покрытия расходов
	Расходы = Новый Соответствие; // буфер нерассчитанных партий для расчета на следующих итерациях
	СтрокиПриходов = РасчетныеПартии.СкопироватьКолонки();
	СтрокиРасходов = РасчетныеПартии.СкопироватьКолонки();
	ПройденныйПуть = Новый Соответствие; // используется для прерывания циклов
	ИндексыРасходов = Новый Массив;
	ЦепочкиДвижений = Новый Соответствие;
	СтрокиЦепочек = Новый ТаблицаЗначений;
	
	ПриходыКолвоСтрок = 0;
	КлючГруппировки = Неопределено;
	ЗаполнятьАналитикуПартий = ОписаниеДвижений.Свойство("ЗаполнятьАналитикуПартий");
	ЗаполнятьНалоговоеНазначение = ОписаниеДвижений.Свойство("ЗаполнятьНалоговоеНазначение");
	
	Данные = Новый Структура;
	Данные.Вставить("РасчетныеПартии", РасчетныеПартии);
	Данные.Вставить("ЦепочкиДвижений", ЦепочкиДвижений);
	Данные.Вставить("СтрокиЦепочек", СтрокиЦепочек);
	Данные.Вставить("Приходы", Приходы);
	Данные.Вставить("Расходы", Расходы);
	Данные.Вставить("СтрокиПриходов", СтрокиПриходов);
	Данные.Вставить("СтрокиРасходов", СтрокиРасходов);
	Данные.Вставить("ИндексыРасходов", ИндексыРасходов);
	Данные.Вставить("ПройденныйПуть", ПройденныйПуть);
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Комментарий = НСтр("ru='К расчету: %КолвоСтрок% стр.';uk='До розрахунку: %КолвоСтрок% стр.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", Выборка.Количество());
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
		
	ИндексСтроки = -1;
	КонечнаяЦепочка = -1;
	Пока Выборка.Следующий() Цикл
		ИндексСтроки = ИндексСтроки + 1;
		Если ИндексСтроки > КонечнаяЦепочка Тогда
			НачальнаяЦепочка = ИндексСтроки;
			КонечнаяЦепочка = КонечнаяЦепочка + 10000;
			ЦепочкиДвиженийПоИндексу(СохраненныеЦепочки, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
		КонецЕсли;
		
		ЦепочкаДвижений = ЦепочкиДвижений[ИндексСтроки];
		Если ЦепочкаДвижений = Неопределено Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
			Если ЗаполнятьАналитикуПартий И Выборка.ТипЗаписи = "Партия" И Выборка.РасчетЗавершен Тогда
				РасчетнаяПартия.АналитикаУчетаПартий =
					АналитикаУчетаПартий(Выборка.АналитикаУчетаПартий, Выборка.НалоговоеНазначениеПартии, Выборка.НалоговоеНазначение);
			КонецЕсли;
		ИначеЕсли Выборка.РасчетЗавершен Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
			Если ЗаполнятьАналитикуПартий И Выборка.ТипЗаписи = "Партия" Тогда
				РасчетнаяПартия.АналитикаУчетаПартий =
					АналитикаУчетаПартий(Выборка.АналитикаУчетаПартий, Выборка.НалоговоеНазначениеПартии, Выборка.НалоговоеНазначение);
				Если ЗначениеЗаполнено(Выборка.НалоговоеНазначениеПартии) И ЗначениеЗаполнено(Выборка.НалоговоеНазначение) Тогда
					РасчетнаяПартия.НалоговоеНазначениеПартии = Выборка.НалоговоеНазначение;
				КонецЕсли;
			//ИначеЕсли ЗаполнятьНалоговоеНазначение И Выборка.ТипЗаписи = "Партия" Тогда
			//	РасчетнаяПартия.НалоговоеНазначение = Выборка.НалоговоеНазначение;
			КонецЕсли;
			Если ЦепочкаДвижений.Приемники.Количество() > 0 Тогда
				Приход = СтрокиПриходов.Добавить();
				ЗаполнитьЗначенияСвойств(Приход, РасчетнаяПартия);
				ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ("Сторно" = Приход.ТипЗаписи ИЛИ "ПартияСторно" = Приход.ТипЗаписи ИЛИ "ОстатокСторно" = Приход.ТипЗаписи));
				Приходы.Вставить(ИндексСтроки, Новый Массив);
				Приходы[ИндексСтроки].Добавить(Приход);
			КонецЕсли;
			СтрокиЦепочек.Удалить(ЦепочкаДвижений);
			ЦепочкиДвижений.Удалить(ИндексСтроки);
		Иначе
			Расход = СтрокиРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(Расход, Выборка);
			Расходы.Вставить(ИндексСтроки, Расход);
			ИндексыРасходов.Добавить(ИндексСтроки);
		КонецЕсли;
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
		
		Если ИндексСтроки > 0 И ИндексСтроки % 10000 = 0 Тогда
			Данные.Вставить("ИндексСтроки", ИндексСтроки);
			Если Приходы.Количество() > 0 Тогда // есть записи по которым расчет завершен
				Пока ИндексыРасходов.Количество() > 0 Цикл
					ИндексРасхода = ИндексыРасходов.Получить(0);
					ИндексыРасходов.Удалить(0);
					Если Расходы[ИндексРасхода] = Неопределено Тогда
						Продолжить; // строка к обсчету НЕ зарегистрирована
					КонецЕсли;
					ПройденныйПуть.Очистить();
					РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
					
					// Запишем порцию движений в регистр.
					Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
						УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
						ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
						РасчетныеПартии.Очистить();
					КонецЕсли;
				КонецЦикла;
				
				Для Каждого Элемент Из Расходы Цикл
					ИндексРасхода = Элемент.Ключ;
					ИндексыРасходов.Добавить(ИндексРасхода);
				КонецЦикла;
				Список = Новый СписокЗначений;
				Список.ЗагрузитьЗначения(ИндексыРасходов);
				Список.СортироватьПоЗначению();
				ИндексыРасходов = Список.ВыгрузитьЗначения();
			КонецЕсли;
			
			Комментарий = НСтр("ru='Рассчитано: %КолвоСтрок% стр.';uk='Розраховано: %КолвоСтрок% стр.'",Метаданные.ОсновнойЯзык.КодЯзыка);
			Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", ИндексСтроки);
			ЗаписьЖурналаРегистрации(
				НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
				УровеньЖурналаРегистрации.Информация,,, Комментарий);
		КонецЕсли;
	КонецЦикла;
	
	Если ИндексСтроки > КонечнаяЦепочка Тогда
		НачальнаяЦепочка = ИндексСтроки;
		КонечнаяЦепочка = КонечнаяЦепочка + 10000;
		ЦепочкиДвиженийПоИндексу(СохраненныеЦепочки, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
	КонецЕсли;
	
	Данные.Вставить("ИндексСтроки", ИндексСтроки);
	Пока ИндексыРасходов.Количество() > 0 Цикл
		ИндексРасхода = ИндексыРасходов.Получить(0);
		ИндексыРасходов.Удалить(0);
		Если Расходы[ИндексРасхода] = Неопределено Тогда
			Продолжить; // строка к обсчету НЕ зарегистрирована
		КонецЕсли;
		ПройденныйПуть.Очистить();
		РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из Расходы Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Строка.Значение);
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	
	Приходы.Очистить();
	Расходы.Очистить();
	СтрокиПриходов.Очистить();
	СтрокиРасходов.Очистить();
	Если Не Тест Тогда
		СтрокиЦепочек.Очистить();
		ЦепочкиДвижений.Очистить();
	КонецЕсли;
КонецПроцедуры
//-- НЕ УТ

Функция РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
	РасчетныеПартии = Данные.РасчетныеПартии;
	ПройденныйПуть = Данные.ПройденныйПуть;
	ЦепочкиДвижений = Данные.ЦепочкиДвижений;
	СтрокиЦепочек = Данные.СтрокиЦепочек;
	ЦепочкаРасхода = ЦепочкиДвижений[ИндексРасхода];
	Если ЦепочкаРасхода = Неопределено Тогда
		Возврат "НеТребуется";
	КонецЕсли;
	Источники = ЦепочкаРасхода.Источники;
	Если ИндексРасхода = ПройденныйПуть[ИндексРасхода] Или (Источники.Количество() = 0) Тогда
		Возврат "Зацикливание"; //мы тут уже были или источников для данной строки не зарегистрировано
	КонецЕсли;
	ИндексСтроки = Данные.ИндексСтроки;
	Для Каждого ИндексПрихода Из Источники Цикл
		Если ИндексПрихода > ИндексСтроки Тогда
			Возврат "НетДанных"; // еще нет всех строк для распределения
		КонецЕсли;
	КонецЦикла;
	ПройденныйПуть.Вставить(ИндексРасхода, ИндексРасхода);
	
	Приходы = Данные.Приходы;
	Расходы = Данные.Расходы;
	СтрокиПриходов = Данные.СтрокиПриходов;
	НовыеПриходы = СтрокиПриходов.СкопироватьКолонки();
	СтрокиРасходов = Данные.СтрокиРасходов;
	
	Расход = Расходы[ИндексРасхода];
	ЭтоСторно = ("Сторно" = Расход.ТипЗаписи ИЛИ "ВозвратСторно" = Расход.ТипЗаписи);
	
	БазисПрихода = 0;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки")
	 ИЛИ ЭтоСторно Тогда
		Для Каждого ИндексИсточника Из Источники Цикл
			Если Неопределено = Приходы[ИндексИсточника] И Расходы[ИндексИсточника] <> Неопределено Тогда // данный источник еще не рассчитан
				Результат = РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексИсточника, Регистраторы, Тест);
				Если Результат = "НетДанных" Тогда
					Возврат Результат;
				ИначеЕсли Результат = "Зацикливание" Тогда
					БазисПрихода = БазисПрихода + Расходы[ИндексИсточника][ОписаниеДвижений.БазисПрихода];
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если ЭтоСторно Тогда
			СортироватьИсточники(Источники, ОписаниеДвижений.ПолеПорядка, Приходы);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеДвижений.ПоляСортировки) Тогда
		ЗначенияПолей = Новый Структура(ОписаниеДвижений.ПоляСортировки);
		ЗаполнитьЗначенияСвойств(ЗначенияПолей, Расход);
		ЗаполненыПоляСортировки = Ложь;
		Для Каждого ПолеСортировки Из ЗначенияПолей Цикл
			Если ЗначениеЗаполнено(ПолеСортировки.Значение) Тогда
				ЗаполненыПоляСортировки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ТребуетсяСортировка = Истина;
		Если ЗначениеЗаполнено(ОписаниеДвижений.СортировкаПоУсловию) Тогда
			ТребуетсяСортировка = ТребуетсяСортировка(ОписаниеДвижений.Контекст, Расход); 
		КонецЕсли;
		Если ЗаполненыПоляСортировки И ТребуетсяСортировка Тогда
			СортироватьИсточникиПоЗначениямПолей(Источники, ЗначенияПолей, Приходы);
		КонецЕсли;
	КонецЕсли;
	
	Счетчик = 0;
	ВГраница = Источники.ВГраница();
	РазрывЦикла = Ложь;
	
	ИндексРасчетнойПартии = -1;
	ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ЭтоСторно);
	Пока Счетчик <= ВГраница Цикл
		ИндексИсточника = Источники[?(ЭтоСторно, ВГраница - Счетчик, Счетчик)];
		Счетчик = Счетчик + 1;
		
		Если ОписаниеДвижений.Контекст = "ПартииТоваровОрганизаций"
		 И Расход.СохранятьРегл
		 И Не ЭтоСторно
		 И ИндексИсточника = ПройденныйПуть[ИндексИсточника] Тогда
			РазрывЦикла = Истина;
			Продолжить; // данный источник еще рассчитан не до конца
		КонецЕсли;
		
		МассивПриходов = Приходы[ИндексИсточника];
		Если Неопределено = МассивПриходов Тогда
			Если Неопределено = Расходы[ИндексИсточника] Тогда
				Продолжить;
			КонецЕсли;
			Источник = Расходы[ИндексИсточника];
			Если Не Источник.РасчетЗавершен Тогда
				РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексИсточника, Регистраторы, Тест);
				ВГраница = Источники.ВГраница();
				МассивПриходов = Приходы[ИндексИсточника];
				Если Неопределено = МассивПриходов Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				МассивПриходов = Приходы[ИндексИсточника];
				Если Неопределено = МассивПриходов Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоСторно Тогда
			СортироватьПриходыПоЛИФО(ОписаниеДвижений.ПолеПорядка, МассивПриходов);
		КонецЕсли;
		
		ПриходыКУдалению = Новый Массив;
		Для Каждого Приход Из МассивПриходов Цикл
			
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, РасчетнаяПартия, Расход, Приход);
			ИнвертироватьПоказатели(РасчетнаяПартия, ОписаниеДвижений.Показатели, ЭтоСторно);
			
			Если Приход[ОписаниеДвижений.БазисПрихода] <= 0. Тогда
				ПриходыКУдалению.Добавить(Приход);
			КонецЕсли;
			
			Если РасчетнаяПартия.РасчетЗавершен Тогда
				Если ЦепочкаРасхода.Приемники.Количество() > 0 Тогда
					Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
						НовыйПриход = НовыеПриходы.Добавить();
						ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
						ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели,
							("Сторно" = НовыйПриход.ТипЗаписи ИЛИ "ВозвратСторно" = НовыйПриход.ТипЗаписи));
					Иначе
						НовыйПриход = СтрокиПриходов.Добавить();
						ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
						ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели,
							("Сторно" = НовыйПриход.ТипЗаписи ИЛИ "ВозвратСторно" = НовыйПриход.ТипЗаписи));
						Если Приходы[ИндексРасхода] = Неопределено Тогда
							Приходы.Вставить(ИндексРасхода, Новый Массив);
						КонецЕсли;
						Приходы[ИндексРасхода].Добавить(НовыйПриход);
					КонецЕсли;
				КонецЕсли;
			Иначе
				РасчетныеПартии.Удалить(РасчетнаяПартия);
			КонецЕсли;
						
			// Запишем порцию движений в регистр.
			Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
				Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
					РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
				КонецЕсли;
				УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
				ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
				РасчетныеПартии.Очистить();
			КонецЕсли;
			Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Приход Из ПриходыКУдалению Цикл
			Индекс = МассивПриходов.Найти(Приход);
			Если Индекс <> Неопределено Тогда
				МассивПриходов.Удалить(Индекс);
			КонецЕсли;
			СтрокиПриходов.Удалить(Приход);
		КонецЦикла;
		Если МассивПриходов.Количество() = 0 Тогда
			Приходы.Удалить(ИндексИсточника);
			Если Расходы[ИндексИсточника] = Неопределено Тогда
				ЦепочкаПрихода = ЦепочкиДвижений[ИндексИсточника];
				Если ЦепочкаПрихода <> Неопределено Тогда
					СтрокиЦепочек.Удалить(ЦепочкаПрихода);
					ЦепочкиДвижений.Удалить(ИндексИсточника);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ПриходыКУдалению.Количество() > 0 Тогда
			Приходы.Вставить(ИндексИсточника, МассивПриходов);
		КонецЕсли;
		Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") И НовыеПриходы.Количество() > 0 Тогда
		НовыеПриходы.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
		Если Приходы[ИндексРасхода] = Неопределено Тогда
			Приходы.Вставить(ИндексРасхода, Новый Массив);
		КонецЕсли;
		Для Каждого Строка Из НовыеПриходы Цикл
			НовыйПриход = СтрокиПриходов.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйПриход, Строка);
			Приходы[ИндексРасхода].Добавить(НовыйПриход);
		КонецЦикла;
		НовыеПриходы = Неопределено;
	КонецЕсли;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
		Если Расход.ТипЗаписи = "Перемещение" Тогда
			Расход[ОписаниеДвижений.БазисРасхода] = БазисПрихода;
		 Иначе
			Расход[ОписаниеДвижений.БазисРасхода] = 0;
		КонецЕсли;
	КонецЕсли;
	Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
		ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели,
			("Сторно" = Расход.ТипЗаписи ИЛИ "ВозвратСторно" = Расход.ТипЗаписи));
		Если ОписаниеДвижений.Контекст = "ПартииТоваровОрганизаций"
		 И РазрывЦикла
		 И Расход.СохранятьРегл Тогда
		 	Расход.РасчетЗавершен = Истина;
		 	НоваяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяПартия, Расход);
			Если ЦепочкаРасхода <> Неопределено
			 И ЦепочкаРасхода.Приемники.Количество() > 0 Тогда
				Приход = СтрокиПриходов.Добавить();
				ЗаполнитьЗначенияСвойств(Приход, НоваяПартия);
				ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ("Сторно" = Приход.ТипЗаписи));
				Если Приходы[ИндексРасхода] = Неопределено Тогда
					Приходы.Вставить(ИндексРасхода, Новый Массив);
				КонецЕсли;
				Приходы[ИндексРасхода].Добавить(Приход);
			КонецЕсли;
			СтрокиРасходов.Удалить(Расход);
			Расходы.Удалить(ИндексРасхода);
		КонецЕсли;
	Иначе
		СтрокиРасходов.Удалить(Расход);
		Расходы.Удалить(ИндексРасхода);
		СтрокиЦепочек.Удалить(ЦепочкаРасхода);
		ЦепочкиДвижений.Удалить(ИндексРасхода);
	КонецЕсли;
	Возврат "Выполнено";
КонецФункции

//++ НЕ УТ
////////////////////////////////////////////////////////////////////////////////
// Расчет партий по цепочкам движений ("толкающий" метод)

Процедура РассчитатьПартииПоЦепочкамТолкающимМетодом(ОписаниеДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест)
	Приходы = Новый Соответствие; // буфер копий партий для покрытия расходов
	Расходы = Новый Соответствие; // буфер нерассчитанных партий для расчета на следующих итерациях
	СтрокиПриходов = РасчетныеПартии.СкопироватьКолонки();
	СтрокиПриходов.Колонки.Добавить("ПройденныйПуть", Новый ОписаниеТипов("Соответствие")); 
	СтрокиРасходов = РасчетныеПартии.СкопироватьКолонки();
	ПройденныйПуть = Новый Соответствие; // используется для прерывания циклов
	ИндексыПриходов = Новый Массив;
	НовыеПриходы = Новый Массив;
	ЦепочкиДвижений = Новый Соответствие;
	СтрокиЦепочек = Новый ТаблицаЗначений;
	
	Данные = Новый Структура;
	Данные.Вставить("РасчетныеПартии", РасчетныеПартии);
	Данные.Вставить("ЦепочкиДвижений", ЦепочкиДвижений);
	Данные.Вставить("СтрокиЦепочек", СтрокиЦепочек);
	Данные.Вставить("Приходы", Приходы);
	Данные.Вставить("Расходы", Расходы);
	Данные.Вставить("СтрокиПриходов", СтрокиПриходов);
	Данные.Вставить("СтрокиРасходов", СтрокиРасходов);
	Данные.Вставить("ПройденныйПуть", ПройденныйПуть);
	Данные.Вставить("ИндексыПриходов", ИндексыПриходов);
	Данные.Вставить("НовыеПриходы", НовыеПриходы);
		
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляРасчета);
	
	Комментарий = НСтр("ru='К расчету: %КолвоСтрок% стр.';uk='До розрахунку: %КолвоСтрок% стр.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
	ИндексСтроки = -1;
	КонечнаяЦепочка = -1;	
	Пока ИндексСтроки <= КоличествоЗаписей Цикл
		ИндексСтроки = ИндексСтроки + 1;
		Если ИндексСтроки > КонечнаяЦепочка Тогда
			НачальнаяЦепочка = ИндексСтроки;
			КонечнаяЦепочка = КонечнаяЦепочка + 10000;
			Выборка = ВыборкаДанныеПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка);
			ЦепочкиДвиженийПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
		КонецЕсли;
		Если Не Выборка.Следующий() Тогда
			Прервать;
		КонецЕсли;
		ЦепочкаДвижений = ЦепочкиДвижений[ИндексСтроки];
		Если ЦепочкаДвижений = Неопределено Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
		ИначеЕсли Выборка.РасчетЗавершен Тогда
			Если ЦепочкаДвижений.Приемники.Количество() > 0 Тогда
				Приход = СтрокиПриходов.Добавить();
				ЗаполнитьЗначенияСвойств(Приход, Выборка);
				ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ("Сторно" = Приход.ТипЗаписи));
				Приходы.Вставить(ИндексСтроки, Новый Массив);
				Приходы[ИндексСтроки].Добавить(Приход);
				ИндексыПриходов.Добавить(ИндексСтроки);
			КонецЕсли;
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
		Иначе
			Если ЦепочкаДвижений.Источники.Количество() > 0 Тогда
				Расход = СтрокиРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(Расход, Выборка);
				Расходы.Вставить(ИндексСтроки, Расход);
			КонецЕсли;
		КонецЕсли;
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
		
		Если ИндексСтроки > 0 И ИндексСтроки % 10000 = 0 Тогда
			Данные.Вставить("ИндексСтроки", ИндексСтроки);
			Если Приходы.Количество() > 0 Тогда // есть записи по которым расчет завершен
				Пока ИндексыПриходов.Количество() > 0 Цикл
					ИндексПрихода = ИндексыПриходов.Получить(0);
					ИндексыПриходов.Удалить(0);
					Если Приходы[ИндексПрихода] = Неопределено Тогда
						Продолжить; // строка к обсчету НЕ зарегистрирована
					КонецЕсли;
					РассчитатьПартиюТолкающимМетодом(ОписаниеДвижений, Данные, ИндексПрихода, Регистраторы, Тест);
					
					Пока НовыеПриходы.Количество() > 0 Цикл
						ИндексПрихода = НовыеПриходы.Получить(0);
						НовыеПриходы.Удалить(0);
						Если Приходы[ИндексПрихода] = Неопределено Тогда
							Продолжить; // строка к обсчету НЕ зарегистрирована
						КонецЕсли;
						РассчитатьПартиюТолкающимМетодом(ОписаниеДвижений, Данные, ИндексПрихода, Регистраторы, Тест);
					КонецЦикла;
					ПройденныйПуть.Очистить();
					
					// Запишем порцию движений в регистр.
					Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
						УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
						ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
						РасчетныеПартии.Очистить();
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Для Каждого Элемент Из Приходы Цикл
				ИндексПрихода = Элемент.Ключ;
				ИндексыПриходов.Добавить(ИндексПрихода);
			КонецЦикла;
			Список = Новый СписокЗначений;
			Список.ЗагрузитьЗначения(ИндексыПриходов);
			Список.СортироватьПоЗначению();
			ИндексыПриходов = Список.ВыгрузитьЗначения();
			
			Комментарий = НСтр("ru='Рассчитано: %КолвоСтрок% стр.';uk='Розраховано: %КолвоСтрок% стр.'",Метаданные.ОсновнойЯзык.КодЯзыка);
			Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", ИндексСтроки);
			ЗаписьЖурналаРегистрации(
				НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
				УровеньЖурналаРегистрации.Информация,,, Комментарий);
		КонецЕсли;
	КонецЦикла;
	
	Если ИндексыПриходов.Количество() = 0 И Приходы.Количество() > 0 Тогда
		Для Каждого Элемент Из Приходы Цикл
			ИндексПрихода = Элемент.Ключ;
			ИндексыПриходов.Добавить(ИндексПрихода);
		КонецЦикла;
		Список = Новый СписокЗначений;
		Список.ЗагрузитьЗначения(ИндексыПриходов);
		Список.СортироватьПоЗначению();
		ИндексыПриходов = Список.ВыгрузитьЗначения();
	КонецЕсли;
	
	Данные.Вставить("ИндексСтроки", ИндексСтроки);
	Пока ИндексыПриходов.Количество() > 0 Цикл
		ИндексПрихода = ИндексыПриходов.Получить(0);
		ИндексыПриходов.Удалить(0);
		Если Приходы[ИндексПрихода] = Неопределено Тогда
			Продолжить; // строка к обсчету НЕ зарегистрирована
		КонецЕсли;
		РассчитатьПартиюТолкающимМетодом(ОписаниеДвижений, Данные, ИндексПрихода, Регистраторы, Тест);
		
		Пока НовыеПриходы.Количество() > 0 Цикл
			ИндексПрихода = НовыеПриходы.Получить(0);
			НовыеПриходы.Удалить(0);
			Если Приходы[ИндексПрихода] = Неопределено Тогда
				Продолжить; // строка к обсчету НЕ зарегистрирована
			КонецЕсли;
			РассчитатьПартиюТолкающимМетодом(ОписаниеДвижений, Данные, ИндексПрихода, Регистраторы, Тест);
		КонецЦикла;
		ПройденныйПуть.Очистить();
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	
	Приходы.Очистить();
	Расходы.Очистить();
	СтрокиПриходов.Очистить();
	СтрокиРасходов.Очистить();
	Если Не Тест Тогда
		ЦепочкиДвижений.Очистить();
		СтрокиЦепочек.Очистить();
	КонецЕсли;
	Данные.Очистить();
КонецПроцедуры

Процедура РассчитатьПартиюТолкающимМетодом(ОписаниеДвижений, Данные, ИндексПрихода, Регистраторы, Тест)
	РасчетныеПартии = Данные.РасчетныеПартии;
	ЦепочкиДвижений = Данные.ЦепочкиДвижений;
	СтрокиЦепочек = Данные.СтрокиЦепочек;
	ЦепочкаПрихода = ЦепочкиДвижений[ИндексПрихода];
	Если ЦепочкаПрихода = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Приемники = ЦепочкаПрихода.Приемники;
	Если Приемники.Количество() = 0 Тогда
		Возврат; // приемников для данной строки не зарегистрировано
	КонецЕсли;
	ИндексСтроки = Данные.ИндексСтроки;
	Для Каждого ИндексРасхода Из Приемники Цикл
		Если ИндексРасхода > ИндексСтроки Тогда
			Возврат; // еще нет всех строк для распределения
		КонецЕсли;
	КонецЦикла;
	
	ПройденныйПуть = Данные.ПройденныйПуть;
	
	Приходы = Данные.Приходы;
	Расходы = Данные.Расходы;
	СтрокиПриходов = Данные.СтрокиПриходов;
	СтрокиРасходов = Данные.СтрокиРасходов;
	
	НовыеПриходы = Данные.НовыеПриходы;
	ЕстьНовыеПриходы = Ложь;
	
	ПриходыКУдалению = Новый Массив;
	РасчетЗавершен = Истина;
	МассивПриходов = Приходы[ИндексПрихода];
	ПервыйПроход = Истина;
	Для Каждого Приход Из МассивПриходов Цикл
		Для Каждого ИндексРасхода Из Приемники Цикл
			Расход = Расходы[ИндексРасхода];
			Если Расход = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ЭтоСторно = ("Сторно" = Расход.ТипЗаписи);
			ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ЭтоСторно);

			Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
				Продолжить;
			КонецЕсли;
			
			Если ИндексРасхода = Приход.ПройденныйПуть[ИндексРасхода] Тогда
				Продолжить; // мы тут уже были
			КонецЕсли;
			Приход.ПройденныйПуть.Вставить(ИндексРасхода, ИндексРасхода);
			
			Если ПервыйПроход Тогда
				НомерИтерации = ПройденныйПуть[ИндексРасхода];
				Если НомерИтерации = Неопределено Тогда
					НомерИтерации = 1;
				КонецЕсли;
				Если Приход[ОписаниеДвижений.БазисПрихода] <> Расход[ОписаниеДвижений.БазисРасхода]
				 И ИндексРасхода = ПройденныйПуть[ИндексРасхода] Тогда
					Продолжить; // мы тут уже были
				КонецЕсли;
				Если НомерИтерации > 10 Тогда
					Продолжить; // расчет зациклился
				КонецЕсли;
				ПройденныйПуть.Вставить(ИндексРасхода, НомерИтерации + 1);
			КонецЕсли;
			
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, РасчетнаяПартия, Расход, Приход);
			ИнвертироватьПоказатели(РасчетнаяПартия, ОписаниеДвижений.Показатели, ЭтоСторно);
			
			ЦепочкаРасхода = ЦепочкиДвижений[ИндексРасхода];
			Если РасчетнаяПартия.РасчетЗавершен Тогда
				Если ЦепочкаРасхода.Приемники.Количество() > 0 Тогда
					НовыйПриход = СтрокиПриходов.Добавить();
					ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
					ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели, ("Сторно" = НовыйПриход.ТипЗаписи));
					Если Приходы[ИндексРасхода] = Неопределено Тогда
						Приходы.Вставить(ИндексРасхода, Новый Массив);
					КонецЕсли;
					Приходы[ИндексРасхода].Добавить(НовыйПриход);
					Если НовыеПриходы.Найти(ИндексРасхода) = Неопределено Тогда
						НовыеПриходы.Добавить(ИндексРасхода);
					КонецЕсли;
					ЕстьНовыеПриходы = Истина;
				КонецЕсли;
			Иначе
				РасчетныеПартии.Удалить(РасчетнаяПартия);
			КонецЕсли;
			
			Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
				Если ЦепочкаРасхода.Приемники.Количество() = 0 Тогда
					СтрокиЦепочек.Удалить(ЦепочкаРасхода);
					ЦепочкиДвижений.Удалить(ИндексРасхода);
				КонецЕсли;
			КонецЕсли;
			ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ЭтоСторно);
			
			Если Приход[ОписаниеДвижений.БазисПрихода] <= 0. Тогда
				ПриходыКУдалению.Добавить(Приход);
				Прервать;
			КонецЕсли;
			
			// Запишем порцию движений в регистр.
			Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
				УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
				ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
				РасчетныеПартии.Очистить();
			КонецЕсли;
		КонецЦикла;
		ПервыйПроход = Ложь;
	КонецЦикла;
	Для Каждого Приход Из ПриходыКУдалению Цикл
		Индекс = МассивПриходов.Найти(Приход);
		Если Индекс <> Неопределено Тогда
			МассивПриходов.Удалить(Индекс);
		КонецЕсли;
		СтрокиПриходов.Удалить(Приход);
	КонецЦикла;
	Если МассивПриходов.Количество() = 0 ИЛИ РасчетЗавершен Тогда
		Приходы.Удалить(ИндексПрихода);
		Если Расходы[ИндексПрихода] = Неопределено Тогда
			СтрокиЦепочек.Удалить(ЦепочкаПрихода);
			ЦепочкиДвижений.Удалить(ИндексПрихода);
		КонецЕсли;
		Если РасчетЗавершен Тогда
			Для Каждого Приход Из МассивПриходов Цикл
				СтрокиПриходов.Удалить(Приход);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//-- НЕ УТ

#КонецОбласти

// Вспомогательные универсальные методы
#Область СлужебныеПроцедурыИФункции

Функция ПоляЗаписейРавны(Запись1, Запись2, ПереченьКлючей)
	Если Неопределено = Запись1 Или Неопределено = Запись2 Тогда
		Возврат (Запись1 = Запись2);
	КонецЕсли;
	
	Для Каждого Поле Из Новый Структура(ПереченьКлючей) Цикл
		Если Запись1[Поле.Ключ] <> Запись2[Поле.Ключ] Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

Функция КопияЗаписиСтруктурой(Запись, ПереченьПолей)
	КопияСтрокиСтруктурой = Новый Структура(ПереченьПолей);
	ЗаполнитьЗначенияСвойств(КопияСтрокиСтруктурой, Запись);
	Возврат КопияСтрокиСтруктурой;
КонецФункции

Процедура ИнвертироватьПоказатели(Запись, ПереченьПоказателей, Инвертировать)
	Если Не Инвертировать Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Поле Из Новый Структура(ПереченьПоказателей) Цикл
		Запись[Поле.Ключ] = -Запись[Поле.Ключ];
	КонецЦикла;
КонецПроцедуры

Функция СкопироватьКолонки(КолонкиИсточника, КолонкиПриемника)
	ПоляИсточника = "";
	Для Каждого Колонка Из КолонкиИсточника Цикл
		КолонкиПриемника.Добавить(Колонка.Имя, Колонка.ТипЗначения);
		ПоляИсточника = ПоляИсточника + ?(ЗначениеЗаполнено(ПоляИсточника), ", ", "") + Колонка.Имя;
	КонецЦикла;
	Возврат ПоляИсточника;
КонецФункции

Функция ПереченьПолей(КоллекцияКолонок, Исключения = "")
	ИсключаемыеПоля = Новый Структура(Исключения);
	ПереченьПолей = "";
	Для Каждого Колонка Из КоллекцияКолонок Цикл
		Если НЕ ИсключаемыеПоля.Свойство(Колонка.Имя) Тогда
			ПереченьПолей = ПереченьПолей + ?(ЗначениеЗаполнено(ПереченьПолей), ", ", "") + Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	Возврат ПереченьПолей;
КонецФункции

Функция ПустаяСсылка(Ссылка, КэшСсылок)
	Результат = КэшСсылок[ТипЗнч(Ссылка)];
	Если Результат = Неопределено Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		Если МенеджерОбъекта = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Результат = МенеджерОбъекта.ПустаяСсылка();
		КэшСсылок.Вставить(ТипЗнч(Ссылка), Результат);
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция УзелИндекса(Индекс, КлючиИндекса)
	УзелИндекса = Индекс;
	Счетчик = 0;
	Пока Счетчик <= КлючиИндекса.ВГраница() И КлючиИндекса[Счетчик] <> Неопределено Цикл
		УзелИндекса = УзелИндекса[КлючиИндекса[Счетчик]];
		Если УзелИндекса = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	Возврат УзелИндекса;
КонецФункции

Функция ДобавитьУзелИндекса(Индекс, КлючиИндекса, Значение)
	ВГраница = КлючиИндекса.ВГраница();
	Если ВГраница < 0 Или КлючиИндекса[0] = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	УзелИндекса = Индекс;
	Счетчик = 0;
	Пока Счетчик < ВГраница Цикл
		ПодузелИндекса = УзелИндекса[КлючиИндекса[Счетчик]];
		Если ПодузелИндекса = Неопределено Тогда
			ПодузелИндекса = Новый Соответствие;
			УзелИндекса.Вставить(КлючиИндекса[Счетчик], ПодузелИндекса);
		КонецЕсли;
		УзелИндекса = ПодузелИндекса;
		Счетчик = Счетчик + 1;
		Если КлючиИндекса[Счетчик] = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	УзелИндекса.Вставить(КлючиИндекса[Счетчик], Значение);
	Возврат Значение;
КонецФункции

Функция АналитикаУчетаПартий(Знач АналитикаУчетаПартий, НалоговоеНазначениеПартии, НалоговоеНазначение)		
	
	Если ЗначениеЗаполнено(НалоговоеНазначениеПартии) И ЗначениеЗаполнено(НалоговоеНазначение)
	 И НалоговоеНазначениеПартии <> НалоговоеНазначение Тогда
	 
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	НоваяАналитика.КлючАналитики КАК АналитикаУчетаПартий,
		|	&НалоговоеНазначение КАК НалоговоеНазначение,
		|	Аналитика.ГруппаФинансовогоУчета,
		|	Аналитика.Поставщик,
		|	Аналитика.Контрагент,
		|	Аналитика.СтавкаНДС
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаПартий КАК Аналитика
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК НоваяАналитика
		|		ПО НоваяАналитика.Поставщик = Аналитика.Поставщик
		|		И НоваяАналитика.НалоговоеНазначение = &НалоговоеНазначение
		|		И НоваяАналитика.Контрагент = Аналитика.Контрагент
		|		И НоваяАналитика.СтавкаНДС = Аналитика.СтавкаНДС
		|		И НоваяАналитика.ГруппаФинансовогоУчета = Аналитика.ГруппаФинансовогоУчета
		|ГДЕ
		|	Аналитика.Ссылка = &Ссылка
		|");
		Запрос.УстановитьПараметр("Ссылка", АналитикаУчетаПартий); 
		Запрос.УстановитьПараметр("НалоговоеНазначение", НалоговоеНазначение);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.АналитикаУчетаПартий) Тогда
				АналитикаУчетаПартий = Выборка.АналитикаУчетаПартий;
			Иначе
				АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.КлючиАналитикиУчетаПартийДокумента(Выборка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат АналитикаУчетаПартий;
	
КонецФункции

Функция АналитикаУчетаПартийПоНалоговомуНазначению(Знач НалоговоеНазначениеПартии)
	
	Если ЗначениеЗаполнено(НалоговоеНазначениеПартии) Тогда
	 
	 	СтруктураАналитикУчетаПартий = Новый Структура;
		
		СтруктураАналитикУчетаПартий.Вставить("НалоговоеНазначение", НалоговоеНазначениеПартии);
		
		СтруктураАналитикУчетаПартий.Вставить("ГруппаФинансовогоУчета",	Неопределено);
		СтруктураАналитикУчетаПартий.Вставить("Поставщик", 				Неопределено);
		СтруктураАналитикУчетаПартий.Вставить("Контрагент", 			Неопределено);
		СтруктураАналитикУчетаПартий.Вставить("СтавкаНДС", 				Неопределено);
	 
		АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.КлючиАналитикиУчетаПартийДокумента(СтруктураАналитикУчетаПартий);
	
		Возврат АналитикаУчетаПартий;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
КонецФункции

Процедура УвеличитьНомерЗадания()
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКРасчетуСебестоимости");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Блокировка.Заблокировать();
	
	НомерЗадания = Константы.НомерЗаданияКРасчетуСебестоимости.Получить();
	Константы.НомерЗаданияКРасчетуСебестоимости.Установить(НомерЗадания + 1);
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

Процедура СформироватьЗаданияККорректировкеНалоговыхНазначенийКапитальныхИнвестиций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
//++ НЕ УТ	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Период            КАК Период,
	|	Партии.Организация       КАК Организация,
	|	Партии.СтатьяРасходов    КАК СтатьяРасходов,
	|	Партии.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ ПартииПрочихРасходов
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК Партии
	|ГДЕ
	|	Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Партии.Организация В (&МассивОрганизаций)
	|	И Партии.Активность
	|	И Партии.Регистратор ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов,
	|	Организация
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(СостоянияОСОрганизаций.Период, МЕСЯЦ) КАК Месяц,
	|	Таблица.Организация                                 КАК Организация
	|ИЗ
	|	ПартииПрочихРасходов КАК Таблица
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Таблица.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		И СтатьиРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) 
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|	ПО
	|		Таблица.АналитикаРасходов = СостоянияОСОрганизаций.ОсновноеСредство
	|		И Таблица.Организация = СостоянияОСОрганизаций.Организация
	|		И СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|ОБЪЕДИНИТЬ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(СостоянияНМАОрганизаций.Период, МЕСЯЦ) КАК Месяц,
	|	Таблица.Организация                                  КАК Организация
	|ИЗ
	|	ПартииПрочихРасходов КАК Таблица
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Таблица.СтатьяРасходов = СтатьиРасходов.Ссылка
	|		И СтатьиРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|	ПО
	|		Таблица.АналитикаРасходов = СостоянияНМАОрганизаций.НематериальныйАктив
	|		И Таблица.Организация = СостоянияНМАОрганизаций.Организация
	|		И СостоянияНМАОрганизаций.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|		И СостоянияНМАОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|;
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",        НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",     ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",    МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКЗакрытиюМесяца");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			Запись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Операция = Перечисления.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций;
			Запись.НомерЗадания = Константы.НомерЗаданияКЗакрытиюМесяца.Получить();
			Запись.Записать();
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось сформировать задание к корректировке налоговых назначений капитальных инвестиций за %1 в организации %2 по причине: %3';uk='Не вдалося сформувати завдання до коригування податкових призначень капітальних інвестицій за %1 в організації %2 з причини: %3'"),
				Выборка.Месяц,
				Выборка.Организация,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(НСтр("ru='Партионный учет';uk='Партіонний облік'"), УровеньЖурналаРегистрации.Ошибка, , , ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
//-- НЕ УТ
КонецПроцедуры

// Дополняет перечень организаций остальными организациями ИБ, связанными с ними по схеме Интеркампани.
//
// Параметры:
//	Дата - Дата - период расчета партий
//	МассивОрганизаций - Массив или СправочникСсылка.Организации - отбор по организациям
//
// Возвращаемое значение:
//	Массив - или все организации ИБ, если не указан отбор по организациям,
//			 или массив связанных организаций, подробнее см. РасчетСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани()
//
Функция СвязиОрганизацийПоСхемеИнтеркампани(Дата = Неопределено, МассивОрганизаций = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(МассивОрганизаций) ИЛИ НЕ ЗначениеЗаполнено(Дата) Тогда
		
		// Выберем все организации из ИБ.
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	НЕ Организации.ПометкаУдаления
		|	И ВЫБОР
		|		КОГДА НЕ &ИспользоватьУпрОрганизацию
		|				И Организации.Ссылка = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|			ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
		
		Запрос.УстановитьПараметр("ИспользоватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
		
		Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	Иначе
		
		// Дополним отбор МассивОрганизаций связанными по Интеркампани организациями
		Результат = РасчетСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани(Дата, МассивОрганизаций, Ложь);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область ОчисткаДвиженийРегистров

Процедура ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями = Неопределено)
	Для Каждого Элемент Из Регистраторы Цикл 
		Если РегистраторыССохраняемымиДвижениями <> Неопределено
		 И РегистраторыССохраняемымиДвижениями.Получить(Элемент.Ключ) <> Неопределено Тогда
			// При восстановлении сохраненных движений надо удалять устаревшие движения
			РегистраторыССохраняемымиДвижениями.Вставить(Элемент.Ключ, Истина);
			Продолжить;
		КонецЕсли;
		НачатьТранзакцию();
		Движения = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(Элемент.Ключ);
		Попытка
			Движения.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось очистить регистр: %1 у документа: %2 по причине: %3';uk='Не вдалося очистити регістр: %1 у документа: %2 з причини: %3'"),
				ИмяРегистра,
				Элемент.Ключ,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Элемент.Ключ.Метаданные(),
				Элемент.Ключ,
				ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти


#Область Тестирование

Функция ТестТекстОписание(ИмяМетода) Экспорт
	Если ИмяМетода = "ТекстОписаниеПартийТоваров" Тогда
		Возврат ТекстОписаниеПартийТоваров();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийПереданных" Тогда
		Возврат ТекстОписаниеПартийПереданных();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийЗатрат" Тогда
		Возврат ТекстОписаниеПартийЗатрат();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийПрочих" Тогда
		Возврат ТекстОписаниеПартийПрочих();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеСебестоимость" Тогда
		Возврат ТекстОписаниеСебестоимость();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийРасходов" Тогда
		Возврат ТекстОписаниеПартийРасходов();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляКорректировокНДС" Тогда
		Возврат ТекстОписаниеДанныхДляКорректировокНДС();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПартийПрочихРасходов" Тогда
		Возврат ТекстОписаниеДанныхДляПартийПрочихРасходов();	
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПартийПроизводства" Тогда
		Возврат ТекстОписаниеДанныхДляПартийПроизводства();
		
	//++ НЕ УТ	
	ИначеЕсли ИмяМетода = "ТекстОписаниеРаспределениеМатериаловИРабот" Тогда
		Возврат ТекстОписаниеРаспределениеМатериаловИРабот();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПартийНЗП" Тогда
		Возврат ТекстОписаниеДанныхДляПартийНЗП();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляТрудозатратНЗП" Тогда
		Возврат ТекстОписаниеДанныхДляТрудозатратНЗП();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПрочихРасходовНЗППоБазе" Тогда
		Возврат ТекстОписаниеДанныхДляПрочихРасходовНЗППоЭтапамПОБазе();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПрочихРасходовНЗП" Тогда
		Возврат ТекстОписаниеДанныхДляПрочихРасходовНЗП();	
	//-- НЕ УТ
		
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ВыгрузитьИзВременнойТаблицы(МВТ)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Данные КАК ДД
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ТестДанныеДляПартий(ИмяМетода, НачалоПериода, ОкончаниеПериода, Организация = Неопределено) Экспорт
	
	МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организация);
	
	Если ИмяМетода = "ДанныеДляПартийТоваров" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПереданных" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийПереданных(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийЗатрат" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочих" Тогда
		Возврат ДанныеДляПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочихСебестоимость" Тогда
		Возврат ДанныеДляПартийПрочихСебестоимость(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийРасходов" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляКорректировокНДС" Тогда
		Возврат ДанныеДляКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочихРасходов" Тогда
		Возврат ДанныеДляПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);	
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПроизводства" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	//++ НЕ УТ	
	ИначеЕсли ИмяМетода = "ДанныеДляРаспределенияМатериаловИРабот" Тогда
		Возврат ДанныеДляРаспределенияМатериаловИРабот(НачалоПериода, ОкончаниеПериода, МассивОрганизаций).Выгрузить();	
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийНЗП" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляТрудозатратНЗП" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляТрудозатратНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПрочихРасходовНЗППоБазе" Тогда
		
		ДанныеДляРасходовКРаспределению = ДанныеДляРасходовКРаспределению(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеРасходыКРаспределению = РасчетныеРасходыКРаспределению(ДанныеДляРасходовКРаспределению);
		ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе = 
			ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеРасходыКРаспределению);
		Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "ПрочиеРасходыНезавершенногоПроизводства");
		РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе = 
			РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе(ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе, Регистраторы);
		ДанныеДляПрочихРасходовНЗППоПодразделениямПоБазе = Неопределено;
		Регистраторы= Неопределено;
		Возврат ДанныеДляПрочихРасходовНЗППоЭтапамПоБазе(НачалоПериода,
														 ОкончаниеПериода,
														 МассивОрганизаций,
														 РасчетныеРасходыКРаспределению,
														 РасчетныеПрочиеРасходыНЗППоПодразделениямПоБазе).Выгрузить();
		
	ИначеЕсли ИмяМетода = "ДанныеДляПрочихРасходовНЗП" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПрочихРасходовНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляСебестоимостиПроизводства" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляСебестоимостиПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
	//-- НЕ УТ

	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//++ НЕ УТ
Функция ВыборкаИзТаблицы(ДанныеДляПартий)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	ДанныеДляПартий
	|ИЗ
	|	&ДанныеДляПартий КАК ДанныеДляПартий
	|;
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ДанныеДляПартий КАК ДанныеДляПартий
	|");
	Запрос.УстановитьПараметр("ДанныеДляПартий", ДанныеДляПартий);
	Возврат Запрос.Выполнить();
КонецФункции
//-- НЕ УТ

Функция ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	Данные
	|ИЗ
	|	&ДанныеДляПартий КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	ДД.К
	|");
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ДанныеДляПартий", ДанныеДляПартий);
	Запрос.Выполнить();
	Возврат МВТ;
КонецФункции

Функция ТестРасчетныеПартии(ИмяМетода, ДанныеДляПартий, ВнутренниеДанные = Неопределено) Экспорт
	Если ИмяМетода = "РасчетныеПартииТоваров" Тогда
		Возврат РасчетныеПартииТоваров(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииПереданные" Тогда
		Возврат РасчетныеПартииПереданные(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииЗатрат" Тогда
		Возврат РасчетныеПартииЗатрат(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииПрочих" Тогда
		Возврат РасчетныеПартииПрочих(ДанныеДляПартий, Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПриходыПартийРасходов" Тогда
		Возврат РасчетныеПриходыПартийРасходов(ДанныеДляПартий, Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПриходыСебестоимости" Тогда
		Возврат РасчетныеПриходыСебестоимости(ДанныеДляПартий, Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииРасходов" Тогда
		Возврат РасчетныеПартииРасходов(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеНДСВосстановлениеНДС" Тогда
		Возврат РасчетныеНДСВосстановлениеНДС(ДанныеДляПартий, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеНДСУсловнаяПродажа" Тогда
		Возврат РасчетныеНДСУсловнаяПродажа(ДанныеДляПартий, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииПроизводства" Тогда
		Возврат РасчетныеПартииПроизводства(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	//++ НЕ УТ	
	ИначеЕсли ИмяМетода = "РасчетноеРаспределениеМатериаловИРабот" Тогда
		Возврат РасчетноеРаспределениеМатериаловИРабот(ВыборкаИзТаблицы(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииНЗП" Тогда
		Возврат РасчетныеПартииНЗП(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеТрудозатратыНЗП" Тогда
		Возврат РасчетныеТрудозатратыНЗП(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПрочиеРасходыНЗППоБазе" Тогда
		Возврат РасчетныеПрочиеРасходыНЗППоЭтапамПоБазе(ВыборкаИзТаблицы(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПрочиеРасходыНЗП" Тогда
		Возврат РасчетныеПрочиеРасходыНЗП(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
	//-- НЕ УТ	
		
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ТестРассчитать(ИмяМетода, НачалоПериода, ОкончаниеПериода, Организация = Неопределено) Экспорт
	Перем РасчетныеПартии;
	
	МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организация);
	
	Если ИмяМетода = "РассчитатьПартииТоваров" Тогда
		РассчитатьПартииТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииПереданные" Тогда
		РассчитатьПартииПереданные(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииЗатрат" Тогда
		РассчитатьПартииЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииПрочих" Тогда
		РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииРасходов" Тогда
		РассчитатьПартииРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьЗаписиКорректировокНДС" Тогда
		РассчитатьЗаписиКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииПроизводства" Тогда
		РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);		
		
	//++ НЕ УТ
	ИначеЕсли ИмяМетода = "РассчитатьПартииНЗП" Тогда
		РассчитатьПартииНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьТрудозатраты" Тогда
		РассчитатьТрудозатраты(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РаспределитьПрочиеРасходыПоБазе" Тогда
		РаспределитьПрочиеРасходыПоБазе(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПрочиеРасходыНЗП" Тогда
		РассчитатьПрочиеРасходыНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьСебестоимостьПроизводства" Тогда
		РассчитатьСебестоимостьПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	//-- НЕ УТ
	
	ИначеЕсли ИмяМетода = "УстановитьГраницыПартииТоваровОрганизаций" Тогда
		УстановитьГраницыПартииТоваровОрганизаций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	КонецЕсли;
	
	Возврат РасчетныеПартии;
	
КонецФункции

Процедура ТестЗаписатьРасчет(МенеджерРегистра, РасчетныеПартии) Экспорт
	ЗаписатьРасчетныеПартии(МенеджерРегистра, РасчетныеПартии, Неопределено);
КонецПроцедуры

Функция ТестРассчитатьЦепочкиДвижений(ИмяМетода, НачалоПериода, ОкончаниеПериода, Организация = Неопределено, ВнутренниеДанные) Экспорт
	Перем РасчетныеПартии;
	
	МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организация);
	
	Если ИмяМетода = "ПартииТоваров" Тогда
		ДанныеДляПартийТоваров = ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииТоваров(ДанныеДляПартийТоваров, Неопределено, ВнутренниеДанные, Истина, Ложь);
	ИначеЕсли ИмяМетода = "ПартииЗатрат" Тогда
		ДанныеДляПартийЗатрат = ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииЗатрат(ДанныеДляПартийЗатрат, Неопределено, ВнутренниеДанные, Истина, Ложь);
	ИначеЕсли ИмяМетода = "ПартииРасходов" Тогда
		ДанныеДляПартийРасходов = ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииРасходов(ДанныеДляПартийРасходов, Неопределено, ВнутренниеДанные, Истина, Ложь);
	//++ НЕ УТ
	ИначеЕсли ИмяМетода = "ПартииНЗП" Тогда
		ДанныеДляПартийНЗП = ДанныеДляПартийНЗП(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииНЗП(ДанныеДляПартийНЗП, Неопределено, ВнутренниеДанные, Истина, Ложь);
	//-- НЕ УТ
	КонецЕсли;
	Возврат РасчетныеПартии;
КонецФункции

#КонецОбласти

#Область ВосстановлениеДвижений

// Исправление "внештатных" ситуаций в движениях документов
// По своей сути эти процедуры аналогичны обработчикам обновлений.
// Отличие в том, что обработчики должны поправить все данные в ИБ,
// а эти процедуры исправляют данные только в том периоде, по которому выполняется расчет партий.
// Такой подход позволяет не "портить" данные в уже рассчитанных и закрытых периодах.

//++ НЕ УТ
#Область РегистрНакопления_ТоварыОрганизаций

Процедура ВосстановитьДвиженияВозвратМатериаловИзПроизводстваПоТоварамОрганизаций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ДД
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Первичное
	|	И ДД.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства";
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.ТоварыОрганизаций.Имя);
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

#Область РегистрНакопления_ПартииТоваровОрганизаций

Процедура ВосстановитьДвиженияПоПартиямТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка,
	|	СУММА(ДД.Количество)
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыОрганизаций КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыОрганизацийКОформлению КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.ВидЗапасовПродавца.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.КоличествоСписано) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.ВидЗапасов.Организация В (&МассивОрганизаций)
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(-ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|	) КАК ДД
	|СГРУППИРОВАТЬ ПО
	|	ДД.Ссылка	
	|ИМЕЮЩИЕ
	|	СУММА(ДД.Количество) <> 0
	|");
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций.Имя);
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область РегистрНакопления_СебестоимостьТоваров

Процедура ВосстановитьДвиженияПрочегоОприходованияТоваровПоСебестоимостиТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПрочиеОприходованияТоваровСДублямиДвиженийСебестоимостиТоваров();
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя);
	
КонецПроцедуры

// Возвращает текст запроса, позволяющего получить список документов ПрочееОприходованиеТоваров
// с некорректными (задублированными) движениями по себестоимости товаров.
//
Функция ТекстЗапросаПрочиеОприходованияТоваровСДублямиДвиженийСебестоимостиТоваров() Экспорт
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Ссылка
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Регистратор КАК Ссылка,
		|		СУММА(ДД.Количество) КАК Количество
		|	ИЗ 
		|		РегистрНакопления.СебестоимостьТоваров КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Оприходование
		|			ПО Оприходование.Ссылка = ДД.Регистратор
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|	СГРУППИРОВАТЬ ПО
		|		ДД.Регистратор
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДД.Регистратор КАК Ссылка,
		|		СУММА(-ДД.Количество) КАК Количество
		|	ИЗ 
		|		РегистрНакопления.ТоварыОрганизаций КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Оприходование
		|			ПО Оприходование.Ссылка = ДД.Регистратор
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|	СГРУППИРОВАТЬ ПО
		|		ДД.Регистратор
		|		
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Ссылка	
		|ИМЕЮЩИЕ
		|	СУММА(ДД.Количество) <> 0
		|";
КонецФункции

#КонецОбласти

#Область РегистрНакопления_ПартииПроизводственныхЗатрат

Процедура ВосстановитьДвиженияВыпускаПродукцииПоПартиямПроизводственныхЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаВыпускаПродукцииСНезаполненнымПодразделениемРасходов();
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат.Имя);
	
КонецПроцедуры

// Возвращает текст запроса, позволяющего получить список документов ВыпускПродукции
// с незаполненным реквизитом ПодразделениеРасходов регистра накопления ПартииПроизводственныхЗатрат.
// Этот реквизит добавлен в версии 2.0.10.17х и не заполнен у документов, проведенных до этой версии.
//
Функция ТекстЗапросаВыпускаПродукцииСНезаполненнымПодразделениемРасходов() Экспорт
	Возврат "
		|ВЫБРАТЬ
        |	Выпуск.Ссылка КАК Регистратор,
        |	ВыпускТовары.Подразделение КАК ПодразделениеРасходов,
        |	СУММА(ВыпускТовары.Количество) КАК Количество
        |ПОМЕСТИТЬ ВТВыпуск
        |ИЗ
        |	Документ.ВыпускПродукции.Товары КАК ВыпускТовары
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК Выпуск
        |		ПО ВыпускТовары.Ссылка = Выпуск.Ссылка
        |ГДЕ
        |	Выпуск.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Выпуск.Организация В (&МассивОрганизаций)
        |	И Выпуск.Проведен
        |	И Выпуск.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
        |	И ВыпускТовары.СписатьНаРасходы
        |
        |СГРУППИРОВАТЬ ПО
        |	Выпуск.Ссылка,
        |	ВыпускТовары.Подразделение
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	Данные.Регистратор КАК Ссылка
        |ИЗ
        |	(ВЫБРАТЬ
        |		ДД.Регистратор КАК Регистратор,
        |		ДД.ПодразделениеРасходов КАК ПодразделениеРасходов,
        |		ДД.Количество КАК Количество
        |	ИЗ
        |		РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
        |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
        |				Выпуск.Регистратор КАК Регистратор
        |			ИЗ
        |				ВТВыпуск КАК Выпуск) КАК Выпуск
        |			ПО ДД.Регистратор = Выпуск.Регистратор
        |				И (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
        |	
        |	ОБЪЕДИНИТЬ ВСЕ
        |	
        |	ВЫБРАТЬ
        |		Выпуск.Регистратор,
        |		Выпуск.ПодразделениеРасходов,
        |		-Выпуск.Количество
        |	ИЗ
        |		ВТВыпуск КАК Выпуск) КАК Данные
        |
        |СГРУППИРОВАТЬ ПО
        |	Данные.Регистратор,
        |	Данные.ПодразделениеРасходов
        |
        |ИМЕЮЩИЕ
        |	СУММА(Данные.Количество) <> 0
		|";
КонецФункции

#КонецОбласти

#Область РегистрНакопления_ПроизводственныеЗатраты

Процедура ВосстановитьДвиженияСписанияЗатратНаВыпускПоПроизводственнымЗатратам(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаСписанияЗатратНаВыпускСНезаполненнымЗаказомНаПроизводство();
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве.Имя);
	
КонецПроцедуры

// Возвращает текст запроса, позволяющего получить список документов СписанияЗатратНаВыпуск
// с незаполненным реквизитом ЗаказНаПроизводство регистра накопления ПроизводственныеЗатраты.
//
Функция ТекстЗапросаСписанияЗатратНаВыпускСНезаполненнымЗаказомНаПроизводство() Экспорт
	
	Возврат "
        |ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	ДД.Регистратор КАК Ссылка
        |ИЗ
        |	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|ГДЕ
	    |	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Регистратор ССЫЛКА Документ.СписаниеЗатратНаВыпуск
		|	И ДД.ЗаказНаПроизводство = НЕОПРЕДЕЛЕНО
		|;";
			
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ОбщиеПроцедурыВосстановленияДвижений

// Перепроводит указанные документы только по одному указанному регистру накопления.
//
// Параметры:
//	ВыборкаДокументов - ВыборкаИзРезультатаЗапроса - выборка запроса, обязательно должна содержать поле Ссылка
//	ИмяРегистраНакопления - Строка - имя регистра накопления, по которому надо перепровести документы
//
Процедура ВосстановитьДвиженияДокументовПоРегиструНакопления(ВыборкаДокументов, ИмяРегистраНакопления)
	
	Если ВыборкаДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыНакопления[ИмяРегистраНакопления].СоздатьНаборЗаписей();
	
	ДополнительныеСвойства = Новый Структура("ЭтоНовый, РежимЗаписи", Ложь, РежимЗаписиДокумента.Проведение);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		Регистратор = ВыборкаДокументов.Ссылка;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления." + ИмяРегистраНакопления + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			Блокировка.Заблокировать();
		
			ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(
				Регистратор,
				ДополнительныеСвойства,
				РежимПроведенияДокумента.Неоперативный);
				
			МетаданныеДокумента = ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента;
			
			Документы[МетаданныеДокумента.Имя].ИнициализироватьДанныеДокумента(
				Регистратор,
				ДополнительныеСвойства);
				
			НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
			НаборЗаписей.Записывать = Истина;
			НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистраНакопления]);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось обработать: %1 по причине: %2';uk='Не вдалося обробити: %1 з причини: %2'"),
				Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Регистратор.Метаданные(),
				Регистратор,
				ТекстСообщения);
			
		КонецПопытки;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область ОписаниеДанныхМеханизма

// Возвращает перечень объектов метаданных, на основании данных которых выполняется расчет партий.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ВходящиеДанныеМеханизма() Экспорт
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.ВнутреннееПотреблениеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
	ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратТоваровОтКлиента);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказНаПеремещение);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказПоставщику);
	ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаПоступления);
    ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетОРозничныхПродажах);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПеремещениеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПоступлениеТоваровУслуг);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПрочееОприходованиеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.РасчетСебестоимостиТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.РеализацияТоваровУслуг);
	ВходящиеДанные.Вставить(Метаданные.Документы.СборкаТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаНалоговогоНазначенияЗапасов);
	ВходящиеДанные.Вставить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	
	//++ НЕ УТ
	ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратМатериаловИзПроизводства);
	ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратСырьяОтПереработчика);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыпускПродукции);
	ВходящиеДанные.Вставить(Метаданные.Документы.СписаниеЗатратНаВыпуск);
	ВходящиеДанные.Вставить(Метаданные.Документы.РаспределениеПроизводственныхЗатрат);
	ВходящиеДанные.Вставить(Метаданные.Документы.РаспределениеПрочихЗатрат);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПоступлениеОтПереработчика);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПеремещениеМатериаловВПроизводстве);
	ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетПереработчика);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПередачаМатериаловВПроизводство);
	ВходящиеДанные.Вставить(Метаданные.Документы.ВыпускПродукции);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказПереработчику);
	ВходящиеДанные.Вставить(Метаданные.Документы.ИзделияИЗатратыНЗП);
	//-- НЕ УТ
	//++ НЕ УТКА
	ВходящиеДанные.Вставить(Метаданные.Документы.МаршрутныйЛистПроизводства);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказДавальца);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказНаПроизводство);
	//-- НЕ УТКА
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыНаПеремещение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыПоставщикам);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КорректировкиНДСПартий);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСУсловныеПродажи);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКОформлению);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыПереданныеНаКомиссию);
	
	//++ НЕ УТ
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыПолученныеОтПереработчика);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТрудозатратыНезавершенногоПроизводства);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииНезавершенногоПроизводства);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РаспоряженияНаСписаниеПоНормативам);
	//-- НЕ УТ
	//++ НЕ УТКА
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЭтапыПроизводства);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РаспоряженияНаВыпускПродукции);
	//-- НЕ УТКА
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПартий);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ЗаданияКРасчетуСебестоимости);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтоимостьТоваров);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.УчетнаяПолитикаОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ЦеныНоменклатуры);
	
	//++ НЕ УТ
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ЗначенияПоказателейДляРаспределенияРасходов);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ОтражениеДокументовВРеглУчете);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокОтраженияНоменклатуры);
	//-- НЕ УТ
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, обслуживаемых механизмом расчета партий.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ИсходящиеДанныеМеханизма() Экспорт
	
	// Перечень метаданных регистров, по которым формируются движения по партиям.
	ИсходящиеДанные = Новый Соответствие;
	
	Значение = Истина; // чтобы можно было проверить вхождение объекта метаданных в это соответствие
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы, 		Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве, 			Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КорректировкиНДСПартий, 					Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСУсловныеПродажи, 					    Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск, 					Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат, 			Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, 					Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров, 	Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций, 				Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию, 		Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, 							Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, 					Значение);
	
	//++ НЕ УТ
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииНезавершенногоПроизводства, 		Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходыНезавершенногоПроизводства, Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТрудозатратыНезавершенногоПроизводства, 	Значение);
	//-- НЕ УТ
	
	Возврат ИсходящиеДанные;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыДляБлокировкиАлгоритмаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(
		ВходящиеДанныеМеханизма(),
		ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти
