//УКРАИНА
Функция ЗаполнитьНДФЛ(ВременнаяСсылка, МенеджерВременныхТаблиц, Организация, МесяцНачисления, ПервыйМесяцНалоговогоПериода = Неопределено, ПоследнийМесяцНалоговогоПериода  = Неопределено, ПоВсемДокументам = Ложь) Экспорт
	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВременнаяСсылка",ВременнаяСсылка);
	
	ЭтоРасчетПоДоходамТекущегоМесяца = ПервыйМесяцНалоговогоПериода = Неопределено Или ПоследнийМесяцНалоговогоПериода = Неопределено;
	
	Если НЕ ЭтоРасчетПоДоходамТекущегоМесяца Тогда
		Запрос.УстановитьПараметр("НачалоПериода",ПервыйМесяцНалоговогоПериода);
		Запрос.УстановитьПараметр("КонецПериода",ПоследнийМесяцНалоговогоПериода);
	Иначе	
		Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(МесяцНачисления));
		Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(МесяцНачисления));
	Конецесли;
	Запрос.УстановитьПараметр("ПериодРегистрации",НачалоМесяца(МесяцНачисления));
	
	Запрос.Текст = 
	   "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.КодДохода,
		|	СведенияОДоходахНДФЛ.НалоговыйПериод
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахНДФЛ.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			МЕСЯЦ,
		|			Организация = &Организация
		|            И ФизическоеЛицо В (ВЫБРАТЬ ФизическиеЛица.ФизическоеЛицо ИЗ ВТФизическиеЛица КАК ФизическиеЛица)
		|			) КАК СведенияОДоходахНДФЛ
		|";
		
	Если НЕ ПоВсемДокументам И ВременнаяСсылка <> Неопределено Тогда
		ПоляСуммирования = Новый Массив;
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, ".Проведен", ПоляСуммирования, "ЕСТЬ NULL");
	КонецЕсли;
	
	НДФЛ = Запрос.Выполнить().Выгрузить();   
	Возврат НДФЛ;
	
КонецФункции

// Формирует запрос для получения льгот сотрудников
// Основная таблица ВТСтрокиРасчетаСДанными
// Возвращаемая таблица ВТЛьготыСотрудников
//
Процедура ПолучитьСписокЛьгот(Запрос, Организация, МесяцРасчета, ПрименятьЛьготы)
	
	Если НЕ ПрименятьЛьготы Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	NULL КАК Льгота,
		|	0 КАК КоличествоЛьгот,
		|	0 КАК КоличествоПороговЛьгот,
		|   0 КАК ПорогЛьготНДФЛ,
		|   0 КАК СтавкаЛьготНДФЛ,
		|   0 КАК РазмерПрожиточныеМинимумы,
		|   0 КАК ДоходЛьготы
		|ПОМЕСТИТЬ ВТЛьготыСотрудников
		|ИЗ
		|	ВТСтрокиРасчетаСДанными КАК СтрокиРасчета
		|ГДЕ ЛОЖЬ
		|
		|";
		Запрос.Выполнить();
		Возврат;
		
	КонецЕсли;	
	
    СоздатьВТЛьготыПоНДФЛЗаПериод(Запрос.МенеджерВременныхТаблиц,Истина,МесяцРасчета,"ВТСтрокиРасчетаСДанными");

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ВЫРАЗИТЬ( 
	|		ВЫБОР КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.Основной) 
	|			ТОГДА ВидыЛьготПоНДФЛ.РазмерНДФЛ 
	|			КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенка) 
	|			ТОГДА ВидыЛьготПоНДФЛ.РазмерНДФЛ * ЛьготыСотрудников.Количество 
	|			КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенкаИнвалида) 
	|			ТОГДА ВидыЛьготПоНДФЛ.РазмерНДФЛ * ЛьготыСотрудников.Количество 
	|			КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаТроихДетей)
	|				И ЛьготыСотрудников.Количество >= 3
	|			ТОГДА ВидыЛьготПоНДФЛ.РазмерНДФЛ * ЛьготыСотрудников.Количество 
	|      		ИНАЧЕ 0
	|  		КОНЕЦ
	|	КАК ЧИСЛО(5,2) ) КАК КоличествоЛьгот,
	|	ВЫРАЗИТЬ( 
	|		ВЫБОР КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.Основной) 
	|				ИЛИ ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16912ВР)
	|			ТОГДА 1 
	|			КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенка) 
	|			ТОГДА ЛьготыСотрудников.Количество 
	|			КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаКаждогоРебенкаИнвалида) 
	|			ТОГДА ЛьготыСотрудников.Количество 
	|			КОГДА ВидыЛьготПоНДФЛ.СпособПримененияНДФЛ = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияЛьготРаботников.НаТроихДетей)
	|				И ЛьготыСотрудников.Количество >= 3
	|			ТОГДА ЛьготыСотрудников.Количество 
	|      		ИНАЧЕ 1
	|  		КОНЕЦ
	|	КАК ЧИСЛО(5,2) ) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковКоличество
	|ИЗ
	|	ВТЛьготыПоНДФЛЗаПериод КАК ЛьготыСотрудников
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЛьготПоНДФЛ КАК ВидыЛьготПоНДФЛ
	|	ПО ЛьготыСотрудников.Льгота = ВидыЛьготПоНДФЛ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.Гр16912_16913б) КАК Льгота,
	|	СУММА(ЛьготыСотрудников.КоличествоЛьгот) КАК КоличествоЛьгот,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоПороговЛьгот) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковРазрешенныеДубли
	|ИЗ
	|	ВТЛьготыСотрудниковКоличество КАК ЛьготыСотрудников
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТЛьготыСотрудниковКоличество КАК ЛьготыСотрудниковДубли
	|	ПО ЛьготыСотрудников.НалоговыйПериод = ЛьготыСотрудниковДубли.НалоговыйПериод
	|	 И ЛьготыСотрудников.ФизическоеЛицо = ЛьготыСотрудниковДубли.ФизическоеЛицо
	|	 И ((ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16912)
	|	  И ЛьготыСотрудниковДубли.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16913б))
	|	  ИЛИ (ЛьготыСотрудников.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16913б)
	|	  И ЛьготыСотрудниковДубли.Льгота = ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16912)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.Гр16912_16913б)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ЛьготыСотрудников.КоличествоЛьгот,
	|	ЛьготыСотрудников.КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковКоличествоПолное
	|ИЗ
	|	ВТЛьготыСотрудниковКоличество КАК ЛьготыСотрудников
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ЛьготыСотрудников.КоличествоЛьгот,
	|	ЛьготыСотрудников.КоличествоПороговЛьгот
	|ИЗ
	|	ВТЛьготыСотрудниковРазрешенныеДубли КАК ЛьготыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоЛьгот) КАК КоличествоЛьгот,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоПороговЛьгот) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковМаксимум
	|ИЗ
	|	ВТЛьготыСотрудниковКоличествоПолное КАК ЛьготыСотрудников
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(ЛьготыСотрудников.НалоговыйПериод, ГОД) КАК НалоговыйПериодГод,
	|	МАКСИМУМ(ЛьготыСотрудников.Льгота) КАК Льгота,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоЛьгот) КАК КоличествоЛьгот,
	|	МАКСИМУМ(ЛьготыСотрудников.КоличествоПороговЛьгот) КАК КоличествоПороговЛьгот
	|ПОМЕСТИТЬ ВТЛьготыСотрудниковДанные
	|ИЗ
	|	ВТЛьготыСотрудниковКоличествоПолное КАК ЛьготыСотрудников
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТЛьготыСотрудниковМаксимум КАК ЛьготыСотрудниковМаксимум
	|	ПО ЛьготыСотрудников.ФизическоеЛицо = ЛьготыСотрудниковМаксимум.ФизическоеЛицо
	|	 И ЛьготыСотрудников.НалоговыйПериод = ЛьготыСотрудниковМаксимум.НалоговыйПериод
	|	 И ЛьготыСотрудников.КоличествоЛьгот = ЛьготыСотрудниковМаксимум.КоличествоЛьгот
	|	 И ЛьготыСотрудников.КоличествоПороговЛьгот = ЛьготыСотрудниковМаксимум.КоличествоПороговЛьгот
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЛьготыПоНДФЛЗаПериод
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковМаксимум
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковРазрешенныеДубли
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковКоличествоПолное
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковКоличество
	|";
	
	Запрос.Выполнить();
	

	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ОтборыРС.Вставить("Льгота","= ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.НДФЛ_16911)");
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Порог","Порог");
	ВыбираемыеПоляРС.Вставить("Ставка","Ставка");
	ВыбираемыеПоляРС.Вставить("Льгота","Льгота");
	ПоляСвязей = Новый Структура();
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТРазмерыЛьготНДФЛ", "ВТЛьготыСотрудниковДанные", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.РазмерыЛьготНДФЛ", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();
	
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ОтборыРС.Вставить("СоциальнаяГруппа","= ЗНАЧЕНИЕ(Перечисление.СоциальныеГруппыНаселения.Трудоспособные)");
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Размер","Размер");
	ВыбираемыеПоляРС.Вставить("СоциальнаяГруппа","СоциальнаяГруппа");
	ПоляСвязей = Новый Структура();
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТПрожиточныеМинимумы", "ВТЛьготыСотрудниковДанные", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериодГод", "РегистрСведений.ПрожиточныеМинимумы", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтрокиРасчета.ФизическоеЛицо,
	|	СтрокиРасчета.НалоговыйПериод,
	|	СУММА(СтрокиРасчета.Доход) КАК ОбщийДоход 
	|ПОМЕСТИТЬ ВТОбщийДоходПоЛьготам
	|ИЗ
	|	ВТСтрокиРасчетаСДанными КАК СтрокиРасчета
	|	
	|ГДЕ
	|   СтрокиРасчета.КодДохода.УчитыватьНСЛ
	|СГРУППИРОВАТЬ ПО
	|	СтрокиРасчета.ФизическоеЛицо,
	|	СтрокиРасчета.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыСотрудников.ФизическоеЛицо,
	|	ЛьготыСотрудников.НалоговыйПериод,
	|	ЛьготыСотрудников.Льгота,
	|	ЛьготыСотрудников.КоличествоЛьгот,
	|	ЛьготыСотрудников.КоличествоПороговЛьгот,
	|   ЕСТЬNULL(РазмерыЛьготНДФЛ.Порог, 0) КАК ПорогЛьготНДФЛ,
	|   ЕСТЬNULL(РазмерыЛьготНДФЛ.Ставка, 0) КАК СтавкаЛьготНДФЛ,
	|   ЕСТЬNULL(ПрожиточныеМинимумы.Размер, 0) КАК РазмерПрожиточныеМинимумы,
	|   ЕСТЬNULL(ОбщийДоходПоЛьготам.ОбщийДоход, 0) КАК ДоходЛьготы
	|ПОМЕСТИТЬ ВТЛьготыСотрудников
	|ИЗ
	|	ВТЛьготыСотрудниковДанные КАК ЛьготыСотрудников
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыЛьготНДФЛ КАК РазмерыЛьготНДФЛ
	|	ПО ЛьготыСотрудников.НалоговыйПериод = РазмерыЛьготНДФЛ.НалоговыйПериод
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПрожиточныеМинимумы КАК ПрожиточныеМинимумы
	|	ПО ЛьготыСотрудников.НалоговыйПериодГод = ПрожиточныеМинимумы.НалоговыйПериодГод
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОбщийДоходПоЛьготам КАК ОбщийДоходПоЛьготам
	|	ПО ЛьготыСотрудников.НалоговыйПериод = ОбщийДоходПоЛьготам.НалоговыйПериод
	|	 И ЛьготыСотрудников.ФизическоеЛицо = ОбщийДоходПоЛьготам.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРазмерыЛьготНДФЛ
	|;
	|УНИЧТОЖИТЬ ВТПрожиточныеМинимумы
	|;
	|УНИЧТОЖИТЬ ВТЛьготыСотрудниковДанные
	|;
	|УНИЧТОЖИТЬ ВТОбщийДоходПоЛьготам
	|
	|";

	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТЛьготыПоНДФЛЗаПериод(МенеджерВременныхТаблиц, ТолькоРазрешенные, ДатаАктуальности, ИмяВременнойТаблицыОтбора = "ВТПериодыФизическихЛиц") Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыФизическихЛиц.НалоговыйПериод КАК МесяцПериода,
	|	ЛьготыФизическихЛицНДФЛ.Льгота,
	|	МАКСИМУМ(ЛьготыФизическихЛицНДФЛ.Период) КАК МесяцЛьготы
	|ПОМЕСТИТЬ ВТПериодыСрезаЛьгот
	|ИЗ
	|	ВТПериодыФизическихЛиц КАК ПериодыФизическихЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготыФизическихЛицНДФЛ КАК ЛьготыФизическихЛицНДФЛ
	|		ПО ПериодыФизическихЛиц.ФизическоеЛицо = ЛьготыФизическихЛицНДФЛ.ФизическоеЛицо
	|			И ПериодыФизическихЛиц.НалоговыйПериод >= ЛьготыФизическихЛицНДФЛ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизическихЛиц.ФизическоеЛицо,
	|	ПериодыФизическихЛиц.НалоговыйПериод,
	|	ЛьготыФизическихЛицНДФЛ.Льгота
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(ЛьготыНаДетейНДФЛ.МесяцРегистрации) КАК МесяцРегистрации,
	|	ПериодыФизическихЛиц.НалоговыйПериод КАК МесяцПериода
	|ПОМЕСТИТЬ ВТМесяцаСрезаЛьготНаДетей
	|ИЗ
	|	ВТПериодыФизическихЛиц КАК ПериодыФизическихЛиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготыНаДетейНДФЛ КАК ЛьготыНаДетейНДФЛ
	|		ПО ПериодыФизическихЛиц.ФизическоеЛицо = ЛьготыНаДетейНДФЛ.ФизическоеЛицо
	|			И ПериодыФизическихЛиц.НалоговыйПериод >= ЛьготыНаДетейНДФЛ.МесяцРегистрации
	|			И (ЛьготыНаДетейНДФЛ.МесяцРегистрации <= &ДатаАктуальности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФизическихЛиц.ФизическоеЛицо,
	|	ПериодыФизическихЛиц.НалоговыйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛьготыНаДетейНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЛьготыНаДетейНДФЛ.Льгота КАК Льгота,
	|	ЛьготыНаДетейНДФЛ.МесяцРегистрации КАК МесяцРегистрации,
	|	МАКСИМУМ(ЛьготыНаДетейНДФЛ.ДатаДействия) КАК ДатаДействия,
	|	МесяцаСрезаЛьготНаДетей.МесяцПериода КАК МесяцПериода
	|ПОМЕСТИТЬ ВТДатыСрезаЛьготНаДетей
	|ИЗ
	|	ВТМесяцаСрезаЛьготНаДетей КАК МесяцаСрезаЛьготНаДетей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготыНаДетейНДФЛ КАК ЛьготыНаДетейНДФЛ
	|		ПО МесяцаСрезаЛьготНаДетей.ФизическоеЛицо = ЛьготыНаДетейНДФЛ.ФизическоеЛицо
	|			И МесяцаСрезаЛьготНаДетей.МесяцРегистрации = ЛьготыНаДетейНДФЛ.МесяцРегистрации
	|			И МесяцаСрезаЛьготНаДетей.МесяцПериода >= ЛьготыНаДетейНДФЛ.ДатаДействия
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛьготыНаДетейНДФЛ.ФизическоеЛицо,
	|	ЛьготыНаДетейНДФЛ.Льгота,
	|	ЛьготыНаДетейНДФЛ.МесяцРегистрации,
	|	МесяцаСрезаЛьготНаДетей.МесяцПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыСрезаЛьгот.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПериодыСрезаЛьгот.МесяцПериода КАК НалоговыйПериод,
	|	ПериодыСрезаЛьгот.Льгота КАК Льгота,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ВТЛьготыПоНДФЛЗаПериод
	|ИЗ
	|	ВТПериодыСрезаЛьгот КАК ПериодыСрезаЛьгот
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготыФизическихЛицНДФЛ КАК ЛьготыФизическихЛицНДФЛ
	|		ПО ПериодыСрезаЛьгот.ФизическоеЛицо = ЛьготыФизическихЛицНДФЛ.ФизическоеЛицо
	|			И ПериодыСрезаЛьгот.МесяцЛьготы = ЛьготыФизическихЛицНДФЛ.Период
	|			И ПериодыСрезаЛьгот.Льгота = ЛьготыФизическихЛицНДФЛ.Льгота
	|			И ЛьготыФизическихЛицНДФЛ.Актуальность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЛьготыНаДетейНДФЛ.ФизическоеЛицо,
	|	ДатыСрезаЛьготНаДетей.МесяцПериода,
	|	ЛьготыНаДетейНДФЛ.Льгота,
	|	ВЫБОР
	|		КОГДА ЛьготыНаДетейНДФЛ.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И КОНЕЦПЕРИОДА(ЛьготыНаДетейНДФЛ.ДействуетДо, МЕСЯЦ) <= ДатыСрезаЛьготНаДетей.МесяцПериода
	|			ТОГДА ЛьготыНаДетейНДФЛ.КоличествоДетейПоОкончании
	|		ИНАЧЕ ЛьготыНаДетейНДФЛ.КоличествоДетей
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ЛьготыНаДетейНДФЛ КАК ЛьготыНаДетейНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыСрезаЛьготНаДетей КАК ДатыСрезаЛьготНаДетей
	|		ПО ЛьготыНаДетейНДФЛ.ФизическоеЛицо = ДатыСрезаЛьготНаДетей.ФизическоеЛицо
	|			И ЛьготыНаДетейНДФЛ.Льгота = ДатыСрезаЛьготНаДетей.Льгота
	|			И ЛьготыНаДетейНДФЛ.МесяцРегистрации = ДатыСрезаЛьготНаДетей.МесяцРегистрации
	|			И ЛьготыНаДетейНДФЛ.ДатаДействия = ДатыСрезаЛьготНаДетей.ДатаДействия
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЛьготыНаДетейНДФЛ.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					И КОНЕЦПЕРИОДА(ЛьготыНаДетейНДФЛ.ДействуетДо, МЕСЯЦ) < ДатыСрезаЛьготНаДетей.МесяцПериода
	|				ТОГДА ЛьготыНаДетейНДФЛ.КоличествоДетейПоОкончании
	|			ИНАЧЕ ЛьготыНаДетейНДФЛ.КоличествоДетей
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыСрезаЛьгот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыСрезаЛьготНаДетей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТМесяцаСрезаЛьготНаДетей";	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТПериодыФизическихЛиц", ИмяВременнойТаблицыОтбора);
	
	Если НЕ ТолькоРазрешенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СтрокаСведенийОДоходахВС(СведенияОДоходахНДФЛ, Организация, МесяцНачисления, ДанныеДокумента, ОкончательныйРасчет = Истина) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДанныеДокумента.КодДоходаВС) Тогда
		Возврат;
	КонецЕсли;	
	
	НоваяСтрока = СведенияОДоходахНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = МесяцНачисления;
	НоваяСтрока.НалоговыйПериод = НачалоМесяца(МесяцНачисления);
	НоваяСтрока.КодДохода = ДанныеДокумента.КодДоходаВС;
	НоваяСтрока.НатуральныйКоэффициент = Ложь;
	НоваяСтрока.ДоходМежрасчетногоПериода = Не ОкончательныйРасчет;
	
КонецПроцедуры

Функция РазделитьТаблицуНаНДФЛиВС(ТаблицаДляРазделения) Экспорт
	
	ТаблицыНДФЛиВС = Новый Структура;
	
    Отбор = Новый Структура;
    Отбор.Вставить("ВидУдержания", Перечисления.ВидыОсобыхНачисленийИУдержаний.НДФЛ);
    ТаблицаНДФЛ = ТаблицаДляРазделения.Скопировать(Отбор);
	
	Отбор = Новый Структура;
    Отбор.Вставить("ВидУдержания", Перечисления.ВидыОсобыхНачисленийИУдержаний.ВоенныйСбор);
    ТаблицаВС = ТаблицаДляРазделения.Скопировать(Отбор);
	
	ТаблицыНДФЛиВС.Вставить("ТаблицаНДФЛ", ТаблицаНДФЛ);
	ТаблицыНДФЛиВС.Вставить("ТаблицаВС", ТаблицаВС);
	
	
	Возврат ТаблицыНДФЛиВС;
	
КонецФункции	

Функция СтрокаИсчисленныйНДФЛ(Движения, Организация, ДатаОперации, ДанныеДокумента)
	
	НоваяСтрока = Движения.ИсчисленныйНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;

    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаИсчисленныйНДФЛАвансом(Движения, Организация, ДатаОперации, ДанныеДокумента)
	
	НоваяСтрока = Движения.ИсчисленныйНДФЛАвансом.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;

    Возврат НоваяСтрока
	
КонецФункции

Функция РаспределитьНДФЛПоГруппамУчета(Организация, ПериодРегистрации, ТаблицаНДФЛ, ДанныеМежрасчетногоПериода = Ложь, Регистратор = Неопределено) Экспорт
	
	МассивФизическихЛиц = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаНДФЛ, "ФизическоеЛицо", Истина);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическиеЛица", МассивФизическихЛиц);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаНДФЛ
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&ФизическиеЛица)";
	Запрос.Выполнить();
	
	Доходы = СформироватьДоходыНДФЛ(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ДанныеМежрасчетногоПериода, Регистратор);
	
	//Распределение таблицы НДФЛ по таблице начислений
	ПоляРазрез = Новый Массив();
	ПоляРазрез.Добавить("ГруппаУчетаНачислений");
	ПоляСвязи = Новый Структура();
	ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
	ПоляСвязи.Вставить("КодДохода","КодДохода");
	ПоляСвязи.Вставить("НалоговыйПериод","НалоговыйПериод");
	ТаблицаНДФЛПоГруппам = ЗарплатаКадры.РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ТаблицаНДФЛ, "Сумма", Доходы, "СуммаДоход", ПоляРазрез, ПоляСвязи);
	
	//Что не удалось распределить - относим на 661
	Для Каждого СтрокаНДФЛ из ТаблицаНДФЛПоГруппам Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаНДФЛ.ГруппаУчетаНачислений) Тогда
			СтрокаНДФЛ.ГруппаУчетаНачислений = Справочники.ГруппыУчетаНачисленийИУдержаний.Зарплата;
		КонецЕсли;	
	Конеццикла;	
	
	Возврат ТаблицаНДФЛПоГруппам;
	
КонецФункции

Функция СформироватьДоходыНДФЛ(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ДанныеМежрасчетногоПериода, Регистратор)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ДанныеМежрасчетногоПериода", ДанныеМежрасчетногоПериода);

	Запрос.Текст = 
	   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СведенияОДоходахНДФЛ.Организация,
	   |	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	   |	СведенияОДоходахНДФЛ.КодДохода,
	   |	СведенияОДоходахНДФЛ.НалоговыйПериод,
	   |	СведенияОДоходахНДФЛ.Сотрудник,
	   |	СведенияОДоходахНДФЛ.Начисление,
	   |	СведенияОДоходахНДФЛ.ГруппаУчетаНачислений,
	   |	СведенияОДоходахНДФЛ.СуммаДохода КАК СуммаДоход
	   |
	   |ИЗ
	   |	РегистрНакопления.СведенияОДоходахНДФЛ КАК  СведенияОДоходахНДФЛ
	   |ГДЕ
	   |	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.Период, МЕСЯЦ) = &ПериодРегистрации
	   |	И СведенияОДоходахНДФЛ.Организация = &Организация
	   |	И СведенияОДоходахНДФЛ.ФизическоеЛицо В 
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТФизическиеЛицаНДФЛ КАК СтрокиРасчета)
	   |   И ((&ДанныеМежрасчетногоПериода И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода И СведенияОДоходахНДФЛ.Регистратор = &Регистратор)
	   |      ИЛИ (НЕ &ДанныеМежрасчетногоПериода И НЕ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода))
	   |";

	Возврат Запрос.Выполнить().Выгрузить();   
	
КонецФункции	

Процедура СформироватьИсчисленныйНалогАвансомПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, Записывать = Ложь, ОкончательныйРасчет = Ложь) Экспорт
	
	
	Если ИсчисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ИсчисленныйНалог.Колонки.Найти("Сумма") <> Неопределено И ИсчисленныйНалог.Колонки.Найти("Налог") = Неопределено Тогда
		ИсчисленныйНалог.Колонки.Сумма.Имя = "Налог";
	КонецЕсли;	
	
	ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ = ПолучитьФункциональнуюОпцию("ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ", Новый Структура("Организация", Организация));
	Если ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ Тогда
		Если Истина Тогда
			//Относим на основные места работы
			ФизическиеЛицаМассив = ИсчисленныйНалог.ВыгрузитьКолонку("ФизическоеЛицо");
			СотрудникиФизическиеЛица = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(ФизическиеЛицаМассив, Истина, Организация, ДатаОперации);
			Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(СотрудникиФизическиеЛица, "Сотрудник", Истина);
			
			// По основным сотрудникам запрашиваем сведения о рабочих местах на конец месяца.
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, Истина, Сотрудники, "Подразделение", КонецМесяца(ДатаОперации));
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			| КадровыеДанныеСотрудников.ФизическоеЛицо,
			| КадровыеДанныеСотрудников.Сотрудник,
			| КадровыеДанныеСотрудников.Подразделение
			|ИЗ
			| ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
			
			ТаблицаМестРаботы = Запрос.Выполнить().Выгрузить();
			
		Иначе	
		КонецЕсли;	
		
		СоответствиеОбособленныеПодразделенияИФизическиеЛица = ПолучитьОбособленныеПодразделенияДляНДФЛ(ТаблицаМестРаботы, ДатаОперации);
		
	Иначе
		
		СоответствиеОбособленныеПодразделенияИФизическиеЛица = Новый Соответствие; 
		
	КонецЕсли;	
	
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИсчисленныйНалог Цикл
		Если СтрокаДанных.Налог = 0 и СтрокаДанных.Доход = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрокаИС = СтрокаИсчисленныйНДФЛАвансом(Движения, Организация, ДатаОперации, СтрокаДанных);
		НоваяСтрокаИС.ОбособленноеПодразделение = СоответствиеОбособленныеПодразделенияИФизическиеЛица.Получить(СтрокаДанных.ФизическоеЛицо);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.ИсчисленныйНДФЛАвансом.Записать();
			Движения.ИсчисленныйНДФЛАвансом.Записывать = Ложь;
		Иначе
			Движения.ИсчисленныйНДФЛАвансом.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначенийПолной(Движения, Отказ, Организация, ДатаОперации, Начисления, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если Начисления.Количество() = 0 Тогда // данных не оказалось
		Возврат	
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("КонецМесяцаНачисления", КонецМесяца(ДатаОперации));
	Запрос.УстановитьПараметр("Начисления", Начисления);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.СуммаДохода КАК СуммаДохода,
	|	Начисления.НалоговыйПериод КАК НалоговыйПериод,
	|	Начисления.ГруппаУчетаНачислений КАК ГруппаУчетаНачислений,
	|	Начисления.КодДохода КАК КодДохода,
	|	Начисления.НатуральныйКоэффициент КАК НатуральныйКоэффициент
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&Начисления КАК Начисления
	|;
	|
	|ВЫБРАТЬ
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.КодДохода КАК КодДохода,
	|	&ДатаОперации КАК ДатаПолученияДохода,
	|	Начисления.СуммаДохода,
	|	ВидыДоходовНДФЛ.ОблагаетсяВоеннымСбором КАК КодДоходаВС,
	|	Начисления.ГруппаУчетаНачислений КАК ГруппаУчетаНачислений,
	|	Начисления.НалоговыйПериод КАК НалоговыйПериод,
	|	Начисления.НатуральныйКоэффициент КАК НатуральныйКоэффициент
	|ИЗ
	|	ВТНачисления КАК Начисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	|		ПО Начисления.КодДохода = ВидыДоходовНДФЛ.Ссылка
	|ГДЕ
	|	Начисления.СуммаДохода <> 0
	|	И Начисления.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)";
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, НачалоМесяца(ДатаОперации), Выборка, ОкончательныйРасчет);
	КонецЦикла;
	
	Если Записывать Тогда
		// Записываем сразу и не выставляем признак Записывать этому набору записей движений документа.
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьОбособленныеПодразделенияДляНДФЛ(ТаблицаМестРаботы, ДатаАктуальности = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаАктуальности) Тогда
		ДатаАктуальности = '00010101'
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("ТаблицаМестРаботы", ТаблицаМестРаботы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаМестРаботы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаМестРаботы.Подразделение КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ ВТТаблицаМестРаботы
	|ИЗ
	|	&ТаблицаМестРаботы КАК ТаблицаМестРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ТаблицаМестРаботы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ОбособленныеПодразделенияДляНДФЛ.ОбособленноеПодразделение
	|ИЗ
	|	ВТТаблицаМестРаботы КАК ТаблицаМестРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбособленныеПодразделенияДляНДФЛ.СрезПоследних(&ДатаАктуальности, ) КАК ОбособленныеПодразделенияДляНДФЛ
	|		ПО (ОбособленныеПодразделенияДляНДФЛ.СтруктурнаяЕдиница = ТаблицаМестРаботы.СтруктурнаяЕдиница)";
	
	СоответствиеОбособленноеПодразделение = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеОбособленноеПодразделение.Вставить(Выборка.ФизическоеЛицо, Выборка.ОбособленноеПодразделение);		
	КонецЦикла;	
	Возврат СоответствиеОбособленноеПодразделение;
КонецФункции

Функция ПолучитьСтавкиНДФЛНаДату(Дата) Экспорт
	
	Ставки = Новый Соответствие();
	Ставки.Вставить(Перечисления.ВидыСтавокНДФЛ.ПустаяСсылка(), 0);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыСтавокНДФЛ.Ссылка КАК ВидСтавки,
	               |	ЕСТЬNULL(СтавкиНДФЛСрезПоследних.Ставка, 0) КАК Ставка
	               |ИЗ
	               |	Перечисление.ВидыСтавокНДФЛ КАК ВидыСтавокНДФЛ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДФЛ.СрезПоследних(&Дата, ) КАК СтавкиНДФЛСрезПоследних
	               |		ПО ВидыСтавокНДФЛ.Ссылка = СтавкиНДФЛСрезПоследних.ВидСтавки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Ставки.Вставить(Выборка.ВидСтавки, Выборка.Ставка);
	КонецЦикла;
	
	Возврат Ставки;
	
КонецФункции	



#Область ПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
// Параметры:
//		РеквизитыПлатежа - таблица значений с колонками.
//				Организация - СправочникСсылка.Организации - должно быть непустым значением.
//				МесяцНалоговогоПериода - дата - должно быть непустым значением.
//				ДатаПлатежа - дата - должно быть непустым значением.
//				ПлатежноеПоручениеНомер - строка (необязательно).
//				ПлатежноеПоручениеДата - дата (необязательно).
//              РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане  (необязательно)
//              ГлавныйБухгалтер - СправочникСсылка.ФизическиеЛица (необязательно)
//              Бухгалтер - СправочникСсылка.ФизическиеЛица (необязательно)
//
//  Возвращаемое значение: табличный документ.
//
Функция РеестрПеречисленныхСуммНалога(РеквизитыПлатежа) Экспорт 

	
КонецФункции


// Процедура переопределяет свойства объекта, с которыми он будет отображен в форме Отчетность.
// Параметры:
//  СвойстваОбъектов  - ТаблицаЗначений - (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность)
Процедура ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов) Экспорт
	
КонецПроцедуры

// Определяет свойства, касающиеся общих свойств объектов конфигураций-потребителей для отображения в форме Отчетность
// и возможности создания новый объектов из формы Отчетность.
//
// Параметры:
//  ТаблицаОписания  - ТаблицаЗначений -  (см. РегламентированнаяОтчетностьПереопределяемый.ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности)
//	
Процедура ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания) Экспорт

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - 
//		Организация -
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Начисления - ТаблицаЗначений - таблица значений с колонками:
//			* ФизическоеЛицо - СправочникСсылка - должно быть непустым.
//			* Подразделение - ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации -
//  	    * ДатаПолученияДохода - дата - должно быть непустым.
//			* КодДохода -
//			* СуммаДохода -
//			* КодВычета - 
//  	    * СуммаВычета -
//			* Сотрудник - необязательная, может отсутствовать.
//  	    * Начисление - необязательная, может отсутствовать.
//  	    * ВключатьВДекларациюПоНалогуНаПрибыль - необязательная, может отсутствовать.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, Организация, ДатаОперации, Начисления, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	
	Если Начисления.Количество() = 0 Тогда // данных не оказалось
		Возврат	
	КонецЕсли;
	
	Если Начисления.Колонки.Найти("НатуральныйКоэффициент") = Неопределено Тогда
		Начисления.Колонки.Добавить("НатуральныйКоэффициент", Новый ОписаниеТипов("Булево"));
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("КонецМесяцаНачисления", КонецМесяца(ДатаОперации));
	Запрос.УстановитьПараметр("Начисления", Начисления);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.СуммаДохода КАК СуммаДохода,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.КодДохода КАК КодДохода,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.ПодразделениеСотрудника КАК ПодразделениеСотрудника,
	|	Начисления.НатуральныйКоэффициент КАК НатуральныйКоэффициент
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&Начисления КАК Начисления
	|;
	|
	|ВЫБРАТЬ
	|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Начисления.КодДохода КАК КодДохода,
	|	&ДатаОперации КАК ДатаПолученияДохода,
	|	Начисления.СуммаДохода,
	|	Начисления.Подразделение,
	|	Начисления.ПодразделениеСотрудника,
	|	Начисления.Сотрудник,
	|	Начисления.Начисление,
	|	Начисления.КодДохода.ОблагаетсяВоеннымСбором КАК КодДоходаВС,
	|	ЕСТЬNULL(НастройкаОсобыхНачислений.ГруппаУчета, ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.Зарплата)) КАК ГруппаУчетаНачислений,
	|	НАЧАЛОПЕРИОДА(&ДатаОперации, МЕСЯЦ) КАК ПериодДействия,
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.Прочее) КАК КатегорияНачисления,
	|	Начисления.НатуральныйКоэффициент КАК НатуральныйКоэффициент
	|ИЗ
	|	ВТНачисления КАК Начисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаГруппУчетаОсобыхНачисленийИУдержаний КАК НастройкаОсобыхНачислений
	|		ПО Начисления.Начисление = НастройкаОсобыхНачислений.НачислениеУдержание
	|ГДЕ
	|	Начисления.СуммаДохода <> 0
	|	И Начисления.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)";
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, НачалоМесяца(ДатаОперации), Выборка, ОкончательныйРасчет);
	КонецЦикла;
	
	Если Записывать Тогда
		// Записываем сразу и не выставляем признак Записывать этому набору записей движений документа.
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Движения.СведенияОДоходахНДФЛ.Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ПризПодарок") Тогда
		УчетНДФЛРасширенный.УчестьПеределыДоходов(Движения, Отказ, Организация, НачалоМесяца(ДатаОперации), Движения.СведенияОДоходахНДФЛ.Отбор.Регистратор.Значение, Записывать);	
	КонецЕсли;	
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит вр. таблицу 
//			ВТНачисления с полями.
//				Сотрудник, тип СправочникСсылка.Сотрудники.
//				Начисление, тип ПланВидовРасчетаСсылка.Начисления
//				СуммаДохода
//				СуммаВычетаНДФЛ
//				КодВычетаНДФЛ.
//				Подразделение, тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//		ИмяВТНачисления - строка - имя вр. таблицы начислений, по умолчанию "ВТНачисления".
//
Процедура СформироватьДоходыНДФЛПоНачислениям(Движения, Отказ, Организация, ДатаОперации, ДатаВыплаты, МенеджерВременныхТаблиц, МесяцНачисления = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина, ИмяВТНачисления = "ВТНачисления") Экспорт
	

	Если Не ЗначениеЗаполнено(МесяцНачисления) Тогда
		МесяцНачисления = ДатаОперации
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаВыплаты", ДатаВыплаты);
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);
	Запрос.УстановитьПараметр("КонецМесяцаНачисления", КонецМесяца(МесяцНачисления));
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	&КонецМесяцаНачисления КАК Период
	|ПОМЕСТИТЬ ВТПериодыСотрудников
	|ИЗ
	|	#ИмяВТНачисления КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Начисление ССЫЛКА ПланВидовРасчета.Начисления";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ИмяВТНачисления", ИмяВТНачисления);
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТПериодыСотрудников");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, "ДатаУвольнения");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Начисления.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ВидыРасчета.КодДоходаНДФЛ, Начисления.Начисление) КАК КодДохода,
	|	ВЫБОР
	|		КОГДА НЕ Начисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|			ТОГДА &ДатаВыплаты
	|		КОГДА ВидыРасчета.КодДоходаНДФЛ.СоответствуетОплатеТруда
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления) < &КонецМесяцаНачисления
	|							И КОНЕЦПЕРИОДА(ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления), МЕСЯЦ) = &КонецМесяцаНачисления
	|						ТОГДА ЕСТЬNULL(ДанныеОСотруднике.ДатаУвольнения, &КонецМесяцаНачисления)
	|					ИНАЧЕ &КонецМесяцаНачисления
	|				КОНЕЦ
	|		ИНАЧЕ &ДатаВыплаты
	|	КОНЕЦ КАК ДатаПолученияДохода,
	|	Начисления.СуммаДохода,
	|	Начисления.Подразделение,
	|	Начисления.ПодразделениеОрганизации КАК ПодразделениеСотрудника,
	|	Начисления.Сотрудник,
	|	Начисления.Начисление,
	|	ВЫБОР 
	|		КОГДА НЕ Начисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|       	ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|       КОГДА ЕСТЬNULL(СтавкиВС.Ставка, 0) = 0
	|           ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ ВидыРасчета.КодДоходаНДФЛ.ОблагаетсяВоеннымСбором
	|	КОНЕЦ КАК КодДоходаВС,
	|	ЕСТЬNULL(ВидыРасчета.ГруппаУчета, ЕСТЬNULL(НастройкаОсобыхНачислений.ГруппаУчета, ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.Зарплата))) КАК ГруппаУчетаНачислений,
	|	НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ) КАК ПериодДействия,
	|	ЕСТЬNULL(ВидыРасчета.КатегорияНачисленияИлиНеоплаченногоВремени, ЗНАЧЕНИЕ(Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПовременнаяОплатаТруда)) КАК КатегорияНачисления,
	|	ЕСТЬNULL(ВидыРасчета.ЯвляетсяДоходомВНатуральнойФорме, ЛОЖЬ) КАК НатуральныйКоэффициент
	|ИЗ
	|	#ИмяВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК ВидыРасчета
	|		ПО Начисления.Начисление = ВидыРасчета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО Начисления.Сотрудник = ДанныеОСотруднике.Сотрудник
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаГруппУчетаОсобыхНачисленийИУдержаний КАК НастройкаОсобыхНачислений
	|		ПО Начисления.Начисление = НастройкаОсобыхНачислений.НачислениеУдержание
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДФЛ.СрезПоследних(&КонецМесяцаНачисления) КАК СтавкиВС
	|		ПО СтавкиВС.ВидСтавки = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	|ГДЕ
	|	Начисления.СуммаДохода <> 0
	|	И ЕСТЬNULL(ВидыРасчета.КодДоходаНДФЛ, Начисления.Начисление) <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)";
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ИмяВТНачисления", ИмяВТНачисления);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаСведенийОДоходах(Движения.СведенияОДоходахНДФЛ, Организация, МесяцНачисления, Выборка, ОкончательныйРасчет);
	КонецЦикла;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТПериодыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников";
	Запрос.Выполнить();
	
	Если Записывать Тогда
		// Записываем сразу и не выставляем признак Записывать этому набору записей движений документа.
		Движения.СведенияОДоходахНДФЛ.Записать();
		Движения.СведенияОДоходахНДФЛ.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры


// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ИсчисленныйНалог
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТНДФЛИсчисленный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль: булево (необязательное)
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИсчисленныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ИсчисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = ИсчисленныйНалог;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТНДФЛИсчисленный КАК Налоги";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.НалоговыйПериод КАК НалоговыйПериод,
	|	Налоги.Налог КАК Налог,
	|	Налоги.Доход КАК Доход,
	|	Налоги.ВидСтавки КАК ВидСтавки,
	|	Налоги.УвеличеннаяСтавка КАК УвеличеннаяСтавка,
	|	Налоги.Льгота КАК Льгота,
	|	Налоги.КоличествоЛьгот КАК КоличествоЛьгот,
	|	Налоги.СуммаЛьготы КАК СуммаЛьготы,
	|	Налоги.КодДохода КАК КодДохода,
	|	Налоги.ДоходПолный КАК ДоходПолный,
	|   ВЫБОР
	|   	КОГДА НЕ (ВидыДоходов.Ссылка ЕСТЬ NULL)
	|   	ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.ВоенныйСбор)
	|   	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.НДФЛ)
	|   КОНЕЦ КАК ГруппаУчетаУдержаний
	|ИЗ
	|	ВТНДФЛИсчисленный КАК Налоги
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   Справочник.ВидыДоходовНДФЛ КАК ВидыДоходов
	|   ПО ВидыДоходов.Ссылка = Налоги.КодДохода
	|    И ВидыДоходов.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	|ГДЕ
	|	Налоги.Налог <> 0 ИЛИ Налоги.Доход <> 0 ";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, Выборка, , ОкончательныйРасчет);
		НоваяСтрокаИС = СтрокаИсчисленныйНДФЛ(Движения, Организация, ДатаОперации, Выборка);
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
	Если Записывать Тогда
		Движения.ИсчисленныйНДФЛ.Записать();
		Движения.ИсчисленныйНДФЛ.Записывать = Ложь;
	Иначе
		Движения.ИсчисленныйНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ИсчисленныйНалог 
//			- таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//				Сумма
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//      СоответствиеПодразделенийИРегистраций - необязательный параметр, содержит предварительно построенное
//                                              соответствие подразделений и их регистраций в налоговом органе
//      РегистрацияВНалоговомОргане - необязательный параметр
//      	эти параметры имеет смысл передавать для уменьшения количества запросов данных в том случае, 
//              когда данные о налогах передаются в виде таблицы значений 
//          если параметры не указаны - регистрация в налоговом органе будет вычислена самой процедурой.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ИсчисленныйНалог, СоответствиеПодразделенийИРегистраций = Неопределено, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	Если ИсчисленныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ = ПолучитьФункциональнуюОпцию("ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ", Новый Структура("Организация", Организация));
	Если ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ Тогда
		Если Истина Тогда
			//Относим на основные места работы
			ФизическиеЛицаМассив = ИсчисленныйНалог.ВыгрузитьКолонку("ФизическоеЛицо");
			СотрудникиФизическиеЛица = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(ФизическиеЛицаМассив, Истина, Организация, ДатаОперации);
			Сотрудники = ОбщегоНазначения.ВыгрузитьКолонку(СотрудникиФизическиеЛица, "Сотрудник", Истина);
			
			// По основным сотрудникам запрашиваем сведения о рабочих местах на конец месяца.
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, Истина, Сотрудники, "Подразделение", КонецМесяца(ДатаОперации));
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			| КадровыеДанныеСотрудников.ФизическоеЛицо,
			| КадровыеДанныеСотрудников.Сотрудник,
			| КадровыеДанныеСотрудников.Подразделение
			|ИЗ
			| ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
			
			ТаблицаМестРаботы = Запрос.Выполнить().Выгрузить();
			
		Иначе	
		КонецЕсли;	
		
		СоответствиеОбособленныеПодразделенияИФизическиеЛица = ПолучитьОбособленныеПодразделенияДляНДФЛ(ТаблицаМестРаботы, ДатаОперации);
		
	Иначе
		
		СоответствиеОбособленныеПодразделенияИФизическиеЛица = Новый Соответствие; 
		
	КонецЕсли;	

	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из ИсчисленныйНалог Цикл
		Если СтрокаДанных.Налог = 0 и СтрокаДанных.Доход = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		НоваяСтрока = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаДанных, , ОкончательныйРасчет);
		НоваяСтрокаИС = СтрокаИсчисленныйНДФЛ(Движения, Организация, ДатаОперации, СтрокаДанных);
		НоваяСтрока.ОбособленноеПодразделение = СоответствиеОбособленныеПодразделенияИФизическиеЛица.Получить(СтрокаДанных.ФизическоеЛицо);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		
		Если Записывать Тогда
			Движения.ИсчисленныйНДФЛ.Записать();
			Движения.ИсчисленныйНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ИсчисленныйНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		УдержанныйНалог - Таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//				КодДохода
//				Сумма
//				РегистрацияВНалоговомОргане - необязательная колонка, если ее нет, то регистрация будет вычисляться.
//				РасчетМежрасчетногоПериода - необязательная колонка 
//				ВключатьВДекларациюПоНалогуНаПрибыль - необязательная колонка 
//				ДокументОснование: тип ОпределяемыйТип.ДокументыОснованияНДФЛ - необязательная колонка  
//				СрокПеречисления: тип ПеречислениеСсылка.СрокиПеречисляемогоНалога (необязательное).
//				СуммаВыплаченногоДохода (необязательное)
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет вычисляться по подразделениям и организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьУдержанныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если УдержанныйНалог = Неопределено Или УдержанныйНалог.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	КолонкиУдержанногоНалога = УдержанныйНалог.Колонки;
	ВычислятьСрокПеречисления = КолонкиУдержанногоНалога.Найти("ДокументОснование") <> Неопределено И КолонкиУдержанногоНалога.Найти("СрокПеречисления") = Неопределено;
	БольничныеОтпуска = ?(ВычислятьСрокПеречисления, РасчетЗарплаты.ОснованиеИсчисленияНалогаСОтсроченнойУплатой(УдержанныйНалог.ВыгрузитьКолонку("ДокументОснование")), Новый Соответствие);
	
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из УдержанныйНалог Цикл
		
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЕстьНовыеСтроки = Истина;
		НоваяСтрокаРасчетовНалогоплательщика = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.Удержано);
		
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		УдержанныйНалог - МенеджерВременныхТаблиц, который содержит вр. таблицу ВТНалогУдержанный с полями
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//				РегистрацияВНалоговомОргане, тип СправочникСсылка.РегистрацииВНалоговомОргане (необязательное)
//				ДокументОснование (необязательное)
//				ВключатьВДекларациюПоНалогуНаПрибыль (необязательное)
//				СрокПеречисления: тип ПеречислениеСсылка.СрокиПеречисляемогоНалога (необязательное).
//				СуммаВыплаченногоДохода (необязательное)
//		РегистрацияВНалоговомОргане - необязательный, если не задан, то будет вычисляться по подразделениям и организации.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьУдержанныйНалогПоВременнойТаблице(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, РегистрацияВНалоговомОргане = Неопределено, Записывать = Ложь) Экспорт
	
	Если УдержанныйНалог = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОперации",ДатаОперации);
	Запрос.МенеджерВременныхТаблиц = УдержанныйНалог;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТНалогУдержанный КАК Налоги";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Налоги.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Налоги.КодДохода,
	|	Налоги.ОбособленноеПодразделение,
	|   Налоги.Налог,
	|   Налоги.Доход,
	|   Налоги.ПериодВзаиморасчетов,
	|   Налоги.НалоговыйПериод,
	|   ВЫБОР
	|   	КОГДА НЕ (ВидыДоходов.Ссылка ЕСТЬ NULL)
	|   	ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.ВоенныйСбор)
	|   	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.НДФЛ)
	|   КОНЕЦ КАК ГруппаУчетаУдержаний
	|ИЗ
	|	ВТНалогУдержанный КАК Налоги
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   Справочник.ВидыДоходовНДФЛ КАК ВидыДоходов
	|   ПО ВидыДоходов.Ссылка = Налоги.КодДохода
	|    И ВидыДоходов.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	|ГДЕ
	|	Налоги.Налог <> 0 ИЛИ Налоги.Налог <> 0";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результаты = Запрос.Выполнить().Выгрузить();
	
	
	Для каждого СтрокаТЗ Из Результаты Цикл
	
		НоваяСтрокаРасчетовНалогоплательщика = СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Приход, СтрокаТЗ);
		
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
	Иначе
		Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры


// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		НалогиПереданныеВНалоговыйОрган - таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым
//  	       	СтавкаНалогообложенияРезидента: должно быть непустым.
//  	       	Ставка: должно быть непустым
//				МесяцНалоговогоПериода: должно быть непустым.
//				Подразделение: тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации.
//				Сумма
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьНалогиПереданныеВНалоговыйОрган(Движения, Отказ, Организация, ДатаОперации, НалогиПереданныеВНалоговыйОрган, Записывать = Ложь) Экспорт
	
	Если НалогиПереданныеВНалоговыйОрган = Неопределено Тогда
		Возврат
	КонецЕсли;
	ЕстьНовыеСтроки = Ложь;
	Для Каждого СтрокаДанных Из НалогиПереданныеВНалоговыйОрган Цикл
		Если СтрокаДанных.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьНовыеСтроки = Истина;
		СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвиженияНакопления.Расход, СтрокаДанных, Перечисления.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган);
	КонецЦикла;
	
	Если ЕстьНовыеСтроки Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления
//			- МенеджерВременныхТаблиц, который содержит вр. таблицу ВТУдержания с полями
//				ФизическоеЛицо: должно быть непустым.
//				Удержание - тип ПланВидовРасчетаСсылка.Удержания.
//				Сумма
//		Записывать - булево - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСоциальныеВычетыПоВременнойТаблице(Регистратор, Движения,  Отказ, Организация, ДатаОперации, МесяцНачисления, МенеджерВременныхТаблиц, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт 

КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение
//		МесяцНачисления.
//		Удержания - таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым.
//				КатегорияУдержания - тип ПеречислениеСсылка.КатегорииУдержаний.
//				Удержание - тип ПланВидовРасчетаСсылка.Удержания.
//				Сумма
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьСоциальныеВычетыПоУдержаниям(Регистратор, Движения, Отказ, Организация, ДатаОперации, МесяцНачисления, Удержания, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт 

	Если Удержания.Количество() = 0 Тогда // данных не оказалось
		Возврат	
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("КатегорияУдержания");
	СтруктураПоиска.КатегорияУдержания = Перечисления.КатегорииУдержаний.ДобровольныеВзносыВНПФ;
	Вычеты = Удержания.Скопировать(СтруктураПоиска);
	СтруктураПоиска.КатегорияУдержания = Перечисления.КатегорииУдержаний.ДСВ;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Удержания.Скопировать(СтруктураПоиска), Вычеты);

	Если Вычеты.Количество() = 0 Тогда
		Возврат	
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Удержания", Вычеты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Удержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Удержания.Удержание КАК Удержание,
	|	Удержания.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТУдержания
	|ИЗ
	|	&Удержания КАК Удержания
	|";
	Запрос.Выполнить();
	
	СформироватьСоциальныеВычетыПоВременнойТаблице(Регистратор, Движения, Отказ, Организация, ДатаОперации, МесяцНачисления, Запрос.МенеджерВременныхТаблиц, Записывать, ОкончательныйРасчет);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДанныеДокумента - Таблица значений с колонками
//			ФизическоеЛицо: должно быть непустым
//         	МесяцНалоговогоПериода: должно быть непустым.
//			Подразделение, тип ОпределяемыйТип.ТерриторииВыполненияРаботВОрганизации
//			необязательные колонки с суммами налогов и вычетов:
//          	НалогПоСтавке13, НалогПоСтавке09, НалогПоСтавке35
//          	ЗачтеноАвансовыхПлатежейПоСтавке13, ЗачтеноАвансовыхПлатежейПоСтавке09, ЗачтеноАвансовыхПлатежейПоСтавке35
//              ПримененныйВычетЛичный
//              ПримененныйВычетНаДетей, ПримененныйВычетНаДетейДвойной, ПримененныйВычетНаДетейДвойнойВторой 
//              ПримененныйВычетНаВторогоРебенка, ПримененныйВычетНаВторогоРебенкаДвойной, ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//              ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//              ПримененныйВычетНаДетейИнвалидов, ПримененныйВычетНаДетейИнвалидовДвойной, ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//				ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//				ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение
//              ПримененныйВычетИмущественныйРасходы, ПримененныйВычетИмущественныйПроцентыПоКредитам, ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Процедура СформироватьНалогиВычеты(Движения, Отказ, Организация, ДатаОперации, ДанныеДокумента, Записывать = Ложь, ОкончательныйРасчет = Истина) Экспорт
	
	
	Если ДанныеДокумента = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	КолонкиДанных = ДанныеДокумента.Колонки;
	
	СтрокИсчисленногоНалога = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Количество();

	   СформироватьИсчисленныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, ДанныеДокумента, , , Ложь, ОкончательныйРасчет);

	Если СтрокИсчисленногоНалога < Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Количество() Тогда
		Если Записывать Тогда
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записать();
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Ложь;
		Иначе
			Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать = Истина;
		КонецЕсли;
		
		Если Записывать Тогда
			Движения.ИсчисленныйНДФЛ.Записать();
			Движения.ИсчисленныйНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ИсчисленныйНДФЛ.Записывать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		ДанныеДокумента - Таблица значений с колонками
//			МесяцРегистрации
//			ФизическоеЛицо
//			ГоловнаяОрганизация
//			ИзменитьЛьготыНаДетей
//			ЛьготыНаДетей: таблица значений, соответствующая по структуре регистру СтандартныеВычетыНаДетейНДФЛ
//			ИзменитьЛичнуюЛьготу
//			ЛичныеЛьготы: таблица значений, соответствующая по структуре регистру ЛьготыФизическихЛицНДФЛ
//		Записывать - Булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ЗаполнятьОснование - Булево - признак того, следует ли заполнять реквизит "Основание" для вычетов
//
Процедура СформироватьПрименениеЛьгот(Движения,
	Отказ, ДанныеДокумента, Записывать = Ложь, ЗаполнятьОснование = Истина) Экспорт
	
	Если ДанныеДокумента = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ДанныеДокумента.ИзменитьЛьготыНаДетей Тогда
		Для Каждого ЛьготаНаДетей Из ДанныеДокумента.ЛьготыНаДетей Цикл
			ЗаполнитьЗначенияСвойств(Движения.ЛьготыНаДетейНДФЛ.Добавить(), ЛьготаНаДетей);
		КонецЦикла;
		Если Записывать Тогда
			Движения.ЛьготыНаДетейНДФЛ.Записать();
			Движения.ЛьготыНаДетейНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ЛьготыНаДетейНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ДанныеДокумента.ИзменитьЛичнуюЛьготу Тогда
		Для Каждого ЛичнаяЛьгота Из ДанныеДокумента.ЛичныеЛьготы Цикл
			ЗаполнитьЗначенияСвойств(Движения.ЛьготыФизическихЛицНДФЛ.Добавить(), ЛичнаяЛьгота);
		КонецЦикла;
		Если Записывать Тогда
			Движения.ЛьготыФизическихЛицНДФЛ.Записать();
			Движения.ЛьготыФизическихЛицНДФЛ.Записывать = Ложь;
		Иначе
			Движения.ЛьготыФизическихЛицНДФЛ.Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

// Формирует таблицу расчетной базы НДФЛ за указанный месяц.
// Параметры:
//		Организация
//		МесяцРасчета
//      ФизическиеЛицаМассив - содержит список людей по которым выполняется распределение НДФЛ.
//		РегистраторОграниченияБазы - документ, движениями которого ограничивается получаемая база для распределения.
//
//  Возвращаемое значение:
//  	таблица значений с колонками
//
Функция ПолучитьБазуРасчетаНДФЛ(Организация, МесяцРасчета, ФизическиеЛицаМассив, РегистраторОграниченияБазы = НеОпределено) Экспорт 

	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(МесяцРасчета));
    Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛицаМассив);

	Запрос.Текст = 
    "ВЫБРАТЬ
    |	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
    |	СУММА(СведенияОДоходах.СуммаДохода) КАК Сумма,
    |	СведенияОДоходах.Сотрудник КАК Сотрудник,
	|	СведенияОДоходах.КодДохода КАК КодДохода,
    |	СведенияОДоходах.ПодразделениеСотрудника КАК Подразделение
    |ИЗ
    |	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
    |ГДЕ
    |	СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
    |	И СведенияОДоходах.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
    |	И СведенияОДоходах.Организация = &Организация
    |	И СведенияОДоходах.Период МЕЖДУ &НачалоМесяца И &КонецМесяца
    |	И СведенияОДоходах.ФизическоеЛицо В(&ФизическиеЛица)
    |
    |СГРУППИРОВАТЬ ПО
    |	СведенияОДоходах.ФизическоеЛицо,
    |	СведенияОДоходах.Сотрудник,
	|	СведенияОДоходах.КодДохода,
    |	СведенияОДоходах.ПодразделениеСотрудника";

	// Если базу расчета НДФЛ получаем в пределах движений регистратора (т.е. распределение НДФЛ межрасчетного документа).
	Если РегистраторОграниченияБазы <> НеОпределено Тогда
		Запрос.УстановитьПараметр("РегистраторОграниченияБазы", РегистраторОграниченияБазы);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "НЕ СведенияОДоходах.ДоходМежрасчетногоПериода", "Регистратор = &РегистраторОграниченияБазы");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Предназначена для расчета НДФЛ по записанным в учете данным.
// Параметры:
//      Регистратор - ДокументСсылка - регистратор для которого выполняется расчет НДФЛ.
//		Организация - СправочникСсылка.Организации -
//		МесяцРасчета - дата -
//      МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу со списком людей, по которым выполняется 
//								расчет НДФЛ
//      	ВТФизическиеЛица 
//				ФизическоеЛицо
//		ПервыйМесяцНалоговогоПериода - дата -
//		ПоследнийМесяцНалоговогоПериода - дата -
//		ИсключатьДоходыРегистратора - булево - 
//		ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//		                               (соответствует значению Истина).
//		ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по
//		                                         Регистратору.
//
//  Возвращаемое значение - таблица значений с колонками
//			ФизическоеЛицо
//			МесяцНалоговогоПериода.
//			Подразделение
//			КодВычетаЛичный
//			ПримененныйВычетЛичный
//			ПримененныйВычетНаДетей
//			ПримененныйВычетНаДетейДвойной
//			ПримененныйВычетНаДетейДвойнойВторой
//			ПримененныйВычетНаТретьегоРебенка
//			ПримененныйВычетНаТретьегоРебенкаДвойной
//			ПримененныйВычетНаТретьегоРебенкаДвойнойВторой
//			ПримененныйВычетНаВторогоРебенка
//			ПримененныйВычетНаВторогоРебенкаДвойной
//			ПримененныйВычетНаВторогоРебенкаДвойнойВторой
//			ПримененныйВычетНаДетейИнвалидов
//			ПримененныйВычетНаДетейИнвалидовДвойной
//			ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//			НалогПоСтавке13
//			ЗачтеноАвансовыхПлатежейПоСтавке13
//			НалогПоСтавке13КЗачетуВозврату
//			ПримененныйВычетИмущественныйРасходы
//			ПримененныйВычетИмущественныйПроцентыПоКредитам
//			ПримененныйВычетИмущественныйПроцентыПриПерекредитовании.
//
Функция РассчитатьНалогПоОсновнойСтавке(Регистратор, Организация, МесяцРасчета, МенеджерВременныхТаблиц, Знач ПервыйМесяцНалоговогоПериода = Неопределено, Знач ПоследнийМесяцНалоговогоПериода = Неопределено, ИсключатьДоходыРегистратора = Истина, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МесяцНачисления",НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("НачалоМесяцаРасчета",НачалоМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета",КонецМесяца(МесяцРасчета));
	Запрос.УстановитьПараметр("НачалоГодаРасчета",НачалоГода(МесяцРасчета));
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДоходыРегистратора, Регистратор, Неопределено));
	Запрос.УстановитьПараметр("ОкончательныйРасчет", ОкончательныйРасчет);
	
	СтрокиКРасчету = ЗаполнитьНДФЛ(Регистратор, МенеджерВременныхТаблиц, Организация, МесяцРасчета, ПервыйМесяцНалоговогоПериода, ПоследнийМесяцНалоговогоПериода, ОкончательныйРасчет);
	
	Запрос.УстановитьПараметр("НДФЛ", СтрокиКРасчету);

	
	Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	НДФЛ.ФизическоеЛицо,
	   |	НДФЛ.КодДохода,
	   |	НДФЛ.НалоговыйПериод
	   |ПОМЕСТИТЬ ВТСтрокиРасчета
	   |ИЗ
	   |	&НДФЛ КАК НДФЛ
	   |";
	Запрос.Выполнить();   
	
	//Запросы к данным регистров - начислениям сотрудников и удержанному НДФЛ.
	//Если не по всем документам - нужен отбор по регистратору
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	   |	СведенияОДоходахНДФЛ.КодДохода,
	   |	СведенияОДоходахНДФЛ.НалоговыйПериод,
	   |	СведенияОДоходахНДФЛ.НатуральныйКоэффициент,
	   |	СведенияОДоходахНДФЛ.СуммаДоходаОборот КАК СуммаОборот
	   |
	   |ПОМЕСТИТЬ ВТНачисленияОборотыСКоэффициентом
	   |ИЗ
	   |	РегистрНакопления.СведенияОДоходахНДФЛ.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
	   |			,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))
	   |			) КАК СведенияОДоходахНДФЛ
	   |;
	   |
	   |///////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	   |	СведенияОДоходахНДФЛ.КодДохода,
	   |	СведенияОДоходахНДФЛ.НалоговыйПериод,
	   |	СУММА(
	   |		ВЫБОР КОГДА СведенияОДоходахНДФЛ.НатуральныйКоэффициент
	   |		 ТОГДА СведенияОДоходахНДФЛ.СуммаОборот
	   |		 ИНАЧЕ 0
	   |		КОНЕЦ
	   |	) КАК СуммаНатуральныйКоэффициентОборот,
	   |	СУММА(СведенияОДоходахНДФЛ.СуммаОборот) КАК СуммаОборот
	   |ПОМЕСТИТЬ ВТНачисленияОбороты
	   |ИЗ  ВТНачисленияОборотыСКоэффициентом КАК СведенияОДоходахНДФЛ
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	   |	СведенияОДоходахНДФЛ.КодДохода,
	   |	СведенияОДоходахНДФЛ.НалоговыйПериод
	   |;
	   |///////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ИсчисленныйНДФЛОборот.ФизическоеЛицо,
	   |	ИсчисленныйНДФЛОборот.КодДохода КАК КодДохода,
	   |	ИсчисленныйНДФЛОборот.НалоговыйПериод КАК НалоговыйПериод,
	   |	ИсчисленныйНДФЛОборот.ДоходОборот КАК ДоходДо,
	   |	ИсчисленныйНДФЛОборот.НалогОборот КАК НалогДо
	   |
	   |ПОМЕСТИТЬ ВТИсчисленныйНДФЛОборот
	   |ИЗ
	   |	РегистрНакопления.ИсчисленныйНДФЛ.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
	   |			,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))) КАК ИсчисленныйНДФЛОборот
	   |";	
	
	Если ОкончательныйРасчет И ИсключатьДоходыРегистратора Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("СуммаОборот");
		ПоляСуммирования.Добавить("ДоходДо");
		ПоляСуммирования.Добавить("НалогДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ИсключаемыйРегистратор", ПоляСуммирования, "<>");
	ИначеЕсли НЕ ОкончательныйРасчет И Регистратор <> Неопределено Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("СуммаОборот");
		ПоляСуммирования.Добавить("ДоходДо");
		ПоляСуммирования.Добавить("НалогДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, ".Проведен", ПоляСуммирования, "ЕСТЬ NULL");
	КонецЕсли;
	
	Запрос.Выполнить(); 
	
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("ВидСтавки","ВидСтавкиНДФЛ");
	ВыбираемыеПоляРС.Вставить("Ставка","СтавкаНДФЛ");
	ВыбираемыеПоляРС.Вставить("Порог","ПорогСтавкаНДФЛ");
	ПоляСвязей = Новый Структура();
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТИсторияНормативныхВеличин", "ВТСтрокиРасчета", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.СтавкиНДФЛ", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();

	Запрос.Текст = 
	   //|////////////////////////////////////////////////////////////////////////////////
	   "ВЫБРАТЬ
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.КодДохода,
	   |	НачисленияОбороты.НалоговыйПериод,
	   |	СУММА(НачисленияОбороты.СуммаНатуральныйКоэффициентОборот) КАК ДоходНатуральныйКоэффициент,
	   |	СУММА(НачисленияОбороты.СуммаОборот) КАК Доход
	   |ПОМЕСТИТЬ ВТБаза
	   |ИЗ
	   |	ВТНачисленияОбороты КАК НачисленияОбороты
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = НачисленияОбороты.ФизическоеЛицо
	   |     И СтрокиРасчета.КодДохода = НачисленияОбороты.КодДохода
	   |     И СтрокиРасчета.НалоговыйПериод = НачисленияОбороты.НалоговыйПериод
	   |СГРУППИРОВАТЬ ПО
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.КодДохода,
	   |	НачисленияОбороты.НалоговыйПериод
	   |;
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод,
	   |	СУММА(ТаблицаБаза.Доход) КАК ДоходПолный
	   |ПОМЕСТИТЬ ВТБазаПолная
	   |ИЗ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	   |    ПО ТаблицаБаза.КодДохода = ВидыДоходовНДФЛ.Ссылка
	   |ГДЕ
	   |    ВидыДоходовНДФЛ.ВидСтавкиРезидента <> ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	   |СГРУППИРОВАТЬ ПО
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод
	   |;
	   |	   
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.КодДохода,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	ЕСТЬNULL(ТаблицаБаза.Доход, 0) КАК Доход,
	   |	ЕСТЬNULL(ТаблицаБаза.ДоходНатуральныйКоэффициент, 0) КАК ДоходНатуральныйКоэффициент,
	   |	ЕСТЬNULL(ТаблицаБазаПолная.ДоходПолный, 0 ) КАК ДоходПолный,
	   |	ЕСТЬNULL(ТаблицаДоходНалогДо.ДоходДо, 0) КАК ДоходДо,
	   |	ЕСТЬNULL(ТаблицаДоходНалогДо.НалогДо, 0) КАК НалогДо,
	   |    ВидыДоходовНДФЛ.ВидСтавкиРезидента КАК ВидСтавки,
	   |    ВидыДоходовНДФЛ.ВидСтавкиУвеличенная КАК УвеличеннаяСтавка,
	   |    ЕСТЬNULL(История1.СтавкаНДФЛ, 0) КАК СтавкаНДФЛ,
	   |    ЕСТЬNULL(История2.СтавкаНДФЛ, 0) КАК СтавкаНДФЛУвеличенная,
	   |    ЕСТЬNULL(История2.ПорогСтавкаНДФЛ, 0) КАК ПорогСтавкаНДФЛУвеличенная
	   |ПОМЕСТИТЬ ВТСтрокиРасчетаСДанными 
	   |ИЗ
	   |	ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    Справочник.ВидыДоходовНДФЛ КАК ВидыДоходовНДФЛ
	   |    ПО СтрокиРасчета.КодДохода = ВидыДоходовНДФЛ.Ссылка
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаБаза.ФизическоеЛицо
	   |     И СтрокиРасчета.КодДохода = ТаблицаБаза.КодДохода
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаБаза.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБазаПолная КАК ТаблицаБазаПолная
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаБазаПолная.ФизическоеЛицо
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаБазаПолная.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТИсчисленныйНДФЛОборот КАК ТаблицаДоходНалогДо
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТаблицаДоходНалогДо.ФизическоеЛицо
	   |     И СтрокиРасчета.КодДохода = ТаблицаДоходНалогДо.КодДохода
	   |     И СтрокиРасчета.НалоговыйПериод = ТаблицаДоходНалогДо.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТИсторияНормативныхВеличин КАК История1
	   |    ПО ВидыДоходовНДФЛ.ВидСтавкиРезидента = История1.ВидСтавкиНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = История1.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТИсторияНормативныхВеличин КАК История2
	   |    ПО ВидыДоходовНДФЛ.ВидСтавкиУвеличенная = История2.ВидСтавкиНДФЛ
	   |     И СтрокиРасчета.НалоговыйПериод = История2.НалоговыйПериод
	   |	
	   |;
	   |";
	   
	Запрос.Выполнить();
	
	ПолучитьСписокЛьгот(Запрос, Организация, МесяцРасчета, ОкончательныйРасчет);
	
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.КодДохода,
	   |	СтрокиРасчета.КодДохода.Код КАК КодДоходаКод,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	СтрокиРасчета.Доход,
	   |	СтрокиРасчета.ДоходНатуральныйКоэффициент,
	   |	СтрокиРасчета.ДоходПолный,
	   |	0 КАК Налог,
	   |	0 КАК СуммаЛьготы,
	   |    ВЫБОР
       |   	 КОГДА НЕ (ВидыДоходов.Ссылка ЕСТЬ NULL)
	   |   	 ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ВоенныйСбор)
	   |   	 ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	   |    КОНЕЦ КАК ВидУдержания,
	   |	СтрокиРасчета.ДоходДо,
	   |	СтрокиРасчета.НалогДо,
	   |    СтрокиРасчета.ВидСтавки,
	   |    СтрокиРасчета.УвеличеннаяСтавка,
	   |    СтрокиРасчета.СтавкаНДФЛ,
	   |    СтрокиРасчета.СтавкаНДФЛУвеличенная,
	   |    СтрокиРасчета.ПорогСтавкаНДФЛУвеличенная,
	   |	ЕСТЬNULL(ЛьготыСотрудников.Льгота, ЗНАЧЕНИЕ(Справочник.ВидыЛьготПоНДФЛ.ПустаяСсылка)) КАК Льгота,
	   |	ЕСТЬNULL(ЛьготыСотрудников.КоличествоЛьгот, 0) КАК КоличествоЛьгот,
	   |	ЕСТЬNULL(ЛьготыСотрудников.КоличествоПороговЛьгот, 0) КАК КоличествоПороговЛьгот,
	   |    ЕСТЬNULL(ЛьготыСотрудников.ПорогЛьготНДФЛ, 0) КАК ПорогЛьготНДФЛ,
	   |    ЕСТЬNULL(ЛьготыСотрудников.СтавкаЛьготНДФЛ, 0) КАК СтавкаЛьготНДФЛ,
	   |    ЕСТЬNULL(ЛьготыСотрудников.РазмерПрожиточныеМинимумы, 0) КАК РазмерПрожиточныеМинимумы,
	   |    ЕСТЬNULL(ЛьготыСотрудников.ДоходЛьготы, 0) КАК ДоходЛьготы
	   |ИЗ
	   |	ВТСтрокиРасчетаСДанными КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТЛьготыСотрудников КАК ЛьготыСотрудников
	   |	ПО ЛьготыСотрудников.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |	 И ЛьготыСотрудников.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |	 И СтрокиРасчета.КодДохода.УчитыватьНСЛ
	   |   ЛЕВОЕ СОЕДИНЕНИЕ
	   |   Справочник.ВидыДоходовНДФЛ КАК ВидыДоходов
	   |   ПО ВидыДоходов.Ссылка = СтрокиРасчета.КодДохода
	   |    И ВидыДоходов.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	   |";
	
	РезультатНДФЛ = Запрос.Выполнить().Выгрузить();	   
	
	Для каждого ВыборкаНДФЛ из РезультатНДФЛ Цикл
		
		//Данные запроса
		ДоходДо			= ВыборкаНДФЛ.ДоходДо;
		НалогДо			= ВыборкаНДФЛ.НалогДо;
		Доход			= ВыборкаНДФЛ.Доход;
		ДоходПолный		= ВыборкаНДФЛ.ДоходПолный;
		
		ДоходНатура 	= ВыборкаНДФЛ.ДоходНатуральныйКоэффициент;
		
		СтавкаНДФЛ					= ВыборкаНДФЛ.СтавкаНДФЛ;
		СтавкаНДФЛУвеличенная		= ВыборкаНДФЛ.СтавкаНДФЛУвеличенная;
		ПорогСтавкаНДФЛУвеличенная	= ВыборкаНДФЛ.ПорогСтавкаНДФЛУвеличенная;
		
		Льгота					= ВыборкаНДФЛ.Льгота;
		КоличествоЛьгот			= ВыборкаНДФЛ.КоличествоЛьгот;
		КоличествоПороговЛьгот	= ВыборкаНДФЛ.КоличествоПороговЛьгот;
		ПорогЛьготНДФЛ			= ВыборкаНДФЛ.ПорогЛьготНДФЛ;
		СтавкаЛьготНДФЛ			= ВыборкаНДФЛ.СтавкаЛьготНДФЛ;
		РазмерПМ				= ВыборкаНДФЛ.РазмерПрожиточныеМинимумы;
		ДоходЛьготы				= ВыборкаНДФЛ.ДоходЛьготы;
		
		
		
		//Учет ЕСВ 
		ВзносыВсего = 0;  //Всего учитываеться взносов для работника в этом периоде
		СуммаВзносов = 0; //в т.ч. по данному виду дохода НДФЛ
		//ВыборкаЕСВ.Сбросить();
		//СтуктураПоиска = Новый Структура("ФизическоеЛицо, НалоговыйПериод");
		//СтуктураПоиска.ФизическоеЛицо = ВыборкаНДФЛ.ФизическоеЛицо;
		//СтуктураПоиска.НалоговыйПериод = ВыборкаНДФЛ.НалоговыйПериод;
		//Пока ВыборкаЕСВ.НайтиСледующий(СтуктураПоиска) Цикл
		//	К = 1;
		//	Если ВыборкаЕСВ.ЧастьБазыЕСВ = ВыборкаЕСВ.БазаЕСВ Тогда
		//		//Если весь ЕСВ данного вида относится к данному виду дохода НДФЛ - учитываем полностью
		//		К = 1;
		//	ИначеЕсли ВыборкаЕСВ.ЧастьБазыЕСВ < ВыборкаЕСВ.БазаЕСВ Тогда	
		//		К = ВыборкаЕСВ.ЧастьБазыЕСВ/ВыборкаЕСВ.БазаЕСВ;
		//	КонецЕсли;	
		//	
		//	ВзносыВсего = ВзносыВсего + К*ВыборкаЕСВ.СуммаЕСВ;
		//	Если ВыборкаНДФЛ.ДоходНДФЛ = ВыборкаЕСВ.ДоходНДФЛ Тогда
		//		СуммаВзносов = СуммаВзносов + К*ВыборкаЕСВ.СуммаЕСВ;
		//	КонецЕсли;	

		//КонецЦикла;
		//ВзносыВсего  = Окр(ВзносыВсего, 2);
		//СуммаВзносов = Окр(СуммаВзносов, 2);
		
		//Расчет льгот
		СуммаЛьготы = 0;
		Если ЗначениеЗаполнено(Льгота) 
		   И ДоходЛьготы <= КоличествоПороговЛьгот * ПорогЛьготНДФЛ 
		   И Доход <> 0
		   Тогда			
			КоэфЛьготы = ?(ДоходЛьготы = 0, 0, Окр(Доход/ДоходЛьготы,5));
			СуммаЛьготы = Окр(КоличествоЛьгот * РазмерПМ * СтавкаЛьготНДФЛ * КоэфЛьготы,2);
		Иначе
				
			КоличествоЛьгот = 0;
			Льгота	= Справочники.ВидыЛьготПоНДФЛ.ПустаяСсылка();
			
		КонецЕсли;		
		
		//Расчет
		БазаНалога = Окр(Доход, 2) - СуммаЛьготы - СуммаВзносов;
		Налог = Окр(Макс(БазаНалога * СтавкаНДФЛ, 0), 5);
		
		//ст. 167.1 Налогового кодекса - если общий доход превышает 10-ти кратный размер минимальной зарплаты,
		//то к сумме превышения применяется ставка 17%.
		//Т.е. к налогу по ставке 15% (уже рассчитано) надо доначислить 2% от суммы превышения.
		//Если в месяце есть несколько видов дохода - учтем по каждому пропорционально?
		Если СтавкаНДФЛУвеличенная <> 0 И СтавкаНДФЛУвеличенная <> СтавкаНДФЛ И ДоходПолный <> 0 И (ДоходПолный <> ВзносыВсего) И Доход <> 0 Тогда
			Превышение = Макс(ДоходПолный - ВзносыВсего - ПорогСтавкаНДФЛУвеличенная,0)*БазаНалога/(ДоходПолный - ВзносыВсего);
			СтавкаПревышение = Макс(СтавкаНДФЛУвеличенная - СтавкаНДФЛ,0);
			НалогПревышение = Окр(Превышение*СтавкаПревышение,5);
			Налог = Налог + НалогПревышение;
		Иначе
			Превышение = 0;
			НалогПревышение = 0;
		КонецЕсли;
		
		Если ДоходНатура <> 0 и Доход <> 0 Тогда
			ДоходБезНатуры = Доход; 
			Доля = ДоходНатура/Доход;
			Натура15 = Окр(ДоходНатура*(1/(1-СтавкаНДФЛ)-1),2);
			Натура17 = Окр(Превышение*Доля*(1/(1-СтавкаНДФЛУвеличенная)-1) - Превышение*Доля*(1/(1-СтавкаНДФЛ)-1),2);
				
			Доход = Окр(Доход + Натура15 + Натура17,2); 
			БазаНалога = Окр(Доход, 2) - СуммаЛьготы - СуммаВзносов;
				
			Налог = Налог + Окр(Натура15*СтавкаНДФЛ,2);
			НалогПревышение = Окр((Превышение+Натура17)*Макс(СтавкаНДФЛУвеличенная - СтавкаНДФЛ,0),2);
		КонецЕсли;
		
		Налог = Окр(Налог,2);
		
		//Запись расчетных величин
		ВыборкаНДФЛ.Доход = Доход - ДоходДо;
		ВыборкаНДФЛ.Налог = Налог - НалогДо;
		ВыборкаНДФЛ.Льгота = ?(СуммаЛьготы = 0, "", Льгота);
		ВыборкаНДФЛ.КоличествоЛьгот = КоличествоЛьгот;
		ВыборкаНДФЛ.СуммаЛьготы = МИН(СуммаЛьготы, Доход);
		ВыборкаНДФЛ.ДоходПолный = ДоходПолный;
		
	КонецЦикла;	

	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТСтрокиРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияОборотыСКоэффициентом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИсчисленныйНДФЛОборот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИсторияНормативныхВеличин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБазаПолная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСтрокиРасчетаСДанными
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЛьготыСотрудников
	|";
	Запрос.Выполнить();
	
	
	//
	//
	//КодыВычетовРезидентов = Новый Массив;
	//КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код403);
	//КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	//КодыВычетовРезидентов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);
	//Запрос.УстановитьПараметр("КодыВычетовРезидентов", КодыВычетовРезидентов);
	//
	//ЭтоРасчетПоДоходамТекущегоМесяца = ПервыйМесяцНалоговогоПериода = Неопределено Или ПоследнийМесяцНалоговогоПериода = Неопределено;
	//
	//Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда

	//	// Получим ПервыйМесяцНалоговогоПериода и ПоследнийМесяцНалоговогоПериода.
	//	Если ОкончательныйРасчет Тогда
	//		Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	МАКСИМУМ(СведенияОДоходах.МесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
	//		|	МИНИМУМ(СведенияОДоходах.МесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
	//		|ИЗ
	//		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходах
	//		|ГДЕ
	//		|	СведенияОДоходах.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета
	//		|	И СведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//		|	И СведенияОДоходах.ФизическоеЛицо В
	//		|			(ВЫБРАТЬ
	//		|				СписокСотрудников.ФизическоеЛицо
	//		|			ИЗ
	//		|				ВТФизическиеЛица КАК СписокСотрудников)";
	//	Иначе
	//		Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	МАКСИМУМ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК ПоследнийМесяцНалоговогоПериода,
	//		|	МИНИМУМ(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода) КАК ПервыйМесяцНалоговогоПериода
	//		|ИЗ
	//		|	РегистрНакопления.СведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	//		|ГДЕ
	//		|	СведенияОДоходахНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//		|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета
	//		|	И СведенияОДоходахНДФЛ.ФизическоеЛицо В
	//		|			(ВЫБРАТЬ
	//		|				СписокСотрудников.ФизическоеЛицо
	//		|			ИЗ
	//		|				ВТФизическиеЛица КАК СписокСотрудников)
	//		|	И СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода";
	//	КонецЕсли;
	//	Выборка = Запрос.Выполнить().Выбрать();

	//	Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ПоследнийМесяцНалоговогоПериода) Тогда
	//		ПоследнийМесяцНалоговогоПериода = КонецМесяца(Выборка.ПоследнийМесяцНалоговогоПериода);
	//		ПервыйМесяцНалоговогоПериода = НачалоМесяца(Выборка.ПервыйМесяцНалоговогоПериода);
	//	Иначе
	//		ПоследнийМесяцНалоговогоПериода = КонецМесяца(МесяцРасчета);
	//		ПервыйМесяцНалоговогоПериода = НачалоМесяца(МесяцРасчета);
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//Запрос.УстановитьПараметр("КонецПериодаРасчета", КонецМесяца(ПоследнийМесяцНалоговогоПериода));
	//Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(ПервыйМесяцНалоговогоПериода));
	//Запрос.УстановитьПараметр("КонецГодаПериодаРасчета", КонецГода(ПоследнийМесяцНалоговогоПериода));
	//Запрос.УстановитьПараметр("НачалоПредшествующегоГода", ДобавитьМесяц(НачалоГода(ПервыйМесяцНалоговогоПериода), -12));
	//
	//// Таблица ВТДатыПоМесяцам: список дат налоговых периодов, в которых рассчитывается налог.
	//ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоМесяца(ПоследнийМесяцНалоговогоПериода),,,"ВТДатыПоМесяцам");
	//
	//// Таблица ВТПериодыПоГодам: список налоговых периодов (в виде даты начала года), в которых рассчитывается налог.
	//ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПервыйМесяцНалоговогоПериода), НачалоГода(ПоследнийМесяцНалоговогоПериода), "ГОД", "НачалоНалоговогоПериода","ВТПериодыПоГодам");
	//
	//Если ЭтоРасчетПоДоходамТекущегоМесяца Тогда
	//	ТекстЗапроса = 
	//	"ВЫБРАТЬ
	//	|	ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
	//	|	Месяцы.Период КАК МесяцНалоговогоПериода,
	//	|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
	//	|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода
	//	|ПОМЕСТИТЬ ВТПериодыНалогаНаДоходы
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		ПериодыДохода.ФизическоеЛицо КАК ФизическоеЛицо,
	//	|		МАКСИМУМ(НАЧАЛОПЕРИОДА(ПериодыДохода.Период, МЕСЯЦ)) КАК ПериодМакс,
	//	|		МИНИМУМ(ВЫБОР
	//	|				КОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.ПериодРегистрации, МЕСЯЦ) = &НачалоМесяцаРасчета
	//	|					ТОГДА НАЧАЛОПЕРИОДА(ПериодыДохода.Период, ГОД)
	//	|				ИНАЧЕ &НачалоГодаРасчета
	//	|			КОНЕЦ) КАК ПериодМин
	//	|	ИЗ
	//	|		(ВЫБРАТЬ
	//	|			Доходы.МесяцНалоговогоПериода КАК Период,
	//	|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	//	|			Доходы.Период КАК ПериодРегистрации
	//	|		ИЗ
	//	|			РегистрНакопления.СведенияОДоходахНДФЛ КАК Доходы
	//	|		ГДЕ
	//	|			Доходы.Период МЕЖДУ &НачалоГодаРасчета И &КонецМесяцаРасчета
	//	|			И &ОкончательныйРасчетДоходы
	//	|			И Доходы.Регистратор <> &ИсключаемыйРегистратор
	//	|			И Доходы.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//	|			И Доходы.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	//	|			И НЕ Доходы.КодДохода.НеОблагаетсяУНалоговогоАгента
	//	|			И Доходы.ФизическоеЛицо В
	//	|					(ВЫБРАТЬ
	//	|						СписокСотрудников.ФизическоеЛицо
	//	|					ИЗ
	//	|						ВТФизическиеЛица КАК СписокСотрудников)) КАК ПериодыДохода
	//	|	
	//	|	СГРУППИРОВАТЬ ПО
	//	|		ПериодыДохода.ФизическоеЛицо) КАК ПериодыДохода
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
	//	|		ПО (Месяцы.Период МЕЖДУ ПериодыДохода.ПериодМин И ПериодыДохода.ПериодМакс)
	//	|
	//	|ИНДЕКСИРОВАТЬ ПО
	//	|	ФизическоеЛицо";
	//	Если ОкончательныйРасчет Тогда
	//		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
	//	Иначе
	//		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы","(Доходы.ДоходМежрасчетногоПериода ИЛИ Доходы.Период < &НачалоМесяцаРасчета)");
	//	КонецЕсли;
	//Иначе 
	//	// Расчет за конкретные месяцы налогового периода.
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Работники.ФизическоеЛицо КАК ФизическоеЛицо,
	//	|	Месяцы.Период КАК МесяцНалоговогоПериода,
	//	|	НАЧАЛОПЕРИОДА(Месяцы.Период, ГОД) КАК НачалоГодаНалоговогоПериода,
	//	|	КОНЕЦПЕРИОДА(Месяцы.Период, ГОД) КАК КонецГодаНалоговогоПериода
	//	|ПОМЕСТИТЬ ВТПериодыНалогаНаДоходы
	//	|ИЗ
	//	|	ВТФизическиеЛица КАК Работники
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоМесяцам КАК Месяцы
	//	|		ПО (ИСТИНА)";
	//КонецЕсли;
	//Запрос.Выполнить();
	//
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ПериодыНалогаНаДоходы.ФизическоеЛицо,
	//|	ПериодыНалогаНаДоходы.МесяцНалоговогоПериода КАК Период
	//|ПОМЕСТИТЬ ВТПериодыСрезаВычетов
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК ПериодыНалогаНаДоходы
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Обороты.МесяцНалоговогоПериода,
	//|	Обороты.ДатаПолученияДохода,
	//|	Обороты.Регистратор,
	//|	Обороты.Подразделение,
	//|	Обороты.Период,
	//|	Обороты.СтавкаНалогообложения,
	//|	Обороты.ДоходМежрасчетногоПериода,
	//|	Обороты.ИсточникДоходаЗаПределамиРФ,
	//|	Обороты.КодВычета.НеПредоставляетсяНерезидентам КАК НеПредоставляетсяНерезидентам,
	//|	Обороты.КодВычета,
	//|	Обороты.КодДохода,
	//|	Обороты.СуммаДохода,
	//|	Обороты.СуммаВычета
	//|ПОМЕСТИТЬ ВТСведенияОДоходахНДФЛ
	//|ИЗ
	//|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	//|ГДЕ
	//|	Обороты.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	//|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//|	И Обороты.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	//|	И Обороты.ФизическоеЛицо В
	//|			(ВЫБРАТЬ
	//|				СписокСотрудников.ФизическоеЛицо
	//|			ИЗ
	//|				ВТФизическиеЛица КАК СписокСотрудников)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	//|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
	//|	СведенияОДоходахНДФЛ.КодДохода,
	//|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	//|	СведенияОДоходахНДФЛ.ДатаПолученияДохода
	//|ПОМЕСТИТЬ ВТСтрокиУчета
	//|ИЗ
	//|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	//|ГДЕ
	//|	СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаИзмененияИсчисленияДляИностранцев";
	//Запрос.Выполнить();
	//
	//СоздатьВТСтандартныеВычетыПоНДФЛЗаПериод(Запрос.МенеджерВременныхТаблиц, Ложь, НачалоМесяца(Макс(МесяцРасчета, ПоследнийМесяцНалоговогоПериода)), "ВТПериодыСрезаВычетов");
	//
	//СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета", "УчитыватьИзмененияСтатусаДляРасчета");

	//// Таблица ВТСтавкиНалогаЧислом: список значений перечисления НДФЛСтавки и соответствующие числовые значения в долях единицы.
	//СоздатьВТСтавкиНалогаЧислом(Запрос.МенеджерВременныхТаблиц);
	//
	//ТекстЗапроса = 
	//"ВЫБРАТЬ
	//|	СтандартныеВычетыПоНДФЛЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	СтандартныеВычетыПоНДФЛЗаПериод.Месяц КАК МесяцНалоговогоПериода,
	//|	НАЧАЛОПЕРИОДА(СтандартныеВычетыПоНДФЛЗаПериод.Месяц, ГОД) КАК НачалоГодаНалоговогоПериода,
	//|	СтандартныеВычетыПоНДФЛЗаПериод.КодВычета КАК КодВычета,
	//|	СтандартныеВычетыПоНДФЛЗаПериод.Количество КАК КоличествоДетей
	//|ПОМЕСТИТЬ ВТПраваНаВычетыНаДетей
	//|ИЗ
	//|	ВТСтандартныеВычетыПоНДФЛЗаПериод КАК СтандартныеВычетыПоНДФЛЗаПериод
	//|ГДЕ
	//|	НЕ СтандартныеВычетыПоНДФЛЗаПериод.ЛичныйВычет
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СтандартныеВычетыПоНДФЛЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	СтандартныеВычетыПоНДФЛЗаПериод.Месяц КАК МесяцНалоговогоПериода,
	//|	НАЧАЛОПЕРИОДА(СтандартныеВычетыПоНДФЛЗаПериод.Месяц, ГОД) КАК НачалоГодаНалоговогоПериода,
	//|	СтандартныеВычетыПоНДФЛЗаПериод.КодВычета КАК КодВычета
	//|ПОМЕСТИТЬ ВТПраваНаЛичныеВычеты
	//|ИЗ
	//|	ВТСтандартныеВычетыПоНДФЛЗаПериод КАК СтандартныеВычетыПоНДФЛЗаПериод
	//|ГДЕ
	//|	СтандартныеВычетыПоНДФЛЗаПериод.ЛичныйВычет
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ПериодыРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	ПериодыРегистра.МесяцНалоговогоПериода,
	//|	ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус,
	//|	ВЫБОР
	//|		КОГДА ПериодыРегистра.МесяцНалоговогоПериода < &ДатаЗакона285ФЗ
	//|			ТОГДА ВЫБОР
	//|					КОГДА ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы))
	//|						ТОГДА ЛОЖЬ
	//|					ИНАЧЕ ИСТИНА
	//|				КОНЕЦ
	//|		КОГДА ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК РезидентРФ
	//|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецГода
	//|ИЗ
	//|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|		Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	//|		Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|		МАКСИМУМ(СтатусНалогоплательщика.Период) КАК Период
	//|	ИЗ
	//|		ВТПериодыНалогаНаДоходы КАК Физлица
	//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	//|			ПО Физлица.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	//|				И Физлица.КонецГодаНалоговогоПериода >= СтатусНалогоплательщика.Период
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		Физлица.ФизическоеЛицо,
	//|		Физлица.МесяцНалоговогоПериода) КАК ПериодыРегистра
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	//|		ПО ПериодыРегистра.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	//|			И ПериодыРегистра.Период = СтатусНалогоплательщика.Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ПериодыРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	ПериодыРегистра.МесяцНалоговогоПериода,
	//|	ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус,
	//|	ВЫБОР
	//|		КОГДА ПериодыРегистра.МесяцНалоговогоПериода < &ДатаЗакона285ФЗ
	//|			ТОГДА ВЫБОР
	//|					КОГДА ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы))
	//|						ТОГДА ЛОЖЬ
	//|					ИНАЧЕ ИСТИНА
	//|				КОНЕЦ
	//|		КОГДА ЕСТЬNULL(СтатусНалогоплательщика.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК РезидентРФ
	//|ПОМЕСТИТЬ ВТРезидентствоФизлицНаКонецМесяца
	//|ИЗ
	//|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|		Физлица.ФизическоеЛицо КАК ФизическоеЛицо,
	//|		Физлица.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|		МАКСИМУМ(СтатусНалогоплательщика.Период) КАК Период
	//|	ИЗ
	//|		ВТПериодыНалогаНаДоходы КАК Физлица
	//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	//|			ПО Физлица.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	//|				И Физлица.МесяцНалоговогоПериода >= СтатусНалогоплательщика.Период
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		Физлица.ФизическоеЛицо,
	//|		Физлица.МесяцНалоговогоПериода) КАК ПериодыРегистра
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизическихЛицКакНалогоплательщиковНДФЛ КАК СтатусНалогоплательщика
	//|		ПО ПериодыРегистра.ФизическоеЛицо = СтатусНалогоплательщика.ФизическоеЛицо
	//|			И ПериодыРегистра.Период = СтатусНалогоплательщика.Период
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.НачалоГодаНалоговогоПериода,
	//|	Периоды.КонецГодаНалоговогоПериода,
	//|	ВЫБОР
	//|		КОГДА РезидентствоФизлицНаКонецГода.РезидентРФ
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ РезидентствоФизлицНаКонецМесяца.РезидентРФ
	//|	КОНЕЦ КАК Резидент,
	//|	ВЫБОР
	//|		КОГДА Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	//|			ТОГДА ВЫБОР
	//|					КОГДА РезидентствоФизлицНаКонецГода.РезидентРФ
	//|						ТОГДА ИСТИНА
	//|					ИНАЧЕ РезидентствоФизлицНаКонецМесяца.РезидентРФ
	//|				КОНЕЦ
	//|		КОГДА РезидентствоФизлицНаКонецГода.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	//|			ТОГДА ИСТИНА
	//|		КОГДА РезидентствоФизлицНаКонецМесяца.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ПрименяетсяСтавкаПункта1Статьи224НК
	//|ПОМЕСТИТЬ ВТПериодыФизлиц
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецМесяца КАК РезидентствоФизлицНаКонецМесяца
	//|		ПО Периоды.ФизическоеЛицо = РезидентствоФизлицНаКонецМесяца.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = РезидентствоФизлицНаКонецМесяца.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезидентствоФизлицНаКонецГода КАК РезидентствоФизлицНаКонецГода
	//|		ПО Периоды.ФизическоеЛицо = РезидентствоФизлицНаКонецГода.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = РезидентствоФизлицНаКонецГода.МесяцНалоговогоПериода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДатыРегистра.НачалоНалоговогоПериода КАК НачалоНалоговогоПериода,
	//|	ДатыРегистра.КодВычета КАК КодВычета,
	//|	ЕСТЬNULL(РазмерВычетов.Размер, 0) КАК Размер,
	//|	ЕСТЬNULL(РазмерВычетов.ОграничениеПоДоходам, 0) КАК ОграничениеПоДоходам
	//|ПОМЕСТИТЬ ВТРазмерыСтандартныхВычетов
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		Периоды.НачалоНалоговогоПериода КАК НачалоНалоговогоПериода,
	//|		ВидыВычетов.Ссылка КАК КодВычета,
	//|		МАКСИМУМ(РазмерВычетов.Период) КАК ПериодРегистра
	//|	ИЗ
	//|		ВТПериодыПоГодам КАК Периоды
	//|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыВычетовНДФЛ КАК ВидыВычетов
	//|			ПО (ИСТИНА)
	//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерВычетовНДФЛ КАК РазмерВычетов
	//|			ПО (ВидыВычетов.Ссылка = РазмерВычетов.КодВычета)
	//|				И Периоды.НачалоНалоговогоПериода >= РазмерВычетов.Период
	//|	ГДЕ
	//|		ВидыВычетов.ГруппаВычета В (ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Стандартные), ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей))
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		Периоды.НачалоНалоговогоПериода,
	//|		ВидыВычетов.Ссылка) КАК ДатыРегистра
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерВычетовНДФЛ КАК РазмерВычетов
	//|		ПО ДатыРегистра.ПериодРегистра = РазмерВычетов.Период
	//|			И ДатыРегистра.КодВычета = РазмерВычетов.КодВычета
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДатыРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	ДатыРегистра.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ПрименятьВычеты
	//|ПОМЕСТИТЬ ВТПрименениеСтандартныхВычетов
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		МАКСИМУМ(ПрименениеВычетов.Период) КАК ПериодСреза,
	//|		Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|		Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода
	//|	ИЗ
	//|		ВТПериодыФизлиц КАК Периоды
	//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛ КАК ПрименениеВычетов
	//|			ПО Периоды.МесяцНалоговогоПериода >= ПрименениеВычетов.Период
	//|				И Периоды.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		Периоды.ФизическоеЛицо,
	//|		Периоды.МесяцНалоговогоПериода) КАК ДатыРегистра
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрименениеСтандартныхВычетовПоНДФЛ КАК ПрименениеВычетов
	//|		ПО ДатыРегистра.ПериодСреза = ПрименениеВычетов.Период
	//|			И ДатыРегистра.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Вычеты.ФизическоеЛицо,
	//|	Вычеты.МесяцНалоговогоПериода,
	//|	Вычеты.КодВычета,
	//|	Вычеты.НалоговыйПериод,
	//|	СУММА(Вычеты.Размер) КАК Размер
	//|ПОМЕСТИТЬ ВТПравоНаИмущественныеВычеты
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	//|		НАЧАЛОПЕРИОДА(Обороты.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//|		Обороты.КодВычета КАК КодВычета,
	//|		Обороты.Год КАК НалоговыйПериод,
	//|		Обороты.СуммаПриход КАК Размер
	//|	ИЗ
	//|		РегистрНакопления.ИмущественныеВычетыНДФЛ.Обороты(
	//|				&НачалоГодаПериодаРасчета,
	//|				&КонецМесяцаРасчета,
	//|				Месяц,
	//|				ФизическоеЛицо В
	//|						(ВЫБРАТЬ
	//|							ФизЛица.ФизическоеЛицо
	//|						ИЗ
	//|							ВТФизическиеЛица КАК ФизЛица)
	//|					И ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК Обороты
	//|	ГДЕ
	//|		Обороты.Год = ГОД(Обороты.Период)
	//|	
	//|	ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|	ВЫБРАТЬ
	//|		ДвиженияРегистратора.ФизическоеЛицо,
	//|		НАЧАЛОПЕРИОДА(ДвиженияРегистратора.Период, МЕСЯЦ),
	//|		ДвиженияРегистратора.КодВычета,
	//|		ДвиженияРегистратора.Год,
	//|		ВЫБОР
	//|			КОГДА ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//|				ТОГДА -ДвиженияРегистратора.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ
	//|	ИЗ
	//|		РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ДвиженияРегистратора
	//|	ГДЕ
	//|		ДвиженияРегистратора.Регистратор = &Регистратор
	//|		И ДвиженияРегистратора.ФизическоеЛицо В
	//|				(ВЫБРАТЬ
	//|					ФизЛица.ФизическоеЛицо
	//|				ИЗ
	//|					ВТФизическиеЛица КАК ФизЛица)
	//|		И ДвиженияРегистратора.Год = ГОД(ДвиженияРегистратора.Период)) КАК Вычеты
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Вычеты.ФизическоеЛицо,
	//|	Вычеты.МесяцНалоговогоПериода,
	//|	Вычеты.КодВычета,
	//|	Вычеты.НалоговыйПериод
	//|
	//|ИМЕЮЩИЕ
	//|	СУММА(Вычеты.Размер) > 0
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение,
	//|	СУММА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Сумма) КАК СуммаОборот
	//|ПОМЕСТИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычеты
	//|ИЗ
	//|	РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ
	//|ГДЕ
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	//|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо В
	//|			(ВЫБРАТЬ
	//|				СписокСотрудников.ФизическоеЛицо
	//|			ИЗ
	//|				ВТФизическиеЛица КАК СписокСотрудников)
	//|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	//|	И ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Регистратор <> &Регистратор
	//|	И &ОкончательныйРасчетВычеты
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.КодВычета,
	//|	ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ.Подразделение
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДвиженияРегистратора.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(ДвиженияРегистратора.Период, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//|	ДвиженияРегистратора.КодВычета,
	//|	СУММА(ДвиженияРегистратора.Сумма) КАК Сумма,
	//|	ДвиженияРегистратора.Подразделение
	//|ПОМЕСТИТЬ ВТПредоставленоИмущественныхВычетов
	//|ИЗ
	//|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК ДвиженияРегистратора
	//|ГДЕ
	//|	ДвиженияРегистратора.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//|	И ДвиженияРегистратора.Период МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	//|	И ДвиженияРегистратора.Регистратор <> &Регистратор
	//|	И ДвиженияРегистратора.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	//|	И ДвиженияРегистратора.ФизическоеЛицо В
	//|			(ВЫБРАТЬ
	//|				ФизЛица.ФизическоеЛицо
	//|			ИЗ
	//|				ВТФизическиеЛица КАК ФизЛица)
	//|	И &ОкончательныйРасчетВычеты
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДвиженияРегистратора.Подразделение,
	//|	ДвиженияРегистратора.ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(ДвиженияРегистратора.Период, МЕСЯЦ),
	//|	ДвиженияРегистратора.КодВычета
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	СУММА(ВЫБОР
	//|			КОГДА Периоды.Резидент
	//|				ТОГДА ЕСТЬNULL(ПредоставленныеВычетыФизЛиц.СуммаОборот, 0)
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК СуммаОборот
	//|ПОМЕСТИТЬ ВТСоциальныеВычетыПомесячно
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК ПредоставленныеВычетыФизЛиц
	//|		ПО Периоды.ФизическоеЛицо = ПредоставленныеВычетыФизЛиц.ФизическоеЛицо
	//|			И (ПредоставленныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	//|			И Периоды.МесяцНалоговогоПериода = ПредоставленныеВычетыФизЛиц.МесяцНалоговогоПериода
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(Обороты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//|	Обороты.СтавкаНалогообложения КАК СтавкаНалогообложения,
	//|	Обороты.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	//|	Обороты.КодВычета КАК КодВычета,
	//|	Обороты.НеПредоставляетсяНерезидентам,
	//|	Обороты.СуммаДохода КАК СуммаДоходаОборот,
	//|	Обороты.СуммаВычета КАК СуммаВычетаОборот,
	//|	Обороты.ДатаПолученияДохода,
	//|	Обороты.КодДохода,
	//|	Обороты.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	//|	Обороты.Подразделение,
	//|	Обороты.Период,
	//|	Обороты.ДоходМежрасчетногоПериода
	//|ПОМЕСТИТЬ ВТДанныеУчета
	//|ИЗ
	//|	ВТСведенияОДоходахНДФЛ КАК Обороты
	//|ГДЕ
	//|	Обороты.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	//|	И НЕ Обороты.КодДохода.НеОблагаетсяУНалоговогоАгента
	//|	И Обороты.Регистратор <> &ИсключаемыйРегистратор
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ),
	//|	СведенияОДоходахНДФЛ.СтавкаНалогообложения,
	//|	СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ,
	//|	СведенияОДоходахНДФЛ.КодВычета,
	//|	СведенияОДоходахНДФЛ.НеПредоставляетсяНерезидентам,
	//|	-СведенияОДоходахНДФЛ.СуммаДохода,
	//|	-СведенияОДоходахНДФЛ.СуммаВычета,
	//|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
	//|	СведенияОДоходахНДФЛ.КодДохода,
	//|	СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента,
	//|	СведенияОДоходахНДФЛ.Подразделение,
	//|	СведенияОДоходахНДФЛ.Период,
	//|	СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	//|ИЗ
	//|	ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	//|ГДЕ
	//|	НЕ &ОкончательныйРасчет
	//|	И НЕ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	//|	И СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	//|	И НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента
	//|	И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор
	//|	И СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ДанныеУчета.ФизическоеЛицо,
	//|	ДанныеУчета.МесяцНалоговогоПериода,
	//|	ДанныеУчета.СтавкаНалогообложения,
	//|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ,
	//|	ДанныеУчета.КодВычета,
	//|	ДанныеУчета.НеПредоставляетсяНерезидентам,
	//|	СУММА(ДанныеУчета.СуммаДоходаОборот) КАК СуммаДоходаОборот,
	//|	СУММА(ДанныеУчета.СуммаВычетаОборот) КАК СуммаВычетаОборот
	//|ПОМЕСТИТЬ ВТДоходыФизлиц
	//|ИЗ
	//|	ВТДанныеУчета КАК ДанныеУчета
	//|ГДЕ
	//|	ДанныеУчета.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ДанныеУчета.ФизическоеЛицо,
	//|	ДанныеУчета.МесяцНалоговогоПериода,
	//|	ДанныеУчета.СтавкаНалогообложения,
	//|	ДанныеУчета.ИсточникДоходаЗаПределамиРФ,
	//|	ДанныеУчета.НеПредоставляетсяНерезидентам,
	//|	ДанныеУчета.КодВычета
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Периоды.Резидент,
	//|	ВЫБОР
	//|		КОГДА Периоды.Резидент
	//|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	//|		КОГДА Обороты.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка)
	//|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	//|		ИНАЧЕ Обороты.СтавкаНалогообложения
	//|	КОНЕЦ КАК СтавкаНалогообложенияНеРезидента,
	//|	ЕСТЬNULL(Обороты.СуммаДоходаОборот, 0) - ВЫБОР
	//|		КОГДА Периоды.Резидент
	//|			ТОГДА ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	//|		КОГДА Обороты.НеПредоставляетсяНерезидентам
	//|			ТОГДА 0
	//|		ИНАЧЕ ЕСТЬNULL(Обороты.СуммаВычетаОборот, 0)
	//|	КОНЕЦ КАК ДоходыБезВычетов
	//|ПОМЕСТИТЬ ВТДоходыСУчетомВычетовКДоходам
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыФизлиц КАК Обороты
	//|		ПО Периоды.ФизическоеЛицо = Обороты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = Обороты.МесяцНалоговогоПериода
	//|			И (Периоды.Резидент
	//|				ИЛИ НЕ Обороты.ИсточникДоходаЗаПределамиРФ)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Обороты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Обороты.ДатаПолученияДохода КАК ДатаПолученияДохода,
	//|	Обороты.КодДохода,
	//|	ВЫБОР
	//|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	//|				И СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ИсчислятьНалогНарастающимИтогом,
	//|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом,
	//|	Обороты.Подразделение,
	//|	СУММА(ВЫБОР
	//|			КОГДА Обороты.ИсточникДоходаЗаПределамиРФ
	//|					И СтавкаНДФЛПоСтавкеРезидента.Статус <> ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)
	//|				ТОГДА Обороты.СуммаДоходаОборот - ВЫБОР
	//|						КОГДА СтавкаНДФЛПоСтавкеРезидента.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС)
	//|							ТОГДА Обороты.СуммаВычетаОборот
	//|						КОГДА Обороты.НеПредоставляетсяНерезидентам
	//|							ТОГДА 0
	//|						ИНАЧЕ Обороты.СуммаВычетаОборот
	//|					КОНЕЦ
	//|			КОГДА НЕ Обороты.ИсточникДоходаЗаПределамиРФ
	//|				ТОГДА Обороты.СуммаДоходаОборот - ВЫБОР
	//|						КОГДА СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	//|							ТОГДА Обороты.СуммаВычетаОборот
	//|						КОГДА Обороты.НеПредоставляетсяНерезидентам
	//|							ТОГДА 0
	//|						ИНАЧЕ Обороты.СуммаВычетаОборот
	//|					КОНЕЦ
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ДоходыБезВычетов,
	//|	СУММА(Обороты.СуммаДоходаОборот) КАК ВсеДоходы,
	//|	СтавкаНДФЛПоСтавкеРезидента.Статус,
	//|	Обороты.Период,
	//|	Обороты.ДоходМежрасчетногоПериода
	//|ПОМЕСТИТЬ ВТДоходыСоСтавками
	//|ИЗ
	//|	ВТДанныеУчета КАК Обороты
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	//|		ПО Обороты.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	//|			И Обороты.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	//|			И Обороты.ДатаПолученияДохода = СтавкаНДФЛПоСтавкеРезидента.Период
	//|			И Обороты.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	//|ГДЕ
	//|	Обороты.ДатаПолученияДохода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Обороты.ФизическоеЛицо,
	//|	Обороты.МесяцНалоговогоПериода,
	//|	Обороты.ДатаПолученияДохода,
	//|	Обороты.КодДохода,
	//|	Обороты.Подразделение,
	//|	СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом,
	//|	СтавкаНДФЛПоСтавкеРезидента.Статус,
	//|	ВЫБОР
	//|		КОГДА Обороты.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	//|				И СтавкаНДФЛПоСтавкеРезидента.Статус В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ГражданинСтраныЕАЭС))
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ,
	//|	Обороты.Период,
	//|	Обороты.ДоходМежрасчетногоПериода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0) КАК ОблагаемыйДоход
	//|ПОМЕСТИТЬ ВТДоходыРезидентовПоМесяцам
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	//|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И (Периоды.Резидент)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо,
	//|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0)
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И (Доходы.ИсчислятьНалогНарастающимИтогом)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0) КАК ОблагаемыйДоходЗаГод
	//|ПОМЕСТИТЬ ВТДоходыРезидентовНарастающимЗаГод
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	//|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И (Периоды.Резидент)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо,
	//|	ЕСТЬNULL(СУММА(Доходы.ДоходыБезВычетов), 0)
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО (Доходы.МесяцНалоговогоПериода МЕЖДУ Периоды.НачалоГодаНалоговогоПериода И Периоды.МесяцНалоговогоПериода)
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И (Доходы.ИсчислятьНалогНарастающимИтогом)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Периоды.НачалоГодаНалоговогоПериода,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо,
	//|	Доходы.ДатаПолученияДохода,
	//|	Доходы.ДоходМежрасчетногоПериода КАК ЗарегистрированоДляПромежуточногоРасчета
	//|ПОМЕСТИТЬ ВТДатыПолученияДоходаДляНарастающегоДохода
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	Периоды.НачалоГодаНалоговогоПериода,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ),
	//|	ЛОЖЬ
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И (Доходы.ДатаПолученияДохода = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ))
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|	И Доходы.ДатаПолученияДохода ЕСТЬ NULL 
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ДатаПолученияДохода,
	//|	Периоды.ЗарегистрированоДляПромежуточногоРасчета,
	//|	Периоды.ФизическоеЛицо,
	//|	ЕСТЬNULL(СУММА(ВЫБОР
	//|				КОГДА Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|						И Доходы.ИсчислятьНалогНарастающимИтогом
	//|					ТОГДА Доходы.ДоходыБезВычетов
	//|				ИНАЧЕ 0
	//|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаМесяц,
	//|	ЕСТЬNULL(СУММА(ВЫБОР
	//|				КОГДА Доходы.ИсчислятьНалогНарастающимИтогом
	//|					ТОГДА Доходы.ДоходыБезВычетов
	//|				ИНАЧЕ 0
	//|			КОНЕЦ), 0) КАК ОблагаемыйДоходЗаГод
	//|ПОМЕСТИТЬ ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод
	//|ИЗ
	//|	ВТДатыПолученияДоходаДляНарастающегоДохода КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО (Доходы.ДатаПолученияДохода >= Периоды.НачалоГодаНалоговогоПериода
	//|					И Доходы.ДатаПолученияДохода < Периоды.ДатаПолученияДохода
	//|				ИЛИ Доходы.ДатаПолученияДохода = Периоды.ДатаПолученияДохода
	//|					И Доходы.ДоходМежрасчетногоПериода = Периоды.ЗарегистрированоДляПромежуточногоРасчета
	//|				ИЛИ Доходы.ДатаПолученияДохода = Периоды.ДатаПолученияДохода
	//|					И НЕ Периоды.ЗарегистрированоДляПромежуточногоРасчета)
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.ДатаПолученияДохода,
	//|	Периоды.ЗарегистрированоДляПромежуточногоРасчета,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	ВычетыЛичные.КодВычета КАК КодВычетаЛичный,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= ЕСТЬNULL(РазмерВычетовЛичный.ОграничениеПоДоходам, 0)
	//|					ИЛИ ЕСТЬNULL(РазмерВычетовЛичный.ОграничениеПоДоходам, 0) = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовЛичный.Размер, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыЛичные,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетей.Размер, 0) * ЕСТЬNULL(ВычетыНаДетей.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетские,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейДвойные.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойные,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейДвойныеВторые.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеДвойныеВторые,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаТретьегоРебенка.Размер, 0) * ЕСТЬNULL(ВычетыНаТретьегоРебенка.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенка,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаТретьегоРебенкаДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаТретьегоРебенкаДвойные.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойные,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаТретьегоРебенкаДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаТретьегоРебенкаДвойныеВторые.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаВторогоРебенка.Размер, 0) * ЕСТЬNULL(ВычетыНаВторогоРебенка.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенка,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаВторогоРебенкаДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаВторогоРебенкаДвойные.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойные,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаВторогоРебенкаДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаВторогоРебенкаДвойныеВторые.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидов.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидов.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидов,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовДвойные.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовДвойные.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойные,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовДвойныеВторые.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовДвойныеВторые.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовОпекунов.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовОпекунов.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовОпекунов,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовДвойныеОпекунов.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовДвойныеОпекунов.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов,
	//|	ВЫБОР
	//|		КОГДА ПрименениеВычетов.ПрименятьВычеты
	//|				И Периоды.ПрименяетсяСтавкаПункта1Статьи224НК
	//|				И (ДоходыНарастающимИтогом.ОблагаемыйДоходЗаГод + ЕСТЬNULL(ДоходыСПредыдущегоМестаРаботы.Размер, 0) <= РазмерВычетовНаДетей.ОграничениеПоДоходам
	//|					ИЛИ РазмерВычетовНаДетей.ОграничениеПоДоходам = 0)
	//|			ТОГДА ЕСТЬNULL(РазмерВычетовНаДетейИнвалидовДвойныеВторыеОпекунов.Размер, 0) * ЕСТЬNULL(ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов.КоличествоДетей, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов,
	//|	РазмерВычетовЛичный.ОграничениеПоДоходам КАК ОграничениеПоДоходамЛичные,
	//|	РазмерВычетовНаДетей.ОграничениеПоДоходам КАК ОграничениеПоДоходамНаДетей
	//|ПОМЕСТИТЬ ВТПраваНаСтандартныеВычетыПоМесяцам
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПрименениеСтандартныхВычетов КАК ПрименениеВычетов
	//|		ПО Периоды.ФизическоеЛицо = ПрименениеВычетов.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ПрименениеВычетов.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетей
	//|		ПО (РазмерВычетовНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108))
	//|			И Периоды.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетей.НачалоНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаЛичныеВычеты КАК ВычетыЛичные
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовЛичный
	//|			ПО ВычетыЛичные.КодВычета = РазмерВычетовЛичный.КодВычета
	//|				И ВычетыЛичные.НачалоГодаНалоговогоПериода = РазмерВычетовЛичный.НачалоНалоговогоПериода
	//|		ПО Периоды.МесяцНалоговогоПериода = ВычетыЛичные.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = ВычетыЛичные.ФизическоеЛицо
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетей
	//|		ПО (ВычетыНаДетей.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетей.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетей.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейДвойные
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейДвойные
	//|			ПО ВычетыНаДетейДвойные.КодВычета = РазмерВычетовНаДетейДвойные.КодВычета
	//|				И ВычетыНаДетейДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейДвойные.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейДвойные.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейДвойные.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейДвойныеВторые
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейДвойныеВторые
	//|			ПО ВычетыНаДетейДвойныеВторые.КодВычета = РазмерВычетовНаДетейДвойныеВторые.КодВычета
	//|				И ВычетыНаДетейДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейДвойныеВторые.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейДвойныеВторые.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейДвойныеВторые.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаТретьегоРебенка
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаТретьегоРебенка
	//|			ПО ВычетыНаТретьегоРебенка.КодВычета = РазмерВычетовНаТретьегоРебенка.КодВычета
	//|				И ВычетыНаТретьегоРебенка.НачалоГодаНалоговогоПериода = РазмерВычетовНаТретьегоРебенка.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаТретьегоРебенка.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаТретьегоРебенка.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаТретьегоРебенка.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаТретьегоРебенкаДвойные
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаТретьегоРебенкаДвойные
	//|			ПО ВычетыНаТретьегоРебенкаДвойные.КодВычета = РазмерВычетовНаТретьегоРебенкаДвойные.КодВычета
	//|				И ВычетыНаТретьегоРебенкаДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаТретьегоРебенкаДвойные.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаТретьегоРебенкаДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаТретьегоРебенкаДвойные.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаТретьегоРебенкаДвойные.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаТретьегоРебенкаДвойныеВторые
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаТретьегоРебенкаДвойныеВторые
	//|			ПО ВычетыНаТретьегоРебенкаДвойныеВторые.КодВычета = РазмерВычетовНаТретьегоРебенкаДвойныеВторые.КодВычета
	//|				И ВычетыНаТретьегоРебенкаДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаТретьегоРебенкаДвойныеВторые.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаТретьегоРебенкаДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаТретьегоРебенкаДвойныеВторые.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаТретьегоРебенкаДвойныеВторые.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаВторогоРебенка
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаВторогоРебенка
	//|			ПО ВычетыНаВторогоРебенка.КодВычета = РазмерВычетовНаВторогоРебенка.КодВычета
	//|				И ВычетыНаВторогоРебенка.НачалоГодаНалоговогоПериода = РазмерВычетовНаВторогоРебенка.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаВторогоРебенка.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаВторогоРебенка.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаВторогоРебенка.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаВторогоРебенкаДвойные
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаВторогоРебенкаДвойные
	//|			ПО ВычетыНаВторогоРебенкаДвойные.КодВычета = РазмерВычетовНаВторогоРебенкаДвойные.КодВычета
	//|				И ВычетыНаВторогоРебенкаДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаВторогоРебенкаДвойные.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаВторогоРебенкаДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаВторогоРебенкаДвойные.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаВторогоРебенкаДвойные.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаВторогоРебенкаДвойныеВторые
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаВторогоРебенкаДвойныеВторые
	//|			ПО ВычетыНаВторогоРебенкаДвойныеВторые.КодВычета = РазмерВычетовНаВторогоРебенкаДвойныеВторые.КодВычета
	//|				И ВычетыНаВторогоРебенкаДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаВторогоРебенкаДвойныеВторые.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаВторогоРебенкаДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаВторогоРебенкаДвойныеВторые.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаВторогоРебенкаДвойныеВторые.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидов
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидов
	//|			ПО ВычетыНаДетейИнвалидов.КодВычета = РазмерВычетовНаДетейИнвалидов.КодВычета
	//|				И ВычетыНаДетейИнвалидов.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидов.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейИнвалидов.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидов.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидов.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовДвойные
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовДвойные
	//|			ПО ВычетыНаДетейИнвалидовДвойные.КодВычета = РазмерВычетовНаДетейИнвалидовДвойные.КодВычета
	//|				И ВычетыНаДетейИнвалидовДвойные.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовДвойные.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейИнвалидовДвойные.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовДвойные.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовДвойные.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовДвойныеВторые
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовДвойныеВторые
	//|			ПО ВычетыНаДетейИнвалидовДвойныеВторые.КодВычета = РазмерВычетовНаДетейИнвалидовДвойныеВторые.КодВычета
	//|				И ВычетыНаДетейИнвалидовДвойныеВторые.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовДвойныеВторые.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейИнвалидовДвойныеВторые.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовДвойныеВторые.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовДвойныеВторые.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовОпекунов
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовОпекунов
	//|			ПО ВычетыНаДетейИнвалидовОпекунов.КодВычета = РазмерВычетовНаДетейИнвалидовОпекунов.КодВычета
	//|				И ВычетыНаДетейИнвалидовОпекунов.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовОпекунов.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейИнвалидовОпекунов.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовОпекунов.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовОпекунов.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовДвойныеОпекунов
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовДвойныеОпекунов
	//|			ПО ВычетыНаДетейИнвалидовДвойныеОпекунов.КодВычета = РазмерВычетовНаДетейИнвалидовДвойныеОпекунов.КодВычета
	//|				И ВычетыНаДетейИнвалидовДвойныеОпекунов.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовДвойныеОпекунов.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейИнвалидовДвойныеОпекунов.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовДвойныеОпекунов.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовДвойныеОпекунов.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаВычетыНаДетей КАК ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыСтандартныхВычетов КАК РазмерВычетовНаДетейИнвалидовДвойныеВторыеОпекунов
	//|			ПО ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов.КодВычета = РазмерВычетовНаДетейИнвалидовДвойныеВторыеОпекунов.КодВычета
	//|				И ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов.НачалоГодаНалоговогоПериода = РазмерВычетовНаДетейИнвалидовДвойныеВторыеОпекунов.НачалоНалоговогоПериода
	//|		ПО (ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о))
	//|			И Периоды.ФизическоеЛицо = ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ВычетыНаДетейИнвалидовДвойныеВторыеОпекунов.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ КАК ДоходыСПредыдущегоМестаРаботы
	//|		ПО Периоды.МесяцНалоговогоПериода = ДоходыСПредыдущегоМестаРаботы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = ДоходыСПредыдущегоМестаРаботы.ФизическоеЛицо
	//|			И (ДоходыСПредыдущегоМестаРаботы.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыНарастающимИтогом
	//|		ПО Периоды.МесяцНалоговогоПериода = ДоходыНарастающимИтогом.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = ДоходыНарастающимИтогом.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	//|				КОГДА Доходы.Резидент
	//|					ТОГДА 0
	//|				ИНАЧЕ Доходы.ДоходыБезВычетов
	//|			КОНЕЦ * СтавкиНалогаВПроцентах.Размер КАК ЧИСЛО(13, 0))) КАК НалогНерезидента
	//|ПОМЕСТИТЬ ВТНалогНерезидентов
	//|ИЗ
	//|	ВТДоходыСУчетомВычетовКДоходам КАК Доходы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаВПроцентах
	//|		ПО Доходы.СтавкаНалогообложенияНеРезидента = СтавкиНалогаВПроцентах.СтавкаНалогообложения
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Доходы.ФизическоеЛицо,
	//|	Доходы.МесяцНалоговогоПериода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	ЕСТЬNULL(ДатыДохода.ДатаПолученияДохода, МАКСИМУМ(ЕСТЬNULL(Доходы.ДатаПолученияДохода, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ)))) КАК ДатаПолученияДохода,
	//|	ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент) КАК Статус,
	//|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка) КАК КодДохода,
	//|	ЕСТЬNULL(СУММА(Доходы.ВсеДоходы), 0) КАК СуммаДохода,
	//|	0 КАК НалогНерезидента,
	//|	ИСТИНА КАК ИсчислятьНалогНарастающимИтогом,
	//|	ЕСТЬNULL(ДатыДохода.ДоходМежрасчетногоПериода, ЛОЖЬ) КАК ЗарегистрированоДляПромежуточногоРасчета,
	//|	МАКСИМУМ(ЕСТЬNULL(Доходы.ДатаПолученияДохода, НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Периоды.МесяцНалоговогоПериода, МЕСЯЦ), ДЕНЬ))) КАК МаксимальнаяДатаПолученияДохода
	//|ПОМЕСТИТЬ ВТДоходыНалоги
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК ДатыДохода
	//|		ПО Периоды.ФизическоеЛицо = ДатыДохода.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ДатыДохода.МесяцНалоговогоПериода
	//|			И (ДатыДохода.ИсчислятьНалогНарастающимИтогом)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо,
	//|	ДатыДохода.ДатаПолученияДохода,
	//|	ДатыДохода.ДоходМежрасчетногоПериода
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Доходы.ДатаПолученияДохода,
	//|	Доходы.Статус,
	//|	Доходы.КодДохода,
	//|	СУММА(Доходы.ДоходыБезВычетов),
	//|	ВЫРАЗИТЬ(СУММА(Доходы.ДоходыБезВычетов) * Доходы.СтавкаЧислом КАК ЧИСЛО(13, 0)),
	//|	ЛОЖЬ,
	//|	Доходы.ДоходМежрасчетногоПериода,
	//|	Доходы.ДатаПолученияДохода
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК Доходы
	//|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|			И (НЕ Доходы.ИсчислятьНалогНарастающимИтогом)
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|	И Доходы.ФизическоеЛицо ЕСТЬ НЕ NULL 
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Доходы.ДатаПолученияДохода,
	//|	Доходы.ДоходМежрасчетногоПериода,
	//|	Доходы.КодДохода,
	//|	Доходы.СтавкаЧислом,
	//|	Доходы.Статус,
	//|	Доходы.ДатаПолученияДохода
	//|
	//|ИМЕЮЩИЕ
	//|	СУММА(Доходы.ДоходыБезВычетов) <> 0
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Доходы.ИсчислятьНалогНарастающимИтогом,
	//|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	//|	Доходы.МаксимальнаяДатаПолученияДохода КАК МаксимальнаяДатаПолученияДоходаМесяца,
	//|	Доходы.ЗарегистрированоДляПромежуточногоРасчета КАК ЗарегистрированоДляПромежуточногоРасчета,
	//|	Доходы.Статус,
	//|	ВЫБОР
	//|		КОГДА Доходы.ИсчислятьНалогНарастающимИтогом
	//|			ТОГДА 0
	//|		ИНАЧЕ Доходы.СуммаДохода
	//|	КОНЕЦ КАК СуммаДохода,
	//|	Доходы.СуммаДохода КАК ВсеДоходыЗаМесяц,
	//|	ЕСТЬNULL(ДоходыПоДатамПолученияДоходаНарастающимИтогом.ОблагаемыйДоходЗаМесяц, 0) КАК ОблагаемыйДоход,
	//|	Доходы.НалогНерезидента,
	//|	ЕСТЬNULL(ДоходыРезидентовПоМесяцам.ОблагаемыйДоход, 0) КАК ОблагаемыйДоходЗаМесяц,
	//|	ЕСТЬNULL(ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод, 0) КАК ОблагаемыйДоходНарастающимИтогом,
	//|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	//|	0.13 КАК СтавкаДляРезидента,
	//|	ПравоНаСтандартныеВычеты.КодВычетаЛичный,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовОпекунов,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов,
	//|	ЕСТЬNULL(ПолитикаПримененияВычетов.ОсобенностиИсчисленияНДФЛ, ЗНАЧЕНИЕ(Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом)) КАК ОсобенностиУчетаВычетов
	//|ИЗ
	//|	ВТПериодыНалогаНаДоходы КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	//|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	//|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	//|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовПоМесяцам КАК ДоходыРезидентовПоМесяцам
	//|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовПоМесяцам.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовПоМесяцам.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК ПолитикаПримененияВычетов
	//|		ПО (ПолитикаПримененияВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыНалоги КАК Доходы
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоДатамПолученияДоходаНарастающимЗаГод КАК ДоходыПоДатамПолученияДоходаНарастающимИтогом
	//|			ПО Доходы.ФизическоеЛицо = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ФизическоеЛицо
	//|				И Доходы.МесяцНалоговогоПериода = ДоходыПоДатамПолученияДоходаНарастающимИтогом.МесяцНалоговогоПериода
	//|				И Доходы.ДатаПолученияДохода = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ДатаПолученияДохода
	//|				И Доходы.ЗарегистрированоДляПромежуточногоРасчета = ДоходыПоДатамПолученияДоходаНарастающимИтогом.ЗарегистрированоДляПромежуточногоРасчета
	//|		ПО Периоды.МесяцНалоговогоПериода = Доходы.МесяцНалоговогоПериода
	//|			И Периоды.ФизическоеЛицо = Доходы.ФизическоеЛицо
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев
	//|	И (НЕ Доходы.ИсчислятьНалогНарастающимИтогом
	//|			ИЛИ Доходы.ДатаПолученияДохода = Доходы.МаксимальнаяДатаПолученияДохода
	//|			ИЛИ ЕСТЬNULL(ДоходыПоДатамПолученияДоходаНарастающимИтогом.ОблагаемыйДоходЗаМесяц, 0) <> 0)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ФизическоеЛицо,
	//|	НалоговыйПериод,
	//|	МесяцНалоговогоПериода,
	//|	Доходы.ИсчислятьНалогНарастающимИтогом УБЫВ,
	//|	ДатаПолученияДохода,
	//|	ЗарегистрированоДляПромежуточногоРасчета УБЫВ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Доходы.Подразделение КАК Подразделение,
	//|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	//|	Доходы.ДатаПолученияДохода
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	//|		ЕСТЬNULL(СведенияОДоходахНДФЛ.ДоходыБезВычетов, 0) КАК СуммаДохода,
	//|		СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК ДатаПолученияДохода
	//|	ИЗ
	//|		ВТПериодыФизлиц КАК ПериодыФизлиц
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыСоСтавками КАК СведенияОДоходахНДФЛ
	//|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	//|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	//|				И (&ОкончательныйРасчетДоходы)
	//|	ГДЕ
	//|		ПериодыФизлиц.МесяцНалоговогоПериода >= &ДатаИзмененияИсчисленияДляИностранцев) КАК Доходы
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Доходы.ФизическоеЛицо,
	//|	Доходы.МесяцНалоговогоПериода,
	//|	Доходы.Подразделение,
	//|	Доходы.ДатаПолученияДохода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Периоды.Резидент,
	//|	ДоходыРезидентовПоМесяцам.ОблагаемыйДоход КАК ОблагаемыйДоходЗаМесяц,
	//|	ДоходыРезидентовНарастающимЗаГод.ОблагаемыйДоходЗаГод КАК ОблагаемыйДоходНарастающимИтогом,
	//|	СоциальныеВычеты.СуммаОборот КАК СоциальныйВычет,
	//|	ВЫБОР
	//|		КОГДА Периоды.Резидент
	//|			ТОГДА 0
	//|		ИНАЧЕ ЕСТЬNULL(НалогНерезидентов.НалогНерезидента, 0)
	//|	КОНЕЦ КАК НалогЗаМесяц,
	//|	СтавкиНалогаВПроцентах.Размер КАК СтавкаДляРезидента,
	//|	ПравоНаСтандартныеВычеты.КодВычетаЛичный,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыЛичные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетские,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеДвойныеВторые,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидов,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые,
	//|	ЕСТЬNULL(ПолитикаПримененияВычетов.ОсобенностиИсчисленияНДФЛ, ЗНАЧЕНИЕ(Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом)) КАК ОсобенностиУчетаВычетов,
	//|	ГОД(Периоды.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенка,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые,
	//|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамЛичные,
	//|	ПравоНаСтандартныеВычеты.ОграничениеПоДоходамНаДетей,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенка,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойные,
	//|	ПравоНаСтандартныеВычеты.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНалогНерезидентов КАК НалогНерезидентов
	//|		ПО Периоды.ФизическоеЛицо = НалогНерезидентов.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = НалогНерезидентов.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаСтандартныеВычетыПоМесяцам КАК ПравоНаСтандартныеВычеты
	//|		ПО Периоды.ФизическоеЛицо = ПравоНаСтандартныеВычеты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ПравоНаСтандартныеВычеты.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоНДФЛ КАК ПолитикаПримененияВычетов
	//|		ПО (ПолитикаПримененияВычетов.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовНарастающимЗаГод КАК ДоходыРезидентовНарастающимЗаГод
	//|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовНарастающимЗаГод.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовНарастающимЗаГод.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыРезидентовПоМесяцам КАК ДоходыРезидентовПоМесяцам
	//|		ПО Периоды.ФизическоеЛицо = ДоходыРезидентовПоМесяцам.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ДоходыРезидентовПоМесяцам.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоциальныеВычетыПомесячно КАК СоциальныеВычеты
	//|		ПО Периоды.ФизическоеЛицо = СоциальныеВычеты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = СоциальныеВычеты.МесяцНалоговогоПериода
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкиНалогаЧислом КАК СтавкиНалогаВПроцентах
	//|		ПО (СтавкиНалогаВПроцентах.СтавкаНалогообложения = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	//|ГДЕ
	//|	Периоды.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ФизическоеЛицо,
	//|	НалоговыйПериод,
	//|	МесяцНалоговогоПериода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетРасходыНаСвоеОбучение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетРасходыНаОбучениеДетей,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетРасходыНаЛечение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетСтраховыеВзносыНаМедУслуги,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетРасходыНаДорогостоящееЛечение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетИмущественныйРасходы,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПоКредитам,
	//|	СУММА(ВЫБОР
	//|			КОГДА ПравоНаИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	//|				ТОГДА ПравоНаИмущественныеВычеты.Размер
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ВычетИмущественныйПроцентыПриПерекредитовании
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПравоНаИмущественныеВычеты КАК ПравоНаИмущественныеВычеты
	//|		ПО Периоды.ФизическоеЛицо = ПравоНаИмущественныеВычеты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ПравоНаИмущественныеВычеты.МесяцНалоговогоПериода
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Периоды.ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	Доходы.Подразделение КАК Подразделение,
	//|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ПериодыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//|		ПериодыФизлиц.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|		СведенияОДоходахНДФЛ.Подразделение КАК Подразделение,
	//|		ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаДохода, 0) - ВЫБОР
	//|			КОГДА ПериодыФизлиц.Резидент
	//|				ТОГДА ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	//|			КОГДА СведенияОДоходахНДФЛ.КодВычета В (&КодыВычетовРезидентов)
	//|				ТОГДА 0
	//|			ИНАЧЕ ЕСТЬNULL(СведенияОДоходахНДФЛ.СуммаВычета, 0)
	//|		КОНЕЦ КАК СуммаДохода
	//|	ИЗ
	//|		ВТПериодыФизлиц КАК ПериодыФизлиц
	//|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОДоходахНДФЛ КАК СведенияОДоходахНДФЛ
	//|			ПО ПериодыФизлиц.ФизическоеЛицо = СведенияОДоходахНДФЛ.ФизическоеЛицо
	//|				И (ПериодыФизлиц.МесяцНалоговогоПериода = НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ))
	//|				И (ПериодыФизлиц.Резидент
	//|					ИЛИ НЕ СведенияОДоходахНДФЛ.ИсточникДоходаЗаПределамиРФ)
	//|				И (СведенияОДоходахНДФЛ.КодДохода.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13))
	//|				И (НЕ СведенияОДоходахНДФЛ.КодДохода.НеОблагаетсяУНалоговогоАгента)
	//|				И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)
	//|				И (&ОкончательныйРасчетДоходы)
	//|	ГДЕ
	//|		ПериодыФизлиц.МесяцНалоговогоПериода < &ДатаИзмененияИсчисленияДляИностранцев) КАК Доходы
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	Доходы.ФизическоеЛицо,
	//|	Доходы.МесяцНалоговогоПериода,
	//|	Доходы.Подразделение
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	НАЧАЛОПЕРИОДА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериодаДляПоиска,
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	//|	-СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК НалогПоСтавке13,
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	//|ИЗ
	//|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	//|ГДЕ
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	//|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПредшествующегоГода И &КонецМесяцаРасчета
	//|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоГодаПериодаРасчета И &КонецПериодаРасчета
	//|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	//|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо В
	//|			(ВЫБРАТЬ
	//|				СписокСотрудников.ФизическоеЛицо
	//|			ИЗ
	//|				ВТФизическиеЛица КАК СписокСотрудников)
	//|	И &ОкончательныйРасчетПоРасчетам
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	//|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение КАК Подразделение,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	//|				ТОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета
	//|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	//|		КОНЕЦ) КАК КодВычетаЛичный,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета В (ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код103), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код104), ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код105))
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетЛичный,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код108)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетей,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код110)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойной,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код111)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейДвойнойВторой,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код116)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенка,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код120)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойной,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код124)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код115)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенка,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код119)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойной,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код123)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код109)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидов,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код112)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойной,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код113)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторой,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код117о)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовОпекунов,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код121о)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,
	//|	СУММА(ВЫБОР
	//|			КОГДА НДФЛПредоставленныеСтандартныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код125о)
	//|				ТОГДА -НДФЛПредоставленныеСтандартныеВычеты.СуммаОборот
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
	//|ИЗ
	//|	ВТПредоставленныеСтандартныеИСоциальныеВычеты КАК НДФЛПредоставленныеСтандартныеВычеты
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	НДФЛПредоставленныеСтандартныеВычеты.Подразделение,
	//|	НДФЛПредоставленныеСтандартныеВычеты.МесяцНалоговогоПериода,
	//|	НДФЛПредоставленныеСтандартныеВычеты.ФизическоеЛицо
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Периоды.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	Периоды.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//|	ИмущественныеВычеты.Подразделение КАК Подразделение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код320о)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетРасходыНаСвоеОбучение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код321)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетРасходыНаОбучениеДетей,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код324)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетРасходыНаЛечение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код325)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетСтраховыеВзносыНаМедУслуги,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код326)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетРасходыНаДорогостоящееЛечение,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код311)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетИмущественныйРасходы,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код312)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПоКредитам,
	//|	СУММА(ВЫБОР
	//|			КОГДА ИмущественныеВычеты.КодВычета = ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.Код318)
	//|				ТОГДА -ИмущественныеВычеты.Сумма
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК ПримененныйВычетИмущественныйПроцентыПриПерекредитовании
	//|ИЗ
	//|	ВТПериодыФизлиц КАК Периоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредоставленоИмущественныхВычетов КАК ИмущественныеВычеты
	//|		ПО Периоды.ФизическоеЛицо = ИмущественныеВычеты.ФизическоеЛицо
	//|			И Периоды.МесяцНалоговогоПериода = ИмущественныеВычеты.МесяцНалоговогоПериода
	//|ГДЕ
	//|	ИмущественныеВычеты.Подразделение ЕСТЬ НЕ NULL 
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ИмущественныеВычеты.Подразделение,
	//|	Периоды.МесяцНалоговогоПериода,
	//|	Периоды.ФизическоеЛицо";
	//
	//Если Не ИсключатьДоходыРегистратора Тогда
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор)", "");
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И СведенияОДоходахНДФЛ.Регистратор <> &ИсключаемыйРегистратор", "");
	//КонецЕсли;
	//
	//Если ОкончательныйРасчет Тогда
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", "Истина");
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", "Истина");
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", "Истина");
	//Иначе
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетВычеты", 
	//	"(Период < &НачалоМесяцаРасчета
	//	|			ИЛИ ВычетМежрасчетногоПериода
	//	|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетДоходы", 
	//	"(СведенияОДоходахНДФЛ.Период < &НачалоМесяцаРасчета
	//	|					ИЛИ СведенияОДоходахНДФЛ.ДоходМежрасчетногоПериода
	//	|						И (СведенияОДоходахНДФЛ.Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
	//	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОкончательныйРасчетПоРасчетам", 
	//	"(Период < &НачалоМесяцаРасчета
	//	|			ИЛИ РасчетМежрасчетногоПериода
	//	|				И (Период МЕЖДУ &НачалоМесяцаРасчета И &КонецМесяцаРасчета))");
	//	
	//КонецЕсли;
	//
	//Запрос.Текст = ТекстЗапроса;
	//
	//Результат =	Запрос.ВыполнитьПакет();
	//
	//ВсегоРезультатов = Результат.Количество();
	//ПравоНаИмущественныеВычеты = Результат[ВсегоРезультатов - 5].Выгрузить();
	//ИсчисленоРанее = Результат[ВсегоРезультатов - 3].Выгрузить();
	//СтандартныхВычетовРанее = Результат[ВсегоРезультатов - 2].Выгрузить();
	//ИмущественныхВычетовРанее = Результат[ВсегоРезультатов - 1].Выгрузить();
	//
	//ПоляПоиска = "ФизическоеЛицо, МесяцНалоговогоПериода";
	//СтруктураПоиска = Новый Структура(ПоляПоиска);
	//СтандартныхВычетовРанее.Индексы.Добавить(ПоляПоиска);
	//ИмущественныхВычетовРанее.Индексы.Добавить(ПоляПоиска);
	//ПравоНаИмущественныеВычеты.Индексы.Добавить(ПоляПоиска);
	//
	//СтрокаРесурсов = РассчитываемыеРесурсыПоОсновнойСтавке();
	//МассивРесурсов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаРесурсов);
	//
	//ТипНалог = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(13,0));
	//РезультатыРасчетов = СтандартныхВычетовРанее.СкопироватьКолонки();
	//РезультатыРасчетов.Колонки.Добавить("НомерСтроки",ТипНалог);
	//РезультатыРасчетов.Колонки.Добавить("НалогПоСтавке13",ТипНалог);
	//РезультатыРасчетов.Колонки.Добавить("ЗачтеноАвансовыхПлатежейПоСтавке13",ТипНалог);
	//РезультатыРасчетов.Колонки.Добавить("НалогПоСтавке13КЗачетуВозврату",ТипНалог);
	//
	//ТипВычет = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2));
	//МассивВычетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РассчитываемыеРесурсыИмущественныхВычетов());
	//Для каждого ИмяРесурса Из МассивВычетов Цикл
	//	РезультатыРасчетов.Колонки.Добавить(ИмяРесурса, ТипВычет);
	//КонецЦикла;
	//
	//ВспомогательнаяТаблицаМесяца = РезультатыРасчетов.СкопироватьКолонки();
	//ВспомогательнаяТаблицаФизическогоЛица = РезультатыРасчетов.СкопироватьКолонки();
	//
	//Если Не ОкончательныйРасчет Тогда
	//	ТекущийПериод = НачалоМесяца(?(ЗначениеЗаполнено(ДатаУдержанияИсчисленногоНалога), ДатаУдержанияИсчисленногоНалога, МесяцРасчета));
	//	СтруктураПоискаТекущегоНДФЛ = Новый Структура("МесяцНалоговогоПериода", ТекущийПериод);
	//КонецЕсли;
	//
	//ТекущийГод = Год(МесяцРасчета);
	//	
	//// Помесячный расчет
	//Если ПервыйМесяцНалоговогоПериода < ДатаИзмененияИсчисленияДляИностранцев Тогда
	//	ВыборкаРасчетов = Результат[ВсегоРезультатов - 6].Выбрать();
	//	ИсчисленоРанее.Индексы.Добавить(ПоляПоиска);
	//	РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 4].Выгрузить();
	//	РаспределениеДоходовПоПодразделениям.Индексы.Добавить(ПоляПоиска);
	//	Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
	//		
	//		ВспомогательнаяТаблицаФизическогоЛица.Очистить();
	//		
	//		// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
	//		СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

	//		БазаРаспределения = 0;
	//		МесяцПоиска = НачалоМесяца(МесяцРасчета);
	//		Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
	//			СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
	//			ДоходыМесяцаРасчета = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
	//			БазаРаспределения = 0;
	//			Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
	//				БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	//			КонецЦикла; 
	//			МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
	//		КонецЦикла;
	//		
	//		КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
	//		
	//		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
	//			
	//			ВычетЛичныйОстаток = 0;
	//			ВычетНаДетейОстаток = 0;
	//			ВычетНаДетейДвойнойОстаток = 0;
	//			ВычетНаДетейДвойнойВторойОстаток = 0;
	//			ВычетНаТретьегоРебенкаОстаток = 0;
	//			ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
	//			ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
	//			ВычетНаВторогоРебенкаОстаток = 0;
	//			ВычетНаВторогоРебенкаДвойнойОстаток = 0;
	//			ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
	//			ВычетНаДетейИнвалидовОстаток = 0;
	//			ВычетНаДетейИнвалидовДвойнойОстаток = 0;
	//			ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
	//			ВычетИмущественныйРасходыОстаток = 0;
	//			ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
	//			ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
	//			ВычетСоциальныйОстаток = 0;
	//			ОблагаемыйДоход = 0;
	//			ДоходЗаМесяцОстаток = 0;
	//			НалогИсчисленный = 0;
	//			
	//			Пока ВыборкаРасчетов.Следующий() Цикл
	//				
	//				Если ВыборкаРасчетов.МесяцНалоговогоПериода >= ДатаИзмененияИсчисленияДляИностранцев Тогда
	//					Продолжить;
	//				КонецЕсли;
	//				
	//				ВспомогательнаяТаблицаМесяца.Очистить();
	//				ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
	//				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
	//				
	//				БазаРаспределения = 0;
	//				Для каждого СтрокаРаспределения Из Доходы Цикл
	//					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	//				КонецЦикла; 
	//				Если БазаРаспределения = 0 Тогда
	//					// Если доходов за прошлый месяц нет - будем использовать текущее распределение.
	//					Доходы = ДоходыМесяцаРасчета;
	//					КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
	//				Иначе
	//					КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
	//				КонецЕсли;
	//				
	//				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоиска), "НалогПоСтавке13");
	//				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());
	//				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИмущественныхВычетовРанее.НайтиСтроки(СтруктураПоиска), РассчитываемыеРесурсыИмущественныхВычетов());
	//				
	//				Если ВыборкаРасчетов.Резидент Тогда
	//					
	//					// Расчет сумм примененных вычетов и налога.
	//					
	//					ВычетЛичныйЗаМесяц = 0;
	//					ВычетНаДетейЗаМесяц = 0;
	//					ВычетНаДетейЗаМесяц = 0;
	//					ВычетСоциальныйЗаМесяц = 0;
	//					ВычетНаДетейДвойнойЗаМесяц = 0;
	//					ВычетНаДетейДвойнойВторойЗаМесяц = 0;
	//					ВычетНаТретьегоРебенкаЗаМесяц = 0;
	//					ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
	//					ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
	//					ВычетНаВторогоРебенкаЗаМесяц = 0;
	//					ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
	//					ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
	//					ВычетНаДетейИнвалидовЗаМесяц = 0;
	//					ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
	//					ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
	//					ВычетИмущественныйРасходыЗаМесяц = 0;
	//					ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
	//					ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
	//					
	//					ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;
	//					СтрокиПравНаИмущественныеВычеты = ПравоНаИмущественныеВычеты.НайтиСтроки(СтруктураПоиска);
	//					Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
	//						ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
	//						ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
	//						ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
	//					КонецЕсли;
	//					Если ВыборкаРасчетов.ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
	//						ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
	//						ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
	//						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
	//						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
	//						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
	//						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
	//						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
	//						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
	//						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
	//						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
	//						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
	//						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
	//						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
	//					Иначе
	//						ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
	//						ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
	//						ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
	//						ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
	//						ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
	//						ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
	//						ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
	//						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
	//						ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
	//						ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
	//						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
	//						ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
	//						ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
	//						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
	//					КонецЕсли;
	//					
	//					Если ДоходЗаМесяцОстаток > 0 Тогда
	//						
	//						ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток, ВычетСоциальныйОстаток);
	//						ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
	//						
	//						Если ВыборкаРасчетов.КодВычетаЛичный = Справочники.ВидыВычетовНДФЛ.Код103 Тогда
	//							ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
	//							ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
	//							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
	//						КонецЕсли;
	//						
	//						ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
	//						ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
	//						
	//						ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
	//						ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
	//						
	//						ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
	//						ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
	//						
	//						ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
	//						ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
	//						
	//						ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
	//						ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
	//						
	//						ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
	//						ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;

	//						ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
	//						ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
	//						
	//						ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
	//						ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
	//						
	//						ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
	//						ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;

	//						ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
	//						ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
	//						
	//						ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
	//						ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
	//						
	//						ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
	//						ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
	//							
	//						Если ВыборкаРасчетов.КодВычетаЛичный <> Справочники.ВидыВычетовНДФЛ.Код103 Тогда
	//							ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
	//							ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
	//							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
	//						КонецЕсли;
	//						
	//						ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
	//								- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
	//								- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
	//								- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
	//								- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц);
	//						
	//						Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
	//							
	//							ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
	//							ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
	//							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
	//							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
	//							
	//							ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
	//							ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
	//							ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
	//							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
	//							
	//							ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
	//							ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
	//							ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
	//							
	//						КонецЕсли;
	//						
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//                        ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//                        ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);
	//						ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений);	
	//					КонецЕсли;
	//					
	//					ОблагаемыйДоход = Макс(0, ОблагаемыйДоход + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - (ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
	//								+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
	//								+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
	//								+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
	//								+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц 
	//								+ ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц));
	//						
	//					НалогЗаМесяц = Окр(ОблагаемыйДоход * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
	//					НалогИсчисленный = НалогИсчисленный + НалогЗаМесяц;
	//					
	//				Иначе	
	//					
	//					НалогЗаМесяц = ВыборкаРасчетов.НалогЗаМесяц;
	//					
	//				КонецЕсли;
	//				
	//				ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.МесяцНалоговогоПериода, НалогЗаМесяц, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//				
	//				ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода, Подразделение", СтрокаРесурсов);
	//				Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
	//					ЕстьДанныеВСтроке = Ложь;
	//					Для каждого ИмяРесурса Из МассивРесурсов Цикл
	//						ЕстьДанныеВСтроке = СтрокаТЗ[ИмяРесурса] <> 0;
	//						Если ЕстьДанныеВСтроке Тогда
	//							Прервать;
	//						КонецЕсли;
	//					КонецЦикла;
	//					Если ЕстьДанныеВСтроке Тогда
	//						ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(), СтрокаТЗ);
	//					КонецЕсли;
	//				КонецЦикла;
	//				
	//			КонецЦикла;
	//			
	//		КонецЦикла;
	//		
	//		Если Не ОкончательныйРасчет И ВспомогательнаяТаблицаФизическогоЛица.Количество() > 0 Тогда
	//			
	//			ТекущийНДФЛ = ВспомогательнаяТаблицаФизическогоЛица.Скопировать(ВспомогательнаяТаблицаФизическогоЛица.НайтиСтроки(СтруктураПоискаТекущегоНДФЛ));
	//			ТекущийНДФЛВсего = ТекущийНДФЛ.Итог("НалогПоСтавке13");
	//			Если ТекущийНДФЛВсего >= 0 Тогда 
	//				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущийНДФЛ, РезультатыРасчетов);
	//				ВспомогательнаяТаблицаФизическогоЛица.Сортировать("МесяцНалоговогоПериода Убыв");
	//				// Налоги предыдущих периодов добавляем в пределах положительного налога текущего периода, не допуская возврата
	//				// налога.
	//				Для каждого СтрокаДанных Из ВспомогательнаяТаблицаФизическогоЛица Цикл
	//					Если СтрокаДанных.МесяцНалоговогоПериода = ТекущийПериод Тогда
	//						Продолжить;
	//					КонецЕсли;
	//					Если ТекущийНДФЛВсего + СтрокаДанных.НалогПоСтавке13 >= 0 Тогда
	//						ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
	//						ТекущийНДФЛВсего = ТекущийНДФЛВсего + СтрокаДанных.НалогПоСтавке13;
	//					ИначеЕсли ТекущийНДФЛВсего > 0 Тогда
	//						НоваяСтрока = РезультатыРасчетов.Добавить();
	//						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
	//						НоваяСтрока.НалогПоСтавке13 = - ТекущийНДФЛВсего;
	//						ТекущийНДФЛВсего = 0
	//					КонецЕсли;
	//				КонецЦикла;
	//			КонецЕсли;
	//			
	//		Иначе 			
	//			
	//			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаФизическогоЛица, РезультатыРасчетов)
	//			
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//КонецЕсли;
	//
	//// Расчет по каждой дате получения дохода
	//Если ПоследнийМесяцНалоговогоПериода >= ДатаИзмененияИсчисленияДляИностранцев Тогда
	//	ЭтоПерерасчет = Не ЭтоРасчетПоДоходамТекущегоМесяца;
	//	СтруктураПоискаИсчисленного = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериодаДляПоиска");
	//	СтруктураПоискаПоДатам = Новый Структура("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода");
	//	ВыборкаРасчетов = Результат[ВсегоРезультатов - 8].Выбрать();
	//	ИсчисленоРанее.Индексы.Добавить("ФизическоеЛицо,МесяцНалоговогоПериодаДляПоиска"); 
	//	РаспределениеДоходовПоПодразделениям = Результат[ВсегоРезультатов - 7].Выгрузить();
	//	РаспределениеДоходовПоПодразделениям.Индексы.Добавить("ФизическоеЛицо, МесяцНалоговогоПериода, ДатаПолученияДохода");
	//	РаспределениеДоходовПоПодразделениям.Индексы.Добавить("ФизическоеЛицо, МесяцНалоговогоПериода");
	//	Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
	//		
	//		ВспомогательнаяТаблицаФизическогоЛица.Очистить();
	//		
	//		// Подготовим распределение, которое будет использоваться при отсутствии базы соответствующего месяца.
	//		СтруктураПоиска.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;
	//		СтруктураПоискаИсчисленного.ФизическоеЛицо = ВыборкаРасчетов.ФизическоеЛицо;

	//		БазаРаспределения = 0;
	//		МесяцПоиска = НачалоМесяца(МесяцРасчета);
	//		Пока БазаРаспределения = 0 И Год(МесяцПоиска) = ТекущийГод Цикл
	//			СтруктураПоиска.МесяцНалоговогоПериода = МесяцПоиска;
	//			ДоходыМесяцаРасчета = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
	//			БазаРаспределения = 0;
	//			Для каждого СтрокаРаспределения Из ДоходыМесяцаРасчета Цикл
	//				БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	//			КонецЦикла; 
	//			МесяцПоиска = ДобавитьМесяц(МесяцПоиска, -1);
	//		КонецЦикла;
	//		
	//		КоэффициентыПодразделенийМесяцаРасчета = ОбщегоНазначения.ВыгрузитьКолонку(ДоходыМесяцаРасчета, "СуммаДохода");
	//		
	//		Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("НалоговыйПериод") Цикл
	//			
	//			ВычетЛичныйОстаток = 0;
	//			ВычетНаДетейОстаток = 0;
	//			ВычетНаДетейДвойнойОстаток = 0;
	//			ВычетНаДетейДвойнойВторойОстаток = 0;
	//			ВычетНаТретьегоРебенкаОстаток = 0;
	//			ВычетНаТретьегоРебенкаДвойнойОстаток = 0;
	//			ВычетНаТретьегоРебенкаДвойнойВторойОстаток = 0;
	//			ВычетНаВторогоРебенкаОстаток = 0;
	//			ВычетНаВторогоРебенкаДвойнойОстаток = 0;
	//			ВычетНаВторогоРебенкаДвойнойВторойОстаток = 0;
	//			ВычетНаДетейИнвалидовОстаток = 0;
	//			ВычетНаДетейИнвалидовДвойнойОстаток = 0;
	//			ВычетНаДетейИнвалидовДвойнойВторойОстаток = 0;
	//			ВычетНаДетейИнвалидовОпекуновОстаток = 0;
	//			ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = 0;
	//			ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = 0;
	//			ВычетИмущественныйРасходыОстаток = 0;
	//			ВычетИмущественныйПроцентыПоКредитамОстаток = 0;
	//			ВычетИмущественныйПроцентыПриПерекредитованииОстаток = 0;
	//			ВычетРасходыНаСвоеОбучениеОстаток = 0;
	//			ВычетРасходыНаОбучениеДетейОстаток = 0;
	//			ВычетРасходыНаЛечениеОстаток = 0;
	//			ВычетСтраховыеВзносыНаМедУслугиОстаток = 0;
	//			ВычетРасходыНаДорогостоящееЛечениеОстаток = 0;
	//			ВычетСоциальныйОстаток = 0;
	//			ОблагаемыйДоход = 0;
	//			ДоходЗаМесяцОстаток = 0;
	//			НалогИсчисленный = 0;
	//			
	//			Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("МесяцНалоговогоПериода") Цикл
	//				
	//				Если ВыборкаРасчетов.МесяцНалоговогоПериода < ДатаИзмененияИсчисленияДляИностранцев Тогда
	//					Продолжить;
	//				КонецЕсли;
	//				
	//				ВспомогательнаяТаблицаМесяца.Очистить();
	//				ЗаполнитьЗначенияСвойств(СтруктураПоиска,ВыборкаРасчетов);
	//				СтруктураПоискаИсчисленного.МесяцНалоговогоПериодаДляПоиска = ВыборкаРасчетов.МесяцНалоговогоПериода;
	//				
	//				Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоиска);
	//				БазаРаспределения = 0;
	//				Для каждого СтрокаРаспределения Из Доходы Цикл
	//					БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	//				КонецЦикла; 
	//				Если БазаРаспределения = 0 Тогда
	//					// Если доходов за прошлый месяц нет - будем использовать текущее распределение.
	//					Доходы = ДоходыМесяцаРасчета;
	//					КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
	//				Иначе
	//					КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
	//				КонецЕсли;
	//				
	//				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИсчисленоРанее.НайтиСтроки(СтруктураПоискаИсчисленного), "НалогПоСтавке13");
	//				
	//				// Расчет сумм примененных вычетов
	//				
	//				ВсегоВычетовЗаМесяц = 0;
	//				
	//				ВычетСоциальныйЗаМесяц = 0;
	//				ВычетЛичныйЗаМесяц = 0;
	//				ВычетНаДетейЗаМесяц = 0;
	//				ВычетНаДетейДвойнойЗаМесяц = 0;
	//				ВычетНаДетейДвойнойВторойЗаМесяц = 0;
	//				ВычетНаТретьегоРебенкаЗаМесяц = 0;
	//				ВычетНаТретьегоРебенкаДвойнойЗаМесяц = 0;
	//				ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = 0;
	//				ВычетНаВторогоРебенкаЗаМесяц = 0;
	//				ВычетНаВторогоРебенкаДвойнойЗаМесяц = 0;
	//				ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = 0;
	//				ВычетНаДетейИнвалидовЗаМесяц = 0;
	//				ВычетНаДетейИнвалидовДвойнойЗаМесяц = 0;
	//				ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = 0;
	//				ВычетНаДетейИнвалидовОпекуновЗаМесяц = 0;
	//				ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = 0;
	//				ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = 0;
	//				ВычетИмущественныйРасходыЗаМесяц = 0;
	//				ВычетИмущественныйПроцентыПоКредитамЗаМесяц = 0;
	//				ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = 0;
	//				ВычетРасходыНаСвоеОбучениеЗаМесяц = 0;
	//				ВычетРасходыНаОбучениеДетейЗаМесяц = 0;
	//				ВычетРасходыНаЛечениеЗаМесяц = 0;
	//				ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = 0;
	//				ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = 0;
	//				
	//				ВычетСоциальныйОстаток = ВычетСоциальныйОстаток + ВыборкаРасчетов.СоциальныйВычет;
	//				СтрокиПравНаИмущественныеВычеты = ПравоНаИмущественныеВычеты.НайтиСтроки(СтруктураПоиска);
	//				Если СтрокиПравНаИмущественныеВычеты.Количество() > 0 Тогда
	//					ВычетРасходыНаСвоеОбучениеОстаток = ВычетРасходыНаСвоеОбучениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаСвоеОбучение;
	//					ВычетРасходыНаОбучениеДетейОстаток = ВычетРасходыНаОбучениеДетейОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаОбучениеДетей;
	//					ВычетРасходыНаЛечениеОстаток = ВычетРасходыНаЛечениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаЛечение;
	//					ВычетСтраховыеВзносыНаМедУслугиОстаток = ВычетСтраховыеВзносыНаМедУслугиОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетСтраховыеВзносыНаМедУслуги;
	//					ВычетРасходыНаДорогостоящееЛечениеОстаток = ВычетРасходыНаДорогостоящееЛечениеОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетРасходыНаДорогостоящееЛечение;
	//					ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйРасходы;
	//					ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПоКредитам;
	//					ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток + СтрокиПравНаИмущественныеВычеты[0].ВычетИмущественныйПроцентыПриПерекредитовании;
	//				КонецЕсли;
	//				Если ВыборкаРасчетов.ОсобенностиУчетаВычетов = Перечисления.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток + ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
	//					ВычетЛичныйОстаток = ВычетЛичныйОстаток + ВыборкаРасчетов.СтандартныеВычетыЛичные;
	//					ВычетНаДетейОстаток = ВычетНаДетейОстаток + ВыборкаРасчетов.СтандартныеВычетыДетские;
	//					ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
	//					ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
	//					ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
	//					ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
	//					ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
	//					ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
	//					ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
	//					ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
	//					ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
	//					ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
	//					ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
	//					ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовОпекунов;
	//					ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов;
	//					ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток + ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов;
	//				Иначе
	//					ДоходЗаМесяцОстаток = ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц;
	//					ВычетЛичныйОстаток = ВыборкаРасчетов.СтандартныеВычетыЛичные;
	//					ВычетНаДетейОстаток = ВыборкаРасчетов.СтандартныеВычетыДетские;
	//					ВычетНаДетейДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойные;
	//					ВычетНаДетейДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеДвойныеВторые;
	//					ВычетНаТретьегоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенка;
	//					ВычетНаТретьегоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойные;
	//					ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаТретьегоРебенкаДвойныеВторые;
	//					ВычетНаВторогоРебенкаОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенка;
	//					ВычетНаВторогоРебенкаДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойные;
	//					ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыНаВторогоРебенкаДвойныеВторые;
	//					ВычетНаДетейИнвалидовОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидов;
	//					ВычетНаДетейИнвалидовДвойнойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойные;
	//					ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторые;
	//					ВычетНаДетейИнвалидовОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовОпекунов;
	//					ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеОпекунов;
	//					ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВыборкаРасчетов.СтандартныеВычетыДетскиеИнвалидовДвойныеВторыеОпекунов;
	//				КонецЕсли;
	//				ЕстьВычетыЗаМесяц = Ложь;
	//				Если ДоходЗаМесяцОстаток > 0 И (ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет) Тогда
	//					
	//					ВычетСоциальныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетСоциальныйОстаток);
	//					ВычетСоциальныйОстаток = ВычетСоциальныйОстаток - ВычетСоциальныйЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСоциальныйЗаМесяц;
	//					
	//					Если ВыборкаРасчетов.КодВычетаЛичный = Справочники.ВидыВычетовНДФЛ.Код103 Тогда
	//						ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
	//						ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
	//					КонецЕсли;
	//					
	//					ВычетНаДетейЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейОстаток);
	//					ВычетНаДетейОстаток = ВычетНаДетейОстаток - ВычетНаДетейЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейЗаМесяц;
	//					
	//					ВычетНаДетейДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойОстаток);
	//					ВычетНаДетейДвойнойОстаток = ВычетНаДетейДвойнойОстаток - ВычетНаДетейДвойнойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойЗаМесяц;
	//					
	//					ВычетНаДетейДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейДвойнойВторойОстаток);
	//					ВычетНаДетейДвойнойВторойОстаток = ВычетНаДетейДвойнойВторойОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейДвойнойВторойЗаМесяц;
	//					
	//					ВычетНаВторогоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаОстаток);
	//					ВычетНаВторогоРебенкаОстаток = ВычетНаВторогоРебенкаОстаток - ВычетНаВторогоРебенкаЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаЗаМесяц;
	//					
	//					ВычетНаВторогоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойОстаток);
	//					ВычетНаВторогоРебенкаДвойнойОстаток = ВычетНаВторогоРебенкаДвойнойОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойЗаМесяц;
	//					
	//					ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаВторогоРебенкаДвойнойВторойОстаток);
	//					ВычетНаВторогоРебенкаДвойнойВторойОстаток = ВычетНаВторогоРебенкаДвойнойВторойОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц;
	//					
	//					ВычетНаТретьегоРебенкаЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаОстаток);
	//					ВычетНаТретьегоРебенкаОстаток = ВычетНаТретьегоРебенкаОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаЗаМесяц;
	//					
	//					ВычетНаТретьегоРебенкаДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойОстаток);
	//					ВычетНаТретьегоРебенкаДвойнойОстаток = ВычетНаТретьегоРебенкаДвойнойОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойЗаМесяц;
	//					
	//					ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаТретьегоРебенкаДвойнойВторойОстаток);
	//					ВычетНаТретьегоРебенкаДвойнойВторойОстаток = ВычетНаТретьегоРебенкаДвойнойВторойОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц;
	//					
	//					ВычетНаДетейИнвалидовЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОстаток);
	//					ВычетНаДетейИнвалидовОстаток = ВычетНаДетейИнвалидовОстаток - ВычетНаДетейИнвалидовЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовЗаМесяц;
	//					
	//					ВычетНаДетейИнвалидовДвойнойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОстаток);
	//					ВычетНаДетейИнвалидовДвойнойОстаток = ВычетНаДетейИнвалидовДвойнойОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойЗаМесяц;
	//					
	//					ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОстаток);
	//					ВычетНаДетейИнвалидовДвойнойВторойОстаток = ВычетНаДетейИнвалидовДвойнойВторойОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц;
	//					
	//					ВычетНаДетейИнвалидовОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовОпекуновОстаток);
	//					ВычетНаДетейИнвалидовОпекуновОстаток = ВычетНаДетейИнвалидовОпекуновОстаток - ВычетНаДетейИнвалидовОпекуновЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовОпекуновЗаМесяц;
	//					
	//					ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойОпекуновОстаток);
	//					ВычетНаДетейИнвалидовДвойнойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойОпекуновОстаток - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц;
	//					
	//					ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток);
	//					ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток = ВычетНаДетейИнвалидовДвойнойВторойОпекуновОстаток - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц;
	//					ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц;
	//					
	//					Если ВыборкаРасчетов.КодВычетаЛичный <> Справочники.ВидыВычетовНДФЛ.Код103 Тогда
	//						ВычетЛичныйЗаМесяц = Мин(ДоходЗаМесяцОстаток,ВычетЛичныйОстаток);
	//						ВычетЛичныйОстаток = ВычетЛичныйОстаток - ВычетЛичныйЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетЛичныйЗаМесяц;
	//					КонецЕсли;
	//					
	//					ДоходЗаМесяцДляИмущественныхВычетов = Макс(0, ВыборкаРасчетов.ОблагаемыйДоходЗаМесяц - ВычетСоциальныйЗаМесяц - ВычетЛичныйЗаМесяц 
	//						- ВычетНаДетейЗаМесяц - ВычетНаДетейДвойнойЗаМесяц - ВычетНаДетейДвойнойВторойЗаМесяц 
	//						- ВычетНаТретьегоРебенкаЗаМесяц - ВычетНаТретьегоРебенкаДвойнойЗаМесяц - ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
	//						- ВычетНаВторогоРебенкаЗаМесяц - ВычетНаВторогоРебенкаДвойнойЗаМесяц - ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
	//						- ВычетНаДетейИнвалидовЗаМесяц - ВычетНаДетейИнвалидовДвойнойЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц
	//						- ВычетНаДетейИнвалидовОпекуновЗаМесяц - ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц - ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц);
	//					
	//					Если ДоходЗаМесяцДляИмущественныхВычетов > 0 Тогда
	//						
	//						ВычетРасходыНаДорогостоящееЛечениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаДорогостоящееЛечениеОстаток);
	//						ВычетРасходыНаДорогостоящееЛечениеОстаток = ВычетРасходыНаДорогостоящееЛечениеОстаток - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаДорогостоящееЛечениеЗаМесяц;
	//						
	//						ВычетСтраховыеВзносыНаМедУслугиЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетСтраховыеВзносыНаМедУслугиОстаток);
	//						ВычетСтраховыеВзносыНаМедУслугиОстаток = ВычетСтраховыеВзносыНаМедУслугиОстаток - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетСтраховыеВзносыНаМедУслугиЗаМесяц;
	//						
	//						ВычетРасходыНаЛечениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаЛечениеОстаток);
	//						ВычетРасходыНаЛечениеОстаток = ВычетРасходыНаЛечениеОстаток - ВычетРасходыНаЛечениеЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаЛечениеЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаЛечениеЗаМесяц;
	//						
	//						ВычетРасходыНаОбучениеДетейЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаОбучениеДетейОстаток);
	//						ВычетРасходыНаОбучениеДетейОстаток = ВычетРасходыНаОбучениеДетейОстаток - ВычетРасходыНаОбучениеДетейЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаОбучениеДетейЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаОбучениеДетейЗаМесяц;
	//						
	//						ВычетРасходыНаСвоеОбучениеЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетРасходыНаСвоеОбучениеОстаток);
	//						ВычетРасходыНаСвоеОбучениеОстаток = ВычетРасходыНаСвоеОбучениеОстаток - ВычетРасходыНаСвоеОбучениеЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетРасходыНаСвоеОбучениеЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетРасходыНаСвоеОбучениеЗаМесяц;
	//						
	//						ВычетИмущественныйПроцентыПоКредитамЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПоКредитамОстаток);
	//						ВычетИмущественныйПроцентыПоКредитамОстаток = ВычетИмущественныйПроцентыПоКредитамОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПоКредитамЗаМесяц;
	//						
	//						ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйПроцентыПриПерекредитованииОстаток);
	//						ВычетИмущественныйПроцентыПриПерекредитованииОстаток = ВычетИмущественныйПроцентыПриПерекредитованииОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
	//						ДоходЗаМесяцДляИмущественныхВычетов = ДоходЗаМесяцДляИмущественныхВычетов - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц;
	//						
	//						ВычетИмущественныйРасходыЗаМесяц = Мин(ДоходЗаМесяцДляИмущественныхВычетов, ВычетИмущественныйРасходыОстаток);
	//						ВычетИмущественныйРасходыОстаток = ВычетИмущественныйРасходыОстаток - ВычетИмущественныйРасходыЗаМесяц;
	//						ДоходЗаМесяцОстаток = ДоходЗаМесяцОстаток - ВычетИмущественныйРасходыЗаМесяц;
	//						
	//					КонецЕсли;
	//					
	//					ВсегоВычетовЗаМесяц = ВычетСоциальныйЗаМесяц + ВычетЛичныйЗаМесяц 
	//							+ ВычетНаДетейЗаМесяц + ВычетНаДетейДвойнойЗаМесяц + ВычетНаДетейДвойнойВторойЗаМесяц 
	//							+ ВычетНаТретьегоРебенкаЗаМесяц + ВычетНаТретьегоРебенкаДвойнойЗаМесяц + ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц 
	//							+ ВычетНаВторогоРебенкаЗаМесяц + ВычетНаВторогоРебенкаДвойнойЗаМесяц + ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц 
	//							+ ВычетНаДетейИнвалидовОпекуновЗаМесяц + ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц 
	//							+ ВычетРасходыНаСвоеОбучениеЗаМесяц + ВычетРасходыНаОбучениеДетейЗаМесяц + ВычетРасходыНаЛечениеЗаМесяц + ВычетСтраховыеВзносыНаМедУслугиЗаМесяц + ВычетРасходыНаДорогостоящееЛечениеЗаМесяц
	//							+ ВычетНаДетейИнвалидовЗаМесяц + ВычетНаДетейИнвалидовДвойнойЗаМесяц + ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц + ВычетИмущественныйПроцентыПоКредитамЗаМесяц + ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц + ВычетИмущественныйРасходыЗаМесяц;
	//					
	//					ЕстьВычетыЗаМесяц = ВычетСоциальныйЗаМесяц <> 0 Или ВычетЛичныйЗаМесяц <> 0 
	//							Или ВычетНаДетейЗаМесяц <> 0 Или ВычетНаДетейДвойнойЗаМесяц <> 0 Или ВычетНаДетейДвойнойВторойЗаМесяц <> 0 
	//							Или ВычетНаВторогоРебенкаЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойЗаМесяц <> 0 Или ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц <> 0 
	//							Или ВычетНаТретьегоРебенкаЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойЗаМесяц <> 0 Или ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц <> 0 
	//							Или ВычетНаДетейИнвалидовЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц <> 0 
	//							Или ВычетНаДетейИнвалидовОпекуновЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц <> 0 Или ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц <> 0 
	//							Или ВычетРасходыНаСвоеОбучениеЗаМесяц <> 0 Или ВычетРасходыНаОбучениеДетейЗаМесяц <> 0 Или ВычетРасходыНаЛечениеЗаМесяц <> 0 Или ВычетСтраховыеВзносыНаМедУслугиЗаМесяц <> 0 Или ВычетРасходыНаДорогостоящееЛечениеЗаМесяц <> 0
	//							Или ВычетИмущественныйПроцентыПоКредитамЗаМесяц <> 0 Или ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц <> 0 Или ВычетИмущественныйРасходыЗаМесяц <> 0;
	//				КонецЕсли;
	//				
	//				ДатаУчетаВычетов = ВыборкаРасчетов.МесяцНалоговогоПериода;
	//				ДоходыДляРаспределенияВычетов = Новый Массив;
	//				КоэффициентыДляРаспределенияВычетов = Новый Массив;
	//				
	//				НалогЗаМесяц = 0;
	//				Если ВыборкаРасчетов.ВсеДоходыЗаМесяц <> 0 Или ЭтоПерерасчет Тогда
	//					Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ИсчислятьНалогНарастающимИтогом") Цикл
	//						Если ВыборкаРасчетов.ИсчислятьНалогНарастающимИтогом Тогда
	//							
	//							// Расчет сумм налога
	//							ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
	//							ОблагаемыйДоходНаКонецМесяца = ОблагаемыйДоход;
	//							НалогЗаМесяц = 0;
	//							Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ДатаПолученияДохода") Цикл
	//								
	//								ЗаполнитьЗначенияСвойств(СтруктураПоискаПоДатам, ВыборкаРасчетов);
	//								
	//								Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоискаПоДатам);
	//								БазаРаспределения = 0;
	//								Для каждого СтрокаРаспределения Из Доходы Цикл
	//									БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	//								КонецЦикла; 
	//								Если БазаРаспределения = 0 Тогда
	//									// если доходов за прошлый месяц нет - будем использовать текущее распределение
	//									Доходы = ДоходыМесяцаРасчета;
	//									КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
	//								Иначе
	//									КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
	//								КонецЕсли;
	//								ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
	//								ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
	//								ДатаУчетаВычетов = ВыборкаРасчетов.ДатаПолученияДохода;

	//								ОблагаемыйДоходНаНачалоМесяца = ОблагаемыйДоход;
	//								ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = 0;
	//								ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = 0;
	//								ЕстьДоходыПромежуточногоРасчета = Ложь;
	//								ЕстьДоходыОкончательногоРасчета = Ложь;
	//								Пока ВыборкаРасчетов.Следующий() Цикл
	//									Если ВыборкаРасчетов.ЗарегистрированоДляПромежуточногоРасчета  Тогда 
	//										ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета = Мин(ВыборкаРасчетов.ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ВыборкаРасчетов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
	//										ЕстьДоходыПромежуточногоРасчета = Истина;
	//									Иначе
	//										ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета = Мин(ВыборкаРасчетов.ОблагаемыйДоходНарастающимИтогом, Макс(0, ОблагаемыйДоходНаНачалоМесяца + ВыборкаРасчетов.ОблагаемыйДоход - ВсегоВычетовЗаМесяц));
	//										ЕстьДоходыОкончательногоРасчета = Истина;
	//									КонецЕсли;
	//								КонецЦикла;
	//								
	//								// Расчет сумм налога
	//								Если ВыборкаРасчетов.ДатаПолученияДохода < ВыборкаРасчетов.МаксимальнаяДатаПолученияДоходаМесяца Тогда
	//									
	//									Если ЕстьДоходыПромежуточногоРасчета Тогда
	//										ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);			
	//										НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный, 0);
	//										НалогИсчисленный = НалогИсчисленный + НалогСДохода;
	//										НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
	//										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//									КонецЕсли;
	//									
	//									Если ЕстьДоходыОкончательногоРасчета Тогда
	//										ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);			
	//										НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
	//										НалогИсчисленный = НалогИсчисленный + НалогСДохода;
	//										НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
	//										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//									КонецЕсли;
	//									
	//								Иначе
	//									
	//									Если ЕстьДоходыПромежуточногоРасчета И ЕстьДоходыОкончательногоРасчета Тогда
	//										
	//										ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета);			
	//										НалогСДохода = Макс(Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный, 0);
	//										НалогИсчисленный = НалогИсчисленный + НалогСДохода;
	//										НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
	//										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//										
	//										ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);			
	//										НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
	//										НалогИсчисленный = НалогИсчисленный + НалогСДохода;
	//										НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
	//										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//										
	//										ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
	//									
	//									Иначе
	//										
	//										ОблагаемыйДоходДляИсчисленияНалога = Макс(0, ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета);			
	//										НалогСДохода = Окр(ОблагаемыйДоходДляИсчисленияНалога * ВыборкаРасчетов.СтавкаДляРезидента) - НалогИсчисленный;
	//										НалогИсчисленный = НалогИсчисленный + НалогСДохода;
	//										НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
	//										ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//										
	//										ОблагаемыйДоход = ОблагаемыйДоходНаКонецМесяцаПромежуточногоРасчета + ОблагаемыйДоходНаКонецМесяцаОкончательногоРасчета;
	//										
	//									КонецЕсли;
	//									
	//								КонецЕсли;
	//								
	//							КонецЦикла;
	//							
	//						Иначе	
	//							
	//							Пока ВыборкаРасчетов.СледующийПоЗначениюПоля("ДатаПолученияДохода") Цикл
	//								
	//								ЗаполнитьЗначенияСвойств(СтруктураПоискаПоДатам, ВыборкаРасчетов);
	//								
	//								Доходы = РаспределениеДоходовПоПодразделениям.НайтиСтроки(СтруктураПоискаПоДатам);
	//								БазаРаспределения = 0;
	//								Для каждого СтрокаРаспределения Из Доходы Цикл
	//									БазаРаспределения = БазаРаспределения + СтрокаРаспределения.СуммаДохода;
	//								КонецЦикла; 
	//								Если БазаРаспределения = 0 Тогда
	//									// если доходов за прошлый месяц нет - будем использовать текущее распределение
	//									Доходы = ДоходыМесяцаРасчета;
	//									КоэффициентыПодразделений = КоэффициентыПодразделенийМесяцаРасчета;
	//								Иначе
	//									КоэффициентыПодразделений = ОбщегоНазначения.ВыгрузитьКолонку(Доходы, "СуммаДохода");
	//								КонецЕсли;
	//								ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоходыДляРаспределенияВычетов, Доходы);
	//								ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КоэффициентыДляРаспределенияВычетов, КоэффициентыПодразделений);
	//								ДатаУчетаВычетов = ВыборкаРасчетов.ДатаПолученияДохода;
	//								
	//								Пока ВыборкаРасчетов.Следующий() Цикл
	//									
	//									НалогСДохода = ВыборкаРасчетов.НалогНерезидента;
	//									НалогЗаМесяц = НалогЗаМесяц + НалогСДохода;
	//									
	//									ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ВыборкаРасчетов.ДатаПолученияДохода, НалогСДохода, "НалогПоСтавке13", ВыборкаРасчетов, Доходы, КоэффициентыПодразделений, 0);
	//									
	//								КонецЦикла;
	//								
	//							КонецЦикла;
	//							
	//						КонецЕсли;
	//					КонецЦикла;
	//				КонецЕсли;
	//				
	//				ИндексПервойЗаписиВычета = ВспомогательнаяТаблицаМесяца.Количество();
	//				
	//				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, СтандартныхВычетовРанее.НайтиСтроки(СтруктураПоиска), "ПримененныйВычетЛичный," + РассчитываемыеРесурсыВычетовНаДетей());
	//				ВписатьВРезультатЗарегистрированныеВУчетеДанные(ВспомогательнаяТаблицаМесяца, ИмущественныхВычетовРанее.НайтиСтроки(СтруктураПоиска), РассчитываемыеРесурсыИмущественныхВычетов());
	//				
	//				Если ИндексПервойЗаписиВычета < ВспомогательнаяТаблицаМесяца.Количество() Тогда
	//					ИндексПоследнейЗаписиВычета	= ВспомогательнаяТаблицаМесяца.Количество() - 1;
	//					Для ИндексЗаписи = ИндексПервойЗаписиВычета По ИндексПоследнейЗаписиВычета Цикл
	//						ВспомогательнаяТаблицаМесяца[ИндексЗаписи].МесяцНалоговогоПериода = ДатаУчетаВычетов
	//					КонецЦикла;	
	//				КонецЕсли;						
	//				Если ЕстьВычетыЗаМесяц Тогда
	//					
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетЛичныйЗаМесяц, "ПримененныйВычетЛичный", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейЗаМесяц, "ПримененныйВычетНаДетей", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейДвойнойЗаМесяц, "ПримененныйВычетНаДетейДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаТретьегоРебенкаЗаМесяц, "ПримененныйВычетНаТретьегоРебенка", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаТретьегоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаТретьегоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаТретьегоРебенкаДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаВторогоРебенкаЗаМесяц, "ПримененныйВычетНаВторогоРебенка", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаВторогоРебенкаДвойнойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаВторогоРебенкаДвойнойВторойЗаМесяц, "ПримененныйВычетНаВторогоРебенкаДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейИнвалидовЗаМесяц, "ПримененныйВычетНаДетейИнвалидов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейИнвалидовДвойнойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойной", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейИнвалидовДвойнойВторойЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторой", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейИнвалидовОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейИнвалидовДвойнойОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетНаДетейИнвалидовДвойнойВторойОпекуновЗаМесяц, "ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетИмущественныйРасходыЗаМесяц, "ПримененныйВычетИмущественныйРасходы", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетИмущественныйПроцентыПоКредитамЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПоКредитам", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетИмущественныйПроцентыПриПерекредитованииЗаМесяц, "ПримененныйВычетИмущественныйПроцентыПриПерекредитовании", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетРасходыНаСвоеОбучениеЗаМесяц, "ПримененныйВычетРасходыНаСвоеОбучение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетРасходыНаОбучениеДетейЗаМесяц, "ПримененныйВычетРасходыНаОбучениеДетей", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетРасходыНаЛечениеЗаМесяц, "ПримененныйВычетРасходыНаЛечение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетСтраховыеВзносыНаМедУслугиЗаМесяц, "ПримененныйВычетСтраховыеВзносыНаМедУслуги", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					ВписатьРесурсВРезультатыРасчетов(ВспомогательнаяТаблицаМесяца, ДатаУчетаВычетов, ВычетРасходыНаДорогостоящееЛечениеЗаМесяц, "ПримененныйВычетРасходыНаДорогостоящееЛечение", СтруктураПоиска, ДоходыДляРаспределенияВычетов, КоэффициентыДляРаспределенияВычетов);
	//					
	//				КонецЕсли;
	//				
	//				// для 2015 года парные записи с + и - за месяц из-за уточнения учета в результаты расчетов не пишем
	//				ВспомогательнаяТаблицаМесяца.Свернуть("ФизическоеЛицо, МесяцНалоговогоПериода,Подразделение", СтрокаРесурсов);
	//				Если НачалоГода(ВыборкаРасчетов.МесяцНалоговогоПериода) = ДатаИзмененияИсчисленияДляИностранцев Тогда
	//					НачалоМесяца = НачалоМесяца(ВыборкаРасчетов.МесяцНалоговогоПериода);
	//					СтрокиНалогов = ВспомогательнаяТаблицаМесяца.Скопировать(,"Подразделение, НалогПоСтавке13");
	//					СтрокиНалогов.Свернуть("Подразделение", "НалогПоСтавке13");
	//					СтрокиОкругления = Новый Массив;
	//					СуммаСтрокОкругления = 0;
	//					Для каждого СтрокаТЗ Из СтрокиНалогов Цикл
	//						Если СтрокаТЗ.НалогПоСтавке13 * СтрокаТЗ.НалогПоСтавке13 = 1 Тогда
	//							СтрокиОкругления.Добавить(СтрокаТЗ);
	//							СуммаСтрокОкругления = СуммаСтрокОкругления + СтрокаТЗ.НалогПоСтавке13;
	//						КонецЕсли;
	//					КонецЦикла;
	//					Если СуммаСтрокОкругления = 0 Тогда
	//						Для каждого СтрокаТЗ Из СтрокиОкругления Цикл
	//							СтрокаТЗ.НалогПоСтавке13 = 0
	//						КонецЦикла;
	//					КонецЕсли;
	//					Для каждого СтрокаТЗ Из СтрокиНалогов Цикл
	//						СтрокиПодразделения = ВспомогательнаяТаблицаМесяца.НайтиСтроки(Новый Структура("Подразделение",СтрокаТЗ.Подразделение));
	//						Если СтрокиПодразделения.Количество() = 1 Тогда
	//							Продолжить;
	//						КонецЕсли;
	//						Если СтрокаТЗ.НалогПоСтавке13 = 0 Тогда
	//							Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
	//								СтрокаПодразделения.НалогПоСтавке13 = 0
	//							КонецЦикла;	
	//						Иначе
	//							СуммаПерерасчета = 0;
	//							Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
	//								Если СтрокаПодразделения.МесяцНалоговогоПериода = НачалоМесяца И СтрокаПодразделения.НалогПоСтавке13 < 0 Тогда
	//									СуммаПерерасчета = СтрокаПодразделения.НалогПоСтавке13;
	//									СтрокаНачалаМесяца = СтрокаПодразделения;
	//									Прервать;
	//								КонецЕсли;
	//							КонецЦикла;	
	//							Если СуммаПерерасчета < 0 Тогда
	//								Для каждого СтрокаПодразделения Из СтрокиПодразделения Цикл
	//									Если СуммаПерерасчета < 0 И СтрокаПодразделения.МесяцНалоговогоПериода > НачалоМесяца И СтрокаПодразделения.НалогПоСтавке13 > 0 Тогда
	//										СуммаЗачета = Мин(-СуммаПерерасчета, СтрокаПодразделения.НалогПоСтавке13);
	//										СтрокаНачалаМесяца.НалогПоСтавке13 = СтрокаНачалаМесяца.НалогПоСтавке13 + СуммаЗачета;
	//										СтрокаПодразделения.НалогПоСтавке13 = СтрокаПодразделения.НалогПоСтавке13 - СуммаЗачета;
	//										СуммаПерерасчета = СтрокаНачалаМесяца.НалогПоСтавке13;
	//									ИначеЕсли СуммаПерерасчета = 0 Тогда 
	//										Прервать;
	//									КонецЕсли;
	//								КонецЦикла;	
	//							КонецЕсли;
	//						КонецЕсли;
	//					КонецЦикла;
	//				КонецЕсли;
	//				Для каждого СтрокаТЗ Из ВспомогательнаяТаблицаМесяца Цикл
	//					ЕстьДанныеВСтроке = Ложь;
	//					Для каждого ИмяРесурса Из МассивРесурсов Цикл
	//						ЕстьДанныеВСтроке = СтрокаТЗ[ИмяРесурса] <> 0;
	//						Если ЕстьДанныеВСтроке Тогда
	//							Прервать;
	//						КонецЕсли;
	//					КонецЦикла;
	//					Если ЕстьДанныеВСтроке Тогда
	//						ЗаполнитьЗначенияСвойств(ВспомогательнаяТаблицаФизическогоЛица.Добавить(),СтрокаТЗ);
	//					КонецЕсли;
	//				КонецЦикла;
	//				
	//			КонецЦикла;
	//			
	//		КонецЦикла;
	//		
	//		Если Не ОкончательныйРасчет И ВспомогательнаяТаблицаФизическогоЛица.Количество() > 0 Тогда
	//			
	//			ТекущийНДФЛ = ВспомогательнаяТаблицаФизическогоЛица.Скопировать(ВспомогательнаяТаблицаФизическогоЛица.НайтиСтроки(СтруктураПоискаТекущегоНДФЛ));
	//			ТекущийНДФЛВсего = ТекущийНДФЛ.Итог("НалогПоСтавке13");
	//			Если ТекущийНДФЛВсего >= 0 Тогда 
	//				ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущийНДФЛ, РезультатыРасчетов);
	//				ВспомогательнаяТаблицаФизическогоЛица.Сортировать("МесяцНалоговогоПериода Убыв");
	//				// Налоги предыдущих периодов добавляем в пределах положительного налога текущего периода,
	//				// не допуская возврата налога.
	//				Для каждого СтрокаДанных Из ВспомогательнаяТаблицаФизическогоЛица Цикл
	//					Если СтрокаДанных.МесяцНалоговогоПериода = ТекущийПериод Тогда
	//						Продолжить;
	//					КонецЕсли;
	//					Если ТекущийНДФЛВсего + СтрокаДанных.НалогПоСтавке13 >= 0 Тогда
	//						ЗаполнитьЗначенияСвойств(РезультатыРасчетов.Добавить(), СтрокаДанных);
	//						ТекущийНДФЛВсего = ТекущийНДФЛВсего + СтрокаДанных.НалогПоСтавке13;
	//					ИначеЕсли ТекущийНДФЛВсего > 0 Тогда
	//						НоваяСтрока = РезультатыРасчетов.Добавить();
	//						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
	//						НоваяСтрока.НалогПоСтавке13 = - ТекущийНДФЛВсего;
	//						ТекущийНДФЛВсего = 0
	//					КонецЕсли;
	//				КонецЦикла;
	//			КонецЕсли;
	//			
	//		Иначе 			
	//			
	//			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВспомогательнаяТаблицаФизическогоЛица, РезультатыРасчетов)
	//			
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//КонецЕсли;
	//
	//НомерСтроки = 0;
	//Для каждого СтрокаТЗ Из РезультатыРасчетов Цикл
	//	НомерСтроки = НомерСтроки + 1;
	//    СтрокаТЗ.НомерСтроки = НомерСтроки;
	//КонецЦикла; 
	//
	//Запрос.УстановитьПараметр("РезультатыРасчетов",РезультатыРасчетов);
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	НАЧАЛОПЕРИОДА(Расчеты.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//|	Расчеты.ФизическоеЛицо,
	//|	Расчеты.НомерСтроки
	//|ПОМЕСТИТЬ ВТРезультатыРасчетов
	//|ИЗ
	//|	&РезультатыРасчетов КАК Расчеты
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	РезультатыРасчетов.НомерСтроки КАК НомерСтроки,
	//|	ЕСТЬNULL(ПравоНаЛичныеВычеты.КодВычета, ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)) КАК КодВычета
	//|ИЗ
	//|	ВТРезультатыРасчетов КАК РезультатыРасчетов
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПраваНаЛичныеВычеты КАК ПравоНаЛичныеВычеты
	//|		ПО РезультатыРасчетов.ФизическоеЛицо = ПравоНаЛичныеВычеты.ФизическоеЛицо
	//|			И РезультатыРасчетов.МесяцНалоговогоПериода = ПравоНаЛичныеВычеты.МесяцНалоговогоПериода
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	НомерСтроки";
	//РезультатыРасчетов.ЗагрузитьКолонку(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КодВычета"),"КодВычетаЛичный");
	//
	//Запрос.Текст =
	//"УНИЧТОЖИТЬ ВТДатыПоМесяцам
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПериодыПоГодам
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПериодыНалогаНаДоходы
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПериодыСрезаВычетов
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТСтандартныеВычетыПоНДФЛЗаПериод
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПраваНаВычетыНаДетей
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПраваНаЛичныеВычеты
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТРезидентствоФизлицНаКонецГода
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТРезидентствоФизлицНаКонецМесяца
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПериодыФизлиц
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТРазмерыСтандартныхВычетов
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПрименениеСтандартныхВычетов
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПравоНаИмущественныеВычеты
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТСведенияОДоходахНДФЛ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДоходыФизлиц
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПредоставленныеСтандартныеИСоциальныеВычеты
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПредоставленоИмущественныхВычетов
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТСоциальныеВычетыПомесячно
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДоходыСУчетомВычетовКДоходам
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДоходыРезидентовПоМесяцам
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДоходыРезидентовНарастающимЗаГод
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТПраваНаСтандартныеВычетыПоМесяцам
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТНалогНерезидентов
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТСтрокиУчета
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДанныеУчета
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДоходыСоСтавками
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТДоходыНалоги
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|УНИЧТОЖИТЬ ВТСтавкиНалогаЧислом";
	//Запрос.Выполнить();
	//
	//ВписатьВРезультатЗачтенныеАвансы(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "НалогПоСтавке13", "ЗачтеноАвансовыхПлатежейПоСтавке13", ИсключатьДоходыРегистратора);
	//ВписатьВРезультатНалогиКЗачетуВозврату(Регистратор, Организация, МесяцРасчета, РезультатыРасчетов, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, "НалогПоСтавке13", "ЗачтеноАвансовыхПлатежейПоСтавке13", "НалогПоСтавке13КЗачетуВозврату", ИсключатьДоходыРегистратора, ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога);
	
	Возврат РезультатНДФЛ;
	
КонецФункции

// Предназначена для расчета НДФЛ удержанного по записанным в учете данным и по 
// переданным данным о выплатах.
//
// Параметры:
//      Ссылка - ДокументСсылка - ссылка на документ-регистратор.
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		Организация
//      МенеджерТаблиц - МенеджерВременныхТаблиц, содержит вр. таблицу 
//      	ВТСписокСотрудников с полями 
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты
//          	ДокументОснование, необязательная, если передана, отбираются остатки по указанным документам
//
//  Возвращает таблицу значений удержанных сумм налогов в разрезе месяцев налогового периода и ставок.
//
Функция РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации = Неопределено) Экспорт
	
	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ДатаОперации));
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	РезультатыРасчетов = Новый ТаблицаЗначений;
	РезультатыРасчетов.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("ФизическоеЛицо",Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	РезультатыРасчетов.Колонки.Добавить("КодДохода",Новый ОписаниеТипов("СправочникСсылка.ВидыДоходовНДФЛ"));               
	РезультатыРасчетов.Колонки.Добавить("ОбособленноеПодразделение",Новый ОписаниеТипов("СправочникСсылка.ОбособленныеПодразделенияОрганизаций"));
	РезультатыРасчетов.Колонки.Добавить("ДокументОснование", Метаданные.ОпределяемыеТипы.ДокументыОснованияНДФЛ.Тип);
    РезультатыРасчетов.Колонки.Добавить("ПериодВзаиморасчетов",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("НалоговыйПериод",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("ГруппаУчетаУдержаний",Новый ОписаниеТипов("СправочникСсылка.ГруппыУчетаНачисленийИУдержаний"));               
	РезультатыРасчетов.Колонки.Добавить("Налог",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	РезультатыРасчетов.Колонки.Добавить("Доход",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТСписокСотрудников КАК СписокСотрудников";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатыРасчетов
	КонецЕсли;
	
	ПараметрыПолученияЗарплатыКВыплате = ВзаиморасчетыССотрудниками.ПараметрыПолученияЗарплатыКВыплатеВедомости(Ссылка);
	
	//НДФЛ может не перечисляться
	Если ПараметрыПолученияЗарплатыКВыплате.ПорядокЗаполненияНалогов <> Перечисления.ПорядокЗаполненияНалогов.НДФЛ
		И  ПараметрыПолученияЗарплатыКВыплате.ПорядокЗаполненияНалогов <> Перечисления.ПорядокЗаполненияНалогов.НДФЛИВзносы Тогда
		Возврат РезультатыРасчетов;	
	КонецЕсли;

    ПоВсемВидамДохода = (ПараметрыПолученияЗарплатыКВыплате.КодДоходаНДФЛ = Справочники.ВидыДоходовНДФЛ.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПоВсемВидамДохода", ПоВсемВидамДохода);
	
	ВидыДоходаНДФЛ = Новый Массив();
	ВидыДоходаНДФЛ.Добавить(ПараметрыПолученияЗарплатыКВыплате.КодДоходаНДФЛ);
	ВидыДоходаНДФЛ.Добавить(ПараметрыПолученияЗарплатыКВыплате.КодДоходаВС);
	Запрос.УстановитьПараметр("ВидыДоходаНДФЛ", ВидыДоходаНДФЛ);
	
	Если ПараметрыПолученияЗарплатыКВыплате.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		//Заполнение по зарплате - остатками
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТОтборПоСотрудникам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалоговыйПериод КАК МесяцНалоговогоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалогОстаток КАК Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДоходОстаток КАК Доход
		|ПОМЕСТИТЬ ВТНДФЛЗарплатаКВыплате
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Остатки(&ДатаОперации,ГоловнаяОрганизация = &ГоловнаяОрганизация И Организация = &Организация И (&ПоВсемВидамДохода ИЛИ КодДохода В (&ВидыДоходаНДФЛ))) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалогОстаток <> 0
		|   ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДоходОстаток <> 0
		|";
		
	ИначеЕсли ПараметрыПолученияЗарплатыКВыплате.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Тогда
		//Заполнение по межрасчетным - приходы и расходы по документам-основаниям
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование
		|ПОМЕСТИТЬ ВТОтборПоСотрудникам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалоговыйПериод КАК МесяцНалоговогоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалогОстаток КАК Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДоходОстаток КАК Доход
		|ПОМЕСТИТЬ ВТНДФЛЗарплатаКВыплате
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Остатки(&ДатаОперации,ГоловнаяОрганизация = &ГоловнаяОрганизация И Организация = &Организация И (&ПоВсемВидамДохода ИЛИ КодДохода В (&ВидыДоходаНДФЛ))) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|		 И СписокСотрудников.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
		|
		|ГДЕ
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалогОстаток <> 0
		|	ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДоходОстаток <> 0
		|";
		
	ИначеЕсли ПараметрыПолученияЗарплатыКВыплате.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда	
		//Заполнение по межрасчетным - приходы и расходы по документам-основаниям плюс исчисленные авансом
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование
		|ПОМЕСТИТЬ ВТОтборПоСотрудникам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалоговыйПериод КАК МесяцНалоговогоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалогОстаток КАК Сумма,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДоходОстаток КАК Доход
		|ПОМЕСТИТЬ ВТДвижения 
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Остатки(&ДатаОперации,ГоловнаяОрганизация = &ГоловнаяОрганизация И Организация = &Организация И (&ПоВсемВидамДохода ИЛИ КодДохода В (&ВидыДоходаНДФЛ))) КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|		 И СписокСотрудников.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
		|		 И СписокСотрудников.ДокументОснование <> НЕОПРЕДЕЛЕНО
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ		
		|	ИсчисленныйНДФЛАвансом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	ИсчисленныйНДФЛАвансом.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
		|	ИсчисленныйНДФЛАвансом.КодДохода КАК КодДохода,
		|	ИсчисленныйНДФЛАвансом.НалоговыйПериод КАК МесяцНалоговогоПериода,
		|	ИсчисленныйНДФЛАвансом.Регистратор КАК ДокументОснование,
		|	ИсчисленныйНДФЛАвансом.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	ИсчисленныйНДФЛАвансом.Налог КАК Сумма,
		|	ИсчисленныйНДФЛАвансом.Доход КАК Доход
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИсчисленныйНДФЛАвансом КАК ИсчисленныйНДФЛАвансом
		|		ПО СписокСотрудников.ФизическоеЛицо = ИсчисленныйНДФЛАвансом.ФизическоеЛицо
		|		 И (СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО)
		|			И (ИсчисленныйНДФЛАвансом.Организация = &Организация)
		|			И (НАЧАЛОПЕРИОДА(ИсчисленныйНДФЛАвансом.Период, МЕСЯЦ) = &ПериодРегистрации)
		|			И (&ПоВсемВидамДохода ИЛИ КодДохода В (&ВидыДоходаНДФЛ))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ		
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.НалоговыйПериод КАК МесяцНалоговогоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	-РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Налог КАК Сумма,
		|	-РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Доход КАК Доход
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
		|		 И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование = СписокСотрудников.ДокументОснование ИЛИ (СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование ССЫЛКА Документ.НачислениеЗаПервуюПоловинуМесяца))
		|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
		|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация)
		|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период <= &ДатаОперации)
		|			И (&ПоВсемВидамДохода ИЛИ РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода В (&ВидыДоходаНДФЛ))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование КАК ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) КАК Сумма,
		|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Доход) КАК Доход
		|ПОМЕСТИТЬ ВТНДФЛЗарплатаКВыплате
		|ИЗ
		|   ВТДвижения КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ПериодВзаиморасчетов,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГруппаУчетаУдержаний,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
		|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ОбособленноеПодразделение
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) <> 0
		|	ИЛИ СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Доход) <> 0
		|";
			
	КонецЕсли;
	
	Запрос.Выполнить();
	МассивНДФЛ = Справочники.ВидыДоходовНДФЛ.ВидыДоходовДляФСС();
	Запрос.УстановитьПараметр("НДФЛФСС", МассивНДФЛ);
	
	УчетнаяПолитикаПоНДФЛ = РегистрыСведений.УчетнаяПолитикаПоНДФЛ.СоздатьМенеджерЗаписи();
	УчетнаяПолитикаПоНДФЛ.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	УчетнаяПолитикаПоНДФЛ.Прочитать();
	
	Запрос.УстановитьПараметр("РазрешитьВыплатыДоОплаты", УчетнаяПолитикаПоНДФЛ.РазрешенаУплатаНалоговДоОплатыФСС);

	Запрос.Текст =  
	"ВЫБРАТЬ
	|	НДФЛЗарплатаКВыплате.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛЗарплатаКВыплате.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|	НДФЛЗарплатаКВыплате.ГруппаУчетаУдержаний КАК ГруппаУчетаУдержаний,
	|	НДФЛЗарплатаКВыплате.КодДохода КАК КодДохода,
	|	НДФЛЗарплатаКВыплате.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛЗарплатаКВыплате.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	НДФЛЗарплатаКВыплате.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА &РазрешитьВыплатыДоОплаты
	|				ИЛИ НЕ НДФЛЗарплатаКВыплате.КодДохода В (&НДФЛФСС)
	|				ИЛИ НЕ ОплатаПособийСоциальногоСтрахования.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА НДФЛЗарплатаКВыплате.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &РазрешитьВыплатыДоОплаты
	|				ИЛИ НЕ НДФЛЗарплатаКВыплате.КодДохода В (&НДФЛФСС)
	|				ИЛИ НЕ ОплатаПособийСоциальногоСтрахования.ДокументОснование ЕСТЬ NULL 
	|			ТОГДА НДФЛЗарплатаКВыплате.Доход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Доход
	|ИЗ
	|	ВТНДФЛЗарплатаКВыплате КАК НДФЛЗарплатаКВыплате
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОплатаПособийСоциальногоСтрахования КАК ОплатаПособийСоциальногоСтрахования
	|		ПО НДФЛЗарплатаКВыплате.ДокументОснование = ОплатаПособийСоциальногоСтрахования.ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	НДФЛЗарплатаКВыплате.ФизическоеЛицо.Наименование,
	|	НДФЛЗарплатаКВыплате.ПериодВзаиморасчетов,
	|	НДФЛЗарплатаКВыплате.МесяцНалоговогоПериода,
	|	НДФЛЗарплатаКВыплате.КодДохода.Код";
	
	РезультатыРасчетов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаНДФЛ Из РезультатыРасчетов Цикл
		
		// Процент выплаты надо учесть в сумме доходов
		Если ЗначениеЗаполнено(Ссылка.ПроцентВыплаты) И Ссылка.ПроцентВыплаты <> 100 Тогда
			СтрокаНДФЛ.Доход = СтрокаНДФЛ.Доход * Ссылка.ПроцентВыплаты/100;
		КонецЕсли;
		
		//НДФЛ может не перечисляться
		Если ПараметрыПолученияЗарплатыКВыплате.ПорядокЗаполненияНалогов <> Перечисления.ПорядокЗаполненияНалогов.НДФЛ
			И  ПараметрыПолученияЗарплатыКВыплате.ПорядокЗаполненияНалогов <> Перечисления.ПорядокЗаполненияНалогов.НДФЛИВзносы Тогда
			СтрокаНДФЛ.Сумма = 0;	
		КонецЕсли;	
		
	КонецЦикла;

	

	//////Запрос.Текст =  
	//////"ВЫБРАТЬ
	//////|	&КонецМесяца КАК Период,
	//////|	СписокСотрудников.ФизическоеЛицо,
	//////|	СУММА(СписокСотрудников.СуммаВыплаты) КАК СуммаВыплаты
	//////|ПОМЕСТИТЬ ВТСуммыНДФЛПоСотрудникам
	//////|ИЗ
	//////|	ВТСписокСотрудников КАК СписокСотрудников
	//////|
	//////|СГРУППИРОВАТЬ ПО
	//////|	СписокСотрудников.ФизическоеЛицо
	//////|;
	//////|
	//////|////////////////////////////////////////////////////////////////////////////////
	//////|ВЫБРАТЬ
	//////|	МИНИМУМ(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период) КАК ДатаНачисления,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Период,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода КАК КодДохода,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация КАК Организация,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение КАК Подразделение,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	//////|	СУММА(ВЫБОР
	//////|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//////|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	//////|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	//////|		КОНЕЦ) КАК СуммаОстаток,
	//////|	МАКСИМУМ(СуммыНДФЛПоСотрудникам.СуммаВыплаты) КАК СуммаВыплаты,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
	//////|ПОМЕСТИТЬ ВТПодробно
	//////|ИЗ
	//////|	ВТСуммыНДФЛПоСотрудникам КАК СуммыНДФЛПоСотрудникам
	//////|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	//////|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	//////|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	//////|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор)
	//////|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация)
	//////|			И (РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период <= &ДатаОперации)
	//////|
	//////|СГРУППИРОВАТЬ ПО
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КодДохода,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Подразделение,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВключатьВДекларациюПоНалогуНаПрибыль,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование,
	//////|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
	//////|
	//////|ИМЕЮЩИЕ
	//////|	СУММА(ВЫБОР
	//////|			КОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//////|				ТОГДА РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	//////|			ИНАЧЕ -РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма
	//////|		КОНЕЦ) <> 0";
	//////Запрос.Выполнить();
	//////
	//////СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТПодробно");
	//////
	//////Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
	//////	
	//////	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПериодРегистрации));
	//////	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	//////	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	//////	Запрос.Текст =  
	//////	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	//////	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	//////	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода) КАК НалоговыйПериод
	//////	|ПОМЕСТИТЬ ВТПерерасчетыПрошлыхПериодов
	//////	|ИЗ
	//////	|	ВТСуммыНДФЛПоСотрудникам КАК СписокСотрудников
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
	//////	|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
	//////	|ГДЕ
	//////	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//////	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Период МЕЖДУ &НачалоПериода И &КонецПериода
	//////	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Регистратор <> &Регистратор
	//////	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода < &НачалоГода
	//////	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//////	|	И РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Организация = &Организация
	//////	|
	//////	|СГРУППИРОВАТЬ ПО
	//////	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо,
	//////	|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СтавкаНалогообложенияРезидента,
	//////	|	ГОД(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода)
	//////	|
	//////	|ИМЕЮЩИЕ
	//////	|	СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) < 0
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//////	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
	//////	|ПОМЕСТИТЬ ВТПоФизическомуЛицуЗаМесяц
	//////	|ИЗ
	//////	|	ВТПодробно КАК ПодробныеДанные
	//////	|
	//////	|СГРУППИРОВАТЬ ПО
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ)
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод,
	//////	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
	//////	|	МАКСИМУМ(ПодробныеДанные.МесяцНалоговогоПериода) КАК МесяцНалоговогоПериода
	//////	|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод
	//////	|ИЗ
	//////	|	ВТПоФизическомуЛицуЗаМесяц КАК ПодробныеДанные
	//////	|
	//////	|СГРУППИРОВАТЬ ПО
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
	//////	|	СУММА(ВЫБОР
	//////	|			КОГДА ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL 
	//////	|					И ПодробныеДанные.СуммаОстаток < 0
	//////	|				ТОГДА ПодробныеДанные.СуммаОстаток
	//////	|			ИНАЧЕ 0
	//////	|		КОНЕЦ) КАК ВозвратПрошлыхПериодов
	//////	|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
	//////	|ИЗ
	//////	|	ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ПодробныеДанные
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
	//////	|		ПО ПодробныеДанные.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
	//////	|			И ПодробныеДанные.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
	//////	|			И ПодробныеДанные.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
	//////	|ГДЕ
	//////	|	(ПодробныеДанные.СуммаОстаток > 0
	//////	|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
	//////	|
	//////	|СГРУППИРОВАТЬ ПО
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ
	//////	|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	//////	|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	//////	|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод КАК НалоговыйПериод,
	//////	|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
	//////	|	ВсегоПоФизическомуЛицуЗаНалоговыйПериод.МесяцНалоговогоПериода КАК ПоследнийМесяцНалоговогоПериода,
	//////	|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//////	|	НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяцаНалоговогоПериода,
	//////	|	СуммыНДФЛПоСотрудникам.ДатаНачисления КАК Период,
	//////	|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	//////	|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
	//////	|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
	//////	|	СуммыНДФЛПоСотрудникам.СуммаОстаток,
	//////	|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
	//////	|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
	//////	|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	//////	|	СуммыНДФЛПоСотрудникам.СуммаВыплаты - ВсегоПоФизическомуЛицу.ВозвратПрошлыхПериодов КАК СуммаВыплаты,
	//////	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
	//////	|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц,
	//////	|	СуммыНДФЛПоСотрудникам.СуммаВыплаты КАК СуммаВыплаченногоДохода
	//////	|ИЗ
	//////	|	ВТПодробно КАК СуммыНДФЛПоСотрудникам
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод КАК ВсегоПоФизическомуЛицуЗаНалоговыйПериод
	//////	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТПерерасчетыПрошлыхПериодов КАК ПерерасчетыПрошлыхПериодов
	//////	|			ПО ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо = ПерерасчетыПрошлыхПериодов.ФизическоеЛицо
	//////	|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента = ПерерасчетыПрошлыхПериодов.СтавкаНалогообложенияРезидента
	//////	|				И ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод = ПерерасчетыПрошлыхПериодов.НалоговыйПериод
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СтавкаНалогообложенияРезидента
	//////	|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицуЗаНалоговыйПериод.НалоговыйПериод)
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
	//////	|			И (НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода)
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	//////	|			И СуммыНДФЛПоСотрудникам.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	//////	|			И СуммыНДФЛПоСотрудникам.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	//////	|ГДЕ
	//////	|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
	//////	|	И (ВсегоПоФизическомуЛицуЗаНалоговыйПериод.СуммаОстаток > 0
	//////	|			ИЛИ ПерерасчетыПрошлыхПериодов.ФизическоеЛицо ЕСТЬ НЕ NULL )
	//////	|
	//////	|УПОРЯДОЧИТЬ ПО
	//////	|	ФизическоеЛицо,
	//////	|	СтавкаНалогообложенияРезидента,
	//////	|	НалоговыйПериод,
	//////	|	НачалоМесяцаНалоговогоПериода,
	//////	|	МесяцНалоговогоПериода,
	//////	|	Период,
	//////	|	ДокументОснование,
	//////	|	РегистрацияВНалоговомОргане,
	//////	|	Подразделение,
	//////	|	ВключатьВДекларациюПоНалогуНаПрибыль,
	//////	|	Ставка
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТПодробно
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТСуммыНДФЛПоСотрудникам
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТПоФизическомуЛицуЗаМесяц
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТВсегоПоФизическомуЛицу
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТПерерасчетыПрошлыхПериодов
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТВсегоПоФизическомуЛицуЗаНалоговыйПериод";
	//////	
	//////	Выборка = Запрос.ВыполнитьПакет()[4].Выбрать();
	//////	
	//////Иначе
	//////	
	//////	Запрос.Текст =  
	//////	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток,
	//////	|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода) КАК НалоговыйПериод
	//////	|ПОМЕСТИТЬ ВТВсегоПоФизическомуЛицу
	//////	|ИЗ
	//////	|	ВТПодробно КАК ПодробныеДанные
	//////	|
	//////	|СГРУППИРОВАТЬ ПО
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	ГОД(ПодробныеДанные.МесяцНалоговогоПериода)
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	//////	|	СУММА(ПодробныеДанные.СуммаОстаток) КАК СуммаОстаток
	//////	|ПОМЕСТИТЬ ВТПоФизическомуЛицуЗаМесяц
	//////	|ИЗ
	//////	|	ВТПодробно КАК ПодробныеДанные
	//////	|
	//////	|СГРУППИРОВАТЬ ПО
	//////	|	ПодробныеДанные.ФизическоеЛицо,
	//////	|	ПодробныеДанные.СтавкаНалогообложенияРезидента,
	//////	|	НАЧАЛОПЕРИОДА(ПодробныеДанные.МесяцНалоговогоПериода, МЕСЯЦ)
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ
	//////	|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
	//////	|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	//////	|	ВсегоПоФизическомуЛицу.НалоговыйПериод КАК НалоговыйПериод,
	//////	|	ВсегоПоФизическомуЛицу.СуммаОстаток КАК ОстатокЗаНалоговыйПериод,
	//////	|	НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) КАК НачалоМесяцаНалоговогоПериода,
	//////	|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	//////	|	СуммыНДФЛПоСотрудникам.ДатаНачисления КАК Период,
	//////	|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	//////	|	СуммыНДФЛПоСотрудникам.КодДохода КАК КодДохода,
	//////	|	СуммыНДФЛПоСотрудникам.ДокументОснование КАК ДокументОснование,
	//////	|	СуммыНДФЛПоСотрудникам.СуммаОстаток,
	//////	|	СуммыНДФЛПоСотрудникам.Организация КАК Организация,
	//////	|	СуммыНДФЛПоСотрудникам.Подразделение КАК Подразделение,
	//////	|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль КАК ВключатьВДекларациюПоНалогуНаПрибыль,
	//////	|	СуммыНДФЛПоСотрудникам.СуммаВыплаты,
	//////	|	СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ КАК Ставка,
	//////	|	ПоФизическомуЛицуЗаМесяц.СуммаОстаток КАК СуммаЗаМесяц,
	//////	|	СуммыНДФЛПоСотрудникам.СуммаВыплаты КАК СуммаВыплаченногоДохода
	//////	|ИЗ
	//////	|	ВТПодробно КАК СуммыНДФЛПоСотрудникам
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВсегоПоФизическомуЛицу КАК ВсегоПоФизическомуЛицу
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ВсегоПоФизическомуЛицу.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ВсегоПоФизическомуЛицу.СтавкаНалогообложенияРезидента
	//////	|			И (ГОД(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода) = ВсегоПоФизическомуЛицу.НалоговыйПериод)
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоФизическомуЛицуЗаМесяц КАК ПоФизическомуЛицуЗаМесяц
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = ПоФизическомуЛицуЗаМесяц.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = ПоФизическомуЛицуЗаМесяц.СтавкаНалогообложенияРезидента
	//////	|			И (НАЧАЛОПЕРИОДА(СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода, МЕСЯЦ) = ПоФизическомуЛицуЗаМесяц.МесяцНалоговогоПериода)
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	//////	|		ПО СуммыНДФЛПоСотрудникам.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	//////	|			И СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	//////	|			И СуммыНДФЛПоСотрудникам.Период = СтавкаНДФЛПоСтавкеРезидента.Период
	//////	|			И СуммыНДФЛПоСотрудникам.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	//////	|ГДЕ
	//////	|	ВсегоПоФизическомуЛицу.СуммаОстаток > 0
	//////	|
	//////	|УПОРЯДОЧИТЬ ПО
	//////	|	ФизическоеЛицо,
	//////	|	СтавкаНалогообложенияРезидента,
	//////	|	НалоговыйПериод,
	//////	|	НачалоМесяцаНалоговогоПериода,
	//////	|	МесяцНалоговогоПериода,
	//////	|	Период,
	//////	|	ДокументОснование,
	//////	|	РегистрацияВНалоговомОргане,
	//////	|	Подразделение,
	//////	|	ВключатьВДекларациюПоНалогуНаПрибыль,
	//////	|	Ставка
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТСтавкаНДФЛПоСтавкеРезидента
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТСуммыНДФЛПоСотрудникам
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТПоФизическомуЛицуЗаМесяц
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТВсегоПоФизическомуЛицу
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТПодробно";
	//////	
	//////	Выборка = Запрос.ВыполнитьПакет()[2].Выбрать();
	//////	
	//////КонецЕсли;
	//////
	//////ВременнаяТаблица = РезультатыРасчетов.СкопироватьКолонки();
	//////НеУчитыватьРазмерыВыплат = ДатаОперации >= ДатаИзмененияСроковУплатыНалога(); 
	//////Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл 
	//////	
	//////	ВременнаяТаблица.Очистить();
	//////	СуммаКРаспределению = Выборка.СуммаВыплаты;
	//////	Пока Выборка.СледующийПоЗначениюПоля("СтавкаНалогообложенияРезидента") И (НеУчитыватьРазмерыВыплат Или СуммаКРаспределению >= 0) Цикл 
	//////		Пока Выборка.СледующийПоЗначениюПоля("НалоговыйПериод") И (НеУчитыватьРазмерыВыплат Или СуммаКРаспределению >= 0) Цикл 
	//////			Если Выборка.ОстатокЗаНалоговыйПериод >= 0 Тогда
	//////				ОстатокКУдержанию = 0;
	//////				Пока Выборка.СледующийПоЗначениюПоля("НачалоМесяцаНалоговогоПериода") И (НеУчитыватьРазмерыВыплат Или СуммаКРаспределению > 0) Цикл 
	//////					ОстатокКУдержанию = ОстатокКУдержанию + Выборка.СуммаЗаМесяц;
	//////					Если ОстатокКУдержанию > 0 И Выборка.СуммаЗаМесяц > 0 Тогда
	//////						Пока Выборка.Следующий() И (НеУчитыватьРазмерыВыплат Или СуммаКРаспределению > 0) И ОстатокКУдержанию > 0 Цикл
	//////							Если Выборка.СуммаОстаток > 0 Тогда
	//////								
	//////								СписываемаяСумма = ?(НеУчитыватьРазмерыВыплат, Мин(Выборка.СуммаОстаток, ОстатокКУдержанию), Мин(Выборка.СуммаОстаток, СуммаКРаспределению, ОстатокКУдержанию));;
	//////								СуммаКРаспределению = СуммаКРаспределению - СписываемаяСумма;
	//////								ОстатокКУдержанию = ОстатокКУдержанию - СписываемаяСумма;
	//////								
	//////								СтрокаТаблицыРезультатов = ВременнаяТаблица.Добавить();
	//////								ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
	//////								СтрокаТаблицыРезультатов.Сумма = СписываемаяСумма;			
	//////								
	//////							КонецЕсли;
	//////						КонецЦикла;			
	//////					КонецЕсли;
	//////				КонецЦикла;			
	//////			Иначе
	//////				СуммаКРаспределению = СуммаКРаспределению - Выборка.ОстатокЗаНалоговыйПериод;
	//////				СтрокаТаблицыРезультатов = ВременнаяТаблица.Добавить();
	//////				ЗаполнитьЗначенияСвойств(СтрокаТаблицыРезультатов, Выборка);
	//////				СтрокаТаблицыРезультатов.Сумма = Выборка.ОстатокЗаНалоговыйПериод;			
	//////				СтрокаТаблицыРезультатов.МесяцНалоговогоПериода = Выборка.ПоследнийМесяцНалоговогоПериода;			
	//////			КонецЕсли;
	//////		КонецЦикла;	
	//////	КонецЦикла;	
	//////	
	//////	КоэффициентыРаспределения = ВременнаяТаблица.ВыгрузитьКолонку("Сумма");
	//////	РаспределениеРесурса = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаВыплаченногоДохода, КоэффициентыРаспределения);
	//////	Если РаспределениеРесурса <> Неопределено Тогда
	//////		ВременнаяТаблица.ЗагрузитьКолонку(РаспределениеРесурса, "СуммаВыплаченногоДохода");
	//////	КонецЕсли;
	//////	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
	//////		СтрокаТЗ.СуммаВыплаченногоДохода = СтрокаТЗ.СуммаВыплаченногоДохода + СтрокаТЗ.Сумма
	//////	КонецЦикла;
	//////	
	//////	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВременнаяТаблица,РезультатыРасчетов);
	//////	
	//////КонецЦикла;	
	//////
	//////Если ОтбиратьПоДокументуОснованию Тогда
	//////	
	//////	Запрос.УстановитьПараметр("РезультатыРасчетов", РезультатыРасчетов);
	//////	Запрос.Текст =  
	//////	"ВЫБРАТЬ
	//////	|	СуммыНДФЛПоСотрудникам.ФизическоеЛицо,
	//////	|	СуммыНДФЛПоСотрудникам.СтавкаНалогообложенияРезидента,
	//////	|	СуммыНДФЛПоСотрудникам.МесяцНалоговогоПериода,
	//////	|	СуммыНДФЛПоСотрудникам.Период,
	//////	|	СуммыНДФЛПоСотрудникам.РегистрацияВНалоговомОргане,
	//////	|	СуммыНДФЛПоСотрудникам.КодДохода,
	//////	|	СуммыНДФЛПоСотрудникам.ДокументОснование,
	//////	|	СуммыНДФЛПоСотрудникам.Подразделение,
	//////	|	СуммыНДФЛПоСотрудникам.ВключатьВДекларациюПоНалогуНаПрибыль,
	//////	|	СуммыНДФЛПоСотрудникам.Ставка,
	//////	|	СуммыНДФЛПоСотрудникам.Сумма
	//////	|ПОМЕСТИТЬ ВТРезультатыРасчетов
	//////	|ИЗ
	//////	|	&РезультатыРасчетов КАК СуммыНДФЛПоСотрудникам
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//////	|	СписокСотрудников.ФизическоеЛицо,
	//////	|	СписокСотрудников.ДокументОснование
	//////	|ПОМЕСТИТЬ ВТПодробно
	//////	|ИЗ
	//////	|	ВТСписокСотрудников КАК СписокСотрудников
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|ВЫБРАТЬ
	//////	|	РезультатыРасчетов.ФизическоеЛицо,
	//////	|	РезультатыРасчетов.СтавкаНалогообложенияРезидента,
	//////	|	РезультатыРасчетов.МесяцНалоговогоПериода,
	//////	|	РезультатыРасчетов.Период,
	//////	|	РезультатыРасчетов.РегистрацияВНалоговомОргане,
	//////	|	РезультатыРасчетов.КодДохода,
	//////	|	РезультатыРасчетов.ДокументОснование,
	//////	|	РезультатыРасчетов.Подразделение,
	//////	|	РезультатыРасчетов.ВключатьВДекларациюПоНалогуНаПрибыль,
	//////	|	РезультатыРасчетов.Ставка,
	//////	|	РезультатыРасчетов.Сумма
	//////	|ИЗ
	//////	|	ВТПодробно КАК Физлица
	//////	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРезультатыРасчетов КАК РезультатыРасчетов
	//////	|		ПО Физлица.ФизическоеЛицо = РезультатыРасчетов.ФизическоеЛицо
	//////	|			И Физлица.ДокументОснование = РезультатыРасчетов.ДокументОснование
	//////	|ГДЕ
	//////	|	РезультатыРасчетов.ФизическоеЛицо ЕСТЬ НЕ NULL ";
	//////	
	//////	РезультатыРасчетов = Запрос.Выполнить().Выгрузить();
	//////	
	//////	Запрос.Текст =  
	//////	"УНИЧТОЖИТЬ ВТРезультатыРасчетов
	//////	|;
	//////	|
	//////	|////////////////////////////////////////////////////////////////////////////////
	//////	|УНИЧТОЖИТЬ ВТПодробно";
	//////	
	//////	Запрос.Выполнить();
	//////	
	//////КонецЕсли;
	
	Возврат РезультатыРасчетов;
	
КонецФункции

// Предназначена для расчета и регистрации НДФЛ удержанного 
// по записанным в учете данным и по переданным данным о выплатах.
//
// Параметры:
//      Ссылка  - ДокументСсылка - ссылка на документ-регистратор.
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//      МенеджерТаблиц - МенеджерВременныхТаблиц, должен содержать временную таблицу с данными о выплатах вида:
//      	ВТСписокСотрудников 
//				ФизическоеЛицо: должно быть непустым
//          	СуммаВыплаты.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
//  Формирует движения по регистрам подсистемы.
//
Процедура РассчитатьИЗарегистрироватьУдержанныеНалоги(Ссылка, Движения, Отказ, Организация, ДатаОперации, МенеджерТаблиц, Записывать = Ложь, ПериодРегистрации = Неопределено) Экспорт
	
	УдержанныйНалог = РассчитатьУдержанныеНалоги(Ссылка, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации);
	
	СформироватьУдержанныйНалогПоТаблицеЗначений(Движения, Отказ, Организация, ДатаОперации, УдержанныйНалог, , Истина);
	
	
КонецПроцедуры	

// Процедура регистрирует факт неудачи при попытке выплаты зарплаты документом.
// При этом ранее удержанные при выплате налоги "сторнируются".
//
// Параметры:
//		Движения 		- КоллекцияДвижений, коллекция наборов записей движений ведомости.
//		Отказ			- признак отказа выполнения операции.
//		Документ		- ссылка на документ, которым ранее была зарегистрирована выплата зарплаты.
//		ФизическиеЛица	- массив ссылок на физические лица.
//
// Обработка ошибочных ситуаций
//	выдается сообщение, признак «Отказ» выставляется в Истина.
//
Процедура ЗарегистрироватьНевыплатуДокументом(Движения, Отказ, Документ, ФизическиеЛица) Экспорт
	
	// Расчеты налогоплательщиков с бюджетом.
	РасчетыНалогоплательщиков = РегистрыНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
	РасчетыНалогоплательщиков.Отбор.Регистратор.Установить(Документ);
	РасчетыНалогоплательщиков.Прочитать();
	
	РасчетыНалогоплательщиковСторно	= РасчетыНалогоплательщиков.ВыгрузитьКолонки();
	Для Каждого ЗаписьВедомости Из РасчетыНалогоплательщиков Цикл
		Если ФизическиеЛица.Найти(ЗаписьВедомости.ФизическоеЛицо) <> Неопределено Тогда
			СтрокаСторно = РасчетыНалогоплательщиковСторно.Добавить() ;
			ЗаполнитьЗначенияСвойств(СтрокаСторно, ЗаписьВедомости);
			СтрокаСторно.Сумма = - ЗаписьВедомости.Сумма;
		КонецЕсли	
	КонецЦикла;
	
	Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Загрузить(РасчетыНалогоплательщиковСторно);
	Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Записывать= Истина;
	
	
КонецПроцедуры

// Уточняет значение поля РегистрацияВНалоговомОргане в строке регистра.
// Параметры:
//		СтрокаДанных - срока набора записей учетного регистра, содержит поле РегистрацияВНалоговомОргане.
//      РегистрацияПодразделенияВНалоговомОргане - регистрация в НО, указанная в подразделении (возможно пустая).
//      РегистрацияОрганизацииВНалоговомОргане - регистрация в НО, указанная в организации.
//
Процедура ПроставитьРегистрациюВНалоговомОрганеВСтроке(СтрокаДанных, РегистрацияПодразделенияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане) Экспорт
	СтрокаДанных.РегистрацияВНалоговомОргане = ?(ЗначениеЗаполнено(РегистрацияПодразделенияВНалоговомОргане), РегистрацияПодразделенияВНалоговомОргане, РегистрацияОрганизацииВНалоговомОргане);
КонецПроцедуры	

// Формирует строку движения по регистру СведенияОДоходахНДФЛ.
//
// Параметры:
//		СведенияОДоходахНДФЛ - набор записей регистра накопления СведенияОДоходахНДФЛ.
//		Организация
//		ДатаОперации - дата - дата, которой будет зарегистрировано движение.
//		ДанныеДокумента - некоторая структура (строка таблицы значений, выборки из результата запроса и т.п.) 
//				с полями, соответствующими полям регистра (в структуре могут отсутствовать необязательные поля):
//					ФизическоеЛицо, с непустым значением
//					ДатаПолученияДохода, с непустым значением
//					МесяцНалоговогоПериода, с непустым значением
//					КодДохода, с непустым значением
//					КодВычета
//					СтавкаНалогообложения
//					ИсточникДоходаЗаПределамиРФ
//					РегистрацияВНалоговомОргане
//					СуммаДохода
//					СуммаВычета.
//					Начисление
//					Подразделение
//					Сотрудник
//		ОкончательныйРасчет - булево - признак того, надо ли помечать движения как предназначенные для межрасчетного
//		                               исчисления налога.
//
Функция СтрокаСведенийОДоходах(СведенияОДоходахНДФЛ, Организация, МесяцНачисления, ДанныеДокумента, ОкончательныйРасчет = Истина) Экспорт
	
	НоваяСтрока = СведенияОДоходахНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = МесяцНачисления;
	Если НЕ ЗначениеЗаполнено(НоваяСтрока.НалоговыйПериод) Тогда
		НоваяСтрока.НалоговыйПериод = УчетНДФЛПовтИсп.ОпределитьНалоговыйПериод(НачалоМесяца(МесяцНачисления),ДанныеДокумента.ПериодДействия,ДанныеДокумента.КодДохода,ДанныеДокумента.КатегорияНачисления);
	КонецЕсли;	
	НоваяСтрока.ДоходМежрасчетногоПериода = Не ОкончательныйРасчет;

    СтрокаСведенийОДоходахВС(СведенияОДоходахНДФЛ, Организация, МесяцНачисления, ДанныеДокумента, ОкончательныйРасчет);

	Возврат НоваяСтрока
	
КонецФункции


// Добавляет в МенеджерВременныхТаблиц временную таблицу с данными НДФЛ по документу.
//
Процедура СоздатьВТДанныеНДФЛПоДокументу(МенеджерВременныхТаблиц, ДокументСсылка, ОписаниеТаблицДокумента = Неопределено, ФизическиеЛица = Неопределено) Экспорт
	

	Если ФизическиеЛица = Неопределено Тогда
		ОтборПоФизическимЛицам = Ложь;
	Иначе
		ОтборПоФизическимЛицам = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Ссылка,
	|	ТаблицаНДФЛ.ИдентификаторСтрокиНДФЛ КАК ИдентификаторСтроки,
	|	ТаблицаНДФЛ.НомерСтроки,
	|	ТаблицаНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаНДФЛ.КодДохода КАК КодДохода,
	|   ВЫБОР
	|   	КОГДА НЕ (ВидыДоходов.Ссылка ЕСТЬ NULL)
	|   	ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ВоенныйСбор)
	|   	ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|   КОНЕЦ КАК ВидУдержания,
	|   ВЫБОР
	|   	КОГДА НЕ (ВидыДоходов.Ссылка ЕСТЬ NULL)
	|   	ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.ВоенныйСбор)
	|   	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.НДФЛ)
	|   КОНЕЦ КАК ГруппаУчетаУдержаний,
	|	ТаблицаНДФЛ.НалоговыйПериод КАК НалоговыйПериод,
	|	ТаблицаНДФЛ.Подразделение КАК Подразделение,
	|	ТаблицаНДФЛ.Налог КАК Налог,
	|	ТаблицаНДФЛ.Доход КАК Доход,
	|	ТаблицаНДФЛ.ВидСтавки КАК ВидСтавки,
	|	ТаблицаНДФЛ.УвеличеннаяСтавка КАК УвеличеннаяСтавка,
	|	ТаблицаНДФЛ.Льгота КАК Льгота,
	|	ТаблицаНДФЛ.КоличествоЛьгот КАК КоличествоЛьгот,
	|	ТаблицаНДФЛ.СуммаЛьготы КАК СуммаЛьготы,
	|	ТаблицаНДФЛ.ДоходПолный КАК ДоходПолный
	|ПОМЕСТИТЬ ВТДанныеНДФЛ
	|ИЗ
	|	#ТаблицаНДФЛ КАК ТаблицаНДФЛ
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   Справочник.ВидыДоходовНДФЛ КАК ВидыДоходов
	|   ПО ВидыДоходов.Ссылка = ТаблицаНДФЛ.КодДохода
	|    И ВидыДоходов.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	|ГДЕ
	|	ТаблицаНДФЛ.Ссылка = &Ссылка
	|	И ТаблицаНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)
	|";
	
	Если ОписаниеТаблицДокумента = Неопределено Тогда
		ПолноеИмяДокумента = ДокументСсылка.Метаданные().ПолноеИмя();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ПолноеИмяДокумента + ".НДФЛ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаНДФЛ", ОписаниеТаблицДокумента.ИмяТаблицыСНалогами);
	КонецЕсли;
	
	// Создаем временную таблицу ВТДанныеНДФЛ.
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если ОтборПоФизическимЛицам Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ТаблицаНДФЛ.ФизическоеЛицо В(&ФизическиеЛица)", "");
	КонецЕсли; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает таблицу значений с данными по НДФЛ, прочитанную из данных документа.
//      	 
// Параметры:
//      ДокументСсылка - ДокументСсылка - документ, содержащий сведения о суммах налогов и вычетов.
//      ОписаниеТаблицДокумента - структура - (необязательный), с полями
//      			ИмяТаблицыСНалогами
//      			ИмяТаблицыСВычетами
//      	если не указан, в качестве источника данных используются табличные
//      		части документа: НДФЛ и ПримененныеВычетыНаДетейИИмущественные
//      	если указан, тогда упомянутые таблицы (реальные или временные) должны  
//				иметь тот же состав полей, что имеют табличные части документа 
//				НачислениеЗарплаты НДФЛ и ПримененныеВычетыНаДетейИИмущественные.
//		МенеджерВременныхТаблиц - (необязательный), должен содержать перечисленные 
//      	в ОписаниеТаблицДокумента временные таблицы.
//      	 
// Возвращаемое значение:
//	таблица значений с колонками:
//		Ссылка,
//		НомерСтроки,
//		ФизическоеЛицо,
//		МесяцНалоговогоПериода,
//		Подразделение,
//		НалогПоСтавке13,
//		ЗачтеноАвансовыхПлатежейПоСтавке13,
//		НалогПоСтавке13КЗачетуВозврату,
//		ПримененныйВычетЛичныйКодВычета,
//		ПримененныйВычетЛичный,
//		ПримененныйВычетЛичныйКЗачетуВозвратуКодВычета,
//		ПримененныйВычетЛичныйКЗачетуВозврату,
//		ПримененныйВычетИмущественныйРасходы,
//		ПримененныйВычетИмущественныйПроцентыПоКредитам,
//		ПримененныйВычетИмущественныйПроцентыПриПерекредитовании,
//		ПримененныйВычетНаДетей,
//		ПримененныйВычетНаДетейДвойной,
//		ПримененныйВычетНаДетейДвойнойВторой,
//		ПримененныйВычетНаВторогоРебенка,
//		ПримененныйВычетНаВторогоРебенкаДвойной,
//		ПримененныйВычетНаВторогоРебенкаДвойнойВторой,
//		ПримененныйВычетНаТретьегоРебенка,
//		ПримененныйВычетНаТретьегоРебенкаДвойной,
//		ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
//		ПримененныйВычетНаДетейИнвалидов,
//		ПримененныйВычетНаДетейИнвалидовДвойной,
//		ПримененныйВычетНаДетейИнвалидовДвойнойВторой
//		ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//		ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение
//      	 
Функция ДанныеДокументаОНалогеПоОсновнойСтавкеИВычетах(ДокументСсылка, ОписаниеТаблицДокумента = Неопределено, МенеджерВременныхТаблиц = Неопределено, ФизическиеЛица = Неопределено) Экспорт

	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	СоздатьВТДанныеНДФЛПоДокументу(МенеджерВременныхТаблиц, ДокументСсылка, ОписаниеТаблицДокумента, ФизическиеЛица);
	
	// Получаем данные НДФЛ
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТДанныеНДФЛ КАК НДФЛ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
    Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

Функция ДатаОперацииПоДокументу(ДатаДокумента, ПериодРегистрации) Экспорт

	Возврат Мин(Макс(ДатаДокумента, НачалоМесяца(ПериодРегистрации)),КонецМесяца(ПериодРегистрации))

КонецФункции

// Функция возвращает код вычета для дохода НДФЛ.
// Если код вычета не определен, то возвращается пустая ссылка.
Функция КодВычетаПоКодуДоходаНДФЛ(КодДоходаНДФЛ) Экспорт
КонецФункции 

// Возвращает соответствие кодов доходов и допустимых для них вычетов.
// Соответствие поддерживается с 2010 года.
//
// Параметры:
//	НалоговыйПериод - число - налоговый период (год).
//
// Возвращаемое значение:
//	Соответствие:
//		ключом является Код дохода - СправочникСсылка.ВидыДоходовНДФЛ
//		значением является массив Кодов вычета - СправочникСсылка.ВидыВычетовНДФЛ
//
Функция ВычетыКДоходам(НалоговыйПериод) Экспорт
	
	СоответствиеДоступныхВычетовДоходам = Новый Соответствие;
	
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1010, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код601));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1211, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код607));
	////
	////// Описание кодов 1530 и 1531 по годам.
	////Если НалоговыйПериод > 2014 Тогда // с 2015 года
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код618);
	////	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
	////	
	////ИначеЕсли НалоговыйПериод = 2014 Тогда // 2014 год
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код222);
	////	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код218);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код219);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код223);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
	////	
	////ИначеЕсли НалоговыйПериод > 2011 Тогда // 2012-2013 годы
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
	////	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
	////	
	////ИначеЕсли НалоговыйПериод = 2011 Тогда // 2011 год
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код211);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код215);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
	////	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
	////	
	////Иначе // по 2010 год
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код201);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код204);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код208);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	////	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1530, МассивДоступныхВычетов);
	////	
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1531, МассивДоступныхВычетов);
	////	
	////КонецЕсли;
	////
	////// Описание кода 1532 по годам.
	////МассивДоступныхВычетов = Новый Массив;
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код205);	
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код206);
	////Если НалоговыйПериод = 2010 Или НалоговыйПериод = 2011 Тогда 
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код207);
	////КонецЕсли;
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	////Если НалоговыйПериод = 2011 Тогда 
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код210);
	////КонецЕсли;
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1532, МассивДоступныхВычетов);
	////
	////// Описание кода 1533 по годам.
	////МассивДоступныхВычетов = Новый Массив;
	////Если НалоговыйПериод = 2010 Или НалоговыйПериод = 2011 Тогда 
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код202);	
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);	
	////КонецЕсли;
	////Если НалоговыйПериод >= 2014 Тогда // с 2014 года
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код220);
	////КонецЕсли;
	////Если НалоговыйПериод >= 2011 И НалоговыйПериод <= 2014 Тогда // с 2011 по 2014 годы
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	////КонецЕсли;
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1533, МассивДоступныхВычетов);
	////
	////// Описание кода 1535 по годам.
	////МассивДоступныхВычетов = Новый Массив;
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код207);
	////Если НалоговыйПериод >= 2014 Тогда // с 2014 года
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код209);
	////КонецЕсли;
	////Если НалоговыйПериод >= 2011 И НалоговыйПериод <= 2014 Тогда // с 2011 по 2014 годы
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код210);
	////КонецЕсли;
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1535, МассивДоступныхВычетов);
	////	
	////// Описание кода 1536 по годам.
	////МассивДоступныхВычетов = Новый Массив;
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код203);	
	////Если НалоговыйПериод >= 2014 Тогда // с 2014 года
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код224);
	////КонецЕсли;
	////Если НалоговыйПериод > 2011 И НалоговыйПериод <= 2014 Тогда // с 2012 по 2014 годы
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	////КонецЕсли;
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1536, МассивДоступныхВычетов);
	////	
	////// Описание кода 1537 по годам.
	////Если НалоговыйПериод >= 2011 Тогда // с 2011 года
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код211);	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1537, МассивДоступныхВычетов);
	////КонецЕсли;
	////
	////// Описание кода 1538 по годам.
	////Если НалоговыйПериод >= 2011 Тогда // с 2011 года
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код215);
	////	Если НалоговыйПериод = 2011 Тогда // 2011 год
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код214);
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код216);
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код217);
	////	КонецЕсли;
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1538, МассивДоступныхВычетов);
	////КонецЕсли;
	////
	////// Описание кода 1539 по годам.
	////Если НалоговыйПериод >= 2011 Тогда // с 2011 года
	////	МассивДоступныхВычетов = Новый Массив;
	////	Если НалоговыйПериод = 2011 Тогда // 2011 год
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
	////	КонецЕсли;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код213);
	////	Если НалоговыйПериод <= 2014 Тогда
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код214);
	////	КонецЕсли;
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1539, МассивДоступныхВычетов);
	////КонецЕсли;
	////
	////// Описание кода 1541 по годам.
	////Если НалоговыйПериод >= 2011 Тогда // с 2011 года
	////	МассивДоступныхВычетов = Новый Массив;
	////	Если НалоговыйПериод <= 2014 Тогда // по 2014 год
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код212);
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код213);
	////	КонецЕсли;
	////	Если НалоговыйПериод >= 2014 Тогда // с 2014 года
	////		МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код620);
	////	КонецЕсли;
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1541, МассивДоступныхВычетов);
	////КонецЕсли;
	////
	////Если НалоговыйПериод > 2014 Тогда // с 2015 года
	////	МассивДоступныхВычетов = Новый Массив;
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код221);	
	////	МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код617);	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1543, МассивДоступныхВычетов);
	////ИначеЕсли НалоговыйПериод = 2014 Тогда 	
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код1543, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код221));
	////КонецЕсли;
	////
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2010, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код403));

	////МассивДоступныхВычетов = Новый Массив;
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код404);
	////МассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код405);	
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2201, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2202, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2203, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2204, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2205, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2206, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2207, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2208, МассивДоступныхВычетов);
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2209, МассивДоступныхВычетов);
	////
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2720, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код501));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2730, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код502));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2740, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код505));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2760, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код503));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2761, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код506));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2762, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код508));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2770, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код504));
	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2790, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код507));
	////
	////// описание кода 2791
	////Если НалоговыйПериод < 2016 Тогда // по 2015 год
	////	СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код2791, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код509));
	////КонецЕсли;

	////СоответствиеДоступныхВычетовДоходам.Вставить(Справочники.ВидыДоходовНДФЛ.Код4800, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ВидыВычетовНДФЛ.Код620));
		
	Возврат СоответствиеДоступныхВычетовДоходам;
	
КонецФункции

// Возвращает массив кодов льгот соответствующего года с учетом ограничения переданной группой вычетов.
// Поддерживается с 2010 года.
//
// Параметры:
//	НалоговыйПериод - число - налоговый период (год).
//	ГруппаВычета - ПеречислениеСсылка.ГруппыВычетовПоНДФЛ, массив - 
//
// Возвращаемое значение:
//	Массив значений типа СправочникСсылка.ВидыЛьготПоНДФЛ
//
Функция ВычетыНалогоплательщика(НалоговыйПериод, Знач ГруппаВычета = Неопределено) Экспорт
	
	
	//мМассивДоступныхВычетов.Добавить(Справочники.ВидыВычетовНДФЛ.Код104);
	
	
	
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппыВычетов", ГруппаВычета);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЛьготПоНДФЛ.Ссылка
	|ИЗ
	|	Справочник.ВидыЛьготПоНДФЛ КАК ВидыЛьготПоНДФЛ
	|";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции


#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Составляет структуру для заполнения таблиц НДФЛ, ПримененныеВычетыНаДетейИИмущественные в форме документов.
// 
// Параметры:
//	МенеджерВременныхТаблиц - в котором определена таблица ВТФизическиеЛица
//		(подробнее см. комментарий к методу РассчитатьНалогПоОсновнойСтавке)
//  ДокументСсылка.
//	Организация
//	МесяцРасчета
//	ОкончательныйРасчет - булево - признак того, надо ли при расчете учитывать все зарегистрированные доходы
//	                               (соответствует значению Истина).
//	ДатаУдержанияИсчисленногоНалога - дата - дата предполагаемого удержания налога, который был исчислен по Регистратору.
//
// Возвращаемое значение - структура для заполнения таблиц НДФЛ и ПримененныеВычетыНаДетейИИмущественные.
//
Функция РезультатРасчетаНДФЛ(МенеджерВременныхТаблиц, ДокументСсылка, Организация, МесяцНачисления, ОкончательныйРасчет = Истина, ДатаУдержанияИсчисленногоНалога = Неопределено) Экспорт
	
	НДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцНачисления, МенеджерВременныхТаблиц,,,,ОкончательныйРасчет, ДатаУдержанияИсчисленногоНалога);
	НДФЛ.Колонки.Добавить("ИдентификаторСтрокиНДФЛ", Новый ОписаниеТипов("Число"));
	
	Возврат НДФЛ//ДанныеОРезультатахРасчетаНДФЛДляДокумента(НДФЛ)
	
КонецФункции

Функция ДанныеОРезультатахРасчетаНДФЛДляДокумента(НДФЛ) Экспорт


КонецФункции
// Специфические алгоритмы чтения данных

// Менеджер временных таблиц содержит таблицу ВТНачисления с полями.
//	Регистратор,
//	НомерСтроки,
//	ФизическоеЛицо
//	КодДохода
//	Сумма
//	КодВычета
//	КоличествоДетей
//	
// Формирует таблицу ВТВычетыКДоходамФизическихЛиц с полями.
//	Регистратор,
//	НомерСтроки,
//	ФизическоеЛицо
//	КодДохода
//	КодВычета
//	СуммаВычета
//
Процедура СоздатьВТВычетыКДоходамФизическихЛиц(Ссылка, Организация, ДатаПолученияДохода, МенеджерВременныхТаблиц) Экспорт

КонецПроцедуры

// Функция рассчитывает размер вычета, который можно применить к доходу.
// 
Функция ВычетКДоходуСотрудника(Ссылка, Организация, ДатаПолученияДохода, Сотрудник, КодДохода, КодВычетаНДФЛ, СуммаДохода, КоличествоДетей = 0) Экспорт 
	
	СуммаВычета = 0;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&КодДохода КАК КодДохода,
	|	&Сумма КАК Сумма,
	|	&КодВычета КАК КодВычета,
	|	&КоличествоДетей КАК КоличествоДетей,
	|	&Ссылка КАК Регистратор,
	|	0 КАК НомерСтроки
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник",			Сотрудник);
	Запрос.УстановитьПараметр("Ссылка",				Ссылка);
	Запрос.УстановитьПараметр("КодДохода",			КодДохода);
	Запрос.УстановитьПараметр("Сумма",				СуммаДохода);
	Запрос.УстановитьПараметр("КодВычета",			КодВычетаНДФЛ);
	Запрос.УстановитьПараметр("КоличествоДетей",	КоличествоДетей);
	Запрос.Выполнить();
	
	СоздатьВТВычетыКДоходамФизическихЛиц(Ссылка, Организация, ДатаПолученияДохода, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВычетыКДоходамФизическихЛиц.СуммаВычета
	|ИЗ
	|	ВТВычетыКДоходамФизическихЛиц КАК ВычетыКДоходамФизическихЛиц";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		СуммаВычета = Выборка.СуммаВычета;
	КонецЕсли;
	
	Возврат СуммаВычета
	
КонецФункции


// Возвращает таблицу значений с данными о физических лицах, по которым требуется пересмотреть данные по НДФЛ
// (возможно, пустую).
//
// Параметры:
//	Организация - организация, по которой получаем данные.
//	МесяцПерерасчета - дата - месяц, в котором производится перерасчет.
//	НачалоПериода - дата - описывает пересчитываемый налоговый период.
//	ОкончаниеПериода - дата - описывает пересчитываемый налоговый период 
//	ФизическиеЛица: тип СправочникСсылка.ФизическиеЛица или массив значений типа СправочникСсылка.ФизическиеЛица 
//    необязательный, если не задан - возвращаются все физлица, по которым есть переплата.
//  ДокументСсылка - регистратор, движения которого исключаются из рассмотрения.
//
// Возвращаемое значение:
//	таблица значений с колонками:
//			ФизическоеЛицо: тип СправочникСсылка.ФизическиеЛица
//			МесяцНалоговогоПериода: тип дата.
//			Подразделение
//			КодВычетаЛичный
//			колонки рассчитанных ресурсов: ПримененныйВычетЛичный, ПримененныйВычетНаДетей, ПримененныйВычетНаДетейДвойной,
//				ПримененныйВычетНаДетейДвойнойВторой,  ПримененныйВычетНаТретьегоРебенка,
//				ПримененныйВычетНаТретьегоРебенкаДвойной, ПримененныйВычетНаТретьегоРебенкаДвойнойВторой,
//				ПримененныйВычетНаВторогоРебенка, ПримененныйВычетНаВторогоРебенкаДвойной,
//				ПримененныйВычетНаВторогоРебенкаДвойнойВторой, ПримененныйВычетНаДетейИнвалидов,
//				ПримененныйВычетНаДетейИнвалидовДвойной, ПримененныйВычетНаДетейИнвалидовДвойнойВторой, НалогПоСтавке13,
//				ПримененныйВычетНаДетейИнвалидовОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойОпекунов,ПримененныйВычетНаДетейИнвалидовДвойнойВторойОпекунов
//				ПримененныйВычетРасходыНаСвоеОбучение,ПримененныйВычетРасходыНаОбучениеДетей,ПримененныйВычетРасходыНаЛечение,ПримененныйВычетСтраховыеВзносыНаМедУслуги,ПримененныйВычетРасходыНаДорогостоящееЛечение
//				НалогПоСтавке09, НалогПоСтавке35, НалогПоСтавке13КЗачетуВозврату, НалогПоСтавке35КЗачетуВозврату,
//				ПримененныйВычетИмущественныйРасходы, ПримененныйВычетИмущественныйПроцентыПоКредитам,
//				ПримененныйВычетИмущественныйПроцентыПриПерекредитовании 
//	если данных для перерасчета нет - возвращается пустая таблица значений.
//			
Функция ДанныеОПерерасчетеНДФЛ(Организация, МесяцПерерасчета, НачалоПериода, ОкончаниеПериода, ФизическиеЛица = Неопределено, ДокументСсылка = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаАктуальности", КонецМесяца(МесяцПерерасчета));
	Запрос.УстановитьПараметр("НачалоГодаПериодаРасчета", НачалоГода(НачалоПериода));
	Запрос.УстановитьПараметр("КонецМесяцаРасчета", КонецМесяца(ОкончаниеПериода));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
    ТекстЗапроса =
	"ВЫБРАТЬ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК Обороты
	|ГДЕ
	|	Обороты.Период <= &ДатаАктуальности
	|	И Обороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И Обороты.НалоговыйПериод МЕЖДУ &НачалоГодаПериодаРасчета И &КонецМесяцаРасчета
	|	И &УсловиеДляФизлиц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обороты.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТДоходы КАК Обороты
	|";
	
	Если ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "ФизическоеЛицо В(&ФизическиеЛица)");
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&УсловиеДляФизлиц", "Истина");
	КонецЕсли;
	Запрос.Выполнить();
	
	РезультатРасчетаНДФЛ = РассчитатьНалогПоОсновнойСтавке(ДокументСсылка, Организация, МесяцПерерасчета, Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	
	//Для перерасчета не нужны "пустые" строки
	НулевыеСтроки = РезультатРасчетаНДФЛ.НайтиСтроки(Новый Структура("Налог, Доход",0,0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		РезультатРасчетаНДФЛ.Удалить(СтрокаТаблицы)
	КонецЦикла;
	
	
	Возврат РезультатРасчетаНДФЛ
	
КонецФункции 


// Вспомогательные функции и процедуры

Функция СтрокаРасчетовНалогоплательщикаСБюджетом(Движения, Организация, ДатаОперации, ВидДвижения, ДанныеДокумента, ВидСтроки = Неопределено, ОкончательныйРасчет = Истина)
	
	НоваяСтрока = Движения.РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.Период = ДатаОперации;
	Если НЕ ЗначениеЗаполнено(НоваяСтрока.ПериодВзаиморасчетов) Тогда
		НоваяСтрока.ПериодВзаиморасчетов = НачалоМесяца(ДатаОперации);
	КонецЕсли;	
	НоваяСтрока.РасчетМежрасчетногоПериода = Не ОкончательныйРасчет;
	
    Возврат НоваяСтрока
	
КонецФункции


#Область ФункцииПервоначальногоЗаполненияИОбновленияИБ

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  ИмяРегистра - строка - 
//  ТекстЗапроса - строка - текст исполняемого запроса, в котором обязательно присутствует 
//			поле Регистратор, остальные поля должны соответствовать 
//          полям записи заполняемого регистра, в результате должны 
//          присутствовать все заполняемые поля;
//			кроме того, результат запроса должен быть упорядочен, 
//			первое поле упорядочивания - Регистратор
//  ПараметрыЗапроса - Структура - необязательный, содержит имена и значения параметров,
//          которые требуются запросу
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбработатьНаборыЗаписейРегистраНакопления(ИмяРегистра, ТекстЗапроса, ПараметрыЗапроса = Неопределено, МенеджерВременныхТаблиц = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		Для каждого КлючИЗначение Из ПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение)
		КонецЦикла;
	КонецЕсли;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры


// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.0.4";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьВидыДоходовНДФЛ";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.0.7";
	Обработчик.Процедура = "УчетНДФЛ.ЗаполнитьВидыДоходовНДФЛ";

КонецПроцедуры	

Процедура ЗаполнитьВидыДоходовНДФЛ() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник", "ВидыДоходовНДФЛ");
	
КонецПроцедуры	



#КонецОбласти


#Область КадровыеДанныеФизическихЛиц

// Возвращает подготовленный запрос, формирующий временную таблицу с указанным именем.
// Временная таблица содержит поля Период, ФизическоеЛицо, СтатусНалогоплательщика.
//
// Параметры:
//		ТолькоРазрешенные
//		ОписательВременнойТаблицыОтборов - Структура, см. КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц.
//		ПоляОтбораПериодическихДанных - Соответствие
//		ИмяВТСведенияОСтатусахНалогоплательщиков - Строка, имя временной таблицы, созданной в результате выполнения запроса.
//
// ВозвращаемоеЗначение:
//		Запрос
//
Функция ЗапросВТСведенияОСтатусахНалогоплательщиков(ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИмяВТСведенияОСтатусахНалогоплательщиков = "ВТСведенияОСтатусахНалогоплательщиков") Экспорт
	
	ИмяВТПредварительныеСведенияОСтатусахНалогоплательщиков = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТПредварительныеСведенияОСтатусахНалогоплательщиков");
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц,
		"Период,ФизическоеЛицо");
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("Период", ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("ФизическоеЛицо", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	
	ПоляОтбора = Неопределено;
	Если ПоляОтбораПериодическихДанных <> Неопределено Тогда
		ПоляОтбораПериодическихДанных.Свойство("СтатусФизическихЛицКакНалогоплательщиковНДФЛ", ПоляОтбора);
	КонецЕсли;
	 
	ПараметрыПостроения.Отборы = ПоляОтбора;
	ПараметрыПостроения.ИспользоватьРасширениеЯзыкаЗапросовДляСКД = Ложь;
	
	ЗапросВТИмяРегистраСрез = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТИмяРегистраСрез(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		ТолькоРазрешенные,
		ОписаниеФильтра,
		ПараметрыПостроения,
		Истина,
		ИмяВТПредварительныеСведенияОСтатусахНалогоплательщиков);
	 
	ТекстЗапросаДанных =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаОтборовФизическихЛиц.Период КАК Период,
		|	ПредварительныеСведенияОСтатусахНалогоплательщиков.ПериодЗаписи КАК ПериодЗаписи,
		|	ТаблицаОтборовФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ТаблицаОтборовФизическихЛиц.Период < ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0)
		|				И ПредварительныеСведенияОСтатусахНалогоплательщиков.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
		|		ИНАЧЕ ЕСТЬNULL(ПредварительныеСведенияОСтатусахНалогоплательщиков.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
		|	КОНЕЦ КАК СтатусНалогоплательщика
		|ПОМЕСТИТЬ ВТСведенияОСтатусахНалогоплательщиков
		|ИЗ
		|	ВТОтборовФизическихЛиц КАК ТаблицаОтборовФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительныеСведенияОСтатусахНалогоплательщиков КАК ПредварительныеСведенияОСтатусахНалогоплательщиков
		|		ПО ТаблицаОтборовФизическихЛиц.Период = ПредварительныеСведенияОСтатусахНалогоплательщиков.Период
		|			И ТаблицаОтборовФизическихЛиц.ФизическоеЛицо = ПредварительныеСведенияОСтатусахНалогоплательщиков.ФизическоеЛицо";
		
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТОтборовФизическихЛиц", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.Период", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.ФизическоеЛицо", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТПредварительныеСведенияОСтатусахНалогоплательщиков", ИмяВТПредварительныеСведенияОСтатусахНалогоплательщиков);
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьИмяСоздаваемойВременнойТаблицы(ТекстЗапросаДанных, "ВТСведенияОСтатусахНалогоплательщиков", ИмяВТСведенияОСтатусахНалогоплательщиков);
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаДанных, ТолькоРазрешенные);
	
	ЗапросВТИмяРегистраСрез.Текст = 
		ЗапросВТИмяРегистраСрез.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+ ТекстЗапросаДанных;
	
	Возврат ЗапросВТИмяРегистраСрез;
	
КонецФункции

#КонецОбласти

#КонецОбласти
