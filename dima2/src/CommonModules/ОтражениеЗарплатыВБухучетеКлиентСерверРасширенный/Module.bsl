////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в бухгалтерском учете.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьСтраницуНастройкиБухучетаНачислений(Форма) Экспорт

	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КатегорияНачисления = Объект.КатегорияНачисленияИлиНеоплаченногоВремени;
	
	Если Форма.РаботаВБюджетномУчреждении Тогда
		
		Если КатегорияНачисленийБезОплаты(КатегорияНачисления) Тогда 
			
			Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Ложь;
			
		ИначеЕсли КатегорияНачисленийПособияФСС(КатегорияНачисления) Тогда
			
			Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Истина;
			Элементы.СтраницыОтражениеВБухучете.ТекущаяСтраница = Элементы.СтраницаОтражениеВБухучетеПособияФСС;
			ОбработатьИзменениеСтратегииОтраженияВБухучетеНачисления(Форма, Ложь);
			
		Иначе
			
			Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Истина;
			Элементы.СтраницыОтражениеВБухучете.ТекущаяСтраница = Элементы.СтраницаОтражениеВБухучете;
			
			ОплатаПоСреднему    = Объект.Рассчитывается И КатегорияНачисленийОплатаПоСреднемуОбщий(КатегорияНачисления);
			ПособиеЗаСчетРаботодателя  = КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя");
			
			БазаДоступна = Форма.ЕстьПоказательРасчетнаяБаза
			И Форма.Объект.СпособРасчета <> ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ДоплатаДоСреднегоЗаработка")
			И Форма.Объект.ПериодРасчетаБазовыхНачислений = ПредопределенноеЗначение("Перечисление.ПериодыРасчетаБазовыхНачислений.ТекущийМесяц");
			
			Если ОплатаПоСреднему Или ПособиеЗаСчетРаботодателя Тогда
				Элементы.СтраницыБухучетВариантНастройки.ТекущаяСтраница = Элементы.ОтражениеВБухучетеПоСреднему;
			ИначеЕсли БазаДоступна Тогда
				Элементы.СтраницыБухучетВариантНастройки.ТекущаяСтраница = Элементы.ОтражениеВБухучетеЕстьБаза;
			Иначе
				Элементы.СтраницыБухучетВариантНастройки.ТекущаяСтраница = Элементы.ОтражениеВБухучетеНетБазы;
				Если Объект.СтратегияОтраженияВУчете = ПредопределенноеЗначение("Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам") Тогда
					Объект.СтратегияОтраженияВУчете = ПредопределенноеЗначение("Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях")
				КонецЕсли;
			КонецЕсли;
			
			ОбработатьИзменениеСтратегииОтраженияВБухучетеНачисления(Форма, Ложь);
			
		КонецЕсли; 
		
	Иначе
		
		Если КатегорияНачисленийБезОплаты(КатегорияНачисления) Тогда 
			
			Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Ложь;
			
		ИначеЕсли КатегорияНачисленийПособияФСС(КатегорияНачисления) Тогда
			
			Если Форма.ИспользоватьСтатьиФинансирования Тогда
				
				Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Истина;
				Элементы.СтраницыОтражениеВБухучете.ТекущаяСтраница = Элементы.СтраницаОтражениеВБухучетеПособияФСС;
				ОбработатьИзменениеСтратегииОтраженияВБухучетеНачисления(Форма, Ложь);
				
			Иначе
				Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Истина;

			КонецЕсли;
			
		Иначе
			
			Элементы.НалоговыйИБухгалтерскийУчет.Видимость = Истина;
			Элементы.СтраницыОтражениеВБухучете.ТекущаяСтраница = Элементы.СтраницаОтражениеВБухучете;
			
			ОплатаПоСреднему  = Форма.ИспользоватьСтатьиФинансирования И Объект.Рассчитывается И КатегорияНачисленийОплатаПоСреднемуОбщий(КатегорияНачисления);
			ПособиеЗаСчетРаботодателя  = Форма.ИспользоватьСтатьиФинансирования И КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛистаЗаСчетРаботодателя");
			
			БазаДоступна = Объект.Рассчитывается И Форма.ЕстьПоказательРасчетнаяБаза
			И Форма.Объект.СпособРасчета <> ПредопределенноеЗначение("Перечисление.СпособыРасчетаНачислений.ДоплатаДоСреднегоЗаработка")
			И Форма.Объект.ПериодРасчетаБазовыхНачислений = ПредопределенноеЗначение("Перечисление.ПериодыРасчетаБазовыхНачислений.ТекущийМесяц");
			
			Если ОплатаПоСреднему Или ПособиеЗаСчетРаботодателя Тогда
				Элементы.СтраницыБухучетВариантНастройки.ТекущаяСтраница = Элементы.ОтражениеВБухучетеПоСреднему;
			ИначеЕсли БазаДоступна Тогда
				Элементы.СтраницыБухучетВариантНастройки.ТекущаяСтраница = Элементы.ОтражениеВБухучетеЕстьБаза;
			Иначе
				Элементы.СтраницыБухучетВариантНастройки.ТекущаяСтраница = Элементы.ОтражениеВБухучетеНетБазы;
				Если Объект.СтратегияОтраженияВУчете = ПредопределенноеЗначение("Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоБазовымРасчетам") Тогда
					Объект.СтратегияОтраженияВУчете = ПредопределенноеЗначение("Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.ПоДаннымОСотрудникеИЕгоПлановыхНачислениях")
				КонецЕсли;
			КонецЕсли;
			
			ОбработатьИзменениеСтратегииОтраженияВБухучетеНачисления(Форма, Ложь);   
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработатьИзменениеСтратегииОтраженияВБухучетеНачисления(Форма, ОбновитьНастройки = Истина) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	БухучетНастраиваетсяВНачислении = Объект.СтратегияОтраженияВУчете = ПредопределенноеЗначение("Перечисление.СтратегииОтраженияВУчетеНачисленийУдержаний.КакЗаданоВидуРасчета");
	СтатьяФинансированияОпределяетсяПоСреднемуЗаработку = Объект.СтатьяФинансированияОпределяетсяПоСреднемуЗаработку;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СпособОтраженияЗарплатыВБухучете", "Доступность", БухучетНастраиваетсяВНачислении);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтатьяФинансирования", "Доступность", НЕ СтатьяФинансированияОпределяетсяПоСреднемуЗаработку И БухучетНастраиваетсяВНачислении);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтатьяРасходов", "Доступность", БухучетНастраиваетсяВНачислении);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтатьяФинансированияПособия", "Доступность", БухучетНастраиваетсяВНачислении);
	
	Если Не ОбновитьНастройки Тогда
		Возврат;
	КонецЕсли;
	
	Если БухучетНастраиваетсяВНачислении Тогда
		
		Объект.СпособОтраженияЗарплатыВБухучете = Форма.БылСпособОтраженияЗарплатыВБухучете;
		Объект.СтатьяРасходов = Форма.БылаСтатьяРасходов;
		
		Если СтатьяФинансированияОпределяетсяПоСреднемуЗаработку Тогда
			Если ЗначениеЗаполнено(Объект.СтатьяФинансирования) Тогда
				Форма.БылаСтатьяФинансирования = Объект.СтатьяФинансирования;
				Объект.СтатьяФинансирования = ПредопределенноеЗначение("Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка");
			КонецЕсли;
		Иначе
			Объект.СтатьяФинансирования = Форма.БылаСтатьяФинансирования;
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.СпособОтраженияЗарплатыВБухучете) Тогда
			Форма.БылСпособОтраженияЗарплатыВБухучете = Объект.СпособОтраженияЗарплатыВБухучете;
			Объект.СпособОтраженияЗарплатыВБухучете = ПредопределенноеЗначение("Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СтатьяФинансирования) Тогда
			Форма.БылаСтатьяФинансирования = Объект.СтатьяФинансирования;
			Объект.СтатьяФинансирования = ПредопределенноеЗначение("Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СтатьяРасходов) Тогда
			Форма.БылаСтатьяРасходов = Объект.СтатьяРасходов;
			Объект.СтатьяРасходов = ПредопределенноеЗначение("Справочник.СтатьиРасходовЗарплата.ПустаяСсылка");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПредставлениеРаспределенияВСтроке(СтрокаНачисленияУдержания, РаспределениеСодержитОшибки, ИмяТаблицы, РаботаВБюджетномУчреждении) Экспорт 
	
	Если ИмяТаблицы = "ПогашениеЗаймов" Или ИмяТаблицы = "НДФЛ" Тогда
		РезультатРаспределения = СвернутьРаспределениеРезультатовУдержаний(СтрокаНачисленияУдержания.РезультатРаспределения);
	Иначе
		РезультатРаспределения = СтрокаНачисленияУдержания.РезультатРаспределения;
	КонецЕсли;
	
	Если РезультатРаспределения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСтрокРаспределения = РезультатРаспределения.Количество();
	НомерСтрокиРаспределения = 1;
	
	СтрокаНачисленияУдержания.КомандаРедактированияРаспределения = "";
	
	Если КоличествоСтрокРаспределения = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если РаспределениеСодержитОшибки Тогда
		СтрокаНачисленияУдержания.КомандаРедактированияРаспределения = НСтр("ru='Не задано';uk='Не задано'");
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаРаспределения Из РезультатРаспределения Цикл
		
		Если СтрокаРаспределения.СтатьяФинансирования = Неопределено Тогда
			КодСтатьиФинансирования = "  ";
		Иначе
			КодСтатьиФинансирования = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрокаРаспределения.КодСтатьиФинансирования, 3, " ", "Справа");
		КонецЕсли;
		
		Если РаботаВБюджетномУчреждении Тогда
			СтрокаПодстановки = НСтр("ru='(%1)';uk='(%1)'");
			СтатьяРасхода = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрокаРаспределения.СтатьяРасходов, 3, " ");
			КодСтатьиРасходов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПодстановки, СтатьяРасхода);
		ИначеЕсли КоличествоСтрокРаспределения > 1 Тогда
			КодСтатьиРасходов = ":";
		Иначе
			КодСтатьиРасходов = "";
		КонецЕсли;
		
		Если КоличествоСтрокРаспределения = 1 Тогда
			СуммаРаспределения = "";
			ПереводСтроки = "";
		Иначе
			СуммаРаспределения = Строка(Формат(СтрокаРаспределения.Результат, "ЧДЦ=2; ЧРГ="));			
			СуммаРаспределения = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СуммаРаспределения, 9, " ");
			Если КоличествоСтрокРаспределения = 1 Или НомерСтрокиРаспределения = 2 Тогда
				ПереводСтроки = "";
			Иначе
				ПереводСтроки = Символы.ПС;
			КонецЕсли;			
		КонецЕсли;		
		
		Если НомерСтрокиРаспределения = 2 И КоличествоСтрокРаспределения > 2 Тогда
			БолееДвухСтрок = "…";
		Иначе
			БолееДвухСтрок = " ";
		КонецЕсли;
		
		СтрокаПодстановки = НСтр("ru='%1%2%3 %4%5%6';uk='%1%2%3 %4%5%6'");
		СтрокаНачисленияУдержания.КомандаРедактированияРаспределения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СтрокаПодстановки, СтрокаНачисленияУдержания.КомандаРедактированияРаспределения, КодСтатьиФинансирования,
			КодСтатьиРасходов, СуммаРаспределения, БолееДвухСтрок, ПереводСтроки);
			
		Если НомерСтрокиРаспределения = 2 Тогда
			Прервать;
		КонецЕсли;
		
		НомерСтрокиРаспределения = НомерСтрокиРаспределения + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СвернутьРаспределениеРезультатовУдержаний(РаспределениеРезультатов)
	
	ИменаКолонок = "СтатьяФинансирования,СтатьяРасходов,КодСтатьиФинансирования,Результат,ВидУдержания,Сотрудник,Подразделение";
	
	СтруктураВозврата = Новый Массив;
	
	Для каждого СтрокаРаспределениеРезультатов Из РаспределениеРезультатов Цикл
		
		// Зачет излишне удержанного НДФЛ включен в сумму НДФЛ.
		Если СтрокаРаспределениеРезультатов.Свойство("ВидУдержания")
			И СтрокаРаспределениеРезультатов.ВидУдержания = ПредопределенноеЗначение("Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛЗачтено") Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеСтроки = Новый Структура(ИменаКолонок);
		ЗаполнитьЗначенияСвойств(ОписаниеСтроки, СтрокаРаспределениеРезультатов);
		
		СтрокаНеНайдена = Истина;
		
		Для Каждого СтрокаСтруктурыВозврата Из СтруктураВозврата Цикл
			Если СтрокаСтруктурыВозврата.СтатьяФинансирования = ОписаниеСтроки.СтатьяФинансирования
				И СтрокаСтруктурыВозврата.КодСтатьиФинансирования = ОписаниеСтроки.КодСтатьиФинансирования
				И СтрокаСтруктурыВозврата.СтатьяРасходов = ОписаниеСтроки.СтатьяРасходов
				И СтрокаСтруктурыВозврата.Сотрудник = ОписаниеСтроки.Сотрудник
				И СтрокаСтруктурыВозврата.Подразделение = ОписаниеСтроки.Подразделение Тогда
				СтрокаСтруктурыВозврата.Результат = СтрокаСтруктурыВозврата.Результат + ОписаниеСтроки.Результат;
				СтрокаНеНайдена = Ложь;
			КонецЕсли;				
		КонецЦикла;
		
		Если СтрокаНеНайдена Тогда
			СтруктураВозврата.Добавить(ОписаниеСтроки);
		КонецЕсли;			
		
	КонецЦикла; 
	
	Возврат Новый ФиксированныйМассив(СтруктураВозврата);
	
КонецФункции

Процедура ПерераспределитьНДФЛ(СтрокаНДФЛ, РаботаВБюджетномУчреждении) Экспорт
	
	Если СтрокаНДФЛ.РезультатРаспределения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФиксированнаяСтруктура = Ложь;
	
	СуммаНДФЛ = СтрокаНДФЛ.Налог;
	
	РезультатРаспределения = Новый Массив;
	
	Для Каждого ЭлементРаспределения Из СтрокаНДФЛ.РезультатРаспределения Цикл
			
		Если ТипЗнч(ЭлементРаспределения) = Тип("Структура") Тогда
			РезультатРаспределения.Добавить(ЭлементРаспределения);
		ИначеЕсли ТипЗнч(ЭлементРаспределения) = Тип("ФиксированнаяСтруктура") Тогда
			РезультатРаспределения.Добавить(Новый Структура(ЭлементРаспределения));
			ФиксированнаяСтруктура = Истина;
		КонецЕсли;
		
	КонецЦикла;

	СуммаРаспределения = 0;
	
	Для Каждого ЭлементРаспределения Из РезультатРаспределения Цикл
		
		СуммаРаспределения = СуммаРаспределения + ЭлементРаспределения.Результат;
		
	КонецЦикла;
	
	Если СуммаРаспределения > 0 Тогда
		
		РезультатРаспределенияМассивДляЗагрузки = Новый Массив;
		
		Для Каждого ЭлементРаспределения Из РезультатРаспределения Цикл                                                      
			
			ЭлементРаспределения.Результат = ЭлементРаспределения.Результат * СуммаНДФЛ / СуммаРаспределения;
			
			Если ФиксированнаяСтруктура Тогда
				РезультатРаспределенияМассивДляЗагрузки.Добавить(Новый ФиксированнаяСтруктура(ЭлементРаспределения));	
			Иначе
				РезультатРаспределенияМассивДляЗагрузки.Добавить(ЭлементРаспределения);	
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаНДФЛ.РезультатРаспределения = Новый ФиксированныйМассив(РезультатРаспределенияМассивДляЗагрузки);
		
		ЗаполнитьПредставлениеРаспределенияВСтроке(СтрокаНДФЛ, Ложь, "НДФЛ", РаботаВБюджетномУчреждении);
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КатегорияНачисленийБезОплаты(КатегорияНачисления) Экспорт

	Возврат КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускБезОплаты")
	        Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.Отгул")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.Прогул")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.НеявкаПоНевыясненнымПричинам")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПростойПоВинеРаботника")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.БолезньБезОплаты")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодамБезОплаты")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПредыдущимиДокументами");

КонецФункции
		
Функция КатегорияНачисленийПособияФСС(КатегорияНачисления) Экспорт

	Возврат КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве")
			Или КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет");

КонецФункции

Функция КатегорияНачисленийОплатаПоСреднемуОбщий(КатегорияНачисления) Экспорт

	Возврат КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска")
			ИЛИ КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаКомандировки")
			ИЛИ КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ВыходноеПособие")
			ИЛИ КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.КомпенсацияОтпуска")
			ИЛИ КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаПоСреднемуЗаработку")
			ИЛИ КатегорияНачисления = ПредопределенноеЗначение("Перечисление.КатегорииНачисленийИНеоплаченногоВремени.ОплатаДнейУходаЗаДетьмиИнвалидами");

КонецФункции

#КонецОбласти
