
#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Блок функций первоначального заполнения и обновления ИБ.

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//
// Параметры:
//  Обработчики - это таблица значений, возвращаемая функцией
//                НоваяТаблицаОбработчиковОбновления модуля ОбновлениеИнформационнойБазы.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия    = "1.0.0.0";
//  Обработчик.Процедура = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
// 
//  Все свойства обработчика см. в комментарии к функции
//  НоваяТаблицаОбработчиковОбновления в модуле ОбновлениеИнформационнойБазы.
//
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики обновления информационной базы.


Процедура УстановитьДоступенПереносДанныхИзПрежнихПрограмм(НеВыполнятьНачальнуюНастройкуПрограммы = Неопределено) Экспорт

	ДоступенПереносДанныхИзПрежнихПрограмм = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.НачальнаяНастройкаПрограммы") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("НачальнаяНастройкаПрограммы");
		ДоступенПереносДанныхИзПрежнихПрограмм = Модуль.ДоступенПереносДанныхИзПрежнихПрограмм(НеВыполнятьНачальнуюНастройкуПрограммы);
	КонецЕсли;
	Константы.ДоступенПереносДанныхИзПрежнихПрограмм.Установить(ДоступенПереносДанныхИзПрежнихПрограмм);
		
КонецПроцедуры


// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.ПереносДанных);
	
КонецПроцедуры

#КонецОбласти