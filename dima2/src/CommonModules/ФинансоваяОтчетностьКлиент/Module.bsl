
#Область ПрограммныйИнтерфейс

// Процедура выполняет завершение редактирование элемента бюджетного отчета
//
// Параметры:
//  Форма  - УправляемаяФорма - форма элемента
//  ДополнительныеСведения  - структура - дополнительные сведения для возврата в форму-владельца
//
Процедура ЗавершитьРедактированиеЭлементаОтчета(Форма, ДополнительныеСведения = Неопределено) Экспорт
	
	Если Форма.ПроверитьЗаполнение() Тогда
		Если НЕ Форма.ТолькоПросмотр Тогда
			Форма.Записать();
			Форма.Модифицированность = Ложь;
		КонецЕсли;
		Структура = ФинансоваяОтчетностьКлиентСервер.СтруктураЭлементаОтчета();
		ЗаполнитьЗначенияСвойств(Структура, Форма.Объект, , "ОперандыФормулы, РеквизитыВидаЭлемента");
		Если ЗначениеЗаполнено(ДополнительныеСведения) Тогда
			Для Каждого КлючИЗначение из ДополнительныеСведения Цикл
				Структура.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла;
		КонецЕсли;
		Форма.Закрыть(Структура);
	КонецЕсли;
	
КонецПроцедуры

// Процедура добавляет новые операнды в текст формулы
//
// Параметры:
//  Форма  - Управляемая форма - форма конструктора формул
//  НовыеОперанды  - Массив - массив добавленных строк таблицы операндов
//
Процедура ДобавитьТекстФормулы(Форма, НовыеОперанды) Экспорт
	
	Для Каждого Операнд Из НовыеОперанды Цикл
		
		Идентификатор = Операнд.Идентификатор;
		
		Форма.Элементы.Формула.ВыделенныйТекст = "[" + Идентификатор + "]";
		
		НачалоСтроки = Неопределено; НачалоКолонки = Неопределено;
		КонецСтроки = Неопределено; КонецКолонки = Неопределено;
		Форма.Элементы.Формула.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
		
		ПозицияСтрокаНачало = Неопределено; ПозицияКолонкаНачало = Неопределено;
		ПозицияСтрокаКонец = Неопределено; ПозицияКолонкаКонец = Неопределено;
		Если ЕстьОткрывающийТэг(Форма.Формула, НачалоСтроки, НачалоКолонки, ПозицияСтрокаНачало, ПозицияКолонкаНачало)
			И ЕстьЗакрывающийТэг(Форма.Формула, НачалоСтроки, НачалоКолонки, ПозицияСтрокаКонец, ПозицияКолонкаКонец) Тогда
			
			НоваяФормула = "";
			
			ВыделитьСтрокаНачало = Неопределено; ВыделитьКолонкаНачало = Неопределено;
			ВыделитьСтрокаКонец = Неопределено; ВыделитьКолонкаКонец = Неопределено;
			Для Сч = 1 по СтрЧислоСтрок(Форма.Формула) Цикл
				Если Сч > 1 Тогда
					НоваяФормула = НоваяФормула + Символы.ПС;
				КонецЕсли;
				СтрокаФормулы = СтрПолучитьСтроку(Форма.Формула, Сч);
				Если Сч < ПозицияСтрокаНачало Тогда
					НоваяФормула = НоваяФормула + СтрокаФормулы;
				ИначеЕсли Сч = ПозицияСтрокаНачало Тогда
					НоваяФормула = НоваяФормула + 
									Лев(СтрокаФормулы, ПозицияКолонкаНачало - 1) + 
									"[" + Идентификатор + "]";
					ВыделитьСтрокаНачало = Сч;
					ВыделитьКолонкаНачало = ПозицияКолонкаНачало;
					ВыделитьКолонкаКонец = ПозицияКолонкаНачало + СтрДлина(Идентификатор);
				КонецЕсли;
				Если Сч > ПозицияСтрокаКонец Тогда
					НоваяФормула = НоваяФормула + СтрокаФормулы;
				ИначеЕсли Сч = ПозицияСтрокаКонец Тогда
					НоваяФормула = НоваяФормула + Сред(СтрокаФормулы, ПозицияКолонкаКонец + 1);
					ВыделитьСтрокаКонец = Сч;
				КонецЕсли;
			КонецЦикла;
			
			Форма.Формула = НоваяФормула;
			Форма.Элементы.Формула.УстановитьГраницыВыделения(ВыделитьСтрокаНачало, ВыделитьКолонкаНачало, ВыделитьСтрокаКонец, ВыделитьКолонкаКонец);
			
		КонецЕсли;
		
		Если НЕ Форма.Модифицированность Тогда
			Форма.Модифицированность = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьОткрывающийТэг(Формула, НомерСтроки, НомерКолонки, НовыйНомерСтроки = Неопределено, НовыйНомерКолонки = Неопределено)
	
	ЕстьОткрывающийТэг = Ложь;
	Для СчетчикСтрок = 1 по НомерСтроки Цикл
		СтрокаПоНомеру = СтрПолучитьСтроку(Формула, СчетчикСтрок);
		Если СчетчикСтрок = НомерСтроки Тогда
			Конец = НомерКолонки;
		Иначе
			Конец = СтрДлина(СтрокаПоНомеру);
		КонецЕсли;
		Для СчетчикКолонок = 1 по Конец Цикл
			Если Сред(СтрокаПоНомеру, СчетчикКолонок, 1) = "<" Тогда
				ЕстьОткрывающийТэг = Истина;
				НовыйНомерСтроки = СчетчикСтрок;
				НовыйНомерКолонки = СчетчикКолонок;
			КонецЕсли;
			Если Сред(СтрокаПоНомеру, СчетчикКолонок, 1) = ">" Тогда
				ЕстьОткрывающийТэг = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ЕстьОткрывающийТэг;
			
КонецФункции

Функция ЕстьЗакрывающийТэг(Формула, НомерСтроки, НомерКолонки, НовыйНомерСтроки = Неопределено, НовыйНомерКолонки = Неопределено)
	
	Для НовыйНомерСтроки = НомерСтроки по СтрЧислоСтрок(Формула) Цикл
		СтрокаПоНомеру = СтрПолучитьСтроку(Формула, НовыйНомерСтроки);
		Если НовыйНомерСтроки = НомерСтроки Тогда
			Начало = НомерКолонки;
		Иначе
			Начало = 1;
		КонецЕсли;
		Для НовыйНомерКолонки = Начало по СтрДлина(СтрокаПоНомеру) Цикл
			Строка = СтрокаПоНомеру;
			Если Сред(Строка, НовыйНомерКолонки, 1) = "<" Тогда
				Возврат Ложь; // ищем первый закрывающий тэг
			КонецЕсли;
			Если Сред(Строка, НовыйНомерКолонки, 1) = ">" Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь;
			
КонецФункции

#КонецОбласти

