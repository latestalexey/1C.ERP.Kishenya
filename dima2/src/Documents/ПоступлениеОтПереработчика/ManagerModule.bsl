#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область Заполнение

// Заполняет документ по заказам
//
// Параметры:
//	Объект			- ДокументОбъект - документ, который нужно заполнить
//	СписокПродукции	- Массив - используется для заполнения по указанной продукции
//
Процедура ЗаполнитьПоЗаказам(Объект, СписокПродукции = Неопределено) Экспорт
	
	МассивЗаказов = Новый Массив;
	
	ТаблицаПродукции = Новый ТаблицаЗначений;
	ТаблицаПродукции.Колонки.Добавить("Распоряжение", Новый ОписаниеТипов("ДокументСсылка.ЗаказПереработчику"));
	ТаблицаПродукции.Колонки.Добавить("КодСтроки", Новый ОписаниеТипов("Число"));
	
	Если СписокПродукции <> Неопределено Тогда
		Для каждого ДанныеПродукции Из СписокПродукции Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаПродукции.Добавить(), ДанныеПродукции);
			Если МассивЗаказов.Найти(ДанныеПродукции.Распоряжение) = Неопределено Тогда
				МассивЗаказов.Добавить(ДанныеПродукции.Распоряжение);
			КонецЕсли; 
		КонецЦикла; 
	ИначеЕсли ЗначениеЗаполнено(Объект.ЗаказПереработчику) Тогда
		МассивЗаказов.Добавить(Объект.ЗаказПереработчику);
	КонецЕсли;
	
	Если МассивЗаказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#Область Запрос
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивЗаказов",  МассивЗаказов);
	Запрос.УстановитьПараметр("Партнер",        Объект.Партнер);
	Запрос.УстановитьПараметр("Контрагент",     Объект.Контрагент);
	Запрос.УстановитьПараметр("Договор",        Объект.Договор);
	Запрос.УстановитьПараметр("Организация",    Объект.Организация);
	Запрос.УстановитьПараметр("Регистратор",    Объект.Ссылка);
	Запрос.УстановитьПараметр("Валюта",         Объект.Валюта);
	Запрос.УстановитьПараметр("СкладОтгрузки",  Объект.Склад);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗаказы.ЗаказПереработчику     КАК ЗаказПереработчику,
	|	ТаблицаЗаказы.Номенклатура           КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика         КАК Характеристика,
	|	ТаблицаЗаказы.КодСтроки              КАК КодСтроки,
	|	ТаблицаЗаказы.Склад                  КАК Склад,
	|	СУММА(ТаблицаЗаказы.КОформлению)     КАК Количество
	|
	|ПОМЕСТИТЬ ТаблицаОстатки
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказПоставщику        КАК ЗаказПереработчику,
	|		ЗаказыОстатки.Номенклатура           КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика         КАК Характеристика,
	|		ЗаказыОстатки.КодСтроки              КАК КодСтроки,
	|		ЗаказыОстатки.Склад                  КАК Склад,
	|		ЗаказыОстатки.КОформлениюОстаток     КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(,
	|				ЗаказПоставщику В (&МассивЗаказов)
	|				И ВЫБОР КОГДА ВЫРАЗИТЬ(&СкладОтгрузки КАК Справочник.Склады).ЭтоГруппа ТОГДА
	|					Склад В ИЕРАРХИИ (&СкладОтгрузки) ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ИНАЧЕ
	|					Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &СкладОтгрузки)
	|				КОНЕЦ) КАК ЗаказыОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.ЗаказПоставщику,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.КодСтроки,
	|		ЗаказыДвижения.Склад,
	|		ВЫБОР КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ЗаказыДвижения.КОформлению
	|		ИНАЧЕ
	|			ЗаказыДвижения.КОформлению
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.ЗаказПоставщику В (&МассивЗаказов)
	|		И ЗаказыДвижения.Активность
	|		И ВЫБОР КОГДА ВЫРАЗИТЬ(&СкладОтгрузки КАК Справочник.Склады).ЭтоГруппа ТОГДА
	|			ЗаказыДвижения.Склад В ИЕРАРХИИ (&СкладОтгрузки) ИЛИ Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ
	|			ЗаказыДвижения.Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &СкладОтгрузки)
	|		КОНЕЦ
	|	) КАК ТаблицаЗаказы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаЗаказы.ЗаказПереработчику,
	|		ТаблицаЗаказы.Номенклатура,
	|		ТаблицаЗаказы.Характеристика,
	|		ТаблицаЗаказы.КодСтроки,
	|		ТаблицаЗаказы.Склад
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаЗаказы.КОформлению) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказПереработчику        КАК ЗаказПереработчику,
	|	ТаблицаОстатки.Номенклатура              КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика            КАК Характеристика,
	|	ТаблицаОстатки.КодСтроки                 КАК КодСтроки,
	|	ВЫБОР 
	|		КОГДА Заказ.ПереработкаПоЗаказу
	|			ТОГДА ЗаказУслуги.Распоряжение 
	|		ИНАЧЕ ТаблицаОстатки.ЗаказПереработчику
	|	КОНЕЦ                                    КАК Распоряжение,
	|	ТаблицаОстатки.Количество                КАК Количество,
	|	ТаблицаОстатки.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок,
	|	ТаблицаОстатки.Склад                     КАК Склад,
	|	Заказ.Сделка                             КАК Сделка,
	|	Заказ.Валюта                             КАК ВалютаЗаказа,
	|	ЗаказТовары.ДатаПоступления              КАК ДатаПоступления,
	|	ЗаказТовары.Упаковка                     КАК Упаковка,
	|	ЗаказТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказТовары.Назначение                   КАК Назначение
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Продукция КАК ЗаказТовары
	|		ПО ТаблицаОстатки.Номенклатура          = ЗаказТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика     = ЗаказТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки          = ЗаказТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказПереработчику = ЗаказТовары.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Услуги КАК ЗаказУслуги
	|		ПО ЗаказУслуги.Ссылка                   = ЗаказТовары.Ссылка
	|			И ЗаказУслуги.НомерГруппыЗатрат     = ЗаказТовары.НомерГруппыЗатрат
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК Заказ
	|		ПО ТаблицаОстатки.ЗаказПереработчику = Заказ.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказПереработчику,
	|	ЗаказТовары.НомерСтроки
	|
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказПереработчику        КАК ЗаказПереработчику,
	|	ТаблицаОстатки.Номенклатура              КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика            КАК Характеристика,
	|	ТаблицаОстатки.КодСтроки                 КАК КодСтроки,
	|	ВЫБОР 
	|		КОГДА Заказ.ПереработкаПоЗаказу
	|			ТОГДА ЗаказУслуги.Распоряжение 
	|		ИНАЧЕ ТаблицаОстатки.ЗаказПереработчику
	|	КОНЕЦ                                    КАК Распоряжение,
	|	ТаблицаОстатки.Количество                КАК Количество,
	|	ТаблицаОстатки.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок,
	|	ТаблицаОстатки.Склад                     КАК Склад,
	|	Заказ.Сделка                             КАК Сделка,
	|	Заказ.Валюта                             КАК ВалютаЗаказа,
	|	ЗаказТовары.Количество                   КАК КоличествоПоЗаказу,
	|	ЗаказТовары.Цена                         КАК Цена,
	|	ЗаказТовары.Сумма                        КАК СуммаПоЗаказу,
	|	ЗаказТовары.ДатаПоступления              КАК ДатаПоступления,
	|	ЗаказТовары.Упаковка                     КАК Упаковка,
	|	ЗаказТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ЗаказТовары.Назначение                   КАК Назначение
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.ВозвратныеОтходы КАК ЗаказТовары
	|		ПО    ТаблицаОстатки.Номенклатура       = ЗаказТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика     = ЗаказТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки          = ЗаказТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказПереработчику = ЗаказТовары.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Услуги КАК ЗаказУслуги
	|		ПО ЗаказУслуги.Ссылка                   = ЗаказТовары.Ссылка
	|			И ЗаказУслуги.НомерГруппыЗатрат     = ЗаказТовары.НомерГруппыЗатрат
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК Заказ
	|		ПО ТаблицаОстатки.ЗаказПереработчику = Заказ.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказПереработчику,
	|	ЗаказТовары.НомерСтроки
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЗаказТовары.Упаковка",
			"ЗаказТовары.Номенклатура"));
			
	МассивВезультатов = Запрос.ВыполнитьПакет();
	#КонецОбласти
	
	ВыборкаТовары = МассивВезультатов[1].Выбрать();
	ВыборкаОтходы = МассивВезультатов[2].Выбрать();
	
	// Параметры для пересчета валюты
	НоваяВалюта            = Объект.Валюта;
	НоваяВалютаЗаполнена   = ЗначениеЗаполнено(Объект.Валюта);
	ДатаДокумента          = Объект.Ссылка.Дата;
	ДатаДокумента          = ?(ЗначениеЗаполнено(ДатаДокумента), ДатаДокумента, ТекущаяДатаСеанса());
	КэшКурсовВалют         = Новый Соответствие;
	КурсНовойВалютыПолучен = Ложь;
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		Если СписокПродукции <> Неопределено Тогда
			СтруктураПоиска = Новый Структура("Распоряжение,КодСтроки", ВыборкаТовары.ЗаказПереработчику, ВыборкаТовары.КодСтроки);
			СписокСтрок = ТаблицаПродукции.НайтиСтроки(СтруктураПоиска);
			Если СписокСтрок.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаТаб = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары);
		
	КонецЦикла;
		
	Пока ВыборкаОтходы.Следующий() Цикл
		
		СтрокаТаб = Объект.ВозвратныеОтходы.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаОтходы);
		
		СтараяВалюта = ВыборкаОтходы.ВалютаЗаказа;
		
		Если НоваяВалютаЗаполнена 
			И ЗначениеЗаполнено(Объект.Валюта) 
			И (Не НоваяВалюта = СтараяВалюта) Тогда
			
			Если Не КурсНовойВалютыПолучен Тогда
				СтруктураКурсовНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(НоваяВалюта, ДатаДокумента);
				КурсНовойВалютыПолучен = Истина;
			КонецЕсли;
			
			СтруктураКурсовСтаройВалюты = КэшКурсовВалют.Получить(СтараяВалюта);
			Если СтруктураКурсовСтаройВалюты = Неопределено Тогда
				СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(СтараяВалюта, ДатаДокумента);
				КэшКурсовВалют.Вставить(СтараяВалюта, СтруктураКурсовСтаройВалюты);
			КонецЕсли;
			
			СуммаПоЗаказу = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
									ВыборкаОтходы.СуммаПоЗаказу,
									СтараяВалюта,
									НоваяВалюта,
									СтруктураКурсовСтаройВалюты.Курс, СтруктураКурсовНовойВалюты.Курс,
									СтруктураКурсовСтаройВалюты.Кратность, СтруктураКурсовНовойВалюты.Кратность);
			
			СтрокаТаб.Цена = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
									СтрокаТаб.Цена,
									СтараяВалюта,
									НоваяВалюта,
									СтруктураКурсовСтаройВалюты.Курс, СтруктураКурсовНовойВалюты.Курс,
									СтруктураКурсовСтаройВалюты.Кратность, СтруктураКурсовНовойВалюты.Кратность);
			
		Иначе
			
			СуммаПоЗаказу = ВыборкаОтходы.СуммаПоЗаказу;
			
		КонецЕсли;
		
		Если ВыборкаОтходы.КоличествоПоЗаказу = ВыборкаОтходы.Количество Тогда
			СтрокаТаб.Сумма = СуммаПоЗаказу;
		Иначе
			СтрокаТаб.Сумма = ВыборкаОтходы.КоличествоУпаковок * СтрокаТаб.Цена;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт 
	
	Возврат "Склад,Дата";
	
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт 
	
	// Товары
	ТоварыСерии = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ТоварыСерии.ПолноеИмяОбъекта = "Документ.ПоступлениеОтПереработчика";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
	
	ТоварыСерии.ИспользоватьСерииНоменклатуры  = 
		(ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата, Истина))
		Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ТоварыСерии.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ТоварыСерии.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	ТоварыСерии.ПоляСвязи.Добавить("Склад");
	ТоварыСерии.ПоляСвязи.Добавить("Назначение");
	ТоварыСерии.ЭтоНакладная = Истина;
	ТоварыСерии.Дата = Объект.Дата;
	
	ТоварыСерии.ИмяТЧТовары = "Товары";
	ТоварыСерии.ИмяТЧСерии  = "ТоварыСерии";
	
	ТоварыСерии.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	ТоварыСерии.ИменаПолейДляОпределенияРаспоряжения.Добавить("ПоступлениеПоЗаказам");
	ТоварыСерии.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_ЗаказПереработчику");
	
	// Возвратные отходы
	
	ВозвратныеОтходыСерии = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ВозвратныеОтходыСерии.ПолноеИмяОбъекта = "Документ.ПоступлениеОтПереработчика";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
	
	ВозвратныеОтходыСерии.ИспользоватьСерииНоменклатуры  = 
		(ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата, Истина))
		Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ВозвратныеОтходыСерии.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ВозвратныеОтходыСерии.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	ВозвратныеОтходыСерии.ПоляСвязи.Добавить("Склад");
	ВозвратныеОтходыСерии.ПоляСвязи.Добавить("Назначение");
	ВозвратныеОтходыСерии.ЭтоНакладная = Истина;
	ВозвратныеОтходыСерии.Дата = Объект.Дата;
	
	ВозвратныеОтходыСерии.ИмяТЧТовары = "ВозвратныеОтходы";
	ВозвратныеОтходыСерии.ИмяТЧСерии  = "ВозвратныеОтходыСерии";
	
	ВозвратныеОтходыСерии.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	ВозвратныеОтходыСерии.ИменаПолейДляОпределенияРаспоряжения.Добавить("ПоступлениеПоЗаказам");
	ВозвратныеОтходыСерии.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_ЗаказПереработчику");

	ПараметрыУказанияСерий = Новый Структура;
	ПараметрыУказанияСерий.Вставить("Товары", Новый ФиксированнаяСтруктура(ТоварыСерии));
	ПараметрыУказанияСерий.Вставить("ВозвратныеОтходы", Новый ФиксированнаяСтруктура(ВозвратныеОтходыСерии));

	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|							ТОГДА ВЫБОР
	|									КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|											ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|										ТОГДА ВЫБОР
	|												КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|														И ТоварыДляЗапроса.Количество > 0
	|													ТОГДА 10
	|												ИНАЧЕ 9
	|											КОНЕЦ
	|									ИНАЧЕ 0
	|								КОНЕЦ
	|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|							ТОГДА ВЫБОР
	|									КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|											ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|										ТОГДА ВЫБОР
	|												КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|														И ТоварыДляЗапроса.Количество > 0
	|													ТОГДА 8
	|												ИНАЧЕ 7
	|											КОНЕЦ
	|									ИНАЧЕ 0
	|								КОНЕЦ
	|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|								И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|									ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|								И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|							ТОГДА ВЫБОР
	|									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|										ТОГДА ВЫБОР
	|												КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|														И ТоварыДляЗапроса.Количество > 0
	|													ТОГДА 4
	|												ИНАЧЕ 3
	|											КОНЕЦ
	|									ИНАЧЕ ВЫБОР
	|											КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|													И ТоварыДляЗапроса.Количество > 0
	|												ТОГДА 2
	|											ИНАЧЕ 1
	|										КОНЕЦ
	|								КОНЕЦ
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
//Параметры:
//	ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//		поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//	ДокументСсылка.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	
	Если ЗначенияПолейДляОпределенияРаспоряжения.ПоступлениеПоЗаказам Тогда
		Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_ЗаказПереработчику;
	Иначе
		Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область Прочее

// Функция определяет реквизиты выбранного документа
//
// Параметры:
//	ДокументСсылка - Ссылка на документа
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт 
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                   КАК Дата,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Партнер                КАК Партнер,
	|	ДанныеДокумента.Контрагент             КАК Контрагент,
	|	ДанныеДокумента.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ЗаказПереработчику     КАК ЗаказПереработчику,
	|	ДанныеДокумента.ПоступлениеПоЗаказам   КАК ПоступлениеПоЗаказам,
	|	ДанныеДокумента.Проведен               КАК Проведен,
	|	ДанныеДокумента.Договор                КАК Договор
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СтруктураРеквизитов = Новый Структура;
	
	ХозяйственнаяОперация = ?(ЗначениеЗаполнено(Выборка.ХозяйственнаяОперация),
		Выборка.ХозяйственнаяОперация,
		Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика);
	
	Если Выборка.Следующий() Тогда
		
		СтруктураРеквизитов.Вставить("Дата",                  Выборка.Дата);
		СтруктураРеквизитов.Вставить("Организация",           Выборка.Организация);
		СтруктураРеквизитов.Вставить("Партнер",               Выборка.Партнер);
		СтруктураРеквизитов.Вставить("Контрагент",            Выборка.Контрагент);
		СтруктураРеквизитов.Вставить("Договор",               Выборка.Договор);
		СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
		СтруктураРеквизитов.Вставить("ПоЗаказу",              Выборка.ПоступлениеПоЗаказам);
		
	Иначе
		
		СтруктураРеквизитов.Вставить("Дата",                  Дата(1,1,1));
		СтруктураРеквизитов.Вставить("Организация",           Справочники.Организации.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Партнер",               Справочники.Партнеры.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Контрагент",            Справочники.Контрагенты.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Договор",               Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика);
		СтруктураРеквизитов.Вставить("ПоЗаказу",              Ложь);
		
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Функция получает список складов со справочным хранением остатков по массиву документов
//
// Параметры:
//	МассивДокументов - массив ссылок документов "Поступление товаров и услуг"
//
// Вовращаемое значение:
//	Список значений - список складов со справочным хранением остатков
//
Функция ПолучитьСписокСкладовСоСправочнымХранением(МассивДокументов) Экспорт 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склад КАК Склад
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары
	|ГДЕ
	|	Склад.ИспользоватьАдресноеХранениеСправочно
	|	И Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад.Наименование");
	
	СписокСкладов = Неопределено;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Результат = Запрос.Выполнить();
	
	СписокСкладов = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСкладов.Добавить(Выборка.Склад);
	КонецЦикла;
	
	Возврат СписокСкладов;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Документы.ОтчетПереработчика.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Документы.ПриходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеОтПереработчика) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПоступлениеОтПереработчика.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПоступлениеОтПереработчика);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводствоНаСтороне";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаНеобеспеченныхНазначенийОбеспечено(ПараметрыФормированияЗапроса);
	
КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчетуУКР

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт

#Область ТекстОтраженияПоступлениеСобственныхТоваров  // (Дт 25, 26 :: Кт 23)
	ТекстОтраженияПоступлениеСобственныхТоваров = "
	|ВЫБРАТЬ // Выпуск собственной продукции (Дт 25, 26 :: Кт 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата        КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО         КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета                       КАК АналитикаУчетаДт,
	|	Строки.Склад                                        КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)       КАК ВалютаДт,
	|	Строки.Склад.Подразделение                     КАК ПодразделениеДт,
	|	ЕСТЬNULL(Строки.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Склад        КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	ВЫБОР КОГДА Операция.Подразделение = ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		И Строки.ГруппаПродукции = ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ТОГДА Строки.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)           КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	Операция.Партнер                                             КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО                                   КАК ВалютаКт,
	|	Операция.Подразделение                         КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО                                   КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеОтПереработчика КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И НЕ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура				= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ВидДвижения            = Стоимости.ВидДвижения
	|		И (Стоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ИЛИ Стоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
	|			И Строки.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка))
	|
	|
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|";
#КонецОбласти

#Область ТекстОтраженияПоступлениеТоваровДавальца     // (Дт 023 :: Кт )
	ТекстОтраженияПоступлениеТоваровДавальца = "
	|ВЫБРАТЬ //// Выпуск продукции давальца (Дт 023 :: Кт )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата        КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО         КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО                                                         КАК ВалютаДт,
	|	Операция.Склад.Подразделение                                         КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)            КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериальныеЦенностиНаОтветственномХранении) КАК СчетДт,
	|	Строки.ВидЗапасов.Контрагент                                         КАК СубконтоДт1,
	|	Строки.Номенклатура                                                  КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО                                                         КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск продукции давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеОтПереработчика КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеОтПереработчика.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //// Выпуск продукции давальца (Дт 023 :: Кт )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата        КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО         КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО                                                         КАК ВалютаДт,
	|	Операция.Склад.Подразделение                                         КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)            КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериальныеЦенностиНаОтветственномХранении) КАК СчетДт,
	|	Строки.ВидЗапасов.Контрагент                                         КАК СубконтоДт1,
	|	Строки.Номенклатура                                                  КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО                                                         КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск продукции давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеОтПереработчика КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|";
#КонецОбласти

#Область ТекстКорректировкиНДСПартий // (Дт 23 :: Кт 6435)
	ТекстКорректировкиНДСПартий = "
	|ВЫБРАТЬ //// Корректировка НДС партий (Дт 23 :: Кт 6435)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(КорректировкиНДСПартий.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)			КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)КАК АналитикаУчетаДт,
	|	Операция.Партнер											КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)					КАК ВалютаДт,
	|	Операция.Подразделение										КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоДт1,
	|	КорректировкиНДСПартий.ГруппаПродукции КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,  
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт, 
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УсловнаяПродажа) КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Условная продажа"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеОтПереработчика КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Партнер,
	|	Операция.Подразделение,
	|	КорректировкиНДСПартий.ГруппаПродукции
	|";
#КонецОбласти

	Возврат
	ТекстОтраженияПоступлениеСобственныхТоваров
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтраженияПоступлениеТоваровДавальца 
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкиНДСПартий
	;
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

Функция МетаданныеДокумента() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	
	ФильтрХозОперация = Новый Массив();
	ФильтрХозОперация.Добавить("ПОСТУПЛЕНИЕ");
	ФильтрХозОперация.Добавить("ВОЗВРАТНЫЕОТХОДЫ");
	ОписаниеТабЧасти = Новый Структура("ФильтрХозОперация, ОформляетсяПоЗаказу", ФильтрХозОперация, Истина);
	
	СтруктураОбъекта.ТабЧасти.Вставить("ВозвратныеОтходы", ОписаниеТабЧасти);
	
	Возврат СтруктураОбъекта;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		
		Если ПравоДоступа("Изменение", Метаданные.Документы.ПоступлениеОтПереработчика) Тогда
			ВыбраннаяФорма = "РабочееМесто";
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Если ИмяРегистра = "ДвижениеТоваров" Тогда
		ИсточникиДанных.Вставить("Товары.Распоряжение");	
	КонецЕсли;
	Если ИмяРегистра = "ТоварыКОформлениюПоступления" Тогда
		ИсточникиДанных.Вставить("Товары.Распоряжение");	
	КонецЕсли;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПоступлениеОтПереработчика";
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
		
	ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПолученныеОтПереработчика(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                КАК Период,
	|	ДанныеДокумента.Ссылка                              КАК Ссылка,
	|	ДанныеДокумента.Организация                         КАК Организация,
	|	ДанныеДокумента.Валюта                              КАК Валюта,
	|	ДанныеДокумента.Партнер                             КАК Партнер,
	|	ДанныеДокумента.Партнер                             КАК Поставщик,
	|	ДанныеДокумента.Контрагент                          КАК Контрагент,
	|	ДанныеДокумента.ЗаказПереработчику                  КАК ЗаказПереработчику,
	|	ДанныеДокумента.ПоступлениеПоЗаказам                КАК ПоступлениеПоЗаказам,
	|	ДанныеДокумента.Склад                               КАК Склад,
	|	ДанныеДокумента.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение                       КАК Подразделение,
	|	ДанныеДокумента.Договор                             КАК Договор,
	|	ДанныеДокумента.НалоговоеНазначение                 КАК НалоговоеНазначение,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка"; 
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                             Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпрУчета",                              Константы.ВалютаУправленческогоУчета.Получить());	
	Запрос.УстановитьПараметр("Фиксированная",                               Перечисления.ТипыСтоимостиВыходныхИзделий.Фиксированная);
	Запрос.УстановитьПараметр("Рассчитывается",                              Перечисления.ТипыСтоимостиВыходныхИзделий.Рассчитывается);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",                  ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ДокументПоступления",                         ДокументСсылка);
	Запрос.УстановитьПараметр("Распоряжение",                                Неопределено);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос) 

	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ВложенныйЗапрос.Склад КАК Склад
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		&Серия КАК Серия,
	|		&Партнер КАК Склад
	|	ИЗ
	|		Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И (&Серия = Аналитика.Серия)
	|				И (&Партнер = Аналитика.Склад)
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Серия КАК Серия,
	|		&Партнер КАК Склад
	|	ИЗ
	|		Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ТаблицаТовары.Серия = Аналитика.Серия
	|				И &Партнер = Аналитика.Склад
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&Серия,
	|		&Партнер
	|	ИЗ
	|		Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И (&Серия = Аналитика.Серия)
	|				И (&Партнер = Аналитика.Склад)
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.Серия,
	|		&Партнер
	|	ИЗ
	|		Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|				И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|				И ТаблицаТовары.Серия = Аналитика.Серия
	|				И &Партнер = Аналитика.Склад
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL ) КАК ВложенныйЗапрос");
	
	ЗапросАналитик.УстановитьПараметр("Серия",   Запрос.Параметры.Серия);
	ЗапросАналитик.УстановитьПараметр("Ссылка",  Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Партнер", Запрос.Параметры.Партнер);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);

КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если  Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта, Неопределено, Запрос.Параметры.Период);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",             Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",          	 Коэффициенты.КоэффициентПересчетаВВалютуУпр);	

КонецПроцедуры

Процедура УстановитьПараметрыУчетнойПолитики(Запрос)
	
	Если Запрос.Параметры.Свойство("УчетГотовойПродукцииПоПлановойСтоимости") Тогда
		Возврат;
	КонецЕсли;
	
	УчетГотовойПродукцииПоПлановойСтоимости = Истина;
												
		
	Запрос.УстановитьПараметр("УчетГотовойПродукцииПоПлановойСтоимости",     УчетГотовойПродукцииПоПлановойСтоимости);

КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеВидовЗапасов"; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий                   КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Период < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ТоварыСерии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика КАК Поступление
	|		ПО Поступление.Ссылка = ТаблицаСерии.Ссылка
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Период < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|						ТОГДА ТаблицаТовары.Назначение
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий                   КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Период < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходыСерии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеОтПереработчика КАК Поступление
	|		ПО Поступление.Ссылка = ТаблицаСерии.Ссылка
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		ИЛИ &Период < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаТовары";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	УстановитьПараметрыУчетнойПолитики(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                       КАК Ссылка,
	|	ТаблицаТовары.КодСтроки                    КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПереработчику           КАК ЗаказПереработчику,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	&НалоговоеНазначение                       КАК НалоговоеНазначение,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов        КАК ТипЗапасов,
	|	ТаблицаТовары.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	&Рассчитывается                            КАК ТипСтоимости,
	|	ТаблицаТовары.Склад                        КАК Склад,
	|
	|	ВЫБОР 
	//++ НЕ УТКА
	|		КОГДА ТаблицаТовары.Распоряжение ССЫЛКА Документ.ЗаказНаПроизводство
	|			ТОГДА ИСТИНА
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЛОЖЬ
	|	КОНЕЦ                                      КАК ПереработкаПоЗаказу,
	|
	|	ТаблицаТовары.Распоряжение                 КАК Распоряжение,
	|	ТаблицаТовары.Назначение				   КАК Назначение,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК КоличествоОбособленное,
	|
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|
	|	ЛОЖЬ                                       КАК ФиксированнаяСтоимость,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                      КАК ИспользоватьОрдернуюСхемуПриПоступлении,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	АналитикаПоПартнеру.КлючАналитики          КАК АналитикаУчетаПоПартнеру
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоПартнеру
	|	ПО ТаблицаТовары.Номенклатура = АналитикаПоПартнеру.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаПоПартнеру.Характеристика
	|		И &Серия = АналитикаПоПартнеру.Серия
	|		И &Партнер = АналитикаПоПартнеру.Склад
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                       КАК Ссылка,
	|	ТаблицаТовары.КодСтроки                    КАК КодСтроки,
	|	ТаблицаТовары.ЗаказПереработчику           КАК ЗаказПереработчику,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	&НалоговоеНазначение                       КАК НалоговоеНазначение,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов        КАК ТипЗапасов,
	|	ТаблицаТовары.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	&Фиксированная                             КАК ТипСтоимости,
	|	ТаблицаТовары.Склад                        КАК Склад,
	|
	|	ВЫБОР 
	//++ НЕ УТКА
	|		КОГДА ТаблицаТовары.Распоряжение ССЫЛКА Документ.ЗаказНаПроизводство
	|			ТОГДА ИСТИНА
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА ЛОЖЬ
	|	КОНЕЦ                                      КАК ПереработкаПоЗаказу,
	|
	|	ТаблицаТовары.Распоряжение                 КАК Распоряжение,
	|	ТаблицаТовары.Назначение                   КАК Назначение,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                      КАК КоличествоОбособленное,
	|
	|	ТаблицаТовары.Сумма                        КАК Сумма,
	|
	|	ИСТИНА                                     КАК ФиксированнаяСтоимость,
	|
	|	ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                      КАК ИспользоватьОрдернуюСхемуПриПоступлении,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	АналитикаПоПартнеру.КлючАналитики          КАК АналитикаУчетаПоПартнеру
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоПартнеру
	|	ПО
	|		ТаблицаТовары.Номенклатура   = АналитикаПоПартнеру.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаПоПартнеру.Характеристика
	|		И &Партнер                     = АналитикаПоПартнеру.Склад
	|		И ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаПоПартнеру.Серия
	|			ИНАЧЕ &Серия = АналитикаПоПартнеру.Серия
	|		   КОНЕЦ
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыПоставщикам";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПереработчику       КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.КодСтроки <> 0
	|	И &ПоступлениеПоЗаказам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПереработчику       КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	0                                      КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                      КАК Порядок,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.ЗаказПереработчику       КАК ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	0                                      КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.КодСтроки = 0
	|	И &ПоступлениеПоЗаказам
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,	
	|	&Ссылка                                КАК ДокументПоступления,	
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Количество               КАК КПоступлению
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И (НЕ &ПоступлениеПоЗаказам
	|			ИЛИ (&ПоступлениеПоЗаказам И ТаблицаТовары.КодСтроки = 0))
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	// На неордерном складе
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.КоличествоОбособленное
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВРезервеПодЗаказ
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе для старых назначений установка резерва под заказ (т.к. в приходном ордере нет старых 
	// назначений, приходный ордер этогосделать не мог)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.КоличествоОбособленное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// На неордерном складе
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаТовары.Распоряжение КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И НЕ ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе при поступлении по старым назначениям
	|ВЫБРАТЬ
	|	&Период,
	|	ТаблицаТовары.Распоряжение,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	-ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе сторно приходного ордера при поступлении по старым назначениям
	|ВЫБРАТЬ
	|	&Период,
	|	ТаблицаТовары.Распоряжение,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТаблицаТовары.Количество,
	|	0
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|	И ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Партнер КАК Отправитель,
	|	ТаблицаСерии.Склад КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Период < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ТоварыСерии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Партнер,
	|	ТаблицаСерии.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Период < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Партнер,
	|	ТаблицаСерии.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Период < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходыСерии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Партнер,
	|	ТаблицаСерии.Склад,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Период < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаТовары.Склад                       КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ(&ПоступлениеПоЗаказам
	|					И ТаблицаТовары.КодСтроки <> 0)
	|			ТОГДА -ТаблицаТовары.Количество
	|	КОНЕЦ 									  КАК КЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|						И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|			ТОГДА ТаблицаТовары.Количество
	|	КОНЕЦ 									  КАК НаличиеПодЗаказ,
	|	ТаблицаТовары.Назначение				  КАК Назначение
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ(&ПоступлениеПоЗаказам
	|					И ТаблицаТовары.КодСтроки <> 0)
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаТовары.Склад                       КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ(&ПоступлениеПоЗаказам
	|					И ТаблицаТовары.КодСтроки <> 0)
	|			ТОГДА -ТаблицаТовары.Количество
	|	КОНЕЦ 									  КАК КЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|						И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|			ТОГДА ТаблицаТовары.Количество
	|	КОНЕЦ 									  КАК НаличиеПодЗаказ,
	|	ТаблицаТовары.Назначение				  КАК Назначение
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ(&ПоступлениеПоЗаказам
	|					И ТаблицаТовары.КодСтроки <> 0)
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|					И &Период >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                                     КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		  ТаблицаТовары.ВидЗапасов     = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура   = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.Склад                         КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ИСТИНА                                      КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыУчетнойПолитики(Запрос);
	
	ТекстЗапроса = 
	// Продукция стоимость которой рассчитывается
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                КАК НомерСтрокиДокумента,
	|	&Период                                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры                 КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                    КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение                        КАК НалоговоеНазначение, 
	|
	|	ТаблицаТовары.Количество                                 КАК Количество,
	|
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРеглБезНДС,
	|	0                                                        КАК НДСРегл,
	|	0                                                        КАК ПостояннаяРазница,
	|	0                                                        КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика) КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                             КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорНалоговоеНазначение, 
	|	НЕОПРЕДЕЛЕНО                                             КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорСтоимость,
	|	&Ссылка                                                  КАК ДокументДвижения,
	|	&Подразделение                                           КАК Подразделение,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета     КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	Не ТаблицаТовары.ФиксированнаяСтоимость
	|	И ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Продукция по фиксированной стоимости
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                КАК НомерСтрокиДокумента,
	|	&Период                                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры                 КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                    КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение                        КАК НалоговоеНазначение, 
	|
	|	ТаблицаТовары.Количество                                 КАК Количество,
	|
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр	 КАК Стоимость,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр    КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл   КАК СтоимостьРегл,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл   КАК СтоимостьРеглБезНДС,
	|	0                                                        КАК НДСРегл,
	|	0                                                        КАК ПостояннаяРазница,
	|	0                                                        КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                             КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорНалоговоеНазначение, 
	|	НЕОПРЕДЕЛЕНО                                             КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорСтоимость,
	|	&Ссылка                                                  КАК ДокументДвижения,
	|	&Подразделение                                           КАК Подразделение,
	|	ТаблицаТовары.ВидЗапасов.ГруппаПродукции     КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ФиксированнаяСтоимость
	|	И ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уменьшение производственных затрат на фиксированную стоимость выпуска
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                КАК НомерСтрокиДокумента,
	|	&Период                                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаПоПартнеру                   КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                    КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение                        КАК НалоговоеНазначение, 
	|
	|	-ТаблицаТовары.Количество                                КАК Количество,
	|
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр   КАК Стоимость,
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр   КАК СтоимостьБезНДС,
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл  КАК СтоимостьРегл,
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл  КАК СтоимостьРеглБезНДС,
	|	0                                                        КАК НДСРегл,
	|	0                                                        КАК ПостояннаяРазница,
	|	0                                                        КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                             КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорНалоговоеНазначение, 
	|	НЕОПРЕДЕЛЕНО                                             КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                                             КАК ДокументДвижения,
	|	&Подразделение                                           КАК Подразделение,
	|	ТаблицаТовары.ВидЗапасов.ГруппаПродукции     КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ФиксированнаяСтоимость
	|	И ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                КАК НомерСтрокиДокумента,
	|	&Период                                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры                 КАК АналитикаУчетаНоменклатуры,
	|
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                    КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение                        КАК НалоговоеНазначение, 
	|
	|	ТаблицаТовары.Количество                                 КАК Количество,
	|
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр    КАК Стоимость,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр    КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл   КАК СтоимостьРегл,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл   КАК СтоимостьРеглБезНДС,
	|	0                                                        КАК НДСРегл,
	|	0                                                        КАК ПостояннаяРазница,
	|	0                                                        КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика) КАК ХозяйственнаяОперация,
	|
	|	НЕОПРЕДЕЛЕНО                                             КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорНалоговоеНазначение, 
	|	НЕОПРЕДЕЛЕНО                                             КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                             КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                                             КАК ДокументДвижения,
	|	&Подразделение                                           КАК Подразделение,
	|	ТаблицаТовары.ВидЗапасов.ГруппаПродукции     КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                  КАК ДокументПоступления,
	|
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	0                                        КАК НДСРегл,
	|
	|	ТаблицаТовары.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК Первичное,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьПартионныйУчет
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";  
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПолученныеОтПереработчика(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПолученныеОтПереработчика"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоЗаказам
	|			ТОГДА ТаблицаТовары.ЗаказПереработчику
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                  КАК Распоряжение,
	|	ТаблицаТовары.АналитикаУчетаПоПартнеру КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
	|	ТаблицаТовары.ТипСтоимости             КАК ТипСтоимости,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки          КАК НомерСтроки,
	|	&Период                            КАК Период,
	|	&Валюта                            КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Сумма                КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                       КАК СтавкаНДС,
	|	0                                  КАК СуммаНДС,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0                                  КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                       КАК ТипРасчетов
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРеглУчета
	|	И ТаблицаТовары.ФиксированнаяСтоимость
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Строки.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период	КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	&Партнер КАК Подразделение,
	|	Строки.Номенклатура,
	|	Строки.Характеристика,
	|	Строки.Серия,
	|	Строки.ВидЗапасов.Назначение КАК Назначение,
	|	Строки.ЗаказПереработчику КАК ЗаказНаПроизводство,
	|	Строки.АналитикаУчетаПоПартнеру КАК АналитикаУчетаНоменклатуры,
	|	-Строки.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|
	|ГДЕ
	|	Строки.ФиксированнаяСтоимость
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&Период                                     КАК ДатаРегистратора,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение           КАК НалоговоеНазначение,
	|	ТаблицаТовары.АналитикаУчетаПоПартнеру      КАК АналитикаУчетаНоменклатуры,
	|	-ТаблицаТовары.Количество                   КАК Количество,
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК Стоимость,
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	&Ссылка                                     КАК ДокументПоступления,
	|	0                                           КАК ПостояннаяРазница,
	|	0                                           КАК ВременнаяРазница,
	|	-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СтоимостьРегл
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	(ТаблицаТовары.ФиксированнаяСтоимость
	|		ИЛИ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюПоступления"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ВЫБОР 
	|		КОГДА НЕ &ПоступлениеПоЗаказам ТОГДА
	|			&Ссылка
	|		ИНАЧЕ
	|			ТаблицаТовары.Распоряжение
	|	КОНЕЦ							       КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыпускПродукции"; 

	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтТаблицаТовары.КодСтроки									КАК КодСтроки,
	|	&Период														КАК Период,
	|	ВтТаблицаТовары.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры,
	|	&Организация												КАК Организация,
	|	СУММА(ВтТаблицаТовары.Количество)							КАК Количество,
	|	ВтТаблицаТовары.ВидЗапасов									КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)		КАК Спецификация,
	|	ВтТаблицаТовары.ЗаказПереработчику							КАК Заказ
	|ИЗ
	|	ВтТаблицаТовары КАК ВтТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоЗаказам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТаблицаТовары.ЗаказПереработчику,
	|	ВтТаблицаТовары.ВидЗапасов,
	|	ВтТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ВтТаблицаТовары.КодСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0															КАК КодСтроки,
	|	&Период														КАК Период,
	|	ВтТаблицаТовары.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры,
	|	&Организация												КАК Организация,
	|	СУММА(ВтТаблицаТовары.Количество)							КАК Количество,
	|	ВтТаблицаТовары.ВидЗапасов									КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)		КАК Спецификация,
	|	НЕОПРЕДЕЛЕНО												КАК Заказ
	|ИЗ
	|	ВтТаблицаТовары КАК ВтТаблицаТовары
	|ГДЕ
	|	НЕ &ПоступлениеПоЗаказам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТаблицаТовары.ЗаказПереработчику,
	|	ВтТаблицаТовары.ВидЗапасов,
	|	ВтТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ВтТаблицаТовары.КодСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт


	// Приходный ордер (М-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru='Приходный ордер (М-4)';uk='Прибутковий ордер (М-4)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы  М-4
//
Функция ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка  КАК Ссылка,
	|	ДанныеДокументов.Дата    КАК Дата,
	|	ДанныеДокументов.Валюта  КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеОтПереработчика.Ссылка                     КАК Ссылка,
	|	ПоступлениеОтПереработчика.Номер                      КАК Номер,
	|	ПоступлениеОтПереработчика.Дата                       КАК Дата,
	|	ПоступлениеОтПереработчика.Дата                       КАК ДатаСоставления,
	|	ПоступлениеОтПереработчика.НомерВходящегоДокумента    КАК НомерСопроводительногоДокумента,
	|	ПоступлениеОтПереработчика.Контрагент                 КАК Поставщик,
	|	ПоступлениеОтПереработчика.Организация                КАК Организация,
	|	ПоступлениеОтПереработчика.Организация.Префикс        КАК Префикс,
	|	ПоступлениеОтПереработчика.БанковскийСчетОрганизации  КАК БанковскийСчетОрганизации,
	|
	|	ВЫБОР
	|		КОГДА
	|			ПоступлениеОтПереработчика.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ТОГДА
	|			ПоступлениеОтПереработчика.Организация
	|		ИНАЧЕ
	|			ПоступлениеОтПереработчика.Грузоотправитель
	|	КОНЕЦ                                                 КАК Грузоотправитель,
	|
	|	ПоступлениеОтПереработчика.Подразделение              КАК Подразделение,
	|	ПоступлениеОтПереработчика.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПоступлениеОтПереработчика.Валюта                     КАК Валюта,
	|	ПоступлениеОтПереработчика.Принял        			  КАК МОЛ,
	|	ПоступлениеОтПереработчика.ПринялДолжность            КАК ДолжностьМОЛ
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика КАК ПоступлениеОтПереработчика
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ПоступлениеОтПереработчика.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                                  КАК Ссылка,
	|	ТаблицаТоваров.Склад                                   КАК Склад,
	|	ТаблицаТоваров.Склад.Наименование                      КАК СкладНаименование,
	|	ТаблицаТоваров.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное         КАК ТоварНаименование,
	|	
	|	ВЫБОР КОГДА &КолонкаКодов = ""Артикул"" ТОГДА
	|		ТаблицаТоваров.Номенклатура.Артикул
	|	ИНАЧЕ
	|		ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ                                                  КАК ТоварКод,
	|	
	|	ТаблицаТоваров.ЕдиницаИзмерения.Представление          КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаТоваров.ЕдиницаИзмерения.Код                    КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное       КАК Характеристика,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1 ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаТоваров.Упаковка
	|	КОНЕЦ                                                  КАК Упаковка,
	|
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок                      КАК КоличествоПринято,
	|	ВЫБОР КОГДА ТаблицаТоваров.Количество <> 0 ТОГДА 
	|		ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                                  КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС                             КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС                                КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС   КАК СуммаСНДС,
	|	ЛОЖЬ                                                   КАК ЭтоВозвратнаяТара
	|
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваров.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка, Склад
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти", МассивРезультатов[0], МассивРезультатов[1]);
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПересчитыватьВВалютуРегл);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка             КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки        КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура       КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика     КАК Характеристика,
	|	ТаблицаДокумента.Количество         КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок КАК КоличествоУпаковок,
	|	0                                   КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                        КАК СтавкаНДС,
	|	0                                   КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка           КАК Упаковка,
	|
	|	&ТекстЗапросаЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|
	|	ТаблицаДокумента.Склад              КАК Склад
	|
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта = &ВалютаРегламентированногоУчета
	|		ИЛИ (НЕ &ПересчитыватьВВалютуРегл)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                                            КАК СтавкаНДС,
	|	0                                                       КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
	|
	|	&ТекстЗапросаЕдиницаИзмерения                           КАК ЕдиницаИзмерения,
	|
	|	ТаблицаДокумента.Склад                                  КАК Склад
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютеРегл.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка             КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки        КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура       КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика     КАК Характеристика,
	|	ТаблицаДокумента.Количество         КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Сумма              КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                        КАК СтавкаНДС,
	|	0                                   КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка           КАК Упаковка,
	|
	|	&ТекстЗапросаЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|
	|	ТаблицаДокумента.Склад              КАК Склад
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта = &ВалютаРегламентированногоУчета
	|		ИЛИ (НЕ &ПересчитыватьВВалютуРегл)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                                            КАК СтавкаНДС,
	|	0                                                       КАК СуммаНДС,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
	|
	|	&ТекстЗапросаЕдиницаИзмерения                           КАК ЕдиницаИзмерения,
	|
	|	ТаблицаДокумента.Склад                                  КАК Склад
	|
	|ИЗ
	|	Документ.ПоступлениеОтПереработчика.ВозвратныеОтходы КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютеРегл.Активность
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Документ.ПоступлениеОтПереработчика.Форма.РабочееМесто";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.ПоступлениеОтПереработчика))
		И ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказПереработчику)
		И (ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеОтПереработчика)
			ИЛИ ПравоДоступа("Изменение", Метаданные.Документы.ПоступлениеОтПереработчика))
		И ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ДетальныйЗапрос.КОформлениюВсего)	КАК ПоступленияОтПереработчиковКОформлению
	|ИЗ
	|	(ВЫБРАТЬ
	|		1 КАК КОформлениюВсего
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(, ЗаказПоставщику ССЫЛКА Документ.ЗаказПереработчику) КАК ЗаказыПоставщикам
	|	
	|	ГДЕ
	|		ЗаказыПоставщикам.КОформлениюОстаток > 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказыПоставщикам.ЗаказПоставщику
	|	
	|	) КАК ДетальныйЗапрос";
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ПроизводствоНаСтороне
	ДелоРодитель = ТекущиеДела.Найти("ПроизводствоНаСтороне", "Идентификатор");
	Если ДелоРодитель = Неопределено Тогда
		ДелоРодитель = ТекущиеДела.Добавить();
		ДелоРодитель.Идентификатор  = "ПроизводствоНаСтороне";
		ДелоРодитель.Представление  = НСтр("ru='Производство на стороне';uk='Виробництво на стороні'");
		ДелоРодитель.Владелец       = Метаданные.Подсистемы.Производство;
	КонецЕсли;
	
	// ПоступленияОтПереработчиковКОформлению
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	ПараметрыОтбора.Вставить("Менеджер", ОбщиеПараметрыЗапросов.Пользователь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаКОформлению");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ПоступленияОтПереработчиковКОформлению";
	Дело.ЕстьДела       = Результат.ПоступленияОтПереработчиковКОформлению > 0;
	Дело.Представление  = НСтр("ru='Поступления от переработчиков к оформлению';uk='Надходження від переробників до оформлення'");
	Дело.Количество     = Результат.ПоступленияОтПереработчиковКОформлению;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ПроизводствоНаСтороне";
	
	Если Результат.ПоступленияОтПереработчиковКОформлению > 0 Тогда
		ДелоРодитель.ЕстьДела = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
