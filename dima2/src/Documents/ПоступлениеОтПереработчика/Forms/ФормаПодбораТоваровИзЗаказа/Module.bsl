
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуТоваров();

	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Элементы.ТаблицаТоваровОрганизация.Видимость = Ложь;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		Элементы.ТаблицаТоваровПодразделение.Видимость = Ложь;
	КонецЕсли; 
	Если ЗначениеЗаполнено(Параметры.Переработчик) Тогда
		Элементы.ТаблицаТоваровПереработчик.Видимость = Ложь;
	КонецЕсли; 
	
	ЗаказыСервер.УстановитьПризнакиПрисутствияСтрокиВДокументе(
		ТаблицаТоваров,
		"ЗаказПереработчику",
		Параметры.МассивКодовСтрок);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Перенести изменения в документ?';uk='Дані були змінені. Перенести зміни в документ?'");
	Оповещение = Новый ОписаниеОповещения("ПеренестиТоварыВДокументИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ТекстВопроса);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ТаблицаТоваров.ТекущиеДанные <> Неопределено Тогда
		
		Если Поле.Имя = "ТаблицаТоваровЗаказПереработчику" Тогда
			ПоказатьЗначение(Неопределено, Элементы.ТаблицаТоваров.ТекущиеДанные.ЗаказПереработчику);
			
		ИначеЕсли Поле.Имя = "ТаблицаТоваровСделка" Тогда
			ПоказатьЗначение(Неопределено, Элементы.ТаблицаТоваров.ТекущиеДанные.Сделка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()
	
	ПеренестиТоварыВДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТоварыВыполнить()
	
	ВыбратьВсеТоварыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТоварыВыполнить()
	
	ВыбратьВсеТоварыНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	#Область СтандартноеОформление
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, 
																			 "ТаблицаТоваровХарактеристика",
																		     "ТаблицаТоваров.ХарактеристикиИспользуются");
	#КонецОбласти
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваров.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаТоваров.ПрисутствуетВДокументе");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Gray);

	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеТоварыНаСервере(ЗначениеВыбора = Истина)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров.НайтиСтроки(Новый Структура("СтрокаВыбрана", Не ЗначениеВыбора)) Цикл
		
		СтрокаТаблицы.СтрокаВыбрана = ЗначениеВыбора;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаТоваров.Выгрузить(Новый Структура("СтрокаВыбрана", Истина)));
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикам.Распоряжение           КАК ЗаказПереработчику,
	|	ДокЗаказПереработчику.Номер              КАК НомерРаспоряжения,
	|	ДокЗаказПереработчику.Дата               КАК ДатаРаспоряжения,
	|	ДокЗаказПереработчику.Организация        КАК Организация,
	|	ДокЗаказПереработчику.Партнер            КАК Переработчик,
	|	ЗаказыПоставщикам.Склад                  КАК Склад,
	|	ЗаказыПоставщикам.КодСтроки              КАК КодСтроки,
	|	ЗаказыПоставщикам.Номенклатура           КАК Номенклатура,
	|	ЗаказыПоставщикам.Характеристика         КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаПродукция.Назначение, ЕСТЬNULL(ТаблицаОтходы.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))) КАК Назначение,
	|	ЕСТЬNULL(ТаблицаПродукция.Упаковка, ЕСТЬNULL(ТаблицаОтходы.Упаковка, НЕОПРЕДЕЛЕНО)) КАК Упаковка,
	|
	|	ВЫБОР
	|		КОГДА ДокЗаказПереработчику.ПереработкаПоЗаказу
	|			ТОГДА ЕСТЬNULL(ТаблицаПродукцияУслуги.Распоряжение, ТаблицаОтходыУслуги.Распоряжение)
	|		ИНАЧЕ ДокЗаказПереработчику.Ссылка
	|	КОНЕЦ                                    КАК Распоряжение,
	|
	|	ЗаказыПоставщикам.Заказано               КАК Количество,
	|	ЗаказыПоставщикам.Заказано / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 
	|										ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1)) КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаОтходы.Ссылка ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратныйОтход,
	|	ВЫБОР
	|		КОГДА ЗаказыПоставщикам.Номенклатура.ИспользованиеХарактеристик В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), 
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры), 
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыПоставщикам.ЗаказПоставщику     КАК Распоряжение,
	|		ЗаказыПоставщикам.Склад               КАК Склад,
	|		ЗаказыПоставщикам.КодСтроки           КАК КодСтроки,
	|		ЗаказыПоставщикам.Номенклатура        КАК Номенклатура,
	|		ЗаказыПоставщикам.Характеристика      КАК Характеристика,
	|		ЗаказыПоставщикам.КОформлениюОстаток  КАК Заказано
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|				,
	|				ЗаказПоставщику ССЫЛКА Документ.ЗаказПереработчику
	|					И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|						ИЛИ Склад = &Склад)) КАК ЗаказыПоставщикам
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗаказыПоставщикам.ЗаказПоставщику     КАК Распоряжение,
	|		ЗаказыПоставщикам.Склад               КАК Склад,
	|		ЗаказыПоставщикам.КодСтроки           КАК КодСтроки,
	|		ЗаказыПоставщикам.Номенклатура        КАК Номенклатура,
	|		ЗаказыПоставщикам.Характеристика      КАК Характеристика,
	|		ЗаказыПоставщикам.КОформлению         КАК Заказано
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыПоставщикам
	|
	|	ГДЕ
	|		ЗаказыПоставщикам.Регистратор = &Регистратор
	|		И ЗаказыПоставщикам.Активность
	|		И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ИЛИ ЗаказыПоставщикам.Склад = &Склад)
	|
	|	) КАК ЗаказыПоставщикам
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК ДокЗаказПереработчику
	|	ПО (ДокЗаказПереработчику.Ссылка = ЗаказыПоставщикам.Распоряжение)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Продукция КАК ТаблицаПродукция
	|	ПО (ТаблицаПродукция.Ссылка = ЗаказыПоставщикам.Распоряжение)
	|		И (ТаблицаПродукция.КодСтроки = ЗаказыПоставщикам.КодСтроки)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Услуги КАК ТаблицаПродукцияУслуги
	|	ПО (ТаблицаПродукцияУслуги.Ссылка = ТаблицаПродукция.Ссылка)
	|		И (ТаблицаПродукцияУслуги.НомерГруппыЗатрат = ТаблицаПродукция.НомерГруппыЗатрат)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.ВозвратныеОтходы КАК ТаблицаОтходы
	|	ПО (ТаблицаОтходы.Ссылка = ЗаказыПоставщикам.Распоряжение)
	|		И (ТаблицаОтходы.КодСтроки = ЗаказыПоставщикам.КодСтроки)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику.Услуги КАК ТаблицаОтходыУслуги
	|	ПО (ТаблицаОтходыУслуги.Ссылка = ТаблицаОтходы.Ссылка)
	|		И (ТаблицаОтходыУслуги.НомерГруппыЗатрат = ТаблицаОтходы.НомерГруппыЗатрат)
	|
	|ГДЕ
	|	(&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ИЛИ ДокЗаказПереработчику.Подразделение = &Подразделение)
	|	И (&Переработчик = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ИЛИ ДокЗаказПереработчику.Партнер = &Переработчик)
	|	И (&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИЛИ ДокЗаказПереработчику.Организация = &Организация)
	|	И (&НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ИЛИ ДокЗаказПереработчику.НаправлениеДеятельности = &НаправлениеДеятельности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРаспоряжения,
	|	НомерРаспоряжения,
	|	ЗаказПереработчику";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаПродукция.Упаковка",
		"ТаблицаПродукция.Номенклатура"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаОтходы.Упаковка",
		"ТаблицаОтходы.Номенклатура"));
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация",   Параметры.Организация);
	Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
	Запрос.УстановитьПараметр("Переработчик",  Параметры.Переработчик);
	Запрос.УстановитьПараметр("Склад",         Параметры.Склад);
	Запрос.УстановитьПараметр("Регистратор",   Параметры.Ссылка);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Параметры.НаправлениеДеятельности);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ДанныеСтроки = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиТоварыВДокумент()
	
	// Снятие модифицированности, т.к. перед закрытием признак проверяется.
	Модифицированность = Ложь;
	
	Закрыть();
	
	ОповеститьОВыборе(Новый Структура("АдресТоваровВХранилище", ПоместитьТоварыВХранилище()));
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиТоварыВДокументИЗакрыть(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПеренестиТоварыВДокумент();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
