#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		Если ТипДанныхЗаполнения = Тип("Структура") Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
			
		ИначеЕсли Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
			
			ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	

	
	УправлениеВнеоборотнымиАктивамиПереопределяемый.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
		
	Если МетодНачисленияАмортизацииБУ <> Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ОС.ОбъемНаработки");
			МассивНепроверяемыхРеквизитов.Добавить("ОС.ПоказательНаработки");		
	КонецЕсли;
	Если НЕ УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата) Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПорядокВключенияСтоимостиВСоставРасходовНУ");
		МассивНепроверяемыхРеквизитов.Добавить("СрокИспользованияНУ");
		
	КонецЕсли;
	ПроверяемыеРеквизитыСтатейРасходов = "";	
	

	Если Не ПередаватьРасходыВДругуюОрганизацию Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОрганизацияПолучательРасходов");
		МассивНепроверяемыхРеквизитов.Добавить("СчетПередачиРасходов");
	КонецЕсли;
	
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(ЭтотОбъект, Сред(ПроверяемыеРеквизитыСтатейРасходов, 3), МассивНепроверяемыхРеквизитов, Отказ);
	
	ПроверитьГрафикАмортизации(Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ТаблицаОС = ЭтотОбъект.ОС.Выгрузить();
	
	Если МетодНачисленияАмортизацииБУ <> Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции Тогда
		ТаблицаОС.ЗаполнитьЗначения(Неопределено, "ПоказательНаработки, ОбъемНаработки");
		
	КонецЕсли;
	
	ЭтотОбъект.ОС.Загрузить(ТаблицаОС);
	
	
	Если НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
		НачислятьАмортизациюНУ = Ложь;	
	КонецЕсли; 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ОчиститьЗаписатьДвижения(Движения, "Хозрасчетный, ПервоначальныеСведенияОСБухгалтерскийУчет");
	
	ТаблицаРеквизитов = ТаблицаРеквизитовДокумента();
	
	УчетОСВызовСервера.ПроверитьВозможностьИзмененияСостоянияОС(
		ЭтотОбъект.ОС.Выгрузить(),
		ТаблицаРеквизитов,
		Отказ);
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ПринятиеКУчетуОС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	Для Каждого ТаблицаДвижений Из ДополнительныеСвойства.ТаблицыДляДвижений Цикл
		ПроведениеСервер.ОтразитьДвижения(ТаблицаДвижений.Значение, Движения[ТаблицаДвижений.Ключ], Отказ);
	КонецЦикла;
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент()
	
	Дата = НачалоДня(ТекущаяДатаСеанса());
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	СчетАмортизации = ПланыСчетов.Хозрасчетный.ИзносОсновныхСредств;
	
	НачислятьАмортизациюБУ = Истина;
	НачислятьАмортизациюНУ = Истина;
	
	Если Не ЗначениеЗаполнено(СобытиеОС) Тогда
		СобытиеОС = УчетОСВызовСервера.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуОснованию(Основание)
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		
		Если Основание.ЭтоГруппа Тогда
			ТекстСообщения = НСтр("ru='Ввод принятия к учету ОС на основании группы ОС невозможен!
            |Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз'
            |;uk='Введення прийняття до обліку ОЗ на підставі групи ОЗ неможливе!
            |Виберіть ОЗ. Для розкриття групи використовуйте клавіші Ctrl і стрілку вниз'");
			ВызватьИсключение(ТекстСообщения);
		КонецЕсли;
		
		НаправлениеДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "НаправлениеДеятельности");
		
		СтрокаТабличнойЧасти = ОС.Добавить();
		
		СтрокаТабличнойЧасти.ОсновноеСредство = Основание;
		СтрокаТабличнойЧасти.ИнвентарныйНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание, "Код");
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.ПоРезультатамИнвентаризации;
		СтоимостьБУ = 0;
		
		Для каждого ТекСтрокаОС Из Основание.ОС Цикл
			Если НЕ ТекСтрокаОС.НаличиеПоДаннымУчета И ТекСтрокаОС.НаличиеФактическое Тогда
				НоваяСтрока = ОС.Добавить();
				НоваяСтрока.ОсновноеСредство = ТекСтрокаОС.ОсновноеСредство;
				НоваяСтрока.ИнвентарныйНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекСтрокаОС.ОсновноеСредство, "Код");
				СтоимостьБУ = СтоимостьБУ + ТекСтрокаОС.СтоимостьФактическая;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	НачислятьАмортизациюБУ = Истина;
	НачислятьАмортизациюНУ = Истина;
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Новый Массив);
	
КонецПроцедуры

Функция ТаблицаРеквизитовДокумента()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Номер,
		|	Реквизиты.Организация,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК СостояниеОС,
		|	""ОС"" КАК ИмяСписка
		|ИЗ
		|	Документ.ПринятиеКУчетуОС КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПроверитьГрафикАмортизации(Отказ)
	
	Если МетодНачисленияАмортизацииБУ = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции
		Или Не ЗначениеЗаполнено(ГрафикАмортизации) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент1,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент2,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент3,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент4,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент5,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент6,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент7,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент8,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент9,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент10,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент11,
		|	ГодовыеГрафикиАмортизацииОС.Коэффициент12
		|ИЗ
		|	Справочник.ГодовыеГрафикиАмортизацииОС КАК ГодовыеГрафикиАмортизацииОС
		|ГДЕ
		|	ГодовыеГрафикиАмортизацииОС.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ГрафикАмортизации);
	Результат = Запрос.Выполнить();
	ВыборкаГрафика = Результат.Выбрать();
	ВыборкаГрафика.Следующий();
	
	СуммаКоэффициентов1 = 0;
	СуммаКоэффициентов2 = 0;
	СуммаКоэффициентов3 = 0;
	
	МесяцНачала = Месяц(Дата);
	МесяцНачала = ?(МесяцНачала=12, 1, МесяцНачала+1);
	МесяцЗавершения = Месяц(ДобавитьМесяц(Дата, СрокИспользованияБУ));
	
	Для МесяцНачисления = 1 По 12 Цикл
		Коэффициент = ВыборкаГрафика["Коэффициент" + МесяцНачисления];
		
		Если МесяцНачисления <= МесяцЗавершения Тогда
			СуммаКоэффициентов3 = СуммаКоэффициентов3 + Коэффициент;
		КонецЕсли;
		
		Если МесяцНачисления >= МесяцНачала Тогда
			СуммаКоэффициентов1 = СуммаКоэффициентов1 + Коэффициент;
		КонецЕсли;
		
		Если МесяцНачисления >= МесяцНачала И МесяцНачисления <= МесяцЗавершения Тогда
			СуммаКоэффициентов2 = СуммаКоэффициентов2 + Коэффициент;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СрокИспользованияБУ<12 Или (Месяц(Дата)+СрокИспользованияБУ)<12 Тогда
		Если СуммаКоэффициентов2=0 Тогда
			
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='График амортизации не содержит коэффицентов распределения, соответствующих заданному периоду эксплуатации ОС.
                |Выберите другой график амортизации или срок полезного использования'
                |;uk='Графік амортизації не містить коэффицентів розподілу, відповідних заданому періоду експлуатації ОЗ.
                |Виберіть інший графік амортизації або строк корисного використання'"),
				ЭтотОбъект,
				"ГрафикАмортизации");
			
		КонецЕсли;
	Иначе
		Если СуммаКоэффициентов1=0 Тогда
			
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='График амортизации не содержит коэффицентов распределения для первого года периода эксплуатации ОС.
                |Выберите другой график амортизации или срок полезного использования'
                |;uk='Графік амортизації не містить коэффицентов розподілу для першого року періоду експлуатації ОЗ.
                |Виберіть інший графік амортизації або строк корисного використання'"),
				ЭтотОбъект,
				"ГрафикАмортизации");
			
		ИначеЕсли СуммаКоэффициентов3=0 Тогда
			
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='График амортизации не содержит коэффицентов распределения для последнего года периода эксплуатации ОС.
                |Выберите другой график амортизации или срок полезного использования'
                |;uk='Графік амортизації не містить коэффицентов розподілу для останнього періоду експлуатації ОЗ.
                |Виберіть інший графік амортизації або строк корисного використання'"),
				ЭтотОбъект,
				"ГрафикАмортизации");
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти

#КонецЕсли
