#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "Сотрудники.Сотрудник");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ПолучитьДанныеДляПроведения();
	
	УчетНДФЛ.СформироватьНалогиВычеты(Движения, Отказ, Организация, КонецМесяца(МесяцПерерасчета), ДанныеДляПроведения.НалогиВычеты);
	УчетНачисленнойЗарплаты.ПодготовитьДанныеНДФЛКРегистрации(ДанныеДляПроведения.РезультатыРасчетаНДФЛ);
	УчетНачисленнойЗарплаты.ЗарегистрироватьНДФЛ(Движения, Отказ, Организация, МесяцПерерасчета, ДанныеДляПроведения.РезультатыРасчетаНДФЛ, ДанныеДляПроведения.МенеджерВременныхТаблиц, Перечисления.ХарактерВыплатыЗарплаты.Зарплата);
	
	ДанныеДляПроведения = ОтражениеЗарплатыВУчете.НоваяСтруктураРезультатыРасчетаЗарплаты();
	ДанныеДляПроведения.НачисленияУдержания = Движения.НачисленияУдержанияПоСотрудникам.Выгрузить();
	СтрокаСписокТаблиц = "НачисленныйНДФЛ";
	ОтражениеЗарплатыВБухучете.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, НачалоМесяца(МесяцПерерасчета), ДанныеДляПроведения, СтрокаСписокТаблиц);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляПроведения()
	
	СписокФизическихЛиц = Неопределено;
	Если ДополнительныеСвойства.Свойство("ФизическиеЛица")
		И ДополнительныеСвойства.ФизическиеЛица.Количество() > 0 Тогда
		
		СписокФизическихЛиц = ДополнительныеСвойства.ФизическиеЛица;
		ОтборПоФизическимЛицам = Истина;
		
	Иначе
		ОтборПоФизическимЛицам = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерерасчетНДФЛСотрудники.Ссылка,
	|	ПерерасчетНДФЛСотрудники.НомерСтроки,
	|	ПерерасчетНДФЛСотрудники.ОбособленноеПодразделение КАК Подразделение,
	|	ПерерасчетНДФЛСотрудники.Сотрудник КАК ФизическоеЛицо,
	|	ПерерасчетНДФЛСотрудники.НалоговыйПериод,
	|   ПерерасчетНДФЛСотрудники.Налог,
	|   ПерерасчетНДФЛСотрудники.Доход,
	|   ПерерасчетНДФЛСотрудники.ВидСтавки,
	|   ПерерасчетНДФЛСотрудники.УвеличеннаяСтавка,
	|   ПерерасчетНДФЛСотрудники.КоличествоЛьгот,
	|   ПерерасчетНДФЛСотрудники.СуммаЛьготы,
	|   ПерерасчетНДФЛСотрудники.КодДохода,
	|   ПерерасчетНДФЛСотрудники.ДоходПолный,
	|   ВЫБОР
	|   	КОГДА НЕ (ВидыДоходов.Ссылка ЕСТЬ NULL)
	|   	ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ВоенныйСбор)
	|   	ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ)
	|   КОНЕЦ КАК ВидУдержания
	|ПОМЕСТИТЬ ВТСтрокиДокумента
	|ИЗ
	|	Документ.ПерерасчетНДФЛ.Сотрудники КАК ПерерасчетНДФЛСотрудники
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   Справочник.ВидыДоходовНДФЛ КАК ВидыДоходов
	|   ПО ВидыДоходов.Ссылка = ПерерасчетНДФЛСотрудники.КодДохода
	|    И ВидыДоходов.ВидСтавкиРезидента = ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДФЛ.ВоенныйСбор)
	|ГДЕ
	|	ПерерасчетНДФЛСотрудники.Ссылка = &Ссылка
	|	И ПерерасчетНДФЛСотрудники.Сотрудник В(&ФизическиеЛица)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиДокумента.Подразделение,
	|	СтрокиДокумента.ФизическоеЛицо,
	|	СтрокиДокумента.НалоговыйПериод,
	|   СтрокиДокумента.Налог,
	|   СтрокиДокумента.Доход,
	|   СтрокиДокумента.ВидСтавки,
	|   СтрокиДокумента.УвеличеннаяСтавка,
	|   СтрокиДокумента.КоличествоЛьгот,
	|   СтрокиДокумента.СуммаЛьготы,
	|   СтрокиДокумента.КодДохода,
	|   СтрокиДокумента.ДоходПолный,
	|   СтрокиДокумента.ВидУдержания
	|ИЗ
	|	ВТСтрокиДокумента КАК СтрокиДокумента
	|ГДЕ
	|	(СтрокиДокумента.Налог <> 0
	|			ИЛИ СтрокиДокумента.Доход <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТСтрокиДокумента КАК Сотрудники
	|ГДЕ
	|	Сотрудники.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|";
	
	Если ОтборПоФизическимЛицам Тогда
		Запрос.УстановитьПараметр("ФизическиеЛица", СписокФизическихЛиц);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПерерасчетНДФЛСотрудники.Сотрудник В(&ФизическиеЛица)", "");
	КонецЕсли;
	
	Результаты = Запрос.ВыполнитьПакет();
	
	
	НалогиВычеты = Результаты[1].Выгрузить();
	РезультатыРасчетаНДФЛ = Результаты[1].Выгрузить();
	
	ДанныеДляПроведения = Новый Структура("НалогиВычеты, РезультатыРасчетаНДФЛ, МенеджерВременныхТаблиц", НалогиВычеты, РезультатыРасчетаНДФЛ, Запрос.МенеджерВременныхТаблиц);
	
	Возврат ДанныеДляПроведения;

КонецФункции

#КонецОбласти

#КонецЕсли
