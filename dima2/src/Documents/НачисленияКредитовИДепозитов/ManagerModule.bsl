#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.НачисленияКредитовИДепозитов) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.НачисленияКредитовИДепозитов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.НачисленияКредитовИДепозитов);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьДоговорыКредитовИДепозитов";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


//++ НЕ УТ
#Область ПроведениеПоРеглУчетуУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
#Область ПроцентыПоКредитам // (Дт 9X :: Кт 684)
	ТекстПроцентыПоКредитамЗаймамПолученным = "
	|ВЫБРАТЬ // Начисление процентов по кредитам полученным (Дт 9X :: Кт 684)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяДоходовРасходов КАК АналитикаУчетаДт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяДоходовРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоНачисленнымПроцентамВНациональнойВалюте)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоНачисленнымПроцентамВИностраннойВалюте) 
	|	КОНЕЦ КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление процентов по кредитам полученным"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачисленияКредитовИДепозитов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.НачисленияКредитовИДепозитов.Начисления КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)
	|	И Строки.ТипСуммыГрафика = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|";
#КонецОбласти

#Область КомиссияПоКредитам // (Дт 9X :: Кт 63)
	ТекстКомиссияПоКредитамЗаймамПолученным = "
	|ВЫБРАТЬ // Комиссия по кредитам полученным (Дт 9X :: Кт 63)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяДоходовРасходов КАК АналитикаУчетаДт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяДоходовРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Комиссия по кредитам полученным"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачисленияКредитовИДепозитов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.НачисленияКредитовИДепозитов.Начисления КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)
	|	И Строки.ТипСуммыГрафика = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|";
#КонецОбласти

#Область ПроцентыПоДепозитам // (Дт 36 :: Кт 7X)
	ТекстПроцентыПоДепозитам = "
	|ВЫБРАТЬ // Начисление процентов по депозитам (Дт 36 :: Кт 7X)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходовРасходов КАК АналитикаУчетаКт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.СтатьяДоходовРасходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление процентов по депозитам"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачисленияКредитовИДепозитов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.НачисленияКредитовИДепозитов.Начисления КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоДепозитам)
	|";
#КонецОбласти

#Область КапитализацияПроцентовПоДепозитам //(Дт 31 :: 36)
	ТекстКапитализацияПроцентовПоДепозитам = "
	|ВЫБРАТЬ // Начисление процентов по депозитам с капитализацией (Дт 31 :: 36)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ВЫБОР КОГДА Строки.СуммаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДругиеСчетаВБанкеВНациональнойВалюте)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДругиеСчетаВБанкеВИностраннойВалюте)
	|	КОНЕЦ КАК СчетДт,
	|	ДанныеДоговора.БанковскийСчетКонтрагента КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДоговора.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Капитализация процентов по депозитам"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачисленияКредитовИДепозитов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.НачисленияКредитовИДепозитов.Начисления КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоДепозитам)
	|	И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией)
	|";
#КонецОбласти

#Область ПроцентыИКомиссияПоЗаймамВыданным //(Дт 36 :: Кт 7X)
	ТекстПроцентыКомиссияПоЗаймамВыданным = "
	|ВЫБРАТЬ // Начисление процентов и комиссии по займам выданным (Дт 36 :: Кт 7X)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Строки.СтатьяДоходовРасходов КАК АналитикаУчетаКт,
	|	ДанныеДоговора.Подразделение КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.СтатьяДоходовРасходов КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление процентов и комиссии по займам выданным"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.НачисленияКредитовИДепозитов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.НачисленияКредитовИДепозитов.Начисления КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО 
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|";
#КонецОбласти
	
	Возврат ТекстПроцентыПоКредитамЗаймамПолученным
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКомиссияПоКредитамЗаймамПолученным
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПроцентыПоДепозитам
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКапитализацияПроцентовПоДепозитам
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПроцентыКомиссияПоЗаймамВыданным
	;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТексЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                  КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация           КАК Организация,
	|	ДанныеДокумента.ДатаНачала            КАК ДатаНачала,
	|	ДанныеДокумента.ДатаОкончания         КАК ДатаОкончания
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",           Реквизиты.Организация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", 
	                                                   ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("ВалютаУпр",             Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегл",            Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаНачала",            Реквизиты.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",         Реквизиты.ДатаОкончания);
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                                           КАК Организация,
	|	ТаблицаНачислений.Партнер                              КАК Партнер,
	|	ТаблицаНачислений.Контрагент                           КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачислений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|		ПО ТаблицаНачислений.Договор = ДанныеДоговора.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО (&Организация = Аналитика.Организация)
	|			И ТаблицаНачислений.Контрагент = Аналитика.Контрагент
	|			И ТаблицаНачислений.Партнер = Аналитика.Партнер
	|			И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И ДанныеДоговора.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаНачислений.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL ";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);

	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют"; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КурсыВалют.Период    КАК Период,
	|	КурсыВалют.Валюта    КАК Валюта,
	|	КурсыВалют.Курс      КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаНачала, ) КАК КурсыВалют
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДатыКурсовВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДатыКурсовВалют"; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНачисления.Дата                 КАК Дата,
	|	ТаблицаНачисления.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(КурсыВалют.Период)            КАК ДатаКурсаВалюты,
	|	МАКСИМУМ(КурсыВалютыУпр.Период)        КАК ДатаКурсаУпр,
	|	МАКСИМУМ(КурсыВалютыРегл.Период)       КАК ДатаКурсаРегл
	|ПОМЕСТИТЬ ВтДатыКурсовВалют
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалют
	|	ПО ТаблицаНачисления.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|		И ТаблицаНачисления.Дата >= КурсыВалют.Период
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютыУпр
	|	ПО (&ВалютаУпр = КурсыВалютыУпр.Валюта)
	|		И ТаблицаНачисления.Дата >= КурсыВалютыУпр.Период
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютыРегл
	|	ПО (&ВалютаРегл = КурсыВалютыРегл.Валюта)
	|		И ТаблицаНачисления.Дата >= КурсыВалютыРегл.Период
	|ГДЕ
	|	ТаблицаНачисления.Ссылка = &Ссылка
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачисления.ВалютаВзаиморасчетов,
	|	ТаблицаНачисления.Дата";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаНачисления"; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДатыКурсовВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДатыКурсовВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаНачисления.НомерСтроки           КАК НомерСтроки,
	|	ТаблицаНачисления.Дата                  КАК Дата,
	|	ТаблицаНачисления.Партнер               КАК Партнер,
	|	ТаблицаНачисления.Контрагент            КАК Контрагент,
	|	ТаблицаНачисления.Договор               КАК Договор,
	|	ТаблицаНачисления.Договор.Подразделение КАК Подразделение,
	|	ТаблицаНачисления.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаНачисления.ТипСуммыГрафика       КАК ТипСуммыГрафика,
	|	ТаблицаНачисления.ВалютаВзаиморасчетов  КАК ВалютаВзаиморасчетов,
	|	ТаблицаНачисления.СуммаВзаиморасчетов   КАК СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ТаблицаНачисления.СуммаВзаиморасчетов * КурсыВалют.Курс * КурсыВалютыУпр.Кратность / (КурсыВалют.Кратность * КурсыВалютыУпр.Курс) КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ(ТаблицаНачисления.СуммаВзаиморасчетов * КурсыВалют.Курс * КурсыВалютыРегл.Кратность / (КурсыВалют.Кратность * КурсыВалютыРегл.Курс) КАК ЧИСЛО(15, 2)) КАК СуммаРегл
	|ПОМЕСТИТЬ ВтТаблицаНачисления
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтДатыКурсовВалют КАК ДатыКурсовВалют
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалют
	|			ПО ДатыКурсовВалют.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|				И ДатыКурсовВалют.ДатаКурсаВалюты = КурсыВалют.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютыУпр
	|			ПО (&ВалютаУпр = КурсыВалютыУпр.Валюта)
	|				И ДатыКурсовВалют.ДатаКурсаУпр = КурсыВалютыУпр.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютыРегл
	|			ПО (&ВалютаРегл = КурсыВалютыРегл.Валюта)
	|				И ДатыКурсовВалют.ДатаКурсаРегл = КурсыВалютыРегл.Период
	|		ПО ТаблицаНачисления.ВалютаВзаиморасчетов = ДатыКурсовВалют.ВалютаВзаиморасчетов
	|			И ТаблицаНачисления.Дата = ДатыКурсовВалют.Дата
	|ГДЕ
	|	ТаблицаНачисления.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы"; 
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДоходы.Дата                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаДоходы.Подразделение            КАК Подразделение,
	|	ТаблицаДоходы.СтатьяДоходовРасходов    КАК СтатьяДоходов,
	|	ТаблицаДоходы.Договор                  КАК АналитикаДоходов,
	|	ТаблицаДоходы.ВалютаВзаиморасчетов     КАК Валюта,
	|	ТаблицаДоходы.СуммаУпр                 КАК Сумма,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаНачисления КАК ТаблицаДоходы
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоДепозитам), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|	)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы"; 
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРасходы.Дата                    КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаРасходы.Подразделение           КАК Подразделение,
	|	ТаблицаРасходы.СтатьяДоходовРасходов   КАК СтатьяРасходов,
	|	ТаблицаРасходы.Договор                 КАК АналитикаРасходов,
	|	ТаблицаРасходы.ВалютаВзаиморасчетов    КАК Валюта,
	|	ТаблицаРасходы.СуммаУпр                КАК Сумма,
	//++ НЕ УТ
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяДоходовРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		ТаблицаРасходы.СуммаУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                  КАК СуммаБезНДС,
	|
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяДоходовРасходов.ВариантРаспределенияРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) ТОГДА
	|		ТаблицаРасходы.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                  КАК СуммаРегл,
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяДоходовРасходов.ВариантРаспределенияРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) ТОГДА
	|		ТаблицаРасходы.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                  КАК СуммаРеглБезНДС,
	|	0                                      КАК НДСРегл,
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяДоходовРасходов.ВариантРаспределенияРасходов В
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)) ТОГДА
	|		&НалоговоеНазначениеОрганизации
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
	|	КОНЕЦ                                  КАК НалоговоеНазначение,
	|	0                                   	КАК ПостояннаяРазница,
	|	0                                       КАК ВременнаяРазница,
	//-- НЕ УТ
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаНачисления КАК ТаблицаРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)
	|	И ТаблицаРасходы.СтатьяДоходовРасходов.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТексЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоДоговорамКредитовИДепозитов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаНачислений.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                                           КАК ВидДвижения,
	|	ТаблицаНачислений.Дата                                          КАК Период,
	|	&Организация                                                    КАК Организация,
	|	ТаблицаНачислений.Партнер                                       КАК Партнер,
	|	ТаблицаНачислений.Контрагент                                    КАК Контрагент,
	|	ЕСТЬNULL(АналитикаПоПартнерам.КлючАналитики, НЕОПРЕДЕЛЕНО)      КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаНачислений.Договор                                       КАК Договор,
	|	ТаблицаНачислений.ВалютаВзаиморасчетов                          КАК Валюта,
	|	ТаблицаНачислений.СтатьяДоходовРасходов                         КАК СтатьяДоходовРасходов,
	|	ТаблицаНачислений.СтатьяДоходовРасходов                         КАК СтатьяАналитики,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Начисления) КАК ТипГрафика,
	|	ТаблицаНачислений.ТипСуммыГрафика                               КАК ТипСуммы,
	|	ТаблицаНачислений.СуммаВзаиморасчетов                           КАК СуммаВВалюте,
	|	ТаблицаНачислений.СуммаУпр                                      КАК СуммаУпр,
	|	ТаблицаНачислений.СуммаРегл                                     КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаНачисления КАК ТаблицаНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО (&Организация = АналитикаПоПартнерам.Организация)
	|			И ТаблицаНачислений.Партнер = АналитикаПоПартнерам.Партнер
	|			И ТаблицаНачислений.Контрагент = АналитикаПоПартнерам.Контрагент
	|			И АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			И АналитикаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНачисления.Дата                              КАК Период,
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	&Организация                                        КАК Организация,
	|	ТаблицаНачисления.Договор.Подразделение             КАК Подразделение,
	|
	|	ТаблицаНачисления.Договор                           КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Депозиты) КАК ТипДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО                                        КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаНачисления.ВалютаВзаиморасчетов              КАК Валюта,
	|
	|	ТаблицаНачисления.СтатьяДоходовРасходов             КАК СтатьяДоходовРасходов,
	|	ТаблицаНачисления.Договор                           КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                        КАК АналитикаРасходов,
	|
	|	ТаблицаНачисления.СуммаУпр                          КАК Сумма,
	|	ТаблицаНачисления.СуммаРегл                         КАК СуммаРегл,
	|	ТаблицаНачисления.СуммаВзаиморасчетов               КАК СуммаВВалюте,
	|
	|	ТаблицаНачисления.Договор                           КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаНачисления.СтатьяДоходовРасходов             КАК ИсточникГФУДоходовРасходов
	|ИЗ
	|	ВтТаблицаНачисления КАК ТаблицаНачисления
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоДепозитам)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли; 

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки          КАК НомерСтроки,
	|	ТаблицаДокумента.Дата                 КАК Период,
	|	ТаблицаДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ВтНачисления.СуммаУпр                 КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                          КАК СтавкаНДС,
	|	0                                     КАК СуммаНДС,
	|	ВтНачисления.СуммаРегл                КАК СуммаБезНДСРегл,
	|	0                                     КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                          КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.НачисленияКредитовИДепозитов.Начисления КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаНачисления КАК ВтНачисления
	|		ПО ТаблицаДокумента.НомерСтроки = ВтНачисления.НомерСтроки
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ВалютаВзаиморасчетов <> &ВалютаРегл";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
#Область НачисленияПоЗаймамВыданным
	НачисленияПоЗаймамВыданным = 
	"ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	&Организация                        КАК Организация,
	|	ТаблицаДоходы.Договор.Подразделение КАК Подразделение,
	|
	|	ТаблицаДоходы.Партнер               КАК Партнер,
	|	ТаблицаДоходы.Контрагент            КАК Контрагент,
	|	ТаблицаДоходы.Договор               КАК Договор,
	|	НЕОПРЕДЕЛЕНО                        КАК ОбъектРасчетов,
	|
	|	ТаблицаДоходы.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаДоходы.Договор               КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                        КАК АналитикаРасходов,
	|	
	|	ТаблицаДоходы.СуммаУпр              КАК Сумма,
	|	0                                   КАК СуммаБезНДС,
	|	ТаблицаДоходы.СуммаРегл             КАК СуммаРегл,
	|	0                                   КАК СуммаРеглБезНДС,
	|
	|	ТаблицаДоходы.ВалютаВзаиморасчетов  КАК Валюта,
	|	ТаблицаДоходы.СуммаВзаиморасчетов   КАК СуммаВВалюте,
	|	0                                   КАК СуммаБезНДСВВалюте,
	|		
	|	ТаблицаДоходы.ВалютаВзаиморасчетов  КАК ВалютаВзаиморасчетов,
	|	ТаблицаДоходы.СуммаВзаиморасчетов   КАК СуммаВВалютеВзаиморасчетов,
	|	0                                   КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаДоходы.Договор               КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаНачисления КАК ТаблицаДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|";
#КонецОбласти

#Область НачисленияПоКредитам
	НачисленияПоКредитам = 
	"ВЫБРАТЬ
	|	&Период                              КАК Период,
	|	&ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	&Организация                         КАК Организация,
	|	ТаблицаРасходы.Договор.Подразделение КАК Подразделение,
	|
	|	ТаблицаРасходы.Партнер               КАК Партнер,
	|	ТаблицаРасходы.Контрагент            КАК Контрагент,
	|	ТаблицаРасходы.Договор               КАК Договор,
	|	НЕОПРЕДЕЛЕНО                         КАК ОбъектРасчетов,
	|
	|	ТаблицаРасходы.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО                         КАК АналитикаДоходов,
	|	ТаблицаРасходы.Договор               КАК АналитикаРасходов,
	|	
	|	ТаблицаРасходы.СуммаУпр              КАК Сумма,
	|	0                                    КАК СуммаБезНДС,
	|	ТаблицаРасходы.СуммаРегл             КАК СуммаРегл,
	|	0                                    КАК СуммаРеглБезНДС,
	|
	|	ТаблицаРасходы.ВалютаВзаиморасчетов  КАК Валюта,
	|	ТаблицаРасходы.СуммаВзаиморасчетов   КАК СуммаВВалюте,
	|	0                                    КАК СуммаБезНДСВВалюте,
	|		
	|	ТаблицаРасходы.ВалютаВзаиморасчетов  КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасходы.СуммаВзаиморасчетов   КАК СуммаВВалютеВзаиморасчетов,
	|	0                                    КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаРасходы.Договор               КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаНачисления КАК ТаблицаРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам)";
#КонецОбласти

	ТекстЗапроса = НачисленияПоЗаймамВыданным
	             + " ОБЪЕДИНИТЬ ВСЕ " + НачисленияПоКредитам;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//++ НЕ УТ
Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаНачисления", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаНачисления(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ТаблицаПеридов.Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Таблица.Дата КАК Период
	|	ИЗ
	|		ВтТаблицаНачисления КАК Таблица
	|
	|	) КАК ТаблицаПеридов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

#КонецОбласти

#КонецОбласти

#КонецЕсли