
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Организация, Ответственный", 
		"Объект.Месяц",
		"Объект.Организация",
		"Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			ПрочитатьЛьготыПредыдущегоМесяца();
		КонецЕсли; 
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	Если Параметры.ИзФормыСотрудника Тогда
		Элементы.Организация.ТолькоПросмотр		= Истина;
		Элементы.ФизическоеЛицо.ТолькоПросмотр	= Истина;
	КонецЕсли;
	
	УчетНДФЛФормыВнутренний.УстановитьПараметрыВыбораСотрудниковВДокументахПредоставленияЛьгот(ЭтаФорма, "ФизическоеЛицо");
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Сообщения = ПолучитьСообщенияПользователю(Ложь);
	Для Каждого Сообщение Из Сообщения Цикл
		Если Сообщение.Поле = "Месяц" Тогда
			Сообщение.Поле			= "";
			Сообщение.ПутьКДанным	= "МесяцСтрокой";
		КонецЕсли;
		
		Отказ = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьОписаниеЛьготНаДетей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзмененыЛьготы", Объект.Сотрудник, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	
	ПрочитатьЛьготыПредыдущегоМесяца();
	
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Модифицированность);
	
	ПрочитатьЛьготыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт 
	
	ПрочитатьЛьготыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой", Направление, Модифицированность);
	
	ПрочитатьЛьготыПредыдущегоМесяца();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
	ПрочитатьЛьготыПредыдущегоМесяца();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.Месяц", "МесяцСтрокой");
	
	ОбновитьОписаниеЛьготНаДетей();
	
	ПрочитатьЛьготыПредыдущегоМесяца();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеЛьготНаДетей()
	
	Для Каждого Строка Из ЛьготыНаДетей Цикл
		Строка.ЛьготаИнфо = УчетНДФЛВызовСервера.ПолучитьОписаниеЛьготы(Строка.Льгота);
	КонецЦикла;
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(ЛьготыНаДетей, "ДействуетДо", "ДействуетДоСтрокой");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеЛичныхЛьгот()
	
	Для Каждого Строка Из ЛичныеЛьготы Цикл
		Строка.ЛьготаИнфо = УчетНДФЛВызовСервера.ПолучитьОписаниеЛьготы(Строка.Льгота);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЛьготыПредыдущегоМесяца()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Месяц",			Объект.Месяц);
	Запрос.УстановитьПараметр("ФизическоеЛицо",	Объект.Сотрудник);
	Запрос.УстановитьПараметр("Ссылка",			Объект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛьготыФизическихЛицНДФЛСрезПоследних.Льгота
	|ИЗ
	|	РегистрСведений.ЛьготыФизическихЛицНДФЛ.СрезПоследних(
	|			&Месяц,
	|			Регистратор <> &Ссылка
	|				И ФизическоеЛицо = &ФизическоеЛицо) КАК ЛьготыФизическихЛицНДФЛСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЛичныеЛьготы.Очистить();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЛичныеЛьготы.Добавить(), Выборка);
	КонецЦикла;
	
	ОбновитьОписаниеЛичныхЛьгот();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЛьготыНаДетейНДФЛ.Льгота,
	|	ЛьготыНаДетейНДФЛ.ДействуетДо КАК ДействуетДо,
	|	ЛьготыНаДетейНДФЛ.КоличествоДетей
	|ИЗ
	|	РегистрСведений.ЛьготыНаДетейНДФЛ КАК ЛьготыНаДетейНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ЛьготыНаДетейНДФЛ.МесяцРегистрации) КАК МесяцРегистрации
	|		ИЗ
	|			РегистрСведений.ЛьготыНаДетейНДФЛ КАК ЛьготыНаДетейНДФЛ
	|		ГДЕ
	|			ЛьготыНаДетейНДФЛ.МесяцРегистрации < &Месяц
	|			И ЛьготыНаДетейНДФЛ.ФизическоеЛицо = &ФизическоеЛицо) КАК ВложенныйЗапрос
	|		ПО ЛьготыНаДетейНДФЛ.МесяцРегистрации = ВложенныйЗапрос.МесяцРегистрации
	|			И (ЛьготыНаДетейНДФЛ.ФизическоеЛицо = &ФизическоеЛицо)
	|ГДЕ
	|	ЛьготыНаДетейНДФЛ.КоличествоДетей > 0
	|	И ЛьготыНаДетейНДФЛ.ДействуетДо >= &Месяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЛьготыНаДетейНДФЛ.Льгота.Код,
	|	ДействуетДо";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЛьготыНаДетей.Очистить();
	Пока Выборка.Следующий() Цикл
		Для Номер = 1 По Выборка.КоличествоДетей Цикл
			ЗаполнитьЗначенияСвойств(ЛьготыНаДетей.Добавить(), Выборка);
		КонецЦикла;
	КонецЦикла;
	
	ОбновитьОписаниеЛьготНаДетей();
	УстановитьИнформационнуюНадписьОВозможностиПроведения();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнформационнуюНадписьОВозможностиПроведения()
	
	ИнформацияОВозможностиПроведения = "";
	
	Запрос = Документы.ПрекращениеЛьготПоНДФЛ.КонфликтующиеРегистраторы(
		Объект.Ссылка, Объект.Месяц, Объект.Сотрудник);
		
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
			НСтр("ru='Документ не может быть проведен. На';uk='Документ не може бути проведений. На'") + " ",
			НРег(Формат(Объект.Месяц, "ДФ='ММММ гггг'")) + " ",
			НСтр("ru='уже введено заявление';uk='вже введено заяву'")
		);
			
		Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПрекращениеЛьготПоНДФЛ") Тогда
			
			ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
				ИнформацияОВозможностиПроведения,
				" " + НСтр("ru='о прекращении льгот';uk='про припинення пільг'"),
				" (",
				Новый ФорматированнаяСтрока(Выборка.РегистраторПредставление, , , , ПолучитьНавигационнуюСсылку(Выборка.Регистратор)),
				")"
			);
			
		Иначе
			
			ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
				ИнформацияОВозможностиПроведения,
				" " + НСтр("ru='на льготы';uk='на пільги'")
			);
			
			ОрганизацияРегистратора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.Регистратор, "Организация");
			Если Объект.Организация = ОрганизацияРегистратора Тогда

				ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
					ИнформацияОВозможностиПроведения,
					" (",
					Новый ФорматированнаяСтрока(Выборка.РегистраторПредставление, , , , ПолучитьНавигационнуюСсылку(Выборка.Регистратор)),
					")"
				);
				
			Иначе
				
				ИнформацияОВозможностиПроведения = Новый ФорматированнаяСтрока(
					ИнформацияОВозможностиПроведения,
					" " + НСтр("ru='в другой организации';uk='в іншій організації'"),
					" (",
					Новый ФорматированнаяСтрока(Выборка.РегистраторПредставление, , , , ПолучитьНавигационнуюСсылку(Выборка.Регистратор)),
					")"
				);
				
			КонецЕсли;
			
		КонецЕсли; 
		
		
	КонецЕсли; 
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИнформацияОВозможностиПроведения",
		"Заголовок",
		ИнформацияОВозможностиПроведения
	);
	
КонецПроцедуры

#КонецОбласти
