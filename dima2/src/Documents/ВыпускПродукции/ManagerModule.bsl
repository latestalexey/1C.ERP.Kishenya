#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ПриходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Документы.СписаниеЗатратНаВыпуск.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВыпускПродукции.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ВыпускПродукции);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//++ НЕ УТКА
Функция ДобавитьКомандуСоздатьНаОснованииМаршрутныхЛистов(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьНаОснованииМаршрутныхЛистов";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииМаршрутныхЛистов";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Выпуск продукции и выполнение работ';uk='Випуск продукції і виконання робіт'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииЗаказаДавальца(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВыпускПродукции.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Выпуск без заказа на производство';uk='Випуск без замовлення на виробництво'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.РежимИспользованияПараметра = РежимИспользованияПараметраКоманды.Множественный;
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
//-- НЕ УТКА

Функция ДобавитьКомандуСоздатьНаОснованииЗаказаКлиента(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВыпускПродукции.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Выпуск продукции';uk='Випуск продукції'");
		//++ НЕ УТКА
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Выпуск без заказа на производство';uk='Випуск без замовлення на виробництво'");
		//-- НЕ УТКА
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Заполняет массивы элементов формы, зависимых от способа оформления документа.
//
// Параметры:
//	ВыпускПоРаспоряжениям - Булево - Способ оформления документа
//	МассивВсехЭлементов - Массив - Массив всех элементов, зависимых от способа оформления
//	МассивЭлементовСпособа - Массив - Массив элементов способа
//
Процедура ЗаполнитьИменаРеквизитовПоРаспоряжениям(ВыпускПоРаспоряжениям, МассивВсехЭлементов, МассивЭлементовСпособа) Экспорт
	
	МассивВсехЭлементов = Новый Массив;
	МассивВсехЭлементов.Добавить("НалоговоеНазначение");
	МассивВсехЭлементов.Добавить("Товары.Спецификация");
	МассивВсехЭлементов.Добавить("Товары.Распоряжение");
	МассивВсехЭлементов.Добавить("Товары.КодСтроки");
	МассивВсехЭлементов.Добавить("ТоварыДополнитьПобочнымиВыходнымиИзделиями");
	МассивВсехЭлементов.Добавить("ТоварыПодобратьИзРаспоряжения");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьПоРаспоряжениям");
	
	МассивВсехЭлементов.Добавить("ТоварыСкопироватьСтроки");
	МассивВсехЭлементов.Добавить("ТоварыВставитьСтроки");
	
	МассивВсехЭлементов.Добавить("ТоварыКонтекстноеМенюСкопироватьСтроки");
	МассивВсехЭлементов.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	
	МассивВсехЭлементов.Добавить("ТоварыИзменитьКачество");
	
	МассивЭлементовСпособа = Новый Массив;
	
	Если ВыпускПоРаспоряжениям Тогда
		МассивЭлементовСпособа.Добавить("Товары.Распоряжение");
		МассивЭлементовСпособа.Добавить("Товары.КодСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыПодобратьИзРаспоряжения");
		МассивЭлементовСпособа.Добавить("ТоварыЗаполнитьПоРаспоряжениям");
	Иначе
		МассивЭлементовСпособа.Добавить("Товары.Спецификация");
		МассивЭлементовСпособа.Добавить("НалоговоеНазначение");
		МассивЭлементовСпособа.Добавить("ТоварыДополнитьПобочнымиВыходнымиИзделиями");
		МассивЭлементовСпособа.Добавить("ТоварыСкопироватьСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыВставитьСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыИзменитьКачество");
		МассивЭлементовСпособа.Добавить("ТоварыКонтекстноеМенюСкопироватьСтроки");
		МассивЭлементовСпособа.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет массивы элементов формы, зависимых от направления выпуска.
//
// Параметры:
//	НаправлениеВыпуска - ПеречислениеСсылка.ХозяйственныеОперации - Операция документа
//	МассивВсехЭлементов - Массив - Массив всех элементов, зависимых от операции
//	МассивЭлементовСпособа - Массив - Массив элементов операции
//
Процедура ЗаполнитьИменаРеквизитовПоНаправлениюВыпуска(НаправлениеВыпуска, МассивВсехЭлементов, МассивЭлементовСпособа) Экспорт
	
	МассивВсехЭлементов = Новый Массив;
	МассивВсехЭлементов.Добавить("Склад");
	МассивВсехЭлементов.Добавить("Товары.Склад");
	МассивВсехЭлементов.Добавить("Товары.Подразделение");
	МассивВсехЭлементов.Добавить("Товары.СтатьяРасходов");
	МассивВсехЭлементов.Добавить("Товары.АналитикаРасходов");
	МассивВсехЭлементов.Добавить("Товары.СписатьНаРасходы");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьПодразделение");
	
	МассивЭлементовСпособа = Новый Массив;
	
	Если НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад Тогда
		МассивЭлементовСпособа.Добавить("Склад");
		МассивЭлементовСпособа.Добавить("Товары.Склад");
	Иначе
		МассивЭлементовСпособа.Добавить("ТоварыЗаполнитьПодразделение");
		МассивЭлементовСпособа.Добавить("Товары.Подразделение");
		МассивЭлементовСпособа.Добавить("Товары.СписатьНаРасходы");
		МассивЭлементовСпособа.Добавить("Товары.АналитикаРасходов");
		МассивЭлементовСпособа.Добавить("Товары.СтатьяРасходов");
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТКА

// Заполняет таблицу товаров по данным отбора или массиву распоряжений
//
// Параметры:
// ДанныеОтбора    		- Структура - поля, по которым будут отобраны остатки для заполнения документа
// Товары          		- ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки
// МассивРаспоряжений   - Массив - распоряжения, по которым будут отобраны остатки
// ЗаполнятьНаДату 		- Булево - указывает на необходимость заполнения по остаткам на дату, переданную в качестве поля в ДанныеОтбора
// ДанныеРаспоряжений	- Массив - содержит массив структур (Распоряжение, КодСтроки)
//
Процедура ЗаполнитьПоОстаткамРаспоряжений(ДанныеОтбора, Товары, МассивРаспоряжений=Неопределено, ЗаполнятьНаДату=Истина, ДанныеРаспоряжений = Неопределено) Экспорт
	
	ДатаЗаполнения = ?(ЗаполнятьНаДату, ДанныеОтбора.Дата, Неопределено);
	
	Результат = РезультатЗапросаПоРаспоряжениямНаВыпускПродукции(
		ДанныеОтбора,
		ДатаЗаполнения,
		МассивРаспоряжений);
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ДанныеРаспоряжений <> Неопределено Тогда
			// Нужно проверить, что строка входит в данные распоряжений
			ДобавитьСтроку = Ложь;
			Для каждого СтруктураРаспоряжения Из ДанныеРаспоряжений Цикл
				Если СтруктураРаспоряжения.Распоряжение = Выборка.Распоряжение
					И (НЕ СтруктураРаспоряжения.Свойство("КодСтроки")
						ИЛИ СтруктураРаспоряжения.КодСтроки = Выборка.КодСтроки) Тогда
					ДобавитьСтроку = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если НЕ ДобавитьСтроку Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаТоваров = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, Выборка);
		
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("ТипСтоимости", Перечисления.ТипыСтоимостиВыходныхИзделий.Фиксированная);
	НайденныеСтроки = Товары.НайтиСтроки(СтруктураОтбора);
	
	Если ДанныеОтбора.Свойство("ВидЦены") И ЗначениеЗаполнено(ДанныеОтбора.ВидЦены) И НайденныеСтроки.Количество() > 0 Тогда
		ПродажиСервер.ЗаполнитьЦены(
			Товары, // Табличная часть
			НайденныеСтроки, // Массив строк или структура отбора
			Новый Структура( // Параметры заполнения
				"Дата, Валюта, ВидЦены",
				ДатаЗаполнения,
				Константы.ВалютаУправленческогоУчета.Получить(),
				ДанныеОтбора.ВидЦены),
			Новый Структура( // Структура действий с измененными строками
				"ПересчитатьСумму",
				"КоличествоУпаковок"));
	КонецЕсли;

КонецПроцедуры

// Формирует результат запроса по невыполненной части распоряжений
//
// Параметры:
// ДанныеОтбора     	- Структура - поля, по которым будут отобраны остатки
// Дата             	- Дата - дата, на которую будут отобраны остатки
// МассивРаспоряжений	- Массив - распоряжения, по которым будут отобраны остатки
//
// Вовращаемое значение:
// Результат запроса - результат запроса по невыполненной части заказов
//
Функция РезультатЗапросаПоРаспоряжениямНаВыпускПродукции(ДанныеОтбора, Дата, МассивРаспоряжений) Экспорт
	
	МассивРабочихЦентров      = Новый Массив;
	МассивВидовРабочихЦентров = Новый Массив;
		
	Если ДанныеОтбора.Свойство("РабочийЦентр") Тогда
		
		ПараметрыПодразделения = ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(ДанныеОтбора.Подразделение);
		УправлениеМаршрутнымиЛистами = ПараметрыПодразделения.УправлениеМаршрутнымиЛистами;
		
		Если УправлениеМаршрутнымиЛистами = Перечисления.УправлениеМаршрутнымиЛистами.МетодикаББВ Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РабочиеЦентры.ВидРабочегоЦентра
			|ИЗ
			|	Справочник.РабочиеЦентры КАК РабочиеЦентры
			|ГДЕ
			|	РабочиеЦентры.Ссылка В ИЕРАРХИИ(&РабочийЦентр)";
			Запрос.УстановитьПараметр("РабочийЦентр", ДанныеОтбора.РабочийЦентр);
			
			МассивВидовРабочихЦентров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ВидРабочегоЦентра");
		Иначе	
			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РабочиеЦентры.Ссылка
			|ИЗ
			|	Справочник.РабочиеЦентры КАК РабочиеЦентры
			|ГДЕ
			|	РабочиеЦентры.Ссылка В ИЕРАРХИИ(&РабочийЦентр)";
			Запрос.УстановитьПараметр("РабочийЦентр", ДанныеОтбора.РабочийЦентр);
			
			МассивРабочихЦентров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		КонецЕсли;
		
	КонецЕсли;
	
	Склад = ?(ДанныеОтбора.Свойство("Склад"), ДанныеОтбора.Склад, Справочники.Склады.ПустаяСсылка());
	
	ПодразделениеПолучатель = ?(ДанныеОтбора.Свойство("ПодразделениеПолучатель"), 
									ДанныеОтбора.ПодразделениеПолучатель, 
									Справочники.СтруктураПредприятия.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор",             ?(ДанныеОтбора.Свойство("Ссылка"), ДанныеОтбора.Ссылка, Неопределено));
	Запрос.УстановитьПараметр("Организация",             ?(ДанныеОтбора.Свойство("Организация"), ДанныеОтбора.Организация, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоОрганизации",   ?(ДанныеОтбора.Свойство("Организация"), Истина, Ложь));
	Запрос.УстановитьПараметр("Подразделение",           ?(ДанныеОтбора.Свойство("Подразделение"), ДанныеОтбора.Подразделение, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоПодразделению", ?(ДанныеОтбора.Свойство("Подразделение"), Истина, Ложь));
	Запрос.УстановитьПараметр("Склад",                   Склад);
	Запрос.УстановитьПараметр("ОтобратьПоСкладу",        ЗначениеЗаполнено(Склад));
	Запрос.УстановитьПараметр("ПодразделениеПолучатель", ПодразделениеПолучатель);
	Запрос.УстановитьПараметр("СкладГруппа",             ?(ЗначениеЗаполнено(Склад), Справочники.Склады.ЭтоГруппа(Склад), Ложь));
	Запрос.УстановитьПараметр("Направление",             ?(ДанныеОтбора.Свойство("НаправлениеВыпуска"), ДанныеОтбора.НаправлениеВыпуска, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоНаправлению",   ?(ДанныеОтбора.Свойство("НаправлениеВыпуска"), Истина, Ложь));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           ?(ДанныеОтбора.Свойство("НаправлениеДеятельности"), ДанныеОтбора.НаправлениеДеятельности, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоНаправлениюДеятельности", ?(ДанныеОтбора.Свойство("НаправлениеДеятельности"), Истина, Ложь));

	Запрос.УстановитьПараметр("МассивРаспоряжений",      МассивРаспоряжений);
	Запрос.УстановитьПараметр("ОтобратьПоРаспоряжению",  МассивРаспоряжений <> Неопределено);
	
	Запрос.УстановитьПараметр("МассивРабочихЦентров",      МассивРабочихЦентров);
	Запрос.УстановитьПараметр("БезОтбораПоРабочемуЦентру", МассивРабочихЦентров.Количество() = 0);
	
	Запрос.УстановитьПараметр("МассивВидовРабочихЦентров",     МассивВидовРабочихЦентров);
	Запрос.УстановитьПараметр("БезОтбораПоВидуРабочихЦентров", МассивВидовРабочихЦентров.Количество() = 0);
	
	Запрос.УстановитьПараметр("МассивТиповНоменклатуры",    ?(ДанныеОтбора.Свойство("МассивТиповНоменлатуры"), ДанныеОтбора.МассивТиповНоменлатуры, Неопределено));
	Запрос.УстановитьПараметр("ОтобратьПоТипуНоменклатуры", ?(ДанныеОтбора.Свойство("МассивТиповНоменлатуры"), Истина, Ложь));
	
	Если Дата <> Неопределено И Дата <> '00010101' Тогда
		
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ГраницаПериод", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		
	Иначе
		
		Запрос.УстановитьПараметр("Период", '00010101');
		Запрос.УстановитьПараметр("ГраницаПериод", Неопределено);
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Заказы.Ссылка КАК Заказ,
	|	Заказы.КодСтроки КАК КодСтроки
	|ПОМЕСТИТЬ ВТЗаказыОтбор
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Заказы
	|ГДЕ
	|	(НЕ &ОтобратьПоРаспоряжению
	|			ИЛИ Заказы.Ссылка В (&МассивРаспоряжений))
	|	И (НЕ &ОтобратьПоПодразделению
	|			ИЛИ Заказы.Ссылка.Подразделение = &Подразделение)
	|	И (НЕ &ОтобратьПоОрганизации
	|			ИЛИ Заказы.Ссылка.Организация = &Организация)
	|	И (НЕ &ОтобратьПоНаправлению
	|			ИЛИ &Направление = ВЫБОР
	|				КОГДА Заказы.Получатель ССЫЛКА Справочник.Склады
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			КОНЕЦ)
	|	И (НЕ &ОтобратьПоСкладу
	|			ИЛИ Заказы.Получатель = &Склад
	|				И НЕ &СкладГруппа
	|			ИЛИ Заказы.Получатель В ИЕРАРХИИ (&Склад)
	|				И &СкладГруппа)
	|	И (НЕ &ОтобратьПоНаправлениюДеятельности
	|			ИЛИ Заказы.Ссылка.Распоряжение.НаправлениеДеятельности = &НаправлениеДеятельности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Заказы.Ссылка,
	|	Заказы.КодСтроки
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВозвратныеОтходы КАК Заказы
	|ГДЕ
	|	(НЕ &ОтобратьПоРаспоряжению
	|			ИЛИ Заказы.Ссылка В (&МассивРаспоряжений))
	|	И (НЕ &ОтобратьПоПодразделению
	|			ИЛИ Заказы.Ссылка.Подразделение = &Подразделение)
	|	И (НЕ &ОтобратьПоОрганизации
	|			ИЛИ Заказы.Ссылка.Организация = &Организация)
	|	И (НЕ &ОтобратьПоНаправлению
	|			ИЛИ &Направление = ВЫБОР
	|				КОГДА Заказы.Получатель ССЫЛКА Справочник.Склады
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			КОНЕЦ)
	|	И (НЕ &ОтобратьПоСкладу
	|			ИЛИ Заказы.Получатель = &Склад
	|				И НЕ &СкладГруппа
	|			ИЛИ Заказы.Получатель В ИЕРАРХИИ (&Склад)
	|				И &СкладГруппа)
	|	И (НЕ &ОтобратьПоНаправлениюДеятельности
	|			ИЛИ Заказы.Ссылка.Распоряжение.НаправлениеДеятельности = &НаправлениеДеятельности)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Распоряжение,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается) КАК ТипСтоимости,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Получатель КАК Склад,
	|	Товары.КодСтроки КАК КодСтроки,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КлючСвязиОперации КАК КлючСвязиОперации
	|ПОМЕСТИТЬ ВТ_ТаблицаТовары
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВыходныеИзделия КАК Товары
	|ГДЕ
	|	((Товары.Ссылка, Товары.КодСтроки) В
	|					(ВЫБРАТЬ
	|						Т.Заказ,
	|						Т.КодСтроки
	|					ИЗ
	|						ВТЗаказыОтбор КАК Т)
	|				И НЕ &ОтобратьПоТипуНоменклатуры
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры В (&МассивТиповНоменклатуры))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная),
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Получатель,
	|	Товары.КодСтроки,
	|	Товары.Упаковка,
	|	Товары.КлючСвязиОперации
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства.ВозвратныеОтходы КАК Товары
	|ГДЕ
	|	((Товары.Ссылка, Товары.КодСтроки) В
	|					(ВЫБРАТЬ
	|						Т.Заказ,
	|						Т.КодСтроки
	|					ИЗ
	|						ВТЗаказыОтбор КАК Т)
	|				И НЕ &ОтобратьПоТипуНоменклатуры
	|			ИЛИ Товары.Номенклатура.ТипНоменклатуры В (&МассивТиповНоменклатуры))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Распоряжение КАК Распоряжение,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	МАКСИМУМ(Товары.ТипСтоимости) КАК ТипСтоимости,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Склад КАК Склад,
	|	Товары.КодСтроки КАК КодСтроки,
	|	МАКСИМУМ(Товары.Упаковка) КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Распоряжение КАК Распоряжение,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		Товары.ТипСтоимости КАК ТипСтоимости,
	|		Товары.Номенклатура КАК Номенклатура,
	|		Товары.Характеристика КАК Характеристика,
	|		Товары.Назначение КАК Назначение,
	|		Товары.Склад КАК Склад,
	|		Товары.КодСтроки КАК КодСтроки,
	|		Товары.Упаковка КАК Упаковка
	|	ИЗ
	|		ВТ_ТаблицаТовары КАК Товары
	|	ГДЕ
	|		&БезОтбораПоРабочемуЦентру
	|		И &БезОтбораПоВидуРабочихЦентров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Распоряжение,
	|		Товары.НомерСтроки,
	|		Товары.ТипСтоимости,
	|		Товары.Номенклатура,
	|		Товары.Характеристика,
	|		Товары.Назначение,
	|		Товары.Склад,
	|		Товары.КодСтроки,
	|		Товары.Упаковка
	|	ИЗ
	|		ВТ_ТаблицаТовары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.ВидыРабочихЦентров КАК МаршрутныйЛистПроизводстваВидыРабочихЦентров
	|			ПО (МаршрутныйЛистПроизводстваВидыРабочихЦентров.Ссылка = Товары.Распоряжение)
	|				И (МаршрутныйЛистПроизводстваВидыРабочихЦентров.ВидРабочегоЦентра В (&МассивВидовРабочихЦентров))
	|	ГДЕ
	|		НЕ &БезОтбораПоВидуРабочихЦентров
	|		И &БезОтбораПоРабочемуЦентру
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Распоряжение,
	|		Товары.НомерСтроки,
	|		Товары.ТипСтоимости,
	|		Товары.Номенклатура,
	|		Товары.Характеристика,
	|		Товары.Назначение,
	|		Товары.Склад,
	|		Товары.КодСтроки,
	|		Товары.Упаковка
	|	ИЗ
	|		ВТ_ТаблицаТовары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛистПроизводства.Операции КАК МаршрутныйЛистПроизводстваОперации
	|			ПО (МаршрутныйЛистПроизводстваОперации.Ссылка = Товары.Распоряжение)
	|				И (МаршрутныйЛистПроизводстваОперации.КлючСвязи = Товары.КлючСвязиОперации)
	|				И (МаршрутныйЛистПроизводстваОперации.РабочийЦентрПоРасписанию В (&МассивРабочихЦентров))
	|	ГДЕ
	|		НЕ &БезОтбораПоРабочемуЦентру
	|		И &БезОтбораПоВидуРабочихЦентров) КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Склад,
	|	Товары.КодСтроки,
	|	Товары.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.Распоряжение КАК Распоряжение,
	|	ТаблицаЗаказы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика КАК Характеристика,
	|	ТаблицаЗаказы.Склад КАК Склад,
	|	ТаблицаЗаказы.КодСтроки КАК КодСтроки,
	|	СУММА(ТаблицаЗаказы.КОформлению) КАК Количество,
	|	ТаблицаЗаказы.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ТаблицаОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.Распоряжение КАК Распоряжение,
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика КАК Характеристика,
	|		ЗаказыОстатки.Склад КАК Склад,
	|		ЗаказыОстатки.КодСтроки КАК КодСтроки,
	|		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению,
	|		ЗаказыОстатки.Распоряжение.Распоряжение.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаВыпускПродукции.Остатки(
	|				&ГраницаПериод,
	|				Распоряжение В
	|							(ВЫБРАТЬ
	|								Т.Заказ
	|							ИЗ
	|								ВТЗаказыОтбор КАК Т)
	|				И (НЕ &ОтобратьПоТипуНоменклатуры
	|					ИЛИ Номенклатура.ТипНоменклатуры В (&МассивТиповНоменклатуры))
	|				И (НЕ &ОтобратьПоСкладу 
	|					ИЛИ Склад = &Склад)
	|				И (&ПодразделениеПолучатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ Склад = &ПодразделениеПолучатель)
	|		) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.Распоряжение,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.Склад,
	|		ЗаказыДвижения.КодСтроки,
	|		ВЫБОР
	|			КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЗаказыДвижения.КОформлению
	|			ИНАЧЕ ЗаказыДвижения.КОформлению
	|		КОНЕЦ,
	|		ЗаказыДвижения.Распоряжение.Распоряжение.НаправлениеДеятельности
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаВыпускПродукции КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.Распоряжение В
	|				(ВЫБРАТЬ
	|					Т.Заказ
	|				ИЗ
	|					ВТЗаказыОтбор КАК Т)
	|		И ЗаказыДвижения.Активность
	|		И ВЫБОР
	|				КОГДА &Период <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЗаказыДвижения.Период <= &Период
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ТаблицаЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказы.Номенклатура,
	|	ТаблицаЗаказы.Характеристика,
	|	ТаблицаЗаказы.Склад,
	|	ТаблицаЗаказы.КодСтроки,
	|	ТаблицаЗаказы.Распоряжение,
	|	ТаблицаЗаказы.НаправлениеДеятельности
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаЗаказы.КОформлению) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.Распоряжение КАК Распоряжение,
	|	ТаблицаОстатки.Распоряжение.Номер КАК Номер,
	|	ТаблицаОстатки.Распоряжение.Дата КАК Дата,
	|	ТаблицаОстатки.Распоряжение.Организация КАК Организация,
	|	ТаблицаОстатки.Распоряжение.Подразделение КАК ПодразделениеОтправитель,
	|	ТаблицаОстатки.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Номенклатура.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Склад ССЫЛКА Справочник.Склады
	|			ТОГДА ТаблицаОстатки.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Склад ССЫЛКА Справочник.Склады
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	КОНЕЦ КАК НаправлениеВыпуска,
	|	ТаблицаОстатки.КодСтроки КАК КодСтроки,
	|	ТаблицаОстатки.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаОстатки.Количество / &ТекстЗапросаКоэффициентУпаковки
	|		ИНАЧЕ ТаблицаОстатки.Количество
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТаблицаТовары.ТипСтоимости КАК ТипСтоимости,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	|	&ТекстЗапросаКоэффициентУпаковки КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА ТаблицаОстатки.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|			ТОГДА ТаблицаОстатки.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаОстатки.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаОстатки.Склад = ТаблицаТовары.Склад
	|			И ТаблицаОстатки.КодСтроки = ТаблицаТовары.КодСтроки
	|			И ТаблицаОстатки.Распоряжение = ТаблицаТовары.Распоряжение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
		
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить();

КонецФункции

//-- НЕ УТКА

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата,НаправлениеВыпуска";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВыпускПродукции";
	
	Если Объект.НаправлениеВыпуска = Перечисления.ХозяйственныеОперации.ВыпускПродукцииВПодразделение Тогда
		
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыПроизводство", Новый Структура());
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямПроизводство", Новый Структура());
		
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВыпускПродукцииВПодразделение);
		
		ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение";
		
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Подразделение");
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
		
	Иначе
		
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
		
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
															И (Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата, Истина))
															Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;

		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПродукцииИзПроизводства);
		
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Склад");
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
		
	КонецЕсли; 
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_Распоряжение");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
//Параметры:
//	ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//		поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//	ДокументСсылка.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_Распоряжение;	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ВыпускПродукцииВПодразделение) <> Неопределено Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускВПодразделение();
	Иначе
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускНаСклад();
	КонецЕсли; 

	Возврат ТекстЗапроса;

КонецФункции

#Область ПроведениеПоРеглУчетуУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
#Область ТекстВыпускСобственнойПродукции // (Дт 26 :: Кт 23)
	ТекстВыпускСобственнойПродукции = "
	|ВЫБРАТЬ // Выпуск собственной продукции (Дт 26 :: Кт 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	ВЫБОР КОГДА Операция.Подразделение = ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		И Строки.ГруппаПродукции = ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции)
	|		ТОГДА Строки.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И НЕ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура				= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ХозяйственнаяОперация	= Стоимости.ХозяйственнаяОперация
	|	
	|		
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|";
#КонецОбласти

#Область ТекстВыпускВПодразделение // (Дт 20, 23 :: Кт 20, 23)
	ТекстВыпускВПодразделение = "
	|ВЫБРАТЬ // Выпуск собственной продукции в подразделение (Дт 23 :: Кт 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Склад КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск собственной продукции в подразделение"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|	
	|	
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Строки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальца // (Дт 023 :: Кт )
	ТекстВыпускПродукцииДавальца = "
	|ВЫБРАТЬ //// Выпуск продукции давальца (Дт 023 :: Кт )
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериальныеЦенностиНаОтветственномХранении) КАК СчетДт,
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск продукции давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И Операция.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
#КонецОбласти

#Область ТекстВыполнениеРабот // (Дт 23, 9 :: Кт 23)
	ТекстВыполнениеРабот = "
	|ВЫБРАТЬ // Выполнение работ (Дт 23, 9 :: Кт 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	(ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ Строки.Склад КОНЕЦ) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	(ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ТОГДА Операция.Подразделение
	|		ИНАЧЕ Строки.Склад КОНЕЦ) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы) КАК СубконтоДт2,
	|	Строки.Номенклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выполнение работ"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|	
	|	
	|ГДЕ
	|	Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И (ВЫБОР КОГДА Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ТОГДА Операция.Подразделение <> ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение)
	|		ИНАЧЕ Строки.Склад <> ЕСТЬNULL(Стоимости.Подразделение, Строки.Подразделение) КОНЕЦ)
	|";
#КонецОбласти

#Область ТекстСписаниеНаРасходы // (Дт 23, 9 :: Кт 23)
	ТекстСписаниеНаРасходы = "
	|ВЫБРАТЬ // Выполнение работ (Дт 23, 9 :: Кт 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЕСТЬNULL(Статья.Ссылка, Строки.Номенклатура) КАК СубконтоДт1,
	|	(ВЫБОР
	|		КОГДА Статья.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) 
	|	КОНЕЦ) КАК СубконтоДт2,
	|	Строки.АналитикаРасходов КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выполнение работ"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Подразделение = Стоимости.Подразделение
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статья
	|	ПО 
	|		Статья.Ссылка = Строки.СтатьяРасходов
	|	
	|	
	|ГДЕ
	|	Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|";
#КонецОбласти

#Область ТекстКорректировкиНДСПартий // (Дт 23 :: Кт 6435)
	ТекстКорректировкиНДСПартий = "
	|ВЫБРАТЬ //// Корректировка НДС партий (Дт 23 :: Кт 6435)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(КорректировкиНДСПартий.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	КорректировкиНДСПартий.ГруппаПродукции КАК СубконтоДт3,  
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт, 
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УсловнаяПродажа) КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Условная продажа"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыпускПродукции КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|ГДЕ
	|	КорректировкиНДСПартий.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Подразделение,
	|	КорректировкиНДСПартий.ГруппаПродукции,
	|	Операция.Подразделение
	|";
#КонецОбласти

	Возврат
	ТекстВыпускСобственнойПродукции
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускВПодразделение
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускПродукцииДавальца
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРабот
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеНаРасходы
	+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкиНДСПартий
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаПлановая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаФактическая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускСобственнойПродукцииНаСкладСИспользованием40СчетаОтклонение
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускВПодразделениеСИспользованием40СчетаПлановая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускВПодразделениеСИспользованием40СчетаФактическая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыпускВПодразделениеСИспользованием40СчетаОтклонение
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботСИспользованием40СчетаПлановая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаПлановая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботСИспользованием40СчетаФактическая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаФактическая
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаКоррекцияПодразделения
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботСИспользованием40СчетаОтклонение
	//+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыполнениеРаботНаЗатратыСИспользованием40СчетаОтклонение
	;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

// Функция подбирает склад для заполнения шапки документа Выпуск продукции.
//
//Параметры:
//	МассивСкладов - Массив - массив складов
//
// Возвращаемое значение:
//	СправочникСсылка.
//
Функция СкладШапкиПоМассиву(МассивСкладов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склады.Родитель КАК Группа,
	|	ВЫБОР
	|		КОГДА ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Значение
	|				И Склады.Родитель.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГруппаДоступна,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склады.Ссылка) КАК КоличествоСкладов,
	|	МАКСИМУМ(Склады.Ссылка) КАК Склад
	|ИЗ
	|	Справочник.Склады КАК Склады,
	|	Константа.ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки КАК ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки
	|ГДЕ
	|	Склады.Ссылка В(&МассивСкладов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Склады.Родитель,
	|	ВЫБОР
	|		КОГДА ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Значение
	|				И Склады.Родитель.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ");
	
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		
		Если Выборка.КоличествоСкладов = 1 Тогда
			Возврат Выборка.Склад;
		ИначеЕсли Выборка.ГруппаДоступна Тогда
			Возврат Выборка.Группа;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаНазначенийРасширенный();
	
КонецФункции

//++ НЕ УТКА

// Формирует параметры необходимые для оформления выпуска на основании маршрутных листов
//
// Параметры:
//  МассивСсылок		 - Массив - список маршрутных листов
//  Подразделение		 - СправочникСсылка.СтруктураПредприятия - подразделение в котором оформляется выпуск
//  ТекстПредупреждения	 - Строка - если выпуск создать невозомжно то в параметре возвращается причина
// 
// Возвращаемое значение:
//   - Структура, Неопределено
//
Функция ПараметрыОформленияВыпуска(Знач МассивСсылок, Знач Подразделение, ТекстПредупреждения) Экспорт
	
	Отказ = Ложь;
	
	ОрганизацияДляЗаполнения   = Неопределено;
	СкладДляЗаполнения         = Неопределено;
	ПодразделениеДляЗаполнения = Неопределено;
	НаправлениеДляЗаполнения   = Неопределено;
	НаправлениеДеятельностиДляЗаполнения = Неопределено;
	
	ПроверитьОрганизацию       = Истина;
	ПроверитьСклад             = Истина;
	ПроверитьПодразделение     = Истина;
	ПроверитьНаправление       = Истина;
	ПроверитьНаправлениеДеятельности = Истина;
	
	ШаблонСообщения = НСтр("ru='- у выбранных маршрутных листов отличается поле %ПредставлениеПоля%.';uk='- у вибраних маршрутних листів відрізняється поле %ПредставлениеПоля%.'");
	
	ДанныеОтбора = Новый Структура;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ДанныеОтбора.Вставить("Подразделение", Подразделение);
	КонецЕсли;
	Результат = РезультатЗапросаПоРаспоряжениямНаВыпускПродукции(ДанныеОтбора, Неопределено, МассивСсылок);
	
	Если Результат.Пустой() Тогда
		ТекстПредупреждения = НСтр("ru='Не требуется оформлять выпуск продукции или выполнение работ.';uk='Не потрібно оформляти випуск продукції або виконання робіт.'");
		Возврат Неопределено;
	КонецЕсли; 
	
	Выборка = Результат.Выбрать();
	
	МассивСкладов = Новый Массив;
	
	ТекстСообщения = "";
	Пока Выборка.Следующий() Цикл
		
		МассивСкладов.Добавить(Выборка.Склад);
		
		Если ОрганизацияДляЗаполнения = Неопределено Тогда
			ОрганизацияДляЗаполнения = Выборка.Организация;
		ИначеЕсли ОрганизацияДляЗаполнения <> Выборка.Организация И ПроверитьОрганизацию Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Организация""';uk='""Організація""'"));
			ПроверитьОрганизацию = Ложь;
			Отказ = Истина;
		КонецЕсли; 
		
		Если СкладДляЗаполнения = Неопределено Тогда
			СкладДляЗаполнения = Выборка.Склад;
		ИначеЕсли СкладДляЗаполнения <> Выборка.Склад И ПроверитьСклад Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Склад""';uk='""Склад""'"));
			ПроверитьСклад = Ложь;
			Отказ = Истина;
		КонецЕсли; 
		
		Если ПодразделениеДляЗаполнения = Неопределено Тогда
			ПодразделениеДляЗаполнения = Выборка.ПодразделениеОтправитель;
		ИначеЕсли ПодразделениеДляЗаполнения <> Выборка.ПодразделениеОтправитель И ПроверитьПодразделение Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Подразделение""';uk='""Підрозділ""'"));
			ПроверитьПодразделение = Ложь;
			Отказ = Истина;
		КонецЕсли; 
		
		Если НаправлениеДляЗаполнения = Неопределено Тогда
			НаправлениеДляЗаполнения = Выборка.НаправлениеВыпуска;
		ИначеЕсли НаправлениеДляЗаполнения <> Выборка.НаправлениеВыпуска И ПроверитьНаправление Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Направление выпуска""';uk='""Напрям випуску""'"));
			
			ПроверитьНаправление = Ложь;
			Отказ = Истина;
		КонецЕсли;
		
		Если НаправлениеДеятельностиДляЗаполнения = Неопределено Тогда
			НаправлениеДеятельностиДляЗаполнения = Выборка.НаправлениеДеятельности;
		ИначеЕсли НаправлениеДеятельностиДляЗаполнения <> Выборка.НаправлениеДеятельности И ПроверитьНаправлениеДеятельности Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Направление деятельности""';uk='""Напрям діяльності""'"));
			
			ПроверитьНаправлениеДеятельности = Ложь;
			Отказ = Истина;
		КонецЕсли;

	КонецЦикла;
	
	Если Не Отказ И НаправлениеДляЗаполнения = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад") Тогда
		
		СкладДляЗаполнения = Документы.ВыпускПродукции.СкладШапкиПоМассиву(МассивСкладов);
		
		Если СкладДляЗаполнения = Неопределено Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Склад""';uk='""Склад""'"));
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		РезультатПроверки = ПроверитьРаспоряженияОбработаныОбработчикамиОбновления(МассивСсылок);
		Если НЕ РезультатПроверки.ОбработкаЗавершена Тогда
			ТекстСообщения = ТекстСообщения
								+ ?(ТекстСообщения = "", "", Символы.ПС)
								+ РезультатПроверки.ТекстИсключения;
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		ТекстПредупреждения = НСтр("ru='Невозможно оформить выпуск продукции или выполнение работ.';uk='Неможливо оформити випуск продукції або виконання робіт.'")
								+ Символы.ПС
								+ ТекстСообщения;
								
		Возврат Неопределено;
		
	КонецЕсли;
	
	ПараметрыОформления = Новый Структура;
	ПараметрыОформления.Вставить("Организация",         ОрганизацияДляЗаполнения);
	ПараметрыОформления.Вставить("Подразделение",       ПодразделениеДляЗаполнения);
	ПараметрыОформления.Вставить("НаправлениеВыпуска",  НаправлениеДляЗаполнения);
	ПараметрыОформления.Вставить("НаправлениеДеятельности",  НаправлениеДеятельностиДляЗаполнения);
	
	Если ЗначениеЗаполнено(СкладДляЗаполнения) Тогда
		ПараметрыОформления.Вставить("Склад",           СкладДляЗаполнения);
	КонецЕсли;
	
	Возврат ПараметрыОформления;
	
КонецФункции

// Проверяет, завершена ли обработка маршрутных листов, а так же их заказов на производство,
// отложенными обработчиками обновления.
//
// Параметры:
//  МассивСсылок - Массив - ссылки, которые необходимо проверить (тип ДокументСсылка.МаршрутныйЛистПроизводства).
// 
// Возвращаемое значение:
//   Структура с полями:
//      ОбработкаЗавершена - Булево - признак того, что все распоряжения обработаны.
//      ТекстИсключения - Строка - текст исключения, если еще не все объекты обработаны.
//
Функция ПроверитьРаспоряженияОбработаныОбработчикамиОбновления(МассивСсылок) Экспорт
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Неопределено,
		"Документ.МаршрутныйЛистПроизводства",
		МассивСсылок);
	
	Если ОбработкаЗавершена Тогда
		
		МассивСсылокЗаказы = Новый Массив;
		РаспоряженияМЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, "Распоряжение");
		Для каждого Элемент Из РаспоряженияМЛ Цикл
			МассивСсылокЗаказы.Добавить(Элемент.Значение);
		КонецЦикла;
		
		ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
			Неопределено,
			"Документ.ЗаказНаПроизводство",
			МассивСсылокЗаказы);
			
	КонецЕсли;
	
	Если ОбработкаЗавершена Тогда
		ТекстИсключения = "";
	Иначе
		Если МассивСсылок.Количество() = 1 Тогда
			ТекстИсключения = НСтр("ru='Действия с объектом временно запрещены, так как не завершен переход на новую версию программы.';uk='Дії з об''єктом тимчасово заборонені, так як не завершено перехід на нову версію програми.'");
		Иначе
			ТекстИсключения = НСтр("ru='Действия с объектами временно запрещены, так как не завершен переход на новую версию программы.';uk='Дії з об''єктами тимчасово заборонені, так як не завершено перехід на нову версію програми.'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый Структура("ОбработкаЗавершена, ТекстИсключения", ОбработкаЗавершена, ТекстИсключения);
	
КонецФункции

//-- НЕ УТКА

// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация,
	|	Документ.Склад,
	|	Документ.Подразделение,
	|	Документ.Ответственный,
	|	Документ.Комментарий,
	|	"""" КАК Дополнительно,
	|	Документ.НаправлениеВыпуска КАК ХозяйственнаяОперация,
	|	"""" КАК Статус,
	|	Документ.Проведен,
	|	Документ.ПометкаУдаления
	|ИЗ
	|	Документ.ВыпускПродукции КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Проверяет, имеются ли отложенные обработчики обновления, которые еще не обработали данные,
// от которых зависит данный документ.
//
// Параметры:
//  Объект - ДокументОбъект.ВыпускПродукции, ДанныеФормыСтруктура - объект, который необходимо проверить.
//  Форма  - УправляемаяФорма - если объект не обработан, то у переданной формы
//           будет установлено свойство ТолькоПросмотр. Если форма не была
//           передана, то будет вызвано исключение.
//
Процедура ПроверитьСвязанныеОбъектыОбработаныОбработчикамиОбновления(Объект, Форма = Неопределено) Экспорт
	
	//++ НЕ УТКА
	
	ЭтоНовыйОбъект = ТипЗнч(Объект) = Тип("ДокументОбъект.ВыпускПродукции") И Объект.ЭтоНовый()
		ИЛИ ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") И НЕ ЗначениеЗаполнено(Объект.Ссылка);
		
	Если ПолучитьФункциональнуюОпцию("ОтложенноеОбновлениеЗавершеноУспешно")
		ИЛИ Форма <> Неопределено И Форма.ТолькоПросмотр
		ИЛИ ЭтоНовыйОбъект Тогда
		Возврат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	Для каждого Строка Из Объект.Товары Цикл
		МассивСсылок.Добавить(Строка.Распоряжение);
	КонецЦикла;
	ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивСсылок);
	РезультатПроверки = ПроверитьРаспоряженияОбработаныОбработчикамиОбновления(МассивСсылок);
	
	Если НЕ РезультатПроверки.ОбработкаЗавершена Тогда
		ТекстИсключения = НСтр("ru='Действия с объектом временно запрещены, так как не завершен переход на новую версию программы.';uk='Дії з об''єктом тимчасово заборонені, так як не завершено перехід на нову версію програми.'");
		Если Форма <> Неопределено Тогда
			Форма.ТолькоПросмотр = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстИсключения);
		Иначе
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЕсли;
	
	//-- НЕ УТКА
	Возврат; // В УТ и КА обработчик пустой
	
КонецПроцедуры

Функция МетаданныеДокумента() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	СтруктураОбъекта.ОформляетсяПоЗаказу = Ложь;
	Возврат СтруктураОбъекта;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		СтандартнаяОбработка = Ложь;
		Если ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции) Тогда
			ВыбраннаяФорма = "ФормаСпискаДокументов";
		Иначе
			ВыбраннаяФорма = "ФормаСписка";
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                  КАК Дата,
	|	ДанныеДокумента.Подразделение                         КАК Подразделение,
	|	ДанныеДокумента.Подразделение.ИспользуетсяСписаниеЗатратНаВыпуск КАК ИспользуетсяСписаниеЗатрат,
	|	ДанныеДокумента.Организация                           КАК Организация,
	|	ДанныеДокумента.Распоряжение                          КАК Распоряжение,
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.ВыпускПоРаспоряжениям                 КАК ВыпускПоРаспоряжениям,
	|	ДанныеДокумента.НаправлениеВыпуска                    КАК НаправлениеВыпуска,
	|	ДанныеДокумента.НалоговоеНазначение                   КАК НалоговоеНазначение 
	|ИЗ
	|	Документ.ВыпускПродукции КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Дата",                                            Реквизиты.Дата);
	Запрос.УстановитьПараметр("Ссылка",                                          Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Подразделение",                                   Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Организация",                                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("Распоряжение",                                    Реквизиты.Распоряжение);
	Запрос.УстановитьПараметр("ПустаяСерия",                                     Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",     ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("НаправлениеВыпуска",                              Реквизиты.НаправлениеВыпуска);
	Запрос.УстановитьПараметр("ВалютаУпрУчета",                                  Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета",                                 Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаПлановойСтоимости",                         Константы.ВалютаПлановойСебестоимостиПродукции.Получить());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                           Перечисления.ХозяйственныеОперации.ВыпускПродукции);
	Запрос.УстановитьПараметр("ВыпускПоРаспоряжениям",                           Реквизиты.ВыпускПоРаспоряжениям);
	Запрос.УстановитьПараметр("НалоговоеНазначение",                             Реквизиты.НалоговоеНазначение );
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",                      ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ПустойКлючСвязи",                                 Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ИспользуетсяСписаниеЗатрат",                      Реквизиты.ИспользуетсяСписаниеЗатрат);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если  Запрос.Параметры.Свойство("УчетГотовойПродукцииПоПлановойСтоимости")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаПлановойСтоимости = Константы.ВалютаПлановойСебестоимостиПродукции.Получить();
	УчетГотовойПродукцииПоПлановойСтоимости = Истина;
	Если УчетГотовойПродукцииПоПлановойСтоимости Тогда
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(ВалютаПлановойСтоимости,
		                                                                         ВалютаПлановойСтоимости,
		                                                                         Запрос.Параметры.Дата);
	Иначе
		Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.ВалютаУпрУчета,
		                                                                         Запрос.Параметры.ВалютаУпрУчета,
		                                                                         Запрос.Параметры.Дата);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("УчетГотовойПродукцииПоПлановойСтоимости", УчетГотовойПродукцииПоПлановойСтоимости);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",          Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",         Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Если ИмяРегистра = "ТоварыКОформлениюПоступления" Тогда
		ИсточникиДанных.Вставить("Товары.Распоряжение");
	КонецЕсли;

	Возврат ИсточникиДанных;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
			
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТКА
	ТекстЗапросаТаблицаРаспоряженияНаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТКА
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРаспоряженияНаСписаниеПоНормативам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТКА
	ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТКА
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|		ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ &ПустаяСерия
	|	КОНЕЦ КАК Серия,
	|	&Подразделение КАК Склад
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И ВЫБОР
	|				КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|				ТОГДА ТаблицаТовары.Серия = Аналитика.Серия
	|				ИНАЧЕ &ПустаяСерия = Аналитика.Серия
	|			   КОНЕЦ
	|			И (&Подразделение = Аналитика.Склад)
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL 
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|");
	
	ЗапросАналитики.УстановитьПараметр("Ссылка",        Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Подразделение", Запрос.Параметры.Подразделение);
	ЗапросАналитики.УстановитьПараметр("ПустаяСерия",   Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "СерииТоваров";
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Количество                            КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий                   КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|
	|ПОМЕСТИТЬ СерииТоваров
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	(&НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			И НЕ ТаблицаТовары.ИспользоватьОрдернуюСхему
	|		ИЛИ &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Подразделение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Подразделение = ТаблицаТовары.Подразделение
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И (&НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			И НЕ ТаблицаТовары.ИспользоватьОрдернуюСхему
	|		ИЛИ &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	| 	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Подразделение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// На неордерный склад
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата                                  КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТаблицаТовары.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		И ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Дата)
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе для старых назначений установка резерва под заказ (т.к. в приходном ордере нет старых 
	// назначений, приходный ордер этогосделать не мог)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата                                  КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	0                                      КАК ВНаличии,
	|	ТаблицаТовары.Количество               КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Дата
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("СерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата                                  КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	СерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВтТаблицаТовары"; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика,
	|	ТаблицаТовары.Спецификация          КАК Спецификация,
	|	ТаблицаТовары.Серия                 КАК Серия,
	|	ТаблицаТовары.СтатусУказанияСерий   КАК СтатусУказанияСерий,
	|	ТаблицаТовары.ВидЗапасов            КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий  КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Количество            КАК Количество,
	|	ТаблицаТовары.Сумма                 КАК Сумма,
	|	ТаблицаТовары.ТипСтоимости          КАК ТипСтоимости,
	|	ТаблицаТовары.КодСтроки             КАК КодСтроки,
	|	ТаблицаТовары.Распоряжение          КАК Распоряжение,
	// аналитика учета номенклатуры на складе-получателе или подразделении-получателе
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	// аналитика учета номенклатуры в подразделении-отправителе
	|	АналитикаВПодразделении.КлючАналитики    КАК АналитикаУчетаВПодразделении,
	|	ТаблицаТовары.Назначение            КАК Назначение,
	|	ВЫБОР КОГДА &ВыпускПоРаспоряжениям 
	|		ТОГДА ТаблицаТовары.Распоряжение.Распоряжение.НалоговоеНазначение 
	|		ИНАЧЕ &НалоговоеНазначение 
	|	КОНЕЦ                               КАК НалоговоеНазначение,
	|	ТаблицаТовары.СтатьяРасходов        КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов     КАК АналитикаРасходов,
	|	ТаблицаТовары.СписатьНаРасходы      КАК СписатьНаРасходы,
	|	ТаблицаТовары.Склад                 КАК Склад,
	|	ТаблицаТовары.Подразделение         КАК Подразделение,
	|	ТаблицаТовары.ИдентификаторСтроки   КАК ИдентификаторСтроки,
	|	ВЫБОР 
	|		КОГДА &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			ТОГДА ТаблицаТовары.Склад
	|		ИНАЧЕ ТаблицаТовары.Подразделение
	|	КОНЕЦ                               КАК Получатель,
	|	ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                               КАК ИспользоватьОрдернуюСхему
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
	|	ПО
	|		ТаблицаТовары.Номенклатура = АналитикаВПодразделении.Номенклатура
	|		И ТаблицаТовары.Характеристика = АналитикаВПодразделении.Характеристика
	|		И (&Подразделение = АналитикаВПодразделении.Склад)
	|		И ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаВПодразделении.Серия
	|			ИНАЧЕ &ПустаяСерия = АналитикаВПодразделении.Серия
	|		   КОНЕЦ
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// На ордерном складе и для старых назначений приходуем наличие под заказ
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Дата                                     КАК Период,
	|	ТаблицаТовары.Склад                       КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Назначение                  КАК Назначение,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ТаблицаТовары.Количество                  КАК НаличиеПодЗаказ,
	|	0                                         КАК КЗаказу
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И &Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На неордерном складе назначений приходуем наличие под заказ
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Дата                                     КАК Период,
	|	ТаблицаТовары.Склад                       КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Назначение                  КАК Назначение,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ТаблицаТовары.Количество                  КАК НаличиеПодЗаказ,
	|	0                                         КАК КЗаказу
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|		И &Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Для выпусков без распоряжений закрываем ресурс "К заказу".
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Дата                                     КАК Период,
	|	ТаблицаТовары.Склад                       КАК Склад,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Назначение                  КАК Назначение,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	0                                         КАК НаличиеПодЗаказ,
	|	-ТаблицаТовары.Количество                 КАК КЗаказу
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И Не &ВыпускПоРаспоряжениям";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказовРаботами";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
	|	&Дата                                     КАК Период,
	|	ТаблицаТовары.Подразделение               КАК Подразделение,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ТаблицаТовары.Назначение                  КАК Назначение,
	|	ТаблицаТовары.Количество                  КАК КОбеспечению
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не &ВыпускПоРаспоряжениям";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюПоступления";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	&Дата                                    КАК Период,
	|	ТаблицаТовары.Склад                      КАК Склад,
	//++ НЕ УТКА
	|	ЕСТЬNULL(ТаблицаТовары.Распоряжение.Распоряжение, 
	//-- НЕ УТКА
	|				НЕОПРЕДЕЛЕНО 
	//++ НЕ УТКА
	|			)  
	//-- НЕ УТКА
	|                                            КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                    КАК Серия,
	|	ТаблицаТовары.Количество                 КАК КОформлению
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ВыпускПоРаспоряжениям
	|	И ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Дата,
	|	ТаблицаТовары.Склад,
	|	&Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ВыпускПоРаспоряжениям
	|	И ВЫБОР КОГДА ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И &Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыпускПродукции";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтТаблицаТовары.КодСтроки                               КАК КодСтроки,
	|	&Дата                                                   КАК Период,
	|	ВтТаблицаТовары.АналитикаУчетаНоменклатуры              КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                            КАК Организация,
	|	ВтТаблицаТовары.Распоряжение                            КАК Распоряжение,
	|	ВтТаблицаТовары.Количество                              КАК Количество,
	|	ВтТаблицаТовары.ВидЗапасов                              КАК ВидЗапасов,
	|	ВтТаблицаТовары.Спецификация                            КАК Спецификация,
	|	&Подразделение                                          КАК Подразделение,
	|	ВтТаблицаТовары.СтатьяРасходов                          КАК СтатьяРасходов,
	|	ВтТаблицаТовары.АналитикаРасходов                       КАК АналитикаРасходов,
	
	|	ВЫБОР ИСТИНА
	//++ НЕ УТКА
	|		КОГДА ИСТИНА ТОГДА ВтТаблицаТовары.Распоряжение.Распоряжение
	//-- НЕ УТКА
	|		КОГДА ИСТИНА ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                   КАК Заказ,
	
	|	(ВЫБОР КОГДА ВтТаблицаТовары.СписатьНаРасходы ТОГДА ВтТаблицаТовары.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ВтТаблицаТовары
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("СерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// приход с "-" для позиций по фиксированной стоимости
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	&Дата КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	Строки.Номенклатура,
	|	Строки.Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК Серия,
	|	Строки.АналитикаУчетаВПодразделении КАК АналитикаУчетаНоменклатуры,
	|	Строки.Назначение КАК Назначение,
	|	-Строки.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|ГДЕ
	|	Строки.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход, если выпуск продукции в подразделение
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	&Дата КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	Строки.Подразделение,
	|	Строки.Номенклатура,
	|	Строки.Характеристика,
	|	Строки.Серия,
	|	АналитикаВПодразделении.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Строки.Назначение,
	|	Строки.Количество
	|ИЗ
	|	СерииТоваров КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаВПодразделении
	|	ПО
	|		Строки.Номенклатура = АналитикаВПодразделении.Номенклатура
	|		И Строки.Характеристика = АналитикаВПодразделении.Характеристика
	|		И Строки.Подразделение = АналитикаВПодразделении.Склад
	|		И ВЫБОР
	|			КОГДА Строки.СтатусУказанияСерий = 14
	|			ТОГДА Строки.Серия = АналитикаВПодразделении.Серия
	|			ИНАЧЕ &ПустаяСерия = АналитикаВПодразделении.Серия
	|		   КОНЕЦ
	|ГДЕ
	|	&НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	// приход с "-" для позиций по фиксированной стоимости
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Дата                                    КАК Период,
	|	&Дата                                    КАК ДатаРегистратора,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаВПодразделении КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	-ТаблицаТовары.Количество                КАК Количество,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК Стоимость,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	&Ссылка                                  КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
	|	0                                        КАК ПостояннаяРазница,
	|	0                                        КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))  КАК СтоимостьРегл,
	|	ТаблицаТовары.НалоговоеНазначение        КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход, если выпуск продукции в подразделение
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Дата                                    КАК Период,
	|	&Дата                                    КАК ДатаРегистратора,
	|	&Организация                             КАК Организация,
	|	(ВЫБОР КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход, если выпуск работ со списанием на затраты
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   	КАК ВидДвижения,
	|	&Дата                                    	КАК Период,
	|	&Дата                                    	КАК ДатаРегистратора,
	|	&Организация                             	КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаВПодразделении 	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                 	КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                 	КАК Количество,
	|	0                                        	КАК Стоимость,
	|	0                                        	КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий       	КАК АналитикаУчетаПартий,
	|	&Ссылка                                  	КАК ДокументПоступления,
	|	&Ссылка                                     КАК ДокументИсточник,
	|	0                                        	КАК ПостояннаяРазница,
	|	0                                        	КАК ВременнаяРазница,
	|	0                                        	КАК СтоимостьРегл,
	|	ТаблицаТовары.НалоговоеНазначение           КАК НалоговоеНазначение,
	|	ТаблицаТовары.СтатьяРасходов 			 	КАК СтатьяРасходовСписания,
	|	ТаблицаТовары.АналитикаРасходов 		 	КАК АналитикаРасходов,
	|	ТаблицаТовары.Подразделение 			 	КАК ПодразделениеРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ТаблицаТовары.СписатьНаРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Дата                                       КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	&ХозяйственнаяОперация                      КАК ХозяйственнаяОперация,
	|	ИСТИНА                                      КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Дата                          КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура     КАК Номенклатура,
	|	ТаблицаТовары.Характеристика   КАК Характеристика,
	|	ТаблицаТовары.Серия            КАК Серия,
	|	ТаблицаТовары.ВидЗапасов       КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка) КАК НомерГТД
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|		И ТаблицаТовары.Серия = ПоступленияТоваров.Серия
	|		И (ПоступленияТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка))
	|ГДЕ
	|	(ПоступленияТоваров.ВидЗапасов ЕСТЬ NULL 
	|	ИЛИ ПоступленияТоваров.ДатаПоступления < &Дата)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Дата                                      КАК Период,
	|	&Организация                               КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	&Ссылка                                    КАК Регистратор,
	|	&Ссылка                                    КАК ДокументПоступления,
	|	&ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
	|	ИСТИНА                                     КАК Первичное,
	|	НЕОПРЕДЕЛЕНО                               КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьПартионныйУчет
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	// движение с "-" по производственным затратам с аналитикой подразделения-отправителя если тип стоимости фиксированная
	// (не зависимо от направления выпуска, типа номенклатуры и вида запасов)
	|ВЫБРАТЬ
	|	0                                              КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                      КАК НомерСтрокиДокумента,
	|	&Дата                                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Организация                                   КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаВПодразделении     КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                          КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение 			   КАК НалоговоеНазначение,
    |	НЕОПРЕДЕЛЕНО 			                       КАК КорНалоговоеНазначение,
	|	-ТаблицаТовары.Количество                      КАК Количество,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(-ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СтоимостьРеглБезНДС,
	|	0                                              КАК НДСРегл,
	|	0                                              КАК ПостояннаяРазница,
	|	0                                              КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	NULL                                           КАК КорАналитикаУчетаНоменклатуры,
	|	NULL                                           КАК КорРазделУчета,
	|	NULL                                           КАК КорВидЗапасов,
	|	NULL                                           КАК КорОрганизация,
	|	NULL                                           КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	&Подразделение                                 КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДокументДвижения,
	|	ТаблицаТовары.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	// направления выпуска На склад
	// приход для товаров на раздел учета ТоварыНаСкладах с рассчитываемой стоимостью
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	1                                          КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтрокиДокумента,
	|	&Дата                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Организация                               КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                      КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение 			   КАК НалоговоеНазначение,
    |	НЕОПРЕДЕЛЕНО 			                       КАК КорНалоговоеНазначение,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРеглБезНДС,
	|	0                                          КАК НДСРегл,
	|	0                                          КАК ПостояннаяРазница,
	|	0                                          КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	NULL                                       КАК КорАналитикаУчетаНоменклатуры,
	|	NULL                                       КАК КорРазделУчета,
	|	NULL                                       КАК КорВидЗапасов,
	|	NULL                                       КАК КорОрганизация,
	|	NULL                                       КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО                               КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                               КАК АналитикаРасходов,
	|	&Подразделение                             КАК Подразделение,
	|	&Ссылка                                    КАК ДокументДвижения,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	// приход для товаров на раздел учета ТоварыНаСкладах с фиксированной стоимостью
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаТовары.НомерСтроки,
	|	&Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаТовары.НалоговоеНазначение 			   КАК НалоговоеНазначение,
    |	НЕОПРЕДЕЛЕНО 			                       КАК КорНалоговоеНазначение,
	|	ТаблицаТовары.Количество,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	&Подразделение,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаТовары.ВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	// направление выпуска В подразделение для товаров и работ без списания на расходы
	// приход на подразделение-получатель с рассчитываемой стоимостью
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	3                                              КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                      КАК НомерСтрокиДокумента,
	|	&Дата                                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Организация                                   КАК Организация,
	|	(ВЫБОР КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ТаблицаТовары.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ТаблицаТовары.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначение 			   КАК НалоговоеНазначение,
    |	НЕОПРЕДЕЛЕНО 			                       КАК КорНалоговоеНазначение,
	|	ТаблицаТовары.Количество                        КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0                                               КАК ПостояннаяРазница,
	|	0                                               КАК ВременнаяРазница,
	|	(ВЫБОР КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение) КОНЕЦ) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументДвижения,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов <> Значение(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|
	// приход на подразделение-получатель с фиксированной стоимостью, только если не списываем на расходы
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	4,
	|	ТаблицаТовары.НомерСтроки,
	|	&Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаТовары.НалоговоеНазначение 			   КАК НалоговоеНазначение,
    |	НЕОПРЕДЕЛЕНО 			                       КАК КорНалоговоеНазначение,
	|	ТаблицаТовары.Количество,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)),
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СтоимостьРеглБезНДС,
	|	0                                              КАК НДСРегл,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость),
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	&Подразделение,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|
	// списания на расходы, если тип стоимости Рассчитывается
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	5,
	|	ТаблицаТовары.НомерСтроки,
	|	&Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаВПодразделении КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаТовары.НалоговоеНазначение 			   КАК НалоговоеНазначение,
    |	ТаблицаТовары.НалоговоеНазначение 			   КАК КорНалоговоеНазначение,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРеглБезНДС,
	|	0                                              КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) КАК ХозяйственнаяОперация,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяРасходовСписания,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.Подразделение,
	|	&Ссылка КАК ДокументДвижения,
	|	ТаблицаТовары.Номенклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ТаблицаТовары.СписатьНаРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтрокиДокумента
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// На неордерном складе
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	//++ НЕ УТКА
	|	ЕСТЬNULL(ТаблицаТовары.Распоряжение.Распоряжение, 
	//-- НЕ УТКА
	|				НЕОПРЕДЕЛЕНО 
	//++ НЕ УТКА
	|			)  
	//-- НЕ УТКА
	|	         КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	//++ НЕ УТКА
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	//-- НЕ УТКА
	|		КОГДА ИСТИНА
	|			ТОГДА 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И (НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ИЛИ &Дата < ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	// На ордерном складе для старых назначений
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата,
	//++ НЕ УТКА
	|	ЕСТЬNULL(ТаблицаТовары.Распоряжение.Распоряжение, 
	//-- НЕ УТКА
	|				НЕОПРЕДЕЛЕНО 
	//++ НЕ УТКА
	|			)  
	//-- НЕ УТКА
	|	,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	-ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Дата
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	// На ордерном складе сторно приходного ордера для старых назначений и без назначений
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата,
	//++ НЕ УТКА
	|	ЕСТЬNULL(ТаблицаТовары.Распоряжение.Распоряжение, 
	//-- НЕ УТКА
	|				НЕОПРЕДЕЛЕНО 
	//++ НЕ УТКА
	|			)  
	//-- НЕ УТКА
	|	,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТаблицаТовары.Количество,
	|	0
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Дата
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки         КАК НомерСтроки,
	|	&Дата                             КАК Период,
	|	&ВалютаПлановойСтоимости          КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Сумма               КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                      КАК СтавкаНДС,
	|	0                                 КАК СуммаНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0                                 КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                      КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ВалютаПлановойСтоимости <> &ВалютаРеглУчета
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Количество               КАК КПоступлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ИспользоватьОрдернуюСхему
	|	И Не &ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРаспоряженияНаСписаниеПоНормативам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаСписаниеПоНормативам";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	&Ссылка КАК Распоряжение,
	|	ТаблицаТоваров.КодСтроки КАК КодСтроки,
	|	(ВЫБОР КОГДА ТаблицаТоваров.СписатьНаРасходы ТОГДА ТаблицаТоваров.АналитикаУчетаВПодразделении
	|		ИНАЧЕ ТаблицаТоваров.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаПродукции,
	|	ТаблицаТоваров.ВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.НалоговоеНазначение КАК НалоговоеНазначение,
	|	(ВЫБОР &НаправлениеВыпуска
	|		КОГДА Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТоваров
	|ГДЕ
	|	НЕ &ВыпускПоРаспоряжениям
	|	И &ИспользуетсяСписаниеЗатрат";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	&Дата                                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	ТаблицаТовары.Подразделение                 КАК Подразделение,
	|	ТаблицаТовары.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов             КАК АналитикаРасходов,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРеглБезНДС,
	|	0											КАК НДСРегл,
	|	&НалоговоеНазначение						КАК НалоговоеНазначение,
	|	0											КАК ПостояннаяРазница,
	|	0                                           КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;

#Область ВыпускНаСкладПоРассчитываемойСтоимости
	ВыпускНаСкладПоРассчитываемойСтоимости =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Склад КАК КорСклад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	0 КАК Количество,
	|	ТаблицаТовары.Количество КАК КорКоличество,
	|
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
#КонецОбласти

#Область ВыпускНаСкладПоФиксированнойСтоимости
	ВыпускНаСкладПоФиксированнойСтоимости =
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Склад КАК КорСклад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	0 КАК Количество,
	|	ТаблицаТовары.Количество КАК КорКоличество,
	|
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|	И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|";
#КонецОбласти

	ТекстЗапроса = ВыпускНаСкладПоРассчитываемойСтоимости + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|" + ВыпускНаСкладПоФиксированнойСтоимости;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенности В (
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Подразделение КАК Склад,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &УчетГотовойПродукцииПоПлановойСтоимости
	|		ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Рассчитывается)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенности В (
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Подразделение КАК Склад,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов.ТипЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК Стоимость,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ТипСтоимости = ЗНАЧЕНИЕ(Перечисление.ТипыСтоимостиВыходныхИзделий.Фиксированная)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура             КАК Номенклатура,
	|	ТаблицаСерии.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                 КАК Назначение,
	|	ТаблицаСерии.Серия                    КАК Серия,
	|	ТаблицаСерии.Количество               КАК Количество,
	|	&Подразделение                        КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ТОГДА ТаблицаСерии.Подразделение
	|		ИНАЧЕ ТаблицаСерии.Склад
	|	КОНЕЦ                                 КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                               КАК Документ,
	|	&Дата                                 КАК Период,
	|	ТаблицаСерии.НомерСтроки              КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Дата < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ	
	|	
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура           КАК Номенклатура,
	|	ТаблицаСерии.Характеристика         КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                               КАК Назначение,
	|	ТаблицаСерии.Серия                  КАК Серия,
	|	ТаблицаСерии.Количество             КАК Количество,
	|	&Подразделение                      КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|			ТОГДА ТаблицаСерии.Подразделение
	|		ИНАЧЕ ТаблицаСерии.Склад
	|	КОНЕЦ                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                             КАК Документ,
	|	&Дата                               КАК Период,
	|	ТаблицаСерии.НомерСтроки            КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаСерии.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ &Дата < ТаблицаСерии.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТКА

Функция ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиДавальцуКОформлению";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Дата КАК Период,
	|	ТаблицаТовары.Назначение.Заказ КАК ЗаказДавальца,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	0 КАК Заказано,
	|	ТаблицаТовары.Количество КАК КОформлению,
	|	0 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК ПричинаОтмены
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
	|		ПО ТаблицаТовары.Распоряжение.Распоряжение = ЗаказНаПроизводствоПродукция.Ссылка
	|		И ТаблицаТовары.Распоряжение.КодСтроки = ЗаказНаПроизводствоПродукция.КодСтроки
	|ГДЕ
	|	ТаблицаТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказДавальца
	|	И ЗаказНаПроизводствоПродукция.КлючСвязиПродукция = &ПустойКлючСвязи
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И &ВыпускПоРаспоряжениям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Дата,
	|	ТаблицаТовары.Назначение.Заказ,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказДавальца
	|	И &НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И НЕ &ВыпускПоРаспоряжениям
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРаспоряженияНаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаВыпускПродукции";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Строки.НомерСтроки                              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Дата                                           КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление) КАК ТипДвиженияЗапасов,
	|	Строки.Распоряжение                             КАК Распоряжение,
	|	Строки.Номенклатура                             КАК Номенклатура,
	|	Строки.Характеристика                           КАК Характеристика,
	|	Строки.КодСтроки                                КАК КодСтроки,
	|	Строки.ВидЗапасов                               КАК ВидЗапасов,
	|	Строки.ТипСтоимости                             КАК ТипСтоимости,
	|	&Подразделение                                  КАК Подразделение,
	|	Строки.Склад                                    КАК Склад,
	|	Строки.Количество                               КАК Заказано,
	|	Строки.Количество                               КАК КОформлению,
	|	Строки.АналитикаУчетаНоменклатуры               КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|
	|ГДЕ
	|	&ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки                              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Дата                                           КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление) КАК ТипДвиженияЗапасов,
	|	Строки.Распоряжение                             КАК Распоряжение,
	|	Строки.Номенклатура                             КАК Номенклатура,
	|	Строки.Характеристика                           КАК Характеристика,
	|	Строки.КодСтроки                                КАК КодСтроки,
	|	Строки.ВидЗапасов                               КАК ВидЗапасов,
	|	Строки.ТипСтоимости                             КАК ТипСтоимости,
	|	&Подразделение                                  КАК Подразделение,
	|	Строки.Подразделение                            КАК Склад,
	|	Строки.Количество                               КАК Заказано,
	|	Строки.Количество                               КАК КОформлению,
	|	(ВЫБОР КОГДА Строки.СписатьНаРасходы ТОГДА Строки.АналитикаУчетаВПодразделении
	|		ИНАЧЕ Строки.АналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК Строки
	|
	|ГДЕ
	|	&ВыпускПоРаспоряжениям
	|	И &НаправлениеВыпуска = Значение(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

//-- НЕ УТКА

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Чтение", Метаданные.Документы.ВыпускПродукции) Тогда
		// Выпуск продукции
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Накладная";
		КомандаПечати.Представление = НСтр("ru='Выпуск продукции';uk='Випуск продукції'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Накладная",
			НСтр("ru='Выпуск продукции';uk='Випуск продукції'"),
			СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),
			,
			"Документ.ВыпускПродукции.ПФ_MXL_Накладная",
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорм
			);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыпускПродукции.ПФ_MXL_Накладная", КодЯзыкаПечать);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыпускПродукции.Ссылка,
	|	ВыпускПродукции.Номер,
	|	ВыпускПродукции.Дата,
	|	ВыпускПродукции.Организация,
	|	ВыпускПродукции.Организация.Префикс КАК Префикс,
	|	ВыпускПродукции.Подразделение.Представление КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ВыпускПродукции КАК ВыпускПродукции
	|ГДЕ
	|	ВыпускПродукции.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукции.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Склад                                 КАК Склад,
	|	ТаблицаТовары.Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Упаковка                              КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок                    КАК Количество,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ВыпускПродукции.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.Подразделение = ТаблицаТовары.Подразделение
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивДокументов)
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	| 	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Подразделение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпускПродукцииТовары.Ссылка КАК Ссылка,
	|	ВыпускПродукцииТовары.Номенклатура,
	|	ВыпускПродукцииТовары.Номенклатура." + ?(КолонкаКодов = "", "Код", КолонкаКодов) + " КАК КодАртикул,
	|	ВыпускПродукцииТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	ВыпускПродукцииТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВыпускПродукцииТовары.Характеристика,
	|	ВыпускПродукцииТовары.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ВыпускПродукцииТовары.Серия.Наименование КАК СерияНаименование,
	|	ВЫБОР
	|		КОГДА ВыпускПродукцииТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ВыпускПродукцииТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ВыпускПродукцииТовары.Упаковка.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВыпускПродукцииТовары.Количество КАК Количество,
	|	ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска КАК НаправлениеВыпуска,
	|	ВЫБОР
	|		КОГДА ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			ТОГДА ВыпускПродукцииТовары.Склад.Представление
	|		ИНАЧЕ ВыпускПродукцииТовары.Подразделение.Представление
	|	КОНЕЦ КАК ПредставлениеПолучателя,
	|	ВЫБОР
	|		КОГДА ВыпускПродукцииТовары.Ссылка.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|			ТОГДА &ТипПолучателяСклад
	|		ИНАЧЕ &ТипПолучателяПодразделение
	|	КОНЕЦ КАК ТипПолучателя
	|ИЗ
	|	ВтТовары КАК ВыпускПродукцииТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыпускПродукцииТовары.Ссылка,
	|	ВыпускПродукцииТовары.НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(ТипПолучателя)
	|ПО
	|	Ссылка,
	|	ПредставлениеПолучателя";

	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	Запрос.УстановитьПараметр("ТипПолучателяСклад",         НСтр("ru='Склад';uk='Склад'",КодЯзыкаПечать));
	Запрос.УстановитьПараметр("ТипПолучателяПодразделение", НСтр("ru='Подразделение';uk='Підрозділ'",КодЯзыкаПечать));
	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыпускПродукции_Накладная";
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		ВыборкаПоПолучателям = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоПолучателям.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтраницы = 1;
			
			ПервыйДокумент    = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ВыборкаПоПолучателям.ПредставлениеПолучателя;
			ОбластьМакета.Параметры.ТипПолучателя = ВыборкаПоПолучателям.ТипПолучателя;
			
			ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Выпуск продукции';uk='Випуск продукції'",КодЯзыкаПечать), КодЯзыкаПечать);
			ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
			
			СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть(?(КолонкаКодов = "", "ЗаголовокТаб", "ЗаголовокТабСКодом"));
			ОбластьМакета           = Макет.ПолучитьОбласть(?(КолонкаКодов = "", "Строка",       "СтрокаСКодом"));
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтрокаТовары = ВыборкаПоПолучателям.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			ПараметрыСтрокиТовары = Новый Структура("НомерСтроки,ТоварНаименование");
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ПараметрыСтрокиТовары.НомерСтроки = НомерСтроки;
				ПараметрыСтрокиТовары.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
																СтрокаТовары.ТоварНаименование, 
																СтрокаТовары.ХарактеристикаНаименование,,
																СтрокаТовары.СерияНаименование);
																
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.Заполнить(ПараметрыСтрокиТовары);
				
				Если НомерСтроки = 1 Тогда
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Страница %1';uk='Сторінка %1'",КодЯзыкаПечать), НомерСтраницы);
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					
					Если НомерСтроки = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Страница %1';uk='Сторінка %1'",КодЯзыкаПечать), НомерСтраницы);
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			// Выводим подвал документа
			ОбластьПодвала.Параметры.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Всего наименований %1';uk='Всього найменувань %1'",КодЯзыкаПечать), СтрокаТовары.Количество());
			
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	//++ НЕ УТКА
	ИмяФормы = "Документ.ВыпускПродукции.ФормаСписка";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.ВыпускПродукции))
		И ПравоДоступа("Добавление", Метаданные.Документы.ВыпускПродукции)
		И ПравоДоступа("Чтение",     Метаданные.РегистрыНакопления.РаспоряженияНаВыпускПродукции)
		И ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Остатки.Распоряжение) КАК ДокументыВыпускаПродукцииОжидающиеОформления
	|ИЗ
	|	РегистрНакопления.РаспоряженияНаВыпускПродукции.Остатки(&ДатаВыпуска, Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК Остатки
	|ГДЕ
	|	Остатки.КОформлениюОстаток > 0";
	
	Запрос.УстановитьПараметр("ДатаВыпуска", КонецДня(ОбщиеПараметрыЗапросов.ТекущаяДата) + 1);
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ДокументыВыпускаПродукции
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ДокументыВыпускаПродукции";
	ДелоРодитель.Представление  = НСтр("ru='Документы выпуска продукции';uk='Документи випуску продукції'");
	ДелоРодитель.ЕстьДела       = Результат.ДокументыВыпускаПродукцииОжидающиеОформления > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Производство;
	
	// ДокументыВыпускаПродукцииОжидающиеОформления
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "ГруппаСтраницаРаспоряжения");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ДокументыВыпускаПродукцииОжидающиеОформления";
	Дело.ЕстьДела       = Результат.ДокументыВыпускаПродукцииОжидающиеОформления > 0;
	Дело.Представление  = НСтр("ru='Ожидающие оформления';uk='Очікуючі оформлення'");
	Дело.Количество     = Результат.ДокументыВыпускаПродукцииОжидающиеОформления;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ДокументыВыпускаПродукции";
	//-- НЕ УТКА
	
	Возврат; // В УТ и КА процедура пустая
	
КонецПроцедуры

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускНаСклад()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Склад,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|								ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 10
	|										ИНАЧЕ 9
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|								ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 8
	|										ИНАЧЕ 7
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|						И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|							ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|						И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 4
	|										ИНАЧЕ 3
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|											И ТоварыДляЗапроса.Количество > 0
	|										ТОГДА 2
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыпускВПодразделение()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Подразделение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Подразделение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Подразделение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Подразделение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Подразделение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Подразделение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|						И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриВыпускеВПодразделение
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 4
	|										ИНАЧЕ 3
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|											И ТоварыДляЗапроса.Количество > 0
	|										ТОГДА 2
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Подразделение = СерииДляЗапроса.Подразделение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Подразделение)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяДокумента()

	Возврат "Документ.ВыпускПродукции";

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = ПолноеИмяДокумента();
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("Дата", "ТаблицаТовары.Ссылка.Дата");
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "СвободныеОстатки" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ОбеспечениеЗаказовРаботами" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОформлениюПоступления" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;
	
КонецФункции


#КонецОбласти

#КонецОбласти

#КонецЕсли