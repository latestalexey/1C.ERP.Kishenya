#Если Не ТолстыйКлиентУправляемоеПриложение Или Сервер Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ИзменениеПараметровОС.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.МодернизацияОС) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.МодернизацияОС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.МодернизацияОС);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

// Процедура обновляет движения документа принятия к учету после отражения в регл. учете
// Вызывается при отражения в регл. учете из функции "РеглУчетПроведениеСервер.ДополнительнаяОбработкаПриОтраженииДокумента"
//
// Параметры:
// 		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджера временных таблиц проводок в регл. учете
//
Процедура ЗаполнитьПараметрыНачисленияАмортизацииПриОтражении(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	МодернизацияОС.Ссылка КАК Ссылка,
	|	МодернизацияОС.Дата КАК Дата
	|ИЗ
	|	Документ.МодернизацияОС КАК МодернизацияОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО МодернизацияОС.Ссылка = ДокументыКОтражению.Ссылка";
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	
	Если Не РеквизитыДокумента.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", РеквизитыДокумента.Ссылка);
	Запрос.УстановитьПараметр("ПериодИсключая", Новый Граница(РеквизитыДокумента.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ГраницаКонецМесяца", Новый Граница(КонецМесяца(РеквизитыДокумента.Дата), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Организация КАК Организация,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втТаблицаДокумента
	|ИЗ
	|	Документ.МодернизацияОС КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС.ОС КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаОтражения.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаОтражения.СчетУчета КАК СчетУчета,
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетАмортизации
	|ПОМЕСТИТЬ втСчетаОтражения
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&ПериодИсключая,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втТаблицаДокумента КАК Т)) КАК СчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансирования.ОсновноеСредство,
	|	ПараметрыЦелевогоФинансирования.СчетУчета,
	|	ПараметрыЦелевогоФинансирования.СчетАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансирования
	|ГДЕ
	|	ПараметрыЦелевогоФинансирования.Регистратор = &Ссылка
	|	И ПараметрыЦелевогоФинансирования.ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втТаблицаДокумента КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаДокумента.ОсновноеСредство,
	|	ЕСТЬNULL(ОстаткиСчетУчета.СуммаОстатокДт, 0) - ЕСТЬNULL(ОстаткиСчетАмортизации.СуммаОстатокКт, 0) КАК СуммаБУ,
	|	ЕСТЬNULL(ОстаткиСчетУчета.СуммаПРОстатокДт, 0) - ЕСТЬNULL(ОстаткиСчетАмортизации.СуммаПРОстатокКт, 0) КАК СуммаПР
	|ИЗ
	|	втТаблицаДокумента КАК втТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ГраницаКонецМесяца,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетУчета
	|					ИЗ
	|						втСчетаОтражения КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втТаблицаДокумента КАК Т)) КАК ОстаткиСчетУчета
	|		ПО втТаблицаДокумента.ОсновноеСредство = ОстаткиСчетУчета.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ГраницаКонецМесяца,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетАмортизации
	|					ИЗ
	|						втСчетаОтражения КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втТаблицаДокумента КАК Т)) КАК ОстаткиСчетАмортизации
	|		ПО втТаблицаДокумента.ОсновноеСредство = ОстаткиСчетАмортизации.Субконто1";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Стоимости = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Стоимости.Вставить(Выборка.ОсновноеСредство, Новый Структура("СуммаБУ, СуммаПР", Выборка.СуммаБУ, Выборка.СуммаПР));
	КонецЦикла;
	
	НачатьТранзакцию();
	
	#Область БлокировкаДанных
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", РеквизитыДокумента.Ссылка);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", РеквизитыДокумента.Ссылка);
	
	Блокировка.Заблокировать();
	
	#КонецОбласти
	
	НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(РеквизитыДокумента.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Стоимости.Получить(Запись.ОсновноеСредство) <> Неопределено Тогда
			Запись.СтоимостьДляВычисленияАмортизации = Стоимости.Получить(Запись.ОсновноеСредство).СуммаБУ;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСНалоговыйУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(РеквизитыДокумента.Ссылка);
	НаборЗаписей.Прочитать();
	
	
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Модернизация ОС';uk='Модернізація ОЗ'"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	УчетОСВызовСервера.ПрочиеРасходы(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ПартииПрочихРасходов(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	ПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	СобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СобытиеОС КАК СобытиеОС,
	|	ДанныеДокумента.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.МодернизацияОС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	УчетОСВызовСервера.ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДополнительныеСвойства);
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	Запрос.УстановитьПараметр("НазваниеДокумента", НСтр("ru='Модернизация ОС';uk='Модернізація ОЗ'"));
	Запрос.УстановитьПараметр("Граница", Новый Граница(НачалоМесяца(Реквизиты.Период), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ГраницаКонецМесяца", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
	
КонецПроцедуры

Процедура ВременнаяТаблицаПоТабличнойЧасти(ТекстыЗапроса)
	
	ИмяТаблицы = "ОсновныеСредства";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ОсновныеСредства
	|"+
	"ВЫБРАТЬ
	|	МодернизацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МодернизацияОСОС.Ссылка.Организация КАК Организация,
	|	МодернизацияОСОС.Ссылка.Подразделение КАК Подразделение,
	|	МодернизацияОСОС.Ссылка.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ ОсновныеСредства
	|ИЗ
	|	Документ.МодернизацияОС.ОС КАК МодернизацияОСОС
	|ГДЕ
	|	МодернизацияОСОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Подразделение"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСчетаУчетаОС(ТекстыЗапроса)
	
	ИмяТаблицы = "СчетаУчетаОС";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПоТабличнойЧасти(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица СчетаУчетаОС
	|"+
	"ВЫБРАТЬ
	|	ОсновныеСредства.ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетАмортизации
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				&Период,
	|				(Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						ОсновныеСредства.Организация,
	|						ОсновныеСредства.ОсновноеСредство
	|					ИЗ
	|						ОсновныеСредства КАК ОсновныеСредства)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|		ПО ОсновныеСредства.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
	|"+";";;
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСчетаУчетаОССгруппированные(ТекстыЗапроса)
	
	ИмяТаблицы = "СчетаУчетаОССгруппированные";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСчетаУчетаОС(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица СчетаУчетаОССгруппированные
	|"+
	"ВЫБРАТЬ
	|	СчетаУчетаОС.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаОССгруппированные
	|ИЗ
	|	СчетаУчетаОС КАК СчетаУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаУчетаОС.СчетАмортизации
	|ИЗ
	|	СчетаУчетаОС КАК СчетаУчетаОС
	|
	|"+";";;
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОстаткиПоСчетам(ТекстыЗапроса)
	
	ИмяТаблицы = "втОстаткиПоСчетам";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСчетаУчетаОССгруппированные(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОстаткиПоСчетам
	|"+
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ
	|ПОМЕСТИТЬ втОстаткиПоСчетам
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					СчетаУчетаОССгруппированные КАК Т),
	|			,
	|			(Организация, Подразделение, Субконто1, НаправлениеДеятельности) В
	|				(ВЫБРАТЬ
	|					ОсновныеСредства.Организация,
	|					ОсновныеСредства.Подразделение,
	|					ОсновныеСредства.ОсновноеСредство,
	|					ОсновныеСредства.НаправлениеДеятельности
	|				ИЗ
	|					ОсновныеСредства КАК ОсновныеСредства)) КАК ХозрасчетныйОстатки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСгруппированнаяНачисленнаяАмортизация(ТекстыЗапроса)
	
	ИмяТаблицы = "НачисленнаяАмортизация";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	УчетОСВызовСервера.ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица НачисленнаяАмортизация
	|"+
	"ВЫБРАТЬ
	|	НачисленнаяАмортизация.ОбъектУчета КАК ОсновноеСредство,
	|	СУММА(НачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(НачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ НачисленнаяАмортизация
	|ИЗ
	|	втНачисленнаяАмортизация КАК НачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленнаяАмортизация.ОбъектУчета"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаДанныеСчетаНакопленияСтоимости(ТекстыЗапроса)
	
	ИмяТаблицы = "втДанныеСчетаНакопленияСтоимости";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ДанныеСчетаНакопленияСтоимости
	|"+
	"ВЫБРАТЬ
	|	ДанныеСчетаНакопленияСтоимости.Субконто1 КАК ОсновноеСредство,
	|	СУММА(ДанныеСчетаНакопленияСтоимости.СуммаОборот) КАК СуммаБУ,
	|	СУММА(ДанныеСчетаНакопленияСтоимости.СуммаОборот) КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСчетаНакопленияСтоимости
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ГраницаКонецМесяца,
	|			Регистратор,
	|			Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств)),,
	|			(Организация, Подразделение, Субконто1, НаправлениеДеятельности) В
	|				(ВЫБРАТЬ
	|						ОсновныеСредства.Организация,
	|						ОсновныеСредства.Подразделение,
	|						ОсновныеСредства.ОсновноеСредство,
	|						ОсновныеСредства.НаправлениеДеятельности
	|					ИЗ
	|						ОсновныеСредства КАК ОсновныеСредства),,
	|			) КАК ДанныеСчетаНакопленияСтоимости
	|ГДЕ
	|	ДанныеСчетаНакопленияСтоимости.Регистратор <> &Ссылка
	|	И ДанныеСчетаНакопленияСтоимости.СуммаОборот <> 0
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСчетаНакопленияСтоимости.Субконто1"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаОС";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПоТабличнойЧасти(ТекстыЗапроса);
	ВременнаяТаблицаСчетаУчетаОС(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиПоСчетам(ТекстыЗапроса);
	ВременнаяТаблицаДанныеСчетаНакопленияСтоимости(ТекстыЗапроса);
	ВременнаяТаблицаСгруппированнаяНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ЕСТЬNULL(ПервоначальныеСведения.ПоказательНаработки, ЗНАЧЕНИЕ(Справочник.ПоказателиНаработки.ПустаяСсылка)) КАК ПоказательНаработки,
	|	ЕСТЬNULL(ДанныеСчетаНакопленияСтоимости.СуммаБУ, 0) КАК СтоимостьМодернизацииБУ,
	|	ЕСТЬNULL(ДанныеСчетаНакопленияСтоимости.СуммаНУ, 0) КАК СтоимостьМодернизацииНУ,
	|	ЕСТЬNULL(втОстаткиСтоимость.СуммаБУ, 0)- ЕСТЬNULL(-втОстаткиАмортизация.СуммаБУ, 0) - ЕСТЬNULL(НачисленнаяАмортизация.СуммаБУ, 0)
	|	+ ЕСТЬNULL(ДанныеСчетаНакопленияСтоимости.СуммаБУ, 0) КАК СтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСтоимость.СуммаНУ, 0) - ЕСТЬNULL(НачисленнаяАмортизация.СуммаНУ, 0) 
	|   - ЕСТЬNULL(-втОстаткиАмортизация.СуммаНУ, 0)
	|	+ ЕСТЬNULL(ДанныеСчетаНакопленияСтоимости.СуммаБУ, 0) КАК СтоимостьНУ
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.МодернизацияОС.ОС КАК ТаблицаОС
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
	|	ПО ТаблицаОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоСчетам КАК втОстаткиСтоимость
	|	ПО ТаблицаОС.ОсновноеСредство = втОстаткиСтоимость.ОсновноеСредство
	|	И (СчетаУчетаОС.СчетУчета = втОстаткиСтоимость.Счет)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоСчетам КАК втОстаткиАмортизация
	|	ПО (ТаблицаОС.ОсновноеСредство = втОстаткиАмортизация.ОсновноеСредство)
	|	И (СчетаУчетаОС.СчетАмортизации = втОстаткиАмортизация.Счет)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					ОсновныеСредства.Организация,
	|					ОсновныеСредства.ОсновноеСредство
	|				ИЗ
	|					ОсновныеСредства КАК ОсновныеСредства)) КАК ПервоначальныеСведения
	|	ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втДанныеСчетаНакопленияСтоимости КАК ДанныеСчетаНакопленияСтоимости
	|	ПО ТаблицаОС.ОсновноеСредство = ДанныеСчетаНакопленияСтоимости.ОсновноеСредство
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ НачисленнаяАмортизация КАК НачисленнаяАмортизация
	|	ПО ТаблицаОС.ОсновноеСредство = НачисленнаяАмортизация.ОсновноеСредство
	|	
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПараметрыАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСБУСрезПервых.СрокИспользованияДляВычисленияАмортизации
	|	- РАЗНОСТЬДАТ(ЕСТЬNULL(ПараметрыАмортизацииОСБУСрезПервых.Период, &Период), &Период, МЕСЯЦ) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации
	|	- ЕСТЬNULL(НаработкиОбъектовЭксплуатации.Значение, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьБУ КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ОсновныеСредства КАК Т)) КАК ПараметрыАмортизацииОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПервых(
	|				,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ОсновныеСредства КАК Т)) КАК ПараметрыАмортизацииОСБУСрезПервых
	|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыАмортизацииОСБУСрезПервых.ОсновноеСредство
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&ГраницаКонецМесяца,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство, Т.ПоказательНаработки
	|					ИЗ
	|						ТаблицаОС КАК Т)) КАК НаработкиОбъектовЭксплуатации
	|		ПО ТаблицаОС.ОсновноеСредство = НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПараметрыАмортизацииОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ПараметрыАмортизацииОСНУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСНУ.СрокИспользованияДляВычисленияАмортизации
	|	- РАЗНОСТЬДАТ(ЕСТЬNULL(ПараметрыАмортизацииОСНУ.Период, &Период), &Период, МЕСЯЦ) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьНУ КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ОсновныеСредства КАК Т)) КАК ПараметрыАмортизацииОСНУ
	|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыАмортизацииОСНУ.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СобытияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&Организация КАК Организация,
	|	
	|	&СобытиеОС КАК Событие,
	|	
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&Номер КАК НомерДокумента,
	|	ТаблицаОС.СтоимостьМодернизацииБУ КАК СуммаЗатратБУ,
	|	ТаблицаОС.СтоимостьМодернизацииНУ КАК СуммаЗатратНУ
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат УчетОСВызовСервера.ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР("МодернизацияОС")
		+ УчетОСВызовСервера.ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетам()
		+ ВременнаяТаблицаДанныеДокумента()
		+ ВременнаяТаблицаОстаткиСчетаКапитализации();

КонецФункции

Функция ВременнаяТаблицаДанныеДокумента()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ТаблицаДокумента.Подразделение КАК Местонахождение,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втДанныеДокумента
	|ИЗ
	|	Документ.МодернизацияОС КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС.ОС КАК ТабличнаяЧасть
	|		ПО ТаблицаДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&Дата,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Т.Организация
	|					ИЗ
	|						Документ.МодернизацияОС КАК Т
	|					ГДЕ
	|						Т.Ссылка = &Ссылка)) КАК УчетнаяПолитикаОрганизаций
	|		ПО ТаблицаДокумента.Организация = УчетнаяПолитикаОрганизаций.Организация
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка" + ";";
	
КонецФункции

Функция ВременнаяТаблицаОстаткиСчетаКапитализации()
	
	Возврат
	"ВЫБРАТЬ
	|	ДанныеУчета.Счет КАК Счет,
	|	ДанныеУчета.Субконто1 КАК ОсновноеСредство,
	|	СУММА(ДанныеУчета.СуммаОборот) КАК СуммаБУ,
	|	СУММА(ДанныеУчета.СуммаНУОборот) КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ГраницаМесяцОкончание,
	|			Регистратор,
	|           Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КапитальноеСтроительство), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеДругихНеоборотныхМатериальныхАктивов)),	
	|			,
	|			(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НаправлениеДеятельности,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втДанныеДокумента КАК Т),
	|			,
	|			) КАК ДанныеУчета
	|ГДЕ
	|	ДанныеУчета.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеУчета.Субконто1,
	|	ДанныеУчета.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.ОсновноеСредство,
	|	СУММА(втОстатки.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстатки.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втОстатки.СуммаПР) КАК СуммаПР,
	|	СУММА(втОстатки.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиСгруппированные
	|ИЗ
	|	втОстатки КАК втОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстатки.ОсновноеСредство
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.Счет КАК Счет,
	|	втОстатки.ОсновноеСредство,
	|	втОстатки.СуммаБУ КАК СуммаБУ,
	|	втОстатки.СуммаНУ КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСчетаКапитализации
	|ИЗ
	|	втОстатки КАК втОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеДокумента КАК втДанныеДокумента
	|		ПО втОстатки.ОсновноеСредство = втДанныеДокумента.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеСчетаКапитализации.ОсновноеСредство,
	|	СУММА(втДанныеСчетаКапитализации.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втДанныеСчетаКапитализации.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втДанныеСчетаКапитализации.СуммаПР) КАК СуммаПР,
	|	СУММА(втДанныеСчетаКапитализации.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСчетаКапитализацииСгруппированные
	|ИЗ
	|	втДанныеСчетаКапитализации КАК втДанныеСчетаКапитализации
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанныеСчетаКапитализации.ОсновноеСредство"
	+"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
	Разделитель = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	
	Возврат УчетОСВызовСервера.ТекстОтраженияВРеглУчетеНачисленнойАмортизации()
		+ Разделитель + УвеличениеСтоимостиОС();

КонецФункции	

Функция УвеличениеСтоимостиОС()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Увеличение стоимости ОС (Дт СчетУчета:: Кт 15ХХ)
	|ВЫБРАТЬ
	|	
	|	втДанныеДокумента.Ссылка КАК Ссылка,
	|	втДанныеДокумента.Дата КАК Период,
	|	втДанныеДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(втДанныеСчетаКапитализации.СуммаБУ, 0) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	втДанныеДокумента.Подразделение КАК ПодразделениеДт,
	|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|   НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	
	|	СчетаОтражения.СчетУчета КАК СчетДт,
	|	втДанныеДокумента.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА НалоговыеНазначенияОС.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|			ТОГДА 0
	|		ИНАЧЕ втДанныеСчетаКапитализации.СуммаБУ
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	втДанныеДокумента.Подразделение КАК ПодразделениеКт,
	|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|	
	|	втДанныеСчетаКапитализации.Счет КАК СчетКт,
	|	втДанныеДокумента.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(втДанныеСчетаКапитализации.СуммаНУ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Увеличение стоимости ОС"" КАК Содержание
	|ИЗ
	|	втДанныеДокумента КАК втДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеСчетаКапитализации
	|	ПО втДанныеДокумента.ОсновноеСредство = втДанныеСчетаКапитализации.ОсновноеСредство
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО втДанныеДокумента.ОсновноеСредство = СчетаОтражения.ОбъектУчета
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|		ПО втДанныеДокумента.ОсновноеСредство = НалоговыеНазначенияОС.ОбъектУчета	
	|";
	
КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	// Акт о приеме-сдаче ОС (ОС-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ2";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-2';uk='Форма ОЗ-2'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюУТКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
		
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ2") Тогда

		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ2", НСтр("ru='Форма ОЗ-2';uk='Форма ОЗ-2'"), 
			ПечатьОЗ2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), , );

	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ унифицированной формы ОЗ-2
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме ОЗ-2.
//
Функция ПечатьОЗ2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ2");
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_ОЗ2";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		
		Запрос       = Новый Запрос;
		Запрос.УстановитьПараметр("Период"            , Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация"    , Ссылка.Организация);
		Запрос.УстановитьПараметр("ГлавныйБухгалтер"  , Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
		Запрос.УстановитьПараметр("РуководительОтдела", Ссылка.РуководительОтдела);
		Запрос.УстановитьПараметр("Сдал"              , Ссылка.Сдал);
		Запрос.УстановитьПараметр("Принял"            , Ссылка.Принял);
		Запрос.УстановитьПараметр("Ссылка"            , Ссылка.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МодернизацияОС.Организация.НаименованиеПолное                КАК Организация,
		|	МодернизацияОС.Организация.КодПоЕДРПОУ                                   КАК ЕДРПОУ,
		|	МодернизацияОС.Номер                                          КАК НомерАкта,
		|	МодернизацияОС.Дата                                           КАК ДатаАкта,
		|	МодернизацияОС.СобытиеОС                                      КАК ВидОперации,
		|	Хозрасчетный.СчетКт                 						  КАК СчетКт,
		|	МодернизацияОС.ДатаНачалаМодернизации                         КАК ДатаНачала,
		|	МодернизацияОС.ДатаОкончанияМодернизации                      КАК ДатаОкончания,
		|	МодернизацияОС.ЧтоНеВыполнено                                 КАК ЧтоНеВыполнено,
		|	МодернизацияОС.ЧтоИзменилось                                  КАК ЧтоИзменилось,
		|	РАЗНОСТЬДАТ(МодернизацияОС.ДатаНачалаМодернизации,
		|	            МодернизацияОС.ДатаОкончанияМодернизации,
		|	            ДЕНЬ)                                             КАК КоличествоДней
		|ИЗ
		|	Документ.МодернизацияОС КАК МодернизацияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
		|		ПО (Хозрасчетный.Регистратор = МодернизацияОС.Ссылка)
		|ГДЕ
		|	МодернизацияОС.Ссылка = &Ссылка
		|	И НЕ Хозрасчетный.СчетДт.Забалансовый
		|	И Хозрасчетный.СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств))";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();

		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка.Ссылка);
		Запрос.УстановитьПараметр("Период",         Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		
		СписокОС = Ссылка.ОС.ВыгрузитьКолонку("ОсновноеСредство");
		Запрос.УстановитьПараметр("СписокОС",       СписокОС);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МодернизацияОСОС.ОсновноеСредство.ЗаводскойНомер       КАК ЗаводскойНомер,
		|	МодернизацияОСОС.ОсновноеСредство.НаименованиеПолное   КАК ОсновноеСредствоНаименование,
		//|	ВЫБОР
		//|		КОГДА НЕ (МодернизацияОСОС.Ссылка.ВидУлучшения = ЗНАЧЕНИЕ(Перечисление.ВидыУлучшения.Ремонт))
		//|			ТОГДА МодернизацияОСОС.СуммаМодернизацииБУ
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК СуммаМодернизации,
		|	Хозрасчетный.Сумма 									   КАК СуммаМодернизации,
		//|	ВЫБОР
		//|		КОГДА МодернизацияОСОС.Ссылка.ВидУлучшения = ЗНАЧЕНИЕ(Перечисление.ВидыУлучшения.Ремонт)
		//|			ТОГДА МодернизацияОСОС.СуммаМодернизацииБУ
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК СуммаРемонта,
		|	Хозрасчетный.Сумма                   	   			   КАК СуммаМодернизацииИРемонта,
		|	СчетаБухгалтерскогоУчетаОС.СчетУчета                   КАК СчетДт,
		|	ПервоначальныеСведенияОС.ИнвентарныйНомер              КАК ИнвентарныйНомер,
		|	МестонахождениеОС.МОЛ.Код                              КАК КодМОЛа,
		|	МестонахождениеОС.Местонахождение.Наименование         КАК Подразделение
		|ИЗ
		|	Документ.МодернизацияОС.ОС КАК МодернизацияОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|		                    &Период,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК СчетаБухгалтерскогоУчетаОС
		|		ПО МодернизацияОСОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|		                    &Период,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОС
		|		ПО МодернизацияОСОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|		                    &Период,
		|		                    Организация = &ТекОрганизация
		|		                    И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
		|		ПО МодернизацияОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто КАК Хозрасчетный
		|		ПО (Хозрасчетный.Регистратор = МодернизацияОСОС.Ссылка
		|		    И Хозрасчетный.СубконтоДт1 = МодернизацияОСОС.ОсновноеСредство)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты КАК ХозрасчетныйОбороты
		//|		ПО (ХозрасчетныйОбороты.Субконто1 = МодернизацияОСОС.ОсновноеСредство)
		|ГДЕ
		|	МодернизацияОСОС.Ссылка = &Ссылка
		|	И СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств))";
		
			
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		НеПервая = Ложь;
		
		Пока Выборка.Следующий() Цикл
			
			Если НеПервая Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ2");
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоШапке);
					
			ОбластьМакета.Параметры.Заполнить(Выборка);
			
			ОсновныеСотрудникиФизическихЛицПринял = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(Ссылка.Принял, Истина, Ссылка.Организация, Ссылка.Дата);
			Если ЗначениеЗаполнено(ОсновныеСотрудникиФизическихЛицПринял) Тогда
				Для каждого Строка Из ОсновныеСотрудникиФизическихЛицПринял Цикл
				    ДанныеФизЛицаПолучил = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Строка.Сотрудник, "Должность", Ссылка.Дата);			
				КонецЦикла;
				Для каждого СтрокаДанныеПолучил Из ДанныеФизЛицаПолучил Цикл			
					ОбластьМакета.Параметры.ПринялДолжность = СтрокаДанныеПолучил.Должность;
					ОбластьМакета.Параметры.Принял 			= СтрокаДанныеПолучил.ФизическоеЛицо;			
				КонецЦикла;
			КонецЕсли;
			ОсновныеСотрудникиФизическихЛицСдал = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(Ссылка.Сдал, Истина, Ссылка.Организация, Ссылка.Дата);
			Если ЗначениеЗаполнено(ОсновныеСотрудникиФизическихЛицСдал) Тогда		
				Для каждого Строка Из ОсновныеСотрудникиФизическихЛицСдал Цикл
					ДанныеФизЛицаСдал = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Строка.Сотрудник, "Должность", Ссылка.Дата);
				КонецЦикла;
				Для каждого СтрокаДанныеСдал Из ДанныеФизЛицаСдал Цикл
					ОбластьМакета.Параметры.СдалДолжность 	= СтрокаДанныеСдал.Должность;
					ОбластьМакета.Параметры.Сдал	 		= СтрокаДанныеСдал.ФизическоеЛицо;
				КонецЦикла;			
			КонецЕсли;
			ОсновныеСотрудникиФизическихЛицРуководительОтдела = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(Ссылка.РуководительОтдела, Истина, Ссылка.Организация, Ссылка.Дата); 
			Если ЗначениеЗаполнено(ОсновныеСотрудникиФизическихЛицРуководительОтдела) Тогда
				Для каждого СтрокаДанныеРуководительОтдела Из ОсновныеСотрудникиФизическихЛицРуководительОтдела Цикл
					ДанныеФизЛицаРуководительОтдела = КадровыйУчет.КадровыеДанныеСотрудников(Истина, СтрокаДанныеРуководительОтдела.Сотрудник, "Должность", Ссылка.Дата);
				КонецЦикла;
				Для каждого СтрокаДанныеРуководительОтдела Из ДанныеФизЛицаРуководительОтдела Цикл
					ОбластьМакета.Параметры.РуководительОтдела = СтрокаДанныеРуководительОтдела.ФизическоеЛицо;
				КонецЦикла;
			КонецЕсли;
			ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);

			ОбластьМакета.Параметры.ГлавныйБухгалтер 	= ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			НеПервая = Истина;
		
		КонецЦикла;
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьОЗ2()


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ОбработчикОбновления_2_1_3_ОтметитьКОбработке(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.МодернизацияОС КАК Операция
	|ГДЕ
	|	Операция.ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.ПустаяСсылка)";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработчикОбновления_2_1_3(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.МодернизацияОС";
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ЗначенияЗаполнения = Новый Структура("ВариантПримененияЦелевогоФинансирования", Перечисления.ВариантыПримененияЦелевогоФинансирования.НеИспользуется);
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.МодернизацияОС");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ЗначенияЗаполнения);
		
		ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			
			ОбработаноОбъектов = ОбработаноОбъектов - 1;
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru='Не удалось заполнить новые реквизиты значениями по умолчанию
                |в документе ""%1"" по причине:
                |%2'
                |;uk='Не вдалося заповнити нові реквізити значеннями по умовчанню
                |в документі ""%1"" з причини:
                |%2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(),
				Выборка.Ссылка,
				ТекстСообщения);
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не выполнено заполние новых реквизитов значениями по умолчанию для некоторых документов модернизация ОС (пропущены): %1';uk='Не виконано заповнення нових реквізитів значеннями по умовчанню для деяких документів Модернізація ОЗ (пропущені): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	УчетОСВызовСервера.ЗаполнитьВходящиеДанныеАмортизации(ВходящиеДанные);
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

