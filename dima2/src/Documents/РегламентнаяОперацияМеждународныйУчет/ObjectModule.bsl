#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ТекущаяОрганизация", "");
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипОперации = Перечисления.ТипыРегламентныхОперацийМеждународныйУчет.ЗакрытиеСчетовДоходовРасходов Тогда
		ПроверитьДублиДокументовТекущегоПериода(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	УчетнаяПолитикаЗаполнена();
	
	ТипыОпераций = Перечисления.ТипыРегламентныхОперацийМеждународныйУчет;
	Если ТипОперации = ТипыОпераций.ЗакрытиеСчетовДоходовРасходов Тогда
		ЗакрытиеСчетовУчетаДоходовРасходов(Отказ);
		
	Иначе
		РасчетКурсовыхРазниц();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УчетнаяПолитикаЗаполнена()
	
	Отбор = Новый Структура("Организация", Организация);
	УчетныеПолитики = РегистрыСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета.СрезПоследних(КонецДня(Дата),Отбор);
	Если УчетныеПолитики.Количество() Тогда
		УчетнаяПолитикаОрганизации = УчетныеПолитики[0].УчетнаяПолитика;
	Иначе
		Шаблон = НСтр("ru='Для организации ""%1"" не задана учетная политика';uk='Для організації ""%1"" не задана облікова політика'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Организация);
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Если ТипОперации = Перечисления.ТипыРегламентныхОперацийМеждународныйУчет.ЗакрытиеСчетовДоходовРасходов Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяПолитикаОрганизации,"СчетУчетаДоходов,СчетУчетаРасходов,СчетУчетаНераспределеннойПрибылиУбытка,СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
		Если НЕ (ЗначениеЗаполнено(Реквизиты.СчетУчетаДоходов) И ЗначениеЗаполнено(Реквизиты.СчетаДоходов)
			ИЛИ ЗначениеЗаполнено(Реквизиты.СчетУчетаРасходов) И ЗначениеЗаполнено(Реквизиты.СчетаРасходов)
			ИЛИ ЗначениеЗаполнено(Реквизиты.СчетУчетаНераспределеннойПрибылиУбытка) И ЗначениеЗаполнено(Реквизиты.СчетаПрибылейУбытков)) Тогда
			
			Шаблон = НСтр("ru='Для организации ""%1"" в учетной политике не заданы счета закрытия периода';uk='Для організації ""%1"" в обліковій політиці не задані рахунки закриття періоду'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Организация);
			ВызватьИсключение Текст;
			
		КонецЕсли;
		
	Иначе
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяПолитикаОрганизации,"ДоходыКР,РасходыКР,ДоходыОтРазницПриПересчетеВП,РасходыОтРазницПриПересчетеВП");
		Если НЕ (ЗначениеЗаполнено(Реквизиты.ДоходыКР) И ЗначениеЗаполнено(Реквизиты.РасходыКР)
			ИЛИ ЗначениеЗаполнено(Реквизиты.ДоходыОтРазницПриПересчетеВП) И ЗначениеЗаполнено(Реквизиты.РасходыОтРазницПриПересчетеВП)) Тогда
			
			Шаблон = НСтр("ru='Для организации ""%1"" в учетной политике не заданы счета учета курсовых разниц';uk='Для організації ""%1"" в обліковій політиці не задані рахунки обліку курсових різниць'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Организация);
			ВызватьИсключение Текст;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДублиДокументовТекущегоПериода(Отказ)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Т.Ссылка
		|ИЗ
		|	Документ.РегламентнаяОперацияМеждународныйУчет КАК Т
		|ГДЕ
		|	Т.Проведен
		|	И Т.Организация = &Организация
		|	И Т.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
		|	И НЕ Т.Ссылка = &ТекущийДокумент
		|	И Т.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОперацийМеждународныйУчет.ЗакрытиеСчетовДоходовРасходов)");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ПериодНачало", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ПериодОкончание", КонецМесяца(Дата));
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='В указанном периоде уже существует аналогичный документ. Операция не выполнена.';uk='У зазначеному періоді вже існує аналогічний документ. Операція не виконана.'"),,,,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗакрытиеСчетовУчетаДоходовРасходов(Отказ)
	
	НаДату = КонецМесяца(Дата);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", НаДату);
	Запрос.УстановитьПараметр("Граница", Новый Граница(НаДату, ВидГраницы.Включая));
	
	Запрос.Текст = ТекстЗапросаПроводок("СчетУчетаДоходов", "СчетаДоходов", НСтр("ru='Закрытие доходов';uk='Закриття доходів'"));
	ЗаписатьПроводки(Запрос, Отказ, Истина);
	
	Запрос.Текст = ТекстЗапросаПроводок("СчетУчетаРасходов", "СчетаРасходов", НСтр("ru='Закрытие расходов';uk='Закриття витрат'"));
	ЗаписатьПроводки(Запрос, Отказ);
	
	Запрос.Текст = ТекстЗапросаПроводок("СчетУчетаНераспределеннойПрибылиУбытка", "СчетаПрибылейУбытков", НСтр("ru='Нераспредленная прибыль\убыток';uk='Нерозподілений прибуток\збиток'"));
	ЗаписатьПроводки(Запрос, Отказ);
	
	Движения.Международный.Записывать = Ложь;
	
КонецПроцедуры

Процедура РасчетКурсовыхРазниц()
	
	ВалютаМеждународногоУчета = МеждународнаяОтчетностьВызовСервера.УчетнаяВалюта();
	ФункциональнаяВалюта = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаМеждународногоУчета.Функциональная, Дата);
	ВалютаПредставления = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаМеждународногоУчета.Представления, Дата);
	
	НаДату = КонецДня(Дата);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", НаДату);
	Запрос.УстановитьПараметр("Граница", Новый Граница(НаДату, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КурсФВ", ФункциональнаяВалюта.Курс);
	Запрос.УстановитьПараметр("КратностьФВ", ФункциональнаяВалюта.Кратность);
	Запрос.УстановитьПараметр("КурсВП", ВалютаПредставления.Курс);
	Запрос.УстановитьПараметр("КратностьВП", ВалютаПредставления.Кратность);
	
	ТипыОпераций = Перечисления.ТипыРегламентныхОперацийМеждународныйУчет;
	КоличествоВПорции = 1000;
	Если ТипОперации = ТипыОпераций.РасчетКурсовыхРазницВалютаПредставления Тогда
		Запрос.Текст = ТекстЗапросаКурсовыхРазницВалютаПредставления();
		ВсегоПорций = Документы.РегламентнаяОперацияМеждународныйУчет.НепересчитаноВВалютуПредставления(Организация, Дата)/КоличествоВПорции;
		Шаблон = НСтр("ru='Для организации ""%1"" за %2 расчет курсовых разниц в валюте представления не требутся';uk='Для організації ""%1"" за %2 розрахунок курсових різниць у валюті подання не потрібен'");
	Иначе
		Запрос.Текст = ТекстЗапросаКурсовыхРазницФункциональнаяВалюта();
		ВсегоПорций = Документы.РегламентнаяОперацияМеждународныйУчет.НезакрытыеКурсовыеРазницы(Организация, Дата)/КоличествоВПорции;
		Шаблон = НСтр("ru='Для организации ""%1"" за %2 расчет курсовых разниц в функциональной валюте не требутся';uk='Для організації ""%1"" за %2 розрахунок курсових різниць у функціональній валюті не потрібен'");
	КонецЕсли;
	
	Если ВсегоПорций = 0 Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Организация, Формат(Дата, "ДФ='MMMM yyyy'"));
		ВызватьИсключение Текст;
	КонецЕсли;
	
	Замещать = Истина;
	Для НомерПорции = 0 По ВсегоПорций Цикл
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Прервать;
		КонецЕсли;

		// Обход порции результата запроса
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Проводка = СформироватьПроводкуПоКурсовойРазнице(Выборка);
			Если ТипОперации = ТипыОпераций.РасчетКурсовыхРазницВалютаПредставления Тогда
				Проводка.Содержание = НСтр("ru='Корректировка курса валюты представления';uk='Коригування курсу валюти представлення'");
				Проводка.Сумма = 0;
			Иначе
				Проводка.Содержание = НСтр("ru='Курсовая разница';uk='Курсова різниця'");
				Проводка.СуммаПредставления = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(Проводка.Сумма,ФункциональнаяВалюта,ВалютаПредставления);
			КонецЕсли;
			
		КонецЦикла;// обработки порции
		
		Движения.Международный.Записать(Замещать);
		Замещать = Ложь;

	КонецЦикла;// по всем порциям
	
	Движения.Международный.Записывать = Ложь;
	
КонецПроцедуры

Функция СформироватьПроводкуПоКурсовойРазнице(Выборка)
	
	Проводка = Движения.Международный.Добавить();
	Проводка.Активность = Истина;
	Проводка.Период = Выборка.Период;
	Проводка.Организация = Выборка.Организация;
	
	СуммаРазницы = Макс(Выборка.КурсоваяРазница, -Выборка.КурсоваяРазница);
	Если Выборка.КурсоваяРазница > 0 Тогда// отразим прибыль
		Счет = "Дт";
		Кор = "Кт";
		КорСчет = Выборка.Доходы;
		КорСубконто = Выборка.СтатьяДоходов;
		КорВидСубконто = Выборка.ВидСубконтоСтатьиДоходов;
		КорВалютный = Выборка.ДоходыВалютный;
		
	Иначе// отразим убытки
		Счет = "Кт";
		Кор = "Дт";
		КорСчет = Выборка.Расходы;
		КорСубконто = Выборка.СтатьяРасходов;
		КорВидСубконто = Выборка.ВидСубконтоСтатьиРасходов;
		КорВалютный = Выборка.РасходыВалютный;
		
	КонецЕсли;
	
	// заполним счет и аналитику возникновения курсовой разницы
	Проводка["Счет"+Счет] = Выборка.Счет;
	Проводка["Валюта"+Счет] = Выборка.Валюта;
	Проводка["Подразделение"+Счет] = Выборка.Подразделение;
	ВидыСубконто = Выборка.ВидыСубконтоСчета.Выгрузить();
	Для Каждого стр Из ВидыСубконто Цикл
		Проводка["Субконто" + Счет][стр.ВидСубконто] = Выборка["Субконто"+стр.НомерСтроки];
	КонецЦикла;
	
	// заполним счет учета прибыли\убытка от курсовой разницы
	Проводка["Счет" + Кор] = КорСчет;
	Если КорВалютный Тогда
		Проводка["Валюта"+Кор] = Выборка.Валюта;
	КонецЕсли;
	Проводка["Подразделение"+Кор] = Выборка.Подразделение;
	Проводка["Субконто" + Кор][КорВидСубконто] = КорСубконто;
	
	Проводка.Сумма = СуммаРазницы;
	Проводка.СуммаПредставления = Проводка.Сумма;
	Возврат Проводка;
	
КонецФункции

Процедура ЗаписатьПроводки(Запрос, Отказ, Замещать = Ложь)
	
	Проводки = Запрос.Выполнить().Выгрузить();
	Если Проводки.Количество() Тогда
		ПроведениеСервер.ОтразитьДвижения(Проводки, Движения.Международный, Отказ);
		Движения.Международный.Записать(Замещать);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПроводок(ИмяПоляСчета, ИмяТабЧастиСчетов, СодержаниеПроводки)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийМУ.Организация,
	|	УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика,
	|	УчетныеПолитики.СчетУчетаДоходов КАК СчетУчета,
	|	УчетныеПолитики.СчетУчетаДоходов.Вид КАК ВидСчетаУчета
	|ПОМЕСТИТЬ втСчетаЗакрытия
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета.СрезПоследних(&Дата, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийМУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитики КАК УчетныеПолитики
	|		ПО УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика = УчетныеПолитики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСчетаЗакрытия.УчетнаяПолитика,
	|	ЗакрываемыеСчета.Счет
	|ПОМЕСТИТЬ втЗакрываемыеСчета
	|ИЗ
	|	втСчетаЗакрытия КАК втСчетаЗакрытия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитики.СчетаДоходов КАК ЗакрываемыеСчета
	|		ПО втСчетаЗакрытия.УчетнаяПолитика = ЗакрываемыеСчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	ВЫБОР
	|		КОГДА МеждународныйОстатки.Счет.Валютный
	|			ТОГДА МеждународныйОстатки.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Валюта,
	|	МеждународныйОстатки.СуммаОстатокДт + МеждународныйОстатки.СуммаОстатокКт КАК Сумма,
	|	МеждународныйОстатки.СуммаОстатокДт КАК СуммаДт,
	|	МеждународныйОстатки.СуммаПредставленияОстатокДт + МеждународныйОстатки.СуммаПредставленияОстатокКт КАК СуммаПредставления,
	|	МеждународныйОстатки.ВалютнаяСуммаОстатокДт + МеждународныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСумма,
	|	МеждународныйОстатки.ВалютнаяСуммаОстатокДт КАК ВалютнаяСуммаДт,
	|	МеждународныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСуммаКт,
	|	МеждународныйОстатки.Счет.Вид КАК ВидСчета
	|ПОМЕСТИТЬ втОстаткиСчетов
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Граница,
	|			Счет В (ВЫБРАТЬ Т.Счет ИЗ втЗакрываемыеСчета КАК Т),
	|			,
	|			Организация = &Организация) КАК МеждународныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Закроем АКТИВНЫЕ счета
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	втОстаткиСчетов.Организация КАК Организация,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	втСчетаЗакрытия.СчетУчета КАК СчетДт,
	|	
	|	втОстаткиСчетов.Подразделение КАК ПодразделениеКт,
	|	втОстаткиСчетов.Валюта КАК ВалютаКт,
	|	втОстаткиСчетов.Счет КАК СчетКт,
	|	
	|	втОстаткиСчетов.Сумма КАК Сумма,
	|	втОстаткиСчетов.СуммаПредставления КАК СуммаПредставления,
	|	0 КАК ВалютнаяСумма,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	втОстаткиСчетов.ВалютнаяСумма КАК ВалютнаяСуммаКт,
	|	
	|	""%1"" КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК ШаблонПроводки,
	|	НЕОПРЕДЕЛЕНО КАК ТипПроводки,
	|	втОстаткиСчетов.ВидСчета
	|ИЗ
	|	втОстаткиСчетов КАК втОстаткиСчетов,
	|	втСчетаЗакрытия КАК втСчетаЗакрытия
	|ГДЕ
	|	втОстаткиСчетов.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Закроем ПАССИВНЫЕ счета
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	втОстаткиСчетов.Организация КАК Организация,
	|	
	|	втОстаткиСчетов.Подразделение КАК ПодразделениеДт,
	|	втОстаткиСчетов.Валюта КАК ВалютаДт,
	|	втОстаткиСчетов.Счет КАК СчетДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	втСчетаЗакрытия.СчетУчета КАК СчетКт,
	|	
	|	втОстаткиСчетов.Сумма КАК Сумма,
	|	втОстаткиСчетов.СуммаПредставления КАК СуммаПредставления,
	|	0 КАК ВалютнаяСумма,
	|	
	|	втОстаткиСчетов.ВалютнаяСумма КАК ВалютнаяСуммаДт,
	|	0 КАК ВалютнаяСуммаКт,
	|	
	|	""%1"" КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК ШаблонПроводки,
	|	НЕОПРЕДЕЛЕНО КАК ТипПроводки,
	|	втОстаткиСчетов.ВидСчета
	|ИЗ
	|	втОстаткиСчетов КАК втОстаткиСчетов,
	|	втСчетаЗакрытия КАК втСчетаЗакрытия
	|ГДЕ
	|	втОстаткиСчетов.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Закроем АКТИВНО-ПАССИВНЫЕ счета
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	втОстаткиСчетов.Организация КАК Организация,
	|	
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаДт > 0
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втОстаткиСчетов.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаДт > 0
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ втОстаткиСчетов.Валюта
	|	КОНЕЦ КАК ВалютаДт,
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаДт > 0
	|		ТОГДА втСчетаЗакрытия.СчетУчета
	|		ИНАЧЕ втОстаткиСчетов.Счет
	|	КОНЕЦ КАК СчетДт,
	|	
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаДт > 0
	|		ТОГДА втОстаткиСчетов.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаДт > 0
	|		ТОГДА втОстаткиСчетов.Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаКт,
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаДт > 0
	|		ТОГДА втОстаткиСчетов.Счет
	|		ИНАЧЕ втСчетаЗакрытия.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	
	|	ВЫБОР КОГДА  втОстаткиСчетов.Сумма < 0
	|		ТОГДА -втОстаткиСчетов.Сумма
	|		ИНАЧЕ втОстаткиСчетов.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА втОстаткиСчетов.СуммаПредставления < 0
	|		ТОГДА -втОстаткиСчетов.СуммаПредставления
	|		ИНАЧЕ втОстаткиСчетов.СуммаПредставления
	|	КОНЕЦ КАК СуммаПредставления,
	|	
	|	0 КАК ВалютнаяСумма,
	|	ВЫБОР КОГДА втОстаткиСчетов.Сумма > 0
	|		ТОГДА 0
	|		ИНАЧЕ втОстаткиСчетов.ВалютнаяСумма
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	ВЫБОР КОГДА втОстаткиСчетов.Сумма > 0
	|		ТОГДА втОстаткиСчетов.ВалютнаяСумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	
	|	""%1"" КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК ШаблонПроводки,
	|	НЕОПРЕДЕЛЕНО КАК ТипПроводки,
	|	втОстаткиСчетов.ВидСчета
	|ИЗ
	|	втОстаткиСчетов КАК втОстаткиСчетов,
	|	втСчетаЗакрытия КАК втСчетаЗакрытия
	|ГДЕ
	|	втОстаткиСчетов.ВидСчета = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СчетУчетаДоходов" , ИмяПоляСчета);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СчетаДоходов"		, ИмяТабЧастиСчетов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", СодержаниеПроводки);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКурсовыхРазницФункциональнаяВалюта()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийМУ.Организация КАК Организация,
	|	УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика,
	|	УчетныеПолитики.ДоходыКР КАК ДоходыКР,
	|	УчетныеПолитики.СтатьяДоходовКР КАК СтатьяДоходовКР,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиДоходов) КАК ВидСубконтоСтатьиДоходов,
	|	УчетныеПолитики.РасходыКР КАК РасходыКР,
	|	УчетныеПолитики.СтатьяРасходовКР КАК СтатьяРасходовКР,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиРасходов) КАК ВидСубконтоСтатьиРасходов,
	|	УчетныеПолитики.ДоходыКР.Валютный КАК ДоходыВалютный,
	|	УчетныеПолитики.РасходыКР.Валютный КАК РасходыВалютный
	|ПОМЕСТИТЬ втСчетаУчетаКР
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета.СрезПоследних(&Дата, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийМУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитики КАК УчетныеПолитики
	|		ПО УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика = УчетныеПолитики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ПОМЕСТИТЬ втКурсВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.Валюта,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто3,
	|	СУММА(МеждународныйОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток
	|ПОМЕСТИТЬ втОстаткиСчетов
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Граница,
	|			Счет.Валютный
	|				И НЕ Счет.ИсключитьИзРасчетаКурсовыхРазниц,
	|			,
	|			Организация = &Организация) КАК МеждународныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто1
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто1.Ссылка
	|			И (МеждународныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто2
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто2.Ссылка
	|			И (МеждународныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто3
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто3.Ссылка
	|			И (МеждународныйВидыСубконто3.НомерСтроки = 3)
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	&Дата КАК Период,
	|	ОстаткиСчетов.Счет,
	|	ОстаткиСчетов.Счет.Вид КАК ВидСчета,
	|	ОстаткиСчетов.Организация,
	|	ОстаткиСчетов.Подразделение,
	|	ОстаткиСчетов.Счет.ВидыСубконто.(
	|		НомерСтроки КАК НомерСтроки,
	|		ВидСубконто КАК ВидСубконто
	|	) КАК ВидыСубконтоСчета,
	|	ОстаткиСчетов.Субконто1,
	|	ОстаткиСчетов.Субконто2,
	|	ОстаткиСчетов.Субконто3,
	|	втКурсВалют.Курс,
	|	втКурсВалют.Кратность,
	|	ОстаткиСчетов.Валюта КАК Валюта,
	|	ОстаткиСчетов.ВалютнаяСуммаОстаток,
	|	ВЫРАЗИТЬ(ОстаткиСчетов.ВалютнаяСуммаОстаток * втКурсВалют.Курс / втКурсВалют.Кратность / &КурсФВ * &КратностьФВ КАК ЧИСЛО(15, 2)) КАК ВалСуммаФВ,
	|	ОстаткиСчетов.СуммаОстаток,
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.ВалютнаяСуммаОстаток * втКурсВалют.Курс / втКурсВалют.Кратность / &КурсФВ * &КратностьФВ КАК ЧИСЛО(15, 2))) - ОстаткиСчетов.СуммаОстаток КАК КурсоваяРазница,
	|	ОстаткиСчетов.Счет.Порядок КАК СчетПорядок,
	|	втСчетаУчетаКР.ДоходыКР КАК Доходы,
	|	втСчетаУчетаКР.СтатьяДоходовКР КАК СтатьяДоходов,
	|	втСчетаУчетаКР.ВидСубконтоСтатьиДоходов,
	|	ЕСТЬNULL(втСчетаУчетаКР.ДоходыВалютный, ЛОЖЬ) КАК ДоходыВалютный,
	|	втСчетаУчетаКР.РасходыКР КАК Расходы,
	|	втСчетаУчетаКР.СтатьяРасходовКР КАК СтатьяРасходов,
	|	втСчетаУчетаКР.ВидСубконтоСтатьиРасходов,
	|	ЕСТЬNULL(втСчетаУчетаКР.РасходыВалютный, ЛОЖЬ) КАК РасходыВалютный
	|ИЗ
	|	втОстаткиСчетов КАК ОстаткиСчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсВалют КАК втКурсВалют
	|		ПО ОстаткиСчетов.Валюта = втКурсВалют.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаУчетаКР КАК втСчетаУчетаКР
	|		ПО ОстаткиСчетов.Организация = втСчетаУчетаКР.Организация
	|ГДЕ
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.ВалютнаяСуммаОстаток * втКурсВалют.Курс / втКурсВалют.Кратность / &КурсФВ * &КратностьФВ КАК ЧИСЛО(15, 2))) - ОстаткиСчетов.СуммаОстаток <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетПорядок";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКурсовыхРазницВалютаПредставления()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийМУ.Организация,
	|	УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика,
	|	УчетныеПолитики.ДоходыОтРазницПриПересчетеВП КАК Доходы,
	|	УчетныеПолитики.СтатьяДоходовОтРазницПересчета КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиДоходов) КАК ВидСубконтоСтатьиДоходов,
	|	УчетныеПолитики.РасходыОтРазницПриПересчетеВП КАК Расходы,
	|	УчетныеПолитики.СтатьяРасходовОтРазницПересчета КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиРасходов) КАК ВидСубконтоСтатьиРасходов,
	|	УчетныеПолитики.ДоходыОтРазницПриПересчетеВП.Валютный КАК ДоходыВалютный,
	|	УчетныеПолитики.РасходыОтРазницПриПересчетеВП.Валютный КАК РасходыВалютный
	|ПОМЕСТИТЬ втСчетаУчета
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета.СрезПоследних(&Дата, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийМУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитики КАК УчетныеПолитики
	|		ПО УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика = УчетныеПолитики.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийМУ.Организация,
	|	УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика,
	|	УчетныеПолитикиИсключитьИзПересчетаВП.Счет
	|ПОМЕСТИТЬ втСчетаИсключения
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизацийДляМеждународногоУчета.СрезПоследних(&Дата, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийМУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитики.ИсключитьИзПересчетаВП КАК УчетныеПолитикиИсключитьИзПересчетаВП
	|		ПО УчетнаяПолитикаОрганизацийМУ.УчетнаяПолитика = УчетныеПолитикиИсключитьИзПересчетаВП.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втСчетаУчета.Организация,
	|	втСчетаУчета.УчетнаяПолитика,
	|	втСчетаУчета.Доходы
	|ИЗ
	|	втСчетаУчета КАК втСчетаУчета
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втСчетаУчета.Организация,
	|	втСчетаУчета.УчетнаяПолитика,
	|	втСчетаУчета.Расходы
	|ИЗ
	|	втСчетаУчета КАК втСчетаУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Кратность
	|ПОМЕСТИТЬ втКурсВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, ) КАК КурсыВалютСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МеждународныйОстатки.Счет,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.Валюта,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто1,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто2,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Субконто3,
	|	СУММА(МеждународныйОстатки.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток,
	|	СУММА(МеждународныйОстатки.СуммаПредставленияОстаток) КАК СуммаПредставленияОстаток
	|ПОМЕСТИТЬ втОстаткиСчетов
	|ИЗ
	|	РегистрБухгалтерии.Международный.Остатки(
	|			&Граница,
	|			НЕ Счет В (ВЫБРАТЬ втСчетаИсключения.Счет ИЗ втСчетаИсключения),
	|			,
	|			Организация = &Организация) КАК МеждународныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто1
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто1.Ссылка
	|			И (МеждународныйВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто2
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто2.Ссылка
	|			И (МеждународныйВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Международный.ВидыСубконто КАК МеждународныйВидыСубконто3
	|		ПО МеждународныйОстатки.Счет = МеждународныйВидыСубконто3.Ссылка
	|			И (МеждународныйВидыСубконто3.НомерСтроки = 3)
	|
	|СГРУППИРОВАТЬ ПО
	|	МеждународныйОстатки.Счет,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто1.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто2.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто2
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МеждународныйВидыСубконто3.Валютный
	|			ТОГДА МеждународныйОстатки.Субконто3
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	МеждународныйОстатки.Организация,
	|	МеждународныйОстатки.Подразделение,
	|	МеждународныйОстатки.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	&Дата КАК Период,
	|	ОстаткиСчетов.Счет,
	|	ОстаткиСчетов.Счет.Вид КАК ВидСчета,
	|	ОстаткиСчетов.Счет.Валютный КАК Валютный,
	|	ОстаткиСчетов.Организация,
	|	ОстаткиСчетов.Подразделение,
	|	ОстаткиСчетов.Счет.ВидыСубконто.(
	|		НомерСтроки КАК НомерСтроки,
	|		ВидСубконто КАК ВидСубконто
	|	) КАК ВидыСубконтоСчета,
	|	ОстаткиСчетов.Субконто1,
	|	ОстаткиСчетов.Субконто2,
	|	ОстаткиСчетов.Субконто3,
	|	ОстаткиСчетов.Валюта,
	|	ОстаткиСчетов.СуммаОстаток,
	|	ВЫРАЗИТЬ(ОстаткиСчетов.СуммаОстаток * &КурсФВ / &КратностьФВ / &КурсВП * &КратностьВП КАК ЧИСЛО(15, 2)) КАК СуммаВП,
	|	ОстаткиСчетов.СуммаПредставленияОстаток КАК СуммаВПОстаток,
	|	(ВЫРАЗИТЬ(ОстаткиСчетов.СуммаОстаток * &КурсФВ / &КратностьФВ / &КурсВП * &КратностьВП КАК ЧИСЛО(15, 2))) - ОстаткиСчетов.СуммаПредставленияОстаток КАК КурсоваяРазница,
	|	ОстаткиСчетов.Счет.Порядок КАК СчетПорядок,
	|	втСчетаУчета.Доходы,
	|	ЕСТЬNULL(втСчетаУчета.ДоходыВалютный,ЛОЖЬ) КАК ДоходыВалютный,
	|	втСчетаУчета.СтатьяДоходов,
	|	втСчетаУчета.ВидСубконтоСтатьиДоходов,
	|	втСчетаУчета.Расходы,
	|	ЕСТЬNULL(втСчетаУчета.РасходыВалютный,ЛОЖЬ) КАК РасходыВалютный,
	|	втСчетаУчета.СтатьяРасходов,
	|	втСчетаУчета.ВидСубконтоСтатьиРасходов
	|ИЗ
	|	втОстаткиСчетов КАК ОстаткиСчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсВалют КАК втКурсВалют
	|		ПО ОстаткиСчетов.Валюта = втКурсВалют.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаУчета КАК втСчетаУчета
	|		ПО ОстаткиСчетов.Организация = втСчетаУчета.Организация
	|ГДЕ
	|	(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ОстаткиСчетов.СуммаОстаток < 0
	|					ТОГДА -ОстаткиСчетов.СуммаОстаток
	|				ИНАЧЕ ОстаткиСчетов.СуммаОстаток
	|			КОНЕЦ * &КурсФВ / &КратностьФВ / &КурсВП * &КратностьВП КАК ЧИСЛО(15, 2))) - ВЫБОР
	|			КОГДА ОстаткиСчетов.СуммаПредставленияОстаток < 0
	|				ТОГДА -ОстаткиСчетов.СуммаПредставленияОстаток
	|			ИНАЧЕ ОстаткиСчетов.СуммаПредставленияОстаток
	|		КОНЕЦ <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетПорядок";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
