#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);	
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная") Тогда 
		
		ЗарплатаКадрыРасширенный.ПроверитьУтверждениеДокумента(ЭтотОбъект, Отказ);
		
		Если ДокументРассчитан Тогда 
			
			ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок);                                                                        
			
			ИсправлениеДокументовЗарплатаКадры.ПроверитьЗаполнение(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
			
			
			ПроверитьПериодДействияНачислений(Отказ);
			
			Если Не Отказ Тогда
				
				ПараметрыПроверки = РасчетЗарплатыРасширенный.ПараметрыПроверкиПересеченияФактическогоПериодаДействия();
				ПараметрыПроверки.Организация = Организация;
				ПараметрыПроверки.ПериодРегистрации = ПериодРегистрации;
				ПараметрыПроверки.Документ = Ссылка;
				ПараметрыПроверки.Начисления = Начисления;
				ПараметрыПроверки.НачисленияПерерасчет = НачисленияПерерасчет;
				ПараметрыПроверки.ИсправленныйДокумент = ИсправленныйДокумент;
				
				ОсновныеНачисления = Новый Массив;
				ОсновныеНачисления.Добавить(ВидОплатыПособия);
				ОсновныеНачисления.Добавить(ВидОплатыЗаСчетРаботодателя);
				ОсновныеНачисления.Добавить(ВидНеоплачиваемогоВремени);
				ОсновныеНачисления.Добавить(ВидРасчетаДоплаты);
				
				ПараметрыПроверки.ОсновныеНачисления = ОсновныеНачисления;
				
				РасчетЗарплатыРасширенный.ПроверитьПересечениеФактическогоПериодаДействия(ПараметрыПроверки, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, Отказ);
	
	УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТабличнойЧасти Из Начисления Цикл
		СтрокаТабличнойЧасти.Сотрудник = Сотрудник;
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из НачисленияПерерасчет Цикл
		СтрокаТабличнойЧасти.Сотрудник = Сотрудник;
	КонецЦикла;
	
	ПредставлениеПериода = ЗарплатаКадрыРасширенный.ПредставлениеПериодаРасчетногоДокумента(ДатаНачала, ДатаОкончания);
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗарплатаКадрыРасширенный.ПередЗаписьюМногофункциональногоДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Документы.БольничныйЛист.ПровестиПоУчетам(Ссылка, РежимПроведения, Отказ, Неопределено, Движения, ЭтотОбъект, ДополнительныеСвойства)
		
КонецПроцедуры

// В качестве данных заполнения может принимать структуру с полями.
//		Ссылка
//		Действие
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "Исправить" Тогда
			
			ИсправлениеДокументовЗарплатаКадры.СкопироватьДокумент(ЭтотОбъект, 
			ДанныеЗаполнения.Ссылка, 
			"ДокументРассчитан", 
			"Начисления,НачисленияПерерасчет,НДФЛ,ОтработанноеВремяДляСреднегоФСС,
			|ПогашениеЗаймов,Показатели,
			|РаспределениеРезультатовНачислений,РаспределениеРезультатовУдержаний,
			|СреднийЗаработокДанныеСтрахователей,СреднийЗаработокФСС,Удержания");
			
			ИсправленныйДокумент = ДанныеЗаполнения.Ссылка;
			
			ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
		ИначеЕсли ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "Заполнить" Тогда
			ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ЭтотОбъект.ЯвляетсяПродолжениемБолезни = Истина;
		ЭтотОбъект.ПервичныйБольничныйЛист = ДанныеЗаполнения;
		ЗаполнитьПоПервичномуБольничномуЛисту(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ОбработкаЗаполненияМногофункциональногоДокумента(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПерерасчетЗарплаты.УдалениеПерерасчетаПоРегистратору(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ЗаполнитьПоДаннымЗаполнения(ДанныеЗаполнения)
	
	Если ЭтоНовый() Тогда
		
		ДокументЗаполнения = ДанныеЗаполнения.Ссылка;
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ПричинаНетрудоспособности = ДанныеЗаполнения.ПричинаНетрудоспособности;
		
		ДанныеЗаполнения.Свойство("Руководитель", Руководитель);
		ДанныеЗаполнения.Свойство("ДолжностьРуководителя", ДолжностьРуководителя);
		
	КонецЕсли;
		
	ПроизводственныйКалендарьСотрудника = КалендарныеГрафики.ПроизводственныйКалендарьУкраины();
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), "ГрафикРаботы");
		Если КадровыеДанныеСотрудника.Количество() > 0
			И ЗначениеЗаполнено(КадровыеДанныеСотрудника[0].ГрафикРаботы) Тогда
			ПроизводственныйКалендарьСотрудника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КадровыеДанныеСотрудника[0].ГрафикРаботы, "ПроизводственныйКалендарь");
		КонецЕсли; 
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		
		ПериодРегистрации = НачалоМесяца(Дата);
	
		Если ЗначениеЗаполнено(Организация) Тогда
			
			ЗапрашиваемыеЗначения = Новый Структура;
			ЗапрашиваемыеЗначения.Вставить("Организация", "Организация");
			
			Если НЕ ЗначениеЗаполнено(Руководитель) Тогда
				ЗапрашиваемыеЗначения.Вставить("Руководитель", "Руководитель");
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(ДолжностьРуководителя) Тогда
				ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "ДолжностьРуководителя");
			КонецЕсли; 
			
			ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтотОбъект, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));
			
		КонецЕсли; 
		
	КонецЕсли;
			
КонецПроцедуры

#Область ПроверкаЗаполненияДокумента

Функция ДокументГотовКРасчету(ВыводитьСообщения = Истина) Экспорт
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);
	
	ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок, Истина);                                                                        
	
	КонтейнерСодержитОшибки = Ложь;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, КонтейнерСодержитОшибки);
	
	Если Не ВыводитьСообщения Тогда
		
		ПолучитьСообщенияПользователю(Истина);		
		
	КонецЕсли;
	
	Возврат Не КонтейнерСодержитОшибки;	
	
КонецФункции

Процедура ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок)
	
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ТекстСообщения = НСтр("ru='Не указан период регистрации.';uk='Не зазначений період реєстрації.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПериодРегистрации", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru='Не указана организация, по которой выполняется начисление.';uk='Не вказана організація, по якії виконується нарахування.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Организация", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстСообщения = НСтр("ru='Не выбран сотрудник.';uk='Не вибрано співробітник.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Сотрудник", ТекстСообщения, "");
	Иначе 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) И Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru='Не указаны даты освобождения от работы.';uk='Не зазначено дату звільнення від роботи.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
	Иначе
		Если Не ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
			ТекстСообщения = НСтр("ru='Не заполнена дата начала освобождения от работы.';uk='Не заповнено дата початку звільнення від роботи.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачала", ТекстСообщения, "");
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДатаОкончания) И ЗначениеЗаполнено(ДатаНачала) Тогда
			ТекстСообщения = НСтр("ru='Не заполнена дата окончания освобождения от работы.';uk='Не заповнено дата закінчення звільнення від роботи.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) И ДатаНачала > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru='Дата окончания освобождения от работы не может быть меньше даты начала.';uk='Дата закінчення звільнення від роботи не може бути менша дати початку.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаНачалаСобытия) И ДатаНачала < ДатаНачалаСобытия Тогда
		ТекстСообщения = НСтр("ru='Дата начала периода отсутствия сотрудника не должна быть меньше даты начала события.';uk='Дата початку періоду відсутності працівника не повинна бути менша дати початку події.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачала", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПричинаНетрудоспособности) Тогда
		ТекстСообщения = НСтр("ru='Не указана причина нетрудоспособности.';uk='Не вказана причина непрацездатності.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПричинаНетрудоспособности", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок, ПроверкаПередРасчетом = Ложь)
	
	Если Не ДокументРассчитан И Не ПроверкаПередРасчетом Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаНачалаСобытия) Тогда
		ТекстСообщения = НСтр("ru='Не указана дата начала нетрудоспособности.';uk='Не вказана дата початку непрацездатності.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаСобытия", ТекстСообщения, "");
	КонецЕсли;
	
	Если НазначитьПособие Тогда
		Если Не ЗначениеЗаполнено(ДатаНачалаОплаты) И Не ЗначениеЗаполнено(ДатаОкончанияОплаты) Тогда
			ТекстСообщения = НСтр("ru='Не указаны даты оплаты пособия.';uk='Не вказані дати оплати допомоги.'");
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
		Иначе
			Если Не ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончанияОплаты) Тогда
				ТекстСообщения = НСтр("ru='Не заполнена дата начала оплаты пособия.';uk='Не заповнено дата початку оплати допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ДатаОкончанияОплаты) И ЗначениеЗаполнено(ДатаНачалаОплаты) Тогда
				ТекстСообщения = НСтр("ru='Не заполнена дата окончания оплаты пособия.';uk='Не заповнено дата закінчення оплати допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончанияОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаНачалаСобытия) И ДатаНачалаОплаты < ДатаНачалаСобытия Тогда
				ТекстСообщения = НСтр("ru='Дата назначения пособия не должна быть меньше даты начала события.';uk='Дата призначення допомоги не повинна бути менша дати початку події.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаНачала) И ДатаНачалаОплаты < ДатаНачала Тогда
				ТекстСообщения = НСтр("ru='Дата назначения пособия не должна быть меньше даты начала периода нетрудоспособности.';uk='Дата призначення допомоги не повинна бути менша дати початку періоду непрацездатності.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачалаОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончанияОплаты) И ДатаНачалаОплаты > ДатаОкончанияОплаты Тогда
				ТекстСообщения = НСтр("ru='Дата окончания оплаты пособия не должна быть меньше даты начала оплаты пособия.';uk='Дата закінчення оплати допомоги не повинна бути менша дати початку оплати допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончанияОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаОкончанияОплаты) И ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаОкончанияОплаты Тогда
				ТекстСообщения = НСтр("ru='Дата окончания оплаты пособия не должна быть больше даты окончания периода нетрудоспособности.';uk='Дата закінчення оплати допомоги не повинна бути більше дати закінчення періоду непрацездатності.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончанияОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДатаНачалаОплаты) И ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаНачалаОплаты Тогда
				ТекстСообщения = НСтр("ru='Дата окончания периода отсутствия сотрудника не должна быть меньше даты назначения пособия.';uk='Дата закінчення періоду відсутності працівника не повинна бути менша дати призначення допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ПроцентОплаты) Тогда
				ТекстСообщения = НСтр("ru='Не указан процент оплаты.';uk='Не вказано відсоток оплати.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПроцентОплаты", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ОграничениеПособия) Тогда
				ТекстСообщения = НСтр("ru='Не указано ограничение пособия.';uk='Не вказано обмеження допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "ОграничениеПособия", ТекстСообщения, "");
			КонецЕсли;
			
			Если ПрименятьЛьготыПриНачисленииПособия И Не ЗначениеЗаполнено(ЛьготаПоПособию) Тогда
				ТекстСообщения = НСтр("ru='Не указан вид льготы используемой при начислении пособия.';uk='Не зазначено вид пільги, що використовується при нарахуванні допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ЛьготаПоПособию", ТекстСообщения, "");
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВидОплатыПособия) Тогда
				ТекстСообщения = НСтр("ru='Не указан вид расчета для начисления пособия.';uk='Не зазначено вид розрахунку для нарахування допомоги.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидОплатыПособия", ТекстСообщения, "");
			КонецЕсли;	
			
			КоличествоДнейЗаСчетРаботодателя = УчетПособийСоциальногоСтрахованияКлиентСервер.КоличествоДнейЗаСчетРаботодателя(ДатаНачалаСобытия, ПричинаНетрудоспособности);
			ДлинаСуток = УчетПособийСоциальногоСтрахованияКлиентСервер.ДлинаСуток();
			Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ОбщееЗаболевание
				И ЗначениеЗаполнено(ДатаНачалаОплаты)
				И ДатаНачалаОплаты < ДатаНачалаСобытия + КоличествоДнейЗаСчетРаботодателя * ДлинаСуток Тогда
				Если Не ЗначениеЗаполнено(ВидОплатыЗаСчетРаботодателя) Тогда
					ТекстСообщения = НСтр("ru='Не указан вид расчета для начисления пособия за счет работодателя.';uk='Не зазначено вид розрахунку для нарахування допомоги за рахунок роботодавця.'");
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидОплатыЗаСчетРаботодателя", ТекстСообщения, "");
				КонецЕсли;
			КонецЕсли;
			
			Если ДоплачиватьДоСреднегоЗаработка И Не ЗначениеЗаполнено(ВидРасчетаДоплаты) Тогда
				ТекстСообщения = НСтр("ru='Не указан вид расчета для начисления доплаты до полного среднего заработка.';uk='Не зазначено вид розрахунку для нарахування доплати до повного середнього заробітку.'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидРасчетаДоплаты", ТекстСообщения, "");
			КонецЕсли;
			
		КонецЕсли; 
	КонецЕсли;
	
	Если (Не НазначитьПособие
		Или ДатаНачала < ДатаНачалаОплаты
		Или ДатаОкончания > ДатаОкончанияОплаты) 
		И НЕ ЗначениеЗаполнено(ВидНеоплачиваемогоВремени) Тогда
		ТекстСообщения = НСтр("ru='Не указан вид расчета для неоплачиваемого времени.';uk='Не зазначено вид розрахунку для безоплатного часу.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ВидНеоплачиваемогоВремени", ТекстСообщения, "");
	КонецЕсли;
	
	ПроверитьЗаполнениеПланируемойДатыВыплаты(КонтейнерОшибок, ПроверкаПередРасчетом);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПланируемойДатыВыплаты(КонтейнерОшибок, ПроверкаПередРасчетом)
	
	МассивНачисленийДокумента = Новый Массив;
	
	Если НЕ ПроверкаПередРасчетом Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивНачисленийДокумента, Начисления.ВыгрузитьКолонку("Начисление"), Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивНачисленийДокумента, НачисленияПерерасчет.ВыгрузитьКолонку("Начисление"), Истина);
	КонецЕсли;
	
	Если УчетНДФЛРасширенный.ДатаВыплатыОбязательнаКЗаполнению(ПорядокВыплаты, МассивНачисленийДокумента)
		И Не ЗначениеЗаполнено(ПланируемаяДатаВыплаты) Тогда
		ТекстСообщения = НСтр("ru='Дата выплаты обязательна к заполнению при выплате в межрасчет.';uk='Дата виплати обов''язкова до заповнення при виплаті у міжрозр. період.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПланируемаяДатаВыплаты", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПериодДействияНачислений(Отказ)
	ПараметрыПроверкиПериодаДействия = РасчетЗарплатыРасширенный.ПараметрыПроверкиПериодаДействия();
	ПараметрыПроверкиПериодаДействия.Ссылка = ЭтотОбъект.Ссылка;
	ПроверяемыеКоллекции = Новый Массив;
	ПроверяемыеКоллекции.Добавить(РасчетЗарплатыРасширенный.ОписаниеКоллекцииДляПроверкиПериодаДействия("НачисленияПерерасчет", НСтр("ru='Перерасчет прошлого периода';uk='Перерахунок минулого періоду'")));
	ПроверяемыеКоллекции.Добавить(РасчетЗарплатыРасширенный.ОписаниеКоллекцииДляПроверкиПериодаДействия("Удержания", НСтр("ru='Удержания';uk='Утримання'"), "Удержание"));
	РасчетЗарплатыРасширенный.ПроверитьПериодДействияВКоллекцияхНачислений(ЭтотОбъект, ПараметрыПроверкиПериодаДействия, ПроверяемыеКоллекции, Отказ);
КонецПроцедуры


Процедура УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты)
	
	Если ПроверяемыеРеквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Организация");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Сотрудник");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаСобытия");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачалаОплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачала");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончания");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияОплаты");			
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПричинаНетрудоспособности");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПроцентОплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ОграничениеПособия");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ЛьготаПоПособию");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидОплатыПособия");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидОплатыЗаСчетРаботодателя");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидНеоплачиваемогоВремени");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидРасчетаДоплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПланируемаяДатаВыплаты");
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьПоПервичномуБольничномуЛисту(ДокументСсылка) Экспорт 
	
	ДанныеПервичногоБольничногоЛиста = Документы.БольничныйЛист.ДанныеПервичногоБольничногоЛиста(ДокументСсылка, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЭтотОбъект.Ссылка));
	
	ЗаполняемыеДанные = "Организация";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "Сотрудник";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПричинаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НазначитьПособие";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачала";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаСобытия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНачалаПоловиннойОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДатаНарушенияРежима";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СлучайУходаЗаБольнымРебенком";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "НомерПервичногоЛисткаНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажЛет";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажМесяцев";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажЗа12МесяцевВМесяцах";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажВМесяцах";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажРасширенныйЛет";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "СтажРасширенныйМесяцев";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДоплачиватьДоСреднегоЗаработка";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентОплатыБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособияБезЛьгот";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПрименятьЛьготыПриНачисленииПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ЛьготаПоПособию";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ОграничениеПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаНачало";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаОкончание";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаПервыйГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПериодРасчетаСреднегоЗаработкаВторойГод";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "УчитыватьЗаработокПредыдущихСтрахователей";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РасчетПоПравилам2010Года";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидОплатыПособия";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидОплатыЗаСчетРаботодателя";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидНеоплачиваемогоВремени";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ВидРасчетаДоплаты";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ПроцентДоплатыЗаДниНетрудоспособности";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "ДоляНеполногоВремени";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РодственникЗаКоторымОсуществляетсяУход1";
	ЗаполняемыеДанные = ЗаполняемыеДанные + "," + "РодственникЗаКоторымОсуществляетсяУход2";
	
	Если ДанныеПервичногоБольничногоЛиста <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеПервичногоБольничногоЛиста, ЗаполняемыеДанные);
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
