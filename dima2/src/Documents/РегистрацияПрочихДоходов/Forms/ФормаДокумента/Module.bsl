
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ = Документы.РегистрацияПрочихДоходов.ПустаяСсылка() Тогда
		
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц", 
		"Объект.Организация", "Объект.Ответственный", "Объект.ПериодРегистрации");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
			Объект.ПериодРегистрации = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Объект.ПланируемаяДатаВыплаты = НачалоДня(ТекущаяДатаСеанса()) + 86400;
		ЗаполнитьДанныеФормыПоОрганизации();
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Запомним дату документа, при смене месяца надо пересчитывать налоги и взносы.
	ДатаПрежняя = Объект.Дата;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыРезультатыРасчетаНДФЛ" И Источник.ВладелецФормы = ЭтаФорма Тогда
		ОбновитьДанныеНДФЛНаСервере(Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	КодДоходаНДФЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.ВидПрочегоДохода, "КодДоходаНДФЛ");
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПриПолученииДанныхНаСервере();
	
	СохраняемыеЗначения = Новый Структура;
	СохраняемыеЗначения.Вставить("Исполнитель", ТекущийОбъект.Исполнитель);
	СохраняемыеЗначения.Вставить("ДолжностьИсполнителя", ТекущийОбъект.ДолжностьИсполнителя);
	
	ЗарплатаКадры.СохранитьЗначенияЗаполненияОтветственныхРаботников(ТекущийОбъект.Организация, СохраняемыеЗначения);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеОрганизацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбработатьИзменениеДатыДокументаНаСервере();
	ДатаПрежняя = Объект.Дата;
КонецПроцедуры

&НаКлиенте
Процедура ВидПрочегоДоходаПриИзменении(Элемент)
	
	ОбработатьИзменениеВидаПрочегоДоходаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемаяДатаВыплатыПриИзменении(Элемент)
	
	РассчитатьНДФЛИВзносыВсем();
	
КонецПроцедуры


#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область ОбработчикиСобытийТаблицыФормыНачисленияУдержанияВзносы

&НаКлиенте
Процедура НачисленияФизическоеЛицоПриИзменении(Элемент)
	
	ДанныеСтроки = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные;
	
	Если ДанныеСтроки.ФизическоеЛицо <> УдаляемоеФизическоеЛицо Тогда
		УдалитьДанныеУдаляемогоФизическогоЛица();
		УдаляемоеФизическоеЛицо = ДанныеСтроки.ФизическоеЛицо;
	КонецЕсли;
	
	
	РассчитатьНДФЛиВзносыПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияНачисленоПриИзменении(Элемент)
	
	РассчитатьНДФЛиВзносыПоТекущейСтроке();
	
КонецПроцедуры


&НаКлиенте
Процедура НачисленияУдержанияВзносыПередУдалением(Элемент, Отказ)
	
	Если Элементы.НачисленияУдержанияВзносы.ТекущиеДанные <> Неопределено Тогда
		УдаляемоеФизическоеЛицо = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элементы.НачисленияУдержанияВзносы.ТекущиеДанные <> Неопределено Тогда
		
		Если НоваяСтрока И Копирование Тогда
			Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		Иначе
			УдаляемоеФизическоеЛицо = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УдаляемоеФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ДобавитьНовуюСтроку(ВыбранноеЗначение);
	Иначе
		Для Каждого ФизическоеЛицо Из ВыбранноеЗначение Цикл
			ДобавитьНовуюСтроку(ФизическоеЛицо);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПослеУдаления(Элемент)
	
	УдалитьДанныеУдаляемогоФизическогоЛица();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПодборПолучателей(Команда)
	
	РолиФизическихЛиц = Новый Массив;
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.Сотрудник"));
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.БывшийСотрудник"));
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.ПрочийПолучательДоходов"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("АдресСпискаПодобранныхФизическихЛиц", АдресСпискаПодобранныхФизическихЛиц());
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Роль", РолиФизическихЛиц);
	
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора", ПараметрыФормы, Элементы.НачисленияУдержанияВзносы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробнееОРасчетеНДФЛ(Команда)
	
	УчетНДФЛКлиентРасширенный.ОткрытьФормуПодробнееОРасчетеНДФЛ(
		Объект, "РегистрацияПрочихДоходов", ЭтаФорма, ОписаниеДокумента(ЭтаФорма), АдресСпискаПодобранныхФизическихЛиц());
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура УдалитьДанныеУдаляемогоФизическогоЛица()
	
	Если ЗначениеЗаполнено(УдаляемоеФизическоеЛицо) Тогда
		УчетНДФЛКлиентСерверРасширенный.УдалитьДанныеНДФЛФизическоголица(Объект, УдаляемоеФизическоеЛицо);
		УдаляемоеФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьНачисленияСотрудника(Сотрудники, СохранятьИсправления = Истина) Экспорт
	РассчитатьНДФЛИВзносыНаСервере(Сотрудники);
КонецПроцедуры

&НаСервере
Процедура РассчитатьНДФЛИВзносыВсем()
	
	Если Не ЗначениеЗаполнено(Объект.ПланируемаяДатаВыплаты) Или Объект.НачисленияУдержанияВзносы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
		РассчитатьНДФЛИВзносыНаСервере();
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНДФЛиВзносыПоТекущейСтроке()
	
	ДанныеСтроки = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные;
	
	Если ДанныеСтроки.ФизическоеЛицо.Пустая() Или ДанныеСтроки.Начислено = 0 Или Объект.ВидПрочегоДохода.Пустая() Или Не ЗначениеЗаполнено(Объект.ПланируемаяДатаВыплаты) Тогда
		
		Если ДанныеСтроки.Начислено = 0 Тогда
			ДанныеСтроки.НДФЛ = 0;
			ДанныеСтроки.КВыплате = 0;
		КонецЕсли;
		
	Иначе
		
		Если РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
			РассчитатьНДФЛИВзносыНаСервере(ДанныеСтроки.ФизическоеЛицо);
		Иначе
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИтогиКВыплате()
	
	Для Каждого ДанныеСтроки Из Объект.НачисленияУдержанияВзносы Цикл
		ЗаполнитьКВыплатеПоСтроке(ЭтаФорма, ДанныеСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКВыплатеПоСтроке(Форма, ДанныеСтроки)
	
	Если Форма.РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
		
		ДанныеСтроки.НДФЛ = 0;
		СтрокиНДФЛ = Форма.Объект.НДФЛ.НайтиСтроки(Новый Структура("ФизическоеЛицо", ДанныеСтроки.ФизическоеЛицо));
		Для каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
			ДанныеСтроки.НДФЛ = ДанныеСтроки.НДФЛ + СтрокаНДФЛ.Налог;
		КонецЦикла;
		
	КонецЕсли;
	ДанныеСтроки.КВыплате = ДанныеСтроки.Начислено - ДанныеСтроки.НДФЛ;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, НачалоДня(Объект.ПериодРегистрации));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	ЗаполнитьДанныеФормыПоОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеДатыДокументаНаСервере()

	УстановитьФункциональныеОпцииФормы();
	Если НачалоМесяца(ДатаПрежняя) <> НачалоМесяца(Объект.Дата) Тогда
		РассчитатьНДФЛИВзносыВсем();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеВидаПрочегоДоходаНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.ВидПрочегоДохода) Тогда
		
		
	Иначе
		
		КодДоходаНДФЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПрочегоДохода, "КодДоходаНДФЛ");
		
	КонецЕсли;
	
	УстановитьРежимРасчетаНДФЛИОтображениеЭлементовРедактированияНДФЛ();
	
	РассчитатьНДФЛИВзносыВсем();
	
КонецПроцедуры


&НаСервере
Процедура РассчитатьИтогиНаСервере()

	Для каждого Строка Из ЭтотОбъект.Объект.НачисленияУдержанияВзносы Цикл
		ЗаполнитьКВыплатеПоСтроке(ЭтаФорма, Строка);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхФизическихЛиц()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.НачисленияУдержанияВзносы.Выгрузить(,"ФизическоеЛицо").ВыгрузитьКолонку("ФизическоеЛицо"), УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ДобавитьНовуюСтроку(ФизическоеЛицо)
	
	СтрокиНачислений = Объект.НачисленияУдержанияВзносы.НайтиСтроки(Новый Структура("ФизическоеЛицо", ФизическоеЛицо));
	
	Если СтрокиНачислений.Количество() = 0 Тогда
		НоваяСтрока = Объект.НачисленияУдержанияВзносы.Добавить();
		НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли; 
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
	
	ЗапрашиваемыеЗначения.Вставить("Исполнитель", "Объект.Исполнитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьИсполнителя", "Объект.ДолжностьИсполнителя");
	
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));	
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	УстановитьРежимРасчетаНДФЛИОтображениеЭлементовРедактированияНДФЛ();
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтотОбъект, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеДокумента(Форма)
	
	Описание = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента();
	Описание.МесяцНачисленияИмя		= "ПериодРегистрации";
	Описание.ПериодДействияВШапке	= Истина;
	Описание.НачалоБазовогоПериодаИмя = "";
	Описание.ОкончаниеБазовогоПериодаИмя = "";
	Описание.ИменаПолейНачисления	= "ВидПрочегоДохода";
	Описание.ВидНачисленияВШапке	= Истина;
	Описание.ВидНачисленияИмя		= "ВидПрочегоДохода";
	
	Описание.РассчитыватьУдержанияИмя = "РассчитыватьУдержания";
	
	Описание.НачисленияИмя			= "НачисленияУдержанияВзносы";
	Описание.НДФЛИмя				= "НДФЛ";
	
	Описание.РегистрацияНачисленийДоступна = Истина;
	
	Возврат Описание;
	
КонецФункции

&НаСервере
Функция СведенияОбНДФЛ() Экспорт
	
	ТаблицаНачислений = Объект.НачисленияУдержанияВзносы.Выгрузить();
	
	ТаблицаНачислений.Колонки.Добавить("Начисление", Новый ОписаниеТипов());
	ТаблицаНачислений.ЗаполнитьЗначения(Объект.ВидПрочегоДохода, "Начисление");
	
	Возврат УчетНДФЛФормыРасширенный.СведенияОбНДФЛ(ЭтаФорма, , , ТаблицаНачислений);
	
КонецФункции

&НаСервере
Процедура РассчитатьНДФЛИВзносыНаСервере(ФизическоеЛицо = Неопределено)
	
	Если ФизическоеЛицо = Неопределено Тогда
		СписокФизическихЛиц = Неопределено;
	Иначе
		СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	КонецЕсли;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РассчитатьНДФЛИВзносыДокумента(СписокФизическихЛиц);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	РассчитатьИтогиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимРасчетаНДФЛИОтображениеЭлементовРедактированияНДФЛ()
	
	РасчетНДФЛНарастающимИтогомСНачалаГода = УчетНДФЛФормыРасширенный.РасчетНДФЛНарастающимИтогомСНачалаГода(Объект.ВидПрочегоДохода);
	
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПодробнееОРасчетеНДФЛ",
		"Видимость",
		РасчетНДФЛНарастающимИтогомСНачалаГода);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НачисленияНДФЛ",
		"ТолькоПросмотр",
		РасчетНДФЛНарастающимИтогомСНачалаГода);
		
КонецПроцедуры


&НаСервере
Процедура ОбновитьДанныеНДФЛНаСервере(АдресВременногоХранилища)
	
	Параметр = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Объект.НДФЛ.Загрузить(Параметр.НДФЛ.Выгрузить());
	
	
	Модифицированность = Истина;
	
	ЗаполнитьИтогиКВыплате();
	РассчитатьИтогиНаСервере();
	
КонецПроцедуры

#КонецОбласти
