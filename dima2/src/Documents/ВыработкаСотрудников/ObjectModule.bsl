#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыПоУмолчанию();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Бригада") И Не ДанныеЗаполнения.Свойство("Подразделение") Тогда
			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Бригада) Тогда
				Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения.Бригада, "Подразделение");
				ДанныеЗаполнения.Вставить("Подразделение", Реквизиты.Подразделение);
			КонецЕсли;
			
		КонецЕсли;
		
		//++ НЕ УТКА
		
		МассивРаспоряжений = Новый Массив;
		МассивВидовРабот   = Новый Массив;
		РабочийЦентр       = Неопределено;
		
		Если ДанныеЗаполнения.Свойство("МассивРаспоряжений") Тогда
			МассивРаспоряжений = ДанныеЗаполнения.МассивРаспоряжений;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("МассивВидовРабот") Тогда
			МассивВидовРабот = ДанныеЗаполнения.МассивВидовРабот;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("РабочийЦентр") Тогда
			РабочийЦентр = ДанныеЗаполнения.РабочийЦентр;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Если МассивРаспоряжений.Количество() > 0 И Не ЗначениеЗаполнено(Бригада) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Трудозатраты.Бригада КАК Бригада,
			|	Трудозатраты.Бригада.Подразделение КАК Подразделение,
			|	Трудозатраты.Организация КАК Организация
			|ИЗ
			|	РегистрНакопления.ТрудозатратыКОформлению.Остатки КАК Трудозатраты
			|ГДЕ
			|	Трудозатраты.Распоряжение В(&Распоряжения)
			|	И Трудозатраты.КоличествоОстаток > 0
			|	И (Трудозатраты.Бригада.Подразделение = &Подразделение
			|			ИЛИ &ПоВсемПодразделениям)
			|	И (Трудозатраты.Организация = &Организация
			|			ИЛИ &ПоВсемОрганизациям)";
			
			Запрос.УстановитьПараметр("Распоряжения", МассивРаспоряжений);
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
			Запрос.УстановитьПараметр("ПоВсемПодразделениям", Не ЗначениеЗаполнено(Подразделение));
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(Организация));
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				Бригада = Выборка.Бригада;
				Подразделение = Выборка.Подразделение;
				Организация = Выборка.Организация;
			КонецЕсли;
			
		КонецЕсли;
		
		Если (МассивВидовРабот.Количество() > 0 Или МассивРаспоряжений.Количество() > 0)
			И ЗначениеЗаполнено(Бригада) Тогда
			
			Документы.ВыработкаСотрудников.ЗаполнитьПоОстаткам(ЭтотОбъект, Истина, МассивВидовРабот, МассивРаспоряжений, РабочийЦентр);
			
		КонецЕсли;
		
		//-- НЕ УТКА
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Проверка Кода строки распоряжения, заполнения статьи калькуляции, статьи расходов и аналитики расходов.
	
	Для Каждого Строка Из ВидыРабот Цикл
		
		//++ НЕ УТКА
		Если ПоРаспоряжениям Тогда
			
			Если Не ЗначениеЗаполнено(Строка.КодСтрокиРаспоряжения) Тогда
				
				ШаблонОшибки = НСтр("ru='Трудозатраты в строке %1 отсутствуют в распоряжении';uk='Трудовитрати в рядку %1 відсутні в розпорядженні'");
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Строка.НомерСтроки);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстСообщения,
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВидыРабот", Строка.НомерСтроки, "ВидРабот"),
					,
					Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		//-- НЕ УТКА
		
		Если Не Автораспределение и Не ЗначениеЗаполнено(Строка.КлючСтроки) Тогда
			
			ШаблонОшибки = НСтр("ru='Ошибка связи в строке %1 списка ""Виды работ""';uk='Помилка зв''язку в рядку %1 списку ""Види робіт""'");
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонОшибки, Строка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВидыРабот", Строка.НомерСтроки, "ВидРабот"),
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не Автораспределение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Сотрудники.НормативныйКТУ");
	КонецЕсли;
	
	Если ВидНаряда = Перечисления.ВидыБригадныхНарядов.Производство И ПоРаспоряжениям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.СпособОтраженияЗарплаты");
	ИначеЕсли ВидНаряда = Перечисления.ВидыБригадныхНарядов.Производство И Не ПоРаспоряжениям Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.СпособОтраженияЗарплаты");
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.СтатьяКалькуляции");
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.Распоряжение");
	ИначеЕсли ВидНаряда = Перечисления.ВидыБригадныхНарядов.Ремонт Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.СтатьяКалькуляции");
	ИначеЕсли ВидНаряда = Перечисления.ВидыБригадныхНарядов.ПрочиеРаботы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.СтатьяКалькуляции");
		МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.Распоряжение");
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.КлючСтроки");
	МассивНепроверяемыхРеквизитов.Добавить("ВидыРабот.КодСтрокиРаспоряжения");
	
	Документы.ВыработкаСотрудников.ПроверитьДублированиеСтрокТабличнойЧасти(Сотрудники, Не Автораспределение, Отказ);
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		ТекстСообщения = НСтр("ru='Не задана валюта расценок на виды работ. Валюта задается в разделе ""Администрирование \ Производство"".';uk='Не задана валюта розцінок на види робіт. Валюта задається в розділі ""Адміністрування \ Виробництво"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЕсли;
	МассивНепроверяемыхРеквизитов.Добавить("Валюта");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	// Пытаемся повторно заполнить реквизит Валюта, если незаполнен.
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Валюта = Константы.ВалютаРасценокВидовРабот.Получить();
	КонецЕсли;
	
	КТУОбщий = Сотрудники.Итог("НормативныйКТУ");
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ВыработкаСотрудников.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РасчетЗарплатыРасширенный.ЗарегистрироватьСдельныйЗаработок(Движения, Организация, ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗначенияОперативныхПоказателейРасчетаЗарплатыСотрудников);
	
	//++ НЕ УТКА
	ОперативныйУчетПроизводства.ОтразитьТрудозатратыКОформлению(ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	ОтражениеЗарплатыВФинансовомУчетеУП.ОтразитьТрудозатратыНезавершенногоПроизводства(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРеквизитыПоУмолчанию()
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию();
	Ответственный = Пользователи.ТекущийПользователь();
	Валюта = Константы.ВалютаРасценокВидовРабот.Получить();
	
КонецПроцедуры

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	//++ НЕ УТКА
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Массив.Добавить(Движения.ТрудозатратыКОформлению);
	КонецЕсли;
	//-- НЕ УТКА
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
