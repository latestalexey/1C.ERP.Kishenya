
//++ НЕ УТКА

&НаСервере
Функция ПолучитьПараметрыОткрытияФормы(ОтчетДавальцу)
	
	ПараметрыОткрытияФормы = Неопределено;
	
	МассивЗаказов = ПолучитьЗаказыОтчетаДавальцуСервер(ОтчетДавальцу);
	
	Если ПроверитьПорядокРасчетов(ОтчетДавальцу)
		ИЛИ МассивЗаказов.Количество() = 0 Тогда
		
		ПараметрыОткрытияФормы = Новый Структура();
		ПараметрыОткрытияФормы.Вставить("ИмяФормы", "Документ.СчетНаОплатуКлиенту.Форма.ФормаДокумента");
		ПараметрыОткрытияФормы.Вставить("ПараметрыФормы", Новый Структура("Основание", ОтчетДавальцу));
		
	ИначеЕсли МассивЗаказов.Количество() = 1 Тогда
		
		ПараметрыОткрытияФормы = Новый Структура();
		ПараметрыОткрытияФормы.Вставить("ИмяФормы", "Документ.СчетНаОплатуКлиенту.Форма.ФормаСозданияСчетовНаОплату");
		ПараметрыОткрытияФормы.Вставить("ПараметрыФормы", Новый Структура("ДокументОснование", МассивЗаказов[0]));
		
	КонецЕсли;
	
	Возврат ПараметрыОткрытияФормы;
	
КонецФункции

&НаСервере
Функция ПроверитьПорядокРасчетов(ОтчетДавальцу)
	
	ПорядокРасчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтчетДавальцу, "ПорядокРасчетов");
	
	Возврат ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
	
КонецФункции

&НаСервере
Функция ПолучитьЗаказыОтчетаДавальцуСервер(ОтчетДавальцу)
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтчетДавальцуУслуги.ЗаказДавальца КАК ЗаказКлиента
		|ПОМЕСТИТЬ
		|	Заказы
		|ИЗ
		|	Документ.ОтчетДавальцу.Продукция КАК ОтчетДавальцуУслуги
		|ГДЕ
		|	ОтчетДавальцуУслуги.Ссылка = &ОтчетДавальцу
		|	И ОтчетДавальцуУслуги.ЗаказДавальца <> НЕОПРЕДЕЛЕНО
		|	И ОтчетДавальцуУслуги.ЗаказДавальца <> ЗНАЧЕНИЕ(Документ.ЗаказДавальца.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетДавальцу.ЗаказДавальца КАК ЗаказКлиента
		|ИЗ
		|	Документ.ОтчетДавальцу КАК ОтчетДавальцу
		|ГДЕ
		|	ОтчетДавальцу.Ссылка = &ОтчетДавальцу
		|	И ОтчетДавальцу.ЗаказДавальца <> НЕОПРЕДЕЛЕНО
		|	И ОтчетДавальцу.ЗаказДавальца <> ЗНАЧЕНИЕ(Документ.ЗаказДавальца.ПустаяСсылка)
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Заказы.ЗаказКлиента КАК ЗаказКлиента
		|ИЗ
		|	Заказы КАК Заказы
		|");
		
	Запрос.УстановитьПараметр("ОтчетДавальцу", ОтчетДавальцу);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	МассивЗаказов = РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("ЗаказКлиента");
	Возврат МассивЗаказов;
	
КонецФункции

//-- НЕ УТКА

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	//++ НЕ УТКА
	
	ПараметрыОткрытияФормы = ПолучитьПараметрыОткрытияФормы(ПараметрКоманды);
	
	Если ПараметрыОткрытияФормы = Неопределено Тогда
		
		ТекстОшибки = НСтр("ru='%Документ% оформлен по нескольким заказам. Необходимо ввести счет на оплату на основании заказов.';uk='%Документ% оформлена за кількома замовленнями. Необхідно ввести рахунок на оплату на підставі замовлень.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ПараметрКоманды);
	
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ОткрытьФорму(
		ПараметрыОткрытияФормы.ИмяФормы,
		ПараметрыОткрытияФормы.ПараметрыФормы,
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно);
		
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры
