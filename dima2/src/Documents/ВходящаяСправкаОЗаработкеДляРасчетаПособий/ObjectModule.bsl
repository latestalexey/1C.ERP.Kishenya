#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения, , Истина);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ДанныеЗаполнения.Свойство("Организация", Организация);
		ДанныеЗаполнения.Свойство("Сотрудник", Сотрудник);
		ДанныеЗаполнения.Свойство("Страхователь", Страхователь);
		ДанныеЗаполнения.Свойство("ПериодРаботыС", ПериодРаботыС);
		ДанныеЗаполнения.Свойство("ПериодРаботыПо", ПериодРаботыПо);
		
		// Данные о заработке заполняем безусловно.
		АдресДанныхОЗаработкеВХранилище = Неопределено;
		Если ДанныеЗаполнения.Свойство("АдресДанныхОЗаработкеВХранилище", АдресДанныхОЗаработкеВХранилище) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПолучитьИзВременногоХранилища(АдресДанныхОЗаработкеВХранилище), ДанныеОЗаработке);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	УчетПособийСоциальногоСтрахованияРасширенный.ЗарегистрироватьДанныеСтрахователей(
	Движения, Отказ, Дата, Ссылка, Сотрудник, Страхователь, ДанныеПоМесяцам(), ПериодРаботыС, ПериодРаботыПо);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Функция ДанныеПоМесяцам()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеПоМесяцам.РасчетныйМесяц КАК Месяц,
	|	СУММА(ДанныеПоМесяцам.Заработок) КАК Сумма,
	|	СУММА(ДанныеПоМесяцам.ДнейБолезниУходаЗаДетьми) КАК ДнейБолезниУходаЗаДетьми,
	|	СУММА(ДанныеПоМесяцам.ДнейСтажа) КАК ДнейСтажа,
	|	ДанныеПоМесяцам.Страхователь
	|ИЗ
	|	Документ.ВходящаяСправкаОЗаработкеДляРасчетаПособий.ДанныеОЗаработке КАК ДанныеПоМесяцам
	|ГДЕ
	|	ДанныеПоМесяцам.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоМесяцам.РасчетныйМесяц,
	|	ДанныеПоМесяцам.Страхователь");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции    

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если КорректировкаДанныхОСтаже Тогда
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Страхователь"));
	Иначе
		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДанныеОЗаработке.Страхователь"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецЕсли
