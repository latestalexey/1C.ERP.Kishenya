#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическиеЛица.ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	УчетСтраховыхВзносов.СформироватьИсчисленныеВзносы(Движения, Отказ, Организация, КонецМесяца(ПериодРегистрации), ДанныеДляПроведения.СтраховыеВзносы, , , Истина, ОснованиеДляДоначисления);
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура;
	
	Запрос = Новый Запрос();
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Взносы.ВидЕСВ КАК ВидЕСВ,
	|	Взносы.КатегорияЕСВ КАК КатегорияЕСВ,
	|	Взносы.МесяцРасчетногоПериода КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(Взносы.МесяцРасчетногоПериода, МЕСЯЦ) КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(Взносы.МесяцРасчетногоПериода, МЕСЯЦ) КАК ДатаОкончания,
	|	Взносы.Налог КАК Налог,
	|	Взносы.СтатьяНалоговойДекларации КАК СтатьяНалоговойДекларации,
	|	Взносы.База КАК База,
	|	Взносы.БазаВзноса КАК БазаВзноса,
	|	0 КАК БазаОтпускные,
	|	0 КАК БазаДоначисление,
	|	Взносы.Результат КАК Результат,
	|	0 КАК РезультатДоначисление,
	|	0 КАК Предел,
	|	0 КАК Ставка,
	|	0 КАК МинимальнаяБаза,
	|	0 КАК КоэффициентСтавки,
	|	0 КАК БазаВычет,
	|	Взносы.ТипНачисления КАК ТипНачисления,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы) КАК СпособРасчета
	|ИЗ
	|	Документ.АктПроверкиСтраховыхВзносов.Взносы КАК Взносы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Взносы.ВидЕСВ КАК ВидЕСВ,
	|	Взносы.КатегорияЕСВ КАК КатегорияЕСВ,
	|	Взносы.МесяцРасчетногоПериода КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(Взносы.МесяцРасчетногоПериода, МЕСЯЦ) КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(Взносы.МесяцРасчетногоПериода, МЕСЯЦ) КАК ДатаОкончания,
	|	Взносы.Налог КАК Налог,
	|	Взносы.СтатьяНалоговойДекларации КАК СтатьяНалоговойДекларации,
	|	Взносы.База КАК База,
	|	Взносы.БазаВзноса КАК БазаВзноса,
	|	0 КАК БазаОтпускные,
	|	0 КАК БазаДоначисление,
	|	Взносы.Результат КАК Результат,
	|	0 КАК РезультатДоначисление,
	|	0 КАК Предел,
	|	0 КАК Ставка,
	|	0 КАК МинимальнаяБаза,
	|	0 КАК КоэффициентСтавки,
	|	0 КАК БазаВычет,
	|	Взносы.ТипНачисления КАК ТипНачисления,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.ВзносыФОТ) КАК СпособРасчета
	|ИЗ
	|	Документ.АктПроверкиСтраховыхВзносов.ВзносыФОТ КАК Взносы
	|";
	
	ДанныеДляПроведения.Вставить("СтраховыеВзносы", Запрос.Выполнить().Выгрузить());

	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Для каждого СтрокаВзносы Из ВзносыФОТ Цикл
			
		Если СтрокаВзносы.МесяцРасчетногоПериода >= ПериодРегистрации Тогда
				
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='В строке %1, табличной части ""Взносы ФОТ"" налоговый период должен быть меньше периода регистрации!';uk='У рядку %1, табличній частині ""Внески ФОП"" податковий період повинен бути менше періоду реєстрації!'"),
						СтрокаВзносы.НомерСтроки);
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения, , "Объект.ВзносыФОТ[" + Формат(СтрокаВзносы.НомерСтроки -1, "ЧН=; ЧГ=") + "].МесяцРасчетногоПериода" , , Отказ);
				
		КонецЕсли;
					
		Если ОснованиеДляДоначисления = Перечисления.ОснованияДляДоначисленияСтраховыхВзносов.ДляИсправленияОшибок И СтрокаВзносы.ТипНачисления > 3 
			ИЛИ ОснованиеДляДоначисления = Перечисления.ОснованияДляДоначисленияСтраховыхВзносов.КамеральнаяПроверка И СтрокаВзносы.ТипНачисления < 11 
			Тогда
				
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='В строке %1, табличной части ""Взносы ФОТ"" не верно указан тип начисления!';uk='У рядку %1, табличній частині ""Внески ФОП"" не вірно вказано тип нарахування!'"),
						СтрокаВзносы.НомерСтроки);
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения, , "Объект.ВзносыФОТ[" + Формат(СтрокаВзносы.НомерСтроки -1, "ЧН=; ЧГ=") + "].ТипНачисления" , , Отказ);
				
		КонецЕсли;			
		
	КонецЦикла;
	
	Для каждого СтрокаВзносы Из Взносы Цикл
			
		Если СтрокаВзносы.МесяцРасчетногоПериода >= ПериодРегистрации Тогда
				
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='В строке %1, табличной части ""Взносы"" налоговый период должен быть меньше периода регистрации!';uk='У рядку %1, табличній частині ""Внески"" податковий період повинен бути менше періоду реєстрації!'"),
						СтрокаВзносы.НомерСтроки);
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения, , "Объект.Взносы[" + Формат(СтрокаВзносы.НомерСтроки -1, "ЧН=; ЧГ=") + "].МесяцРасчетногоПериода" , , Отказ);
				
		КонецЕсли;
		
		Если ОснованиеДляДоначисления = Перечисления.ОснованияДляДоначисленияСтраховыхВзносов.ДляИсправленияОшибок И СтрокаВзносы.ТипНачисления > 3 
			ИЛИ ОснованиеДляДоначисления = Перечисления.ОснованияДляДоначисленияСтраховыхВзносов.КамеральнаяПроверка И СтрокаВзносы.ТипНачисления < 11 
			Тогда
				
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='В строке %1, табличной части ""Взносы"" не верно указан тип начисления!';uk='У рядку %1, табличній частині ""Внески"" не вірно вказано тип нарахування!'"),
						СтрокаВзносы.НомерСтроки);
					
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения, , "Объект.Взносы[" + Формат(СтрокаВзносы.НомерСтроки -1, "ЧН=; ЧГ=") + "].ТипНачисления" , , Отказ);
				
		КонецЕсли;			
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли