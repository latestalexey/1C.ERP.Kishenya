#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка о списании депонированной зарплаты.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВыплатаБывшимСотрудникам";
	КомандаПечати.Идентификатор = "ПФ_MXL_СправкаОВыплатеБывшимСотрудникам";
	КомандаПечати.Представление = НСтр("ru='Справка о выплате бывшим сотрудникам';uk='Довідка про виплату колишнім співробітникам'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнитьКомплектВнешнимиПечатнымиФормами = Истина;

КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьСправку = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаОВыплатеБывшимСотрудникам");
	
	Если НужноПечататьСправку Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_СправкаОВыплатеБывшимСотрудникам",
			НСтр("ru='Справка о выплате бывшим сотрудникам';uk='Довідка про виплату колишнім співробітникам'"), ПечатьСправки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода), ,
			"Документ.ВыплатаБывшимСотрудникам.ПФ_MXL_СправкаОВыплатеБывшимСотрудникам",, Истина);
	КонецЕсли;
						
КонецПроцедуры								

Функция ПечатьСправки(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыплатаБывшимСотрудникам_СправкаОВыплатеБывшимСотрудникам";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	ДанныеПечатиОбъектов = ДанныеПечатиДокументов(МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыплатаБывшимСотрудникам.ПФ_MXL_СправкаОВыплатеБывшимСотрудникам", КодЯзыкаПечать);
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапкаПовторятьПриПечати = Макет.ПолучитьОбласть("ШапкаПовторятьПриПечати");
	ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ПервыйДокумент = Истина;
	
	Для Каждого ДанныеПечати Из ДанныеПечатиОбъектов Цикл
		
		ДанныеДокумента = ДанныеПечати.Значение;
		
		// Документы нужно выводить на разных страницах.
		Если Не ПервыйДокумент Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		Иначе
			ПервыйДокумент = Ложь;
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьМакетаШапка.Параметры.Заполнить(ДанныеДокумента);
		ДокументРезультат.Вывести(ОбластьМакетаШапка);
		
		Для каждого ДанныеСотрудника Из ДанныеДокумента.ТабличнаяЧастьДокумента Цикл
			
			МассивВыводимыхОбластей = Новый Массив;
			МассивВыводимыхОбластей.Добавить(ОбластьМакетаСтрока);
			МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, МассивВыводимыхОбластей) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ОбластьМакетаШапкаПовторятьПриПечати);
			КонецЕсли;
			
			ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеСотрудника);
			
			ДокументРезультат.Вывести(ОбластьМакетаСтрока);
			
		КонецЦикла;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДокумента);
		ДокументРезультат.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.Ссылка);
				
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ДанныеПечатиДокументов(МассивОбъектов)
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	ВалютаУчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ВыплатаБывшимСотрудникам.Ссылка,
	|	ВыплатаБывшимСотрудникам.Исполнитель,
	|	ВыплатаБывшимСотрудникам.ПланируемаяДатаВыплаты КАК Дата
	|ПОМЕСТИТЬ ВТДанныеДокументов
	|ИЗ
	|	Документ.ВыплатаБывшимСотрудникам КАК ВыплатаБывшимСотрудникам
	|ГДЕ
	|	ВыплатаБывшимСотрудникам.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Исполнитель"), "ВТДанныеДокументов");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыплатаБывшимСотрудникамНачисления.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(БанковскиеСчетаКонтрагентов.Ссылка) КАК БанковскийСчет
	|ПОМЕСТИТЬ ВТБанковскиеСчета
	|ИЗ
	|	Документ.ВыплатаБывшимСотрудникам.НачисленияУдержанияВзносы КАК ВыплатаБывшимСотрудникамНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|		ПО ВыплатаБывшимСотрудникамНачисления.ФизическоеЛицо = БанковскиеСчетаКонтрагентов.Владелец
	|ГДЕ
	|	ВыплатаБывшимСотрудникамНачисления.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаБывшимСотрудникамНачисления.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыплатаБывшимСотрудникам.Ссылка.Организация КАК Организация,
	|	ВыплатаБывшимСотрудникам.Ссылка.Организация.НаименованиеПолное КАК НазваниеОрганизации,
	|	ВыплатаБывшимСотрудникам.Ссылка.Подразделение.Наименование КАК Подразделение,
	|	ВыплатаБывшимСотрудникам.Ссылка КАК Ссылка,
	|	ВыплатаБывшимСотрудникам.Ссылка.Номер,
	|	НАЧАЛОПЕРИОДА(ВыплатаБывшимСотрудникам.Ссылка.Дата, ДЕНЬ) КАК Дата,
	|	ВыплатаБывшимСотрудникам.Ссылка.ВидВыплаты,
	|	ВыплатаБывшимСотрудникам.ФизическоеЛицо,
	|	ВыплатаБывшимСотрудникам.Начислено КАК Начислено,
	|	ВыплатаБывшимСотрудникам.НДФЛ,
	|	ВыплатаБывшимСотрудникам.Взносы,
	|	ВыплатаБывшимСотрудникам.КВыплате КАК КВыплате,
	|	БанковскиеСчета.БанковскийСчет.НомерСчета КАК НомерСчета,
	|	БанковскиеСчета.БанковскийСчет.Банк.Наименование КАК Банк,
	|	ФИООтветственныхЛиц.РасшифровкаПодписи КАК ИсполнительРасшифровкаПодписи,
	|	ВыплатаБывшимСотрудникам.Ссылка.ДолжностьИсполнителя КАК ДолжностьИсполнителя
	|ИЗ
	|	Документ.ВыплатаБывшимСотрудникам.НачисленияУдержанияВзносы КАК ВыплатаБывшимСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБанковскиеСчета КАК БанковскиеСчета
	|		ПО ВыплатаБывшимСотрудникам.ФизическоеЛицо = БанковскиеСчета.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИООтветственныхЛиц
	|		ПО ВыплатаБывшимСотрудникам.Ссылка = ФИООтветственныхЛиц.Ссылка
	|			И ВыплатаБывшимСотрудникам.Ссылка.Исполнитель = ФИООтветственныхЛиц.ФизическоеЛицо
	|ГДЕ
	|	ВыплатаБывшимСотрудникам.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	СУММА(Начислено),
	|	СУММА(Взносы),
	|	СУММА(КВыплате),
	|	МАКСИМУМ(ИсполнительРасшифровкаПодписи)
	|ПО
	|	Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	ГруппировкаПоДокументу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ГруппировкаПоДокументу.Следующий() Цикл
		
		ДанныеПечати = Новый Структура;
		ДанныеПечати.Вставить("Ссылка", ГруппировкаПоДокументу.Ссылка);
		ДанныеПечати.Вставить("НазваниеОрганизации", ГруппировкаПоДокументу.НазваниеОрганизации);
		ДанныеПечати.Вставить("НазваниеПодразделения", ГруппировкаПоДокументу.Подразделение);
		ДанныеПечати.Вставить("ЕдиницаИзмерения", ВалютаУчета.НаименованиеПолное);
		ДанныеПечати.Вставить("ВидВыплаты", ГруппировкаПоДокументу.ВидВыплаты);
		ДанныеПечати.Вставить("ДатаДокумента", Формат(ГруппировкаПоДокументу.Дата, "ДЛФ=D"));
		ДанныеПечати.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ГруппировкаПоДокументу.Номер, Истина, Истина));
		ДанныеПечати.Вставить("ДолжностьИсполнителя", ГруппировкаПоДокументу.ДолжностьИсполнителя);
		ДанныеПечати.Вставить("ИсполнительРасшифровкаПодписи", ГруппировкаПоДокументу.ИсполнительРасшифровкаПодписи);
		ДанныеПечати.Вставить("ТабличнаяЧастьДокумента", Новый Массив);
		
		ГруппировкаПоСотрудникам = ГруппировкаПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ГруппировкаПоСотрудникам.Следующий() Цикл
			
			СтрокаДанныхПечати = Новый Структура;
			СтрокаДанныхПечати.Вставить("СотрудникИРеквизиты", "");
			СтрокаДанныхПечати.Вставить("Начислено", ГруппировкаПоСотрудникам.Начислено);
			СтрокаДанныхПечати.Вставить("НДФЛ", ГруппировкаПоСотрудникам.НДФЛ);
			СтрокаДанныхПечати.Вставить("Взносы", ГруппировкаПоСотрудникам.Взносы);
			СтрокаДанныхПечати.Вставить("КВыплате", ГруппировкаПоСотрудникам.КВыплате);
			
			ДанныеФизическогоЛица = КадровыйУчет.КадровыеДанныеФизическихЛиц(
				Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ГруппировкаПоСотрудникам.ФизическоеЛицо), 
				"ФИОПолные,Пол", ГруппировкаПоДокументу.Дата);
			
			Если ДанныеФизическогоЛица.Количество() > 0 Тогда
				СтрокаДанныхПечати.СотрудникИРеквизиты = ДанныеФизическогоЛица[0].ФИОПолные;
			КонецЕсли;

			Если Не ПустаяСтрока(ГруппировкаПоСотрудникам.НомерСчета) Тогда
				СтрокаПодстановки = НСтр("ru='%1 (счет %2 в %3)';uk='%1 (рахунок %2 у %3)'");
				СтрокаДанныхПечати.СотрудникИРеквизиты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаПодстановки,
					СтрокаДанныхПечати.СотрудникИРеквизиты, ГруппировкаПоСотрудникам.НомерСчета, ГруппировкаПоСотрудникам.Банк);
			КонецЕсли;
			
			ДанныеПечати.ТабличнаяЧастьДокумента.Добавить(СтрокаДанныхПечати);
			
		КонецЦикла;
		
		ДанныеПечатиОбъектов.Вставить(ГруппировкаПоДокументу.Ссылка, ДанныеПечати);
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

#КонецОбласти

Функция ДанныеДляБухучетаЗарплатыПервичныхДокументов(Объект) Экспорт

	ДанныеДляБухучета = Новый Структура;
	ДанныеДляБухучета.Вставить("ДокументОснование", Объект.Ссылка);
	
	ТаблицаБухучетЗарплаты = ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаБухучетЗарплатыПервичныхДокументов();
	
	НоваяСтрока = ТаблицаБухучетЗарплаты.Добавить();
	НоваяСтрока.ДокументОснование = Объект.Ссылка;
	НоваяСтрока.НачислениеУдержание = Объект.ВидВыплаты;
	НоваяСтрока.СпособОтраженияЗарплатыВБухучете = Объект.СпособОтраженияЗарплатыВБухучете;
	НоваяСтрока.СтатьяФинансирования = Объект.СтатьяФинансирования;
	НоваяСтрока.СтатьяРасходов = Объект.СтатьяРасходов;
	
	ДанныеДляБухучета.Вставить("ТаблицаБухучетЗарплаты", ТаблицаБухучетЗарплаты);
	
	Возврат ДанныеДляБухучета;
	
КонецФункции

Процедура СоздатьВТДанныеДокумента(МенеджерВременныхТаблиц, ДокументСсылка, СписокФизическихЛиц = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Начисления.Ссылка.Организация,
		|	Начисления.Ссылка.ВидВыплаты.КодДоходаНДФЛ КАК КодДохода,
		|	Начисления.Ссылка.ПланируемаяДатаВыплаты КАК ПланируемаяДатаВыплаты,
		|	НАЧАЛОПЕРИОДА(Начисления.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК МесяцНалоговогоПериода,
		|	НАЧАЛОПЕРИОДА(Начисления.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
		|	Начисления.Ссылка.Подразделение,
		|	Начисления.Ссылка.ВидВыплаты.ВидЕСВ КАК ВидЕСВ,
		|	Начисления.Начислено КАК Сумма,
		|	Начисления.НДФЛ,
		|	Начисления.Ссылка.ВидВыплаты КАК Начисление,
		|	Начисления.Ссылка,
		|	Начисления.Ссылка.СтатьяФинансирования,
		|	Начисления.Ссылка.СтатьяРасходов,
		|	Начисления.Ссылка.СпособОтраженияЗарплатыВБухучете,
		|	Начисления.НомерСтроки
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	Документ.ВыплатаБывшимСотрудникам.НачисленияУдержанияВзносы КАК Начисления
		|ГДЕ
		|	Начисления.Ссылка = &Ссылка
		|	И Начисления.ФизическоеЛицо В(&СписокФизическихЛиц)";
		
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если СписокФизическихЛиц = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Начисления.ФизическоеЛицо В(&СписокФизическихЛиц)", "");
	Иначе
		Запрос.УстановитьПараметр("СписокФизическихЛиц", СписокФизическихЛиц);
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТНачисленияДокумента(МенеджерВременныхТаблиц, ДокументОбъект, Организация, ПериодРегистрации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокумента.ПериодРегистрации КАК ПериодРегистрации,
			|	ДанныеДокумента.Организация,
			|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
			|	ДанныеДокумента.ФизическоеЛицо,
			|	ДанныеДокумента.Подразделение,
			|	ДанныеДокумента.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
			|	ДанныеДокумента.Начисление,
			|	ДанныеДокумента.ВидДохода,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка) КАК ВидОперации,
			|	НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодРегистрации, МЕСЯЦ) КАК ДатаНачала,
			|	КОНЕЦПЕРИОДА(ДанныеДокумента.ПериодРегистрации, МЕСЯЦ) КАК ДатаОкончания,
			|	ДанныеДокумента.НомерСтроки КАК ИдентификаторСтроки,
			|	ДанныеДокумента.Сумма,
			|	ДанныеДокумента.СуммаВычета,
			|	ДанныеДокумента.Ссылка КАК ДокументОснование
			|ПОМЕСТИТЬ ВТНачисления
			|ИЗ
			|	ВТДанныеДокумента КАК ДанныеДокумента";
		
		Запрос.Выполнить();
		
		ДанныеФормы = ОтражениеЗарплатыВБухучетеРасширенный.ДополнительныеПараметрыДляОтраженияВБухучете();
		ДанныеФормы.БухучетПервичногоДокумента = Документы.ВыплатаБывшимСотрудникам.ДанныеДляБухучетаЗарплатыПервичныхДокументов(ДокументОбъект).ТаблицаБухучетЗарплаты;
		ДанныеФормы.ДокументСсылка = ДокументОбъект.Ссылка;
		
		ОтражениеЗарплатыВБухучетеРасширенный.СоздатьВТБухучетНачислений(Организация, НачалоМесяца(ПериодРегистрации), 0, Запрос.МенеджерВременныхТаблиц, ДанныеФормы);
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Начисления.ПериодРегистрации,
			|	Начисления.Организация,
			|	Начисления.Сотрудник,
			|	Начисления.ФизическоеЛицо,
			|	Начисления.Подразделение,
			|	Начисления.Начисление,
			|	Начисления.ВидДохода,
			|	Начисления.ДатаНачала,
			|	Начисления.ДатаОкончания,
			|	Начисления.ДокументОснование,
			|	БухучетНачислений.СтатьяФинансирования,
			|	БухучетНачислений.СтатьяРасходов,
			|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачислений.ОблагаетсяЕНВД,
			|	БухучетНачислений.Сумма,
			|	ВЫБОР
			|		КОГДА Начисления.Сумма = 0
			|			ТОГДА Начисления.СуммаВычета
			|		КОГДА БухучетНачислений.ОблагаетсяЕНВД
			|			ТОГДА ВЫРАЗИТЬ(Начисления.СуммаВычета * БухучетНачислений.Сумма / Начисления.Сумма КАК ЧИСЛО(15, 2))
			|		ИНАЧЕ Начисления.СуммаВычета - (ВЫРАЗИТЬ(Начисления.СуммаВычета * (Начисления.Сумма - БухучетНачислений.Сумма) / Начисления.Сумма КАК ЧИСЛО(15, 2)))
			|	КОНЕЦ КАК СуммаВычета
			|ПОМЕСТИТЬ ВТНачисленияДокумента
			|ИЗ
			|	ВТНачисления КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
			|		ПО Начисления.ИдентификаторСтроки = БухучетНачислений.ИдентификаторСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачислений";
		
	Иначе
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Начисления.ПериодРегистрации,
			|	Начисления.Организация,
			|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
			|	Начисления.ФизическоеЛицо,
			|	Начисления.Подразделение,
			|	Начисления.Начисление,
			|	Начисления.ВидЕСВ,
			|	НАЧАЛОПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) КАК ДатаНачала,
			|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) КАК ДатаОкончания,
			|	Начисления.Ссылка КАК ДокументОснование,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
			|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
			|	Начисления.Сумма
			|ПОМЕСТИТЬ ВТНачисленияДокумента
			|ИЗ
			|	ВТДанныеДокумента КАК Начисления";
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ДанныеДляПроведениеНДФЛ(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
		|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) КАК Начисление,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.КодДохода,
		|	ДанныеДокумента.ПланируемаяДатаВыплаты КАК ДатаПолученияДохода,
		|	ДанныеДокумента.Сумма КАК СуммаДохода,
		|	ДанныеДокумента.НДФЛ КАК Сумма,
		|	ДанныеДокумента.МесяцНалоговогоПериода,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.Подразделение КАК ПодразделениеСотрудника 
		|ИЗ
		|	ВТДанныеДокумента КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
		|";
		
	ДанныеУчетаНДФЛ = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеУчетаНДФЛ;
	
КонецФункции

Функция ДанныеДляПроведенияНДФЛИВычетов(МенеджерВременныхТаблиц) Экспорт
	
		ДанныеДляПроведения = Неопределено;
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Функция ДанныеДляПроведенияВзносы(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.ВидЕСВ,
		|	ДанныеДокумента.ПериодРегистрации КАК НалоговыйПериод,
		|	ДанныеДокумента.Начисление,
		|	ДанныеДокумента.ДатаНачала,
		|	ДанныеДокумента.Сумма
		|ИЗ
		|	ВТНачисленияДокумента КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НеУчитывается)";
		
	Возврат Запрос.Выполнить().Выгрузить();;
	
КонецФункции

#КонецОбласти

#КонецЕсли