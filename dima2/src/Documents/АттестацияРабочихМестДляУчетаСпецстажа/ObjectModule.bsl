#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция ДанныеДляПроведения(Документ)
	

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтрокиДокумента.НомерСтроки КАК НомерСтроки,
	               |	СтрокиДокумента.ШтатноеРасписание КАК РабочееМесто,
	               |	СтрокиДокумента.ОснованиеСпецСтажа,
	               |	СтрокиДокумента.Актуальность,
	               |	СтрокиДокумента.ЕдиницаВремени,
	               |	СтрокиДокумента.ГрафикНормы,
	               |	СтрокиДокумента.Сезонность,
	               |	АттестацияРабочихМестДляУчетаСпецстажа.Дата КАК Период,
	               |	АттестацияРабочихМестДляУчетаСпецстажа.Организация
	               |ИЗ
	               |	Документ.АттестацияРабочихМестДляУчетаСпецстажа.ШтатныеЕдиницы КАК СтрокиДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АттестацияРабочихМестДляУчетаСпецстажа КАК АттестацияРабочихМестДляУчетаСпецстажа
	               |		ПО СтрокиДокумента.Ссылка = АттестацияРабочихМестДляУчетаСпецстажа.Ссылка
	               |ГДЕ
	               |	СтрокиДокумента.Ссылка = &ДокументСсылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтрокиДокумента.НомерСтроки,
	               |	СтрокиДокумента.ШтатноеРасписание КАК РабочееМесто,
	               |	СтрокиДокумента.ОснованиеСпецСтажа,
	               |	СтрокиДокумента.ЕдиницаВремени,
	               |	СтрокиДокумента.ГрафикНормы,
	               |	ЛОЖЬ КАК Сезонность,
	               |	СтрокиДокумента.ДатаОкончания КАК Период,
	               |	ЛОЖЬ КАК Актуальность,
	               |	АттестацияРабочихМестДляУчетаСпецстажа.Дата,
	               |	АттестацияРабочихМестДляУчетаСпецстажа.Организация
	               |ИЗ
	               |	Документ.АттестацияРабочихМестДляУчетаСпецстажа.ШтатныеЕдиницы КАК СтрокиДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АттестацияРабочихМестДляУчетаСпецстажа КАК АттестацияРабочихМестДляУчетаСпецстажа
	               |		ПО СтрокиДокумента.Ссылка = АттестацияРабочихМестДляУчетаСпецстажа.Ссылка
	               |ГДЕ
	               |	СтрокиДокумента.Ссылка = &ДокументСсылка
	               |	И СтрокиДокумента.Актуальность = ИСТИНА
	               |	И СтрокиДокумента.ДатаОкончания <> &ПустаяДата";
	
	Результат = Запрос.ВыполнитьПакет();
	ДанныеДляПроведения = Новый Структура;
	ДанныеДляПроведения.Вставить("АктуальностьИстина", Результат[0].Выгрузить());
	ДанныеДляПроведения.Вставить("АктуальностьЛожь", Результат[1].Выгрузить());
	
	Возврат ДанныеДляПроведения


КонецФункции 

// Проверяет правильность заполнения реквизитов в строке ТЧ "Штатные единицы" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
Процедура ПроверитьЗаполнениеСтрокДокумента(ДанныеДляПроверки, Отказ)

	Для Каждого Запись Из ДанныеДляПроверки Цикл
		СтрокаНачалаСообщенияОбОшибке = НСтр("ru='В строке номер ';uk='У рядку номер '") + СокрЛП(Запись.НомерСтроки) + " ";
		
		// ЕдиницаВремени
		Если НЕ ЗначениеЗаполнено(Запись.ЕдиницаВремени) Тогда
			СтрокаОшибки = СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не указана единица времени!';uk='не вказана одиниця часу!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки,,,,Отказ);
		КонецЕсли;
		
		// ДатаОкончания
		Если (ЗначениеЗаполнено(Запись.Период)) И (Запись.Период <= Запись.Дата) Тогда
			СтрокаОшибки = СтрокаНачалаСообщенияОбОшибке + НСтр("ru='дата окончания меньше даты аттестации!';uk='дата закінчення менше дати атестації!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки,,,,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиШтатнойЕдиницы()

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведения(ЭтотОбъект.Ссылка);
	ПроверитьЗаполнениеСтрокДокумента(ДанныеДляПроведения.АктуальностьЛожь, Отказ);
	ДвижениеПоРегиструРабочиеМестаДляУчетаСпецстажа(ДанныеДляПроведения, Движения, Ссылка);
	
КонецПроцедуры

Процедура ДвижениеПоРегиструРабочиеМестаДляУчетаСпецстажа(Данные, Движения, Ссылка)
	
	Для Каждого Строка ИЗ Данные.АктуальностьИстина Цикл
		ЗаполнитьЗначенияСвойств(Движения.РабочиеМестаДляУчетаСпецстажа.Добавить(),Строка);
	КонецЦикла;
	
	Для Каждого Строка ИЗ Данные.АктуальностьЛожь Цикл
		ЗаполнитьЗначенияСвойств(Движения.РабочиеМестаДляУчетаСпецстажа.Добавить(),Строка);
	КонецЦикла;	
	
	Движения.РабочиеМестаДляУчетаСпецстажа.Записывать = Истина;
	Движения.РабочиеМестаДляУчетаСпецстажа.Записать();
	
КонецПроцедуры

#КонецЕсли