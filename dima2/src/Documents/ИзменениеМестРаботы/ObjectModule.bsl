#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "Сотрудники.ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Проведение документа
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведенияДокумента();
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, Ссылка);
	
	СтруктураПлановыхНачислений = Новый Структура;
	СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
	СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателей);
	
	РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений, Истина);
	
	РасчетЗарплатыРасширенный.СформироватьДвиженияЗначенийСовокупныхТарифныхСтавок(Движения, ДанныеДляПроведения.ДанныеСовокупныхТарифныхСтавок);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ТаблицаНачислений = РасчетЗарплатыРасширенный.ПустаяТаблицаПлановыхНачислений();
	СотрудникиДокумента = ОбщегоНазначения.ВыгрузитьКолонку(Сотрудники, "Сотрудник", Истина);
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоВременнойТаблице();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 				= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода				= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода			= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.РаботникиПоДоговорамГПХ 	= Неопределено;
	
	КадровыйУчет.ПроверитьРаботающихСотрудников(
		СотрудникиДокумента,
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект.ПоказателиСотрудников"));
		
	Для Каждого Строка Из Начисления Цикл 
		
		НоваяСтрока = ТаблицаНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		НоваяСтрока.Период = ДатаНачала;
		
	КонецЦикла;
	
	РасчетЗарплатыРасширенный.ПроверитьМножественностьОплатыВремени(ТаблицаНачислений, Ссылка, Отказ);
	ПроверитьУникальностьЗапрашиванияПоказателя(Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетовПриОтменеПроведения(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает данные для формирования движений.
// Возвращает Структуру с полями.
//		ПлановыеНачисления - данные, необходимые для формирования истории плановых начислений.
//		(см. РасчетЗарплатыРасширенный.СформироватьДвиженияПлановыхНачислений)
//		ЗначенияПоказателей (см. там же).
//
Функция ДанныеДляПроведенияДокумента()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(ДатаОкончания), КонецДня(ДатаОкончания) + 1, ДатаОкончания));
	
	// Подготовка данных для проведения.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
	|	КОНЕЦ КАК ДействуетДо,
	|	ИзменениеМестРаботыСотрудники.Сотрудник,
	|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
	|	ИзменениеМестРаботыСотрудники.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИзменениеМестРаботыНачисления.Начисление,
	|	ИзменениеМестРаботыНачисления.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ИзменениеМестРаботыНачисления.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Отменить)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Используется,
	|	ИзменениеМестРаботыНачисления.Размер
	|ИЗ
	|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеМестРаботы.Начисления КАК ИзменениеМестРаботыНачисления
	|		ПО ИзменениеМестРаботыСотрудники.Ссылка = ИзменениеМестРаботыНачисления.Ссылка
	|			И ИзменениеМестРаботыСотрудники.Сотрудник = ИзменениеМестРаботыНачисления.Сотрудник
	|ГДЕ
	|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеМестРаботыСотрудники.Ссылка.Организация,
	|	ИзменениеМестРаботыСотрудники.Сотрудник,
	|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
	|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
	|	КОНЕЦ КАК ДействуетДо,
	|	ИзменениеМестРаботыПоказатели.Показатель,
	|	ИзменениеМестРаботыПоказатели.ДокументОснование,
	|	МАКСИМУМ(ИзменениеМестРаботыПоказатели.Значение) КАК Значение
	|ИЗ
	|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеМестРаботы.Показатели КАК ИзменениеМестРаботыПоказатели
	|		ПО ИзменениеМестРаботыСотрудники.Ссылка = ИзменениеМестРаботыПоказатели.Ссылка
	|			И ИзменениеМестРаботыСотрудники.Сотрудник = ИзменениеМестРаботыПоказатели.Сотрудник
	|ГДЕ
	|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка
	|	И ИзменениеМестРаботыПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзменениеМестРаботыСотрудники.Ссылка.Организация,
	|	ИзменениеМестРаботыСотрудники.Сотрудник,
	|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
	|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала,
	|	ИзменениеМестРаботыПоказатели.Показатель,
	|	ИзменениеМестРаботыПоказатели.ДокументОснование,
	|	ВЫБОР
	|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
	|	ИзменениеМестРаботыСотрудники.Сотрудник,
	|	ИзменениеМестРаботыСотрудники.ФизическоеЛицо,
	|	ИзменениеМестРаботыСотрудники.СовокупнаяТарифнаяСтавка КАК Значение,
	|	ВЫБОР
	|		КОГДА ИзменениеМестРаботыСотрудники.СовокупнаяТарифнаяСтавка = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.ПустаяСсылка)
	|		ИНАЧЕ ИзменениеМестРаботыСотрудники.ВидТарифнойСтавки
	|	КОНЕЦ КАК ВидТарифнойСтавки,
	|	ВЫБОР
	|		КОГДА ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИзменениеМестРаботыСотрудники.Ссылка.ДатаОкончания, ДЕНЬ, 1)
	|	КОНЕЦ КАК ДействуетДо
	|ИЗ
	|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
	|ГДЕ
	|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИзменениеМестРаботыСотрудники.Ссылка.ДатаНачала КАК ДатаСобытия,
	|	ИзменениеМестРаботыСотрудники.Сотрудник
	|ИЗ
	|	Документ.ИзменениеМестРаботы.Сотрудники КАК ИзменениеМестРаботыСотрудники
	|ГДЕ
	|	ИзменениеМестРаботыСотрудники.Ссылка = &Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПроведения = Новый Структура; 
	
	// Первый набор данных для проведения - таблица для формирования плановых начислений.
	ПлановыеНачисления = РезультатыЗапроса[0].Выгрузить();
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", ПлановыеНачисления);
	
	// Второй набор данных для проведения - таблица для формирования значений показателей.
	ЗначенияПоказателей = РезультатыЗапроса[1].Выгрузить();
	ДанныеДляПроведения.Вставить("ЗначенияПоказателей", ЗначенияПоказателей);
	
	// Третий набор данных для проведения - таблица для формирования значений совокупных тарифных ставок.
	ДанныеСовокупныхТарифныхСтавок = РезультатыЗапроса[2].Выгрузить();
	ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", ДанныеСовокупныхТарифныхСтавок);
	
	// Четвертый набор данных для проведения - таблица для формирования времени регистрации документа.
	СотрудникиДаты = РезультатыЗапроса[3].Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура СоздатьВТДанныеДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Сотрудник,
		|	НАЧАЛОПЕРИОДА(ТаблицаДокумента.Ссылка.ДатаНачала, МЕСЯЦ) КАК ПериодДействия,
		|	ТаблицаДокумента.Ссылка КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка.Организация,
		|	ТаблицаДокумента.Сотрудник,
		|	НАЧАЛОПЕРИОДА(ТаблицаДокумента.Ссылка.ДатаОкончания, МЕСЯЦ),
		|	ТаблицаДокумента.Ссылка
		|ИЗ
		|	Документ.ИзменениеМестРаботы.Сотрудники КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор
		|	И ТаблицаДокумента.Ссылка.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)";
		
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПроверитьУникальностьЗапрашиванияПоказателя(Отказ)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаСобытия", 				ДатаНачала);
	Запрос.УстановитьПараметр("ТаблицаНачислений", 			Начисления);
	Запрос.УстановитьПараметр("ПоказателиСотрудников", 		Показатели);
	Запрос.УстановитьПараметр("ДополнительныеПоказатели", 	РасчетЗарплатыРасширенный.ПустаяТаблицаДополнительныхПоказателей());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВидовРасчета.Сотрудник КАК Сотрудник,
	|	ТаблицаВидовРасчета.Начисление КАК Начисление,
	|	ТаблицаВидовРасчета.ДокументОснование КАК ДокументОснование,
	|	ТаблицаВидовРасчета.Действие КАК Действие
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	&ТаблицаНачислений КАК ТаблицаВидовРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиСотрудников.Сотрудник КАК Сотрудник,
	|	ПоказателиСотрудников.Показатель КАК Показатель,
	|	ПоказателиСотрудников.ДокументОснование КАК ДокументОснование,
	|	ПоказателиСотрудников.Значение КАК ЗначениеПоказателя
	|ПОМЕСТИТЬ ВТПоказатели
	|ИЗ
	|	&ПоказателиСотрудников КАК ПоказателиСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДатаСобытия КАК Период,
	|	Начисления.Сотрудник,
	|	Начисления.Начисление,
	|	Начисления.ДокументОснование,
	|	Начисления.Действие,
	|	ПоказателиНачислений.Показатель
	|ПОМЕСТИТЬ ВТПоказателиНачислений
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления.Показатели КАК ПоказателиНачислений
	|		ПО Начисления.Начисление = ПоказателиНачислений.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиНачислений.Период,
	|	ПоказателиНачислений.Сотрудник,
	|	ПоказателиНачислений.Начисление,
	|	ПоказателиНачислений.ДокументОснование,
	|	ПоказателиНачислений.Действие,
	|	ПоказателиНачислений.Показатель,
	|	ПоказателиСотрудников.ЗначениеПоказателя
	|ПОМЕСТИТЬ ВТПоказателиВидовРасчета
	|ИЗ
	|	ВТПоказателиНачислений КАК ПоказателиНачислений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоказатели КАК ПоказателиСотрудников
	|		ПО ПоказателиНачислений.Показатель = ПоказателиСотрудников.Показатель
	|			И ПоказателиНачислений.ДокументОснование = ПоказателиСотрудников.ДокументОснование
	|			И ПоказателиНачислений.Сотрудник = ПоказателиСотрудников.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеПоказатели.Период КАК Период,
	|	ДополнительныеПоказатели.Сотрудник КАК Сотрудник,
	|	ДополнительныеПоказатели.Показатель КАК Показатель,
	|	ДополнительныеПоказатели.ЗначениеПоказателя КАК ЗначениеПоказателя,
	|	ДополнительныеПоказатели.Действие КАК Действие
	|ПОМЕСТИТЬ ВТДополнительныеПоказатели
	|ИЗ
	|	&ДополнительныеПоказатели КАК ДополнительныеПоказатели";
				   
	Запрос.Выполнить();
	
	РасчетЗарплатыРасширенный.ПроверитьУникальностьЗапрашиванияПоказателя(Запрос.МенеджерВременныхТаблиц, Ссылка, Отказ);
				   
КонецПроцедуры

#КонецОбласти

#КонецЕсли