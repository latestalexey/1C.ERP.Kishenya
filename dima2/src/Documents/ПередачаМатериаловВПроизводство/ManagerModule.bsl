#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область Заполнение

// Возвращает результат запроса для заполнения накладной по заказам/ордерам
//
// Параметры:
//  ДанныеОтбора   - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//  КонтекстВызова - Строка - определяет контекст вызова процедуры: "Подбор", "Заполнение".
//
// Возвращаемое значение:
//  Результат - Выборка, Структура - выборка результата запроса, либо структура содержащая выборку результата запроса
//                                   и дополнительные данные для заполнения.
//
Функция РезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, КонтекстВызова) Экспорт
	
	// Описание всех возможных параметров запроса.
	ПараметрыЗапросов = Новый Структура("ОтобратьПоЗаказу, МассивЗаказов,
	                                    |Организация, Подразделение, Склад,
	                                    |Регистратор, ТоварыНакладной, НакладнаяПоЗаказам");
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Ложь);
	ПараметрыЗапросов.Вставить("ЗаполнятьПоСобирается", Ложь);
	
	СписокЗапросов   = Новый СписокЗначений();
	ИменаПодзапросов = Новый Массив();
	
	// Обработка параметров вызова метода.
	Если КонтекстВызова = "СозданиеНаОсновании" Тогда
		
		ПараметрыЗапросаДляСозданияНаОсновании(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "Подбор" Тогда
		
		ПараметрыЗапросаДляПодбора(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "ПерезаполнениеПоОрдерам" Тогда
		
		ПараметрыЗапросаДляПерезаполненияПоОрдерам(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "ЗаполнениеПоЗаказам" Тогда
		
		ПараметрыЗапросаДляЗаполненияПоЗаказам(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	КонецЕсли;
	
	// Описание всех возможных текстов запросов.
	ТекстыЗапросов = Новый Соответствие();
	ТекстыЗапросов.Вставить("ВтЗаказыОтбор",      ТекстЗапросаВременнойТаблицыРаспоряжений());
	ТекстыЗапросов.Вставить("ВтНакладная",        ТекстЗапросаВременнойТаблицыНакладной());
	ТекстыЗапросов.Вставить("ТаблицаОтгружено",   ТекстЗапросаОтгруженоПоОрдерам());
	ТекстыЗапросов.Вставить("ВтСписокМатериалов", ТекстЗапросаВременнойТаблицыСпискаМатериалов());
	
	// Используемые подзапросы для формирования таблицы "ТаблицаОформить" должны быть обернуты методом ТекстЗапросаОбъединения(...).
	ТекстыПодзапросов = Новый Соответствие();
	
	Если ДанныеОтбора.Свойство("СписокМатериалов") Тогда
		ТекстыПодзапросов.Вставить("БлокРегистрЗаказы", ТекстЗапросаОстаткиРегистраЗаказыСОтборомМатериалов());
	Иначе
		ТекстыПодзапросов.Вставить("БлокРегистрЗаказы", ТекстЗапросаОстаткиРегистраЗаказы());
	КонецЕсли; 
	
	ТекстыПодзапросов.Вставить("БлокСторноНакладная",        ТекстЗапросаСторноНакладная());
	ТекстыПодзапросов.Вставить("БлокНовыеДвиженияНакладная", ТекстЗапросаНовыеДвиженияНакладная());
	
	Для Каждого Элемент Из СписокЗапросов Цикл
		Элемент.Представление = ТекстыЗапросов[Элемент.Значение];
	КонецЦикла;
	
	Элемент = СписокЗапросов.НайтиПоЗначению("ТаблицаОформить");
	Если Элемент <> Неопределено Тогда
		Элемент.Представление = ТекстЗапросаОбъединения(ИменаПодзапросов, ТекстыПодзапросов);
	КонецЕсли;
	
	// Инициализация запроса.
	Запрос = Новый Запрос();
	
	Для Каждого Параметр Из ПараметрыЗапросов Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Для Каждого Элемент Из СписокЗапросов Цикл
		Запрос.Текст = Запрос.Текст + Элемент.Представление;
	КонецЦикла;
	
	// Выполнение запроса, возврат результата.
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураРезультата = Новый Структура();
	Для Каждого Элемент Из СписокЗапросов Цикл
		СтруктураРезультата.Вставить(Элемент.Значение, РезультатЗапроса[СписокЗапросов.Индекс(Элемент)].Выгрузить());
	КонецЦикла;
	
	Возврат СтруктураРезультата;
	
КонецФункции

// Формирует структуру для создания внутреннего потребления товаров по одному или нескольким заказам на внутреннее потреление/заказам на ремонт
//  Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
//  МассивСсылок - Массив - заказы на внутреннее потребление, по которым необходимо ввести накладную
//  РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
//  Булево - Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция ДанныеЗаполненияНакладной(МассивСсылок, СвойстваЗаказов = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(СвойстваЗаказов) Тогда
		
		СписокРеквизитов = Новый Массив;
		СписокРеквизитов.Добавить(Новый Структура("ИмяРеквизита,Значение,ВыбраныРазные,ИмяПоляРазличных,РазличныхОрганизаций", 
			"Организация", Неопределено, Ложь, "РазличныхОрганизаций", 1));
		СписокРеквизитов.Добавить(Новый Структура("ИмяРеквизита,Значение,ВыбраныРазные,ИмяПоляРазличных,РазличныхСкладов", 
			"Склад", Неопределено, Ложь, "РазличныхСкладов", 1));
		СписокРеквизитов.Добавить(Новый Структура("ИмяРеквизита,Значение,ВыбраныРазные,ИмяПоляРазличных,РазличныхПодразделений", 
			"Подразделение", Неопределено, Ложь, "РазличныхПодразделений", 1));
		
		Если СвойстваЗаказов <> Неопределено Тогда
			Для каждого ЗначенияСвойствЗаказа Из СвойстваЗаказов Цикл
				Если МассивСсылок.Найти(ЗначенияСвойствЗаказа.Ссылка) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Для каждого ПараметрыРеквизита Из СписокРеквизитов Цикл
					Если ПараметрыРеквизита.Значение <> Неопределено 
						И ЗначенияСвойствЗаказа[ПараметрыРеквизита.ИмяРеквизита] <> ПараметрыРеквизита.Значение Тогда
						ПараметрыРеквизита.ВыбраныРазные = Истина;
						
						ИмяПоляРазличных = ПараметрыРеквизита["ИмяПоляРазличных"];
						ПараметрыРеквизита[ИмяПоляРазличных] = ПараметрыРеквизита[ИмяПоляРазличных] + 1;
						
					Иначе
						ПараметрыРеквизита.Значение = ЗначенияСвойствЗаказа[ПараметрыРеквизита.ИмяРеквизита]; 
					КонецЕсли; 
				КонецЦикла; 
			КонецЦикла; 
		КонецЕсли;
		
		РеквизитыШапки = Новый Структура;
		РеквизитыШапки.Вставить("РазличныхОрганизаций", 1);
		РеквизитыШапки.Вставить("РазличныхСкладов", 1);
		РеквизитыШапки.Вставить("РазличныхПодразделений", 1);
		
		Для каждого ПараметрыРеквизита Из СписокРеквизитов Цикл
			РеквизитыШапки.Вставить(ПараметрыРеквизита.ИмяРеквизита, ПараметрыРеквизита.Значение);
			РеквизитыШапки.Вставить(ПараметрыРеквизита.ИмяРеквизита + "ВыбраныРазные", ПараметрыРеквизита.ВыбраныРазные);
			Если ПараметрыРеквизита.ВыбраныРазные Тогда
				ИмяПоляРазличных = ПараметрыРеквизита["ИмяПоляРазличных"];
				РеквизитыШапки.Вставить(ИмяПоляРазличных, ПараметрыРеквизита[ИмяПоляРазличных]);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ТекстыЗапроса = Новый СписокЗначений();
		ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаОтгрузить(),       "ТаблицаЕстьОтгрузить");
		
		//++ НЕ УТКА
		ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаРеквизитовШапкиВтЗаказыНаРемонт(), "ВтЗаказыНаРемонт");
		//-- НЕ УТКА
		
		ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаРеквизитовШапки(), "ТаблицаРеквизитыШапки");
		
		СначалаОрдера = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить()
			= Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаОрдера;
		
		Если СначалаОрдера Тогда
			ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаНаличияОрдеров(), "ТаблицаЕстьОрдера");
		КонецЕсли;
		
		Таблицы = Новый Структура();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
		Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
		ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, Таблицы);
		
		РеквизитыШапки = Новый Структура("ХозяйственнаяОперация, РазличныхОпераций,
		|Организация, РазличныхОрганизаций,
		|Склад, РазличныхСкладов,
		|Подразделение, РазличныхПодразделений,
		|Статус, Проведен");
		ЗаполнитьЗначенияСвойств(РеквизитыШапки, Таблицы.ТаблицаРеквизитыШапки[0]);
		
		РеквизитыШапки.Вставить("ЕстьОтгрузить", Таблицы.ТаблицаЕстьОтгрузить.Количество() > 0);
		РеквизитыШапки.Вставить("ЕстьОрдера",    Не СначалаОрдера Или Таблицы.ТаблицаЕстьОрдера.Количество() > 0);
		
	КонецЕсли;
	
	Возврат РеквизитыШапки;
	
КонецФункции

// Проверяет возможность создания внутреннего потребления на основании структуры данных для заполнения внутреннего потребления.
//
//  Параметры:
//   РеквизитыШапки - Структура - структура с полями:
//                                РазличныхОпераций,
//                                РазличныхОрганизаций,
//                                РазличныхОрганизацийПолучателей,
//                                РазличныхСкладовОтправителей,
//                                РазличныхСкладовПолучателей,
//                                РазличныхПодразделений.
//   ТекстПредупреждения - текст предупреждения, устанавливается если одно перемещение создать невозможно.
//
//  Возвращаемое значение:
//   Структура - содержит поля "ЕстьОшибки" - Истина, если одно перемещение создать возможно, иначе - ложь, "ТекстПредупреждения" - текст ошибки при наличии.
//
Функция ПроверитьДанныеЗаполненияНакладной(РеквизитыШапки) Экспорт
	
	ТекстОшибки = "";
	Если РеквизитыШапки.РазличныхОрганизаций > 1 Тогда
		ТекстОшибки = НСтр("ru='Оформление документа невозможно.
                                        |Необходимо выбрать заказы одной организации.'
                                        |;uk='Оформлення документа неможливо.
                                        |Необхідно вибрати замовлення однієї організації.'");
										
	ИначеЕсли РеквизитыШапки.РазличныхСкладов > 1
		ИЛИ РеквизитыШапки.РазличныхПодразделений > 1 Тогда
		
		ТекстОшибки = НСтр("ru='Оформление документа невозможно.
                                        |Необходимо выбрать заказы одного подразделения и одного склада.'
                                        |;uk='Оформлення документа неможливо.
                                        |Необхідно вибрати замовлення одного підрозділу і одного складу.'");
	КонецЕсли; 
	
	Результат = Новый Структура("ЕстьОшибки, ТекстОшибки, ЕстьПредупреждения, ТекстПредупреждения",
		ТекстОшибки <> "", ТекстОшибки, Ложь);
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру необходимую для дальнейшего использования при заполнении документа по заказу или ордерам
// 
// Возвращаемое значение:
//   - Структура
//
Функция ПараметрыЗаполненияДокумента() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("Менеджер", Документы.ПередачаМатериаловВПроизводство);
	ПараметрыЗаполнения.Вставить("ИмяРегистраЗаказ", "ЗаказыМатериаловВПроизводство");
	ПараметрыЗаполнения.Вставить("МенеджерРегистраЗаказ", РегистрыНакопления.ЗаказыМатериаловВПроизводство);
	ПараметрыЗаполнения.Вставить("ИмяПоляЗаказ", "Распоряжение");
	ПараметрыЗаполнения.Вставить("Дата", КонецДня(ТекущаяДата()));
	ПараметрыЗаполнения.Вставить("КлючевыеПоля", "Номенклатура, Характеристика, Серия, Назначение");
	ПараметрыЗаполнения.Вставить("ДополнительныеПоляТаблицыДокумента", "Упаковка, КодСтроки,
		|СтатусУказанияСерий, Распоряжение, ГруппаПродукции");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ДополнитьСтрокиТаблицыПерезаполненияПоЗаказу(ТаблицаНовыхСтрок) Экспорт
	
	// Заказ на внутреннее потребление
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Назначение,
	|	НовыеСтроки.НазначениеОтправителя,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.КодСтроки,
	|	НовыеСтроки.Распоряжение
	|ПОМЕСТИТЬ втНовыеСтроки
	|ИЗ
	|	&ТаблицаНовыеСтроки КАК НовыеСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.КодСтроки,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Назначение,
	|	НовыеСтроки.НазначениеОтправителя,
	|	ЗаказМатериаловВПроизводствоТовары.Упаковка,
	|	ЗаказМатериаловВПроизводствоТовары.КоличествоУпаковок,
	|	ЗаказМатериаловВПроизводствоТовары.ДатаОтгрузки,
	|	ЗаказМатериаловВПроизводствоТовары.Отменено,
	|	ЗаказМатериаловВПроизводствоТовары.СтатусУказанияСерий,
	|	ЗаказМатериаловВПроизводствоТовары.ВариантОбеспечения,
	|	ЗаказМатериаловВПроизводствоТовары.ГруппаПродукции,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	НовыеСтроки.Серия КАК Серия,
	|	ЗаказМатериаловВПроизводствоТовары.Ссылка КАК Распоряжение
	|ИЗ
	|	Документ.ЗаказМатериаловВПроизводство.Товары КАК ЗаказМатериаловВПроизводствоТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНовыеСтроки КАК НовыеСтроки
	|		ПО ЗаказМатериаловВПроизводствоТовары.Номенклатура = НовыеСтроки.Номенклатура
	|			И ЗаказМатериаловВПроизводствоТовары.Характеристика = НовыеСтроки.Характеристика
	|			И ЗаказМатериаловВПроизводствоТовары.Серия = НовыеСтроки.Серия
	|			И ЗаказМатериаловВПроизводствоТовары.КодСтроки = НовыеСтроки.КодСтроки
	|			И ЗаказМатериаловВПроизводствоТовары.Ссылка = НовыеСтроки.Распоряжение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.КодСтроки,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Назначение,
	|	НовыеСтроки.НазначениеОтправителя,
	|	ЗаказНаПроизводствоМатериалыИУслуги.Упаковка,
	|	ЗаказНаПроизводствоМатериалыИУслуги.КоличествоУпаковокОборот,
	|	NULL,
	|	ЗаказНаПроизводствоМатериалыИУслуги.Отменено,
	|	0,
	|	ЗаказНаПроизводствоМатериалыИУслуги.ВариантОбеспечения,
	//++ НЕ УТКА
	|	ЕСТЬNULL(ДанныеДокументаЗаказНаПроизводствоПродукция.Номенклатура.ГруппаАналитическогоУчета,
	//-- НЕ УТКА
	|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) 
	//++ НЕ УТКА
	|			)
	//-- НЕ УТКА
	|			КАК ГруппаПродукции,
	|	ЗаказНаПроизводствоМатериалыИУслуги.Склад,
	|	НовыеСтроки.Серия,
	|	ЗаказНаПроизводствоМатериалыИУслуги.Распоряжение
	|ИЗ
	|РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты КАК ЗаказНаПроизводствоМатериалыИУслуги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНовыеСтроки КАК НовыеСтроки
	|		ПО ЗаказНаПроизводствоМатериалыИУслуги.Номенклатура = НовыеСтроки.Номенклатура
	|			И ЗаказНаПроизводствоМатериалыИУслуги.Характеристика = НовыеСтроки.Характеристика
	|			И ЗаказНаПроизводствоМатериалыИУслуги.Серия = НовыеСтроки.Серия
	|			И ЗаказНаПроизводствоМатериалыИУслуги.КодСтроки = НовыеСтроки.КодСтроки
	|			И ЗаказНаПроизводствоМатериалыИУслуги.Распоряжение = НовыеСтроки.Распоряжение
	//++ НЕ УТКА
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.МатериалыИУслуги КАК ДанныеДокументаЗаказНаПроизводствоТовары
	|		ПО ЗаказНаПроизводствоМатериалыИУслуги.Распоряжение = ДанныеДокументаЗаказНаПроизводствоТовары.Ссылка
	|			И ЗаказНаПроизводствоМатериалыИУслуги.КодСтрокиРаспоряжения = ДанныеДокументаЗаказНаПроизводствоТовары.КодСтроки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ДанныеДокументаЗаказНаПроизводствоПродукция
	|		ПО ДанныеДокументаЗаказНаПроизводствоПродукция.Ссылка = ДанныеДокументаЗаказНаПроизводствоТовары.Ссылка
	|			И ДанныеДокументаЗаказНаПроизводствоПродукция.КлючСвязи = ДанныеДокументаЗаказНаПроизводствоТовары.КлючСвязиПродукция
	//-- НЕ УТКА
	|";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("ТаблицаНовыеСтроки", ТаблицаНовыхСтрок);
	
	ТаблицаНайденныеДопРеквизиты = Запрос.Выполнить().Выгрузить();
	
	ИтоговаяТаблица = ТаблицаНайденныеДопРеквизиты.СкопироватьКолонки();
	
	Отбор = Новый Структура("Распоряжение, КодСтроки, Номенклатура, Характеристика, Серия, Назначение, НазначениеОтправителя");
	
	// Слияние доп. реквизитов и строк, для которых не были найдены данные
	Для Каждого Строка Из ТаблицаНовыхСтрок Цикл
		НоваяСтрока = ИтоговаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		ЗаполнитьЗначенияСвойств(Отбор, Строка);
		
		НайденныеСтроки = ТаблицаНайденныеДопРеквизиты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			СтрокаЗаказа = НайденныеСтроки[0];
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаказа,, "Количество");
			
			НазначениеОтправителя = Справочники.Назначения.ПустаяСсылка();
			
			// Расчет назначения отправителя
			Если ТипЗнч(Строка.Распоряжение) <> Тип("ДокументСсылка.ЗаказМатериаловВПроизводство") Тогда
				НазначениеОтправителя = НоваяСтрока.Назначение;
			ИначеЕсли СтрокаЗаказа.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить Тогда
				НазначениеОтправителя = Справочники.Назначения.ПустаяСсылка();
			ИначеЕсли СтрокаЗаказа.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно
				И НоваяСтрока.Назначение = Справочники.Назначения.ПустаяСсылка() Тогда
				НазначениеЗаказа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Распоряжение, "Назначение");
				НазначениеОтправителя = НазначениеЗаказа;
			Иначе
				НазначениеОтправителя = НоваяСтрока.Назначение;
			КонецЕсли;
			
			НоваяСтрока.НазначениеОтправителя = НазначениеОтправителя;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Процедура ЗаполнитьШапкуДокументаПоЗаказу(Объект, ПараметрыЗаполнения, МассивЗаказов) Экспорт
	
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.РеквизитыШапки);
	
	Объект.ПередачаПоРаспоряжениям = Истина;
	
	Объект.Дата = ?(МассивЗаказов.Количество() = 1,
		ЗаказыСервер.ПолучитьМинимальнуюДатуОтгрузкиЗаказа(МассивЗаказов, ПараметрыЗаполнения.ИмяРегистраЗаказ, 
			ПараметрыЗаполнения.ИмяПоляЗаказ),
		ЗаказыСервер.ПолучитьМаксимальнуюДатуОтгрузкиЗаказа(МассивЗаказов, ПараметрыЗаполнения.ИмяРегистраЗаказ, 
			ПараметрыЗаполнения.ИмяПоляЗаказ));
	
	// Заполнение серий.
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ПередачаМатериаловВПроизводство);
	НоменклатураСервер.ЗаполнитьСерииПоFEFO(Объект, ПараметрыУказанияСерий, Ложь);
	
	// Заполнение заказа(-ов) в шапке.
	ЗаказыСервер.ЗаполнитьЗаказВШапкеПоЗаказамВТабличнойЧасти(Объект.Распоряжение, Объект.Товары, ПараметрыЗаполнения.ИмяПоляЗаказ);
	
КонецПроцедуры

// Процедура пересчитывает поле КоличествоУпаковок и другие зависимые поля
//
// Параметры:
//  Товары				 - ДанныеФормыКоллекция - Табличная часть "Товары"
//  ПараметрыЗаполнения	 - Структура - 
//
Процедура ОбновитьЗависимыеРеквизитыТабличнойЧасти(Товары, ПараметрыЗаполнения) Экспорт
	
	СтруктураДействий = Новый Структура;
	Если ПараметрыЗаполнения.ФормаОткрыта Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	КонецЕсли;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	Для Каждого Строка Из Товары Цикл
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает таблицу Товары
//
// Параметры:
//  Накладная	 - Ссылка - Ссылка на накладную, табличную часть Товары которой необходимо вернуть
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//
Функция ДанныеТаблицыТоварыДокумента(Накладная) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаМатериаловВПроизводствоТовары.НомерСтроки,
	|	ПередачаМатериаловВПроизводствоТовары.Номенклатура,
	|	ПередачаМатериаловВПроизводствоТовары.Характеристика,
	|	ПередачаМатериаловВПроизводствоТовары.Назначение,
	|	ПередачаМатериаловВПроизводствоТовары.НазначениеОтправителя,
	|	ПередачаМатериаловВПроизводствоТовары.Упаковка,
	|	ПередачаМатериаловВПроизводствоТовары.КоличествоУпаковок,
	|	ПередачаМатериаловВПроизводствоТовары.Количество,
	|	ПередачаМатериаловВПроизводствоТовары.КодСтроки,
	|	ПередачаМатериаловВПроизводствоТовары.СтатусУказанияСерий,
	|	ПередачаМатериаловВПроизводствоТовары.Распоряжение,
	|	ПередачаМатериаловВПроизводствоТовары.ИдентификаторСтроки,
	|	ПередачаМатериаловВПроизводствоТовары.Серия,
	|	ПередачаМатериаловВПроизводствоТовары.АналитикаУчетаНоменклатуры,
	|	ПередачаМатериаловВПроизводствоТовары.СтатусУказанияСерийОтправитель,
	|	ПередачаМатериаловВПроизводствоТовары.СтатусУказанияСерийПолучатель,
	|	ПередачаМатериаловВПроизводствоТовары.ГруппаПродукции
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ПередачаМатериаловВПроизводствоТовары
	|ГДЕ
	|	ПередачаМатериаловВПроизводствоТовары.Ссылка = &Накладная";
	
	Запрос.УстановитьПараметр("Накладная", Накладная);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Подразделение,Статус,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе.
//
//	Параметры
//		Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
//	Возвращаемое значение
//		Тип Структура
//			Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаМатериаловВПроизводство";
	
	ПараметрыСерийОтправитель = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	ПараметрыСерийПолучатель  = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.Подразделение);
	
	ИспользоватьОрдернуюСхемуОтправитель = СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(Объект.Склад, Объект.Дата);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийОтправитель.ИспользоватьСерииНоменклатуры
														ИЛИ ПараметрыСерийПолучатель.ИспользоватьСерииНоменклатуры
														ИЛИ ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийОтправитель.УчитыватьСебестоимостьПоСериям
														ИЛИ ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
														
	ПараметрыУказанияСерий.ИмяПоляСклад = "Склад";
	ПараметрыУказанияСерий.ИмяПоляСкладОтправитель = "Склад";
	ПараметрыУказанияСерий.ИмяПоляСкладПолучатель  = "Подразделение";
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоПриемка);
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НазначениеОтправителя");
		
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерий.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерий.ФактОтбора           = Истина;
	
	ПараметрыУказанияСерий.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_Распоряжение");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_КодСтроки");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= СкладОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|									ТОГДА 6
	|								ИНАЧЕ 8
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА 5
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоПеремещению
	|				И &ФактОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УказыватьПриПолученииМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	Товары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерийОтправительСтарый,
	|	Товары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерийПолучательСтарый
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО ТоварыДляЗапроса.Номенклатура = Товары.Номенклатура
	|			И ТоварыДляЗапроса.Характеристика = Товары.Характеристика
	|			И ТоварыДляЗапроса.Назначение = Товары.Назначение
	|			И ТоварыДляЗапроса.НазначениеОтправителя = Товары.НазначениеОтправителя
	|		ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|		ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|			И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|			И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			И ТоварыДляЗапроса.НазначениеОтправителя = СерииДляЗапроса.НазначениеОтправителя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОтправитель
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладОтправитель
	|			ПО (СкладОтправитель.Ссылка = &СкладОтправитель)
	|				И (ПолитикиУчетаСерийОтправитель.Склад = &СкладОтправитель)
	|		ПО ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерийОтправитель.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПолучатель
	|		ПО ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка
	|			И ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки,
	|	Статусы.СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА &ПередачаВПроизводствоПриемка
	|			ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА Статусы.СтатусУказанияСерийПолучатель В (13, 14, 9, 10)
	|				И Статусы.СтатусУказанияСерийОтправитель <> 0
	|			ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|		КОГДА Статусы.СтатусУказанияСерийОтправитель В (5, 6)
	|			ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|		КОГДА Статусы.СтатусУказанияСерийОтправитель > ВЫБОР
	|				КОГДА &ПередачаВПроизводствоПриемка
	|					ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ПередачаВПроизводствоПриемка
	|					ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	(Статусы.СтатусУказанияСерийОтправитель <> Статусы.СтатусУказанияСерийОтправительСтарый
	|			ИЛИ ВЫБОР
	|				КОГДА &ПередачаВПроизводствоПриемка
	|					ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|				ИНАЧЕ 0
	|			КОНЕЦ <> Статусы.СтатусУказанияСерийПолучательСтарый
	|			ИЛИ ВЫБОР
	|				КОГДА Статусы.СтатусУказанияСерийПолучатель В (13, 14, 9, 10)
	|						И Статусы.СтатусУказанияСерийОтправитель <> 0
	|					ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|				КОГДА Статусы.СтатусУказанияСерийОтправитель В (5, 6)
	|					ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|				КОГДА Статусы.СтатусУказанияСерийОтправитель > ВЫБОР
	|						КОГДА &ПередачаВПроизводствоПриемка
	|							ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|					ТОГДА Статусы.СтатусУказанияСерийОтправитель
	|				ИНАЧЕ ВЫБОР
	|						КОГДА &ПередачаВПроизводствоПриемка
	|							ТОГДА Статусы.СтатусУказанияСерийПолучатель
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ <> Статусы.СтатусУказанияСерийСтарый)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статусы.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Процедура заполняет серии товаров по расходным ордерам, выписанным на основе этого документа
//	Объект - ДокументОбъект или ДанныеФормыСтуктура - заполняемый документ
Процедура ЗаполнитьСерииПоОтгрузке(Объект) Экспорт
	
	ИспользоватьОрдернуюСхемуПриОтгрузке = СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(Объект.Склад, Объект.Дата);
	
	ИспользуютсяСерииОтправитель = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.Склад));
	ИспользуютсяСерииПолучатель  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыПроизводство", Новый Структура("Подразделение", Объект.Подразделение));
	
	Если Не ИспользоватьОрдернуюСхемуПриОтгрузке
		Или Не ИспользуютсяСерииОтправитель
		Или Не ИспользуютсяСерииПолучатель Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка
	|ПОМЕСТИТЬ РасходныеОрдера
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	&ПередачаПоРаспоряжениям
	|	И РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение В(&Распоряжения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	НЕ &ПередачаПоРаспоряжениям
	|	И РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгружаемыеТовары.Серия,
	|	СУММА(ОтгружаемыеТовары.Количество) КАК Количество,
	|	ОтгружаемыеТовары.Номенклатура,
	|	ОтгружаемыеТовары.Характеристика,
	|	ОтгружаемыеТовары.Назначение КАК НазначениеОтправителя
	|ИЗ
	|	РасходныеОрдера КАК РасходныеОрдера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|		ПО РасходныеОрдера.Ссылка = ОтгружаемыеТовары.Ссылка
	|ГДЕ
	|	ОтгружаемыеТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|	И ОтгружаемыеТовары.Ссылка.Проведен
	|	И ОтгружаемыеТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
	|	И ОтгружаемыеТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгружаемыеТовары.Серия,
	|	ОтгружаемыеТовары.Характеристика,
	|	ОтгружаемыеТовары.Номенклатура,
	|	ОтгружаемыеТовары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ПоляСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки1,
	|	ТаблицаТовары.Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПолучатель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОтправитель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладОтправитель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|ГДЕ
	|	(ЕСТЬNULL(ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ПоляСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПолучатель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОтправитель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладОтправитель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|ГДЕ
	|	(НЕ ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				И НЕ ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ИЛИ НЕ ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				И НЕ ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ПоляСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ПоляСвязи = "";
	ПоляСвязиВЗапрос = "";
	Запятая = "";
	Для Каждого Поле Из ПараметрыУказанияСерий(Объект).ПоляСвязи Цикл
		ПоляСвязи = Поле + Запятая + ПоляСвязи;
		ПоляСвязиВЗапрос = ПоляСвязиВЗапрос + "
			|	ТаблицаТовары." + Поле + ",";
		Запятая = ",";
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.ПоляСвязи,", ПоляСвязиВЗапрос);
	Запрос = Новый Запрос(ТекстЗапроса);
	
	МассивРаспоряжений = Новый Массив;
	Если Объект.ПередачаПоРаспоряжениям Тогда
		Для Каждого СтрокаТовары Из Объект.Товары Цикл
			МассивРаспоряжений.Добавить(СтрокаТовары.Распоряжение);
		КонецЦикла;
	КонецЕсли;
	Запрос.УстановитьПараметр("Распоряжения", МассивРаспоряжений);	

	Запрос.УстановитьПараметр("Распоряжение", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаТовары", Объект.Товары.Выгрузить(,"НомерСтроки,Номенклатура,Характеристика,Количество," + ПоляСвязи));
	Запрос.УстановитьПараметр("СкладПолучатель", Объект.Подразделение);
	Запрос.УстановитьПараметр("СкладОтправитель", Объект.Склад);
	Запрос.УстановитьПараметр("ПередачаПоРаспоряжениям", Объект.ПередачаПоРаспоряжениям);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаСерийОрдера = РезультатЗапроса[1].Выгрузить();
	
	СтруктураПоиска= Новый Структура("Номенклатура, Характеристика, НазначениеОтправителя");
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
	
	ВыборкаНомеровСтрокССериямиВТЧТовары = РезультатЗапроса[3].Выбрать();
	Пока ВыборкаНомеровСтрокССериямиВТЧТовары.Следующий() Цикл
		СтрокаССериямиВТЧТовары = Объект.Товары[ВыборкаНомеровСтрокССериямиВТЧТовары.НомерСтроки - 1];
		//Заполнить колонку "Серия" в табличной части "Товары"
		ОстатокПоТовару = СтрокаССериямиВТЧТовары.Количество;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаССериямиВТЧТовары);	
		МассивСтрокТабСерий = ТаблицаСерийОрдера.НайтиСтроки(СтруктураПоиска);
		ПерваяСтрока = Истина;
		Для Каждого Стр Из МассивСтрокТабСерий Цикл
			Если Не ПерваяСтрока Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаССериямиВТЧТовары);
				СтрокаССериямиВТЧТовары = НоваяСтрока;
				ПерваяСтрока = Ложь;
			КонецЕсли;
		 	СтрокаССериямиВТЧТовары.Серия = Стр.Серия;
			КоличествоЗаполнения = Мин(ОстатокПоТовару,Стр.Количество);
			СтрокаССериямиВТЧТовары.Количество = КоличествоЗаполнения;
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаССериямиВТЧТовары, СтруктураДействий, Неопределено);
			Стр.Количество  = Стр.Количество  - КоличествоЗаполнения;
			ОстатокПоТовару = ОстатокПоТовару - КоличествоЗаполнения;
			Если Стр.Количество = 0 Тогда
				ТаблицаСерийОрдера.Удалить(Стр);
			КонецЕсли;
			Если ОстатокПоТовару = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Объект.Серии.Очистить();
	// Нужно обойти Товары, чтобы распределить серии по полям связи, которых в ордере нет (Назначение и ДокументРезерваСерий)
	ВыборкаТовары = РезультатЗапроса[4].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		ОстатокПоТовару = ВыборкаТовары.Количество;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаТовары);
		МассивСтрокТабСерий = ТаблицаСерийОрдера.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаТабСерий Из МассивСтрокТабСерий Цикл
			НоваяСтрокаТЧСерии = Объект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧСерии,ВыборкаТовары);
			НоваяСтрокаТЧСерии.Серия = СтрокаТабСерий.Серия;
			КоличествоЗаполнения = Мин(ОстатокПоТовару,СтрокаТабСерий.Количество);
			НоваяСтрокаТЧСерии.Количество = КоличествоЗаполнения;
			СтрокаТабСерий.Количество = СтрокаТабСерий.Количество - КоличествоЗаполнения;
			ОстатокПоТовару           = ОстатокПоТовару           - КоличествоЗаполнения;
			Если СтрокаТабСерий.Количество = 0 Тогда
				ТаблицаСерийОрдера.Удалить(СтрокаТабСерий);
			КонецЕсли;
			Если ОстатокПоТовару = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает значение распоряжения на поступление или отгрузку.
//
//Параметры:
//	ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//		поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//	ДокументСсылка.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	
	Если ЗначенияПолейДляОпределенияРаспоряжения.Товары_КодСтроки <> 0 Тогда 
		Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_Распоряжение;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Статус

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
// 		МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
// 		НовыйСтатус - Строка - Имя нового статуса
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыПередачМатериаловВПроизводство[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка                КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                   КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен              КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
	|	ИСТИНА                                  КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции// СформироватьЗапросПроверкиПриСменеСтатуса();

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
// 		ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
// 		НовыйСтатус - Перечисление - Новый статус
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "ПередачаМатериаловВПроизводство" отсутствуют дополнительные проверки
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	Возврат Справочники.Назначения.ТекстЗапросаНазначенийРасширенный();
КонецФункции

// Функция выполняет проверки документа-распоряжения при создании расходного ордера
//
// Параметры:
//	Распоряжение - Ссылка на документ-распоряжение
//	Склад - Ссылка на элемент справочника Склады
//
// Возвращаемое значение:
//	Структура - результаты проверки:
//		- Отказ - Булево - Истина, если проверки прошли с ошибками, иначе - Ложь
//		- ТекстОшибки - Строка - Обязательно должен быть заполнен, когда Отказ = Истина
//		- ДатаОтгрузки - Дата
//		- ГруппаСкладовВРаспоряжении - Булево - В распоряжении выбрана группа складов 
//		- ИспользоватьОрдернуюСхему - Булево - На складе используется ордерная схема
//
Функция ВыполнитьПроверкиРаспоряжения(Распоряжение, Склад) Экспорт 
		
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Операция", "");
	СтруктураВозврата.Вставить("ТекстОшибки", "");
	СтруктураВозврата.Вставить("ГруппаСкладовВРаспоряжении", Ложь);
	СтруктураВозврата.Вставить("ДатаОтгрузки");
	СтруктураВозврата.Вставить("ИспользоватьОрдернуюСхему"); 
	
	Реквизиты = Новый Структура("ДатаОтгрузки, Склад, ИспользоватьОрдернуюСхему", "Дата");
	
	Реквизиты.Склад = "Склад";
	Реквизиты.ИспользоватьОрдернуюСхему ="
	|ВЫБОР
	|	КОГДА ЕстьNULL(Склад.ИспользоватьОрдернуюСхемуПриОтгрузке, Ложь)
	|			И Дата >= ЕстьNULL(Склад.ДатаНачалаОрдернойСхемыПриОтгрузке, ДАТАВРЕМЯ(1,1,1))
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|КОНЕЦ";
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, Реквизиты);
	ИспользоватьОрдернуюСхему = ЗначенияРеквизитов.ИспользоватьОрдернуюСхему;
	
	СтруктураВозврата.ИспользоватьОрдернуюСхему = ИспользоватьОрдернуюСхему;
	
	Если ИспользоватьОрдернуюСхему Тогда
		
		Склад = ЗначенияРеквизитов.Склад;
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ЗначенияРеквизитов, "ДатаОтгрузки");
		
	Иначе
		
		ТекстОшибки = НСтр("ru='Для склада ""%Склад%"" оформление расходных ордеров не требуется.
            |Заполнение документа не выполнено.'
            |;uk='Для складу ""%Склад%"" оформлення видаткових ордерів не потрібно.
            |Заповнення документа не виконано.'");
		СтруктураВозврата.ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Склад%", Строка(ЗначенияРеквизитов.Склад));
		СтруктураВозврата.Операция = "Отказ";
		Возврат СтруктураВозврата;
		
	КонецЕсли;	
	
	Возврат СтруктураВозврата
	
КонецФункции

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПередачаМатериаловВПроизводство - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты внутреннего потребления товаров
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",Дата, Организация,);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	СписокКоманд = Новый Массив;
	
	Команда = Документы.ВозвратМатериаловИзПроизводства.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);

	Команда = ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);

	Команда = Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);

	Команда = Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);

	Возврат СписокКоманд;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.ПередачаМатериаловВПроизводство) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПередачаМатериаловВПроизводство.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПередачаМатериаловВПроизводство);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
		КомандаСоздатьНаОсновании.РежимИспользованияПараметра = РежимИспользованияПараметраКоманды.Множественный;
		
		КомандаСоздатьНаОсновании.ТипыОбъектовСозданияНаОсновании.Добавить(Тип("ДокументСсылка.ЗаказМатериаловВПроизводство"));
		КомандаСоздатьНаОсновании.ТипыОбъектовСозданияНаОсновании.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
		//++ НЕ УТКА
		КомандаСоздатьНаОсновании.ТипыОбъектовСозданияНаОсновании.Добавить(Тип("ДокументСсылка.ЗаказНаПроизводство"));
		КомандаСоздатьНаОсновании.ТипыОбъектовСозданияНаОсновании.Добавить(Тип("ДокументСсылка.ЗаказДавальца"));
		КомандаСоздатьНаОсновании.ТипыОбъектовСозданияНаОсновании.Добавить(Тип("ДокументСсылка.ПоступлениеСырьяОтДавальца"));
		//-- НЕ УТКА
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииПередачаВПроизводство(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПередачаМатериаловВПроизводство) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПередачаМатериаловВПроизводство.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Передача в производство';uk='Передача в виробництво'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
		КомандаСоздатьНаОсновании.РежимИспользованияПараметра = РежимИспользованияПараметраКоманды.Множественный;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчетуУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
#Область ТекстСписаниеКомиссионныхТоваров // (Дт  :: Кт 0241)
	ТекстСписаниеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Списание комиссионных и давальческих товаров (Дт  :: Кт 0241)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПринятыеНаКомиссию) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание комиссионных товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаМатериаловВПроизводство КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.Контрагент = Стоимости.Контрагент
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|";
#КонецОбласти 	

#Область ТекстСписаниеТоваровНаРасходы // (Дт 23 :: Кт 20, 28, 68ОК)
	ТекстСписаниеТоваровНаРасходы = "
	|ВЫБРАТЬ //// Списание материалов в производство (Дт 23 :: Кт 20, 28, 68ОК)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.ГруппаПродукции КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	//|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту)
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитентуОСписании)
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Строки.Номенклатура
	|	КОНЕЦ КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Номенклатура
	|	ИНАЧЕ
	|		Операция.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание материалов в производство"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаМатериаловВПроизводство КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|";
#КонецОбласти 

#Область ТекстПередачаТоваровДавальцаВПроизводство // (Дт 0222 :: Кт 0221)
	ТекстПередачаТоваровДавальцаВПроизводство = "
	|ВЫБРАТЬ //// Передача товаров давальца в производство (Дт 0222 :: Кт 0221)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача товаров давальца в производство"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаМатериаловВПроизводство КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|";
#КонецОбласти 

#Область ТекстПередачаПродукцииДавальцаВПроизводство // (Дт 0222 :: Кт 023)
	ТекстПередачаПродукцииДавальцаВПроизводство = "
	|ВЫБРАТЬ //// Передача продукции давальца в производство (Дт 0222 :: Кт 023)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетДт,
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоДт1,
	|	Аналитика.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериальныеЦенностиНаОтветственномХранении) КАК СчетКт,
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача продукции давальца в производство"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаМатериаловВПроизводство КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаМатериаловВПроизводство.ВидыЗапасов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|";
#КонецОбласти 

#Область ТекстКорректировкиНДСПартий // (Дт 23 :: Кт 6435)
	ТекстКорректировкиНДСПартий = "
	|ВЫБРАТЬ //// Условная продажа (Дт 23 :: Кт 6435)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	КорректировкиНДСПартий.Сумма КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	КорректировкиНДСПартий.Номенклатура КАК СубконтоДт1,
	|	КорректировкиНДСПартий.ГруппаПродукции КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УсловнаяПродажа) КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Условная продажа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПередачаМатериаловВПроизводство КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|
	|ГДЕ
	|	КорректировкиНДСПартий.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|";
#КонецОбласти 

	Возврат ТекстСписаниеКомиссионныхТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаРасходы
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровДавальцаВПроизводство
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаПродукцииДавальцаВПроизводство
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкиНДСПартий
		+ "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация,
	|	Документ.Склад,
	|	Документ.Подразделение,
	|	Документ.Ответственный,
	|	Документ.Комментарий,
	|	"""" КАК Дополнительно,
	|	Документ.ХозяйственнаяОперация,
	|	Документ.Статус,
	|	Документ.Проведен,
	|	Документ.ПометкаУдаления
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает структуру используемых статусов документа учитывая зависимости от функциональных опций и иных параметров
// 
// Возвращаемое значение:
//   - Структура
//
Функция СтатусыДокумента() Экспорт
	
	ИспользуемыеСтатусы = Новый Структура();
	
	ИспользуемыеСтатусы.Вставить("Отгружено", Перечисления.СтатусыПередачМатериаловВПроизводство.Отгружено);
	ИспользуемыеСтатусы.Вставить("Принято", Перечисления.СтатусыПередачМатериаловВПроизводство.Принято);
	
	Возврат ИспользуемыеСтатусы;
	
КонецФункции

Функция МетаданныеДокумента() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	Возврат СтруктураОбъекта;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПередачаМатериаловВПроизводство"; 
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ОрдернаяСхемаПриОтгрузке", 
		"ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
		
	Если ИмяРегистра = "ТоварыКОтгрузке" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтгрузке(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	ИначеЕсли ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаРасчетыЗатратВПроизводствеПоследовательность(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Дата                           КАК Период,
		|	Таблица.Организация                    КАК Организация,
		|	Таблица.Склад                          КАК Склад,
		|	Таблица.Ссылка                         КАК Ссылка,
		|	Таблица.Статус                         КАК Статус,
		|	Таблица.Подразделение                  КАК Подразделение,
		|	Таблица.ХозяйственнаяОперация          КАК ХозяйственнаяОперация,
		|	Таблица.Распоряжение                   КАК Распоряжение,
		|	Таблица.ПередачаПоРаспоряжениям        КАК ПередачаПоРаспоряжениям,
		|	Таблица.НалоговоеНазначение            КАК НалоговоеНазначение,
		|	ВЫБОР
		|		КОГДА Таблица.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И Таблица.Дата >= Таблица.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                  КАК ОрдернаяСхемаПриОтгрузке
		|ИЗ
		|	Документ.ПередачаМатериаловВПроизводство КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Статус",                          Реквизиты.Статус);
	Запрос.УстановитьПараметр("Склад",                           Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",                          Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриОтгрузке",        Реквизиты.ОрдернаяСхемаПриОтгрузке);
	Запрос.УстановитьПараметр("Распоряжение",                    Реквизиты.Распоряжение);
	Запрос.УстановитьПараметр("ПередачаПоРаспоряжениям",         Реквизиты.ПередачаПоРаспоряжениям);
	Запрос.УстановитьПараметр("Подразделение",                   Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("НалоговоеНазначение",             Реквизиты.НалоговоеНазначение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",           Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Валюта",                          Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет", ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));

	Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
	Запрос.УстановитьПараметр("Получатель", Реквизиты.Подразделение);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов.Комитент КАК Склад,
	|		Аналитика.Номенклатура КАК Номенклатура,
	|		Аналитика.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.ПередачаМатериаловВПроизводство.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		(ВЫБОР ТаблицаТовары.СтатусУказанияСерийПолучатель 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК Серия
	|	ИЗ
	|		Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Серия = Аналитика.Серия
	|		И ТаблицаТовары.Склад = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|");
	
	ЗапросАналитики.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Подразделение",  Запрос.Параметры.Подразделение);
	ЗапросАналитики.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
		|	Справочник.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
		|	Справочник.ВидЗапасовВладельца                КАК ВидЗапасовВладельца,
		|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Аналитика.Номенклатура                        КАК Номенклатура,
		|	Аналитика.Характеристика                      КАК Характеристика,
		|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
		|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
		|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     КАК ЦелевоеНалоговоеНазначение,
		|	(ВЫБОР ТаблицаВидыЗапасов.ВидЗапасовПолучателя
		|		КОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
		|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасовПолучателя КОНЕЦ) КАК КорВидЗапасов,
		|	КлючиКомитента.КлючАналитики                  КАК АналитикаКомитента,
		|	ВЫБОР КОГДА Справочник.Комитент ССЫЛКА Справочник.Организации
		|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
		|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
		|	КОНЕЦ                                         КАК АналитикаРасчетовСКомитентом,
		|	КлючиКомитента.Склад                          КАК Комитент,
		|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки        КАК ИдентификаторСтроки,
		|	КлючиПроизводства.КлючАналитики               КАК АналитикаПроизводства
		|
		|ПОМЕСТИТЬ ВтВидыЗапасов
		|ИЗ
		|	Документ.ПередачаМатериаловВПроизводство.ВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
		|	ПО
		|		ТаблицаВидыЗапасов.Ссылка = ТаблицаТовары.Ссылка И ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ВидыЗапасов КАК Справочник
		|	ПО
		|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
		|	ПО
		|		Аналитика.Номенклатура = КлючиКомитента.Номенклатура
		|		И Аналитика.Характеристика = КлючиКомитента.Характеристика
		|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
		|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = КлючиКомитента.Склад
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
		|	ПО
		|		Аналитика.Номенклатура = КлючиПроизводства.Номенклатура
		|		И Аналитика.Характеристика = КлючиПроизводства.Характеристика
		|		И ТаблицаВидыЗапасов.Серия = КлючиПроизводства.Серия
		|		И &Подразделение = КлючиПроизводства.Склад
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
		|		ПО АналитикаРасчетов.Организация = &Организация
		|		И АналитикаРасчетов.Партнер = Справочник.Комитент
		|		И АналитикаРасчетов.Контрагент = Справочник.Контрагент
		|		И АналитикаРасчетов.Договор = Справочник.Договор
		|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
		|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
		|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		И АналитикаРасчетовИнтеркампани.Контрагент = Справочник.Контрагент
		|		И АналитикаРасчетовИнтеркампани.Договор = Справочник.Договор
		|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
		|	
		|ГДЕ
		|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	&Склад                                 КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Количество               КАК ВНаличии,
		|	
		|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|				ТаблицаТовары.Количество
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ                              КАК ВРезервеПодЗаказ
		|
		|ИЗ
		|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И ТаблицаТовары.КодСтроки = 0";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// Отгрузка по распоряжению с неордерного склада (расход "К отгрузке", "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &ПередачаПоРаспоряжениям
	|	И НЕ ТаблицаТовары.КодСтроки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Оформление накладной по распоряжению с ордерного склада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	0                                      КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &ПередачаПоРаспоряжениям
	|	И НЕ ТаблицаТовары.КодСтроки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выдача распоряжения на отгрузку с ордерного склада (приход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &ПередачаПоРаспоряжениям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход и расход по строкам сверхзаказа на любом складе (приход/расход по "К отгрузке", "КОформлению")
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПередачаПоРаспоряжениям
	|	И ТаблицаТовары.КодСтроки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ВЫБОР 
	|		КОГДА &ОрдернаяСхемаПриОтгрузке ТОГДА 
	|			0 
	|		ИНАЧЕ ТаблицаТовары.Количество 
	|	КОНЕЦ КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПередачаПоРаспоряжениям
	|	И ТаблицаТовары.КодСтроки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход и расход по накладным не по заказу на неордерном складе для доставки (приход/расход по "К отгрузке")
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ПередачаПоРаспоряжениям
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Подразделение                         КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ПередачаПоРаспоряжениям
	|	И НЕ &ОрдернаяСхемаПриОтгрузке";


	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	0 КАК КОтгрузке,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (6, 8, 10, 14)
	|				И ТаблицаТовары.КодСтроки = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.СтатусУказанияСерийОтправитель В (0, 2, 10, 14)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) В (6, 8)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.НазначениеОтправителя = ТаблицаТовары.НазначениеОтправителя
	|ГДЕ
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) В (4, 6, 8)";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ   	  				  КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	&Получатель КАК Получатель,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеПолучателя,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НЕ &ОрдернаяСхемаПриОтгрузке КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	&Получатель,
	|	НЕОПРЕДЕЛЕНО,
	|	&СкладскаяОперация,
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	&Организация КАК ОрганизацияОтгрузки,
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
		|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
		|	ИНАЧЕ
		|		&Организация
		|	КОНЕЦ КАК Организация,
		|
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
		|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
		|	ИНАЧЕ
		|		ТаблицаВидыЗапасов.ВидЗапасов
		|	КОНЕЦ КАК ВидЗапасов,
		|
		|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
		|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество КАК Количество,
		|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
		|		ТаблицаВидыЗапасов.АналитикаКомитента
		|	ИНАЧЕ
		|		ТаблицаВидыЗапасов.АналитикаПроизводства
		|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
		|		ВтСоответствиеКорВидовЗапасов.ВидЗапасов
		|	ИНАЧЕ
		|		ТаблицаВидыЗапасов.КорВидЗапасов
		|	КОНЕЦ КАК КорВидЗапасов
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
		|		ПО ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	&Склад                                             КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение      КАК НалоговоеНазначение 
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки            КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаКомитента     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта      КАК Валюта,
	|	ТаблицаВидыЗапасов.НомерГТД               КАК НомерГТД,
	|	0                                         КАК Количество,
	|	0                                         КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество             КАК КоличествоСписано,
	|	ТаблицаВидыЗапасов.Номенклатура           КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика         КАК Характеристика,
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ВтСоответствиеКорВидовЗапасов.ВидЗапасов  КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаПроизводства  КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение    КАК НалоговоеНазначение 
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	Строки.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА Строки.АналитикаКомитента
	|		ИНАЧЕ Строки.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВЫБОР
	|					КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ВтСоответствиеКорВидовЗапасов.ВидЗапасов
	|					ИНАЧЕ Строки.ВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	Строки.НалоговоеНазначение КАК НалоговоеНазначение,
	|	Строки.Количество КАК Количество,
	|	0 КАК СтоимостьРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВЫБОР
	|					КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ВтСоответствиеКорВидовЗапасов.ВидЗапасов
	|					ИНАЧЕ Строки.КорВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|	Строки.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|	Строки.АналитикаПроизводства КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	Строки.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	Строки.КорВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО Строки.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	Строки.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	Строки.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	Строки.АналитикаПроизводства КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВЫБОР Строки.ТипЗапасов
	|					КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ВтСоответствиеКорВидовЗапасов.ВидЗапасов
	|					ИНАЧЕ Строки.КорВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	Строки.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	Строки.Количество КАК Количество,
	|	0 КАК СтоимостьРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	Строки.НалоговоеНазначение КАК КорНалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	Строки.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	Строки.КорВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО Строки.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	Строки.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3 КАК Порядок,
	|	Строки.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА Строки.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	Строки.НалоговоеНазначение КАК НалоговоеНазначение,
	|	Строки.Количество КАК Количество,
	|	0 КАК СтоимостьРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВЫБОР
	|					КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ВтСоответствиеКорВидовЗапасов.ВидЗапасов
	|					ИНАЧЕ Строки.КорВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|	Строки.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	Строки.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	Строки.КорВидЗапасов.ГруппаПродукции КАК ГруппаПродукции
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО Строки.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
		
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	КлючиПроизводства.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|		ПО ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|			И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий
	|				КОГДА 14
	|					ТОГДА ТаблицаТовары.Серия
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			КОНЕЦ = КлючиПроизводства.Серия)
	|			И (&Подразделение = КлючиПроизводства.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Период,
	|	&Подразделение,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	КлючиПроизводства.КлючАналитики,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|		ПО ТаблицаСерии.Номенклатура = КлючиПроизводства.Номенклатура
	|			И ТаблицаСерии.Характеристика = КлючиПроизводства.Характеристика
	|			И (КлючиПроизводства.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (&Подразделение = КлючиПроизводства.Склад)
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	КлючиПроизводства.КлючАналитики,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыЗатратВПроизводствеПоследовательность(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыЗатратВПроизводствеПоследовательность";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса ="
	| ВЫБРАТЬ
	|	ТаблицаТовары.АналитикаПроизводства КАК АналитикаУчетаНоменклатуры,
	|	&Период                             КАК Период,
	|	&Ссылка                             КАК Регистратор
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаПроизводства КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.КорВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	НЕ &ИспользоватьПартионныйУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР КОГДА Строки.РеализацияЗапасовДругойОрганизации ТОГДА
	|				Строки.ВидЗапасовВладельца.ТипЗапасов
	|			ИНАЧЕ
	|				Строки.ВидЗапасов.ТипЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР КОГДА Строки.РеализацияЗапасовДругойОрганизации ТОГДА
	|				Строки.ВидЗапасовВладельца
	|			ИНАЧЕ
	|				Строки.ВидЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	Строки.АналитикаПроизводства КАК КорАналитикаУчетаНоменклатуры,
	|	&Подразделение КАК КорСклад,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР
	|				КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					ВЫРАЗИТЬ(ВтСоответствиеКорВидовЗапасов.ВидЗапасов КАК Справочник.ВидыЗапасов).ТипЗапасов
	|				ИНАЧЕ Строки.ТипЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР
	|				КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					ВтСоответствиеКорВидовЗапасов.ВидЗапасов
	|				ИНАЧЕ Строки.ВидЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	Строки.Количество КАК Количество,
	|	Строки.Количество КАК КорКоличество,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			Строки.ВидЗапасов
	|		ИНАЧЕ
	|			Строки.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			Строки.ВидЗапасов
	|		ИНАЧЕ
	|			Строки.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО Строки.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	Строки.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ЗаказыМатериаловВПроизводство";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"
	|ВЫБРАТЬ
	|	ТаблицаМатериалыИУслуги.НомерСтроки             КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	ТаблицаМатериалыИУслуги.Распоряжение            КАК Распоряжение,
	|	&Подразделение                                  КАК Подразделение,
	|	ТаблицаМатериалыИУслуги.Номенклатура            КАК Номенклатура,
	|	ТаблицаМатериалыИУслуги.Характеристика          КАК Характеристика,
	|	ВЫБОР 
	|		КОГДА ТаблицаМатериалыИУслуги.СтатусУказанияСерийОтправитель В (10, 14) 
	|			ТОГДА ТаблицаМатериалыИУслуги.Серия
	|	КОНЕЦ                                           КАК Серия,
	|	&Склад                                          КАК Склад,
	|	ТаблицаМатериалыИУслуги.Назначение              КАК Назначение,
	|	ТаблицаМатериалыИУслуги.КодСтроки               КАК КодСтроки,
	|	ТаблицаМатериалыИУслуги.Количество              КАК Заказано,
	|	ТаблицаМатериалыИУслуги.Количество              КАК КОформлению,
	|	0                                               КАК КПолучению
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаМатериалыИУслуги
	|ГДЕ
	|	ТаблицаМатериалыИУслуги.Ссылка = &Ссылка
	|	И ТаблицаМатериалыИУслуги.КодСтроки <> 0
	|	И &ПередачаПоРаспоряжениям
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции


Функция ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеКорВидовЗапасов"; 
	
	ИнициализироватьКорВидыЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение  КАК ЦелевоеНалоговоеНазначение,
	|	СоответствиеКорВидовЗапасов.ВидЗапасов		 			КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеКорВидовЗапасов
	|ИЗ
	|	&СоответствиеКорВидовЗапасов КАК СоответствиеКорВидовЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаВтСоответствиеКорВидовЗапасов

Процедура ИнициализироватьКорВидыЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("СоответствиеКорВидовЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеКорВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеКорВидовЗапасов.Колонки.Добавить("ЦелевоеНалоговоеНазначение", Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат")); 
	СоответствиеКорВидовЗапасов.Колонки.Добавить("ВидЗапасов",		 Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	ЗапросЦелевыхНазначений = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|");
	
	ЗапросЦелевыхНазначений.УстановитьПараметр("Ссылка",				Запрос.Параметры.Ссылка);
	
	Выборка = ЗапросЦелевыхНазначений.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КорВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			Запрос.Параметры.Организация, 
			Запрос.Параметры.ХозяйственнаяОперация,
			,
			Выборка.ЦелевоеНалоговоеНазначение
		);
		
		НоваяСтрока = СоответствиеКорВидовЗапасов.Добавить();
		НоваяСтрока.ЦелевоеНалоговоеНазначение	= Выборка.ЦелевоеНалоговоеНазначение;
		НоваяСтрока.ВидЗапасов					= КорВидЗапасов;
		
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("СоответствиеКорВидовЗапасов", СоответствиеКорВидовЗапасов);
	
КонецПроцедуры // ИнициализироватьКорВидыЗапасов


Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
		// Отгрузка обособленного товара не по заказу со склада.
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	&Склад                                 КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Назначение               КАК Назначение,
		|	0                                      КАК Потребность,
		|	0                                      КАК КЗаказу,
		|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
		|
		|ИЗ
		|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И ТаблицаТовары.КодСтроки = 0
		|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Отгрузка обособленного товара не по заказу со склада приход "К заказу" (снятие обеспечения на складе).
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	&Склад                                 КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Назначение               КАК Назначение,
		|	0                                      КАК Потребность,
		|	ТаблицаТовары.Количество               КАК КЗаказу,
		|	0                                      КАК НаличиеПодЗаказ
		|
		|ИЗ
		|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И ТаблицаТовары.КодСтроки = 0
		|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Обработка.ПолучениеИВозвратМатериалов.Форма";

	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Добавление",  Метаданные.Документы.ПередачаМатериаловВПроизводство))
		И ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ОбщийЗапрос.РаспоряженийВсего)     КАК ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе,
	|	СУММА(ОбщийЗапрос.РаспоряженийНаСегодня) КАК ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(1) КАК РаспоряженийВсего,
	|		0 КАК РаспоряженийНаСегодня
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки КАК ЗапросПоРаспоряжениямВсего
	|	ГДЕ
	|		ЗапросПоРаспоряжениямВсего.КОформлениюОстаток > 0
	|
	|	СГРУППИРОВАТЬ ПО
	|		ЗапросПоРаспоряжениямВсего.Распоряжение,
	|		ЗапросПоРаспоряжениямВсего.Склад
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		СУММА(1)
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(&ДатаОтгрузки, ) КАК ЗапросПоРаспоряжениямНаСегодня
	|	ГДЕ
	|		ЗапросПоРаспоряжениямНаСегодня.КОформлениюОстаток > 0
	|
	|	СГРУППИРОВАТЬ ПО
	|		ЗапросПоРаспоряжениямНаСегодня.Распоряжение,
	|		ЗапросПоРаспоряжениямНаСегодня.Склад
	|	) КАК ОбщийЗапрос";
	
	Запрос.УстановитьПараметр("ДатаОтгрузки", КонецДня(ОбщиеПараметрыЗапросов.ТекущаяДата) + 1);
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ПередачиМатериаловВПроизводство
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ПередачиМатериаловВПроизводство";
	ДелоРодитель.Представление  = НСтр("ru='Передачи материалов в производство';uk='Передачі матеріалів у виробництво'");
	ДелоРодитель.ЕстьДела       = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Производство;
	
	// ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаОтгрузки", ОбщиеПараметрыЗапросов.ПустаяДата);
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаРаспоряженияНаОформление");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе";
	Дело.ЕстьДела       = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе > 0;
	Дело.Представление  = НСтр("ru='Распоряжения на оформление документов в работе';uk='Розпорядження на оформлення документів у роботі'");
	Дело.Количество     = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ПередачиМатериаловВПроизводство";
	
	// ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаОтгрузки", ОбщиеПараметрыЗапросов.ТекущаяДата);
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаРаспоряженияНаОформление");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня";
	Дело.ЕстьДела       = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня > 0;
	Дело.Представление  = НСтр("ru='Распоряжения на оформление документов на сегодня';uk='Розпорядження на оформлення документів на сьогодні'");
	Дело.Количество     = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ПередачиМатериаловВПроизводство";
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ПередачаМатериаловВПроизводство) Тогда
		// Внутреннее потребление товаров
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПередачаМатериаловВПроизводство";
		КомандаПечати.Представление = НСтр("ru='Передача материалов в производство';uk='Передача матеріалів у виробництво'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;

	// Задание на отбор товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на отбор товаров';uk='Завдання на відбір товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаОтбор");
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ11";
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru='Требование-накладная (М-11)';uk='Вимога-накладна (М-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПередачаМатериаловВПроизводство") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПередачаМатериаловВПроизводство",
			НСтр("ru='Передача материалов в производство';uk='Передача матеріалів у виробництво'"),
			ПечатьПередачаМатериаловВПроизводство(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),
			,
			"Документ.ПередачаМатериаловВПроизводство.ПФ_MXL_ПередачаМатериаловВПроизводство",
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма
			);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы отбора товаров из ячеек.
//
Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаМатериаловВПроизводство.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ПередачаМатериаловВПроизводство.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ПередачаМатериаловВПроизводство.Склад) КАК СкладПредставление,
	|	ПередачаМатериаловВПроизводство.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)) КАК ПомещениеПредставление,
	|	ПередачаМатериаловВПроизводство.Дата КАК Дата,
	|	ПередачаМатериаловВПроизводство.Номер КАК Номер,
	|	ЛОЖЬ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ПередачаМатериаловВПроизводство.Склад.ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ ПередачаМатериаловВПроизводство.Склад.ИспользоватьАдресноеХранение
	|					ИЛИ ПередачаМатериаловВПроизводство.Дата < ПередачаМатериаловВПроизводство.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА ПередачаМатериаловВПроизводство.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И ПередачаМатериаловВПроизводство.Дата >= ПередачаМатериаловВПроизводство.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НарушенаОрдернаяСхема,
	|	ПередачаМатериаловВПроизводство.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	ПередачаМатериаловВПроизводство.Склад.ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериаловВПроизводство
	|ГДЕ
	|	ПередачаМатериаловВПроизводство.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.Ссылка В (&МассивОбъектов)
	|				И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|				И НЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И (НЕ ТаблицаСерии.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваровСуммированная.Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам		= МассивРезультатов[4];
	РезультатПоСериям			= МассивРезультатов[5];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоУпаковкам, РезультатПоСериям",
													РезультатПоШапке,
													РезультатПоТабличнойЧасти,
													РезультатПоУпаковкам,
													РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
		МассивДокументов, 
		МенеджерВременныхТаблиц,
		,
		Новый Структура("Руководитель, ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель, Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер)
	);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Товары.Ссылка.ВидЦены КАК ВидЦены,
	|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		Товары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документы.Ссылка КАК Ссылка,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|		КурсыВалют.Валюта КАК Валюта
	|	ИЗ
	|		Документ.ПередачаМатериаловВПроизводство КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
	|				И Документы.Дата >= КурсыВалют.Период
	|	ГДЕ
	|		Документы.Ссылка В(&МассивДокументов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК ДатаДокумента,
	|	Документы.Дата КАК ДатаСоставления,
	|	Документы.Организация КАК Организация,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.Склад КАК Склад,
	|	Документы.Подразделение КАК Подразделение,
	|	Документы.Склад.ТекущийОтветственный КАК КладовщикОтправитель,
	|	Документы.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК РуководительОтправителя,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителяОтправителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтерОтправителя,
	|	""Відпуск"" КАК КодВидаОперации,
	|	Документы.Распоряжение КАК Заказ,
	|	Документы.ВидЦены КАК УчетныйВидЦены,
	|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Документы.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Документы.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
	|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2))) * Товары.КоличествоУпаковок КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2)) КАК Цена,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО Товары.Ссылка = КурсыВалют.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|			И Товары.НомерСтроки = Цены.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка 
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[3],
		РезультатПакетаЗапросов[4]);
	
КонецФункции

Функция ПечатьПередачаМатериаловВПроизводство(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)

	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка                             КАК Ссылка,
	|	Документ.Номер                              КАК Номер,
	|	Документ.Дата                               КАК Дата,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Склад)         КАК Склад,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Подразделение)	КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Организация)   КАК Организация,
	|	Документ.Организация.Префикс                КАК Префикс,
	|	Документ.Товары.(
	|
	|		НомерСтроки КАК НомерСтроки,
	|	" + ?(ВыводитьДопКолонку, "Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|		Номенклатура.НаименованиеПолное     КАК Номенклатура,
	|		Характеристика.НаименованиеПолное   КАК Характеристика,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ 
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Упаковка)
	|		КОНЕЦ              КАК Упаковка,
	|		КоличествоУпаковок КАК Количество
	|
	|	) КАК ТаблицаТовары
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка, НомерСтроки
	|";
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериаловВПроизводство";

	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		СинонимДокумента = НСтр("ru='Списание товаров на хознужды';uk='Списання товарів на госппотреби'",КодЯзыкаПечать);
	Иначе
		СинонимДокумента = НСтр("ru='Передача материалов в производство';uk='Передача матеріалів у виробництво'",КодЯзыкаПечать);
	КонецЕсли;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПередачаМатериаловВПроизводство.ПФ_MXL_ПередачаМатериаловВПроизводство", КодЯзыкаПечать);
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодписи   = Макет.ПолучитьОбласть("Подписи");
	Если ВыводитьДопКолонку Тогда
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаДопКолонка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыДопКолонка");
	Иначе
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		// Вывод шапки.
		Если ВыводитьДопКолонку Тогда
			ОбластьШапкаТаблицы.Параметры.ДопКолонка = ДопКолонка;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// Вывод строк документа.
		
		ВыборкаСтроки = ВыборкаДокументы.ТаблицаТовары.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
			
			ОбластьСтрока.Параметры.Номенклатура = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтроки.Номенклатура,
				ВыборкаСтроки.Характеристика);
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции


#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ПараметрыЗапросаДляСозданияНаОсновании(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", Истина);
	
	ПараметрыЗапросов.Вставить("Склад",            ДанныеОтбора.РеквизитыШапки.Склад);
	ПараметрыЗапросов.Вставить("Подразделение",    ДанныеОтбора.РеквизитыШапки.Подразделение);
	ПараметрыЗапросов.Вставить("Организация",      ДанныеОтбора.РеквизитыШапки.Организация);
	
	Если ДанныеОтбора.Свойство("СписокМатериалов") Тогда
		ПараметрыЗапросов.Вставить("СписокМатериалов", ДанныеОтбора.СписокМатериалов.Выгрузить());
	КонецЕсли; 
	
	Если ДанныеОтбора.ЗаполнятьПоОрдеру Тогда
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		Если ДанныеОтбора.Свойство("СписокМатериалов") Тогда
			ИменаЗапросов.Добавить("ВтСписокМатериалов");
		КонецЕсли; 
		
		ИменаЗапросов.Добавить("ТаблицаОтгружено");
		
		ИменаЗапросов.Добавить("ТаблицаОформить");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказы");
		
	Иначе
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		Если ДанныеОтбора.Свойство("СписокМатериалов") Тогда
			ИменаЗапросов.Добавить("ВтСписокМатериалов");
		КонецЕсли; 
		
		ИменаЗапросов.Добавить("ТаблицаОформить");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказы");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляПодбора(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", ДанныеОтбора.МассивЗаказов.Количество() = 1);
	ПараметрыЗапросов.Вставить("Регистратор",      ДанныеОтбора.РеквизитыШапки.Ссылка);
	ПараметрыЗапросов.Вставить("Организация",      ДанныеОтбора.РеквизитыШапки.Организация);
	ПараметрыЗапросов.Вставить("Подразделение",    ДанныеОтбора.РеквизитыШапки.Подразделение);
	ПараметрыЗапросов.Вставить("Склад",            ДанныеОтбора.РеквизитыШапки.Склад);
	ПараметрыЗапросов.Вставить("ТоварыНакладной",    ДанныеОтбора.ТоварыНакладной);
	ПараметрыЗапросов.Вставить("НакладнаяПоЗаказам", ДанныеОтбора.НакладнаяПоЗаказам);
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Истина);
	
	ИменаЗапросов.Добавить("ВтЗаказыОтбор");
	ИменаЗапросов.Добавить("ВтНакладная");
	ИменаЗапросов.Добавить("ТаблицаОтгружено");
	
	ИменаЗапросов.Добавить("ТаблицаОформить");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказы");
	ИменаПодзапросов.Добавить("БлокСторноНакладная");
	ИменаПодзапросов.Добавить("БлокНовыеДвиженияНакладная");
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляПерезаполненияПоОрдерам(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", Истина);
	ПараметрыЗапросов.Вставить("Регистратор",      ДанныеОтбора.РеквизитыШапки.Ссылка);
	
	ПараметрыЗапросов.Вставить("Склад",            ДанныеОтбора.РеквизитыШапки.Склад);
	ПараметрыЗапросов.Вставить("Подразделение",    ДанныеОтбора.РеквизитыШапки.Подразделение);
	ПараметрыЗапросов.Вставить("Организация",      ДанныеОтбора.РеквизитыШапки.Организация);
	ПараметрыЗапросов.Вставить("ТоварыНакладной",    ДанныеОтбора.ТоварыНакладной);
	ПараметрыЗапросов.Вставить("НакладнаяПоЗаказам", ДанныеОтбора.НакладнаяПоЗаказам);
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Истина);
	ПараметрыЗапросов.Вставить("ЗаполнятьПоСобирается", Истина);
	
	ИменаЗапросов.Добавить("ВтЗаказыОтбор");
	ИменаЗапросов.Добавить("ВтНакладная");
	ИменаЗапросов.Добавить("ТаблицаОтгружено");
	
	ИменаЗапросов.Добавить("ТаблицаОформить");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказы");
	ИменаПодзапросов.Добавить("БлокСторноНакладная");
	ИменаПодзапросов.Добавить("БлокНовыеДвиженияНакладная");
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляЗаполненияПоЗаказам(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", ДанныеОтбора.МассивЗаказов.Количество() = 1);
	ПараметрыЗапросов.Вставить("Регистратор",      ДанныеОтбора.РеквизитыШапки.Ссылка);
	ПараметрыЗапросов.Вставить("Организация",      ДанныеОтбора.РеквизитыШапки.Организация);
	ПараметрыЗапросов.Вставить("Подразделение",    ДанныеОтбора.РеквизитыШапки.Подразделение);
	ПараметрыЗапросов.Вставить("Склад",            ДанныеОтбора.РеквизитыШапки.Склад);
	
	Если ДанныеОтбора.ЗаполнятьПоОрдеру Тогда
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		ИменаЗапросов.Добавить("ТаблицаОтгружено");
		
		ИменаЗапросов.Добавить("ТаблицаОформить");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказы");
		ИменаПодзапросов.Добавить("БлокСторноНакладная");
		
	Иначе
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		
		ИменаЗапросов.Добавить("ТаблицаОформить");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказы");
		ИменаПодзапросов.Добавить("БлокСторноНакладная");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВременнойТаблицыНакладной()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Количество            КАК Количество,
		|
		|	Таблица.НомерСтроки           КАК НомерСтроки,
		|	Таблица.Номенклатура          КАК Номенклатура,
		|	Таблица.Характеристика        КАК Характеристика,
		|	Таблица.Назначение            КАК Назначение,
		|	Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
		|	Таблица.Серия                 КАК Серия,
		|	Таблица.ГруппаПродукции       КАК ГруппаПродукции,
		|
		|	Таблица.КодСтроки             КАК КодСтроки,
		|	Таблица.Упаковка              КАК Упаковка,
		|
		|	ВЫБОР КОГДА НЕ &НакладнаяПоЗаказам ТОГДА
		|				&Регистратор
		|			ИНАЧЕ
		|				Таблица.Распоряжение
		|		КОНЕЦ                     КАК Распоряжение
		|
		|ПОМЕСТИТЬ ВТНакладная
		|ИЗ
		|	&ТоварыНакладной КАК Таблица
		|;
		|
		|//////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнойТаблицыРаспоряжений()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокДокументов.Распоряжение КАК Распоряжение
	|ПОМЕСТИТЬ ВТЗаказыОтбор
	|ИЗ
	|	РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(
	|			,
	|			,
	|			,
	|			(НЕ &ОтобратьПоЗаказу
	|				ИЛИ Распоряжение В (&МассивЗаказов))
	|				И Подразделение = &Подразделение
	|				И Организация = &Организация
	|				И Склад = &Склад) КАК СписокДокументов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Регистратор
	|;
	|
	|//////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнойТаблицыСпискаМатериалов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СписокМатериалов.Номенклатура КАК Номенклатура,
	|	СписокМатериалов.Характеристика КАК Характеристика,
	|	СписокМатериалов.Назначение КАК Назначение
	|ПОМЕСТИТЬ ВтСписокМатериалов
	|ИЗ
	|	&СписокМатериалов КАК СписокМатериалов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение
	|;
	|
	|//////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбъединения(Имена, Тексты)
	
	ТекстОбъединения = "";
	ЭтоПервыйБлок = Истина;
	
	Для Каждого Имя Из Имена Цикл
		
		Если ЭтоПервыйБлок Тогда
			ЭтоПервыйБлок = Ложь;
		Иначе
			
			ТекстОбъединения = ТекстОбъединения + "
			                                      |
			                                      |	ОБЪЕДИНИТЬ ВСЕ
			                                      |
			                                      |";
			
		КонецЕсли;
		
		ТекстОбъединения = ТекстОбъединения + Тексты[Имя];
		
	КонецЦикла;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Распоряжение      КАК Распоряжение,
		|	Набор.КодСтроки         КАК КодСтроки,
		|
		|	Набор.Номенклатура                     КАК Номенклатура,
		|	Набор.Характеристика                   КАК Характеристика,
		|	МАКСИМУМ(Набор.Назначение)             КАК Назначение,
		|	МАКСИМУМ(Набор.НазначениеОтправителя)  КАК НазначениеОтправителя,
		|	Набор.Серия                            КАК Серия,
		|	МАКСИМУМ(Набор.Дата)                   КАК Дата,
		|	МАКСИМУМ(Набор.НомерСтроки)            КАК НомерСтроки,
		|	МАКСИМУМ(Набор.ДатаОтгрузки)           КАК ДатаОтгрузки,
		|	МАКСИМУМ(Набор.ГруппаПродукции)        КАК ГруппаПродукции,
		|	МАКСИМУМ(Набор.ПрисутствуетВДокументе) КАК ПрисутствуетВДокументе,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				Набор.Упаковка
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ)                             КАК УпаковкаНакладной,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|				Набор.Упаковка
		|		КОНЕЦ)                             КАК УпаковкаЗаказа,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				Набор.УпаковкаКоэффициент
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ)                             КАК УпаковкаНакладнойКоэффициент,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|				Набор.УпаковкаКоэффициент
		|		КОНЕЦ)                             КАК УпаковкаЗаказаКоэффициент,
		|
		|
		|	СУММА(Набор.КоличествоВЗаказе)        КАК КоличествоВЗаказе,
		|	СУММА(Набор.КоличествоВНакладной)     КАК КоличествоВНакладной
		|
		|ИЗ ТекстОбъединения КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Распоряжение, Набор.КодСтроки,
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Серия,
		|	ВЫБОР КОГДА Набор.КодСтроки <> 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				Набор.НомерСтроки
		|		КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(Набор.КоличествоВЗаказе) > 0 ИЛИ СУММА(Набор.КоличествоВНакладной) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата, Распоряжение, НомерСтроки
		|;
		|
		|/////////////////////////////////////////////////////////////////////
		|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстОбъединения", "(" + ТекстОбъединения + ")");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказы()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаОстатки.Распоряжение       КАК Распоряжение,
		|		ТаблицаОстатки.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК КоличествоВЗаказе,
		|		0                                 КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаОстатки.Номенклатура       КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика     КАК Характеристика,
		|
		|		ТаблицаОстатки.Назначение         КАК Назначение,
		
		|		ВЫБОР
		|			КОГДА НЕ ТаблицаОстатки.Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
		|				ТОГДА ТаблицаОстатки.Назначение
		|			КОГДА Таблица.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.Отгрузить)
		|				ТОГДА Значение(Справочник.Назначения.ПустаяСсылка)
		|			КОГДА Таблица.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
		|					И ТаблицаОстатки.Назначение = Значение(Справочник.Назначения.ПустаяСсылка)
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаОстатки.Распоряжение КАК Документ.ЗаказМатериаловВПроизводство).Назначение
		|			ИНАЧЕ
		|				ТаблицаОстатки.Назначение
		|		КОНЕЦ КАК НазначениеОтправителя,
		
		|		Таблица.Серия                     КАК Серия,
		|		ДанныеДокументаЗаказМатериалов.Дата	КАК Дата,
		|		ДанныеДокументаЗаказМатериаловТовары.НомерСтроки КАК НомерСтроки,
		|		Таблица.ДатаПотребности       КАК ДатаОтгрузки,
		|		ЕСТЬNULL(ДанныеДокументаЗаказМатериаловТовары.ГруппаПродукции, 
		//++ НЕ УТКА
		|					ЕСТЬNULL(ДанныеДокументаЗаказНаПроизводствоПродукция.Номенклатура.ГруппаАналитическогоУчета,
		//-- НЕ УТКА
		|				НЕОПРЕДЕЛЕНО
		//++ НЕ УТКА
		|				)
		//-- НЕ УТКА
		|			) КАК ГруппаПродукции,
		|		ЛОЖЬ                          КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(,
		|				Распоряжение В(
		|					ВЫБРАТЬ
		|						Таблица.Распоряжение КАК Распоряжение
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)
		|				И Подразделение = &Подразделение
		|				И Склад = &Склад) КАК ТаблицаОстатки
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(,,,
		|				Распоряжение В(
		|					ВЫБРАТЬ
		|						Таблица.Распоряжение КАК Распоряжение
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)
		|				И Подразделение = &Подразделение
		|				И Склад = &Склад) КАК Таблица
		|			ПО ТаблицаОстатки.Распоряжение = Таблица.Распоряжение
		|			 И ТаблицаОстатки.КодСтроки = Таблица.КодСтроки
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство КАК ДанныеДокументаЗаказМатериалов
		|			ПО ТаблицаОстатки.Распоряжение = ДанныеДокументаЗаказМатериалов.Ссылка
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство.Товары КАК ДанныеДокументаЗаказМатериаловТовары
		|			ПО Таблица.Распоряжение = ДанныеДокументаЗаказМатериаловТовары.Ссылка
		|				И Таблица.КодСтрокиРаспоряжения = ДанныеДокументаЗаказМатериаловТовары.КодСтроки
		//++ НЕ УТКА
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ДанныеДокументаЗаказНаПроизводство
		|			ПО ТаблицаОстатки.Распоряжение = ДанныеДокументаЗаказНаПроизводство.Ссылка
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.МатериалыИУслуги КАК ДанныеДокументаЗаказНаПроизводствоТовары
		|			ПО Таблица.Распоряжение = ДанныеДокументаЗаказНаПроизводствоТовары.Ссылка
		|				И Таблица.КодСтрокиРаспоряжения = ДанныеДокументаЗаказНаПроизводствоТовары.КодСтроки
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ДанныеДокументаЗаказНаПроизводствоПродукция
		|			ПО ДанныеДокументаЗаказНаПроизводствоПродукция.Ссылка = ДанныеДокументаЗаказНаПроизводствоТовары.Ссылка
		|				И ДанныеДокументаЗаказНаПроизводствоПродукция.КлючСвязи = ДанныеДокументаЗаказНаПроизводствоТовары.КлючСвязиПродукция
		//-- НЕ УТКА
		|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Таблица.Упаковка",
			"Таблица.Номенклатура"));
	//++ НЕ УТКА
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаЗаказМатериалов.Дата", "ЕСТЬNULL(ДанныеДокументаЗаказМатериалов.Дата, ДанныеДокументаЗаказНаПроизводство.Дата)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаЗаказМатериаловТовары.НомерСтроки", "ЕСТЬNULL(ДанныеДокументаЗаказМатериаловТовары.НомерСтроки, ДанныеДокументаЗаказНаПроизводствоТовары.НомерСтроки)");
	//-- НЕ УТКА
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыСОтборомМатериалов()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаОстатки.Распоряжение       КАК Распоряжение,
		|		ТаблицаОстатки.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК КоличествоВЗаказе,
		|		0                                 КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаОстатки.Номенклатура       КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика     КАК Характеристика,
		|
		|		ТаблицаОстатки.Назначение         КАК Назначение,
		|
		|		ВЫБОР
		|			КОГДА НЕ ТаблицаОстатки.Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
		|				ТОГДА ТаблицаОстатки.Назначение
		|			КОГДА Таблица.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.Отгрузить)
		|				ТОГДА Значение(Справочник.Назначения.ПустаяСсылка)
		|			КОГДА Таблица.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
		|					И ТаблицаОстатки.Назначение = Значение(Справочник.Назначения.ПустаяСсылка)
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаОстатки.Распоряжение КАК Документ.ЗаказМатериаловВПроизводство).Назначение
		|			ИНАЧЕ
		|				ТаблицаОстатки.Назначение
		|		КОНЕЦ КАК НазначениеОтправителя,
		|
		|		Таблица.Серия                 КАК Серия,
		|		ДанныеДокументаЗаказМатериалов.Дата КАК Дата,
		|		ДанныеДокументаЗаказМатериаловТовары.НомерСтроки КАК НомерСтроки,
		|		Таблица.ДатаПотребности       КАК ДатаОтгрузки,
		|		ЕСТЬNULL(ДанныеДокументаЗаказМатериаловТовары.ГруппаПродукции, 
		//++ НЕ УТКА
		|					ЕСТЬNULL(ДанныеДокументаЗаказНаПроизводствоПродукция.Номенклатура.ГруппаАналитическогоУчета,
		//-- НЕ УТКА
		|				НЕОПРЕДЕЛЕНО
		//++ НЕ УТКА
		|				)
		//-- НЕ УТКА
		|			) КАК ГруппаПродукции,
		|		ЛОЖЬ                          КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(,
		|				Распоряжение В(
		|					ВЫБРАТЬ
		|						Таблица.Распоряжение КАК Распоряжение
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)
		|				И (Номенклатура,Характеристика,Назначение) В(
		|					ВЫБРАТЬ
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика,
		|						Таблица.Назначение
		|					ИЗ
		|						ВтСписокМатериалов КАК Таблица)
		|
		|				И Подразделение = &Подразделение
		|				И Склад = &Склад) КАК ТаблицаОстатки
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(,,,
		|				Распоряжение В(
		|					ВЫБРАТЬ
		|						Таблица.Распоряжение КАК Распоряжение
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)
		|				И Подразделение = &Подразделение
		|				И Склад = &Склад) КАК Таблица
		|			ПО ТаблицаОстатки.Распоряжение = Таблица.Распоряжение
		|			 И ТаблицаОстатки.КодСтроки = Таблица.КодСтроки
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство КАК ДанныеДокументаЗаказМатериалов
		|			ПО ТаблицаОстатки.Распоряжение = ДанныеДокументаЗаказМатериалов.Ссылка
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство.Товары КАК ДанныеДокументаЗаказМатериаловТовары
		|			ПО Таблица.Распоряжение = ДанныеДокументаЗаказМатериаловТовары.Ссылка
		|				И Таблица.КодСтрокиРаспоряжения = ДанныеДокументаЗаказМатериаловТовары.КодСтроки
		
		//++ НЕ УТКА
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ДанныеДокументаЗаказНаПроизводство
		|			ПО ТаблицаОстатки.Распоряжение = ДанныеДокументаЗаказНаПроизводство.Ссылка
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.МатериалыИУслуги КАК ДанныеДокументаЗаказНаПроизводствоТовары
		|			ПО Таблица.Распоряжение = ДанныеДокументаЗаказНаПроизводствоТовары.Ссылка
		|				И Таблица.КодСтрокиРаспоряжения = ДанныеДокументаЗаказНаПроизводствоТовары.КодСтроки
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ДанныеДокументаЗаказНаПроизводствоПродукция
		|			ПО ДанныеДокументаЗаказНаПроизводствоПродукция.Ссылка = ДанныеДокументаЗаказНаПроизводствоТовары.Ссылка
		|				И ДанныеДокументаЗаказНаПроизводствоПродукция.КлючСвязи = ДанныеДокументаЗаказНаПроизводствоТовары.КлючСвязиПродукция
		//-- НЕ УТКА
		|";
		
	//++ НЕ УТКА
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаЗаказМатериалов.Дата", "ЕСТЬNULL(ДанныеДокументаЗаказМатериалов.Дата, ДанныеДокументаЗаказНаПроизводство.Дата)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеДокументаЗаказМатериаловТовары.НомерСтроки", "ЕСТЬNULL(ДанныеДокументаЗаказМатериаловТовары.НомерСтроки, ДанныеДокументаЗаказНаПроизводствоТовары.НомерСтроки)");
	//-- НЕ УТКА
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОтгруженоПоОрдерам()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК Распоряжение,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Назначение             КАК НазначениеОтправителя,
		|	1                                     КАК УпаковкаКоэффициент,
		|
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|		КОНЕЦ)                            КАК Собирается,
		|
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		 + ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Распоряжение = ТаблицаОстатки.ДокументОтгрузки
		|			И ТаблицаОстатки.Склад = &Склад
		|			И ТаблицаОстатки.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Серия, ТаблицаОстатки.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ + ТаблицаОстатки.Собрано) > 0
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСторноНакладная()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаСторно.Распоряжение       КАК Распоряжение,
		|		ТаблицаСторно.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаСторно.КОформлению        КАК КоличествоВЗаказе,
		|		0                                КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаСторно.Номенклатура       КАК Номенклатура,
		|		ТаблицаСторно.Характеристика     КАК Характеристика,
		
		|		ТаблицаСторно.Назначение         КАК Назначение,
		
		|		ВЫБОР
		|			КОГДА НЕ ТаблицаСторно.Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
		|				ТОГДА ТаблицаСторно.Назначение
		|			КОГДА Таблица.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.Отгрузить)
		|				ТОГДА Значение(Справочник.Назначения.ПустаяСсылка)
		|			КОГДА Таблица.ВариантОбеспечения = Значение(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
		|					И ТаблицаСторно.Назначение = Значение(Справочник.Назначения.ПустаяСсылка)
		|				ТОГДА ВЫРАЗИТЬ(ТаблицаСторно.Распоряжение КАК Документ.ЗаказМатериаловВПроизводство).Назначение
		|			ИНАЧЕ
		|				ТаблицаСторно.Назначение
		|		КОНЕЦ                            КАК НазначениеОтправителя,
		
		|		ТаблицаСторно.Серия              КАК Серия,
		|		НЕОПРЕДЕЛЕНО                     КАК Дата,
		|		НЕОПРЕДЕЛЕНО                     КАК НомерСтроки,
		|		НЕОПРЕДЕЛЕНО                     КАК ДатаОтгрузки,
		|		НЕОПРЕДЕЛЕНО                     КАК ГруппаПродукции,
		|		ЛОЖЬ                             КАК ПрисутствуетВДокументе,
		|
		|		НЕОПРЕДЕЛЕНО                     КАК Упаковка,
		|		НЕОПРЕДЕЛЕНО                     КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыМатериаловВПроизводство КАК ТаблицаСторно
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(
		|					,
		|					,
		|					,
		|					Распоряжение В
		|						(ВЫБРАТЬ
		|							Таблица.Распоряжение КАК Распоряжение
		|						ИЗ
		|							ВТЗаказыОтбор КАК Таблица)) КАК Таблица
		|			ПО (Таблица.Распоряжение = ТаблицаСторно.Распоряжение)
		|				И (Таблица.КодСтроки = ТаблицаСторно.КодСтроки)
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.Распоряжение В(
		|			ВЫБРАТЬ
		|				Таблица.Распоряжение КАК Распоряжение
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|		И ТаблицаСторно.Активность";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияНакладная()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		Таблица.Распоряжение КАК Распоряжение,
		|		Таблица.КодСтроки    КАК КодСтроки,
		|		0                    КАК КоличествоВЗаказе,
		|		Таблица.Количество   КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		Таблица.Номенклатура          КАК Номенклатура,
		|		Таблица.Характеристика        КАК Характеристика,
		|		Таблица.Назначение            КАК Назначение,
		|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
		|		Таблица.Серия                 КАК Серия,
		|		НЕОПРЕДЕЛЕНО                  КАК Дата,
		|		Таблица.НомерСтроки           КАК НомерСтроки,
		|		НЕОПРЕДЕЛЕНО                  КАК ДатаОтгрузки,
		|		Таблица.ГруппаПродукции       КАК ГруппаПродукции,
		|		ИСТИНА                        КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка              КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		ВтНакладная КАК Таблица";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВЫРАЗИТЬ(Таблица.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
			"ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура)"));
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПустыеЗначенияЗаказов() Экспорт
	
	ПустыеЗначенияЗаказов = Новый Массив;
	ПустыеЗначенияЗаказов.Добавить(Неопределено);
	ПустыеЗначенияЗаказов.Добавить(Документы.ЗаказМатериаловВПроизводство.ПустаяСсылка());
	ПустыеЗначенияЗаказов.Добавить(Документы.ПередачаМатериаловВПроизводство.ПустаяСсылка());
	//++ НЕ УТКА
	ПустыеЗначенияЗаказов.Добавить(Документы.ЗаказНаПроизводство.ПустаяСсылка());
	ПустыеЗначенияЗаказов.Добавить(Документы.КорректировкаЗаказаМатериаловВПроизводство.ПустаяСсылка());
	//-- НЕ УТКА
	Возврат ПустыеЗначенияЗаказов;

КонецФункции

Функция СозданиеНаОснованииПроверкаОтгрузить()
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ПередачаМатериаловВПроизводство.Товары КАК ТоварыЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ТаблицаДокумента
		|			ПО ТаблицаДокумента.Ссылка = ТоварыЗаказа.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.ПередачаПоРаспоряжениям = Ложь
		|	И ТаблицаДокумента.Ссылка В(&МассивСсылок)
		|	И ТаблицаДокумента.Проведен
		|
//++ НЕ УТКА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказНаПроизводство.МатериалыИУслуги КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И НЕ ТоварыЗаказа.Отменено
		|	И ТоварыЗаказа.Ссылка.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказМатериаловВПроизводство.Товары КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И НЕ ТоварыЗаказа.Отменено
		|	И ТоварыЗаказа.Ссылка.Проведен
		|
//-- НЕ УТКА
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТКА
Функция СозданиеНаОснованииПроверкаРеквизитовШапкиВтЗаказыНаРемонт()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокМатериалыИРаботы.Склад,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокМатериалыИРаботы.Склад) КАК КоличествоСкладов,
	|	ДокМатериалыИРаботы.Ссылка
	|ПОМЕСТИТЬ ВтЗаказыНаРемонт
	|ИЗ
	|	РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты КАК ЗаказНаПроизводство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаРемонт.МатериалыИРаботы КАК ДокМатериалыИРаботы
	|		ПО (ДокМатериалыИРаботы.Ссылка = ЗаказНаПроизводство.Распоряжение)
	|ГДЕ
	|	ЗаказНаПроизводство.Распоряжение В(&МассивСсылок)
	|	И НЕ ДокМатериалыИРаботы.Склад ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокМатериалыИРаботы.Склад,
	|	ДокМатериалыИРаботы.Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТКА

Функция СозданиеНаОснованииПроверкаРеквизитовШапки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Набор.Проведен)                           КАК Проведен,
	|	МИНИМУМ(Набор.Организация)                        КАК Организация,
	|	МИНИМУМ(Набор.Склад)                              КАК Склад,
	|	МИНИМУМ(Набор.Подразделение)                      КАК Подразделение,
	|	МИНИМУМ(Набор.ЭтоЗаказНаВнутреннееПотребление)    КАК ЭтоЗаказНаВнутреннееПотребление,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.ХозяйственнаяОперация) КАК РазличныхОпераций,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Организация)           КАК РазличныхОрганизаций,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Склад)                 КАК РазличныхСкладов,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Подразделение)         КАК РазличныхПодразделений
	|ИЗ(
	|	ВЫБРАТЬ
	|		Заказ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		Заказ.Организация           КАК Организация,
	|		Заказ.Склад                 КАК Склад,
	|		Заказ.Подразделение         КАК Подразделение,
	|		Заказ.Проведен              КАК Проведен,
	|		ИСТИНА                      КАК ЭтоЗаказНаВнутреннееПотребление
	|ИЗ
	|	Документ.ЗаказМатериаловВПроизводство КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|
	//++ НЕ УТКА
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) КАК ХозяйственнаяОперация,
	|		ЗаказНаПроизводство.Организация           КАК Организация,
	|		МАКСИМУМ(
	|					ЕСТЬNULL(
	|						ВЫБОР КОГДА ДокМатериалыИРаботы.КоличествоСкладов = 1 ТОГДА
	|							ДокМатериалыИРаботы.Склад
	|						ИНАЧЕ
	|							NULL
	|						КОНЕЦ
	|					, ЗаказНаПроизводство.Склад)
	|				)	КАК Склад,
	|		ЗаказНаПроизводство.Подразделение         КАК Подразделение,
	|		Истина                                    КАК Проведен,
	|		ЛОЖЬ                                      КАК ЭтоЗаказНаВнутреннееПотребление
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты КАК ЗаказНаПроизводство
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаказыНаРемонт КАК ДокМатериалыИРаботы
	|			ПО ДокМатериалыИРаботы.Ссылка = ЗаказНаПроизводство.Распоряжение
	|	ГДЕ
	|		ЗаказНаПроизводство.Распоряжение В(&МассивСсылок)
	|	СГРУППИРОВАТЬ ПО
	|		ЗаказНаПроизводство.Распоряжение,
	|		ЗаказНаПроизводство.Организация,
	|		ЗаказНаПроизводство.Подразделение
	//-- НЕ УТКА
	|) КАК Набор
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаНаличияОрдеров()

	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(,,,, ДокументОтгрузки В (&МассивСсылок)) КАК ТаблицаОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = ТаблицаОбороты.Склад
		|ГДЕ
		|	ТаблицаОбороты.КОтгрузкеПриход > 0 И(
		|		ТаблицаОбороты.КОтгрузкеРасход > 0
		|		ИЛИ НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|		ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке > &НачалоТекущегоДня)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

