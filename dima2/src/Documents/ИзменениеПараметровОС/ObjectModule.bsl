#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ВводОстатковВнеоборотныхАктивов") Тогда
		ЗаполнитьПоВводуОстатков(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПеремещениеОС") Тогда
		ЗаполнитьПоПеремещению(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.МодернизацияОС") Тогда
		ЗаполнитьПоМодернизации(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПереоценкаОС") Тогда
		ЗаполнитьПоПереоценке(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.КорректировкаНалоговогоНазначенияОС") Тогда
		ЗаполнитьПоКорректировкеНалоговогоНазначения(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
		ЗаполнитьПоПринятиюКУчету(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		ЗаполнитьПоОбъектуЭксплуатации(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	УправлениеВнеоборотнымиАктивамиПереопределяемый.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
	
	Если Не СчетУчетаФлаг И Не СчетАмортизацииФлаг
		И Не ГрафикАмортизацииФлаг И Не СрокИспользованияБУФлаг И Не СрокИспользованияНУФлаг И Не ОбъемНаработкиБУФлаг
		И НЕ СпособНачисленияАмортизацииБУФлаг
		И НЕ СпособНачисленияАмортизацииНУФлаг

		И Не ОтражениеАмортизационныхРасходовФлаг Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не выбраны изменяемые параметры учета основных средств';uk='Не вибрані параметри обліку основних засобів, що змінюються'"),,
			"Объект.СчетУчетаФлаг",,
			Отказ);
		
	КонецЕсли;
	
	РеквизитыПроверки = "СтатьяРасходов, АналитикаРасходов";
	
	Если Не ОтражениеАмортизационныхРасходовФлаг Тогда
		
		НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов");
		НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов.Подразделение");
		НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов.СтатьяРасходов");
		НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов.АналитикаРасходов");
		НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов.Коэффициент");
		
	КонецЕсли;
	
	
	НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов.ОрганизацияПолучательРасходов");
	НепроверяемыеРеквизиты.Добавить("ОтражениеАмортизационныхРасходов.СчетПередачиРасходов");
	ПроверитьЗаполнениеРеквизитовПередачиРасходов(Отказ);
	
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект,
		Новый Структура("ОтражениеАмортизационныхРасходов", РеквизитыПроверки),
		НепроверяемыеРеквизиты,
		Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ПроверитьЗаполнениеСчетов(Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РассчитатьАмортизацию(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ОчиститьЗаписатьДвижения(
		Движения,
		"Хозрасчетный,ПараметрыАмортизацииОСБухгалтерскийУчет, ПараметрыАмортизацииОСНалоговыйУчет");
	
	ТаблицаРеквизитов = ТаблицаРеквизитовДокумента();
	
	УчетОСВызовСервера.ПроверитьСоответствиеОСОрганизации(
		ОС.Выгрузить(),
		ТаблицаРеквизитов,
		Отказ);
	
	УчетОСВызовСервера.ПроверитьСостояниеОСПринятоКУчету(
		ОС.Выгрузить(),
		ТаблицаРеквизитов,
		Отказ);
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ИзменениеПараметровОС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	РеглУчетПроведениеСервер.ОтразитьПорядокОтраженияПрочихОпераций(ДополнительныеСвойства, Отказ);
	ДополнительныеСвойства.ТаблицыДляДвижений.Удалить("ПорядокОтраженияПрочихОпераций");
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	ДополнительныеСвойства.ТаблицыДляДвижений.Удалить("ОтражениеДокументовВРеглУчете");
	
	Для Каждого ТаблицаДвижений Из ДополнительныеСвойства.ТаблицыДляДвижений Цикл
		ПроведениеСервер.ОтразитьДвижения(ТаблицаДвижений.Значение, Движения[ТаблицаДвижений.Ключ], Отказ);
	КонецЦикла;
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	Если Не Отказ Тогда
		РеглУчетПроведениеСервер.ОтразитьДокумент(Новый Структура("Ссылка, Дата, Организация", Ссылка, Дата));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДокумент()
	
	Дата = НачалоДня(ТекущаяДатаСеанса());
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

Процедура ЗаполнитьПоВводуОстатков(Основание)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Документ.Организация КАК Организация,
		|	Документ.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТабличнаяЧасть.НомерСтроки");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоПеремещению(Основание)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперацииРеглУчет.ПеремещениеОСвПодразделениеВыделенноеНаБаланс)
		|			ТОГДА Документ.ОрганизацияПолучатель
		|		ИНАЧЕ Документ.Организация
		|	КОНЕЦ КАК Организация,
		|	Документ.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.ПеремещениеОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	Документ.ПеремещениеОС.ОС КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТабличнаяЧасть.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.ПодразделениеПолучатель КАК Подразделение,
		|	Документ.СтатьяРасходов КАК СтатьяРасходов,
		|	Документ.АналитикаРасходов КАК АналитикаРасходов,
		|	1 КАК Коэффициент
		|ИЗ
		|	Документ.ПеремещениеОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|	И Документ.НачислениеАмортизации = 1");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
	Если Не Пакет[2].Пустой() Тогда
		ОтражениеАмортизационныхРасходов.Загрузить(Пакет[2].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоМодернизации(Основание)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Документ.Организация КАК Организация,
		|	Документ.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.МодернизацияОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	Документ.МодернизацияОС.ОС КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТабличнаяЧасть.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МестонахождениеОС.Местонахождение КАК Подразделение,
		|	СпособыОтраженияРасходов.СтатьяРасходов,
		|	СпособыОтраженияРасходов.АналитикаРасходов,
		|	1 КАК Коэффициент
		|ИЗ
		|	Документ.МодернизацияОС.ОС КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				НЕ СпособОтраженияРасходовЗаданДокументом
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОсновноеСредство
		|						ИЗ
		|							Документ.МодернизацияОС.ОС КАК Т
		|						ГДЕ
		|							Т.Ссылка = &Ссылка)) КАК СпособыОтраженияРасходов
		|		ПО ТабличнаяЧасть.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						Т.ОсновноеСредство
		|					ИЗ
		|						Документ.МодернизацияОС.ОС КАК Т
		|					ГДЕ
		|						Т.Ссылка = &Ссылка)) КАК МестонахождениеОС
		|		ПО ТабличнаяЧасть.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
	Если Не Пакет[2].Пустой() Тогда
		ОтражениеАмортизационныхРасходов.Загрузить(Пакет[2].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоПереоценке(Основание)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Документ.Организация КАК Организация,
		|	Документ.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.ПереоценкаОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	Документ.ПереоценкаОС.ОС КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТабличнаяЧасть.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МестонахождениеОС.Местонахождение КАК Подразделение,
		|	СпособыОтраженияРасходов.СтатьяРасходов,
		|	СпособыОтраженияРасходов.АналитикаРасходов,
		|	1 КАК Коэффициент
		|ИЗ
		|	Документ.ПереоценкаОС.ОС КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				НЕ СпособОтраженияРасходовЗаданДокументом
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОсновноеСредство
		|						ИЗ
		|							Документ.ПереоценкаОС.ОС КАК Т
		|						ГДЕ
		|							Т.Ссылка = &Ссылка)) КАК СпособыОтраженияРасходов
		|		ПО ТабличнаяЧасть.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						Т.ОсновноеСредство
		|					ИЗ
		|						Документ.ПереоценкаОС.ОС КАК Т
		|					ГДЕ
		|						Т.Ссылка = &Ссылка)) КАК МестонахождениеОС
		|		ПО ТабличнаяЧасть.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
	Если Не Пакет[2].Пустой() Тогда
		ОтражениеАмортизационныхРасходов.Загрузить(Пакет[2].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоКорректировкеНалоговогоНазначения(Основание)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Документ.Организация КАК Организация,
		|	Документ.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.КорректировкаНалоговогоНазначенияОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	Документ.КорректировкаНалоговогоНазначенияОС.ОС КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТабличнаяЧасть.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МестонахождениеОС.Местонахождение КАК Подразделение,
		|	СпособыОтраженияРасходов.СтатьяРасходов,
		|	СпособыОтраженияРасходов.АналитикаРасходов,
		|	1 КАК Коэффициент
		|ИЗ
		|	Документ.КорректировкаНалоговогоНазначенияОС.ОС КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				НЕ СпособОтраженияРасходовЗаданДокументом
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОсновноеСредство
		|						ИЗ
		|							Документ.КорректировкаНалоговогоНазначенияОС.ОС КАК Т
		|						ГДЕ
		|							Т.Ссылка = &Ссылка)) КАК СпособыОтраженияРасходов
		|		ПО ТабличнаяЧасть.ОсновноеСредство = СпособыОтраженияРасходов.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&Дата,
		|				ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						Т.ОсновноеСредство
		|					ИЗ
		|						Документ.КорректировкаНалоговогоНазначенияОС.ОС КАК Т
		|					ГДЕ
		|						Т.Ссылка = &Ссылка)) КАК МестонахождениеОС
		|		ПО ТабличнаяЧасть.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
	Если Не Пакет[2].Пустой() Тогда
		ОтражениеАмортизационныхРасходов.Загрузить(Пакет[2].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоПринятиюКУчету(Основание)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Документ.Организация КАК Организация,
		|	Документ.Ссылка КАК ДокументОснование
		|ИЗ
		|	Документ.ПринятиеКУчетуОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство
		|ИЗ
		|	Документ.ПринятиеКУчетуОС.ОС КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТабличнаяЧасть.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.Местонахождение КАК Подразделение,
		|	Документ.СтатьяРасходов КАК СтатьяРасходов,
		|	Документ.АналитикаРасходов КАК АналитикаРасходов,
		|	1 КАК Коэффициент
		|ИЗ
		|	Документ.ПринятиеКУчетуОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
	Если Не Пакет[2].Пустой() Тогда
		ОтражениеАмортизационныхРасходов.Загрузить(Пакет[2].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоОбъектуЭксплуатации(Основание)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СостоянияОСОрганизацийСрезПоследних.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
		|			,
		|			ОсновноеСредство = &ОсновноеСредство
		|				И Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))) КАК СостоянияОСОрганизацийСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыЭксплуатации.Ссылка КАК ОсновноеСредство
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
		|ГДЕ
		|	ОбъектыЭксплуатации.Ссылка = &ОсновноеСредство");
	
	Запрос.УстановитьПараметр("ОсновноеСредство", Основание);
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[0].Пустой() Тогда
		Выборка = Пакет[0].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Если Не Пакет[1].Пустой() Тогда
		ОС.Загрузить(Пакет[1].Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Новый Массив);
	
КонецПроцедуры

Функция ТаблицаРеквизитовДокумента()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	&Ссылка КАК Регистратор,
		|	&Дата КАК Период,
		|	НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) КАК ДатаРасчета,
		|	&Номер,
		|	&Организация,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК СостояниеОС,
		|	""ОС"" КАК ИмяСписка,
		|	ИСТИНА КАК ВыдаватьСообщения,
		|	НЕОПРЕДЕЛЕНО КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК МОЛ");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Номер", Номер);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура РассчитатьАмортизацию(Отказ)
	
	НачисленнаяАмортизация.Очистить();
	
	ТаблицаНачисленнаяАмортизация = УчетОСВызовСервера.НачисленнаяАмортизация(
		ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство"), ТаблицаРеквизитовДокумента(), Отказ);
	
	ДополнительныеСвойства.Вставить("НачисленнаяАмортизация", ТаблицаНачисленнаяАмортизация);
	НачисленнаяАмортизация.Загрузить(ТаблицаНачисленнаяАмортизация);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитовПередачиРасходов(Отказ)
	
	Для каждого Строка Из ОтражениеАмортизационныхРасходов Цикл
		
		Если Не Строка.ПередаватьРасходыВДругуюОрганизацию Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОрганизацияПолучательРасходов) Тогда
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОтражениеАмортизационныхРасходов", Строка.НомерСтроки, "ОрганизацияПолучательРасходов");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не заполнено поле ""Получатель"" в строке ""%1"" табличной части.';uk='Не заповнено поле ""Одержувач"" у рядку ""%1"" табличної частини.'"), Строка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Путь,, Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.СчетПередачиРасходов) Тогда
			
			Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОтражениеАмортизационныхРасходов", Строка.НомерСтроки, "СчетПередачиРасходов");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не заполнено поле ""Счет передачи"" в строке ""%1"" табличной части.';uk='Не заповнено поле ""Рахунок передачі"" у рядку ""%1"" табличної частини.'"), Строка.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Путь,, Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеСчетов(Отказ)
	
	Если Не СчетУчетаФлаг И Не СчетАмортизацииФлаг Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("СчетУчета", ЭтотОбъект.СчетУчета);
	Запрос.УстановитьПараметр("СчетУчетаФлаг", ЭтотОбъект.СчетУчетаФлаг);
	Запрос.УстановитьПараметр("СчетАмортизации", ЭтотОбъект.СчетАмортизации);
	Запрос.УстановитьПараметр("СчетАмортизацииФлаг", ЭтотОбъект.СчетАмортизацииФлаг);
	Запрос.УстановитьПараметр("ОсновныеСредства", ЭтотОбъект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации  КАК СчетАмортизации 
	|ПОМЕСТИТЬ втСчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&ОсновныеСредства)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСчета.СчетУчета
	|ИЗ
	|	втСчета КАК втСчета
	|ГДЕ
	|	&СчетУчетаФлаг И втСчета.СчетУчета = &СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	втСчета.СчетАмортизации
	|ИЗ
	|	втСчета КАК втСчета
	|ГДЕ
	|	&СчетАмортизацииФлаг И втСчета.СчетАмортизации = &СчетАмортизации";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Не Пакет[1].Пустой() Тогда
		
		ШаблонОшибки = НСтр("ru='Счет ""%1"" уже используется в качестве счета учета в стоимости одного или нескольких основных средств.
        |Требуется выбрать другой счет учета основных средств.'
        |;uk='Рахунок ""%1"" вже використовується в якості рахунку обліку у вартості одного або декількох основних засобів.
        |Потрібно вибрати інший рахунок обліку основних засобів.'");
		ШаблонОшибки = СтрШаблон(ШаблонОшибки, ЭтотОбъект.СчетУчета);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ШаблонОшибки, ЭтотОбъект, "СчетУчета",, Отказ);
		
	КонецЕсли;
	
	Если Не Пакет[2].Пустой() Тогда
		
		ШаблонОшибки = НСтр("ru='Счет ""%1"" уже используется в качестве счета учета в накопленной амортизации одного или нескольких основных средств.
            |Требуется выбрать другой счет учета накопленной амортизации ОС.'
            |;uk='Рахунок ""%1"" вже використовується в якості рахунку обліку у накопиченої амортизації одного або декількох основних засобів.
            |Потрібно вибрати інший рахунок обліку накопиченої амортизації ОЗ.'");
		ШаблонОшибки = СтрШаблон(ШаблонОшибки, ЭтотОбъект.СчетАмортизации);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ШаблонОшибки, ЭтотОбъект, "СчетАмортизации",, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
