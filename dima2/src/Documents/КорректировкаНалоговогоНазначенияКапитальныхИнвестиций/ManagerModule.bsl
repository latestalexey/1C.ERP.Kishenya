#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций) Тогда	
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "УправлениеПредприятием,КомплекснаяАвтоматизация";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

//++ НЕ УТ



#Область ПроведениеПоРеглУчетуУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//                                                                               
Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
#Область ТекстСуммаКорректировкиОСНаСчетКапитальныхИнвестиций // (Дт 10 :: Кт 15)

	ТекстСуммаКорректировкиОСНаСчетКапитальныхИнвестиций = "
	|ВЫБРАТЬ //// Сумма корректировки ОС на счет капитальных инвестиций (Дт 10 :: Кт 15)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(КорректировкиНДСПартий.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт, 
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеДт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	| 	КорректировкиНДСПартий.КорНалоговоеНазначение КАК НалоговоеНазначениеДт,  
	|
	|	ПараметрыОбъектовУчета.СчетУчета КАК СчетДт,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР
	|			КОГДА КорректировкиНДСПартий.КорНалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|				ТОГДА 0
	|			ИНАЧЕ КорректировкиНДСПартий.Сумма
	|		КОНЕЦ) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт, 
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК АналитикаУчетаКт,
	|	ПараметрыОбъектовУчета.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеКт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт, 
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК СубконтоКт1,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Оценка стоимости ОС при условной продаже"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТПараметрыОбъектовУчета КАК ПараметрыОбъектовУчета
	|	ПО 
	|		(Операция.Ссылка = ПараметрыОбъектовУчета.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов = ПараметрыОбъектовУчета.ОбъектУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.КорНалоговоеНазначение,
	|	ПараметрыОбъектовУчета.СчетУчета,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение
	|";

#КонецОбласти 

#Область ТекстСуммаКорректировкиОСУсловнаяПродажа // (Дт 15 :: Кт 6435)

	ТекстСуммаКорректировкиОСУсловнаяПродажа = "
	|ВЫБРАТЬ //// Условная продажа (Дт 15 :: Кт 6435)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(КорректировкиНДСПартий.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК АналитикаУчетаДт,
	|	ПараметрыОбъектовУчета.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеДт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт, 
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК СубконтоДт1,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт, 
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеКт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт, 
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УсловнаяПродажа) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Условная продажа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТПараметрыОбъектовУчета КАК ПараметрыОбъектовУчета
	|	ПО 
	|		(Операция.Ссылка = ПараметрыОбъектовУчета.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов = ПараметрыОбъектовУчета.ОбъектУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.КорНалоговоеНазначение,
	|	ПараметрыОбъектовУчета.СчетУчета,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение
	|";

#КонецОбласти 

#Область ТекстСуммаКорректировкиНМАНаСчетКапитальныхИнвестиций // (Дт 12 :: Кт 15)

	ТекстСуммаКорректировкиНМАНаСчетКапитальныхИнвестиций = "
	|ВЫБРАТЬ //// Сумма корректировки НМА на счет капитальных инвестиций (Дт 12 :: Кт 15)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(КорректировкиНДСПартий.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт, 
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеДт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	| 	КорректировкиНДСПартий.КорНалоговоеНазначение КАК НалоговоеНазначениеДт,  
	|
	|	ПараметрыОбъектовУчета.СчетУчета КАК СчетДт,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ВЫБОР
	|			КОГДА КорректировкиНДСПартий.КорНалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|				ТОГДА 0
	|			ИНАЧЕ КорректировкиНДСПартий.Сумма
	|		КОНЕЦ) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт, 
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК АналитикаУчетаКт,
	|	ПараметрыОбъектовУчета.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеКт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт, 
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК СубконтоКт1,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Оценка стоимости НМА при условной продаже"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТПараметрыОбъектовУчета КАК ПараметрыОбъектовУчета
	|	ПО 
	|		(Операция.Ссылка = ПараметрыОбъектовУчета.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов = ПараметрыОбъектовУчета.ОбъектУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.КорНалоговоеНазначение,
	|	ПараметрыОбъектовУчета.СчетУчета,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение
	|";

#КонецОбласти 

#Область ТекстСуммаКорректировкиНМАУсловнаяПродажа // (Дт 15 :: Кт 6435)

	ТекстСуммаКорректировкиНМАУсловнаяПродажа = "
	|ВЫБРАТЬ //// Условная продажа (Дт 15 :: Кт 6435)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(КорректировкиНДСПартий.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК АналитикаУчетаДт,
	|	ПараметрыОбъектовУчета.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеДт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт, 
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК СубконтоДт1,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт, 
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ПараметрыОбъектовУчета.Подразделение КАК ПодразделениеКт,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт, 
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.УсловнаяПродажа) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Условная продажа"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|	ПО 
	|		(Операция.Ссылка = КорректировкиНДСПартий.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВТПараметрыОбъектовУчета КАК ПараметрыОбъектовУчета
	|	ПО 
	|		(Операция.Ссылка = ПараметрыОбъектовУчета.Ссылка)
	|		И (КорректировкиНДСПартий.АналитикаРасходов = ПараметрыОбъектовУчета.ОбъектУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.КорНалоговоеНазначение,
	|	ПараметрыОбъектовУчета.СчетУчета,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	ПараметрыОбъектовУчета.Подразделение,
	|	ПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	КорректировкиНДСПартий.СтатьяРасходовИзмерение
	|";

#КонецОбласти 
 
	Возврат ТекстСуммаКорректировкиОСНаСчетКапитальныхИнвестиций
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСуммаКорректировкиОСУсловнаяПродажа
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСуммаКорректировкиНМАНаСчетКапитальныхИнвестиций
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСуммаКорректировкиНМАУсловнаяПродажа;
	
КонецФункции
	
// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КорректировкиНДСПартий.Ссылка КАК Ссылка,
	|	КорректировкиНДСПартий.Организация КАК Организация,
	|	КорректировкиНДСПартий.АналитикаРасходов КАК ОбъектУчета,
	|	ОбъектыУчета.НаправлениеДеятельности,
	|	ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(Местонахождения.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
	|ПОМЕСТИТЬ ВТПараметрыОбъектовУчета
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|		ПО ДокументыКОтражению.Ссылка = КорректировкиНДСПартий.Ссылка
	|		И (КорректировкиНДСПартий.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыУчета
	|		ПО (КорректировкиНДСПартий.АналитикаРасходов = ОбъектыУчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				&Дата,
	|				(Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.АналитикаРасходов
	|					ИЗ
	|						КорректировкиНДСПартий КАК Т)) КАК СчетаОтражения
	|		ПО (КорректировкиНДСПартий.АналитикаРасходов = СчетаОтражения.ОсновноеСредство)
	|			И (КорректировкиНДСПартий.Организация = СчетаОтражения.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				(Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.АналитикаРасходов
	|					ИЗ
	|						КорректировкиНДСПартий КАК Т)) КАК Местонахождения
	|		ПО (КорректировкиНДСПартий.АналитикаРасходов = Местонахождения.ОсновноеСредство)
	|			И (КорректировкиНДСПартий.Организация = Местонахождения.Организация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкиНДСПартий.Ссылка,
	|	КорректировкиНДСПартий.Организация,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	ОбъектыУчета.НаправлениеДеятельности,
	|	ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(Местонахождения.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КорректировкиНДСПартий КАК КорректировкиНДСПартий
	|		ПО ДокументыКОтражению.Ссылка = КорректировкиНДСПартий.Ссылка
	|		И (КорректировкиНДСПартий.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК ОбъектыУчета
	|		ПО (КорректировкиНДСПартий.АналитикаРасходов = ОбъектыУчета.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Дата,
	|				(Организация, НематериальныйАктив) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.АналитикаРасходов
	|					ИЗ
	|						КорректировкиНДСПартий КАК Т)) КАК СчетаОтражения
	|		ПО (КорректировкиНДСПартий.АналитикаРасходов = СчетаОтражения.НематериальныйАктив)
	|			И (КорректировкиНДСПартий.Организация = СчетаОтражения.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				(Организация, НематериальныйАктив) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.АналитикаРасходов
	|					ИЗ
	|						КорректировкиНДСПартий КАК Т)) КАК Местонахождения
	|		ПО (КорректировкиНДСПартий.АналитикаРасходов = Местонахождения.НематериальныйАктив)
	|			И (КорректировкиНДСПартий.Организация = Местонахождения.Организация)
	|
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъектыУчета.НаправлениеДеятельности,
	|	КорректировкиНДСПартий.Ссылка,
	|	КорректировкиНДСПартий.АналитикаРасходов,
	|	КорректировкиНДСПартий.Организация,
	|	ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)),
	|	ЕСТЬNULL(Местонахождения.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОбъектУчета
	|;
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции
	
#КонецОбласти 	

//-- НЕ УТ


// Выполняет корректировку налоговых назначений капитальных инвестиций за указанный период в указанных организациях. Предназначена для вызова в рамках закрытия месяца
// Параметры:
//	Период - Дата - Начало месяца, за который необходимо создать документы.
//	Организация - Массив, Неопределено - Список организаций, по которым создаются документы.
//										 Если список пустой, то документы будут созданы по всем организациям.
//	ТолькоЕслиЕстьЗадания - Булево - Признак проверки заданий к распределению. 
//										 Если ложь, то распределения будет выполнено даже при отсутствии заданий.
//
Процедура КорректироватьНалоговыеНазначенияКапитальныхИнвестиций(Период, Организация = Неопределено, ТолькоЕслиЕстьЗадания = Ложь) Экспорт	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеСправочника.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка = &Организация
	|		ИЛИ &ПоВсемОрганизациям)
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Ссылка,
	|	КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Организация
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК КорректировкаНалоговогоНазначенияКапитальныхИнвестиций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК ВТОрганизации
	|		ПО КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Организация = ВТОрганизации.Организация
	|ГДЕ
	|	КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОрганизации.Организация КАК Организация,
	|	ЕСТЬNULL(ВТДокументы.Ссылка, ЗНАЧЕНИЕ(Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.ПустаяСсылка)) КАК Документ
	|ИЗ
	|	ВТОрганизации КАК ВТОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТДокументы КАК ВТДокументы
	|	ПО 
	|		ВТОрганизации.Организация = ВТДокументы.Организация
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций");
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Документ");
	Блокировка.Заблокировать();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		Если ТолькоЕслиЕстьЗадания Тогда
			Состояние = ЗакрытиеМесяцаУТВызовСервера.СостояниеКорректировкаНалоговогоНазначенияКапитальныхИнвестиций(Выборка.Организация, Период);
			Если Состояние <> Перечисления.СостоянияОперацийЗакрытияМесяца.НеВыполнено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Выборка.Документ) Тогда
			ДокументОбъект = Документы.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.СоздатьДокумент();
			ДокументОбъект.Дата = КонецМесяца(Период);
			ДокументОбъект.Организация = Выборка.Организация;
			ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
		Иначе
			ДокументОбъект = Выборка.Документ.ПолучитьОбъект();
		КонецЕсли;
			
		ДокументОбъект.ДополнительныеСвойства.Вставить("РегламентныеОперации");
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьЗадание(ПараметрыЗадания) Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКЗакрытиюМесяца");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	
	Блокировка.Заблокировать();
	
	Запись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ПараметрыЗадания);
	Запись.Операция = Перечисления.ОперацииЗакрытияМесяца.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций;
	Запись.НомерЗадания = Константы.НомерЗаданияКЗакрытиюМесяца.Получить();
	Запись.Записать();
	
КонецПроцедуры

// Ищет и перепроводит существующий документ только по регистрам сведений ОС и НМА 
// Параметры:
//	Период      - Дата - Начало месяца, за который необходимо перепровести документы.
//	Организация - Справочники.Организации - организация, по которой необходимо перепровести документы.
//
Процедура ПерепровестиПоРегистрамСведенийОСНМА(Период, Организация = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеСправочника.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка = &Организация
	|		ИЛИ &ПоВсемОрганизациям)
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Ссылка,
	|	КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Организация
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК КорректировкаНалоговогоНазначенияКапитальныхИнвестиций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК ВТОрганизации
	|		ПО КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Организация = ВТОрганизации.Организация
	|ГДЕ
	|	КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И КорректировкаНалоговогоНазначенияКапитальныхИнвестиций.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОрганизации.Организация КАК Организация,
	|	ВТДокументы.Ссылка КАК Документ
	|ИЗ
	|	ВТОрганизации КАК ВТОрганизации
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТДокументы КАК ВТДокументы
	|	ПО 
	|		ВТОрганизации.Организация = ВТДокументы.Организация
	|ГДЕ
	|	НЕ (ВТДокументы.Ссылка ЕСТЬ NULL)
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(Организация));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		ДополнительныеСвойства = Новый Структура;
		ДополнительныеСвойства.Вставить("ЭтоНовый", Ложь);
		ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		
		ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(
			Выборка.Документ,
			ДополнительныеСвойства,
			РежимПроведенияДокумента.Неоперативный
		);
		
		ИнициализироватьДанныеДокумента(Выборка.Документ, ДополнительныеСвойства);
		
		// запишем только рс по ОС и НМА
		
		НачатьТранзакцию();
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.НаборЗаписей");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Документ);
		
		Блокировка.Заблокировать();
		
		
		// ПервоначальныеСведенияОСБухгалтерскийУчет
		НаборЗаписей = РегистрыСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет);
		НаборЗаписей.Записать();
		
		// ПервоначальныеСведенияОСНалоговыйУчет
		НаборЗаписей = РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияОСНалоговыйУчет);
		НаборЗаписей.Записать();
		
		// ПервоначальныеСведенияНМАБухгалтерскийУчет
		НаборЗаписей = РегистрыСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет);
		НаборЗаписей.Записать();
		
		// ПервоначальныеСведенияНМАНалоговыйУчет
		НаборЗаписей = РегистрыСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияНМАНалоговыйУчет);
		НаборЗаписей.Записать();
		
		// ПараметрыАмортизацииОСБухгалтерскийУчет
		НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет);
		НаборЗаписей.Записать();
		
		// ПараметрыАмортизацииОСНалоговыйУчет
		НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСНалоговыйУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Документ);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПараметрыАмортизацииОСНалоговыйУчет);
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры // ПерепровестиПоРегистрамСведенийОСНМА

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Если Регистры <> Неопределено Тогда
		ПроведениеСервер.ЗапретВыборочногоПроведенияПоРегистрам(ДокументСсылка);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						КАК Ссылка,
	|	ДанныеДокумента.Дата						КАК Период,
	|	ДанныеДокумента.Организация					КАК Организация
	|ИЗ
	|	Документ.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	СформироватьДвижения(Реквизиты, ДополнительныеСвойства.ТаблицыДляДвижений);
	
КонецПроцедуры

Функция ДанныеДляРаспределения(Реквизиты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"
	//++ НЕ УТ
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.Регистратор      КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуОС
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|			&Граница,
	|			Организация = &Организация
	|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|					ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)) КАК СостоянияОС
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрНалоговыеНазначенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрНалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ НалоговыеНазначенияОС
	|ИЗ
	|	РегистрСведений.НалоговыеНазначенияОС.СрезПоследних(
	|			&Граница,
	|			Организация = &Организация
	|				И ОсновноеСредство В (
	|					ВЫБРАТЬ 
	|						ВтРегистраторыПринятияКУчетуОС.ОсновноеСредство
	|					ИЗ 
	|						ВтРегистраторыПринятияКУчетуОС
	|				)
	|	) КАК РегистрНалоговыеНазначенияОС
	|ИНДЕКСИРОВАТЬ ПО 
	|	ОсновноеСредство
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	СостоянияНМА.Регистратор         КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПринятияКУчетуНМА
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
	|			&Граница,
	|			Организация = &Организация
	|				И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|				И (Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|					ИЛИ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)) КАК СостоянияНМА
	|ИНДЕКСИРОВАТЬ ПО 
	|	Регистратор
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрНалоговыеНазначенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	РегистрНалоговыеНазначенияНМА.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ НалоговыеНазначенияНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Организация = &Организация
	|				И НематериальныйАктив В (
	|					ВЫБРАТЬ 
	|						ВтРегистраторыПринятияКУчетуНМА.НематериальныйАктив
	|					ИЗ 
	|						ВтРегистраторыПринятияКУчетуНМА
	|				)
	|	) КАК РегистрНалоговыеНазначенияНМА
	|ИНДЕКСИРОВАТЬ ПО 
	|	НематериальныйАктив
	|;
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК АналитикаРасходов,
	|	НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначение 
	|ПОМЕСТИТЬ ВтВнеобАктивы
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ВводОстатковОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ВводОстатковОС.Ссылка
	|		И ОСПринятыеКУчету.ОсновноеСредство = ВводОстатковОС.ОсновноеСредство
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|	ПО
	|		ОСПринятыеКУчету.ОсновноеСредство = НалоговыеНазначенияОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ОС"" КАК ВнеоборотныйАктив,
	|	ОСПринятыеКУчету.ОсновноеСредство КАК АналитикаРасходов,
	|	НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуОС КАК ОСПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|	ПО
	|		ОСПринятыеКУчету.Регистратор = ПринятиеКУчетуОС.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|	ПО
	|		ОСПринятыеКУчету.ОсновноеСредство = НалоговыеНазначенияОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|/////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК АналитикаРасходов,
	|	НалоговыеНазначенияНМА.НалоговоеНазначение КАК НалоговоеНазначение 
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуНМА КАК НМАПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ВводОстатковНМА
	|	ПО
	|		НМАПринятыеКУчету.Регистратор = ВводОстатковНМА.Ссылка
	|		И НМАПринятыеКУчету.НематериальныйАктив = ВводОстатковНМА.НематериальныйАктив
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияНМА КАК НалоговыеНазначенияНМА
	|	ПО
	|		НМАПринятыеКУчету.НематериальныйАктив = НалоговыеНазначенияНМА.НематериальныйАктив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""НМА"" КАК ВнеоборотныйАктив,
	|	НМАПринятыеКУчету.НематериальныйАктив КАК АналитикаРасходов,
	|	НалоговыеНазначенияНМА.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтРегистраторыПринятияКУчетуНМА КАК НМАПринятыеКУчету
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчетуНМА
	|	ПО
	|		НМАПринятыеКУчету.Регистратор = ПринятиеКУчетуНМА.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		НалоговыеНазначенияНМА КАК НалоговыеНазначенияНМА
	|	ПО
	|		НМАПринятыеКУчету.НематериальныйАктив = НалоговыеНазначенияНМА.НематериальныйАктив
	|
	|;
	|////////////////////////////////////////////////////////////////////
	//-- НЕ УТ
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация                 КАК Организация,
	|	ВложенныйЗапрос.Подразделение               КАК Подразделение,
	|	ВложенныйЗапрос.СтатьяРасходов              КАК СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов           КАК АналитикаРасходов,
	|	ВложенныйЗапрос.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ВложенныйЗапрос.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ВложенныйЗапрос.СтоимостьРегл)        КАК СтоимостьРегл,
	|	СУММА(ВложенныйЗапрос.НДСРегл)              КАК НДСРегл
	|ПОМЕСТИТЬ ПартииПрочихРасходовОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПартииПрочихРасходовОстатки.Организация                 КАК Организация,
	|		ПартииПрочихРасходовОстатки.Подразделение               КАК Подразделение,
	|		ПартииПрочихРасходовОстатки.СтатьяРасходов              КАК СтатьяРасходов,
	|		ПартииПрочихРасходовОстатки.АналитикаРасходов           КАК АналитикаРасходов,
	|		ПартииПрочихРасходовОстатки.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|		ПартииПрочихРасходовОстатки.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|		ПартииПрочихРасходовОстатки.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|		ПартииПрочихРасходовОстатки.СтоимостьРеглОстаток        КАК СтоимостьРегл,
	|		ПартииПрочихРасходовОстатки.НДСРеглОстаток              КАК НДСРегл
	|	ИЗ
	|		РегистрНакопления.ПартииПрочихРасходов.Остатки(
	|				&Граница, 
	|				Организация = &Организация) КАК ПартииПрочихРасходовОстатки
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПрочихРасходовОбороты.Организация,
	|		ПартииПрочихРасходовОбороты.Подразделение,
	|		ПартииПрочихРасходовОбороты.СтатьяРасходов,
	|		ПартииПрочихРасходовОбороты.АналитикаРасходов,
	|		ПартииПрочихРасходовОбороты.ДокументПоступленияРасходов,
	|		ПартииПрочихРасходовОбороты.АналитикаУчетаПартий,
	|		ПартииПрочихРасходовОбороты.АналитикаУчетаНоменклатуры,
	|		-ПартииПрочихРасходовОбороты.СтоимостьРеглОборот,
	|		-ПартииПрочихРасходовОбороты.НДСРеглОборот
	|	ИЗ
	|		РегистрНакопления.ПартииПрочихРасходов.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Регистратор,
	|				Организация = &Организация) КАК ПартииПрочихРасходовОбороты
	|	ГДЕ
	|		ПартииПрочихРасходовОбороты.Регистратор = &ДокументСсылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов,
	|	ВложенныйЗапрос.ДокументПоступленияРасходов,
	|	ВложенныйЗапрос.АналитикаУчетаПартий,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.СтоимостьРегл) <> 0 
	|		ИЛИ СУММА(ВложенныйЗапрос.НДСРегл) <> 0
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументПоступленияРасходов
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация                                   КАК Организация,
	|	ТаблицаОстатков.Подразделение                                 КАК Подразделение,
	|	ТаблицаОстатков.СтатьяРасходов                                КАК СтатьяРасходов,
	|	ТаблицаОстатков.АналитикаРасходов                             КАК АналитикаРасходов,
	|	ТаблицаОстатков.ДокументПоступленияРасходов                   КАК ДокументПоступленияРасходов,
	|	ТаблицаОстатков.АналитикаУчетаПартий                          КАК АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	
	|	
	|	АналитикаПартий.Контрагент                                    КАК Контрагент,
	|	АналитикаПартий.НалоговоеНазначение                           КАК НалоговоеНазначениеПартии,
	|	АналитикаПартий.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, &Период) КАК ДатаПоступленияРасходов,
	|	
	|	СтатьиРасходов.ВариантРаспределенияРасходов                   КАК ВариантРаспределенияРасходовСтатьи,
	|	СтатьиРасходов.ВидЦенности                                    КАК ВидЦенностиСтатьиРасходов,
	|	
	|	ВЫБОР 
	|		КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		КОГДА НЕ СтатьиРасходов.ВидЦенности ЕСТЬ NULL
	|			ТОГДА СтатьиРасходов.ВидЦенности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|	КОНЕЦ                                                      КАК ВидЦенности,
	|	
	|	ТаблицаОстатков.СтоимостьРегл                              КАК СтоимостьРегл,
	|	ТаблицаОстатков.НДСРегл                                    КАК НДСРегл
	|	
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ПартииПрочихРасходовОстатки КАК ТаблицаОстатков
	|	
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|	ПО
	|		ТаблицаОстатков.Организация =  ДанныеПервичныхДокументов.Организация
	|		И ТаблицаОстатков.ДокументПоступленияРасходов = ДанныеПервичныхДокументов.Документ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
	|	ПО 
	|		ТаблицаОстатков.АналитикаУчетаПартий = АналитикаПартий.КлючАналитики
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|	ПО 
	|		ТаблицаОстатков.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТаблицаОстатков.СтатьяРасходов = СтатьиРасходов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПартииПрочихРасходовОстатки
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////
	//++ НЕ УТ
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПараметрыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОС.Организация КАК Организация,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И Организация = &Организация
	|			И ОсновноеСредство В (ВЫБРАТЬ Т.АналитикаРасходов ИЗ ВтВнеобАктивы КАК Т)
	|	) КАК ПараметрыАмортизацииОС
	|;
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПараметрыАмортизацииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОС.Организация КАК Организация,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И Организация = &Организация
	|			И ОсновноеСредство В (ВЫБРАТЬ Т.АналитикаРасходов ИЗ ВтВнеобАктивы КАК Т)
	|	) КАК ПараметрыАмортизацииОС
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМА.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПервоначальныеСведенияНМА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И Организация = &Организация
	|			И НематериальныйАктив В (ВЫБРАТЬ Т.АналитикаРасходов ИЗ ВтВнеобАктивы КАК Т)
	|	) КАК ПервоначальныеСведенияНМА
	|;
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияНМА.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМА.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	ПервоначальныеСведенияНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМА.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ПервоначальныеСведенияНМА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|			И Организация = &Организация
	|			И НематериальныйАктив В (ВЫБРАТЬ Т.АналитикаРасходов ИЗ ВтВнеобАктивы КАК Т)
	|	) КАК ПервоначальныеСведенияНМА
	|;
	|
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПервоначальныеСведенияОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.АналитикаРасходов
	|					ИЗ
	|						ВтВнеобАктивы КАК Т)) КАК ПервоначальныеСведенияОС
	|;
	|////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	ЛОЖЬ КАК ЕстьИзменения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&Граница,
	|			Регистратор <> &ДокументСсылка
	|				И Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.АналитикаРасходов
	|					ИЗ
	|						ВтВнеобАктивы КАК Т)) КАК ПервоначальныеСведенияОС
	|;
	|////////////////////////////////////////////////////////////////////
	//-- НЕ УТ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация                      КАК Организация,
	|	ТаблицаОстатков.Подразделение                    КАК Подразделение,
	|	ТаблицаОстатков.СтатьяРасходов                   КАК СтатьяРасходов,
	|	ТаблицаОстатков.АналитикаРасходов                КАК АналитикаРасходов,
	|	ТаблицаОстатков.ДокументПоступленияРасходов      КАК ДокументПоступленияРасходов,
	|	ТаблицаОстатков.АналитикаУчетаПартий             КАК АналитикаУчетаПартий,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры       КАК АналитикаУчетаНоменклатуры,
	|	
	|	                                            
	|	ТаблицаОстатков.Контрагент                       КАК Контрагент,
	|	ТаблицаОстатков.НалоговоеНазначениеПартии        КАК НалоговоеНазначениеПартии,
	|	ТаблицаОстатков.СтавкаНДС                        КАК СтавкаНДС,
	|	
	|	ТаблицаОстатков.ДатаПоступленияРасходов          КАК ДатаПоступленияРасходов,
	|	
	|	КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)                     КАК ПериодБазы,
	|	
	|	ВнеобАктивы.НалоговоеНазначение                  КАК НовоеНалоговоеНазначение,
	|	ВнеобАктивы.ВнеоборотныйАктив                    КАК ВнеоборотныйАктив,
	|	ТаблицаОстатков.ВидЦенности                      КАК ВидЦенности,
	|	
	|	ТаблицаОстатков.СтоимостьРегл                    КАК СтоимостьРегл,
	|	ТаблицаОстатков.НДСРегл                          КАК НДСРегл
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтВнеобАктивы КАК ВнеобАктивы
	|	ПО 
	|		ТаблицаОстатков.АналитикаРасходов = ВнеобАктивы.АналитикаРасходов
	|
	|ГДЕ
	|	ТаблицаОстатков.ВариантРаспределенияРасходовСтатьи = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|";
	
	//-- НЕ УТ
	ПериодНачало    = НачалоМесяца(Реквизиты.Период);
	ПериодОкончание = КонецМесяца(Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Период",             Реквизиты.Период);
	Запрос.УстановитьПараметр("ПериодНачало",       ПериодНачало);
	Запрос.УстановитьПараметр("ПериодОкончание",    ПериодОкончание);
	Запрос.УстановитьПараметр("Организация",        Реквизиты.Организация);
	Запрос.УстановитьПараметр("Граница",            Новый Граница(ПериодОкончание, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДокументСсылка",     Реквизиты.Ссылка);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	КоличествоЭлементов = РезультатыЗапроса.Количество();
	
	Результат = Новый Структура;
	//++ НЕ УТ
	Результат.Вставить("ПараметрыАмортизацииОСБухгалтерскийУчет",    	РезультатыЗапроса[КоличествоЭлементов-7].Выгрузить());
	Результат.Вставить("ПараметрыАмортизацииОСНалоговыйУчет",    		РезультатыЗапроса[КоличествоЭлементов-6].Выгрузить());
	Результат.Вставить("ПервоначальныеСведенияНМАБухгалтерскийУчет",	РезультатыЗапроса[КоличествоЭлементов-5].Выгрузить());
	Результат.Вставить("ПервоначальныеСведенияНМАНалоговыйУчет", 		РезультатыЗапроса[КоличествоЭлементов-4].Выгрузить());
	Результат.Вставить("ПервоначальныеСведенияОСБухгалтерскийУчет",  	РезультатыЗапроса[КоличествоЭлементов-3].Выгрузить());
	Результат.Вставить("ПервоначальныеСведенияОСНалоговыйУчет",  		РезультатыЗапроса[КоличествоЭлементов-2].Выгрузить());
	//-- НЕ УТ
	Результат.Вставить("ПартииПрочихРасходов",      РезультатыЗапроса[КоличествоЭлементов-1].Выгрузить());
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьДвижения(Реквизиты, ТаблицыДляДвижений)
	
	ДанныеДляРаспределения = ДанныеДляРаспределения(Реквизиты);
	РезультатРаспределения = РаспределитьПартииПрочихРасходовПоБазе(ДанныеДляРаспределения.ПартииПрочихРасходов, Реквизиты);
	
	ТаблицаНДСУсловнаяПродажа     = ТаблицаНДСУсловнаяПродажа(РезультатРаспределения, Реквизиты);
	ТаблицаНДСВосстановлениеНДС   = ТаблицаНДСВосстановлениеНДС(РезультатРаспределения, Реквизиты);
	ТаблицаКорректировкиНДСПартий = ТаблицаКорректировкиНДСПартий(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС);
	ТаблицыДляДвижений.Вставить("ТаблицаКорректировкиНДСПартий",  ТаблицаКорректировкиНДСПартий);
	ТаблицаДвиженияНДСУсловныеПродажи = ТаблицаДвиженияНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС);
	ТаблицыДляДвижений.Вставить("ТаблицаНДСУсловныеПродажи",  ТаблицаДвиженияНДСУсловныеПродажи);
	ТаблицыДляДвижений.Вставить("ТаблицаПартииПрочихРасходов",  ТаблицаПартииПрочихРасходов(РезультатРаспределения, Реквизиты));
	
	//++ НЕ УТ
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПрочиеРасходы", 
		ТаблицаПрочиеРасходы(РезультатРаспределения, Реквизиты));
		
	ОрганизацияПлательщикНДС 				= Справочники.Организации.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период);
	ОрганизацияПлательщикНалогаНаПрибыль 	= Справочники.Организации.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	
	Если (НЕ ОрганизацияПлательщикНДС) И (НЕ ОрганизацияПлательщикНалогаНаПрибыль) Тогда
		// Если организация - неплательщик ни прибыли, ни НДС, движений по добавлении НДС в суммы НУ не делаем
		// Для общности просто очищаем таблицы НУ в ДанныеДляРаспределения
		ДанныеДляРаспределения.ПараметрыАмортизацииОСНалоговыйУчет.Очистить();
		ДанныеДляРаспределения.ПервоначальныеСведенияОСНалоговыйУчет.Очистить();
		ДанныеДляРаспределения.ПервоначальныеСведенияНМАНалоговыйУчет.Очистить();
	КонецЕсли; 
	
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет", 
		ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет(РезультатРаспределения, ДанныеДляРаспределения.ПараметрыАмортизацииОСБухгалтерскийУчет));
		
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПараметрыАмортизацииОСНалоговыйУчет",
		ТаблицаПараметрыАмортизацииОСНалоговыйУчет(РезультатРаспределения, ДанныеДляРаспределения.ПараметрыАмортизацииОСНалоговыйУчет));
		
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет", 
		ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(РезультатРаспределения, ДанныеДляРаспределения.ПервоначальныеСведенияОСБухгалтерскийУчет));
		
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПервоначальныеСведенияОСНалоговыйУчет", 
		ТаблицаПервоначальныеСведенияОСНалоговыйУчет(РезультатРаспределения, ДанныеДляРаспределения.ПервоначальныеСведенияОСНалоговыйУчет));
		
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет", 
		ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет(РезультатРаспределения, ДанныеДляРаспределения.ПервоначальныеСведенияНМАБухгалтерскийУчет));
		
	ТаблицыДляДвижений.Вставить(
		"ТаблицаПервоначальныеСведенияНМАНалоговыйУчет", 
		ТаблицаПервоначальныеСведенияНМАНалоговыйУчет(РезультатРаспределения, ДанныеДляРаспределения.ПервоначальныеСведенияНМАНалоговыйУчет));
		
	//-- НЕ УТ
	
КонецФункции

Функция РаспределитьПартииПрочихРасходовПоБазе(ПартииПрочихРасходов, Реквизиты)
	
	
	ПартииПрочихРасходовУсловнаяПродажа   = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовВосстановлениеНДС = ТаблицаРезультатРаспределения();
	ПартииПрочихРасходовБезКорректировок  = ТаблицаРезультатРаспределения();
	
	ТаблицыРаспределения = Новый Массив;
	ТаблицыРаспределения.Добавить(ПартииПрочихРасходовУсловнаяПродажа);
	ТаблицыРаспределения.Добавить(ПартииПрочихРасходовВосстановлениеНДС);
	ТаблицыРаспределения.Добавить(ПартииПрочихРасходовБезКорректировок);
	
	
	Для каждого СтрокаПрочихРасходов Из ПартииПрочихРасходов Цикл
		
		// Для внеоборотных активов добавляем строку при несовпадении налогового назначения партии 
		// и налогового назначения явно определенного при принятии к учету
		ВидДеятельностиНДСПартии = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПрочихРасходов.НалоговоеНазначениеПартии, "ВидДеятельностиНДС");
		ВидДеятельностиНДСНовый  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПрочихРасходов.НовоеНалоговоеНазначение,  "ВидДеятельностиНДС");
		
		Если (ВидДеятельностиНДСПартии = Перечисления.ВидыДеятельностиНДС.Необлагаемая И ВидДеятельностиНДСНовый = Перечисления.ВидыДеятельностиНДС.Облагаемая) Тогда
			НоваяСтрока = ПартииПрочихРасходовВосстановлениеНДС.Добавить();
		ИначеЕсли (ВидДеятельностиНДСПартии = Перечисления.ВидыДеятельностиНДС.Облагаемая И ВидДеятельностиНДСНовый = Перечисления.ВидыДеятельностиНДС.Необлагаемая) 
			ИЛИ (ВидДеятельностиНДСПартии = Перечисления.ВидыДеятельностиНДС.ПропорциональноОблагаемая И СтрокаПрочихРасходов.НовоеНалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность) 
			Тогда
			НоваяСтрока = ПартииПрочихРасходовУсловнаяПродажа.Добавить();
		Иначе	
			НоваяСтрока = ПартииПрочихРасходовБезКорректировок.Добавить();
		КонецЕсли; 
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПрочихРасходов);
		НоваяСтрока.НалоговоеНазначение       = СтрокаПрочихРасходов.НовоеНалоговоеНазначение; 
		
	КонецЦикла;
	
	
	
	Результат = Новый Структура;
	Результат.Вставить("ПартииПрочихРасходовВосстановлениеНДС",    ПартииПрочихРасходовВосстановлениеНДС);
	Результат.Вставить("ПартииПрочихРасходовУсловнаяПродажа",      ПартииПрочихРасходовУсловнаяПродажа);
	Результат.Вставить("ПартииПрочихРасходовБезКорректировок",     ПартииПрочихРасходовБезКорректировок);
	
	Возврат Результат;
	
КонецФункции


Функция ТаблицаРезультатРаспределения()
	
	НаборЗаписей = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей();
	Результат = НаборЗаписей.ВыгрузитьКолонки();
	
	Результат.Колонки.Удалить("Активность");
	
	Результат.Колонки.Добавить("ДатаПоступленияРасходов", Новый ОписаниеТипов("Дата"));
	
	Результат.Колонки.Добавить("ВнеоборотныйАктив",                Новый ОписаниеТипов("Строка"));
	
	Результат.Колонки.Добавить("НалоговоеНазначениеПартии",        Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
	Результат.Колонки.Добавить("Контрагент",                       Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Результат.Колонки.Добавить("СтавкаНДС",                        Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	Результат.Колонки.Добавить("ВидЦенности",                      Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЦенностей"));
	
	Возврат Результат;
	
КонецФункции


Функция ТаблицаНДСУсловнаяПродажа(РезультатРаспределения, Реквизиты)
	
	НДСУсловнаяПродажа = РегистрыНакопления.КорректировкиНДСПартий.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСУсловнаяПродажа.Колонки.Удалить("Активность");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для Каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаУсловнаяПродажа Из ТаблицаРаспределения.Значение Цикл
			
			НоваяСтрока = НДСУсловнаяПродажа.Добавить();
			
			НоваяСтрока.Период             			= Реквизиты.Период;
			
			НоваяСтрока.Организация        			= Реквизиты.Организация;
			НоваяСтрока.АналитикаУчетаНоменклатуры 	= СтрокаУсловнаяПродажа.СтатьяРасходов;
			НоваяСтрока.СтавкаНДС        			= СтрокаУсловнаяПродажа.СтавкаНДС;
			НоваяСтрока.ДокументПоступления 		= СтрокаУсловнаяПродажа.ДокументПоступленияРасходов;
			НоваяСтрока.НалоговоеНазначение         = СтрокаУсловнаяПродажа.НалоговоеНазначениеПартии;
			НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаУсловнаяПродажа.НалоговоеНазначение;
			
			НоваяСтрока.Количество     				= 0;
			НоваяСтрока.СтоимостьРегл  				= СтрокаУсловнаяПродажа.СтоимостьРегл;
			НоваяСтрока.НДСРегл        				= СтрокаУсловнаяПродажа.НДСРегл;
			НоваяСтрока.НДСРеглПоФакту 				= 0;
			
			НоваяСтрока.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ПредполагаемаяУсловнаяПродажа;
			НоваяСтрока.НДСРеглПодтвержденный		= 0;
			НоваяСтрока.НДСРеглПродукции			= 0;
			НоваяСтрока.РазделКорректировки         = Перечисления.РазделыКорректировокНДСПартий.КапитальныеИнвестиции;
			НоваяСтрока.СтатьяРасходовСписания      = Неопределено;
			НоваяСтрока.АналитикаРасходов           = СтрокаУсловнаяПродажа.АналитикаРасходов;
			НоваяСтрока.ГруппаПродукции             = Неопределено;
			НоваяСтрока.ВидЗапасов                  = Неопределено;
			НоваяСтрока.КорВидЗапасов               = Неопределено;
			НоваяСтрока.АналитикаУчетаПродукции     = Неопределено;
			НоваяСтрока.ПодразделениеПолучатель     = Неопределено;
			НоваяСтрока.СтатьяРасходовПолучатель    = Неопределено;
			НоваяСтрока.АналитикаРасходовПолучатель	= Неопределено;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НДСУсловнаяПродажа;
	
КонецФункции // ТаблицаНДСУсловнаяПродажа

Функция ТаблицаНДСВосстановлениеНДС(РезультатРаспределения, Реквизиты)
	
	НДСВосстановлениеНДС = РегистрыНакопления.КорректировкиНДСПартий.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НДСВосстановлениеНДС.Колонки.Удалить("Активность");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовВосстановлениеНДС");
	
	Для Каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаВосстановлениеНДС Из ТаблицаРаспределения.Значение Цикл
			
			НоваяСтрока = НДСВосстановлениеНДС.Добавить();
			
			НоваяСтрока.Период             			= Реквизиты.Период;
			
			НоваяСтрока.Организация        			= Реквизиты.Организация;
			НоваяСтрока.АналитикаУчетаНоменклатуры 	= СтрокаВосстановлениеНДС.СтатьяРасходов;
			НоваяСтрока.СтавкаНДС        			= СтрокаВосстановлениеНДС.СтавкаНДС;
			НоваяСтрока.ДокументПоступления 		= СтрокаВосстановлениеНДС.ДокументПоступленияРасходов;
			НоваяСтрока.НалоговоеНазначение         = СтрокаВосстановлениеНДС.НалоговоеНазначениеПартии;
			НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаВосстановлениеНДС.НалоговоеНазначение;
			
			НоваяСтрока.Количество     				= 0;
			НоваяСтрока.СтоимостьРегл  				= СтрокаВосстановлениеНДС.СтоимостьРегл;
			НоваяСтрока.НДСРегл        				= 0;
			НоваяСтрока.НДСРеглПоФакту 				= СтрокаВосстановлениеНДС.НДСРегл;
			
			НоваяСтрока.ХозяйственнаяОперация       = Перечисления.ХозяйственныеОперации.ПредполагаемоеВосстановлениеНДС;
			НоваяСтрока.НДСРеглПодтвержденный		= 0;
			НоваяСтрока.НДСРеглПродукции			= 0;
			НоваяСтрока.РазделКорректировки         = Перечисления.РазделыКорректировокНДСПартий.КапитальныеИнвестиции;
			НоваяСтрока.СтатьяРасходовСписания      = Неопределено;
			НоваяСтрока.АналитикаРасходов           = СтрокаВосстановлениеНДС.АналитикаРасходов;
			НоваяСтрока.ГруппаПродукции             = Неопределено;
			НоваяСтрока.ВидЗапасов                  = Неопределено;
			НоваяСтрока.КорВидЗапасов               = Неопределено;
			НоваяСтрока.АналитикаУчетаПродукции     = Неопределено;
			НоваяСтрока.ПодразделениеПолучатель     = Неопределено;
			НоваяСтрока.СтатьяРасходовПолучатель    = Неопределено;
			НоваяСтрока.АналитикаРасходовПолучатель	= Неопределено;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НДСВосстановлениеНДС;
	
КонецФункции // ТаблицаНДСВосстановлениеНДС

Функция ТаблицаКорректировкиНДСПартий(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС)
	
	КорректировкиНДСПартий = РегистрыНакопления.КорректировкиНДСПартий.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КорректировкиНДСПартий.Колонки.Удалить("Активность");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаНДСУсловнаяПродажа,   КорректировкиНДСПартий);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаНДСВосстановлениеНДС, КорректировкиНДСПартий);
	
	Возврат КорректировкиНДСПартий;
	
КонецФункции // ТаблицаКорректировкиНДСПартий

Функция ТаблицаДвиженияНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС)
	
	ТаблицаДвиженияНДСУсловныеПродажи = РегистрыНакопления.НДСУсловныеПродажи.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаДвиженияНДСУсловныеПродажи.Колонки.Удалить("Активность");
	
	Для Каждого СтрокаУсловнаяПродажа Из ТаблицаНДСУсловнаяПродажа Цикл
		
		НоваяСтрока = ТаблицаДвиженияНДСУсловныеПродажи.Добавить();
		
		НоваяСтрока.Период             			= СтрокаУсловнаяПродажа.Период;
		
		НоваяСтрока.Организация        			= СтрокаУсловнаяПродажа.Организация;
		НоваяСтрока.ВидУсловнойПродажи        	= Перечисления.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажа;
		
		Если ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры") Тогда
			НоваяСтрока.Номенклатура 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры, "Номенклатура"); 
			НоваяСтрока.Характеристика 	            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры, "Характеристика"); 
		ИначеЕсли ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда	
			НоваяСтрока.Номенклатура 				= СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			НоваяСтрока.Номенклатура 				= Неопределено; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли; 
		НоваяСтрока.СтавкаНДС        			= СтрокаУсловнаяПродажа.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение         = СтрокаУсловнаяПродажа.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаУсловнаяПродажа.НалоговоеНазначениеПоФакту;
		
		НоваяСтрока.Количество     				= СтрокаУсловнаяПродажа.Количество;
		НоваяСтрока.СтоимостьРегл  				= СтрокаУсловнаяПродажа.СтоимостьРегл;
		НоваяСтрока.НДСРегл        				= СтрокаУсловнаяПродажа.НДСРегл;
		НоваяСтрока.НДСРеглРучныеКорректировки 	= 0;
		
	КонецЦикла;
	
	Для Каждого СтрокаВосстановлениеНДС Из ТаблицаНДСВосстановлениеНДС Цикл
		
		НоваяСтрока = ТаблицаДвиженияНДСУсловныеПродажи.Добавить();
		
		НоваяСтрока.Период             			= СтрокаВосстановлениеНДС.Период;
		
		НоваяСтрока.Организация        			= СтрокаВосстановлениеНДС.Организация;
		НоваяСтрока.ВидУсловнойПродажи        	= Перечисления.ВидУсловнойПродажи.ПредполагаемоеВосстановлениеНДС;
		
		Если ТипЗнч(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры) = Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры") Тогда
			НоваяСтрока.Номенклатура 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры, "Номенклатура"); 
			НоваяСтрока.Характеристика 	            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры, "Характеристика"); 
		ИначеЕсли ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда	
			НоваяСтрока.Номенклатура 				= СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			НоваяСтрока.Номенклатура 				= Неопределено; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли; 
		
		НоваяСтрока.СтавкаНДС        			= СтрокаВосстановлениеНДС.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение         = СтрокаВосстановлениеНДС.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаВосстановлениеНДС.НалоговоеНазначениеПоФакту;
		
		НоваяСтрока.Количество     				= СтрокаВосстановлениеНДС.Количество;
		НоваяСтрока.СтоимостьРегл  				= СтрокаВосстановлениеНДС.СтоимостьРегл;
		НоваяСтрока.НДСРегл        				= СтрокаВосстановлениеНДС.НДСРеглПоФакту;
		НоваяСтрока.НДСРеглРучныеКорректировки 	= 0;
		
	КонецЦикла;
		
	Возврат ТаблицаДвиженияНДСУсловныеПродажи;
	
КонецФункции // ТаблицаДвиженияНДСУсловныеПродажи


Функция ТаблицаПартииПрочихРасходов(РезультатРаспределения, Реквизиты)
	
	ПартииПрочихРасходов = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПартииПрочихРасходов.Колонки.Удалить("Активность");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРаспределения.Значение, ПартииПрочихРасходов);
	КонецЦикла;
	
	ПартииПрочихРасходов.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	ПартииПрочихРасходов.ЗаполнитьЗначения(Реквизиты.Период,             "Период");
	
	Возврат ПартииПрочихРасходов;
	
КонецФункции


//++ НЕ УТ

Функция ТаблицаПрочиеРасходы(РезультатРаспределения, Реквизиты)
	
	ПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПрочиеРасходы.Колонки.Удалить("Активность");
	
	ПрочиеРасходыДобавитьСтрокиВключениеВСтоимость(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовУсловнаяПродажа,  Реквизиты);
	
	ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, РезультатРаспределения.ПартииПрочихРасходовВосстановлениеНДС,  Реквизиты);
	
	Возврат ПрочиеРасходы;
	
КонецФункции

Процедура ПрочиеРасходыДобавитьСтрокиВключениеВСтоимость(ПрочиеРасходы, ТаблицаИсточник, Реквизиты)
	
	Для каждого Строка Из ТаблицаИсточник Цикл
		
		Если Не ПустаяСтрока(Строка.ВнеоборотныйАктив) Тогда 
		  	// Внеоборотные активы хранят данные в проводках
		  	Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.СтатьяРасходов) Тогда
			// Это не расходы
			Продолжить;
		КонецЕсли;
		
		
		НоваяСтрока = ПрочиеРасходы.Добавить();
		НоваяСтрока.Период					= Реквизиты.Период;
		НоваяСтрока.Организация				= Реквизиты.Организация;
		НоваяСтрока.Подразделение			= Строка.Подразделение;
		НоваяСтрока.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций;
		НоваяСтрока.СтатьяРасходов		= Строка.СтатьяРасходов;
		НоваяСтрока.АналитикаРасходов	= Строка.АналитикаРасходов;
		
		НоваяСтрока.СуммаРегл = Строка.НДСРегл;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрочиеРасходыДобавитьСтрокиИсключениеИзСтоимости(ПрочиеРасходы, ТаблицаИсточник, Реквизиты)
	
	Для каждого Строка Из ТаблицаИсточник Цикл
		
		Если Не ПустаяСтрока(Строка.ВнеоборотныйАктив) Тогда 
			// Внеоборотные активы хранят данные в проводках
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.СтатьяРасходов) Тогда
			// Это не расходы
			Продолжить;
		КонецЕсли;
		
		
		НоваяСтрока = ПрочиеРасходы.Добавить();
		НоваяСтрока.Период					= Реквизиты.Период;
		НоваяСтрока.Организация				= Реквизиты.Организация;
		НоваяСтрока.Подразделение			= Строка.Подразделение;
		НоваяСтрока.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.КорректировкаНалоговогоНазначенияКапитальныхИнвестиций;
		НоваяСтрока.СтатьяРасходов		= Строка.СтатьяРасходов;
		НоваяСтрока.АналитикаРасходов	= Строка.АналитикаРасходов;
		
		НоваяСтрока.СуммаРегл = -Строка.НДСРегл;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет(РезультатРаспределения, ТаблицаПервоначальныеСведенияНМА)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимость = ПервоначальныеСведения.ПервоначальнаяСтоимость + СтрокаНМА.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияНМА.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияНМАНалоговыйУчет(РезультатРаспределения, ТаблицаПервоначальныеСведенияНМА)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "НМА");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиНМА = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаНМА Из СтрокиНМА Цикл
			
			Если СтрокаНМА.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияНМА.Найти(СтрокаНМА.АналитикаРасходов, "НематериальныйАктив");
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ + СтрокаНМА.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияНМА.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(РезультатРаспределения, ТаблицаПервоначальныеСведенияОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.ПервоначальнаяСтоимость = ПервоначальныеСведения.ПервоначальнаяСтоимость + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПервоначальныеСведенияОСНалоговыйУчет(РезультатРаспределения, ТаблицаПервоначальныеСведенияОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПервоначальныеСведенияОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			
			ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ = ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПервоначальныеСведенияОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет(РезультатРаспределения, ТаблицаПараметрыАмортизацииОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПараметрыАмортизацииОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции

Функция ТаблицаПараметрыАмортизацииОСНалоговыйУчет(РезультатРаспределения, ТаблицаПараметрыАмортизацииОС)
	
	ОтборСтрок = Новый Структура("ВнеоборотныйАктив", "ОС");
	
	ТаблицыИсточники = Новый Структура;
	ТаблицыИсточники.Вставить("ПартииПрочихРасходовУсловнаяПродажа");
	
	Для каждого ТаблицаРаспределения Из РезультатРаспределения Цикл
		
		Если НЕ ТаблицыИсточники.Свойство(ТаблицаРаспределения.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиОС = ТаблицаРаспределения.Значение.НайтиСтроки(ОтборСтрок);
		Для каждого СтрокаОС Из СтрокиОС Цикл
			
			Если СтрокаОС.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения = ТаблицаПараметрыАмортизацииОС.Найти(СтрокаОС.АналитикаРасходов, "ОсновноеСредство");
			Если ПервоначальныеСведения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации = ПервоначальныеСведения.СтоимостьДляВычисленияАмортизации + СтрокаОС.НДСРегл;
			ПервоначальныеСведения.ЕстьИзменения = Истина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаПараметрыАмортизацииОС.Скопировать(Новый Структура("ЕстьИзменения", Истина));
	
КонецФункции


//-- НЕ УТ

#КонецОбласти

#Область ИнициализацияИЗаполнение


#КонецОбласти

#Область ОбновлениеИнформационнойБазы


#КонецОбласти

#КонецОбласти

#КонецЕсли