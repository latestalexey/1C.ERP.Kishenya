#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ИзменениеПараметровНМА) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ИзменениеПараметровНМА.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ИзменениеПараметровНМА);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Изменение параметров НМА';uk='Зміна параметрів НМА'"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	УчетОСВызовСервера.ПрочиеРасходы(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ПартииПрочихРасходов(ТекстыЗапроса, Регистры);

	ПервоначальныеСведенияНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияНМАНалоговыйУчет(ТекстыЗапроса, Регистры);
	СчетаБухгалтерскогоУчетаНМА(ТекстыЗапроса, Регистры);
	ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Дата", ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("НематериальныйАктив", ДокументСсылка.НематериальныйАктив);
	Запрос.УстановитьПараметр("Организация", ДокументСсылка.Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка								КАК Регистратор,
	|	ТаблицаДокумента.Дата								КАК Дата,
	|	ТаблицаДокумента.Дата								КАК Период,
	|	ТаблицаДокумента.Организация 						КАК Организация,
	|	ТаблицаДокумента.СрокИспользованияБУ 				  КАК СрокИспользованияБУ,
	|	ТаблицаДокумента.СрокИспользованияБУФлаг 			  КАК СрокИспользованияБУФлаг,
	|	ТаблицаДокумента.СрокИспользованияНУ 				  КАК СрокИспользованияНУ,
	|	ТаблицаДокумента.СрокИспользованияНУФлаг			  КАК СрокИспользованияНУФлаг,
	|	ТаблицаДокумента.ОбъемНаработкиБУ					  КАК ОбъемНаработкиБУ,
	|	ТаблицаДокумента.ОбъемНаработкиБУФлаг				  КАК ОбъемНаработкиБУФлаг,
	|	ТаблицаДокумента.СчетУчета							  КАК СчетУчета,
	|	ТаблицаДокумента.СчетУчетаФлаг						  КАК СчетУчетаФлаг,
	|	ТаблицаДокумента.СпособНачисленияАмортизацииБУ		  КАК СпособНачисленияАмортизацииБУ,
	|	ТаблицаДокумента.СпособНачисленияАмортизацииБУФлаг	  КАК СпособНачисленияАмортизацииБУФлаг,
	|	ТаблицаДокумента.СпособНачисленияАмортизацииНУ		  КАК СпособНачисленияАмортизацииНУ,
	|	ТаблицаДокумента.СпособНачисленияАмортизацииНУФлаг	  КАК СпособНачисленияАмортизацииНУФлаг,
	|	ТаблицаДокумента.ЛиквидационнаяСтоимость			  КАК ЛиквидационнаяСтоимость,
	|	ТаблицаДокумента.ЛиквидационнаяСтоимостьФлаг		  КАК ЛиквидационнаяСтоимостьФлаг,
	|	ТаблицаДокумента.ОтражениеАмортизационныхРасходовФлаг КАК ОтражениеАмортизационныхРасходовФлаг, 
	|	ТаблицаДокумента.НематериальныйАктив				  КАК НематериальныйАктив,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение
	|ИЗ
	|	Документ.ИзменениеПараметровНМА КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				НематериальныйАктив = &НематериальныйАктив
	|					И Организация = &Организация) КАК МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|		ПО ТаблицаДокумента.НематериальныйАктив = МестонахождениеНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";

	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	УчетОСВызовСервера.ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДополнительныеСвойства);
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГраницаКонецМесяца", Новый Граница(КонецМесяца(Реквизиты.Дата), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
	
КонецПроцедуры

Процедура ТаблицаНематериальныхАктивов(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаНематериальныхАктивов";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаНематериальныхАктивов
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНематериальныхАктивов.Ссылка,
	|	ТаблицаНематериальныхАктивов.НомерСтроки,
	|	ТаблицаНематериальныхАктивов.НематериальныйАктив
	|ПОМЕСТИТЬ ТаблицаНематериальныхАктивов
	|ИЗ
	|	Документ.ИзменениеПараметровНМА.НМА КАК ТаблицаНематериальныхАктивов
	|ГДЕ
	|	ТаблицаНематериальныхАктивов.Ссылка = &Ссылка"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры


Процедура СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНематериальныхАктивов.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ИСТИНА КАК СпособОтраженияРасходовЗаданДокументом,
	|	&Ссылка КАК СпособОтраженияРасходов
	|	
	|ИЗ
	|	ТаблицаНематериальныхАктивов КАК ТаблицаНематериальныхАктивов
	|ГДЕ
	|	&ОтражениеАмортизационныхРасходовФлаг"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНематериальныхАктивов.НомерСтроки КАК НомерСтроки,
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНематериальныхАктивов.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию,
	|	ВЫБОР КОГДА &СпособНачисленияАмортизацииБУФлаг
	|		ТОГДА &СпособНачисленияАмортизацииБУ
	|		ИНАЧЕ ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации
	|	КОНЕЦ КАК СпособНачисленияАмортизации,
	|	ВЫБОР КОГДА &СрокИспользованияБУФлаг
	|		ТОГДА &СрокИспользованияБУ
	|		ИНАЧЕ ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР КОГДА &ОбъемНаработкиБУФлаг
	|		ТОГДА &ОбъемНаработкиБУ
	|		ИНАЧЕ ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации
	|	КОНЕЦ КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ВЫБОР КОГДА &ЛиквидационнаяСтоимостьФлаг
	|		ТОГДА &ЛиквидационнаяСтоимость
	|		ИНАЧЕ ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ЛиквидационнаяСтоимость
	|	КОНЕЦ КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	ТаблицаНематериальныхАктивов КАК ТаблицаНематериальныхАктивов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|				И Регистратор <>&Ссылка
	|				И НематериальныйАктив В 
	|					(ВЫБРАТЬ 
	|						Т.НематериальныйАктив 
	|							ИЗ ТаблицаНематериальныхАктивов КАК Т )) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|	ПО ТаблицаНематериальныхАктивов.НематериальныйАктив = ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|
	|  ГДЕ
	|
	|	&СрокИспользованияБУФлаг
	|		ИЛИ &СпособНачисленияАмортизацииБУФлаг
	|		ИЛИ &ОбъемНаработкиБУФлаг
	|		ИЛИ &ЛиквидационнаяСтоимостьФлаг
	|	"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияНМАНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМАНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНематериальныхАктивов.НомерСтроки КАК НомерСтроки,
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНематериальныхАктивов.НематериальныйАктив КАК НематериальныйАктив,
	|
	|		ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НалоговаяГруппаОС       КАК НалоговаяГруппаОС,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ	КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НачислятьАмортизацию   		КАК НачислятьАмортизацию,
	|	ВЫБОР КОГДА &СрокИспользованияНУФлаг
	|		ТОГДА &СрокИспользованияНУ
	|		ИНАЧЕ ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СрокПолезногоИспользования
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР КОГДА &СпособНачисленияАмортизацииНУФлаг
	|		ТОГДА &СпособНачисленияАмортизацииНУ
	|		ИНАЧЕ ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.СпособНачисленияАмортизацииНУ
	|	КОНЕЦ КАК СпособНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НалоговоеНазначение КАК НалоговоеНазначение
	|	
	|ИЗ
	|	ТаблицаНематериальныхАктивов КАК ТаблицаНематериальныхАктивов
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|    РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|			И Регистратор <>&Ссылка
	|				И НематериальныйАктив В 
	|					(ВЫБРАТЬ 
	|						Т.НематериальныйАктив 
	|							ИЗ ТаблицаНематериальныхАктивов КАК Т )) КАК ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних
	|							
	|ПО ТаблицаНематериальныхАктивов.НематериальныйАктив = ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив
	| 
	|ГДЕ
	|	&СрокИспользованияНУФлаг
	|		ИЛИ &СпособНачисленияАмортизацииНУФлаг
	|"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СчетаБухгалтерскогоУчетаНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СчетаБухгалтерскогоУчетаНМА";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СчетаБухгалтерскогоУчетаНМА
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНематериальныхАктивов.НомерСтроки КАК НомерСтроки,
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНематериальныхАктивов.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	ВЫБОР КОГДА &СчетУчетаФлаг
	|		ТОГДА &СчетУчета
	|		ИНАЧЕ СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета
	|	КОНЕЦ КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчетаДооценокНМА КАК СчетУчетаДооценокНМА
	|	
	|ИЗ
	|	ТаблицаНематериальныхАктивов КАК ТаблицаНематериальныхАктивов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|				И Регистратор <>&Ссылка
	|				И НематериальныйАктив В 
	|					(ВЫБРАТЬ 
	|						Т.НематериальныйАктив 
	|							ИЗ ТаблицаНематериальныхАктивов КАК Т )) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|	ПО ТаблицаНематериальныхАктивов.НематериальныйАктив = СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	| 
	|	ГДЕ &СчетУчетаФлаг
	|
	|	"+";";

	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры





Функция ВременнаяТаблицаДанныеДокументаУКР()
	
	Возврат
	"ВЫБРАТЬ
	|	ИзменениеПараметровНМА.Ссылка КАК Ссылка,
	|	ИзменениеПараметровНМА.Дата КАК Дата,
	|	ИзменениеПараметровНМА.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ИзменениеПараметровНМА.НематериальныйАктив КАК НематериальныйАктив
	|	
	|ПОМЕСТИТЬ втДанныеИзменениеПараметровНМА
	|ИЗ
	|	Документ.ИзменениеПараметровНМА КАК ИзменениеПараметровНМА
	|ГДЕ
	|	ИзменениеПараметровНМА.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеИзменениеПараметровНМА.Ссылка,
	|	втДанныеИзменениеПараметровНМА.Дата,
	|	втДанныеИзменениеПараметровНМА.Организация,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение,
	|	втДанныеИзменениеПараметровНМА.НаправлениеДеятельности,
	|	втДанныеИзменениеПараметровНМА.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется) КАК ВариантПримененияЦелевогоФинансирования,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НалоговоеНазначение
	|ПОМЕСТИТЬ втДанныеДокумента
	|ИЗ
	|	втДанныеИзменениеПараметровНМА КАК втДанныеИзменениеПараметровНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				(НематериальныйАктив, Организация) В
	|					(ВЫБРАТЬ
	|						Т.НематериальныйАктив,
	|						Т.Организация
	|					ИЗ
	|						втДанныеИзменениеПараметровНМА КАК Т)) КАК МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|		ПО втДанныеИзменениеПараметровНМА.НематериальныйАктив = МестонахождениеНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Дата,
	|				(НематериальныйАктив, Организация) В
	|					(ВЫБРАТЬ
	|						Т.НематериальныйАктив,
	|						Т.Организация
	|					ИЗ
	|						втДанныеИзменениеПараметровНМА КАК Т)) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|		ПО втДанныеИзменениеПараметровНМА.НематериальныйАктив = СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|				&Дата,
	|				(НематериальныйАктив, Организация) В
	|					(ВЫБРАТЬ
	|						Т.НематериальныйАктив,
	|						Т.Организация
	|					ИЗ
	|						втДанныеИзменениеПараметровНМА КАК Т)) КАК ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних
	|		ПО втДанныеИзменениеПараметровНМА.НематериальныйАктив = ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив";

КонецФункции

Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВРеглУчете
	|" +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	
	|	&Организация КАК Организация,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
 	Разделитель = Символы.ПС + ";" + Символы.ПС;
	
		Возврат ВременнаяТаблицаДанныеДокументаУКР() + Разделитель
			+ УчетНМА.ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР("ИзменениеПараметровНМА")
			+ УчетНМА.ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетамУКР()
			;
КонецФункции

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
	Разделитель = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	Возврат УчетНМА.ТекстОтраженияВРеглУчетеНачисленнойАмортизацииУКР()	
	+ Разделитель + ПеремещениеСчетУчета()
	;
КонецФункции


Функция ПеремещениеСчетУчета()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Перемещение НМА (Дт СчетУчета:: Кт СчетУчета)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьБУ, 0) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	втМестонахожденияНМА.Подразделение КАК ПодразделениеДт,
	|	Операция.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|   ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,	
	|	
	|	Операция.СчетУчета КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьНУ, 0) КАК СуммаНУДт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьПР, 0) КАК СуммаПРДт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьВР, 0) КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	втМестонахожденияНМА.Подразделение КАК ПодразделениеКт,
	|	Операция.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,	
	|	
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьНУ, 0) КАК СуммаНУКт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьПР, 0) КАК СуммаПРКт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьВР, 0) КАК СуммаВРКт,
	|	
	|	""Перемещение НМА"" КАК Содержание
	|ИЗ
	|	Документ.ИзменениеПараметровНМА КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровНМА.НМА КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|		ПО Операция.НематериальныйАктив = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияНМА КАК втМестонахожденияНМА
	|		ПО Операция.НематериальныйАктив = втМестонахожденияНМА.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоСчетам КАК втОстаткиПоСчетам
	|		ПО Операция.НематериальныйАктив = втОстаткиПоСчетам.ОбъектУчета
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.СчетУчетаФлаг
	|	И Операция.СчетУчета <> СчетаОтражения.СчетУчета
	|";
	
КонецФункции

 

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет);
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли