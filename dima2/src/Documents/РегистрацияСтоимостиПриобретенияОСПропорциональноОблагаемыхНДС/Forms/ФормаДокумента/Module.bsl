#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
    
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Объект.Дата = Параметры.ПериодРегистрации;
    КонецЕсли;
    
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
    
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
    
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	ПриЧтенииСозданииНаСервере();

	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
    
    ПриЧтенииСозданииНаСервере();
    
    МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.ГруппаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
    
    ПрочитатьКоэффициентПропорциональногоНДС();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоГода(Объект.Дата) = НачалоГода(ТекущаяДатаДокумента) Тогда
		// Изменение даты документа не влияет на поведение документа - у рс КоэффициентыПропорциональногоОтнесенияНДСНаКредит периодичность Год
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
    КонецЕсли;
    
    ПрочитатьКоэффициентПропорциональногоНДС();
	// Запомним новую дату документа
	ТекущаяДатаДокумента = Объект.Дата;

КонецПроцедуры

&НаКлиенте
Процедура СпецРежимНалогообложенияПриИзменении(Элемент)
	
	ЭлементСпискаЗначений = Элемент.СписокВыбора.НайтиПоЗначению(Объект.СпецРежимНалогообложения);
	РасшифровкаСпецРежимНалогообложения = ?(ЭлементСпискаЗначений = Неопределено, "", ЭлементСпискаЗначений.Представление);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОС

&НаКлиенте
Процедура ОСБазаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	ДанныеСтроки = ДанныеСтроки(ТекущиеДанные);
	
	перемКоэффициентПропорциональногоНДС = ПолучитьКоэффициентПропорциональногоНДС(ТекущиеДанные.ДатаНачалаИспользования,Объект.Дата);
	РассчитатьСуммуНДСиПропорционально(ДанныеСтроки, перемКоэффициентПропорциональногоНДС);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОССуммаНДСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	ДанныеСтроки = ДанныеСтроки(ТекущиеДанные);
	
	перемКоэффициентПропорциональногоНДС = ПолучитьКоэффициентПропорциональногоНДС(ТекущиеДанные.ДатаНачалаИспользования,Объект.Дата);
	РассчитатьСуммуНДСиПропорционально(ДанныеСтроки, перемКоэффициентПропорциональногоНДС);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОСНеоборотныйАктивПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
    ЗаполнитьСлужебныеРеквизитыСтрокиТабличнойЧастиОС(ТекущиеДанные);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоПриходу(Команда)

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстПредупреждения = НСтр("ru='Заполнить документ можно только после его записи';uk='Заповнити документ можна тільки після його запису'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;	

	Если Объект.ОС.Количество() > 0 Тогда
		ТекстВопроса	= НСтр("ru='Перед заполнением табличная часть будет очищена. Заполнить?';uk='Перед заповненням таблична частина буде очищена. Заповнити?'");
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьПоПриходуЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Иначе
		ЗаполнитьПоПриходуЗавершение();
	КонецЕсли;
	
КонецПроцедуры



// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
    
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСПартияТМЦВЭксплуатации.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОС.НеоборотныйАктив");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
    
    //

    Элемент = УсловноеОформление.Элементы.Добавить();

    ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
    ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОСПартияТМЦВЭксплуатации.Имя);

    ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОС.ТипНеоборотногоАктива");
    ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
    ОтборЭлемента.ПравоеЗначение = "Номенклатура";
    
    Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры    
    
&НаКлиенте
Процедура ВопросЗаполнитьПоПриходуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	
    	Объект.ОС.Очистить();
		
		ЗаполнитьПоПриходуЗавершение();
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПриходуЗавершение()
    
    ДатаНач = НачалоГода(Объект.Дата);
    ДатаКон = КонецМесяца(Объект.Дата);
    
	ПараметрыВыбораПериода = Новый Структура("НачалоПериода,КонецПериода", НачалоГода(Объект.Дата), КонецКвартала(Объект.Дата));
    ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
    ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбораПериода, Элементы.ЗаполнитьПоПриходу, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Сообщить(НСтр("ru='Заполнение не произведено!';uk='Заповнення не виконано'"));
		Возврат;
	КонецЕсли;

	ЗаполнитьПоПриходуНаСервере(РезультатВыбора.НачалоПериода, РезультатВыбора.КонецПериода);
	
	Если Объект.ОС.Количество() > 0 Тогда
		ТекстПредупреждения = НСтр("ru='Режим налогообложения НДС, дату и суммы в табличной части необходимо проверить и при необходимости откорректировать вручную!';uk='Режим оподаткування ПДВ, дату та суми у табличній частині потрібно перевірити та при необхідності відкоригувати вручну!'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	Иначе	
		ТекстПредупреждения = НСтр("ru='Нет данных для заполнения!';uk='Немає даних для заповнення!'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПриходуНаСервере(ДатаНач, ДатаКон)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ втДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния >= &ДатаНач
	|	И СостоянияОСОрганизаций.ДатаСостояния <= &ДатаКон
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	втДатыПоследнихСостояний.ДатаСостояния КАК ДатаСостояния
	|ПОМЕСТИТЬ втНеСнятыеСУчетаОС
	|ИЗ
	|	втДатыПоследнихСостояний КАК втДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО втДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И втДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И втДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыеНазначенияОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втПропорциональныеОС
	|ИЗ
	|	РегистрСведений.НалоговыеНазначенияОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втНеСнятыеСУчетаОС.ОсновноеСредство
	|					ИЗ
	|						втНеСнятыеСУчетаОС)
	|				И НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально)) КАК НалоговыеНазначенияОССрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК Стоимость
	|ПОМЕСТИТЬ втСтоимостьПропорциональныхОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					втПропорциональныеОС.ОсновноеСредство
	|				ИЗ
	|					втПропорциональныеОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияНМАОрганизаций.Период) КАК ДатаСостояния
	|ПОМЕСТИТЬ втДатыПоследнихСостоянийНМА
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|ГДЕ
	|	СостоянияНМАОрганизаций.Период >= &ДатаНач
	|	И СостоянияНМАОрганизаций.Период <= &ДатаКон
	|	И СостоянияНМАОрганизаций.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияНМАОрганизаций.НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
	|	втДатыПоследнихСостоянийНМА.ДатаСостояния
	|ПОМЕСТИТЬ втНеСнятыеСУчетаНМА
	|ИЗ
	|	втДатыПоследнихСостоянийНМА КАК втДатыПоследнихСостоянийНМА
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|		ПО втДатыПоследнихСостоянийНМА.НематериальныйАктив = СостоянияНМАОрганизаций.НематериальныйАктив
	|			И втДатыПоследнихСостоянийНМА.Организация = СостоянияНМАОрганизаций.Организация
	|			И втДатыПоследнихСостоянийНМА.ДатаСостояния = СостоянияНМАОрганизаций.Период
	|ГДЕ
	|	СостоянияНМАОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ втПропрциональныеНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						втНеСнятыеСУчетаНМА.НематериальныйАктив
	|					ИЗ
	|						втНеСнятыеСУчетаНМА)
	|				И НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально)) КАК ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК Стоимость
	|ПОМЕСТИТЬ втСтоимостьПропорциональныхНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					втПропрциональныеНМА.НематериальныйАктив
	|				ИЗ
	|					втПропрциональныеНМА)) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТМЦВЭксплуатации.Ссылка КАК ПартияТМЦ
	|ПОМЕСТИТЬ втПартииПропорциональныхТМЦ
	|ИЗ
	|	Справочник.ПартииТМЦВЭксплуатации КАК ПартииТМЦВЭксплуатации
	|ГДЕ
	|	ПартииТМЦВЭксплуатации.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально)
	|	И ПартииТМЦВЭксплуатации.КатегорияЭксплуатации.ВидТМЦ В (ЗНАЧЕНИЕ(Перечисление.ВидыТМЦВЭксплуатации.МалоценныйНеоборотныйАктив), ЗНАЧЕНИЕ(Перечисление.ВидыТМЦВЭксплуатации.БиблиотечныеФонды))
	|	И ПартииТМЦВЭксплуатации.Дата >= &ДатаНач
	|	И ПартииТМЦВЭксплуатации.Дата <= &ДатаКон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПартияТМЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТМЦВЭксплуатацииОбороты.Номенклатура КАК Номенклатура,
	|	ТМЦВЭксплуатацииОбороты.Партия КАК Партия
	|ПОМЕСТИТЬ втПропорциональныеТМЦ
	|ИЗ
	|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
	|			&ДатаНач,
	|			&Период,
	|			,
	|			Организация = &Организация
	|				И НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально)
	|				И Партия В
	|					(ВЫБРАТЬ
	|						втПартииПропорциональныхТМЦ.ПартияТМЦ
	|					ИЗ
	|						втПартииПропорциональныхТМЦ КАК втПартииПропорциональныхТМЦ)) КАК ТМЦВЭксплуатацииОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ПартииТМЦВЭксплуатации) КАК ПартияТМЦ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0) КАК Стоимость
	|ПОМЕСТИТЬ втСтоимостьПропорциональныхТМЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МалоценныеНеоборотныеМатериальныеАктивыКоличественно), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.БиблиотечныеФондыКоличественно)),
	|			&ВидыСубконтоТМЦВЭксплуатации,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						втПропорциональныеТМЦ.Номенклатура
	|					ИЗ
	|						втПропорциональныеТМЦ)
	|				И Субконто2 В
	|					(ВЫБРАТЬ
	|						втПропорциональныеТМЦ.Партия
	|					ИЗ
	|						втПропорциональныеТМЦ)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостьПропорциональныхОС.ОсновноеСредство КАК НеоборотныйАктив,
	|	втСтоимостьПропорциональныхОС.Стоимость КАК Стоимость,
	|	НЕОПРЕДЕЛЕНО КАК ПартияТМЦВЭксплуатации,
	|	втНеСнятыеСУчетаОС.ДатаСостояния КАК ДатаНачалаИспользования
	|ИЗ
	|	втСтоимостьПропорциональныхОС КАК втСтоимостьПропорциональныхОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНеСнятыеСУчетаОС КАК втНеСнятыеСУчетаОС
	|		ПО втСтоимостьПропорциональныхОС.ОсновноеСредство = втНеСнятыеСУчетаОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтоимостьПропорциональныхНМА.НематериальныйАктив,
	|	втСтоимостьПропорциональныхНМА.Стоимость,
	|	НЕОПРЕДЕЛЕНО,
	|	втНеСнятыеСУчетаНМА.ДатаСостояния
	|ИЗ
	|	втСтоимостьПропорциональныхНМА КАК втСтоимостьПропорциональныхНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНеСнятыеСУчетаНМА КАК втНеСнятыеСУчетаНМА
	|		ПО втСтоимостьПропорциональныхНМА.НематериальныйАктив = втНеСнятыеСУчетаНМА.НематериальныйАктив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтоимостьПропорциональныхТМЦ.Номенклатура,
	|	втСтоимостьПропорциональныхТМЦ.Стоимость,
	|	втСтоимостьПропорциональныхТМЦ.ПартияТМЦ,
	|	втСтоимостьПропорциональныхТМЦ.ПартияТМЦ.Дата
	|ИЗ
	|	втСтоимостьПропорциональныхТМЦ КАК втСтоимостьПропорциональныхТМЦ";
	
	ВидыСубконтоТМЦВЭксплуатации = Новый Массив;
	ВидыСубконтоТМЦВЭксплуатации.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоТМЦВЭксплуатации.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	
	Запрос.УстановитьПараметр("ДатаНач"						, ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон"						, ДатаКон);	
	Запрос.УстановитьПараметр("Период"						, Новый Граница(КонецДня(Объект.Дата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация"					, Объект.Организация);
	Запрос.УстановитьПараметр("ВидыСубконтоТМЦВЭксплуатации", ВидыСубконтоТМЦВЭксплуатации);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	ЗначениеСтавкиНДС20 = НДСОбщегоНазначенияПовтИсп.ПолучитьСтавкуНДСЧислом(Перечисления.СтавкиНДС.НДС20);
	
	ДатаПолученногоКоэффициентПропорциональногоНДС = '00010101';
	// теперь проведем расчет базы, суммы НДС и налогового кредита. 
	// На текущий момент в колонке СуммаОборот находится стоимость ОС, которая включает частично НДС, не относящийся на кредит.
	Пока Выборка.Следующий() Цикл
		
		ТекущаяСтрока = Объект.ОС.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		
		//У РС КоэффициентыПропорциональногоОтнесенияНДСНаКредит периодичность Год
		Если НЕ ТипЗнч(Выборка.ДатаНачалаИспользования) = Тип("Дата") 
				ИЛИ Выборка.ДатаНачалаИспользования = '00010101' Тогда
			
			перемКоэффициентПропорциональногоНДС = КоэффициентПропорциональногоНДС;
			
		ИначеЕсли Год(Выборка.ДатаНачалаИспользования) = Год(Объект.Дата) Тогда
			
			перемКоэффициентПропорциональногоНДС = КоэффициентПропорциональногоНДС;
			
		ИначеЕсли Год(Выборка.ДатаНачалаИспользования) = Год(ДатаПолученногоКоэффициентПропорциональногоНДС) Тогда
			
			перемКоэффициентПропорциональногоНДС = перемКоэффициентПропорциональногоНДС;
			
		ИначеЕсли Год(Выборка.ДатаНачалаИспользования) <> Год(ДатаПолученногоКоэффициентПропорциональногоНДС) Тогда
			
			перемКоэффициентПропорциональногоНДС 		   = НДСОбщегоНазначенияПовтИсп.ПолучитьКоэффициентПропорциональногоНДСКредит(Объект.Организация, Выборка.ДатаНачалаИспользования);
			ДатаПолученногоКоэффициентПропорциональногоНДС = Выборка.ДатаНачалаИспользования;
			
		КонецЕсли;
		
		ТекущаяСтрока.БазаНДС = Выборка.Стоимость / (1 + ЗначениеСтавкиНДС20 * (1 - перемКоэффициентПропорциональногоНДС));	
		
		ТекущаяСтрока.СуммаНДС = ТекущаяСтрока.БазаНДС * ЗначениеСтавкиНДС20;
		
		ТекущаяСтрока.СуммаНДСПропорциональноКредит = (ТекущаяСтрока.СуммаНДС + ТекущаяСтрока.БазаНДС) - Выборка.Стоимость;
		
    КонецЦикла;
    
    ЗаполнитьСлужебныеРеквизитыТабличнойЧастиОС();
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеСтроки(СтрокаТабличнойЧасти)
	
	ДанныеСтроки = Новый Структура("СуммаНДС, БазаНДС, СуммаНДСПропорциональноКредит");
	
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, СтрокаТабличнойЧасти);
	
	Возврат ДанныеСтроки;
	
КонецФункции

&НаСервере
Процедура РассчитатьСуммуНДСиПропорционально(Строка, КоэффициентПропорциональногоНДС)
    
    Строка.СуммаНДС = Строка.БазаНДС * НДСОбщегоНазначенияПовтИсп.ПолучитьСтавкуНДСЧислом(Перечисления.СтавкиНДС.НДС20);
	
	РассчитатьСуммуНДСПропорционально(Строка, КоэффициентПропорциональногоНДС);

КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуНДСПропорционально(Строка, КоэффициентПропорциональногоНДС)
    
    Строка.СуммаНДСПропорциональноКредит = Строка.СуммаНДС * КоэффициентПропорциональногоНДС;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыСтрокиТабличнойЧастиОС(СтрокаОС)
    
    Если ТипЗнч(СтрокаОС.НеоборотныйАктив) = Тип("СправочникСсылка.Номенклатура") Тогда
        СтрокаОС.ТипНеоборотногоАктива = "Номенклатура";
    Иначе     
        СтрокаОС.ТипНеоборотногоАктива = "НеНоменклатура";
    КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧастиОС()
    
    Для Каждого СтрокаОС Из Объект.ОС Цикл
        ЗаполнитьСлужебныеРеквизитыСтрокиТабличнойЧастиОС(СтрокаОС);
    КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ТекущаяДатаДокумента			= Объект.Дата;
	
	Если Элементы.СпецРежимНалогообложения.СписокВыбора.Количество() = 0 Тогда
		НДСОбщегоНазначенияСервер.ЗаполнитьСписокВыбораСпецРежимаНалогообложения(Элементы.СпецРежимНалогообложения.СписокВыбора);
    КонецЕсли;
    
	ЭлементСпискаЗначений 				= Элементы.СпецРежимНалогообложения.СписокВыбора.НайтиПоЗначению(Объект.СпецРежимНалогообложения);
	РасшифровкаСпецРежимНалогообложения = ?(ЭлементСпискаЗначений = Неопределено, "", ЭлементСпискаЗначений.Представление);
    
    ПрочитатьКоэффициентПропорциональногоНДС();
    
    ЗаполнитьСлужебныеРеквизитыТабличнойЧастиОС();
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьКоэффициентПропорциональногоНДС()
	КоэффициентПропорциональногоНДС = НДСОбщегоНазначенияПовтИсп.ПолучитьКоэффициентПропорциональногоНДСКредит(Объект.Организация, Объект.Дата);
КонецПроцедуры

Функция ПолучитьКоэффициентПропорциональногоНДС(ДатаНачалаИспользования,ДатаРегистрацииСтоимости)

	 перемКоэффициентПропорциональногоНДС = КоэффициентПропорциональногоНДС;
	 
	 Если (НЕ ДатаНачалаИспользования = '00010101')
		 	И (Год(ДатаНачалаИспользования) <> Год(ДатаРегистрацииСтоимости)) Тогда
			
			перемКоэффициентПропорциональногоНДС = НДСОбщегоНазначенияПовтИсп.ПолучитьКоэффициентПропорциональногоНДСКредит(Объект.Организация, ДатаНачалаИспользования);
			
	КонецЕсли;

	Возврат перемКоэффициентПропорциональногоНДС;

КонецФункции 

#КонецОбласти
