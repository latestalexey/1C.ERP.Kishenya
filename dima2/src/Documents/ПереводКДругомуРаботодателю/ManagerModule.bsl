#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Функция ДобавитьКомандыСозданияДокументов(КомандыСозданияДокументов, ДополнительныеПараметры) Экспорт
	
	ЗарплатаКадрыРасширенный.ДобавитьВКоллекциюКомандуСозданияДокументаПоМетаданнымДокумента(
		КомандыСозданияДокументов, Метаданные.Документы.ПереводКДругомуРаботодателю);
	
КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийЗарплатаКадрыРасширенная")  Тогда
		Возврат;
	КонецЕсли;
	
	// Согласование перевода (запрос).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СогласованиеПереводаЗапрос";
	КомандаПечати.Порядок = 10;
	КомандаПечати.Представление = НСтр("ru='Согласование перевода (запрос)';uk='Погодження переведення (запит)'");
	
	// Согласование перевода (ответ).
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СогласованиеПереводаОтвет";
	КомандаПечати.Порядок = 15;
	КомандаПечати.Представление = НСтр("ru='Согласование перевода (ответ)';uk='Погодження переведення (відповідь)'");
	
	// Согласие работника на перевод.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СогласиеРаботника";
	КомандаПечати.Порядок = 20;
	КомандаПечати.Представление = НСтр("ru='Согласие работника на перевод';uk='Згода працівника на переведення'");
	
	// Приказ об увольнении (П-4)
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплаты,ЧтениеДанныхДляНачисленияЗарплаты,ДобавлениеИзменениеКадровогоСостоянияРасширенная,ЧтениеКадровогоСостоянияРасширенная", , Ложь) Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПФ_MXL_UK_П4";
		КомандаПечати.Порядок = 25;
		КомандаПечати.Представление = НСтр("ru='Приказ об увольнении (П-4)';uk='Наказ про звільнення (П-4)'");
		КомандаПечати.ДополнительныеПараметры.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплаты,ЧтениеДанныхДляНачисленияЗарплаты", , Ложь) 
		И ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыВНесколькихОрганизациях") Тогда	
		// Печать записки-расчета при увольнении.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПФ_MXL_РасчетПриУвольнении";
		КомандаПечати.Порядок = 30;
		КомандаПечати.Представление = НСтр("ru='Печать записки-расчета при увольнении';uk='Друк записки-розрахунку при звільненні'");
		КомандаПечати.ДополнительныеПараметры.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
		
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная,ЧтениеДанныхДляНачисленияЗарплатыРасширенная", , Ложь) Тогда
		// Приказ о приеме на работу (П-1).
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПФ_MXL_UK_П1";
		КомандаПечати.Порядок = 40;
		КомандаПечати.Представление = НСтр("ru='Приказ о приеме на работу (П-1)';uk='Наказ про прийом на роботу (П-1)'");
		КомандаПечати.ДополнительныеПараметры.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
		
	КонецЕсли;
	
	// Проверить соответствие согласованных и учетных данных.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОтчетОСоответствииДанныхУчетаДокументу";
	КомандаПечати.Порядок = 110;
	КомандаПечати.Представление = НСтр("ru='Анализ соответствия согласованных и учетных данных';uk='Аналіз відповідності погоджених і облікових даних'");
	КомандаПечати = КомандыПечати.Добавить();
	
	ИдентификаторПФ = "СогласованиеПереводаЗапрос,СогласованиеПереводаОтвет,СогласиеРаботника,";
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная,ЧтениеДанныхДляНачисленияЗарплатыРасширенная", , Ложь) Тогда
		ИдентификаторПФ = ИдентификаторПФ + "ПФ_MXL_UK_П1,";
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплаты,ЧтениеДанныхДляНачисленияЗарплаты,ДобавлениеИзменениеКадровогоСостоянияРасширенная,ЧтениеКадровогоСостоянияРасширенная", , Ложь) Тогда
		ИдентификаторПФ = ИдентификаторПФ + "ПФ_MXL_UK_П4,";
	КонецЕсли;
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплаты,ЧтениеДанныхДляНачисленияЗарплаты", , Ложь) 
		И ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыВНесколькихОрганизациях") Тогда
		ИдентификаторПФ = ИдентификаторПФ + "ПФ_MXL_РасчетПриУвольнении,";
	КонецЕсли;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(ИдентификаторПФ, 1);
	
	КомандаПечати.Идентификатор = ИдентификаторПФ;
	КомандаПечати.Порядок = 100;
	КомандаПечати.Представление = НСтр("ru='Комплект документов для перевода';uk='Комплект документів для переведення'");
	КомандаПечати.ДополнительныеПараметры.Вставить("ТребуетсяЧтениеБезОграничений", Истина);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	СтруктураЗначенийПараметров = Неопределено;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОСоответствииДанныхУчетаДокументу") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОтчетОСоответствииДанныхУчетаДокументу",
			НСтр("ru='Отчет о соответствии согласованных и учетных данных';uk='Звіт про відповідність погоджених і облікових даних'"),
			ТабличныйДокументСоответствиеДанныхУчетаДокументу(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СогласиеРаботника") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СогласиеРаботника",
			НСтр("ru='Согласие работника на перевод к другому работодателю';uk='Згода працівника на переведення до іншого роботодавця'"),
			ТабличныйДокументСогласиеРаботника(УправлениеПечатью.МакетПечатнойФормы("Документ.ПереводКДругомуРаботодателю.ПФ_MXL_СогласиеРаботника", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати),,,,Истина);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СогласованиеПереводаЗапрос") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СогласованиеПереводаЗапрос",
			НСтр("ru='Запрос на перевод сотрудника к другому работодателю';uk='Запит на переведення працівника до іншого роботодавця'"),
			ТабличныйДокументСогласованиеПереводаЗапрос(УправлениеПечатью.МакетПечатнойФормы("Документ.ПереводКДругомуРаботодателю.ПФ_MXL_СогласованиеПереводаЗапрос", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати),,,,Истина);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СогласованиеПереводаОтвет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"СогласованиеПереводаОтвет",
			НСтр("ru='Ответ на запрос перевода сотрудника к другому работодателю';uk='Відповідь на запит переведення працівника до іншого роботодавця'"),
			ТабличныйДокументСогласованиеПереводаОтвет(УправлениеПечатью.МакетПечатнойФормы("Документ.ПереводКДругомуРаботодателю.ПФ_MXL_СогласованиеПереводаОтвет", ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм), МассивОбъектов, ОбъектыПечати),,,,Истина);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_UK_П4") Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Увольнение.Ссылка,
		|	ПереводКДругомуРаботодателю.Номер,
		|	ПереводКДругомуРаботодателю.Дата,
		|	ПереводКДругомуРаботодателю.Ссылка КАК Перевод
		|ИЗ
		|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Увольнение КАК Увольнение
		|		ПО ПереводКДругомуРаботодателю.Сотрудник = Увольнение.Сотрудник
		|ГДЕ
		|	ПереводКДругомуРаботодателю.Ссылка В(&МассивОбъектов)";
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		Результат = Запрос.Выполнить();
		МассивУвольнений = Новый Массив;
		
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			ТекстСообщения = "";
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) Тогда
					ТекстСообщения = НСтр("ru='В переводе %1 от %2 не введено увольнение';uk='У переведенні %1 від %2 не введено звільнення'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Номер, Формат(Выборка.Дата, "ДЛФ=D"));
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Выборка.Перевод);
					Продолжить;
				КонецЕсли;
				МассивУвольнений.Добавить(Выборка.Ссылка);	
			КонецЦикла;
		КонецЕсли;
		
		Если МассивУвольнений.Количество() > 0 Тогда
			Обработки.ПечатьКадровыхПриказов.Печать(МассивУвольнений, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
		Иначе 
		  	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"ПФ_MXL_UK_П4",
				НСтр("ru='Приказ об увольнении (П-4)';uk='Наказ про звільнення (П-4)'"),
				Новый ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_РасчетПриУвольнении") Тогда
		Запрос = Новый Запрос;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Увольнение.Ссылка,
		|	ПереводКДругомуРаботодателю.Номер,
		|	ПереводКДругомуРаботодателю.Дата,
		|	ПереводКДругомуРаботодателю.Ссылка КАК Перевод
		|ИЗ
		|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Увольнение КАК Увольнение
		|		ПО ПереводКДругомуРаботодателю.Сотрудник = Увольнение.Сотрудник
		|ГДЕ
		|	ПереводКДругомуРаботодателю.Ссылка В(&МассивОбъектов)";
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		Результат = Запрос.Выполнить();
			МассивУвольнений = Новый Массив;
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			ТекстСообщения = "";
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) Тогда
					ТекстСообщения = НСтр("ru='В переводе %1 от %2 не введено увольнение';uk='У переведенні %1 від %2 не введено звільнення'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Номер, Формат(Выборка.Дата, "ДЛФ=D"));
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Выборка.Перевод);
					Продолжить;
				КонецЕсли;
				МассивУвольнений.Добавить(Выборка.Ссылка);	
			КонецЦикла;
		КонецЕсли;
		Если МассивУвольнений.Количество() > 0 Тогда
			Обработки.ПечатьКадровыхПриказовРасширенная.Печать(МассивУвольнений, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
		Иначе 
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"ПФ_MXL_РасчетПриУвольнении",
				НСтр("ru='Печать записки-расчета при увольнении';uk='Друк записки-розрахунку при звільненні'"),
				Новый ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_UK_П1") Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПереводКДругомуРаботодателю.Номер,
		|	ПереводКДругомуРаботодателю.Дата,
		|	ПереводКДругомуРаботодателю.Ссылка КАК Перевод,
		|	ПереводКДругомуРаботодателю.НоваяОрганизация КАК Организация,
		|	ПереводКДругомуРаботодателю.ФизическоеЛицо,
		|	ПереводКДругомуРаботодателю.ДатаПриема,
		|	ПереводКДругомуРаботодателю.ДатаУвольнения
		|ПОМЕСТИТЬ ВТПереводы
		|ИЗ
		|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
		|ГДЕ
		|	ПереводКДругомуРаботодателю.Ссылка В(&МассивОбъектов)";
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		
		Запрос.Выполнить();
		
		ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоВременнойТаблице();
		ПараметрыПолученияСотрудниковОрганизаций.ИмяВТФизическиеЛица = "ВТПереводы";
		ПараметрыПолученияСотрудниковОрганизаций.КадровыеДанные = "ПриказОПриеме,ФизическоеЛицо,ДатаПриема";
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиОрганизации.ПриказОПриеме,
		|	СотрудникиОрганизации.ДатаПриема,
		|	СотрудникиОрганизации.Сотрудник,
		|	СотрудникиОрганизации.ФизическоеЛицо,
		|	ПриемНаРаботу.Организация
		|ПОМЕСТИТЬ ВТПриемыНаРаботу
		|ИЗ
		|	ВТСотрудникиОрганизации КАК СотрудникиОрганизации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу КАК ПриемНаРаботу
		|		ПО СотрудникиОрганизации.ПриказОПриеме = ПриемНаРаботу.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВТПриемыНаРаботу.ДатаПриема) КАК ДатаПриема,
		|	ВТПриемыНаРаботу.Сотрудник
		|ПОМЕСТИТЬ ВТДатыПриемовПослеПеревода
		|ИЗ
		|	ВТПриемыНаРаботу КАК ВТПриемыНаРаботу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПереводы КАК ВТПереводы
		|		ПО ВТПриемыНаРаботу.Организация = ВТПереводы.Организация
		|			И ВТПриемыНаРаботу.ФизическоеЛицо = ВТПереводы.ФизическоеЛицо
		|			И ВТПриемыНаРаботу.ДатаПриема >= ВТПереводы.ДатаУвольнения
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТПриемыНаРаботу.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПриемыНаРаботу.ПриказОПриеме,
		|	ВТПриемыНаРаботу.ДатаПриема,
		|	ВТПриемыНаРаботу.Сотрудник,
		|	ВТПриемыНаРаботу.ФизическоеЛицо,
		|	ВТПриемыНаРаботу.Организация
		|ПОМЕСТИТЬ ВТПервыеПриемыПослеПеревода
		|ИЗ
		|	ВТПриемыНаРаботу КАК ВТПриемыНаРаботу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПриемовПослеПеревода КАК ВТДатыПриемовПослеПеревода
		|		ПО ВТПриемыНаРаботу.ДатаПриема = ВТДатыПриемовПослеПеревода.ДатаПриема
		|			И ВТПриемыНаРаботу.Сотрудник = ВТДатыПриемовПослеПеревода.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПереводы.Номер,
		|	ВТПереводы.Дата,
		|	ВТПереводы.Перевод,
		|	ВТПервыеПриемыПослеПеревода.ПриказОПриеме
		|ИЗ
		|	ВТПереводы КАК ВТПереводы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПервыеПриемыПослеПеревода КАК ВТПервыеПриемыПослеПеревода
		|		ПО (ВТПервыеПриемыПослеПеревода.Организация = ВТПереводы.Организация)
		|			И (ВТПервыеПриемыПослеПеревода.ФизическоеЛицо = ВТПереводы.ФизическоеЛицо)";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		Результат = Запрос.Выполнить();
		
		МассивПриемов = Новый Массив;
		
		Если Не Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			ТекстСообщения = "";
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.ПриказОПриеме) Тогда
					ТекстСообщения = НСтр("ru='В переводе %1 от %2 не введен прием на работу';uk='У переведенні %1 від %2 не введений прийом на роботу'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Выборка.Номер, Формат(Выборка.Дата, "ДЛФ=D"));
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Выборка.Перевод);
					Продолжить;
				КонецЕсли;
				МассивПриемов.Добавить(Выборка.ПриказОПриеме);	
			КонецЦикла;
		КонецЕсли;
		Если МассивПриемов.Количество() > 0 Тогда
			Обработки.ПечатьКадровыхПриказов.Печать(МассивПриемов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
		Иначе 
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
				КоллекцияПечатныхФорм,
				"ПФ_MXL_UK_П1",
				НСтр("ru='Приказ о приеме на работу (П-1)';uk='Наказ про прийом на роботу (П-1)'"),
				Новый ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Функция ДанныеДляПечати(МассивОбъектов)
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ИспользоватьШтатноеРасписание", ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереводКДругомуРаботодателю.Ссылка,
	|	ПереводКДругомуРаботодателю.Дата,
	|	ПереводКДругомуРаботодателю.Дата КАК Период,
	|	ПереводКДругомуРаботодателю.Организация,
	|	ПереводКДругомуРаботодателю.НоваяОрганизация,
	|	ПереводКДругомуРаботодателю.Сотрудник,
	|	ВЫБОР
	|		КОГДА &ИспользоватьШтатноеРасписание
	|			ТОГДА ЕСТЬNULL(ШтатноеРасписание.Должность, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка))
	|		ИНАЧЕ ПереводКДругомуРаботодателю.Должность
	|	КОНЕЦ КАК Должность,
	|	ПереводКДругомуРаботодателю.ДатаУвольнения,
	|	ПереводКДругомуРаботодателю.СтатьяКЗОТ,
	|	ПереводКДругомуРаботодателю.Руководитель,
	|	ПереводКДругомуРаботодателю.ДолжностьРуководителя,
	|	ПереводКДругомуРаботодателю.РуководительНовойОрганизации,
	|	ПереводКДругомуРаботодателю.ДолжностьРуководителяНовойОрганизации
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ПО ПереводКДругомуРаботодателю.ДолжностьПоШтатномуРасписанию = ШтатноеРасписание.Ссылка
	|			И (&ИспользоватьШтатноеРасписание)
	|ГДЕ
	|	ПереводКДругомуРаботодателю.Ссылка В(&МассивОбъектов)";
	
	Запрос.Выполнить();
	
	ИменаПолей = Новый Массив;
	ИменаПолей.Добавить("Руководитель");
	ИменаПолей.Добавить("РуководительНовойОрганизации");
	
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(МенеджерВременныхТаблиц, Истина, ИменаПолей, "ВТДанныеДокумента");
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		МенеджерВременныхТаблиц,
		"ВТДанныеДокумента");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, ИСТИНА, "ТекущаяДолжность, ФИОПолные, ИОФамилия, Наименование, Пол");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереводКДругомуРаботодателю.Ссылка КАК Ссылка,
	|	СпрОрганизация.Ссылка КАК Организация,
	|	СпрНоваяОрганизация.Ссылка КАК НоваяОрганизация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СпрОрганизация.НаименованиеПолное КАК СТРОКА(500))) = """"
	|			ТОГДА СпрОрганизация.Наименование
	|		ИНАЧЕ СпрОрганизация.НаименованиеПолное
	|	КОНЕЦ КАК НазваниеОрганизации,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СпрНоваяОрганизация.НаименованиеПолное КАК СТРОКА(500))) = """"
	|			ТОГДА СпрНоваяОрганизация.Наименование
	|		ИНАЧЕ СпрНоваяОрганизация.НаименованиеПолное
	|	КОНЕЦ КАК НазваниеНовойОрганизации,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СпрНоваяОрганизация.НаименованиеПолное КАК СТРОКА(500))) = """"
	|			ТОГДА СпрНоваяОрганизация.Наименование
	|		ИНАЧЕ СпрНоваяОрганизация.НаименованиеПолное
	|	КОНЕЦ КАК ПолноеНазваниеНовойОрганизации,
	|	ПРЕДСТАВЛЕНИЕ(ПереводКДругомуРаботодателю.Должность) КАК НоваяДолжность,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ФИОПолные, КадровыеДанныеСотрудников.Наименование) КАК ФИОСотрудника,
	|	ЕСТЬNULL(КадровыеДанныеСотрудников.ИОФамилия, КадровыеДанныеСотрудников.Наименование) КАК СотрудникРасшифровкаПодписи,
	|	ПРЕДСТАВЛЕНИЕ(КадровыеДанныеСотрудников.ТекущаяДолжность) КАК ДолжностьСотрудника,
	|	ПереводКДругомуРаботодателю.ДатаУвольнения КАК ДатаУвольненияДокумента,
	|	ВЫБОР
	|		КОГДА Представления.Использовать
	|			ТОГДА Представления.ТекстОснования
	|		ИНАЧЕ ПереводКДругомуРаботодателю.СтатьяКЗОТ.ТекстОснования
	|	КОНЕЦ КАК СтатьяКЗОТ,
	|	ПереводКДругомуРаботодателю.Руководитель КАК Руководитель,
	|	ЕСТЬNULL(ФИОРуководителя.РасшифровкаПодписи, """") КАК РуководительРасшифровкаПодписи,
	|	ЕСТЬNULL(ФИОРуководителя.ФИОПолные, """") КАК ФИОПолныеРуководителя,
	|	ПереводКДругомуРаботодателю.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ПереводКДругомуРаботодателю.РуководительНовойОрганизации КАК РуководительНовойОрганизации,
	|	ЕСТЬNULL(ФИОРуководителяНовойОрганизации.РасшифровкаПодписи, """") КАК РуководительНовойОрганизацииРасшифровкаПодписи,
	|	ЕСТЬNULL(ФИОРуководителяНовойОрганизации.ФИОПолные, """") КАК ФИОПолныеРуководителяНовойОрганизации,
	|	ПереводКДругомуРаботодателю.ДолжностьРуководителяНовойОрганизации КАК ДолжностьРуководителяНовойОрганизации,
	|	КадровыеДанныеСотрудников.Пол
	|ИЗ
	|	ВТДанныеДокумента КАК ПереводКДругомуРаботодателю
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредставленияОснованийУвольнения КАК Представления
	|		ПО ПереводКДругомуРаботодателю.СтатьяКЗОТ = Представления.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК СпрОрганизация
	|		ПО ПереводКДругомуРаботодателю.Организация = СпрОрганизация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК СпрНоваяОрганизация
	|		ПО ПереводКДругомуРаботодателю.НоваяОрганизация = СпрНоваяОрганизация.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ПереводКДругомуРаботодателю.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И ПереводКДругомуРаботодателю.Дата = КадровыеДанныеСотрудников.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОРуководителя
	|		ПО ПереводКДругомуРаботодателю.Дата = ФИОРуководителя.Дата
	|			И ПереводКДругомуРаботодателю.Ссылка = ФИОРуководителя.Ссылка
	|			И ПереводКДругомуРаботодателю.Руководитель = ФИОРуководителя.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОРуководителяНовойОрганизации
	|		ПО ПереводКДругомуРаботодателю.Дата = ФИОРуководителяНовойОрганизации.Дата
	|			И ПереводКДругомуРаботодателю.Ссылка = ФИОРуководителяНовойОрганизации.Ссылка
	|			И ПереводКДругомуРаботодателю.РуководительНовойОрганизации = ФИОРуководителяНовойОрганизации.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПереводКДругомуРаботодателю.Ссылка";
	
	ДанныеДляПечати = Запрос.Выполнить().Выгрузить();
	
	ДанныеДляПечати.Колонки.Добавить("ИмяОтчествоДиректораОрганизации", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ИмяОтчествоДиректораНовойОрганизации", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ФИОРуководителя", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ФИОРуководителяНовойОрганизации", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ТемаПисьма", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ДатаУвольнения", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ФИОСотрудникаРодительный", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("ФИОСотрудникаТворительный", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("СклонениеЕгоЕе", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	ДанныеДляПечати.Колонки.Добавить("СклонениеСогласенСогласна", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(0)));
	
	Для каждого ДанныеОбъектаДляПечати Из ДанныеДляПечати Цикл
		
		ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ДанныеОбъектаДляПечати.ФИОСотрудника),
			2, ДанныеОбъектаДляПечати.ФИОСотрудникаРодительный, ДанныеОбъектаДляПечати.Пол);
		ДанныеОбъектаДляПечати.ФИОСотрудникаРодительный = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеОбъектаДляПечати.ФИОСотрудникаРодительный);
		
		ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ДанныеОбъектаДляПечати.ФИОСотрудника),
			5, ДанныеОбъектаДляПечати.ФИОСотрудникаТворительный, ДанныеОбъектаДляПечати.Пол);
		ДанныеОбъектаДляПечати.ФИОСотрудникаТворительный = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеОбъектаДляПечати.ФИОСотрудникаТворительный);
		
		Если ДанныеОбъектаДляПечати.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
			ДанныеОбъектаДляПечати.СклонениеЕгоЕе = НСтр("ru='его';uk='його'");
			ДанныеОбъектаДляПечати.СклонениеСогласенСогласна = НСтр("ru='согласен';uk='згоден'");
		Иначе
			ДанныеОбъектаДляПечати.СклонениеЕгоЕе = НСтр("ru='ее';uk='її'");
			ДанныеОбъектаДляПечати.СклонениеСогласенСогласна = НСтр("ru='согласна';uk='згодна'");
		КонецЕсли;
		
		ДанныеОбъектаДляПечати.ДатаУвольнения = Формат(ДанныеОбъектаДляПечати.ДатаУвольненияДокумента,"ДЛФ=D");
		ДанныеОбъектаДляПечати.ИмяОтчествоДиректораОрганизации = "____________________________________________";
		ДанныеОбъектаДляПечати.ИмяОтчествоДиректораНовойОрганизации = "____________________________________________";
		ДанныеОбъектаДляПечати.ТемаПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='О переводе %1';uk='Про переведення %1'"), ДанныеОбъектаДляПечати.ФИОСотрудникаРодительный);
		ДанныеОбъектаДляПечати.ДолжностьСотрудника = НРег(ДанныеОбъектаДляПечати.ДолжностьСотрудника);
		ДанныеОбъектаДляПечати.НоваяДолжность = НРег(ДанныеОбъектаДляПечати.НоваяДолжность);
		ДанныеОбъектаДляПечати.ФИОРуководителя = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеОбъектаДляПечати.ФИОПолныеРуководителя);
		ДанныеОбъектаДляПечати.ФИОРуководителяНовойОрганизации = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ДанныеОбъектаДляПечати.ФИОПолныеРуководителяНовойОрганизации);
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ТабличныйДокументСоответствиеДанныхУчетаДокументу(МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ТолькоПросмотр = Истина;
	
	Макет = Документы.ПереводКДругомуРаботодателю.ПолучитьМакет("ОтчетОСоответствииДанныхУчетаДокументу"); 	
	
	ОбластьМакетаШапка 			= Макет.ПолучитьОбласть("Шапка");
	ОбластьСсылка 				= Макет.ПолучитьОбласть("Ссылка");
	ОбластьПоказатель			= Макет.ПолучитьОбласть("Показатель");
	ОбластьШапкаНачислений			= Макет.ПолучитьОбласть("ШапкаНачислений");
	ОбластьНачисление			= Макет.ПолучитьОбласть("Начисление");
	ОбластьПоказательНачисления	= Макет.ПолучитьОбласть("ПоказательНачисления");

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСсылок", МассивОбъектов);
	
	Запрос.УстановитьПараметр("ТекстУвольнениеНеВведено", 	НСтр("ru='Увольнение не введено';uk='Звільнення не введено'"));
	Запрос.УстановитьПараметр("ТекстУвольнение", 			НСтр("ru='Увольнение';uk='Звільнення'"));
	Запрос.УстановитьПараметр("ТекстПриемНаРаботу", 		НСтр("ru='ПриемНаРаботу';uk='ПриемНаРаботу'"));
	Запрос.УстановитьПараметр("ТекстПриемНаРаботуНеВведен", НСтр("ru='Прием на работу не введен';uk='Прийом на роботу не введено'"));
	
	Запрос.УстановитьПараметр("ПредставлениеПоказателяДатаУвольнения", 				НСтр("ru='Дата увольнения';uk='Дата звільнення'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяСтатьяКЗОТ", 					НСтр("ru='Статья КЗоТ';uk='Стаття КЗпП'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяОрганизация",					НСтр("ru='Организация';uk='Організація'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяДатаПриема", 					НСтр("ru='Дата приема';uk='Дата прийому'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяПодразделение", 				НСтр("ru='Подразделение';uk='Підрозділ'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяДолжность", 					НСтр("ru='Должность';uk='Посада'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяПозицияШтатногоРасписания", 	НСтр("ru='Позиция штатного расписания';uk='Позиція штатного розкладу'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяГрафикРаботы", 				НСтр("ru='График работы';uk='Графік роботи'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяКоличествоСтавок", 			НСтр("ru='Количество ставок';uk='Кількість ставок'"));
	Запрос.УстановитьПараметр("ПредставлениеПоказателяАванс", 						НСтр("ru='Аванс';uk='Аванс'"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПереводКДругомуРаботодателю.Сотрудник КАК Сотрудник,
	|	ПереводКДругомуРаботодателю.ДатаУвольнения КАК Период
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
	|ГДЕ
	|	ПереводКДругомуРаботодателю.Ссылка В(&МассивСсылок)";
	Запрос.Выполнить();
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "ПриказОбУвольнении");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Увольнение.Сотрудник,
	|	Увольнение.ДатаУвольнения,
	|	Увольнение.СтатьяКЗОТ,
	|	ПРЕДСТАВЛЕНИЕ(Увольнение.Ссылка) КАК СсылкаПредставление,
	|	Увольнение.Ссылка КАК Ссылка,
	|	ПереводКДругомуРаботодателю.Ссылка КАК СсылкаПеревод
	|ПОМЕСТИТЬ ВТУвольнение
	|ИЗ
	|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	|		ПО ПереводКДругомуРаботодателю.Сотрудник = ВТКадровыеДанныеСотрудников.Сотрудник
	|			И ПереводКДругомуРаботодателю.ДатаУвольнения = ВТКадровыеДанныеСотрудников.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Увольнение КАК Увольнение
	|		ПО (ВТКадровыеДанныеСотрудников.ПриказОбУвольнении = Увольнение.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриемНаРаботу.Организация,
	|	ПриемНаРаботу.Подразделение,
	|	ПриемНаРаботу.ДолжностьПоШтатномуРасписанию,
	|	ПриемНаРаботу.Должность,
	|	ПриемНаРаботу.КоличествоСтавок,
	|	ПриемНаРаботу.ДатаПриема,
	|	ПриемНаРаботу.ГрафикРаботы,
	|	ПриемНаРаботу.Аванс,
	|	ПриемНаРаботу.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ПриемНаРаботу.Ссылка) КАК СсылкаПредставление,
	|	СрезКадровойИстории.Ссылка КАК СсылкаПеревод
	|ПОМЕСТИТЬ ВТПриемНаРаботу
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(КадроваяИсторияСотрудников.Период) КАК Период,
	|			КадроваяИсторияСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	|			КадроваяИсторияСотрудников.Организация КАК Организация,
	|			ПереводКДругомуРаботодателю.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|				ПО ПереводКДругомуРаботодателю.ФизическоеЛицо = КадроваяИсторияСотрудников.ФизическоеЛицо
	|					И ПереводКДругомуРаботодателю.НоваяОрганизация = КадроваяИсторияСотрудников.Организация
	|					И ПереводКДругомуРаботодателю.ДатаУвольнения < КадроваяИсторияСотрудников.Период
	|					И (КадроваяИсторияСотрудников.ВидСобытия = ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.Прием))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КадроваяИсторияСотрудников.ФизическоеЛицо,
	|			КадроваяИсторияСотрудников.Организация,
	|			ПереводКДругомуРаботодателю.Ссылка) КАК СрезКадровойИстории
	|		ПО КадроваяИсторияСотрудников.ФизическоеЛицо = СрезКадровойИстории.ФизическоеЛицо
	|			И КадроваяИсторияСотрудников.Организация = СрезКадровойИстории.Организация
	|			И КадроваяИсторияСотрудников.Период = СрезКадровойИстории.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|		ПО КадроваяИсторияСотрудников.Регистратор = ПриемНаРаботу.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПереводКДругомуРаботодателю.Организация,
	|	ПереводКДругомуРаботодателю.Сотрудник,
	|	ПереводКДругомуРаботодателю.ФизическоеЛицо,
	|	ПереводКДругомуРаботодателю.ДатаУвольнения,
	|	ПереводКДругомуРаботодателю.НоваяОрганизация,
	|	ПереводКДругомуРаботодателю.ДатаПриема,
	|	ПереводКДругомуРаботодателю.Подразделение,
	|	ПереводКДругомуРаботодателю.Должность,
	|	ПереводКДругомуРаботодателю.ГрафикРаботы,
	|	ПереводКДругомуРаботодателю.КоличествоСтавок,
	|	ПереводКДругомуРаботодателю.ДолжностьПоШтатномуРасписанию,
	|	ПереводКДругомуРаботодателю.Аванс,
	|	ПереводКДругомуРаботодателю.СтатьяКЗоТ,
	|	ПереводКДругомуРаботодателю.Ссылка КАК СсылкаПеревод
	|ПОМЕСТИТЬ ВТСогласованныеДанные
	|ИЗ
	|	Документ.ПереводКДругомуРаботодателю КАК ПереводКДругомуРаботодателю
	|ГДЕ
	|	ПереводКДругомуРаботодателю.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереводКДругомуРаботодателюНачисления.Начисление,
	|	ПереводКДругомуРаботодателюПоказатели.Показатель,
	|	ВЫРАЗИТЬ(ПереводКДругомуРаботодателюПоказатели.Значение КАК ЧИСЛО(15, 2)) КАК Значение,
	|	ПереводКДругомуРаботодателюНачисления.Ссылка КАК СсылкаПеревод
	|ПОМЕСТИТЬ Согласовано
	|ИЗ
	|	Документ.ПереводКДругомуРаботодателю.Начисления КАК ПереводКДругомуРаботодателюНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПереводКДругомуРаботодателю.Показатели КАК ПереводКДругомуРаботодателюПоказатели
	|		ПО ПереводКДругомуРаботодателюНачисления.ИдентификаторСтрокиВидаРасчета = ПереводКДругомуРаботодателюПоказатели.ИдентификаторСтрокиВидаРасчета
	|			И ПереводКДругомуРаботодателюНачисления.Ссылка = ПереводКДругомуРаботодателюПоказатели.Ссылка
	|ГДЕ
	|	ПереводКДругомуРаботодателюНачисления.Ссылка В(&МассивСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереводКДругомуРаботодателюНачисления.Начисление,
	|	ПереводКДругомуРаботодателюПоказатели.Показатель,
	|	ПереводКДругомуРаботодателюПоказатели.Значение,
	|	ПереводКДругомуРаботодателюНачисления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриемНаРаботуНачисления.Начисление,
	|	ПриемНаРаботуПоказатели.Показатель,
	|	ПриемНаРаботуПоказатели.Значение,
	|	ПриемНаРаботуНачисления.Ссылка,
	|	ВТПриемНаРаботу.СсылкаПеревод
	|ПОМЕСТИТЬ УчетныеДанные
	|ИЗ
	|	ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу.Начисления КАК ПриемНаРаботуНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботу.Показатели КАК ПриемНаРаботуПоказатели
	|			ПО ПриемНаРаботуНачисления.ИдентификаторСтрокиВидаРасчета = ПриемНаРаботуПоказатели.ИдентификаторСтрокиВидаРасчета
	|				И ПриемНаРаботуНачисления.Ссылка = ПриемНаРаботуПоказатели.Ссылка
	|		ПО ВТПриемНаРаботу.Ссылка = ПриемНаРаботуНачисления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.ДатаУвольнения КАК СогласованныйПоказатель,
	|	ВТУвольнение.ДатаУвольнения КАК УчетныйПоказатель,
	|	ЕСТЬNULL(ВТУвольнение.СсылкаПредставление, &ТекстУвольнениеНеВведено) КАК ПредставлениеСсылки,
	|	ЕСТЬNULL(ВТУвольнение.Ссылка, &ТекстУвольнение) КАК Ссылка,
	|	&ПредставлениеПоказателяДатаУвольнения КАК ПредставлениеПоказателя,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	10 КАК ПорядокПоказателя,
	|	NULL КАК ДляШтатногоРасписания,
	|	NULL КАК ДляРасчетаЗарплаты
	|ПОМЕСТИТЬ ВТСравнениеДокументов
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУвольнение КАК ВТУвольнение
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТУвольнение.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.СтатьяКЗОТ,
	|	ВТУвольнение.СтатьяКЗОТ,
	|	ЕСТЬNULL(ВТУвольнение.СсылкаПредставление, &ТекстУвольнениеНеВведено),
	|	ЕСТЬNULL(ВТУвольнение.Ссылка, &ТекстУвольнение),
	|	&ПредставлениеПоказателяСтатьяКЗОТ,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	20,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУвольнение КАК ВТУвольнение
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТУвольнение.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.НоваяОрганизация,
	|	ВТПриемНаРаботу.Организация,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяОрганизация,
	|	ВТПриемНаРаботу.СсылкаПеревод,
	|	30,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.ДатаПриема,
	|	ВТПриемНаРаботу.ДатаПриема,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяДатаПриема,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	40,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.Подразделение,
	|	ВТПриемНаРаботу.Подразделение,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяПодразделение,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	50,
	|	ЛОЖЬ,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.Должность,
	|	ВТПриемНаРаботу.Должность,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяДолжность,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	60,
	|	ЛОЖЬ,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.ДолжностьПоШтатномуРасписанию,
	|	ВТПриемНаРаботу.ДолжностьПоШтатномуРасписанию,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяПозицияШтатногоРасписания,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	70,
	|	ИСТИНА,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.ГрафикРаботы,
	|	ВТПриемНаРаботу.ГрафикРаботы,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяГрафикРаботы,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	80,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.КоличествоСтавок,
	|	ВТПриемНаРаботу.КоличествоСтавок,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяКоличествоСтавок,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	90,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСогласованныеДанные.Аванс,
	|	ВТПриемНаРаботу.Аванс,
	|	ЕСТЬNULL(ВТПриемНаРаботу.СсылкаПредставление, &ТекстПриемНаРаботуНеВведен),
	|	ЕСТЬNULL(ВТПриемНаРаботу.Ссылка, &ТекстПриемНаРаботу),
	|	&ПредставлениеПоказателяАванс,
	|	ВТСогласованныеДанные.СсылкаПеревод,
	|	100,
	|	NULL,
	|	ИСТИНА
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПриемНаРаботу КАК ВТПриемНаРаботу
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТПриемНаРаботу.СсылкаПеревод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСравнениеДанных.СогласованныйПоказатель,
	|	ВТСравнениеДанных.УчетныйПоказатель,
	|	ВТСравнениеДанных.ПредставлениеСсылки КАК ПредставлениеРегистратора,
	|	ВТСравнениеДанных.Ссылка КАК Регистратор,
	|	ВТСравнениеДанных.ПредставлениеПоказателя,
	|	ВТСравнениеДанных.СсылкаПеревод КАК СсылкаПеревод,
	|	ВТСогласованныеДанные.Организация КАК Организация,
	|	ВТСогласованныеДанные.ФизическоеЛицо КАК Сотрудник,
	|	ВТСогласованныеДанные.НоваяОрганизация КАК НоваяОрганизация,
	|	ВТСравнениеДанных.ПорядокПоказателя КАК ПорядокПоказателя,
	|	ВТСравнениеДанных.ДляШтатногоРасписания,
	|	ВТСравнениеДанных.ДляРасчетаЗарплаты
	|ИЗ
	|	ВТСогласованныеДанные КАК ВТСогласованныеДанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСравнениеДокументов КАК ВТСравнениеДанных
	|		ПО ВТСогласованныеДанные.СсылкаПеревод = ВТСравнениеДанных.СсылкаПеревод
	|
	|УПОРЯДОЧИТЬ ПО
	|	СсылкаПеревод,
	|	ПорядокПоказателя,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(УчетныеДанные.Ссылка, &ТекстПриемНаРаботу) КАК Регистратор,
	|	ЕСТЬNULL(Согласовано.Начисление, УчетныеДанные.Начисление) КАК Начисление,
	|	ЕСТЬNULL(Согласовано.Показатель, УчетныеДанные.Показатель) КАК Показатель,
	|	ЕСТЬNULL(Согласовано.Значение, 0) КАК СогласованныйПоказатель,
	|	ЕСТЬNULL(УчетныеДанные.Значение, 0) КАК УчетныйПоказатель,
	|	ЕСТЬNULL(Согласовано.СсылкаПеревод, УчетныеДанные.СсылкаПеревод) КАК СсылкаПеревод
	|ИЗ
	|	Согласовано КАК Согласовано
	|		ПОЛНОЕ СОЕДИНЕНИЕ УчетныеДанные КАК УчетныеДанные
	|		ПО Согласовано.Начисление = УчетныеДанные.Начисление
	|			И Согласовано.Показатель = УчетныеДанные.Показатель
	|			И Согласовано.СсылкаПеревод = УчетныеДанные.СсылкаПеревод
	|
	|УПОРЯДОЧИТЬ ПО
	|	СсылкаПеревод,
	|	Начисление
	|ИТОГИ ПО
	|	СсылкаПеревод,
	|	Начисление";
	
	СтруктураЗначенийПараметров = Новый Структура("МассивСсылок, ВедетсяШтатноеРасписание");
	
	ВедетсяШтатноеРасписание = ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание");
	ДоступенРасчетЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная") 
							И Пользователи.РолиДоступны("ЧтениеНачисленнойЗарплатыРасширенная, ДобавлениеИзменениеНачисленнойЗарплатыРасширенная");
							
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	КоличествоРезультатов 	= МассивРезультатов.Количество();
	Выборка 				= МассивРезультатов[КоличествоРезультатов - 2].Выбрать();
	ВыборкаНачислений 		= МассивРезультатов[КоличествоРезультатов - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОтборНачислений = Новый Структура("СсылкаПеревод");
	
	ПервыйДокумент = Истина;
	Пока Выборка.СледующийПоЗначениюПоля("СсылкаПеревод") Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(ОбластьМакетаШапка.Параметры, Выборка);
		ДокументРезультат.Вывести(ОбластьМакетаШапка);
		
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСсылка.Параметры, Выборка);
			ДокументРезультат.Вывести(ОбластьСсылка);
			
			Пока Выборка.СледующийПоЗначениюПоля("ПредставлениеПоказателя") Цикл
				
				Если ЗначениеЗаполнено(Выборка.ДляШтатногоРасписания) 
					И НЕ ВедетсяШтатноеРасписание = Выборка.ДляШтатногоРасписания Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.ДляРасчетаЗарплаты) 
					И НЕ ДоступенРасчетЗарплаты = Выборка.ДляРасчетаЗарплаты Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ОбластьПоказатель.Параметры, Выборка);
				Область = ДокументРезультат.Вывести(ОбластьПоказатель);
				
				Если НЕ Выборка.СогласованныйПоказатель = Выборка.УчетныйПоказатель Тогда
					ДокументРезультат.Область(Область.Верх, 1, Область.Низ,3).ЦветФона = WebЦвета.СветлоКоралловый;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ДоступенРасчетЗарплаты Тогда
			
			ВыборкаНачислений.Сбросить();
			ОтборНачислений.Вставить("СсылкаПеревод", Выборка.СсылкаПеревод);
			
			Если ВыборкаНачислений.НайтиСледующий(ОтборНачислений) Тогда   
				
				ДокументРезультат.Вывести(ОбластьШапкаНачислений);
				
				ВыборкаНачисленийПеревода = ВыборкаНачислений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНачисленийПеревода.Следующий() Цикл
					
					ЗаполнитьЗначенияСвойств(ОбластьНачисление.Параметры, ВыборкаНачисленийПеревода);
					ДокументРезультат.Вывести(ОбластьНачисление);
					
					ВыборкаПоказателейНачисления = ВыборкаНачисленийПеревода.Выбрать(); 
					Пока ВыборкаПоказателейНачисления.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ОбластьПоказательНачисления.Параметры, ВыборкаПоказателейНачисления);
						Область = ДокументРезультат.Вывести(ОбластьПоказательНачисления);	
						
						Если НЕ ВыборкаПоказателейНачисления.СогласованныйПоказатель = ВыборкаПоказателейНачисления.УчетныйПоказатель Тогда
							ДокументРезультат.Область(Область.Верх, 1, Область.Низ,3).ЦветФона = WebЦвета.СветлоКоралловый;
						КонецЕсли;

					КонецЦикла; 
					
				КонецЦикла; 
			КонецЕсли;	
		КонецЕсли;
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, Выборка.СсылкаПеревод);
		
	КонецЦикла;
	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереводКДругомуРаботодателю_СоответствиеДанныхУчетаДокументу";
	ДокументРезультат.АвтоМасштаб = Истина;

	Возврат ДокументРезультат;
	
КонецФункции

Функция ТабличныйДокументСогласиеРаботника(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереводКДругомуРаботодателю_ЗапросНаПеревод";
	
	ДанныеДляПечати = ДанныеДляПечати(МассивОбъектов);
	ПервыйДокумент = Истина;
	Для каждого ОбъектПечати Из ДанныеДляПечати Цикл
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("Документ");
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ОбъектПечати);
		ДокументРезультат.Вывести(ОбластьМакетаШапкаДокумента);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ТабличныйДокументСогласованиеПереводаЗапрос(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереводКДругомуРаботодателю_СогласованиеПереводаЗапрос";
	
	ДанныеДляПечати = ДанныеДляПечати(МассивОбъектов);
	ПервыйДокумент = Истина;
	Для каждого ОбъектПечати Из ДанныеДляПечати Цикл
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("Документ");
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ОбъектПечати);
		ДокументРезультат.Вывести(ОбластьМакетаШапкаДокумента);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ТабличныйДокументСогласованиеПереводаОтвет(Макет, МассивОбъектов, ОбъектыПечати)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереводКДругомуРаботодателю_СогласованиеПереводаОтвет";
	
	ДанныеДляПечати = ДанныеДляПечати(МассивОбъектов);
	ПервыйДокумент = Истина;
	Для каждого ОбъектПечати Из ДанныеДляПечати Цикл
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьМакетаШапкаДокумента = Макет.ПолучитьОбласть("Документ");
		ОбластьМакетаШапкаДокумента.Параметры.Заполнить(ОбъектПечати);
		ДокументРезультат.Вывести(ОбластьМакетаШапкаДокумента);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

#КонецОбласти

#КонецЕсли