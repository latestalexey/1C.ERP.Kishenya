#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если  ЗначениеЗаполнено(НачПериода) И ЗначениеЗаполнено(КонПериода) Тогда
		Шаблон = НСтр("ru='Начало и конец периода должны быть в том же году, что и дата документа';uk='Початок і кінець періоду повинні бути в тому ж році, що і дата документа'");
		ДатыПериодаВПределахГода = (Год(дата) = Год(НачПериода)) И (Год(дата) = Год(КонПериода));
		ПроверитьИСообщитьОшибку(Не ДатыПериодаВПределахГода, Отказ, Шаблон, "НачПериода", "НачПериода");		
	КонецЕсли;
	
	ТекГод = Год(Дата);
	Для каждого Строка Из КонтролируемыеСделки Цикл
		
		Если  ЗначениеЗаполнено(Строка.ДатаОперацииС) И ЗначениеЗаполнено(Строка.ДатаОперацииПо) Тогда
			ДатыПериодаВПределахГода = (Год(Строка.ДатаОперацииС) = ТекГод И Год(Строка.ДатаОперацииПо) = ТекГод);
			Шаблон = НСтр("ru='Дата начала или конца осуществления операции должны быть в том же году, что и дата документа!';uk='Дата початку або кінця здійснення операції повинні бути в тому ж році, що і дата документа!'");		
			ПроверитьИСообщитьОшибку(Не ДатыПериодаВПределахГода, Отказ, Шаблон, "ДатаОперацииС", "ДатаОперацииС", "КонтролируемыеСделки", КонтролируемыеСделки.Индекс(Строка)+1);		
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	СинхронизироватьТЧ();
	
	СуммаКонтролируемыхОпераций = КонтролируемыеСделки.Итог("СуммаРегл");
	СуммаОперацийЗаПериод       = СуммыВсехОпераций.Итог("СуммаОперацийЗаПериод");;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.СведенияОКонтролируемыхОперациях.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	КонтролируемыеОперацииСервер.ОтразитьОбщиеСведенияОКонтролируемыхОперациях(ДополнительныеСвойства, Движения, Отказ);
	КонтролируемыеОперацииСервер.ОтразитьКонтролируемыеОперации(ДополнительныеСвойства, Движения, Отказ);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанных = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанных = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
		
	Ответственный          = Пользователи.ТекущийПользователь();
	Организация            = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СинхронизироватьТЧ() Экспорт

	СписокКонтрагентов = КонтролируемыеСделки.Выгрузить(, "Контрагент, СуммаРегл");
	СписокКонтрагентов.Свернуть("Контрагент", "СуммаРегл");
	Для каждого ТекКонтрагент Из СписокКонтрагентов Цикл
		
		СтрокаВсехОпераций = СуммыВсехОпераций.Найти(ТекКонтрагент.Контрагент, "Контрагент");
		Если СтрокаВсехОпераций = Неопределено Тогда
			СтрокаВсехОпераций = СуммыВсехОпераций.Добавить();
			СтрокаВсехОпераций.Контрагент = ТекКонтрагент.Контрагент;
		КонецЕсли;
		
		Если СтрокаВсехОпераций.СуммаОперацийЗаПериод < ТекКонтрагент.СуммаРегл Тогда
			СтрокаВсехОпераций.СуммаОперацийЗаПериод = ТекКонтрагент.СуммаРегл;
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

Процедура ПроверитьИСообщитьОшибку(УсловиеОшибки, Отказ, Знач Шаблон, Знач ИмяПоля, Знач СинонимПоля, Знач ИмяТабчасти = Неопределено, Знач НомерСтроки = Неопределено)
	
	Если УсловиеОшибки Тогда
		Сообщение = СтрЗаменить(Шаблон, "%СинонимПоля%", СинонимПоля);
		Сообщение = СтрЗаменить(Сообщение, "%НомерСтроки%", НомерСтроки);
		Сообщение = СтрЗаменить(Сообщение, "%ИмяТабчасти%", ИмяТабчасти);
		Если ЗначениеЗаполнено(ИмяТабчасти) И НомерСтроки > 0 Тогда
			ИмяПоля = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабчасти, НомерСтроки, ИмяПоля);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, , ИмяПоля, "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
