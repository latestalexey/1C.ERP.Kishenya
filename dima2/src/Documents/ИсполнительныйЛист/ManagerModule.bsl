#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеИсполнительныхДокументов,ПолныеПрава,ЧтениеИсполнительныхДокументов", , Ложь) Тогда
		
		// Карточка учета исполнительных документов.
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Отчет.ЖурналУчетаИсполнительныхДокументов";
		КомандаПечати.ФункциональныеОпции = "ИспользоватьИсполнительныеЛисты";
		КомандаПечати.Идентификатор = "КарточкаУчетаИсполнительныхДокументов";
		КомандаПечати.Представление = НСтр("ru='Карточка учета исполнительных документов';uk='Картка обліку виконавчих документів'");
		
		Если Пользователи.РолиДоступны("ДобавлениеИзменениеНачисленнойЗарплаты,ПолныеПрава,ЧтениеНачисленнойЗарплаты") Тогда  
			// Карточка учета исполнительных документов с оплатами.
			КомандаПечати = КомандыПечати.Добавить();
			КомандаПечати.ФункциональныеОпции = "ИспользоватьИсполнительныеЛисты";
			КомандаПечати.Идентификатор = "КарточкаУчетаИсполнительныхДокументовСОплатами";
			КомандаПечати.Представление = НСтр("ru='Карточка учета исполнительных документов с оплатами';uk='Картка обліку виконавчих документів з оплатами'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КарточкаУчетаИсполнительныхДокументовСОплатами") Тогда
		ДанныеПечатиОбъектов = Документы.ИсполнительныйЛист.ДанныеПечатиКарточкиУчетаИсполнительногоДокументаСОплатами(МассивОбъектов);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, "КарточкаУчетаИсполнительныхДокументовСОплатами", НСтр("ru='Карточка учета исполнительных документов с оплатами';uk='Картка обліку виконавчих документів з оплатами'"), КарточкаУчетаИсполнительногоДокументаСОплатами(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов, ПараметрыВывода),,,,Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция КарточкаУчетаИсполнительногоДокументаСОплатами(МассивОбъектов, ОбъектыПечати, ДанныеПечатиОбъектов, ПараметрыВывода)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИсполнительныйЛист.ПФ_MXL_КарточкаУчетаИсполнительногоДокументаСОплатами", КодЯзыкаПечать);
	
	ПервыйДокумент = Истина;
	Для Каждого ДокументСсылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ДанныеПечати = ДанныеПечатиОбъектов.Получить(ДокументСсылка);
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Шапка", ДанныеПечати));
		
		ИтогоУдержано = 0;
		Если ДанныеПечати.ТаблицаОплат.Количество() > 0 Тогда
			ДокументРезультат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
			
			Для Каждого СтрокаТаблицы Из ДанныеПечати.ТаблицаОплат Цикл
				
				ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "СтрокаТаблицы", СтрокаТаблицы));
				ИтогоУдержано = ИтогоУдержано + СтрокаТаблицы.СуммаУдержания;
				
			КонецЦикла;
			
			ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			ОбластьПодвалТаблицы.Параметры.СуммаУдержания = ИтогоУдержано;
			ДокументРезультат.Вывести(ОбластьПодвалТаблицы);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДанныеПечати.Предел) Тогда
			
			ОбластьОстаток = Макет.ПолучитьОбласть("Остаток");
			ОбластьОстаток.Параметры.Остаток = ?(ДанныеПечати.Предел - ИтогоУдержано > 0, (ДанныеПечати.Предел - ИтогоУдержано), 0);
			ДокументРезультат.Вывести(ОбластьОстаток);
			
		КонецЕсли;	
		
		ДокументРезультат.Вывести(ОбластьСПараметрами(Макет, "Подвал", ДанныеПечати));
				
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
		
		ПервыйДокумент = Ложь;
	КонецЦикла;
	
	Возврат ДокументРезультат;
	
КонецФункции

Функция ДанныеПечатиКарточкиУчетаИсполнительногоДокументаСОплатами(МассивОбъектов) Экспорт
	
	ДанныеПечатиОбъектов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("СтроковыйПараметрГрн", НСтр("ru=' грн.';uk=' грн.'"));
	Запрос.УстановитьПараметр("СтроковыйПараметрПрожиточныйМинимум", НСтр("ru=' прож.миним.';uk=' прож.мінім.'"));
	Запрос.УстановитьПараметр("СтроковыйПараметрПроцент", НСтр("ru=' %';uk=' %'"));
	Запрос.УстановитьПараметр("СтроковыйПараметрДоли", НСтр("ru=' доли';uk=' частки'"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(ИсполнительныйЛист.ДатаДействия, МЕСЯЦ) КАК Период,
	|	ИсполнительныйЛист.Организация КАК Организация,
	|	ИсполнительныйЛист.Ссылка КАК ИсполнительныйЛист,
	|	ИсполнительныйЛист.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ИсполнительныйЛист.Дата КАК Дата,
	|	ИсполнительныйЛист.Номер КАК Номер,
	|	ИсполнительныйЛист.СпособРасчета КАК СпособРасчета,
	|	ИсполнительныйЛист.Процент КАК Процент,
	|	ИсполнительныйЛист.Сумма КАК Сумма,
	|	ИсполнительныйЛист.Числитель КАК Числитель,
	|	ИсполнительныйЛист.Знаменатель КАК Знаменатель,
	|	ИсполнительныйЛист.Предел КАК Предел,
	|	ВЫБОР
	|		КОГДА ИсполнительныйЛист.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой)
	|			ТОГДА &СтроковыйПараметрГрн
	|		КОГДА ИсполнительныйЛист.ВидБазы = ЗНАЧЕНИЕ(Перечисление.ВидыБазыУдержанияПоИсполнительномуДокументу.ПрожиточныйМинимум)
	|			ТОГДА &СтроковыйПараметрПрожиточныйМинимум
	|		КОГДА ИсполнительныйЛист.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом)
	|			ТОГДА &СтроковыйПараметрПроцент
	|		КОГДА ИсполнительныйЛист.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей)
	|			ТОГДА &СтроковыйПараметрДоли
	|		ИНАЧЕ &СтроковыйПараметрГрн
	|	КОНЕЦ КАК ПорядокРасчета,
	|	ИсполнительныйЛист.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	|	ИсполнительныйЛист.РеквизитыИсполнительногоДокумента КАК РеквизитыИсполнительногоДокумента,
	|	ВЫБОР
	|		КОГДА ИсполнительныйЛист.Получатель.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ИсполнительныйЛист.Получатель.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ИсполнительныйЛист.Получатель.НаименованиеПолное КАК СТРОКА(300))
	|	КОНЕЦ КАК Получатель,
	|	ИсполнительныйЛист.АдресПолучателяПредставление КАК АдресПолучателя,
	|	ИсполнительныйЛист.Удержание,
	|	КОНЕЦПЕРИОДА(ИсполнительныйЛист.ДатаОкончания, МЕСЯЦ) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	Документ.ИсполнительныйЛист КАК ИсполнительныйЛист
	|ГДЕ
	|	ИсполнительныйЛист.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ВТСотрудники.Период
	|ПОМЕСТИТЬ ВТОтборФизическиеЛица
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, "ВТОтборФизическиеЛица");
		
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФИОПолные, АдресМестаПроживанияПредставление");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсполнительныеДокументы.Период КАК МесяцНачисления,
	|	ИсполнительныеДокументы.ИсполнительныйЛист КАК ИсполнительныйЛист,
	|	ИсполнительныеДокументы.Организация КАК Организация,
	|	ИсполнительныеДокументы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ВТКадровыеДанныеФизическихЛиц.ФИОПолные, ИсполнительныеДокументы.ФизическоеЛицо.Наименование) КАК ФИОСотрудника,
	|	ИсполнительныеДокументы.Дата КАК Дата,
	|	ИсполнительныеДокументы.Номер КАК Номер,
	|	ИсполнительныеДокументы.СпособРасчета КАК СпособРасчета,
	|	ИсполнительныеДокументы.Процент КАК Процент,
	|	ИсполнительныеДокументы.Сумма КАК Сумма,
	|	ИсполнительныеДокументы.Числитель КАК Числитель,
	|	ИсполнительныеДокументы.Знаменатель КАК Знаменатель,
	|	ИсполнительныеДокументы.Предел КАК Предел,
	|	ИсполнительныеДокументы.ПорядокРасчета КАК ПорядокРасчета,
	|	ИсполнительныеДокументы.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	|	ВЫРАЗИТЬ(ИсполнительныеДокументы.РеквизитыИсполнительногоДокумента КАК СТРОКА(500)) КАК РеквизитыИсполнительногоДокумента,
	|	ИсполнительныеДокументы.Получатель КАК Получатель,
	|	ВЫРАЗИТЬ(ИсполнительныеДокументы.АдресПолучателя КАК СТРОКА(500)) КАК ФактическийАдресПолучателя,
	|	ВЫРАЗИТЬ(ВТКадровыеДанныеФизическихЛиц.АдресМестаПроживанияПредставление КАК СТРОКА(500)) КАК АдресМестаПроживанияСотрудника
	|ИЗ
	|	ВТСотрудники КАК ИсполнительныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК ВТКадровыеДанныеФизическихЛиц
	|		ПО ИсполнительныеДокументы.ФизическоеЛицо = ВТКадровыеДанныеФизическихЛиц.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Удержания.Удержание КАК ВидРасчета
	|ПОМЕСТИТЬ ВТУникальныеУдержания
	|ИЗ
	|	ВТСотрудники КАК Удержания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УникальныеУдержания.ВидРасчета КАК ВидРасчета,
	|	УдержанияБазовыеВидыРасчета.ВидРасчета КАК БазовыйВидРасчета
	|ПОМЕСТИТЬ ВТБазовыеВидыРасчета
	|ИЗ
	|	ВТУникальныеУдержания КАК УникальныеУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Удержания.БазовыеВидыРасчета КАК УдержанияБазовыеВидыРасчета
	|		ПО УникальныеУдержания.ВидРасчета = УдержанияБазовыеВидыРасчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УникальныеУдержания.ВидРасчета КАК Удержание,
	|	Начисления.Ссылка КАК Начисление
	|ПОМЕСТИТЬ ВТНачисленияНеВходящиеВБазуУдержаний
	|ИЗ
	|	ВТУникальныеУдержания КАК УникальныеУдержания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО (НЕ 1 В
	|					(ВЫБРАТЬ ПЕРВЫЕ 1
	|						1
	|					ИЗ
	|						ПланВидовРасчета.Начисления КАК НачисленияОтбор
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТБазовыеВидыРасчета КАК БазовыеНачисленияДляУдержаний
	|							ПО
	|								Начисления.Ссылка = БазовыеНачисленияДляУдержаний.БазовыйВидРасчета
	|									И БазовыеНачисленияДляУдержаний.ВидРасчета = УникальныеУдержания.ВидРасчета
	|									И НачисленияОтбор.Ссылка = Начисления.Ссылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ВТСотрудники.Период,
	|	ВТСотрудники.ИсполнительныйЛист,
	|	ВТНачисленияНеВходящиеВБазуУдержаний.Начисление,
	|	ВТСотрудники.ДатаОкончания
	|ПОМЕСТИТЬ ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияНеВходящиеВБазуУдержаний КАК ВТНачисленияНеВходящиеВБазуУдержаний
	|		ПО ВТСотрудники.Удержание = ВТНачисленияНеВходящиеВБазуУдержаний.Удержание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НачисленияУдержанияПоСотрудникам.ПериодДействия, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
	|	ЕСТЬNULL(НачисленияУдержанияПоСотрудникам.Сумма, 0) КАК Сумма,
	|	ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.ФизическоеЛицо,
	|	ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.ИсполнительныйЛист
	|ПОМЕСТИТЬ ВТНеудерживаемыеСуммыПоСотрудникам
	|ИЗ
	|	ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам КАК ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ПО ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.ФизическоеЛицо = НачисленияУдержанияПоСотрудникам.ФизическоеЛицо
	|			И ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.Период <= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			И ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.Начисление = НачисленияУдержанияПоСотрудникам.НачислениеУдержание
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТНачисленияНеВходящиеВБазуУдержанийПоСотрудникам.ДатаОкончания >= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НачисленияУдержанияПоСотрудникам.ПериодДействия, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(НачисленияУдержанияПоСотрудникам.Сумма, 0),
	|	ВТСотрудники.ФизическоеЛицо,
	|	ВТСотрудники.ИсполнительныйЛист
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ПО ВТСотрудники.ФизическоеЛицо = НачисленияУдержанияПоСотрудникам.ФизическоеЛицо
	|			И ВТСотрудники.Период <= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			И (НЕ НачисленияУдержанияПоСотрудникам.НачислениеУдержание ССЫЛКА ПланВидовРасчета.Начисления)
	|			И (НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено))
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТСотрудники.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТСотрудники.ДатаОкончания >= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ОтработанноеВремяПоСотрудникам.ПериодДействия, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц,
	|	СУММА(ЕСТЬNULL(ОтработанноеВремяПоСотрудникам.ОтработаноДней, 0)) КАК ОтработаноДней,
	|	0 КАК СуммаНачисления,
	|	0 КАК НДФЛ,
	|	0 КАК СуммаУдержания,
	|	0 КАК НеудерживаемыеСуммы,
	|	ВТСотрудники.ИсполнительныйЛист
	|ПОМЕСТИТЬ ВТОплатыПоДокументам
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОтработанноеВремяПоСотрудникам КАК ОтработанноеВремяПоСотрудникам
	|		ПО ВТСотрудники.ФизическоеЛицо = ОтработанноеВремяПоСотрудникам.ФизическоеЛицо
	|			И ВТСотрудники.Период <= ОтработанноеВремяПоСотрудникам.ПериодДействия
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТСотрудники.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТСотрудники.ДатаОкончания >= ОтработанноеВремяПоСотрудникам.ПериодДействия
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ОтработанноеВремяПоСотрудникам.ПериодДействия, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	ВТСотрудники.ИсполнительныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.ПериодДействия, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	0,
	|	СУММА(ЕСТЬNULL(НачисленияУдержанияПоСотрудникам.Сумма, 0)),
	|	0,
	|	0,
	|	0,
	|	ВТСотрудники.ИсполнительныйЛист
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ПО ВТСотрудники.ФизическоеЛицо = НачисленияУдержанияПоСотрудникам.ФизическоеЛицо
	|			И ВТСотрудники.Период <= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			И (НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено))
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТСотрудники.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТСотрудники.ДатаОкончания >= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.ПериодДействия, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	ВТСотрудники.ИсполнительныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.ПериодДействия, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	0,
	|	0,
	|	СУММА(ЕСТЬNULL(НачисленияУдержанияПоСотрудникам.Сумма, 0)),
	|	0,
	|	0,
	|	ВТСотрудники.ИсполнительныйЛист
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
	|		ПО ВТСотрудники.ФизическоеЛицо = НачисленияУдержанияПоСотрудникам.ФизическоеЛицо
	|			И ВТСотрудники.Период <= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			И (НачисленияУдержанияПоСотрудникам.НачислениеУдержание = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛ))
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТСотрудники.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТСотрудники.ДатаОкончания >= НачисленияУдержанияПоСотрудникам.ПериодДействия
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.ПериодДействия, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	ВТСотрудники.ИсполнительныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(УдержанияПоИсполнительнымДокументам.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	0,
	|	0,
	|	0,
	|	СУММА(ЕСТЬNULL(УдержанияПоИсполнительнымДокументам.СуммаУдержания, 0)),
	|	0,
	|	ВТСотрудники.ИсполнительныйЛист
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УдержанияПоИсполнительнымДокументам КАК УдержанияПоИсполнительнымДокументам
	|		ПО ВТСотрудники.Период <= УдержанияПоИсполнительнымДокументам.Период
	|			И ВТСотрудники.ФизическоеЛицо <= УдержанияПоИсполнительнымДокументам.ФизическоеЛицо
	|			И ВТСотрудники.ИсполнительныйЛист <= УдержанияПоИсполнительнымДокументам.ИсполнительныйДокумент
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТСотрудники.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТСотрудники.ДатаОкончания >= УдержанияПоИсполнительнымДокументам.Период
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(УдержанияПоИсполнительнымДокументам.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	ВТСотрудники.ИсполнительныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ВТНеудерживаемыеСуммыПоСотрудникам.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1)),
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(ЕСТЬNULL(ВТНеудерживаемыеСуммыПоСотрудникам.Сумма, 0)),
	|	ВТСотрудники.ИсполнительныйЛист
	|ИЗ
	|	ВТСотрудники КАК ВТСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеудерживаемыеСуммыПоСотрудникам КАК ВТНеудерживаемыеСуммыПоСотрудникам
	|		ПО ВТСотрудники.Период <= ВТНеудерживаемыеСуммыПоСотрудникам.Период
	|			И ВТСотрудники.ФизическоеЛицо = ВТНеудерживаемыеСуммыПоСотрудникам.ФизическоеЛицо
	|			И (ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВТСотрудники.ДатаОкончания, МЕСЯЦ) = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТСотрудники.ДатаОкончания >= ВТНеудерживаемыеСуммыПоСотрудникам.Период
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСотрудники.ФизическоеЛицо,
	|	ВТСотрудники.ИсполнительныйЛист,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ВТНеудерживаемыеСуммыПоСотрудникам.Период, МЕСЯЦ), ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОплатыПоДокументам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТОплатыПоДокументам.Месяц КАК Месяц,
	|	СУММА(ВТОплатыПоДокументам.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(ВТОплатыПоДокументам.СуммаНачисления) КАК СуммаНачисления,
	|	СУММА(ВТОплатыПоДокументам.НДФЛ) КАК НДФЛ,
	|	СУММА(ВТОплатыПоДокументам.СуммаУдержания) КАК СуммаУдержания,
	|	СУММА(ВТОплатыПоДокументам.НеудерживаемыеСуммы) КАК НеудерживаемыеСуммы,
	|	ВТОплатыПоДокументам.ИсполнительныйЛист КАК ИсполнительныйЛист
	|ИЗ
	|	ВТОплатыПоДокументам КАК ВТОплатыПоДокументам
	|ГДЕ
	|	ВТОплатыПоДокументам.Месяц <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОплатыПоДокументам.ФизическоеЛицо,
	|	ВТОплатыПоДокументам.ИсполнительныйЛист,
	|	ВТОплатыПоДокументам.Месяц
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТОплатыПоДокументам.СуммаУдержания) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсполнительныйЛист,
	|	ФизическоеЛицо,
	|	Месяц";

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеПечати = ПараметрыПечатнойФормыКарточкиУчетаИсполнительногоДокументаСОплатами();
		
		ЗаполнитьЗначенияСвойств(ДанныеПечати, Выборка);
		
		Если Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой Тогда
			ДанныеПечати.Размер = Выборка.Сумма;
		ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом Тогда
			ДанныеПечати.Размер = Выборка.Процент;
		ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей Тогда
			ДанныеПечати.Размер = Строка(Выборка.Числитель) + " / " + Строка(Выборка.Знаменатель);
		КонецЕсли;

		Если ЗначениеЗаполнено(Выборка.ФактическийАдресПолучателя) И ЗначениеЗаполнено(Выборка.Получатель) Тогда
			ДанныеПечати.РазделительПолучателя = "; "; 
		Иначе
			ДанныеПечати.РазделительПолучателя = ""; 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.АдресМестаПроживанияСотрудника) И ЗначениеЗаполнено(Выборка.ФИОСотрудника) Тогда
			ДанныеПечати.РазделительСотрудника = "; "; 
		Иначе
			ДанныеПечати.РазделительСотрудника = ""; 
		КонецЕсли;

		ДанныеПечати.Дата = Формат(Выборка.Дата, "ДФ=""ММММ гггг""") + " " + НСтр("ru='г.';uk='р.'");
		
		ДанныеПечати.МесяцНачисления = Формат(Выборка.МесяцНачисления, "ДФ=""ММММ гггг""") + " " + НСтр("ru='г.';uk='р.'");
		
		ДанныеПечати.ДатаПечати = Формат(ТекущаяДатаСеанса(), "ДЛФ=Д");
		
		ДанныеПечатиОбъектов.Вставить(Выборка.ИсполнительныйЛист, ДанныеПечати);
		
	КонецЦикла;
	
	ВыборкаОплат = РезультатыЗапроса[7].Выбрать();
	
	Пока ВыборкаОплат.СледующийПоЗначениюПоля("ИсполнительныйЛист") Цикл
		
		НомерМесяца = 1;
		
		ДанныеПечатиПоДокументу = ДанныеПечатиОбъектов.Получить(ВыборкаОплат.ИсполнительныйЛист);
		
		ТаблицаОплатДокумента = ДанныеПечатиПоДокументу.ТаблицаОплат;
		
		РазмерУдержания = "" + ДанныеПечатиПоДокументу.Размер + ДанныеПечатиПоДокументу.ПорядокРасчета;
		
		Пока ВыборкаОплат.Следующий() Цикл
			
			НоваяСтрока = ТаблицаОплатДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаОплат);
			НоваяСтрока.НомерМесяца = НомерМесяца;
			НоваяСтрока.РазмерУдержания	= РазмерУдержания;
			
			НомерМесяца = НомерМесяца + 1;
			
		КонецЦикла; 
		
	КонецЦикла;
	
	Возврат ДанныеПечатиОбъектов;
	
КонецФункции

Функция ПараметрыПечатнойФормыКарточкиУчетаИсполнительногоДокументаСОплатами() Экспорт
	
	ПараметрыПечатнойФормы = Новый Структура;
	ПараметрыПечатнойФормы.Вставить("РеквизитыИсполнительногоДокумента");
	ПараметрыПечатнойФормы.Вставить("Получатель");
	ПараметрыПечатнойФормы.Вставить("ФактическийАдресПолучателя");
	ПараметрыПечатнойФормы.Вставить("Размер");
	ПараметрыПечатнойФормы.Вставить("ПорядокРасчета");
	ПараметрыПечатнойФормы.Вставить("Предел");
	ПараметрыПечатнойФормы.Вставить("ФИОСотрудника");
	ПараметрыПечатнойФормы.Вставить("АдресМестаПроживанияСотрудника");
	ПараметрыПечатнойФормы.Вставить("РазделительПолучателя");
	ПараметрыПечатнойФормы.Вставить("РазделительСотрудника");
	ПараметрыПечатнойФормы.Вставить("ВидИсполнительногоДокумента");
	ПараметрыПечатнойФормы.Вставить("Дата");
	ПараметрыПечатнойФормы.Вставить("Номер");
	ПараметрыПечатнойФормы.Вставить("МесяцНачисления");
	ПараметрыПечатнойФормы.Вставить("ДатаПечати");
			
	ТаблицаОплат = Новый ТаблицаЗначений;
	ТаблицаОплат.Колонки.Добавить("НомерМесяца");
	ТаблицаОплат.Колонки.Добавить("Месяц");
	ТаблицаОплат.Колонки.Добавить("ОтработаноДней");
	ТаблицаОплат.Колонки.Добавить("СуммаНачисления");
	ТаблицаОплат.Колонки.Добавить("НеудерживаемыеСуммы");
	ТаблицаОплат.Колонки.Добавить("НДФЛ");
	ТаблицаОплат.Колонки.Добавить("РазмерУдержания");
	ТаблицаОплат.Колонки.Добавить("СуммаУдержания");
	
	ПараметрыПечатнойФормы.Вставить("ТаблицаОплат", ТаблицаОплат);	
		
	Возврат ПараметрыПечатнойФормы;
	
КонецФункции

Функция ОбластьСПараметрами(Макет, ИмяОбласти, ДанныеПечати)
	
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	Область.Параметры.Заполнить(ДанныеПечати);
	
	Возврат Область;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли