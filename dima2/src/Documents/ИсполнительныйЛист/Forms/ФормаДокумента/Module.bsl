
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	РасчетЗарплатыРасширенныйФормы.ДокументыПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный", 
			"Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		ЗаполнитьУдержаниеПоИсполнительномуЛисту();
	КонецЕсли;
	
	ИнициализацияФормы();
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "Печать".
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	ДополнитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПрекратитьУдержанияПоДостижениюПредела = Объект.Предел > 0;
	ИспользоватьПлатежногоАгента = ЗначениеЗаполнено(Объект.ПлатежныйАгент);
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИспользоватьПлатежногоАгента Тогда
		
		Если Не ЗначениеЗаполнено(Объект.ПлатежныйАгент) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Поле «Платежный агент» не заполнено.';uk='Поле «Платіжний агент» не заповнено.'"), , "Объект.ПлатежныйАгент", , Отказ);
		КонецЕсли;
			
		Если Не ЗначениеЗаполнено(Объект.ТарифПлатежногоАгента) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Поле «Тариф платежного агента» не заполнено.';uk='Поле «Тариф платіжного агента» не заповнено.'"), , "Объект.ТарифПлатежногоАгента", , Отказ);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособРасчетаПриИзменении(Элемент)
	
	Если Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой") Тогда
		
		Объект.Сумма = Сумма;
		Объект.Процент = 0;
		Объект.Числитель = 0;
		Объект.Знаменатель = 0;
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(Объект.ВидБазы) Тогда
			
			Объект.ВидБазы = ПредопределенноеЗначение("Перечисление.ВидыБазыУдержанияПоИсполнительномуДокументу.Заработок");
			УстановитьДоступностьПараметровНастройкиБазы(ЭтаФорма);
			
		КонецЕсли; 
		
		Если Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом") Тогда
		
			Объект.Сумма = 0;
			Объект.Процент = Процент;
			Объект.Числитель = 0;
			Объект.Знаменатель = 0;
			
		Иначе
			
			Объект.Сумма = 0;
			Объект.Процент = 0;
			Объект.Числитель = Макс(Числитель, 1);
			Объект.Знаменатель = Макс(Знаменатель, 1);
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьВидаБазы(ЭтаФорма);
	УстановитьНастройкиЗаполненияРазмераУдержания(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидБазыПриИзменении(Элемент)
	УстановитьДоступностьПараметровНастройкиБазы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьУдержанияПоДостижениюПределаПриИзменении(Элемент)
	УстановитьДоступностьПредела(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПлатежногоАгентаПриИзменении(Элемент)
	
	УстановитьДоступностьПлатежногоАгента(ЭтаФорма);
	
	Если ИспользоватьПлатежногоАгента Тогда
		ЗаполнитьУдержаниеВознагражденияПлатежногоАгента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныйАгентПриИзменении(Элемент)
	УстановитьДоступностьПлатежногоАгента(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура АдресПолучателяПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("АдресПолучателяПредставлениеЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"),
		Объект.АдресПолучателя);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПолучателяПредставлениеЗавершениеВыбора(РезультатОткрытияФормы, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(РезультатОткрытияФормы)<>Тип("Структура") Тогда
		// не было изменений в данных
		Возврат;
	КонецЕсли;
	
	Объект.АдресПолучателя = РезультатОткрытияФормы.КонтактнаяИнформация;
	Объект.АдресПолучателяПредставление = РезультатОткрытияФормы.Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидИсполнительногоДокументаПриИзменении(Элемент)
	
	//УстановитьЗаголовокГруппыОтображениеВПечатныхФормах(ЭтаФорма);
	Элементы.ДетиГруппа.Видимость = УстановитьВидимостьТабличнойЧастиДети();
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	Объект.УвеличиватьУдержанияДоМинимума = Ложь;
	
КонецПроцедуры

&НаСервере
Функция УстановитьВидимостьТабличнойЧастиДети()
	
	Возврат Объект.ВидИсполнительногоДокумента = ПредопределенноеЗначение("Перечисление.ВидыИсполнительныхДокументов.СоглашениеОбУплатеАлиментов")

КонецФункции	

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	
	Сумма = Объект.Сумма;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПриИзменении(Элемент)
	
	Процент = Объект.Процент;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧислительПриИзменении(Элемент)
	
	Числитель = Объект.Числитель;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗнаменательПриИзменении(Элемент)
	
	Знаменатель = Объект.Знаменатель;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ИнициализацияФормы()
	
	Сумма = Объект.Сумма;
	Процент = Объект.Процент;
	Числитель = Объект.Числитель;
	Знаменатель = Объект.Знаменатель;
	
	УстановитьДоступностьВидаБазы(ЭтаФорма);
	УстановитьДоступностьПараметровНастройкиБазы(ЭтаФорма);
	УстановитьНастройкиЗаполненияРазмераУдержания(ЭтаФорма);
	УстановитьДоступностьПредела(ЭтаФорма);
	УстановитьДоступностьПлатежногоАгента(ЭтаФорма);
	УстановитьВидимостьТЧДети(ЭтаФорма);	
	ДополнитьФорму();	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьТЧДети(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	Элементы.ДетиГруппа.Видимость = (Объект.ВидИсполнительногоДокумента = ПредопределенноеЗначение("Перечисление.ВидыИсполнительныхДокументов.СоглашениеОбУплатеАлиментов"));
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьУдержаниеПоИсполнительномуЛисту()
	
	// Заполняет удержание единственным значением, если оно единственное.
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьУдержаниеВФормеДокументаПоРоли(
		ЭтаФорма, Объект.Удержание, Перечисления.КатегорииУдержаний.ИсполнительныйЛист);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУдержаниеВознагражденияПлатежногоАгента()
	
	// Заполнение удержания вознаграждения.
	РасчетЗарплатыРасширенныйФормы.ЗаполнитьУдержаниеВФормеДокументаПоРоли(
		ЭтаФорма, Объект.УдержаниеВознагражденияПлатежногоАгента, Перечисления.КатегорииУдержаний.ВознаграждениеПлатежногоАгента);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВидаБазы(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	БазаТребуется = Ложь;
	Если Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом")
		Или Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей") Тогда
		
		БазаТребуется = Истина;
		
	КонецЕсли;
	
	Если БазаТребуется И Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом") Тогда
		Элементы.ВидБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.ВидБазыПроцентомСтраница;
	Иначе
		Элементы.ВидБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.БазаНеТребуетсяПроцентомСтраница;
	КонецЕсли;
	
	Если БазаТребуется И Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей") Тогда
		Элементы.ВидБазыДолейСтраницы.ТекущаяСтраница = Элементы.ВидБазыДолейСтраница;
	Иначе
		Элементы.ВидБазыДолейСтраницы.ТекущаяСтраница = Элементы.БазаНеТребуетсяДолейСтраница;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПараметровНастройкиБазы(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Объект.ВидБазы = ПредопределенноеЗначение("Перечисление.ВидыБазыУдержанияПоИсполнительномуДокументу.Заработок") Тогда
		Элементы.ПараметрыПоВидуБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.ЗаработокПроцентомСтраница;
		Элементы.ПараметрыПоВидуБазыДолейСтраницы.ТекущаяСтраница = Элементы.ЗаработокДолейСтраница;
	Иначе	
		Элементы.ПараметрыПоВидуБазыПроцентомСтраницы.ТекущаяСтраница = Элементы.ПрожиточныйМинимумПроцентомСтраница;
		Элементы.ПараметрыПоВидуБазыДолейСтраницы.ТекущаяСтраница = Элементы.ПрожиточныйМинимумДолейСтраница;
	КонецЕсли;
	
	ДоступностьДостиженияПредела = Не Объект.ВидБазы = ПредопределенноеЗначение("Перечисление.ВидыБазыУдержанияПоИсполнительномуДокументу.ПрожиточныйМинимум");
	Если Не ДоступностьДостиженияПредела И Форма.ПрекратитьУдержанияПоДостижениюПредела Тогда
		Форма.ПрекратитьУдержанияПоДостижениюПредела = Ложь;
		УстановитьДоступностьПредела(Форма);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ПрекратитьУдержанияПоДостижениюПредела", "Доступность", ДоступностьДостиженияПредела);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьНастройкиЗаполненияРазмераУдержания(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ДоступностьВводаСуммы = Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.ФиксированнойСуммой");
	ДоступностьВводаПроцента = Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Процентом");
	ДоступностьВводаДолей = Объект.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчетаУдержанияПоИсполнительномуДокументу.Долей");
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерУдержанияСуммойГруппа",
		"Доступность",
		ДоступностьВводаСуммы);

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерУдержанияПроцентомГруппа",
		"Доступность",
		ДоступностьВводаПроцента);

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РазмерУдержанияДолейГруппа",
		"Доступность",
		ДоступностьВводаДолей);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПредела(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.Предел.Доступность = Форма.ПрекратитьУдержанияПоДостижениюПредела;
	Элементы.Предел.АвтоОтметкаНезаполненного = Форма.ПрекратитьУдержанияПоДостижениюПредела;
	Элементы.Предел.ОтметкаНезаполненного = Объект.Предел > 0;
	
	Если Не Форма.ПрекратитьУдержанияПоДостижениюПредела Тогда
		Объект.Предел = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьПлатежногоАгента(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ПлатежныйАгент.Доступность = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ПлатежныйАгент.АвтоОтметкаНезаполненного = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ПлатежныйАгент.ОтметкаНезаполненного = ЗначениеЗаполнено(Объект.ПлатежныйАгент);
	
	Элементы.ТарифПлатежногоАгента.Доступность = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ТарифПлатежногоАгента.АвтоОтметкаНезаполненного = Форма.ИспользоватьПлатежногоАгента;
	Элементы.ТарифПлатежногоАгента.ОтметкаНезаполненного = ЗначениеЗаполнено(Объект.ПлатежныйАгент);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УдержаниеВознагражденияПлатежногоАгента", "Доступность", Форма.ИспользоватьПлатежногоАгента);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УдержаниеВознагражденияПлатежногоАгента", "АвтоОтметкаНезаполненного", Форма.ИспользоватьПлатежногоАгента);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УдержаниеВознагражденияПлатежногоАгента", "ОтметкаНезаполненного", ЗначениеЗаполнено(Объект.УдержаниеВознагражденияПлатежногоАгента));
	
	Если Не Форма.ИспользоватьПлатежногоАгента Тогда
		Объект.ПлатежныйАгент = Неопределено;
		Объект.ТарифПлатежногоАгента = Неопределено;
		Объект.УдержаниеВознагражденияПлатежногоАгента = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДетиФизическоеЛицоПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Дети.ТекущиеДанные;
	ТекСтрока.ДатаРождения = ФизическоеЛицоДатаРождения(ТекСтрока.ФизическоеЛицо);
	ПросчитатьДатуОкончания(ТекСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьДатуОкончания(ТекСтрока)
	
	Если ТекСтрока.ДатаРождения <> Дата("00010101") Тогда
		ТекСтрока.ДатаОкончания = ДобавитьМесяц(ТекСтрока.ДатаРождения, 216); //18 лет в месяцах
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФизическоеЛицоДатаРождения(ФизическоеЛицо)

	Возврат ФизическоеЛицо.ДатаРождения;
	
КонецФункции

&НаКлиенте
Процедура ДетиДатаРожденияПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Дети.ТекущиеДанные;
	ПросчитатьДатуОкончания(ТекСтрока);
	
КонецПроцедуры

//&НаКлиентеНаСервереБезКонтекста
//Процедура УстановитьЗаголовокГруппыОтображениеВПечатныхФормах(Форма)
//	
//	Если НЕ ЗначениеЗаполнено(Форма.Объект.ВидИсполнительногоДокумента) Тогда
//		
//		ЗаголовокГруппы = НСтр("ru='Не задан вид исполнительного документа'");
//	
//	Иначе
//		
//		ЗаголовокГруппы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
//			НСтр("ru='В печатных формах отображается как ""%1""'"),
//			Форма.Объект.ВидИсполнительногоДокумента);
//			
//		Если ПустаяСтрока(Форма.Объект.РеквизитыИсполнительногоДокумента) Тогда
//			ЗаголовокГруппы = ЗаголовокГруппы + "; " + НСтр("ru='Не заданы реквизиты документа (номер, кем и когда выдан)'");
//		Иначе
//			ЗаголовокГруппы = ЗаголовокГруппы + "; " + Форма.Объект.РеквизитыИсполнительногоДокумента;
//		КонецЕсли;
//		
//	КонецЕсли;
//	
//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
//		Форма.Элементы,
//		"ОтображениеВПечатныхФормахГруппа",
//		"ЗаголовокСвернутогоОтображения",
//		ЗаголовокГруппы);
//	
//КонецПроцедуры

#КонецОбласти

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ВидИсполнительногоДокумента", НСтр("ru='вида испольнительного документа';uk='виду виконавчого документу'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация", НСтр("ru='организации';uk='організації'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Сотрудник", НСтр("ru='сотрудника';uk='співробітника'")));
	
	Возврат Массив
	
КонецФункции

// Подключение универсальных механизмов.
&НаСервере
Процедура ДополнитьФорму(ОтложенноеИзменение = Неопределено, КонтролируемыеПоля = Неопределено, ОписаниеПанелиВычеты = Неопределено, ОписаниеКлючевыхРеквизитов = Неопределено, ТаблицыОчищаемыеПриИзменении = Неопределено)
	
	// Создание элементов.
	ЗарплатаКадрыРасширенный.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма, ОписаниеКлючевыхРеквизитов);
	ЗарплатаКадрыРасширенныйКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма, , ОписаниеКлючевыхРеквизитов, ТаблицыОчищаемыеПриИзменении);
	
КонецПроцедуры

// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	Массив = Новый Массив;
	Массив.Добавить("Объект.Дети");
	Возврат Массив
КонецФункции 

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	Объект.УвеличиватьУдержанияДоМинимума = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	Объект.УвеличиватьУдержанияДоМинимума = Ложь;
	
КонецПроцедуры
