#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	Если ТипОснования = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
		НематериальныйАктив = ДанныеЗаполнения;
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПринятиеКУчетуНМА") Тогда
		ЗаполнитьПоДокументуРеглУчета(ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	НематериальныйАктив = Неопределено;
	ДокументОснование = Неопределено;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	НачислятьАмортизацию = (ПорядокУчета=Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию);
	АмортизацияПоНаработке = (МетодНачисленияАмортизации=Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции);
	
	Если НачислятьАмортизацию И Не АмортизацияПоНаработке Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ОбъемНаработки");
	КонецЕсли;
	
	Если Не НачислятьАмортизацию Тогда
		МассивНепроверяемыхРеквизитов.Добавить("МетодНачисленияАмортизации");
		МассивНепроверяемыхРеквизитов.Добавить("СчетАмортизации");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяРасходов");
		МассивНепроверяемыхРеквизитов.Добавить("АналитикаРасходов");
		МассивНепроверяемыхРеквизитов.Добавить("ПоказательНаработки");
		МассивНепроверяемыхРеквизитов.Добавить("ОбъемНаработки");
	КонецЕсли;
	
	Если Не НачислятьАмортизацию Или АмортизацияПоНаработке Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СрокИспользования");
	КонецЕсли;
	
	Если Не НачислятьАмортизацию Или МетодНачисленияАмортизации<>Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КоэффициентУскорения");
	КонецЕсли;
	
	Если ПорядокУчета<>Перечисления.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетРасходов");
	КонецЕсли;
	
	Если НачислятьАмортизацию Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			ЭтотОбъект, , МассивНепроверяемыхРеквизитов, Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ОчиститьЗаписатьДвижения(Движения, "Международный, НематериальныеАктивыМеждународныйУчет");
	
	МеждународныйУчетВнеоборотныеАктивы.ПроверитьВозможностьСменыСостоянияНМА(
		ЭтотОбъект,
		НематериальныйАктив,
		Перечисления.ВидыСостоянийНМА.ПринятКУчету,
		Отказ);
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ПринятиеКУчетуНМАМеждународныйУчет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение
	Для Каждого ТаблицаДвижений Из ДополнительныеСвойства.ТаблицыДляДвижений Цикл
		ПроведениеСервер.ОтразитьДвижения(ТаблицаДвижений.Значение, Движения[ТаблицаДвижений.Ключ], Отказ);
	КонецЦикла;
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуРеглУчета(ДанныеЗаполнения)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПринятиеКУчетуНМА.Ссылка КАК ДокументОснование,
		|	ПринятиеКУчетуНМА.Организация КАК Организация,
		|	ПринятиеКУчетуНМА.Подразделение КАК Подразделение,
		|	ПринятиеКУчетуНМА.НематериальныйАктив КАК НематериальныйАктив,
		|	ПринятиеКУчетуНМА.СпособНачисленияАмортизацииБУ КАК МетодНачисленияАмортизации,
		|	ПринятиеКУчетуНМА.СрокИспользованияБУ КАК СрокИспользования,
		|	ПринятиеКУчетуНМА.ОбъемНаработкиБУ КАК ОбъемНаработки
		|ИЗ
		|	Документ.ПринятиеКУчетуНМА КАК ПринятиеКУчетуНМА
		|ГДЕ
		|	ПринятиеКУчетуНМА.Ссылка = &Ссылка"
	);
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Ответственный, Подразделение);
	
	Если ЗначениеЗаполнено(НематериальныйАктив) Тогда
		МеждународныйУчетВнеоборотныеАктивы.ПроверитьВозможностьСменыСостоянияНМА(
			ЭтотОбъект,
			НематериальныйАктив,
			Перечисления.ВидыСостоянийНМА.ПринятКУчету);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли