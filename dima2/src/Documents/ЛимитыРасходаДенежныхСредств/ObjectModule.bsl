#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//++ НЕ УТ

Процедура ЗаполнитьПоДаннымБюджетирования(МодельБюджетирования) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МоделиБюджетирования.Ссылка.СценарийДляЗаполненияЛимитовРасходаДС КАК Сценарий,
	|	МоделиБюджетирования.СтатьяБюджетов
	|ПОМЕСТИТЬ Отбор
	|ИЗ
	|	Справочник.МоделиБюджетирования.СтатьиБюджетовДляЗаполненияЛимитовРасходаДС КАК МоделиБюджетирования
	|ГДЕ
	|	МоделиБюджетирования.Ссылка = &МодельБюджетирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыБюджетовОбороты.СтатьяБюджетов,
	|	ОборотыБюджетовОбороты.Аналитика1,
	|	ОборотыБюджетовОбороты.Аналитика2,
	|	ОборотыБюджетовОбороты.Аналитика3,
	|	ОборотыБюджетовОбороты.Аналитика4,
	|	ОборотыБюджетовОбороты.Аналитика5,
	|	ОборотыБюджетовОбороты.Аналитика6,
	|	ОборотыБюджетовОбороты.СуммаУпрОборот КАК Сумма
	|ПОМЕСТИТЬ ОборотыБюджетов
	|ИЗ
	|	РегистрНакопления.ОборотыБюджетов.Обороты(
	|			,
	|			,
	|			,
	|			ПериодПланирования МЕЖДУ &НачалоПериода И &КонецПериода
	|				И (Сценарий, СтатьяБюджетов) В
	|					(ВЫБРАТЬ
	|						Отбор.Сценарий,
	|						Отбор.СтатьяБюджетов
	|					ИЗ
	|						Отбор КАК Отбор)
	|				И (&БезОтбораПоОрганизации
	|					ИЛИ Организация = &Организация)
	|				И (&БезОтбораПоПодразделению
	|					ИЛИ Подразделение = &Подразделение)) КАК ОборотыБюджетовОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОборотыБюджетовОбороты.СтатьяБюджетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СтатьиБюджетов.ВидАналитики1 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика1
	|		КОГДА СтатьиБюджетов.ВидАналитики2 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика2
	|		КОГДА СтатьиБюджетов.ВидАналитики3 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика3
	|		КОГДА СтатьиБюджетов.ВидАналитики4 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика4
	|		КОГДА СтатьиБюджетов.ВидАналитики5 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика5
	|		КОГДА СтатьиБюджетов.ВидАналитики6 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика6
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ИСТИНА КАК ЕстьЛимит,
	|	СУММА(ОборотыБюджетов.Сумма) КАК Сумма
	|ИЗ
	|	ОборотыБюджетов КАК ОборотыБюджетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиБюджетов КАК СтатьиБюджетов
	|		ПО ОборотыБюджетов.СтатьяБюджетов = СтатьиБюджетов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СтатьиБюджетов.ВидАналитики1 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика1
	|		КОГДА СтатьиБюджетов.ВидАналитики2 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика2
	|		КОГДА СтатьиБюджетов.ВидАналитики3 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика3
	|		КОГДА СтатьиБюджетов.ВидАналитики4 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика4
	|		КОГДА СтатьиБюджетов.ВидАналитики5 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика5
	|		КОГДА СтатьиБюджетов.ВидАналитики6 = &СтатьяДвиженияДенежныхСредств
	|			ТОГДА ОборотыБюджетов.Аналитика6
	|	КОНЕЦ";
	Запрос.УстановитьПараметр("МодельБюджетирования", МодельБюджетирования);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", ПланыВидовХарактеристик.АналитикиСтатейБюджетов.СтатьиДвиженияДенежныхСредств);
	Запрос.УстановитьПараметр("БезОтбораПоОрганизации", Не ЗначениеЗаполнено(Организация));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("БезОтбораПоПодразделению", Не ЗначениеЗаполнено(Подразделение));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Лимиты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ЛимитыРасходаДенежныхСредств.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Движения по регистрам
	ДенежныеСредстваСервер.ОтразитьЛимитыРасходаДенежныхСредств(ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("Лимиты.Сумма");
	
	ПроверитьЗаполнениеЛимитов(Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Или Не ДанныеЗаполнения.Свойство("ПериодДействия") Тогда
		Период = НачалоМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПроверитьЗаполнениеЛимитов(Отказ)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаЛимиты.НомерСтроки,
	|	ТаблицаЛимиты.СтатьяДвиженияДенежныхСредств
	|ПОМЕСТИТЬ ВтТаблицаЛимиты
	|ИЗ
	|	&ТаблицаЛимиты КАК ТаблицаЛимиты
	|ГДЕ
	|	ТаблицаЛимиты.ЕстьЛимит
	|	И ТаблицаЛимиты.Сумма = 0
	|;
	|
	|///////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЛимиты.НомерСтроки
	|ИЗ
	|	ВтТаблицаЛимиты КАК ТаблицаЛимиты");
	Запрос.УстановитьПараметр("ТаблицаЛимиты", ЭтотОбъект.Лимиты.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Лимит"" в строке %1 списка ""Лимиты""';uk='Не заповнена колонка ""Ліміт"" в рядку %1 списку ""Ліміти""'");
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Лимиты", Выборка.НомерСтроки, "Сумма");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, "Объект", Отказ);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли