#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании);
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВозвратСырьяДавальцу) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВозвратСырьяДавальцу.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ВозвратСырьяДавальцу);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводствоИзДавальческогоСырья";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


#Область ЗаполнениеТЧ

// Формирует результат запроса по непоставленной части заказов
//
// Параметры:
//	ДанныеОтбора      - Структура - поля, по которым будут отобраны остатки заказов
//	СкладПоступления  - СправочникСсылка.Склады - склад, по которому будут отобраны остатки заказов
//	МассивЗаказов     - Массив - заказы, по которым будут отобраны остатки
//	ДокументОснование - ДокументСсылка.ПоступлениеСырьяОтДавальца - поступление, но основании которой необходимо подобрать остатки полученных товаров
//
// Вовращаемое значение:
//	Результат запроса - результат запроса по непоставленной части заказов
//
Функция ПолучитьРезультатЗапросаПоОстаткамЗаказов(ПараметрыЗаполнения,
	                                              МассивЗаказов = Неопределено,
	                                              ДокументОснование = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивЗаказов",			МассивЗаказов);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу",		МассивЗаказов <> Неопределено);
	Запрос.УстановитьПараметр("ДокументОснование",		ДокументОснование);
	Запрос.УстановитьПараметр("КорректироватьСостав",	ЗначениеЗаполнено(ДокументОснование));
	Запрос.УстановитьПараметр("Партнер",				ПараметрыЗаполнения.Партнер);
	Запрос.УстановитьПараметр("Контрагент",				ПараметрыЗаполнения.Контрагент);
	Запрос.УстановитьПараметр("Договор",				ПараметрыЗаполнения.Договор);
	Запрос.УстановитьПараметр("Организация",			ПараметрыЗаполнения.Организация);
	Запрос.УстановитьПараметр("Регистратор",			ПараметрыЗаполнения.Ссылка);
	Запрос.УстановитьПараметр("Валюта",					ПараметрыЗаполнения.Валюта);
	Запрос.УстановитьПараметр("СкладОтгрузки",			ПараметрыЗаполнения.Склад);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",	Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья);
	Запрос.УстановитьПараметр("ВозвратТары",			ПараметрыЗаполнения.ВозвратПринятойМногооборотнойТары);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.ЗаказДавальца                 КАК ЗаказДавальца,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК Аналитика,
	|	СУММА(ТаблицаТовары.Количество)				КАК Количество,
	|	СУММА(ТаблицаТовары.Сумма)					КАК Сумма
	|
	|// Таблица со списком номенклатуры из поступления
	|ПОМЕСТИТЬ ВтКорректировкаСостава
	|
	|ИЗ
	|	Документ.ПоступлениеСырьяОтДавальца.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&КорректироватьСостав И ТаблицаТовары.Ссылка = &ДокументОснование
	|	Или Не &КорректироватьСостав И ВЫБОР КОГДА &ОтобратьПоЗаказу ТОГДА
	|					ТаблицаТовары.ЗаказДавальца В (&МассивЗаказов)
	|				ИНАЧЕ
	|					ТаблицаТовары.ЗаказДавальца.Партнер		= &Партнер
	|					И ТаблицаТовары.ЗаказДавальца.Контрагент	= &Контрагент
	|					И ТаблицаТовары.ЗаказДавальца.Договор		= &Договор
	|					И ТаблицаТовары.ЗаказДавальца.Организация	= &Организация
	|					И ТаблицаТовары.ЗаказДавальца.Валюта		= &Валюта
	|				КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказДавальца,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛОЖЬ				КАК ВидЗапасовТары,
	|	ВидыЗапасов.Ссылка	КАК ВидЗапасов,
	|	Назначения.Заказ	КАК ЗаказДавальца,
	|	Назначения.Ссылка	КАК Назначение
	|ПОМЕСТИТЬ ВидыЗапасов
	|
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|
	|		// Отберем только те заказы, которые соответствуют выбранным реквизитам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.ЗаказДавальца КАК ЗаказДавальца
	|		ПО
	|			Назначения.Заказ = ЗаказДавальца.Ссылка
	|			И	ВЫБОР КОГДА &ОтобратьПоЗаказу ТОГДА
	|					ЗаказДавальца.Ссылка В (&МассивЗаказов)
	|				ИНАЧЕ
	|					ЗаказДавальца.Партнер		= &Партнер
	|					И ЗаказДавальца.Контрагент	= &Контрагент
	|					И ЗаказДавальца.Договор		= &Договор
	|					И ЗаказДавальца.Организация	= &Организация
	|					И ЗаказДавальца.Валюта		= &Валюта
	|				КОНЕЦ
	|	ПО
	|		ВидыЗапасов.Назначение = Назначения.Ссылка
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И Не ВидыЗапасов.ПометкаУдаления
	|	И	(ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца))
	|			ИЛИ
	|		(&ВозвратТары И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА											КАК ВидЗапасовТары,
	|	ПоступлениеТовары.ВидЗапасов					КАК ВидЗапасов,
	|	ДанныеЗаказа.Ссылка								КАК ЗаказДавальца,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)	КАК Назначение
	|
	|ИЗ
	|	Документ.ПоступлениеСырьяОтДавальца.Товары КАК ПоступлениеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.ЗаказДавальца КАК ДанныеЗаказа
	|	ПО
	|		ПоступлениеТовары.ЗаказДавальца = ДанныеЗаказа.Ссылка
	|
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &ОтобратьПоЗаказу ТОГДА
	|			ДанныеЗаказа.Ссылка В (&МассивЗаказов)
	|		ИНАЧЕ
	|			ДанныеЗаказа.Партнер		= &Партнер
	|			И ДанныеЗаказа.Контрагент	= &Контрагент
	|			И ДанныеЗаказа.Договор		= &Договор
	|			И ДанныеЗаказа.Организация	= &Организация
	|			И ДанныеЗаказа.Валюта		= &Валюта
	|	КОНЕЦ
	|	И ПоступлениеТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	ЗаказДавальца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеСырья.ЗаказДавальца	КАК ЗаказДавальца,
	|	ПоступлениеСырья.Ссылка			КАК Ссылка
	|ПОМЕСТИТЬ ДокументыПоступления
	|
	|ИЗ
	|	Документ.ПоступлениеСырьяОтДавальца КАК ПоступлениеСырья
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ПоступлениеСырья.Проведен
	|		И ПоступлениеСырья.ЗаказДавальца = ВидыЗапасов.ЗаказДавальца
	|ГДЕ
	|	&ВозвратТары
	|	И (НЕ &КорректироватьСостав ИЛИ ПоступлениеСырья.Ссылка = &ДокументОснование)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.ВидЗапасовТары	КАК ВидЗапасовТары,
	|	ТаблицаЗаказы.ВидЗапасов		КАК ВидЗапасов,
	|	ТаблицаЗаказы.Назначение		КАК Назначение,
	|	ТаблицаЗаказы.ЗаказДавальца		КАК ЗаказДавальца,
	|	ТаблицаЗаказы.Аналитика			КАК Аналитика,
	|	СУММА(ТаблицаЗаказы.Количество)	КАК Количество
	|
	|ПОМЕСТИТЬ ТаблицаОстатки
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВидыЗапасов.ВидЗапасовТары					КАК ВидЗапасовТары,
	|		ВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|		ВидыЗапасов.Назначение						КАК Назначение,
	|		ВидыЗапасов.ЗаказДавальца					КАК ЗаказДавальца,
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры	КАК Аналитика,
	|		ОстаткиТоваров.КоличествоОстаток			КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(,
	|				ВидЗапасов В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Т.ВидЗапасов
	|					ИЗ
	|						ВидыЗапасов КАК Т)) КАК ОстаткиТоваров
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВидыЗапасов КАК ВидыЗапасов
	|		ПО
	|			ОстаткиТоваров.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВидыЗапасов.ВидЗапасовТары					КАК ВидЗапасовТары,
	|		ВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|		ВидыЗапасов.Назначение						КАК Назначение,
	|		ВидыЗапасов.ЗаказДавальца					КАК ЗаказДавальца,
	|		ДвиженияТоваров.АналитикаУчетаНоменклатуры	КАК Аналитика,
	|		ВЫБОР КОГДА ДвиженияТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ДвиженияТоваров.Количество
	|		ИНАЧЕ
	|			ДвиженияТоваров.Количество
	|		КОНЕЦ										КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ДвиженияТоваров
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВидыЗапасов КАК ВидыЗапасов
	|		ПО
	|			ДвиженияТоваров.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|
	|	ГДЕ
	|		ДвиженияТоваров.Регистратор = &Регистратор
	|		И ДвиженияТоваров.Активность) КАК ТаблицаЗаказы
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаЗаказы.ВидЗапасовТары,
	|		ТаблицаЗаказы.ВидЗапасов,
	|		ТаблицаЗаказы.Назначение,
	|		ТаблицаЗаказы.ЗаказДавальца,
	|		ТаблицаЗаказы.Аналитика
	|
	|	ИМЕЮЩИЕ
	|		СУММА(ТаблицаЗаказы.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеСырья.ЗаказДавальца	КАК ЗаказДавальца,
	|	Тара.Номенклатура				КАК Номенклатура,
	|	Тара.Характеристика				КАК Характеристика,
	|	Тара.ДокументПоступления		КАК ДокументПоступления,
	|	Тара.КоличествоОстаток			КАК Количество,
	|	Тара.СуммаОстаток				КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПринятаяВозвратнаяТара.Остатки(,
	|			&ВозвратТары
	|			И ДокументПоступления В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Т.Ссылка
	|				ИЗ
	|					ДокументыПоступления КАК Т)) КАК Тара
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДокументыПоступления КАК ПоступлениеСырья
	|	ПО
	|		Тара.ДокументПоступления = ПоступлениеСырья.Ссылка
	|
	|ГДЕ
	|	Тара.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеСырья.ЗаказДавальца,
	|	Тара.Номенклатура,
	|	Тара.Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Аналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ									КАК ЭтоТара,
	|	Аналитики.Номенклатура.ТипНоменклатуры	КАК ТипНоменклатуры,
	|	ТаблицаОстатки.ЗаказДавальца			КАК ЗаказДавальца,
	|	ТаблицаОстатки.Аналитика				КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатки.ВидЗапасов				КАК ВидЗапасов,
	|	ТаблицаОстатки.Назначение				КАК Назначение,
	|	ТаблицаОстатки.Количество				КАК Количество,
	|	ТаблицаОстатки.Количество				КАК КоличествоУпаковок,
	|	Аналитики.Номенклатура					КАК Номенклатура,
	|	Аналитики.Характеристика				КАК Характеристика,
	|	Аналитики.Склад							КАК Склад,
	|	Аналитики.Серия							КАК Серия,
	|	ЕСТЬNULL(СоставСырья.Количество, 0)		КАК МаксКоличество,
	|	ЕСТЬNULL(СоставСырья.Сумма, 0)			КАК МаксСумма
	|
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитики
	|	ПО
	|		ТаблицаОстатки.Аналитика = Аналитики.КлючАналитики
	|		И Аналитики.Склад = &СкладОтгрузки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКорректировкаСостава КАК СоставСырья
	|	ПО
	|		ТаблицаОстатки.Аналитика = СоставСырья.Аналитика
	|		И ТаблицаОстатки.ЗаказДавальца = СоставСырья.ЗаказДавальца
	|
	|ГДЕ
	|	НЕ (ТаблицаОстатки.ВидЗапасовТары И Аналитики.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ (&КорректироватьСостав И СоставСырья.Аналитика ЕСТЬ NULL)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказДавальца,
	|	Аналитики.Номенклатура,
	|	Аналитики.Характеристика
	|";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

// Заполняет таблицу товаров по данным отбора или массиву заказов
//
// Параметры:
//	ДанныеОтбора      - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//	Товары            - ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки заказов
//	МассивЗаказов     - Массив - заказы, по которым будут отобраны остатки
//	ДокументОснование - ДокументСсылка.ПоступлениеСырьяОтДавальца - поступление, но основании которой необходимо подобрать остатки полученных товаров
//
Процедура ЗаполнитьПоОстаткамЗаказов(ПараметрыЗаполнения,
	                                 Товары,
	                                 МассивЗаказов = Неопределено,
	                                 ДокументОснование = Неопределено) Экспорт
	
	// Данные по остаткам товаров заказа.
	ПакетРезультатов = ПолучитьРезультатЗапросаПоОстаткамЗаказов(
		ПараметрыЗаполнения,
		МассивЗаказов,
		ДокументОснование);
	
	ВыборкаТовары = ПакетРезультатов[ПакетРезультатов.ВГраница()].Выбрать();
	
	Если ПараметрыЗаполнения.ВозвратПринятойМногооборотнойТары Тогда
		Тара = ПакетРезультатов[ПакетРезультатов.ВГраница() - 1].Выгрузить();
		Структураотбора = Новый Структура("ЗаказДавальца, Номенклатура, Характеристика");
		МассивСтрокКУдалению = Новый Массив;
	КонецЕсли;
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		// Заполним документ поступления для возвратной тары
		Если ПараметрыЗаполнения.ВозвратПринятойМногооборотнойТары
			И ВыборкаТовары.ЭтоТара
			И Тара.Количество() Тогда
			
			ЗаполнитьЗначенияСвойств(Структураотбора, ВыборкаТовары);
			СтрокиСТарой	= Тара.НайтиСтроки(Структураотбора);
			КРаспределению	= ВыборкаТовары.КоличествоУпаковок;
			
			Для Каждого СтрокаТары из СтрокиСТарой Цикл
				
				Если КРаспределению = 0 Тогда
					Прервать;
				КонецЕсли;
				
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
				
				НоваяСтрока.КоличествоУпаковок = Мин(КРаспределению, СтрокаТары.Количество);
				НоваяСтрока.Количество = НоваяСтрока.КоличествоУпаковок;
				Если НоваяСтрока.Количество = СтрокаТары.Количество Тогда
					НоваяСтрока.Сумма = СтрокаТары.Сумма;
				Иначе
					НоваяСтрока.Сумма = СтрокаТары.Сумма * НоваяСтрока.Количество / СтрокаТары.Количество;
				КонецЕсли;
				НоваяСтрока.Цена = Окр(СтрокаТары.Сумма / НоваяСтрока.Количество, 2);
				НоваяСтрока.ДокументПоступления = СтрокаТары.ДокументПоступления;
				
				КРаспределению			= КРаспределению - НоваяСтрока.Количество;
				СтрокаТары.Количество	= СтрокаТары.Количество - НоваяСтрока.Количество;
				СтрокаТары.Сумма		= СтрокаТары.Сумма - НоваяСтрока.Сумма;
				
				Если СтрокаТары.Количество = 0 Тогда
					МассивСтрокКУдалению.Добавить(СтрокаТары);
				КонецЕсли;
				
			КонецЦикла;
			
			Если КРаспределению > 0 Тогда
				
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
				НоваяСтрока.КоличествоУпаковок = КРаспределению;
				НоваяСтрока.Количество = КРаспределению;
				
			КонецЕсли;
			
			Для Каждого СтрокаКУдалению из МассивСтрокКУдалению Цикл
				Тара.Удалить(СтрокаКУдалению);
			КонецЦикла;
			
		// Обычное заполнение
		Иначе
			
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			НоваяСтрока.Сумма = ВыборкаТовары.МаксСумма;
			
			Если НоваяСтрока.КоличествоУпаковок > 0 Тогда
				НоваяСтрока.Цена = ВыборкаТовары.МаксСумма / НоваяСтрока.КоличествоУпаковок;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	Возврат "Склад,Дата";
	
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратСырьяДавальцу";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику);
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ПланированиеОтгрузки	= Ложь;
	ПараметрыУказанияСерий.ПланированиеОтбора	= Ложь;
	ПараметрыУказанияСерий.ФактОтбора			= Истина;
	ПараметрыУказанияСерий.Дата					= Объект.Дата;
	
	ПараметрыУказанияСерий.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Склад КАК Склад,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоВозвратуПоставщику
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
//Параметры:
//	ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//		поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//	ДокументСсылка.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_ЗаказДавальца;
	
КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчетуУКР

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
#Область СторноПоступленияМатериаловОтДавальца // (Дт 0221  :: Кт)
	ТекстЗапроса = "
	|ВЫБРАТЬ //// Сторно поступления материалов от давальца (Дт 0221 :: Кт )
	|	Операция.Ссылка			КАК Ссылка,
	|	Операция.Дата			КАК Период,
	|	Операция.Организация	КАК Организация,
	|	НЕОПРЕДЕЛЕНО			КАК ИдентификаторСтроки,
	|
	|	- ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО				 КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку) КАК СчетДт,
	|	Операция.Контрагент		КАК СубконтоДт1,
	|	Строки.Номенклатура		КАК СубконтоДт2,
	|	Операция.Склад			КАК СубконтоДт3,
	|	
	|	0					КАК ВалютнаяСуммаДт,
	|	-Строки.Количество	КАК КоличествоДт,
	|	0					КАК СуммаНУДт,
	|	0					КАК СуммаПРДт,
	|	0					КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Сторно поступления материалов от давальца"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратСырьяДавальцу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|";
#КонецОбласти
	
#Область ВозвратнаяТара // (Дт 63, 685 :: Кт 28)
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ //// Возврат многооборотной тары (Дт 63, 685 :: Кт 28)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	- ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщикамиТара) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат многооборотной тары"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратСырьяДавальцу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И Операция.ВозвратПринятойМногооборотнойТары
	|";
#КонецОбласти
	
#Область РасходыВОтклоненииВСтоимости // (Дт 9 :: Кт 28)
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ //// Отклонение в стоимости возвратной тары на расходы (Дт 9 :: Кт 28)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Отклонение в стоимости возвратной тары на расходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратСырьяДавальцу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.КорНоменклатура = НЕОПРЕДЕЛЕНО
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И ЕСТЬNULL(Стоимости.Сумма, 0) > 0
	|";
#КонецОбласти

#Область ДоходыВОтклоненииВСтоимости // (Дт 28 :: Кт 7)
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|";
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ //// Отклонение в стоимости возвратной тары в доходы(Дт 28 :: Кт 7)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(-Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Отклонение в стоимости возвратной тары в доходы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратСырьяДавальцу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.КорНоменклатура = НЕОПРЕДЕЛЕНО
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И ЕСТЬNULL(Стоимости.Сумма, 0) < 0
	|";
#КонецОбласти
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламетированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Функция определяет реквизиты выбранного документа
//
// Параметры:
//	ДокументСсылка - Ссылка на документа
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата					КАК Дата,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ДанныеДокумента.Партнер					КАК Партнер,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ДанныеДокумента.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ЗаказДавальца			КАК ЗаказДавальца,
	|	ДанныеДокумента.Проведен				КАК Проведен,
	|	ДанныеДокумента.Договор					КАК Договор
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СтруктураРеквизитов = Новый Структура;
	
	ХозяйственнаяОперация = ?(ЗначениеЗаполнено(Выборка.ХозяйственнаяОперация),
		Выборка.ХозяйственнаяОперация,
		Перечисления.ХозяйственныеОперации.ВозвратДавальцу);
	
	Если Выборка.Следующий() Тогда
		
		СтруктураРеквизитов.Вставить("Дата",                  Выборка.Дата);
		СтруктураРеквизитов.Вставить("Организация",           Выборка.Организация);
		СтруктураРеквизитов.Вставить("Партнер",               Выборка.Партнер);
		СтруктураРеквизитов.Вставить("Контрагент",            Выборка.Контрагент);
		СтруктураРеквизитов.Вставить("Договор",               Выборка.Договор);
		СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
		СтруктураРеквизитов.Вставить("ПоЗаказу",              Истина);
		
	Иначе
		
		СтруктураРеквизитов.Вставить("Дата",                  Дата(1,1,1));
		СтруктураРеквизитов.Вставить("Организация",           Справочники.Организации.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Партнер",               Справочники.Партнеры.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Контрагент",            Справочники.Контрагенты.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("Договор",               Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВозвратДавальцу);
		СтруктураРеквизитов.Вставить("ПоЗаказу",              Ложь);
		
	КонецЕсли;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

// Функция получает список складов со справочным хранением остатков по массиву документов
//
// Параметры:
//	МассивДокументов - массив ссылок документов "Поступление товаров и услуг"
//
// Вовращаемое значение:
//	Список значений - список складов со справочным хранением остатков
//
Функция ПолучитьСписокСкладовСоСправочнымХранением(МассивДокументов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склад КАК Склад
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу
	|
	|ГДЕ
	|	Склад.ИспользоватьАдресноеХранениеСправочно
	|	И Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад.Наименование");
	
	СписокСкладов = Неопределено;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	СписокСкладов = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокСкладов.Добавить(Выборка.Склад);
	КонецЦикла;
	
	Возврат СписокСкладов;
	
КонецФункции

// Функция выполняет проверки документа-распоряжения при создании расходного ордера
//
// Параметры:
//	Распоряжение - Ссылка на документ-распоряжение
//	Склад - Ссылка на элемент справочника Склады
//
// Возвращаемое значение:
//	Структура - результаты проверки:
//		- Отказ - Булево - Истина, если проверки прошли с ошибками, иначе - Ложь
//		- ТекстОшибки - Строка - Обязательно должен быть заполнен, когда Отказ = Истина
//		- ДатаОтгрузки - Дата
//		- ГруппаСкладовВРаспоряжении - Булево - В распоряжении выбрана группа складов 
//		- ИспользоватьОрдернуюСхему - Булево - На складе используется ордерная схема
//
Функция ВыполнитьПроверкиРаспоряжения(Распоряжение, Склад) Экспорт 
		
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Операция",						"");
	СтруктураВозврата.Вставить("ТекстОшибки",					"");
	СтруктураВозврата.Вставить("ГруппаСкладовВРаспоряжении",	Ложь);
	СтруктураВозврата.Вставить("ДатаОтгрузки",					Неопределено);
	СтруктураВозврата.Вставить("ИспользоватьОрдернуюСхему",		Неопределено);
	
	Если Не ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "Склад")) Тогда
		
		ТекстОшибки = НСтр("ru='Не заполнено поле ""Склад"" в документе ""%Распоряжение%"". Невозможно создать ордер.';uk='Не заповнене поле ""Склад"" в документі ""%Распоряжение%"". Неможливо створити ордер.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Распоряжение%", Строка(Распоряжение));
		СтруктураВозврата.ТекстОшибки = ТекстОшибки;
		СтруктураВозврата.Операция = "Отказ";
		
		Возврат СтруктураВозврата
		
	КонецЕсли;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ДатаОтгрузки",				"Дата");
	Реквизиты.Вставить("Склад",						"Склад");
	Реквизиты.Вставить("ИспользоватьОрдернуюСхему",	"
													|	ВЫБОР КОГДА ЕстьNULL(Склад.ИспользоватьОрдернуюСхемуПриОтгрузке, Ложь)
													|			И Дата >= ЕстьNULL(Склад.ДатаНачалаОрдернойСхемыПриОтгрузке, ДАТАВРЕМЯ(1,1,1)) ТОГДА
													|		ИСТИНА
													|	ИНАЧЕ
													|		 ЛОЖЬ
													|	КОНЕЦ");
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, Реквизиты);
	ИспользоватьОрдернуюСхему = ЗначенияРеквизитов.ИспользоватьОрдернуюСхему;
	
	СтруктураВозврата.ИспользоватьОрдернуюСхему = ИспользоватьОрдернуюСхему;
	
	Если ИспользоватьОрдернуюСхему Тогда
		
		Склад = ЗначенияРеквизитов.Склад;
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ЗначенияРеквизитов, "ДатаОтгрузки");
		
	Иначе
		
		ТекстОшибки = НСтр("ru='Для склада ""%Склад%"" оформление расходных ордеров не требуется.
            |Заполнение документа не выполнено.'
            |;uk='Для складу ""%Склад%"" оформлення видаткових ордерів не потрібно.
            |Заповнення документа не виконано.'");
		СтруктураВозврата.ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Склад%", Строка(ЗначенияРеквизитов.Склад));
		СтруктураВозврата.Операция = "Отказ";
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Возврат СтруктураВозврата
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			И ДанныеДокумента.Дата >= ДанныеДокумента.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                  КАК ИспользоватьОрдернуюСхемуПриОтгрузке,
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Ссылка                 КАК Ссылка,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Валюта                 КАК Валюта,
	|	ДанныеДокумента.Партнер                КАК Партнер,
	|	ДанныеДокумента.Партнер                КАК Поставщик,
	|	ДанныеДокумента.Контрагент             КАК Контрагент,
	|	ДанныеДокумента.ЗаказДавальца          КАК ЗаказДавальца,
	|	ДанныеДокумента.Склад                  КАК Склад,
	|	ДанныеДокумента.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение          КАК Подразделение,
	|	ДанныеДокумента.Договор                КАК Договор,
	|	ДанныеДокумента.ВозвратПринятойМногооборотнойТары КАК ВозвратПринятойМногооборотнойТары,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности 
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.Валюта,
		Неопределено,
		Реквизиты.Период);
	
	////////////////////////////////////////////////////////////////////////////
	// Уставноим параметры запроса
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",		Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",						Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Фиксированная",							Перечисления.ТипыСтоимостиВыходныхИзделий.Фиксированная);
	Запрос.УстановитьПараметр("ЗаказДавальца",							Реквизиты.ЗаказДавальца);
	Запрос.УстановитьПараметр("Договор",								Реквизиты.Договор);
	Запрос.УстановитьПараметр("Валюта",									Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Склад",									Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",									Реквизиты.Период);
	Запрос.УстановитьПараметр("Партнер",								Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Организация",							Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",							Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару",				Реквизиты.ВозвратПринятойМногооборотнойТары);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",					Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам",				РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Реквизиты));
	Запрос.УстановитьПараметр("ДокументПоступления",					ДокументСсылка);
	Запрос.УстановитьПараметр("Распоряжение",							Неопределено);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтгрузке",	Реквизиты.ИспользоватьОрдернуюСхемуПриОтгрузке);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваров";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	0									КАК Порядок,
	|	ТаблицаТовары.НомерСтроки			КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура			КАК Номенклатура,
	|	ТаблицаТовары.Характеристика		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Количество			КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий	КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия					КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Серии КАК ТаблицаСерии
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|	ПО
	|		ТаблицаСерии.Ссылка           = ТаблицаТовары.Ссылка
	|		И ТаблицаСерии.Номенклатура   = ТаблицаТовары.Номенклатура
	|		И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|		И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение		
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратСырьяДавальцу КАК Возврат
	|	ПО
	|		Возврат.Ссылка = ТаблицаСерии.Ссылка
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаВидыЗапасов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка						КАК Ссылка,
	|	Аналитика.Номенклатура						КАК Номенклатура,
	|	Аналитика.Характеристика					КАК Характеристика,
	|	Аналитика.Серия								КАК Серия,
	|	Аналитика.Номенклатура.ТипНоменклатуры		КАК ТипНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов					КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов			КАК ТипЗапасов,
	|	ТаблицаТовары.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Количество					КАК Количество,
	|	ТаблицаТовары.Сумма							КАК Сумма,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаРегл,
	|	ТаблицаТовары.ДокументПоступления			КАК ДокументПоступления,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|
	|	ЕСТЬNULL(Назначения.Заказ, ЗНАЧЕНИЕ(Документ.ЗаказДавальца.ПустаяСсылка)) КАК ЗаказДавальца,
	|	ЕСТЬNULL(Назначения.Ссылка, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
	|
	|	ВЫБОР КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			И &ВернутьМногооборотнуюТару ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ										КАК ЭтоТараКВозврату
	|
	|ПОМЕСТИТЬ ВтТаблицаВидыЗапасов
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.ВидыЗапасов КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		ТаблицаТовары.ВидЗапасов.Назначение = Назначения.Ссылка
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14) ТОГДА
	|		ТаблицаТовары.Серия
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ									КАК Серия,
	|	ТаблицаТовары.НомерСтроки				КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Склад									КАК Склад,
	|	&Партнер                                КАК Получатель,
	|	&Ссылка									КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика			КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ 									КАК Назначение,
	|	ТаблицаТовары.Количество				КАК КОтгрузке
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И  ТаблицаТовары.Ссылка = &Ссылка
	|
	// Приход и расход на неордерном складе (КОтгрузке)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14) ТОГДА
	|		ТаблицаТовары.Серия
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ									КАК Серия,
	|	ТаблицаТовары.НомерСтроки				КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Склад									КАК Склад,
	|	&Партнер                                КАК Получатель,
	|	&Ссылка									КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика			КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ 					                КАК Назначение,
	|	ТаблицаТовары.Количество				КАК КОтгрузке
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И  ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14) ТОГДА
	|		ТаблицаТовары.Серия
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ									КАК Серия,
	|	ТаблицаТовары.НомерСтроки				КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Склад									КАК Склад,
	|	&Партнер                                КАК Получатель,
	|	&Ссылка									КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика			КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ 					                КАК Назначение,
	|	ТаблицаТовары.Количество				КАК КОтгрузке
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И  ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Склад									КАК Склад,
	|	ТаблицаТовары.Номенклатура				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика			КАК Характеристика,
	|	ТаблицаТовары.Назначение 				КАК Назначение,
	|	ТаблицаТовары.Серия						КАК Серия,
	|	ТаблицаТовары.Количество				КАК ВНаличии,
	|	0										КАК КОтгрузке,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8)
	|			ТОГДА ИСТИНА
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПринятаяВозвратнаяТара";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	ТаблицаТовары.ДокументПоступления      КАК ДокументПоступления,
	|	ЛОЖЬ                                   КАК ПредусмотренЗалог
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ВернутьМногооборотнуюТару
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура                                    КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                                  КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия                                           КАК Серия,
	|	ТаблицаСерии.Количество                                      КАК Количество,
	|	&Склад                                                       КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)         КАК ПомещениеОтправителя,
	|	&Партнер                                                     КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)         КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику) КАК СкладскаяОперация,
	|	&Ссылка                                                      КАК Документ,
	|	&Период                                                      КАК Период,
	|	&Ссылка                                                      КАК Регистратор,
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке                     КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	&Партнер,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтгрузке
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&Организация                                КАК Организация,
	|	&Организация                                КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	&Склад                                      КАК Склад,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	// Виды запасов
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки			КАК НомерСтроки,
	|	&Период								КАК Период,
	|	&Валюта								КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Сумма					КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО						КАК СтавкаНДС,
	|	0									КАК СуммаНДС,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0									КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО						КАК ТипРасчетов
	|
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРеглУчета
	|	И ТаблицаТовары.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Товары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки			КАК НомерСтроки,
	|	&Период								КАК Период,
	|	&Валюта								КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Сумма					КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО						КАК СтавкаНДС,
	|	0									КАК СуммаНДС,
	|	ТаблицаТовары.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0									КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО						КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРеглУчета
	|	И ТаблицаТовары.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки)		КАК НомерСтроки,
	|	&Период									КАК Период,
	|	&Склад									КАК Склад,
	|	ТаблицаТовары.Номенклатура				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика			КАК Характеристика,
	|	СУММА(ТаблицаТовары.Количество)			КАК ВНаличии,
	|	СУММА(ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Количество
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)									КАК ВРезервеПодЗаказ
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                    			   КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
	|
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)									КАК ВидДвижения,
	|	&Период																	КАК Период,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)										КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ							КАК ВидЗапасов,
	|
	|	СУММА(ТаблицаТовары.Количество)	КАК Количество,
	|	&АналитикаУчетаПоПартнерам			КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	&Организация						КАК Организация
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)									КАК ВидДвижения,
	|	&Период																	КАК Период,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)										КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры								КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ							КАК ВидЗапасов,
	|
	|	СУММА(ТаблицаТовары.Количество)	КАК Количество,
	|	&АналитикаУчетаПоПартнерам			КАК АналитикаУчетаПоПартнерам,
	|	&ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	&Организация						КАК Организация
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВозвратСырьяДавальцу";
		
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ИспользоватьОрдернуюСхемуПриОтгрузке",  
	"ВЫБОР КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ");

	Если ИмяРегистра = "ТоварыКОтгрузке" Тогда
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт


	Если ПолучитьФункциональнуюОпцию("ИспользоватьТТН")
		И ПравоДоступа("Чтение", Метаданные.Документы.ТранспортнаяНакладная) Тогда
		// 1-ТН (Товарно-транспортная накладная)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТТН";
		КомандаПечати.Представление = НСтр("ru='Товарно-транспортная накладная (1-ТН)';uk='Товарно-транспортна накладна (1-ТН)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;		

	КонецЕсли;
	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПересчитыватьВВалютуРегл);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокументов.Ссылка.ВозвратПринятойМногооборотнойТары
	|				И ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                               КАК ЭтоВозвратнаяТара,
	|	ТаблицаДокумента.Ссылка             КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки        КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура       КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика     КАК Характеристика,
	|	ТаблицаДокумента.Количество         КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаДокумента.Сумма              КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                        КАК СтавкаНДС,
	|	0                                   КАК СуммаНДС,
	|	НЕОПРЕДЕЛЕНО                        КАК НомерГТД,
	|	ТаблицаДокумента.Упаковка           КАК Упаковка, 
	|	ИСТИНА								КАК ЭтоТовар,
	| 	&ТекстЗапросаЕдиницаИзмерения		КАК ЕдиницаИзмерения,
	|	ДанныеДокументов.Ссылка.Склад       КАК Склад
	|
	|ПОМЕСТИТЬ ВозвратСырьяДавальцуТаблицаТоваров
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта = &ВалютаРегламентированногоУчета
	|		ИЛИ (НЕ &ПересчитыватьВВалютуРегл)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокументов.Ссылка.ВозвратПринятойМногооборотнойТары
	|				И ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                                   КАК ЭтоВозвратнаяТара,
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.КоличествоУпаковок                     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, 0) КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                                            КАК СтавкаНДС,
	|	0                                                       КАК СуммаНДС,
	|	НЕОПРЕДЕЛЕНО                                            КАК НомерГТД,
	|	ТаблицаДокумента.Упаковка                               КАК Упаковка,
	|	ИСТИНА													КАК ЭтоТовар,
	|   &ТекстЗапросаЕдиницаИзмерения							КАК ЕдиницаИзмерения,
	|	ДанныеДокументов.Ссылка.Склад                           КАК Склад
	|
	|ИЗ
	|	Документ.ВозвратСырьяДавальцу.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютеРегл.Активность
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка", "ТаблицаДокумента.Упаковка", "ТаблицаДокумента.Номенклатура"));
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	// Заглушка, чтобы не падала печать комплектов из задания на перевозку.
	ТекстСообщения = НСтр("ru='Печать комплектов для документов ""%Документ%"" не поддерживается.';uk='Друк комплектів для документів ""%Документ%"" не підтримується.'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Метаданные.Документы.ВозвратСырьяДавальцу.Синоним);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Возврат Неопределено;
КонецФункции


#КонецОбласти

#Область ОбновлениеИнформационнойБазы


#КонецОбласти

#КонецОбласти

#КонецЕсли
