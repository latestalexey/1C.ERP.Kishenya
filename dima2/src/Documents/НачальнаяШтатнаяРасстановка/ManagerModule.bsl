#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс	

// используется при загрузке данных
Процедура РассчитатьФОТПоДокументу(ДокументОбъект) Экспорт

	РассчитываемыеОбъекты = Новый Соответствие;
	Сотрудники = Новый Соответствие;
	
	Отбор = Новый Структура("Сотрудник");
	Для каждого СтрокаСотрудник Из ДокументОбъект.Сотрудники Цикл
		
		ОписаниеСотрудника = Новый Структура;
		ОписаниеСотрудника.Вставить("Организация", ДокументОбъект.Организация);
		ОписаниеСотрудника.Вставить("ДатаРасчета", ДокументОбъект.Месяц);
		ОписаниеСотрудника.Вставить("Подразделение", СтрокаСотрудник.Подразделение);
		ОписаниеСотрудника.Вставить("ГрафикРаботы", СтрокаСотрудник.ГрафикРаботы);
		ОписаниеСотрудника.Вставить("КоличествоСтавок", СтрокаСотрудник.КоличествоСтавок);
		ОписаниеСотрудника.Вставить("Начисления", РасчетЗарплатыРасширенный.ПустаяТаблицаДанныеНачисленийДляРасчетаФОТ());
		ОписаниеСотрудника.Вставить("Показатели", РасчетЗарплатыРасширенный.ПустаяТаблицаДанныеПоказателейДляРасчетаФОТ());
		
		Отбор.Сотрудник = СтрокаСотрудник.Сотрудник;
		СтрокиНачисления = ДокументОбъект.Начисления.Выгрузить(Отбор);
		Для Каждого СтрокаНачисления Из СтрокиНачисления Цикл
			ДанныеНачисления = ОписаниеСотрудника.Начисления.Добавить();
			ДанныеНачисления.Начисление = СтрокаНачисления.Начисление;
			ДанныеНачисления.Размер = 0;
		КонецЦикла;
		
		СтрокиПоказателя = ДокументОбъект.Показатели.Выгрузить(Отбор);
		Для Каждого СтрокаПоказателя Из СтрокиПоказателя Цикл
			ДанныеПоказателя = ОписаниеСотрудника.Показатели.Добавить();
			ДанныеПоказателя.Показатель = СтрокаПоказателя.Показатель;
			ДанныеПоказателя.Значение = СтрокаПоказателя.Значение;
		КонецЦикла;
		
		Сотрудники.Вставить(СтрокаСотрудник.Сотрудник, ОписаниеСотрудника);
		
	КонецЦикла;
	
	РассчитываемыеОбъекты.Вставить(ДокументОбъект.Ссылка, Сотрудники);
	
	// Расчет ФОТ
	РасчетЗарплатыРасширенный.РассчитатьФОТСотрудников(РассчитываемыеОбъекты, ДокументОбъект.Организация, ДокументОбъект.Месяц);
	
	Сотрудники = РассчитываемыеОбъекты[ДокументОбъект.Ссылка];
	
	// Заполнение документа результатами расчета.
	
	Для Каждого ЭлементКлючИЗначение Из Сотрудники Цикл
	
		ОписаниеСотрудника = ЭлементКлючИЗначение.Значение;
		Сотрудник = ЭлементКлючИЗначение.Ключ;
		
		Для Каждого ОписаниеНачисления Из ОписаниеСотрудника.Начисления Цикл
			
			СтрокиДокумента = ДокументОбъект.Начисления.НайтиСтроки(Новый Структура("Сотрудник,Начисление", Сотрудник, ОписаниеНачисления.Начисление));
			Если СтрокиДокумента.Количество() > 0 Тогда
				СтрокиДокумента[0].Размер = ОписаниеНачисления.Размер;
			КонецЕсли; 
			
		КонецЦикла;
	
	КонецЦикла;
	
	// Расчет Совокупной тарифной ставки
	ИсходныеДанные = ЗарплатаКадрыРасширенный.ИсходныеДанныеРасчетаСовокупныхТарифныхСтавок();
	ТаблицаПоказателей = ЗарплатаКадрыРасширенный.ПоказателиРасчетаСовокупныхТарифныхСтавок();
	ДатаСобытия = ЗарплатаКадрыРасширенный.ВремяРегистрацииДокумента(ДокументОбъект.Ссылка, ДокументОбъект.Месяц);
	
	Для Каждого СтрокаСотрудник Из ДокументОбъект.Сотрудники Цикл
		
		Отбор.Сотрудник = СтрокаСотрудник.Сотрудник;
		СтрокиНачисления = ДокументОбъект.Начисления.Выгрузить(Отбор);
		Для Каждого СтрокаНачисления Из СтрокиНачисления Цикл
			
			НоваяСтрока = ИсходныеДанные.Добавить();
			НоваяСтрока.ДатаСобытия 	= ДатаСобытия;
			НоваяСтрока.Сотрудник 		= СтрокаСотрудник.Сотрудник;
			НоваяСтрока.Начисление 		= СтрокаНачисления.Начисление;
			НоваяСтрока.РазмерФОТ 		= СтрокаНачисления.Размер;
			НоваяСтрока.ГрафикРаботы 	= СтрокаСотрудник.ГрафикРаботы;
			НоваяСтрока.НомерСтроки 	= СтрокаНачисления.НомерСтроки;	
			
		КонецЦикла;
		
		СтрокиПоказателя = ДокументОбъект.Показатели.Выгрузить(Отбор);
		Для Каждого СтрокаПоказателя Из СтрокиПоказателя Цикл
			
			НоваяСтрокаПоказателя = ТаблицаПоказателей.Добавить();
			НоваяСтрокаПоказателя.Период     = ДатаСобытия;
			НоваяСтрокаПоказателя.Сотрудник  = СтрокаСотрудник.Сотрудник;
			НоваяСтрокаПоказателя.Показатель = СтрокаПоказателя.Показатель;
			НоваяСтрокаПоказателя.Значение   = СтрокаПоказателя.Значение;
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Выборка = ЗарплатаКадрыРасширенный.ЗначенияСовокупныхТарифныхСтавок(ИсходныеДанные, ДатаСобытия, ТаблицаПоказателей).Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		СтрокиДокумента = ДокументОбъект.Сотрудники.НайтиСтроки(Новый Структура("Сотрудник", Выборка.Сотрудник));
		Если СтрокиДокумента.Количество() > 0 Тогда
			СтрокиДокумента[0].СовокупнаяТарифнаяСтавка = Выборка.СовокупнаяТарифнаяСтавка;
			СтрокиДокумента[0].ВидТарифнойСтавки        = Выборка.ВидТарифнойСтавки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти	


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли