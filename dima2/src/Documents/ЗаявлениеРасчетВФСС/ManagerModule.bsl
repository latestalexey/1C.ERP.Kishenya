#Если Не ТолстыйКлиентУправляемоеПриложение Или Сервер Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Печать заявления о выплате пособия.
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ЗаявлениеВФССДополнительныеДниОтпуска_2012";
	//КомандаПечати.Представление = НСтр("ru='Заявление о возмещении расходов'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Заявка";
	КомандаПечати.Представление = НСтр("ru='Заявление (до 01.10.2018)';uk='Заява (до 01.10.2018)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ЗаявкаНС";
	//КомандаПечати.Представление = НСтр("ru='Заявление расчет в ФСС от НС'");
	//КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение";
	КомандаПечати.Представление = НСтр("ru='Приложение (до 01.10.2018)';uk='Додаток (до 01.10.2018)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Заявка2018";
	КомандаПечати.Представление = НСтр("ru='Заявление';uk='Заява'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение11";
	КомандаПечати.Представление = НСтр("ru='Приложение 1.1';uk='Додаток 1.1'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение12";
	КомандаПечати.Представление = НСтр("ru='Приложение 1.2';uk='Додаток 1.2'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Приложение13";
	КомандаПечати.Представление = НСтр("ru='Приложение 1.3';uk='Додаток 1.3'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка") Тогда
		Если МассивОбъектов[0].ФондСоциальногоСтрахования = Перечисления.ВидыОбязательногоСтрахованияСотрудников.ФСС Тогда
			ТабличныйДокумент = ТабличныйДокументЗаявка(МассивОбъектов[0], ОбъектыПечати);
			Если НЕ ТабличныйДокумент = Неопределено Тогда
				УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Заявка", НСтр("ru='Заявление расчет в ФСС';uk='Заява розрахунок в ФСС'"), ТабличныйДокумент);
			КонецЕсли;
		Иначе
			ТабличныйДокумент = ТабличныйДокументЗаявкаНС(МассивОбъектов[0], ОбъектыПечати);
			Если НЕ ТабличныйДокумент = Неопределено Тогда
				УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Заявка", НСтр("ru='Заявление расчет в ФСС';uk='Заява розрахунок в ФСС'"), ТабличныйДокумент);
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение") Тогда
			ТабличныйДокумент = ТабличныйДокументПриложение(МассивОбъектов[0], ОбъектыПечати);
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Приложение", НСтр("ru='Приложение к заявлению расчету в ФСС';uk='Додаток до заяви розрахунку в ФСС'"), ТабличныйДокумент);
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка2018") Тогда
		ТабличныйДокумент = ТабличныйДокументЗаявка2018(МассивОбъектов[0], ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Заявка2018", НСтр("ru='Заявление расчет в ФСС';uk='Заява розрахунок в ФСС'"), ТабличныйДокумент);
		КонецЕсли;
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение11") Тогда
		ТабличныйДокумент = ТабличныйДокументПриложение11(МассивОбъектов[0], ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Приложение11", НСтр("ru='Приложение 1.1 к заявлению расчету в ФСС';uk='Додаток 1.1 до заяви розрахунку до ФСС'"), ТабличныйДокумент);
		КонецЕсли;	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение12") Тогда
		ТабличныйДокумент = ТабличныйДокументПриложение12(МассивОбъектов[0], ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Приложение12", НСтр("ru='Приложение 1.2 к заявлению расчету в ФСС';uk='Додаток 1.2 до заяви розрахунку до ФСС'"), ТабличныйДокумент);
		КонецЕсли;	
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Приложение13") Тогда
		ТабличныйДокумент = ТабличныйДокументПриложение13(МассивОбъектов[0], ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Приложение13", НСтр("ru='Приложение 1.3 к заявлению расчету в ФСС';uk='Додаток 1.3 до заяви розрахунку до ФСС'"), ТабличныйДокумент);
		КонецЕсли;	
	КонецЕсли;
	

КонецПроцедуры


Функция ТабличныйДокументЗаявка(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Заявка");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = МассивОбъектов.Организация.НаименованиеПолное;
	
	 	 
	 Если Не ПустаяСтрока(МассивОбъектов.АдресОрганизации) Тогда
		 СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		 МассивОбъектов.АдресОрганизации,
		 ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
		 УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ОбластьШапка.Параметры.Адрес);
	 Иначе
		 ОбластьШапка.Параметры.Адрес = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	 КонецЕсли;
	 
	 Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		МассивОбъектов.ТелефонСоставителя,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
		ОбластьШапка.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																					  СтруктураТелефона.КодГорода, 
																					  СтруктураТелефона.НомерТелефона, 
																					  СтруктураТелефона.Добавочный, 
																					  СтруктураТелефона.Комментарий);
	Иначе
		ОбластьШапка.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	КонецЕсли;
	 
	 
	 
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    ТабДокумент.Вывести(ОбластьЗаголовок);	
	
	//ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	//СтрокаВремНетрудоспособность
	ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
	
	БольничныйСумма = МассивОбъектов.Оплаты.Выгрузить();
	БольничныйСумма = БольничныйСумма.Итог("СуммаПособияВсегоФСС");
	
	БольничныйДней = МассивОбъектов.Оплаты.Выгрузить();
	БольничныйДней = БольничныйДней.Итог("КоличествоДнейВсегоФСС");
	
	ОбластьВремНетрудоспособность.Параметры.Сумма = Формат(БольничныйСумма,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособность.Параметры.Дни = БольничныйДней;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
	
	//СтрокаВремНетрудоспособностьУход
	ОбластьВремНетрудоспособностьУход = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьУход");
	ОбластьВремНетрудоспособностьУход.Параметры.Сумма = Формат(0,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	//ОбластьВремНетрудоспособностьУход.Параметры.Дни = КоличествоДнейПоБольничнымПоУходу;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьУход);
	
	//СтрокаВремНетрудоспособностьБерем
	ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
	ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = Формат(0,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	//ОбластьВремНетрудоспособностьБерем.Параметры.Дни = КоличествоДнейПоБеременостиИРодам;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);
	
	//СтрокаВремНетрудоспособностьПогребение 
	ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
	ПогребенияСумма = МассивОбъектов.ПособияНаПогребение.Выгрузить();
	ПогребенияСумма = ПогребенияСумма.Итог("РазмерПособия");
	
	ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = Формат(ПогребенияСумма,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
	
	//Итог
	ВсегоСумма = ПогребенияСумма + БольничныйСумма; // суммы всех начислений
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.СуммаИтог = Формат(ВсегоСумма,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьИтог);
	
	Возврат ТабДокумент;
	
КонецФункции	

Функция ТабличныйДокументЗаявкаНС(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ_MXL_UK_ЗаявкаНС");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = МассивОбъектов.Организация.НаименованиеПолное;
	
	Если Не ПустаяСтрока(МассивОбъектов.АдресОрганизации) Тогда
		СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		МассивОбъектов.АдресОрганизации,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
		УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ОбластьШапка.Параметры.Адрес);
	Иначе
		ОбластьШапка.Параметры.Адрес = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	КонецЕсли;
	
	
	Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		МассивОбъектов.ТелефонСоставителя,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
		ОбластьШапка.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
		СтруктураТелефона.КодГорода, 
		СтруктураТелефона.НомерТелефона, 
		СтруктураТелефона.Добавочный, 
		СтруктураТелефона.Комментарий);
	Иначе
		ОбластьШапка.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	КонецЕсли;
	
	ОбластьШапка.Параметры.Месяц = Формат(МассивОбъектов.Месяц, "ДФ=MMMM;Л = uk_UA");;
	ОбластьШапка.Параметры.Год = Год(МассивОбъектов.Месяц);
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Шапка помощь 
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПомощь");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Строка Помощь
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПомощь");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаявлениеРасчетВФСС.Комментарий,
	|	ЗаявлениеРасчетВФССОплаты.НомерСтроки КАК Номер,
	|	ЗаявлениеРасчетВФССОплаты.Сотрудник,
	|	ЗаявлениеРасчетВФССОплаты.ДокументОснование КАК Документ,
	|	ЗаявлениеРасчетВФССОплаты.СуммаПособияВсегоФСС КАК Результат,
	|	ЗаявлениеРасчетВФССОплаты.НомерБольничного КАК СерияНомер
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.Оплаты КАК ЗаявлениеРасчетВФССОплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
	|		ПО ЗаявлениеРасчетВФССОплаты.Ссылка = ЗаявлениеРасчетВФСС.Ссылка
	|ГДЕ
	|	ЗаявлениеРасчетВФССОплаты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";
	
	Запрос.УстановитьПараметр("Ссылка",МассивОбъектов.Ссылка );
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	//
	Пока Выборка.Следующий() Цикл 
		
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			ОбластьСтрока.Параметры.Номер = Выборка.Номер;
			ОбластьСтрока.Параметры.СерияНомер = Выборка.СерияНомер;
			ОбластьСтрока.Параметры.Сотрудник  = Выборка.Сотрудник;
			Сумма = Выборка.Результат;
			СтрокаСуммы = ЧислоПрописью(Сумма, "Л = uk_UA","гривня, гривні, гривень, м, копійка, копійки, копійок, ж, 2");
			СтрокаСуммы  = СтрокаСуммы + " (" + Цел(Сумма) + " грн. " + Формат((Сумма - Цел(Сумма)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
			ОбластьСтрока.Параметры.Результат  = СтрокаСуммы;  
			ОбластьСтрока.Параметры.Комментарий = Выборка.Комментарий;
			ТабДокумент.Присоединить(ОбластьСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	//Шапка траты 
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТраты");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Шапка погребение
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПогребение");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Строка Помощь
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПогребение");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗаявлениеРасчетВФСС.Комментарий,
	|	ЗаявлениеРасчетВФССПособияНаПогребение.НомерСтроки КАК Номер,
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник,
	|	ЗаявлениеРасчетВФССПособияНаПогребение.ДокументОснование КАК Документ,
	|	ЗаявлениеРасчетВФССПособияНаПогребение.РазмерПособия КАК Результат
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение КАК ЗаявлениеРасчетВФССПособияНаПогребение
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
	|		ПО ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка = ЗаявлениеРасчетВФСС.Ссылка
	|ГДЕ
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номер";
	
	Запрос.УстановитьПараметр("Ссылка",МассивОбъектов.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл  
		
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			ОбластьСтрока.Параметры.Номер = Выборка.Номер;
			ОбластьСтрока.Параметры.Сотрудник  = Выборка.Сотрудник;
			Сумма = Выборка.Результат;
			СтрокаСуммы = ЧислоПрописью(Сумма, "Л = uk_UA","гривня, гривні, гривень, м, копійка, копійки, копійок, ж, 2");
			СтрокаСуммы  = СтрокаСуммы + " (" + Цел(Сумма) + " грн. " + Формат((Сумма - Цел(Сумма)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
			ОбластьСтрока.Параметры.Результат  = СтрокаСуммы;  
			ОбластьСтрока.Параметры.Комментарий = Выборка.Комментарий;
			ТабДокумент.Присоединить(ОбластьСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	//Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	ТабДокумент.Вывести(ОбластьПодпись);
	
	Возврат ТабДокумент;
	
КонецФункции	

Функция ТабличныйДокументПриложение(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение");
	
	Если МассивОбъектов.ФондСоциальногоСтрахования = Перечисления.ВидыОбязательногоСтрахованияСотрудников.ФСС Тогда		
		//Шапка 
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьШапка);
		
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
		НомерСтроки = 1;
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
			РезультатЗапросаПоСтрокам = ПолучитьЗапросДляПечатиПриложения(МассивОбъектов.Ссылка);
			
			Для Каждого Строка ИЗ РезультатЗапросаПоСтрокам Цикл
				ОбластьСтрока.Параметры.Номер = НомерСтроки;
				ОбластьСтрока.Параметры.Сотрудник 					= Строка.Фамилия + " " + Строка.Имя + " " + Строка.Отчество;
				ОбластьСтрока.Параметры.КодПоДРФО 					= Строка.ДРФО;
				ОбластьСтрока.Параметры.СерияНомер 					= Строка.НомерБольничного;
				ОбластьСтрока.Параметры.ПричинаНетрудоспособности   = Строка.ПричинаНетрудоспособности;
				ОбластьСтрока.Параметры.ПериодНетрудоспособности    = "З " + Формат(Строка.ПериодС, "ДЛФ=Д") + " по " + Формат(Строка.ПериодПО, "ДЛФ=Д");
				ОбластьСтрока.Параметры.КоличествоДней 				= Строка.КоличествоДнейВсего;
				ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Строка.КоличествоДнейВсегоФСС;
				ОбластьСтрока.Параметры.Результат 					= Формат(Строка.СуммаПособияВсего,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
				ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Строка.СуммаПособияВсегоФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
				ТабДокумент.Присоединить(ОбластьСтрока);
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
			
		КонецЕсли;
		
		//Подпись
		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
		
		ЧислоДокумента                          = Формат(МассивОбъектов.Дата,"ДФ='дд';Л=uk_UA");
		ДатаДокумента                           = Формат(МассивОбъектов.Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
		ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
		ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
		
		ТабДокумент.Вывести(ОбластьПодпись);
	Иначе
		//НеДляФССОтНС 
		ОбластьНеДляФССОтНС = Макет.ПолучитьОбласть("НеДляФССОтНС");
		ТабДокумент.Вывести(ОбластьНеДляФССОтНС);
	КонецЕсли;	
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ТабличныйДокументЗаявка2018(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Заявка2018");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
		ОбластьШапка.Параметры.Организация = ВыборкаПоШапкеДокумента.ОрганизацияНаименованиеПолное;
				
		 Если Не ПустаяСтрока(МассивОбъектов.АдресОрганизации) Тогда
			 СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
			 ВыборкаПоШапкеДокумента.АдресОрганизации,
			 ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
			 УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ОбластьШапка.Параметры.Адрес);
		 Иначе
			 ОбластьШапка.Параметры.Адрес = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
		 КонецЕсли;
		 
		 Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
			СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
			ВыборкаПоШапкеДокумента.ТелефонСоставителя,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
			ОбластьШапка.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																						  СтруктураТелефона.КодГорода, 
																						  СтруктураТелефона.НомерТелефона, 
																						  СтруктураТелефона.Добавочный, 
																						  СтруктураТелефона.Комментарий);
		Иначе
			ОбластьШапка.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
		КонецЕсли;
		
		ОбластьШапка.Параметры.КодПоЕДРПОУ = ВыборкаПоШапкеДокумента.КодПоЕДРПОУ;
		
		ОбластьШапка.Параметры.НаименованиеБанка = ВыборкаПоШапкеДокумента.НаименованиеБанка; 
		ОбластьШапка.Параметры.НомерСчета = ВыборкаПоШапкеДокумента.НомерСчета; 
		ОбластьШапка.Параметры.МФОБанкаОрганизации = ВыборкаПоШапкеДокумента.МФОБанка;
		
		СписокФизическихЛиц = Новый СписокЗначений;
		СписокФизическихЛиц.Добавить(ВыборкаПоШапкеДокумента.Руководитель);
		СписокФизическихЛиц.Добавить(ВыборкаПоШапкеДокумента.ГлавныйБухгалтер);
		ТаблицаКадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
			Истина, 
			СписокФизическихЛиц, 
			"Фамилия, Имя, Отчество,", 
			МассивОбъектов.Дата);
		Руководитель = ТаблицаКадровыеДанныеФизическихЛиц.Найти(ВыборкаПоШапкеДокумента.Руководитель,"ФизиЧескоеЛицо");
		Если Руководитель <> Неопределено Тогда
			ОбластьПодпись.Параметры.ФИОРуководителя = Руководитель.Фамилия + " " + Руководитель.Имя + " " + Руководитель.Отчество;
		КонецЕсли;
		Бухгалтер = ТаблицаКадровыеДанныеФизическихЛиц.Найти(ВыборкаПоШапкеДокумента.ГлавныйБухгалтер,"ФизиЧескоеЛицо");
		Если Руководитель <> Неопределено Тогда
			ОбластьПодпись.Параметры.ФИОБухгалтера = Бухгалтер.Фамилия + " " + Бухгалтер.Имя + " " + Бухгалтер.Отчество;
		КонецЕсли;
		
		ОбластьПодпись.Параметры.ДатаДокумента = Формат(ВыборкаПоШапкеДокумента.Дата, "Л=uk; ДЛФ=DD");

	КонецЕсли;	
		
	ТабДокумент.Вывести(ОбластьШапка);
	
	ЗапросПоТЧ = СформироватьЗапросДляПечатиПриложений2018(МассивОбъектов.Ссылка);
	
	//ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ИтогПоДокументу = 0;
	
	ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
	ОбластьВремНетрудоспособность.Параметры.Сумма = 0;
	ОбластьВремНетрудоспособность.Параметры.СуммаЛьготы = 0;
	Если ЗапросПоТЧ.Итоги11Б.Следующий() И ЗначениеЗаполнено(ЗапросПоТЧ.Итоги11Б.Сумма) Тогда 
		ЗаполнитьЗначенияСвойств(ОбластьВремНетрудоспособность.Параметры, ЗапросПоТЧ.Итоги11Б);
		ОбластьВремНетрудоспособность.Параметры.Отметка1 = (ЗапросПоТЧ.Итоги11Б.Сумма > 0);
		ОбластьВремНетрудоспособность.Параметры.ДниЧАЭС = ?(ЗапросПоТЧ.Итоги11Б.СуммаЛьготы > 0, ЗапросПоТЧ.Итоги11Б.Дни, 0);
		ИтогПоДокументу = ИтогПоДокументу + ЗапросПоТЧ.Итоги11Б.Сумма; 
	КонецЕсли;	
	ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
	
	ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
	ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = 0;
	ОбластьВремНетрудоспособностьБерем.Параметры.СуммаЛьготы = 0;
	Если ЗапросПоТЧ.Итоги11Д.Следующий() И ЗначениеЗаполнено(ЗапросПоТЧ.Итоги11Д.Сумма) Тогда 
		ЗаполнитьЗначенияСвойств(ОбластьВремНетрудоспособностьБерем.Параметры, ЗапросПоТЧ.Итоги11Д);
		ОбластьВремНетрудоспособностьБерем.Параметры.Отметка11 = (ЗапросПоТЧ.Итоги11Д.Сумма > 0);
		ОбластьВремНетрудоспособностьБерем.Параметры.ДниЧАЭС = ?(ЗапросПоТЧ.Итоги11Д.СуммаЛьготы > 0, ЗапросПоТЧ.Итоги11Д.Дни, 0);
		ИтогПоДокументу = ИтогПоДокументу + ЗапросПоТЧ.Итоги11Д.Сумма; 
	КонецЕсли;	
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);
	
	ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
	ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = 0;
	Если ЗапросПоТЧ.Итоги12.Следующий() И ЗначениеЗаполнено(ЗапросПоТЧ.Итоги12.Сумма) Тогда 
		ЗаполнитьЗначенияСвойств(ОбластьВремНетрудоспособностьПогребение.Параметры, ЗапросПоТЧ.Итоги12);
		ОбластьВремНетрудоспособностьПогребение.Параметры.Отметка2 = (ЗапросПоТЧ.Итоги12.Сумма > 0);
		ИтогПоДокументу = ИтогПоДокументу + ЗапросПоТЧ.Итоги12.Сумма; 
	КонецЕсли;	
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
	
	ОбластьВремНетрудоспособностьНС = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьНС");
	ОбластьВремНетрудоспособностьНС.Параметры.Сумма = 0;
	Если ЗапросПоТЧ.Итоги13.Следующий() И ЗначениеЗаполнено(ЗапросПоТЧ.Итоги13.Сумма) Тогда 
		ЗаполнитьЗначенияСвойств(ОбластьВремНетрудоспособностьНС.Параметры, ЗапросПоТЧ.Итоги13);
		ОбластьВремНетрудоспособностьНС.Параметры.Отметка3 = (ЗапросПоТЧ.Итоги13.Сумма > 0);
		ИтогПоДокументу = ИтогПоДокументу + ЗапросПоТЧ.Итоги13.Сумма; 
	КонецЕсли;	
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьНС);
	
	ОбластьПрочее = Макет.ПолучитьОбласть("СтрокаПрочее");
	ТабДокумент.Вывести(ОбластьПрочее);
	
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.СуммаИтог = Формат(ИтогПоДокументу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьИтог);
	
	
	ТабДокумент.Вывести(ОбластьПодпись);

	
	Возврат ТабДокумент;
	
КонецФункции	

Функция ТабличныйДокументПриложение11(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение1_1");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
		 Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
			СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
			ВыборкаПоШапкеДокумента.ТелефонСоставителя,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
			ОбластьПодпись.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																						  СтруктураТелефона.КодГорода, 
																						  СтруктураТелефона.НомерТелефона, 
																						  СтруктураТелефона.Добавочный, 
																						  СтруктураТелефона.Комментарий);
		Иначе
			ОбластьПодпись.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
		КонецЕсли;
		
		СписокФизическихЛиц = Новый СписокЗначений;
		СписокФизическихЛиц.Добавить(ВыборкаПоШапкеДокумента.ЗаявлениеСоставил);
		ТаблицаКадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
			Истина, 
			СписокФизическихЛиц, 
			"Фамилия, Имя, Отчество,", 
			МассивОбъектов.Дата);
		ЗаявлениеСоставил = ТаблицаКадровыеДанныеФизическихЛиц.Найти(ВыборкаПоШапкеДокумента.ЗаявлениеСоставил,"ФизиЧескоеЛицо");
		Если ЗаявлениеСоставил <> Неопределено Тогда
			ОбластьПодпись.Параметры.Ответственный = ЗаявлениеСоставил.Фамилия + " " + ЗаявлениеСоставил.Имя + " " + ЗаявлениеСоставил.Отчество;
		КонецЕсли;

		ОбластьПодпись.Параметры.ДолжностьОтветственного = ВыборкаПоШапкеДокумента.ДолжностьСоставителя;
		
	КонецЕсли;	
		
	ТабДокумент.Вывести(ОбластьШапка);
	
	ЗапросПоТЧ = СформироватьЗапросДляПечатиПриложений2018(МассивОбъектов.Ссылка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
	НомерСтроки = 0;
	Пока ЗапросПоТЧ.ТЧ11.Следующий() Цикл
		Если ЗначениеЗаполнено(ЗапросПоТЧ.ТЧ11.Результат) Тогда 
			НомерСтроки = НомерСтроки + 1;
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ЗапросПоТЧ.ТЧ11);
			СерияНомер = УчетПособийСоциальногоСтрахования.РазложитьНомерБольничного(ЗапросПоТЧ.ТЧ11.НомерБольничного);
			ОбластьСтрока.Параметры.Серия = СерияНомер.Серия;
			ОбластьСтрока.Параметры.Номер = СерияНомер.Номер;
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЕсли;	
	КонецЦикла;	
	
	
	ТабДокумент.Вывести(ОбластьПодпись);

	
	Возврат ТабДокумент;
	
КонецФункции	
Функция ТабличныйДокументПриложение13(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение1_3");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
		 Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
			СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
			ВыборкаПоШапкеДокумента.ТелефонСоставителя,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
			ОбластьПодпись.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																						  СтруктураТелефона.КодГорода, 
																						  СтруктураТелефона.НомерТелефона, 
																						  СтруктураТелефона.Добавочный, 
																						  СтруктураТелефона.Комментарий);
		Иначе
			ОбластьПодпись.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
		КонецЕсли;
		
		СписокФизическихЛиц = Новый СписокЗначений;
		СписокФизическихЛиц.Добавить(ВыборкаПоШапкеДокумента.ЗаявлениеСоставил);
		ТаблицаКадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
			Истина, 
			СписокФизическихЛиц, 
			"Фамилия, Имя, Отчество,", 
			МассивОбъектов.Дата);
		ЗаявлениеСоставил = ТаблицаКадровыеДанныеФизическихЛиц.Найти(ВыборкаПоШапкеДокумента.ЗаявлениеСоставил,"ФизическоеЛицо");
		Если ЗаявлениеСоставил <> Неопределено Тогда
			ОбластьПодпись.Параметры.Ответственный = ЗаявлениеСоставил.Фамилия + " " + ЗаявлениеСоставил.Имя + " " + ЗаявлениеСоставил.Отчество;
		КонецЕсли;

		ОбластьПодпись.Параметры.ДолжностьОтветственного = ВыборкаПоШапкеДокумента.ДолжностьСоставителя;
		
	КонецЕсли;	
		
	ТабДокумент.Вывести(ОбластьШапка);
	
	ЗапросПоТЧ = СформироватьЗапросДляПечатиПриложений2018(МассивОбъектов.Ссылка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
	НомерСтроки = 0;
	Пока ЗапросПоТЧ.ТЧ13.Следующий() Цикл
		Если ЗначениеЗаполнено(ЗапросПоТЧ.ТЧ13.РезультатФСС) Тогда 
			НомерСтроки = НомерСтроки + 1;
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ЗапросПоТЧ.ТЧ13);
			СерияНомер = УчетПособийСоциальногоСтрахования.РазложитьНомерБольничного(ЗапросПоТЧ.ТЧ13.НомерБольничного);
			ОбластьСтрока.Параметры.Серия = СерияНомер.Серия;
			ОбластьСтрока.Параметры.Номер = СерияНомер.Номер;
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЕсли;	
	КонецЦикла;	
	
	
	ТабДокумент.Вывести(ОбластьПодпись);

	
	Возврат ТабДокумент;
	
КонецФункции

Функция ТабличныйДокументПриложение12(МассивОбъектов, ОбъектыПечати)
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение1_2");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			
		 Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
			СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
			ВыборкаПоШапкеДокумента.ТелефонСоставителя,
			ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
			ОбластьПодпись.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																						  СтруктураТелефона.КодГорода, 
																						  СтруктураТелефона.НомерТелефона, 
																						  СтруктураТелефона.Добавочный, 
																						  СтруктураТелефона.Комментарий);
		Иначе
			ОбластьПодпись.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
		КонецЕсли;
		
		СписокФизическихЛиц = Новый СписокЗначений;
		СписокФизическихЛиц.Добавить(ВыборкаПоШапкеДокумента.ЗаявлениеСоставил);
		ТаблицаКадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
			Истина, 
			СписокФизическихЛиц, 
			"Фамилия, Имя, Отчество,", 
			МассивОбъектов.Дата);
		ЗаявлениеСоставил = ТаблицаКадровыеДанныеФизическихЛиц.Найти(ВыборкаПоШапкеДокумента.ЗаявлениеСоставил,"ФизическоеЛицо");
		Если ЗаявлениеСоставил <> Неопределено Тогда
			ОбластьПодпись.Параметры.Ответственный = ЗаявлениеСоставил.Фамилия + " " + ЗаявлениеСоставил.Имя + " " + ЗаявлениеСоставил.Отчество;
		КонецЕсли;

		ОбластьПодпись.Параметры.ДолжностьОтветственного = ВыборкаПоШапкеДокумента.ДолжностьСоставителя;
		
	КонецЕсли;	
		
	ТабДокумент.Вывести(ОбластьШапка);
	
	ЗапросПоТЧ = СформироватьЗапросДляПечатиПриложений2018(МассивОбъектов.Ссылка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоПособиям");
	НомерСтроки = 0;
	Пока ЗапросПоТЧ.ТЧ12.Следующий() Цикл
		Если ЗначениеЗаполнено(ЗапросПоТЧ.ТЧ12.Сумма) Тогда 
			НомерСтроки = НомерСтроки + 1;
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ЗапросПоТЧ.ТЧ12);
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЕсли;	
	КонецЦикла;	
	
	
	ТабДокумент.Вывести(ОбластьПодпись);

	
	Возврат ТабДокумент;
	
КонецФункции	

Функция ПолучитьЗапросДляПечатиПриложения(Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеРасчетВФССОплаты.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК ДРФО,
		|	ЗаявлениеРасчетВФССОплаты.НомерБольничного,
		|	ЗаявлениеРасчетВФССОплаты.ПричинаНетрудоспособности,
		|	ЗаявлениеРасчетВФССОплаты.ПериодС,
		|	ЗаявлениеРасчетВФССОплаты.ПериодПо,
		|	ЗаявлениеРасчетВФССОплаты.КоличествоДнейВсего,
		|	ЗаявлениеРасчетВФССОплаты.КоличествоДнейВсегоФСС,
		|	ЗаявлениеРасчетВФССОплаты.СуммаПособияВсегоФСС,
		|	ЗаявлениеРасчетВФССОплаты.СуммаПособияВсего,
		|	ЗаявлениеРасчетВФССОплаты.Сотрудник.ФизическоеЛицо
		|ПОМЕСТИТЬ ВыборкаПоДокументу
		|ИЗ
		|	Документ.ЗаявлениеРасчетВФСС.Оплаты КАК ЗаявлениеРасчетВФССОплаты
		|ГДЕ
		|	ЗаявлениеРасчетВФССОплаты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыборкаПоДокументу.НомерБольничного,
		|	ВЫБОР
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
		|			ТОГДА ""1""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
		|			ТОГДА ""8""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
		|			ТОГДА ""10""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаВзрослым)
		|			ТОГДА ""10""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Карантин)
		|			ТОГДА ""6""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Протезирование)
		|			ТОГДА ""9""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ЗаболеваниеЧернобыльцев)
		|			ТОГДА ""3""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.НепроизводственныеТравмы)
		|			ТОГДА ""5""
		|		КОГДА ВыборкаПоДокументу.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.СанаторноКурортноеЛечение)
		|			ТОГДА ""7""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПричинаНетрудоспособности,
		|	ВыборкаПоДокументу.ПериодС,
		|	ВыборкаПоДокументу.ПериодПо,
		|	ВыборкаПоДокументу.КоличествоДнейВсего,
		|	ВыборкаПоДокументу.КоличествоДнейВсегоФСС,
		|	ВыборкаПоДокументу.СуммаПособияВсегоФСС,
		|	ВыборкаПоДокументу.СуммаПособияВсего,
		|	ФИОФизическихЛицСрезПоследних.Фамилия,
		|	ФИОФизическихЛицСрезПоследних.Имя,
		|	ФИОФизическихЛицСрезПоследних.Отчество,
		|	ВыборкаПоДокументу.ДРФО
		|ИЗ
		|	ВыборкаПоДокументу КАК ВыборкаПоДокументу
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизическихЛицСрезПоследних
		|		ПО ВыборкаПоДокументу.СотрудникФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Дата", Документ.Дата);
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции	

Функция СформироватьЗапросДляПечатиПриложений2018(Документ, ТЗ = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаявлениеРасчетВФССОплаты.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
		|	ЗаявлениеРасчетВФССОплаты.ДокументОснование,
		|	ЗаявлениеРасчетВФССОплаты.НомерБольничного,
		|	ЗаявлениеРасчетВФССОплаты.ПричинаНетрудоспособности,
		|	ЗаявлениеРасчетВФССОплаты.ПериодС,
		|	ЗаявлениеРасчетВФССОплаты.ПериодПо,
		|	ЗаявлениеРасчетВФССОплаты.КоличествоДнейВсего,
		|	ЗаявлениеРасчетВФССОплаты.КоличествоДнейВсегоФСС,
		|	ЗаявлениеРасчетВФССОплаты.СуммаПособияВсегоФСС,
		|	ЗаявлениеРасчетВФССОплаты.СуммаПособияВсего,
		|	ЗаявлениеРасчетВФССОплаты.СуммаЛьготыЧернобыльцы,
		|	ЗаявлениеРасчетВФССОплаты.Сотрудник,
		|	ЗаявлениеРасчетВФССОплаты.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТТЧБольничные
		|ИЗ
		|	Документ.ЗаявлениеРасчетВФСС.Оплаты КАК ЗаявлениеРасчетВФССОплаты
		|ГДЕ
		|	ЗаявлениеРасчетВФССОплаты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
		|	ЗаявлениеРасчетВФССПособияНаПогребение.ДокументОснование,
		|	ЗаявлениеРасчетВФССПособияНаПогребение.РазмерПособия,
		|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник,
		|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТТЧПособия
		|ИЗ
		|	Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение КАК ЗаявлениеРасчетВФССПособияНаПогребение
		|ГДЕ
		|	ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ТЧБольничные.КоличествоДнейВсегоФСС) КАК Дни,
		|	СУММА(ТЧБольничные.СуммаПособияВсегоФСС) КАК Сумма,
		|	СУММА(ТЧБольничные.СуммаЛьготыЧернобыльцы) КАК СуммаЛьготы,
		|	СУММА(ВЫБОР КОГДА ТЧБольничные.СуммаЛьготыЧернобыльцы <> 0 ТОГДА ТЧБольничные.КоличествоДнейВсегоФСС ИНАЧЕ 0 КОНЕЦ) КАК ДниЛьготы
		|ИЗ
		|	ВТТЧБольничные КАК ТЧБольничные
		|ГДЕ
		|	ТЧБольничные.ПричинаНетрудоспособности НЕ В (&БиР)
		|	И ТЧБольничные.ПричинаНетрудоспособности НЕ В (&НС)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ТЧБольничные.КоличествоДнейВсегоФСС) КАК Дни,
		|	СУММА(ТЧБольничные.СуммаПособияВсегоФСС) КАК Сумма,
		|	СУММА(ТЧБольничные.СуммаЛьготыЧернобыльцы) КАК СуммаЛьготы,
		|	СУММА(ВЫБОР КОГДА ТЧБольничные.СуммаЛьготыЧернобыльцы <> 0 ТОГДА ТЧБольничные.КоличествоДнейВсегоФСС ИНАЧЕ 0 КОНЕЦ) КАК ДниЛьготы
		|ИЗ
		|	ВТТЧБольничные КАК ТЧБольничные
		|ГДЕ
		|	ТЧБольничные.ПричинаНетрудоспособности В (&БиР)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ТЧБольничные.КоличествоДнейВсегоФСС) КАК Дни,
		|	СУММА(ТЧБольничные.СуммаПособияВсегоФСС) КАК Сумма,
		|	СУММА(ТЧБольничные.СуммаЛьготыЧернобыльцы) КАК СуммаЛьготы
		|ИЗ
		|	ВТТЧБольничные КАК ТЧБольничные
		|ГДЕ
		|	ТЧБольничные.ПричинаНетрудоспособности В (&НС)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ТЧПособия.ФизическоеЛицо) КАК КоличествоЛиц,
		|	СУММА(ТЧПособия.РазмерПособия) КАК Сумма
		|ИЗ
		|	ВТТЧПособия КАК ТЧПособия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФИОФизическихЛицСрезПоследних.Фамилия,
		|	ФИОФизическихЛицСрезПоследних.Имя,
		|	ФИОФизическихЛицСрезПоследних.Отчество,
		|	ТЧБольничные.КодПоДРФО,
		|   ВЫБОР
		|   	КОГДА КадроваяИсторияСотрудников.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|     ТОГДА 1
		|     ИНАЧЕ 2
		|   КОНЕЦ КАК ВидЗанятости,
		|	ТЧБольничные.НомерБольничного,
		|   ВЫБОР
		|   	КОГДА ЕстьNULL(БольничныйЛист.ЯвляетсяПродолжениемБолезни, ЛОЖЬ) = ИСТИНА
		|     ТОГДА 2
		|     ИНАЧЕ 1
		|   КОНЕЦ КАК ЭтоПродолжениеБольничного,
		|	ВЫБОР
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ОбщееЗаболевание)
		|			ТОГДА ""1""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
		|			ТОГДА ""8""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаРебенком)
		|			ТОГДА ""10""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоУходуЗаВзрослым)
		|			ТОГДА ""10""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Карантин)
		|			ТОГДА ""6""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Протезирование)
		|			ТОГДА ""9""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ЗаболеваниеЧернобыльцев)
		|			ТОГДА ""3""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.НепроизводственныеТравмы)
		|			ТОГДА ""5""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.СанаторноКурортноеЛечение)
		|			ТОГДА ""7""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПричинаНетрудоспособности,
		|	ТЧБольничные.ПериодС КАК ДатаНачала,
		|	ТЧБольничные.ПериодПо КАК ДатаОкончания,
		|	ТЧБольничные.КоличествоДнейВсего КАК КоличествоДней,
		|	ТЧБольничные.КоличествоДнейВсегоФСС КАК КоличествоДнейФСС,
		|	ТЧБольничные.СуммаПособияВсего КАК Результат,
		|	ТЧБольничные.СуммаПособияВсегоФСС КАК РезультатФСС,
		|   ВЫБОР
		|   	КОГДА ТЧБольничные.СуммаЛьготыЧернобыльцы > 0
		|     ТОГДА КоличествоДнейВсегоФСС
		|     ИНАЧЕ """"
		|   КОНЕЦ КАК КоличествоДнейЧАЕС,
		|	ТЧБольничные.СуммаЛьготыЧернобыльцы КАК РезультатЧАЕС,
		|	ЕстьNULL(БольничныйЛист.СтажВМесяцах, 0) КАК СтажВМесяцах,
		|	ЕстьNULL(БольничныйЛист.СтажЗа12МесяцевВМесяцах, 0) КАК СтажЗа12МесяцевВМесяцах
		|ИЗ
		|	ВТТЧБольничные КАК ТЧБольничные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизическихЛицСрезПоследних
		|		ПО ТЧБольничные.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудников
		|		ПО ТЧБольничные.Сотрудник = КадроваяИсторияСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
		|		ПО ТЧБольничные.ДокументОснование = БольничныйЛист.Ссылка
		|ГДЕ
		|	ТЧБольничные.ПричинаНетрудоспособности НЕ В (&НС)
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФИОФизическихЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизическихЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизическихЛицСрезПоследних.Отчество КАК Отчество,
		|	ТЧПособия.КодПоДРФО КАК КодПоДРФО,
		|	ТЧПособия.РазмерПособия КАК Сумма,
		|   ЕдиновременноеПособиеЗаСчетФСС.ФамилияУмершего КАК ФамилияУмершего,
		|   ЕдиновременноеПособиеЗаСчетФСС.ИмяУмершего КАК ИмяУмершего,
		|   ЕдиновременноеПособиеЗаСчетФСС.ОтчествоУмершего КАК ОтчествоУмершего,
		|   ЕдиновременноеПособиеЗаСчетФСС.СвидетельствоСерия КАК СвидетельствоСерия,
		|   ЕдиновременноеПособиеЗаСчетФСС.СвидетельствоНомер КАК СвидетельствоНомер
		|ИЗ ВТТЧПособия КАК ТЧПособия
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизическихЛицСрезПоследних
		|		ПО ТЧПособия.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|		ПО ТЧПособия.ДокументОснование = ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФИОФизическихЛицСрезПоследних.Фамилия,
		|	ФИОФизическихЛицСрезПоследних.Имя,
		|	ФИОФизическихЛицСрезПоследних.Отчество,
		|	ТЧБольничные.КодПоДРФО,
		|   ВЫБОР
		|   	КОГДА КадроваяИсторияСотрудников.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ОсновноеМестоРаботы)
		|     ТОГДА 1
		|     ИНАЧЕ 2
		|   КОНЕЦ КАК ВидЗанятости,
		|	ТЧБольничные.НомерБольничного,
		|	ВЫБОР
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.Профзаболевание)
		|			ТОГДА ""2""
		|		КОГДА ТЧБольничные.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ТравмаНаПроизводстве)
		|			ТОГДА ""4""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ПричинаНетрудоспособности,
		|	ТЧБольничные.ПериодС КАК ДатаНачала,
		|	ТЧБольничные.ПериодПо КАК ДатаОкончания,
		|	ТЧБольничные.КоличествоДнейВсегоФСС КАК КоличествоДнейФСС,
		|	ТЧБольничные.СуммаПособияВсегоФСС КАК РезультатФСС
		|ИЗ
		|	ВТТЧБольничные КАК ТЧБольничные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизическихЛицСрезПоследних
		|		ПО ТЧБольничные.ФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(&Дата, ) КАК КадроваяИсторияСотрудников
		|		ПО ТЧБольничные.Сотрудник = КадроваяИсторияСотрудников.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
		|		ПО ТЧБольничные.ДокументОснование = БольничныйЛист.Ссылка
		|ГДЕ
		|	ТЧБольничные.ПричинаНетрудоспособности В (&НС)

		|";
	
	Запрос.УстановитьПараметр("Дата", Документ.Дата);
	Запрос.УстановитьПараметр("Ссылка", Документ);
	МассивДекретные = Новый Массив();
	МассивДекретные.Добавить(Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам);
	МассивНС = Новый Массив();
	МассивНС.Добавить(Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве);
	МассивНС.Добавить(Перечисления.ПричиныНетрудоспособности.Профзаболевание);
	Запрос.УстановитьПараметр("БиР", МассивДекретные);
	Запрос.УстановитьПараметр("НС", МассивНС);
	
	Результат = Новый Структура;
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Если ТЗ Тогда
		Результат.Вставить("Итоги11Б", РезультатЗапроса[2].Выгрузить());
		Результат.Вставить("Итоги11Д", РезультатЗапроса[3].Выгрузить());
		Результат.Вставить("Итоги13", РезультатЗапроса[4].Выгрузить());
		Результат.Вставить("Итоги12", РезультатЗапроса[5].Выгрузить());
		Результат.Вставить("ТЧ11", РезультатЗапроса[6].Выгрузить());
		Результат.Вставить("ТЧ12", РезультатЗапроса[7].Выгрузить());
		Результат.Вставить("ТЧ13", РезультатЗапроса[8].Выгрузить());
		
	Иначе	
		Результат.Вставить("Итоги11Б", РезультатЗапроса[2].Выбрать());
		Результат.Вставить("Итоги11Д", РезультатЗапроса[3].Выбрать());
		Результат.Вставить("Итоги13", РезультатЗапроса[4].Выбрать());
		Результат.Вставить("Итоги12", РезультатЗапроса[5].Выбрать());
		Результат.Вставить("ТЧ11", РезультатЗапроса[6].Выбрать());
		Результат.Вставить("ТЧ12", РезультатЗапроса[7].Выбрать());
		Результат.Вставить("ТЧ13", РезультатЗапроса[8].Выбрать());
	КонецЕсли;	
	Возврат Результат;

КонецФункции	


// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Ссылка)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗаявлениеРасчетВФСС.Дата,
	               |	ЗаявлениеРасчетВФСС.Месяц,
	               |	ЗаявлениеРасчетВФСС.Организация,
	               |	ЗаявлениеРасчетВФСС.Ответственный,
	               |	ЗаявлениеРасчетВФСС.Ссылка,
	               |	ЗаявлениеРасчетВФСС.КодПоЕДРПОУ,
	               |	ЗаявлениеРасчетВФСС.Руководитель,
	               |	ЗаявлениеРасчетВФСС.АдресОрганизации,
	               |	ЗаявлениеРасчетВФСС.Банк,
	               |	ЗаявлениеРасчетВФСС.НаименованиеБанка,
	               |	ЗаявлениеРасчетВФСС.НомерЛицевогоСчета,
	               |	ЗаявлениеРасчетВФСС.НомерСчета,
	               |	ЗаявлениеРасчетВФСС.МФОБанка,
	               |	ЗаявлениеРасчетВФСС.ТелефонСоставителя,
	               |	ЗаявлениеРасчетВФСС.ЗаявлениеСоставил,
	               |	ЗаявлениеРасчетВФСС.ГлавныйБухгалтер,
	               |	ЗаявлениеРасчетВФСС.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	               |	ЗаявлениеРасчетВФСС.ДолжностьСоставителя.Наименование КАК ДолжностьСоставителя
	               |ИЗ
	               |	Документ.ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
	               |ГДЕ
	               |	ЗаявлениеРасчетВФСС.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

#КонецОбласти

#Область МеханизмФиксацииИзменений

Функция ПараметрыФиксацииВторичныхДанных() Экспорт
	Возврат ФиксацияВторичныхДанныхВДокументах.ПараметрыФиксацииВторичныхДанных(ФиксацияОписаниеФиксацииРеквизитов(), , ФиксацияОписанияТЧ());
КонецФункции

Функция ФиксацияОписаниеФиксацииРеквизитов()
	
	Возврат ПрямыеВыплатыПособийСоциальногоСтрахования.ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов();
	
КонецФункции

Функция ФиксацияОписанияТЧ()
	
	МассивПолейОплаты = Новый Массив;
	МассивПолейОплаты.Добавить("КоличествоДнейВсегоФСС");
	МассивПолейОплаты.Добавить("СуммаПособияВсего");
	МассивПолейОплаты.Добавить("КоличествоДнейВсего");
	МассивПолейОплаты.Добавить("СуммаПособияВсегоФСС");
	МассивПолейОплаты.Добавить("СуммаЛьготыЧернобыльцы");
	
	МассивПолейПособия = Новый Массив;
	МассивПолейПособия.Добавить("РазмерПособия");
	
	СтруктураКлючевыхПолей = Новый Структура("Оплаты, ПособияНаПогребение", МассивПолейОплаты, МассивПолейПособия);
	
	Возврат СтруктураКлючевыхПолей;
	
КонецФункции

#КонецОбласти

#КонецЕсли
