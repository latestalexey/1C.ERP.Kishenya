&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УправлениеШтатнымРасписаниемФормы.ДокументыПриСозданииНаСервере(ЭтаФорма, "Объект.МесяцВступленияВСилу");
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ПриПолученииДанныхНаСервере();
		ЗаполнитьДокументПоОрганизацииИПодразделению();
		
	КонецЕсли;
	
	Элементы.ПозицииТарифнаяСетка.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитТарифнаяСеткаТариф");
	Элементы.ПозицииРазрядКатегория.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияТариф");	
	Элементы.ПозицииТарифнаяСеткаНадбавки.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитТарифнаяСеткаНадбавка");
	Элементы.ПозицииРазрядКатегорияНадбавки.Заголовок = РазрядыКатегорииДолжностей.ИнициализироватьЗаголовокФормыИРеквизитов("РеквизитРазрядКатегорияНадбавка");		
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриПолученииДанныхНаСервере();
	
	УправлениеШтатнымРасписаниемФормы.ДокументыПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект, ТекущийОбъект.МесяцВступленияВСилу);
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцВступленияВСилу", "МесяцВступленияВСилуСтрока");
	ЗаполнитьИтоговыйФОТПоПозициям();
	
	НастроитьОтображениеГруппыПодписантов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыДанныеПозицииШтатногоРасписания" И Источник = ЭтаФорма Тогда
		
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("СохранениеДанныхПозицииШРДокументаУтверждениеШтатногоРасписания");
		
		ПрочитатьДанныеПозицииВФорму(Параметр);
		УправлениеШтатнымРасписаниемКлиент.ПозицииПриАктивизацииСтроки(ЭтаФорма);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеШтатнымРасписаниемФормы.ДокументыОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ПроведениеДокументаУтверждениеШтатногоРасписания");
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	УправлениеШтатнымРасписаниемФормы.РеквизитВДанные(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеШтатнымРасписаниемФормы.ПоместитьДанныеОбъектаВДанныеФормы(ЭтаФорма, ТекущийОбъект, Объект.МесяцВступленияВСилу);
	ЗаполнитьИтоговыйФОТПоПозициям();
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправлениеШтатнымРасписаниемКлиент.ОповеститьОЗаписиПозицийШтатногоРасписания(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	ЗаполнитьДокументПоОрганизацииИПодразделению();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	ЗаполнитьДокументПоОрганизацииИПодразделению();
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПриИзменении(Элемент)
	
	НастроитьОтображениеГруппыПодписантов();
	
КонецПроцедуры

&НаКлиенте
Процедура ГлавныйБухгалтерПриИзменении(Элемент)
	
	НастроитьОтображениеГруппыПодписантов();
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительКадровойСлужбыПриИзменении(Элемент)
	
	НастроитьОтображениеГруппыПодписантов();
	
КонецПроцедуры

///////////////////////////////////////////////////////
// Редактирование месяца строкой.

&НаКлиенте
Процедура МесяцВступленияВСилуСтрокаПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцВступленияВСилу", "МесяцВступленияВСилуСтрока", Модифицированность);
	ПриИзмененииМесяцаВступленияВСилу();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцВступленияВСилуСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцВступленияВСилуСтрокаНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцВступленияВСилу", "МесяцВступленияВСилуСтрока", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцВступленияВСилуСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцВступленияВСилу", "МесяцВступленияВСилуСтрока", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцВступленияВСилуСтрокаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцВступленияВСилуСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяцаВступленияВСилу()
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтаФорма);
	ЗаполнитьДокументПоОрганизацииИПодразделению();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцВступленияВСилуСтрокаНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	
	ПриИзмененииМесяцаВступленияВСилу();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыПозиции

&НаКлиенте
Процедура ПозицииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "ПозицииСозданоНовыхРабочихМест" Тогда
		ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ОткрытиеФормыСДаннымиПоПозицииШРДокументаУтверждениеШтатногоРасписания");
		ОткрытьДанныеПозиции(Элемент.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПриАктивизацииСтроки(Элемент)
	
	УправлениеШтатнымРасписаниемКлиент.ПозицииПриАктивизацииСтроки(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("ВводНовойПозицииШРДокументаУтверждениеШтатногоРасписания");
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ПредыдущаяСтрока = Элемент.ТекущиеДанные
	КонецЕсли; 
	
	НоваяСтрокаПозиции = Объект.Позиции.Добавить();
	ИдентификаторТекущейПозиции = НоваяСтрокаПозиции.ПолучитьИдентификатор();
	Элемент.ТекущаяСтрока = ИдентификаторТекущейПозиции;
	
	Если Копирование Тогда
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПозиции, ПредыдущаяСтрока);
		ТекущаяДолжность = Элемент.ТекущиеДанные.Должность;
	КонецЕсли;
	
	УправлениеШтатнымРасписаниемКлиент.ПозицииПриНачалеРедактирования(ЭтаФорма, ИдентификаторТекущейПозиции, Истина, Копирование);
	Если Копирование Тогда
		СкопироватьДанныеПозиции(ИдентификаторТекущейПозиции, ПредыдущаяСтрока.ПолучитьИдентификатор());
	КонецЕсли;
	
	ОткрытьДанныеПозиции(ИдентификаторТекущейПозиции);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПередУдалением(Элемент, Отказ)
	
	УправлениеШтатнымРасписаниемКлиент.ПозицииПередУдалением(ЭтаФорма, Отказ, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ОбработатьВыбранныеПозиции(ВыбранноеЗначение) Тогда
		Если Объект.Позиции.Количество() > 0 Тогда
			Элементы.Позиции.ТекущаяСтрока = Объект.Позиции[Объект.Позиции.Количество() - 1].ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ЗакрытьПозицию(Команда)
	
	УправлениеШтатнымРасписаниемКлиент.ЗакрытьПозицию(ЭтаФорма);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьПоТекущейКадровойРасстановке(Команда)
	
	ДополнитьПоТекущейКадровойРасстановкеНаКлиенте();
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УпорядочитьСписокПозиций(Команда)
	
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени("СортировкаПозицийШРДокументаУтверждениеШтатногоРасписания");	
	УпорядочитьСписокПозицийНаСервере();
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаШтатногоРасписания(Команда)
	
	ПроверкаШтатногоРасписанияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтразитьВКадровомУчете(Команда)
	
	ДополнительныеПараметры = Новый Структура("ЗаписатьДокумент", Истина);
	
	Если Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru='Для продолжения необходимо провести документ.';uk='Для продовження необхідно провести документ.'") + Символы.ПС + НСтр("ru='Продолжить?';uk='Продовжити?'");
		
		Оповещение = Новый ОписаниеОповещения("ОтразитьВКадровомУчетеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе 
		
		ДополнительныеПараметры.ЗаписатьДокумент = Ложь;
		ОтразитьВКадровомУчетеЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПодборУправленческойПозиции()
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ОрганизационнаяСтруктураКлиент");
		Модуль.ВыбратьУправленческуюПозициюИзСписка(ЭтотОбъект, АдресСпискаПодобранных());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
		Модуль.ДополнитьФормуДокументовИзмененияШтатногоРасписания(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтразитьВКадровомУчетеЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ЗаписатьДокумент Тогда 
		
		Попытка
			РезультатЗаписи = Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
		Исключение
			РезультатЗаписи = Ложь;
		КонецПопытки;
	
		Если Не РезультатЗаписи Тогда
			ПоказатьПредупреждение(, НСтр("ru='Во время сохранения произошли ошибки. Продолжение невозможно.';uk='Під час збереження сталися помилки. Продовження неможливе.'"));
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	КоличествоПозиций = Элементы.Позиции.ВыделенныеСтроки.Количество();
	
	Если КоличествоПозиций = 1 Тогда
		
		ПараметрыОткрытияФормы = Новый Структура;
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ИзменениеШтатногоРасписания",		Объект.Ссылка);
		ЗначенияЗаполнения.Вставить("ИдентификаторСтрокиПозиции",		Элементы.Позиции.ТекущиеДанные.ИдентификаторСтрокиПозиции);
		ЗначенияЗаполнения.Вставить("Организация", 						Объект.Организация);
		ЗначенияЗаполнения.Вставить("Подразделение", 					Элементы.Позиции.ТекущиеДанные.Подразделение);
		ЗначенияЗаполнения.Вставить("Должность", 						Элементы.Позиции.ТекущиеДанные.Должность);
		ЗначенияЗаполнения.Вставить("ДолжностьПоШтатномуРасписанию", 	Элементы.Позиции.ТекущиеДанные.Позиция);
		ЗначенияЗаполнения.Вставить("ДатаИзменения", 					Объект.МесяцВступленияВСилу);
		
		ЗначенияЗаполнения.Вставить("ЭтоОтражениеИзмененияШтатногоРасписания", Истина);
		
		ПараметрыОткрытияФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Документ.ИзменениеПлановыхНачислений.Форма.ФормаДокумента", ПараметрыОткрытияФормы);
	ИначеЕсли КоличествоПозиций > 1 Тогда  
		ПоказатьПредупреждение(, НСтр("ru='Отражение в кадровом учете необходимо вводить для каждой позиции отдельно.';uk='Відображення в кадровому обліку необхідно вводити для кожної позиції окремо.'"));
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Не выбрана позиция для отражения в кадровом учете.';uk='Не обрана позиція для відображення в кадровому обліку.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументПоОрганизацииИПодразделению()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцВступленияВСилу", "МесяцВступленияВСилуСтрока");
	
	ЗаполнитьДокументНаСервере();
	ЗаполнитьДанныеФормыПоОрганизации();
	
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Функция ОписаниеТаблицыНачислений()
	
	ОписаниеТаблицыВидовРасчета = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеТаблицыРасчета();
	ОписаниеТаблицыВидовРасчета.ЭтоПлановыеНачисленияУдержания = Истина;
	Возврат ОписаниеТаблицыВидовРасчета;
	
КонецФункции	

&НаКлиенте
Функция ОписаниеТаблицыНачисленийНаКлиенте() Экспорт
	
	Возврат ОписаниеТаблицыНачислений();
	
КонецФункции

&НаСервере
Функция ОписаниеТаблицыНачисленийНаСервере() Экспорт
	
	Возврат ОписаниеТаблицыНачислений();
	
КонецФункции

&НаКлиенте
Функция ОписаниеКоманднойПанелиНачислений() Экспорт
	ОписаниеКоманднойПанелиНачислений = ЗарплатаКадрыРасширенныйКлиент.ОписаниеКоманднойПанелиНачислений();
	Возврат ОписаниеКоманднойПанелиНачислений
КонецФункции

&НаСервере
Процедура РассчитатьИтогиФОТПоПозиции(ИдентификаторСтроки)
	
	ДанныеТекущейПозиции = Объект.Позиции.НайтиПоИдентификатору(ИдентификаторСтроки);
	ДанныеНачислений = Объект.Начисления.Выгрузить(Новый Структура("ИдентификаторСтрокиПозиции", ДанныеТекущейПозиции.ИдентификаторСтрокиПозиции));
	УправлениеШтатнымРасписанием.РассчитатьИтогиФОТПоПозиции(ЭтаФорма, ДанныеТекущейПозиции, ДанныеНачислений);
	
	ЗаполнитьИтоговыйФОТПоПозициям();
	
КонецПроцедуры

&НаСервере
Процедура УпорядочитьСписокПозицийНаСервере()
	
	УправлениеШтатнымРасписанием.УпорядочитьСписокПозиций(Объект.Позиции);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.МесяцВступленияВСилу) Тогда
		
		Если ЗначениеЗаполнено(Объект.Организация) Тогда
			
			ПоследняяДатаИзменений = УправлениеШтатнымРасписаниемФормы.ПоследняяДатаИзменений(Объект.Организация);
			Если Объект.МесяцВступленияВСилу <= ПоследняяДатаИзменений Тогда
				Объект.МесяцВступленияВСилу = НачалоМесяца(ДобавитьМесяц(ПоследняяДатаИзменений, 1));
			КонецЕсли;
			
		КонецЕсли; 
		
		ТекущийМесяц = НачалоМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), 1));
		Если Объект.МесяцВступленияВСилу < ТекущийМесяц Тогда
			Объект.МесяцВступленияВСилу = ТекущийМесяц;
		КонецЕсли;
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцВступленияВСилу", "МесяцВступленияВСилуСтрока");
		
	КонецЕсли;
		
	УправлениеШтатнымРасписаниемФормы.ЗаполнитьНовыйДокумент(ЭтаФорма, Объект.МесяцВступленияВСилу);
	УправлениеШтатнымРасписаниемФормы.УстановитьФункциональныеОпцииФормы(ЭтаФорма);
	ЗаполнитьИтоговыйФОТПоПозициям();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаШтатногоРасписанияНаСервере()
	
	УправлениеШтатнымРасписаниемФормы.ПроверкаШтатногоРасписания(ЭтаФорма, Объект.МесяцВступленияВСилу);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИтоговыйФОТПоПозициям()
	
	УправлениеШтатнымРасписаниемКлиентСервер.ЗаполнитьИтоговыйФОТПоПозициям(ЭтаФорма);
	РассчитатьИтогиФОТПоДокументу();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиФОТПоДокументу()
	
	ИтогоФОТПоПозиции = Объект.Позиции.Итог("ФОТПоПозиции");
	ИтогоФОТПоПозицииМин = Объект.Позиции.Итог("ФОТПоПозицииМин");
	ИтогоФОТПоПозицииМакс = Объект.Позиции.Итог("ФОТПоПозицииМакс");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНачисленияИЕжегодныеОтпуска() Экспорт
	
	УправлениеШтатнымРасписаниемФормы.УдалитьНачисленияИЕжегодныеОтпуска(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранных()
	
	Возврат ПоместитьВоВременноеХранилище(ОбщегоНазначения.ВыгрузитьКолонку(Объект.Позиции, "Позиция"), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ОбработатьВыбранныеПозиции(ВыбранноеЗначение)
	
	ПозицияДобавлена = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		ВыбранныеПозиции = ВыбранноеЗначение;
	Иначе
		ВыбранныеПозиции = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбранноеЗначение);
	КонецЕсли;
	
	Для Каждого Позиция Из ВыбранныеПозиции Цикл
		
		СтруктураПоиска = Новый Структура("Позиция", Позиция);
		Если Объект.Позиции.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
			
			УправлениеШтатнымРасписаниемФормы.ДобавитьДанныеПоПозиции(ЭтаФорма, Позиция, Объект.МесяцВступленияВСилу);
			
			ДобавленнаяСтрока = Объект.Позиции[Объект.Позиции.Количество() - 1];
			РассчитатьИтогиФОТПоПозиции(ДобавленнаяСтрока.ПолучитьИдентификатор());
			
			ПозицияДобавлена = Истина;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат ПозицияДобавлена;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции механизма выполнения длительных операций.

&НаКлиенте
Процедура ДополнитьПоТекущейКадровойРасстановкеНаКлиенте()
	
	ОчиститьСообщения();
	
	РезультатРаботыЗадания = ДополнитьПоТекущейКадровойРасстановкеНаСервере();
	
	Если РезультатРаботыЗадания.ЗаданиеВыполнено Тогда
		ОповеститьОбИзменении(Объект.Ссылка);
	Иначе
		
		ИдентификаторЗадания = РезультатРаботыЗадания.ИдентификаторЗадания;
		АдресХранилища		 = РезультатРаботыЗадания.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДополнитьПоТекущейКадровойРасстановкеНаСервере()
	
	ПараметрыВыполнения = Новый Структура("Организация,Подразделение,ДатаВступленияВСилу");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполнения, Объект);
	
	ПараметрыВыполнения.ДатаВступленияВСилу = Объект.МесяцВступленияВСилу;
	ПараметрыВыполнения.Вставить("Позиции", Объект.Позиции.Выгрузить());
	ПараметрыВыполнения.Вставить("Начисления", Объект.Начисления.Выгрузить());
	ПараметрыВыполнения.Вставить("Показатели", Объект.Показатели.Выгрузить());
	ПараметрыВыполнения.Вставить("ЕжегодныеОтпуска", Объект.ЕжегодныеОтпуска.Выгрузить());
	ПараметрыВыполнения.Вставить("Специальности", Объект.Специальности.Выгрузить());
	
	НаименованиеЗадания = НСтр("ru='Формирование позиций штатного расписания""';uk='Формування позицій штатного розкладу""'");
	
	РезультатРаботыЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"УправлениеШтатнымРасписаниемФормы.ДополнитьПоТекущейКадровойРасстановке",
		ПараметрыВыполнения,
		НаименованиеЗадания);
	
	АдресХранилища = РезультатРаботыЗадания.АдресХранилища;
	
	Если РезультатРаботыЗадания.ЗаданиеВыполнено Тогда
		ЗаполнениеПослеВыполненияДлительнойОперации();
	КонецЕсли;
	
	Возврат РезультатРаботыЗадания;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаСервереБезКонтекста
Функция СообщенияФоновогоЗадания(ИдентификаторЗадания)
	
	СообщенияПользователю = Новый Массив;
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если ФоновоеЗадание <> Неопределено Тогда
		СообщенияПользователю = ФоновоеЗадание.ПолучитьСообщенияПользователю();
	КонецЕсли;
	
	Возврат СообщенияПользователю;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
				Состояние(НСтр("ru='Процесс формирования кадровых приказов завершен';uk='Процес формування кадрових наказів завершено'"));
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				
				ЗаполнениеПослеВыполненияДлительнойОперации();
				
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания",
					ПараметрыОбработчикаОжидания.ТекущийИнтервал,
					Истина);
			КонецЕсли;
				
		КонецЕсли;
		
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		
		СообщенияПользователю = СообщенияФоновогоЗадания(ИдентификаторЗадания);
		Если СообщенияПользователю <> Неопределено Тогда
			Для каждого СообщениеФоновогоЗадания Из СообщенияПользователю Цикл
				СообщениеФоновогоЗадания.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеПослеВыполненияДлительнойОперации()
	
	УправлениеШтатнымРасписаниемФормы.ОбработатьЗаполнениеДокументаВФорме(ЭтаФорма);
	ЗаполнитьИтоговыйФОТПоПозициям();
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьДанныеПозиции(ИдентификаторТекущейПозиции, ИдентификаторПозицииИсточника)
	
	УправлениеШтатнымРасписаниемФормы.СкопироватьДанныеПозиции(ЭтаФорма, ИдентификаторТекущейПозиции, ИдентификаторПозицииИсточника);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДанныеПозиции(ИдентификаторСтрокиТекущейПозиции)
	
	ДанныеПозиции = ОписаниеДанныхПозицииВХранилище(ИдентификаторСтрокиТекущейПозиции);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", ДанныеПозиции.Ключ);
	ПараметрыОткрытия.Вставить("АдресДанныхПозицииВХранилище", ДанныеПозиции.АдресДанныхПозицииВХранилище);
	
	ОткрытьФорму("Справочник.ШтатноеРасписание.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ОписаниеДанныхПозицииВХранилище(ИдентификаторСтрокиТекущейПозиции)
	
	Возврат УправлениеШтатнымРасписаниемФормы.ОписаниеДанныхПозицииВХранилище(
		ЭтаФорма, ИдентификаторСтрокиТекущейПозиции, Объект.МесяцВступленияВСилу, Объект.Подразделение, Истина);
	
КонецФункции

&НаСервере
Процедура ПрочитатьДанныеПозицииВФорму(АдресДанныхПозиции)
	
	УправлениеШтатнымРасписаниемФормы.ПрочитатьДанныеПозицииВФорму(ЭтаФорма, АдресДанныхПозиции);
	РассчитатьИтогиФОТПоПозиции(ИдентификаторРедактируемойСтроки);
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоОрганизации()
	
	УправлениеШтатнымРасписанием.ЗаполнитьПодписантовДокумента(Объект, Объект.МесяцВступленияВСилу);
	НастроитьОтображениеГруппыПодписантов();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеГруппыПодписантов()
	
	ЗарплатаКадры.НастроитьОтображениеГруппыПодписей(Элементы.ПодписиГруппа, "Объект.Руководитель", "Объект.ГлавныйБухгалтер", "Объект.РуководительКадровойСлужбы");	
	
КонецПроцедуры	

#Область КлючевыеРеквизитыЗаполненияФормы

// Функция возвращает описание таблиц формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	Массив = Новый Массив;
	Массив.Добавить("Объект.Позиции");
	Массив.Добавить("Объект.Начисления");
	Массив.Добавить("Объект.Показатели");
	Массив.Добавить("Объект.ЕжегодныеОтпуска");
	Массив.Добавить("Объект.Специальности");
	Возврат Массив
КонецФункции 

// Функция возвращает массив реквизитов формы подключенных к механизму ключевых реквизитов формы.
&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация",		НСтр("ru='организации';uk='організації'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Подразделение",		НСтр("ru='подразделения';uk='підрозділи'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "МесяцВступленияВСилуСтрока",		НСтр("ru='месяца вступления в силу';uk='місяця набрання чинності'")));
	Возврат Массив
КонецФункции

#КонецОбласти

#КонецОбласти
