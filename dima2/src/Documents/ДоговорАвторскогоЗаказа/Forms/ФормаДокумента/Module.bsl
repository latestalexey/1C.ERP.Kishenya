
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	РасчетЗарплатыРасширенныйФормы.ДокументыПриСозданииНаСервере(ЭтаФорма);
	
	Если Параметры.Ключ = Документы.ДоговорАвторскогоЗаказа.ПустаяСсылка() Тогда
		
		Объект.СпособОплаты = Перечисления.СпособыОплатыПоДоговоруГПХ.ОднократноВКонцеСрока;
		
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный", 
		"Объект.Организация", "Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			КадровыйУчетРасширенный.УстановитьРольДоговорникСотруднику(Объект.Сотрудник);
		КонецЕсли;
		
		ЗаполнитьДанныеФормыПоОрганизации();
		УстановитьФункциональныеОпцииФормы();
						
	КонецЕсли;
	
	СотрудникПрежний = Объект.Сотрудник;
	
	УстановитьПараметрСпискаАктов();
	
	УстановитьВидимостьВводаНаОснованииАкта(ЭтаФорма, Объект.СпособОплаты);
	
	УстановитьВидимостьЗакладкиАктов(ЭтаФорма, Объект.СпособОплаты);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "Печать".
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьДоступностьЭлементаРазмерПлатежа();
	УстановитьДоступностьЭлементаКатегорияЕСВ();	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементаКатегорияЕСВ()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидАвторскогоДоговора) Тогда
		Элементы.КатегорияЕСВ.Доступность = Ложь;
	Иначе 	
		Элементы.КатегорияЕСВ.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьФункциональныеОпцииФормы();
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	СтруктураПараметровОповещения = Новый Структура;
	СтруктураПараметровОповещения.Вставить("Проведен", ЭтаФорма.Объект.Проведен);
	СтруктураПараметровОповещения.Вставить("ПомеченНаУдаление", ЭтаФорма.Объект.ПометкаУдаления);
	СтруктураПараметровОповещения.Вставить("Результат", ЭтаФорма.Объект.Ссылка);
	СтруктураПараметровОповещения.Вставить("Ответственный", ЭтаФорма.Объект.Ответственный);
	СтруктураПараметровОповещения.Вставить("ДатаДокумента", ЭтаФорма.Объект.Дата);
	СтруктураПараметровОповещения.Вставить("НомерДокумента", ЭтаФорма.Объект.Номер);
	СтруктураПараметровОповещения.Вставить("Сотрудник", ЭтаФорма.Объект.Сотрудник);
	Оповестить("ДокументДоговорАвторскогоЗаказаПослеЗаписи", СтруктураПараметровОповещения, ЭтаФорма);
	
	УстановитьВидимостьЗакладкиАктов(ЭтаФорма, Объект.СпособОплаты);
	
	УстановитьПараметрСпискаАктов();

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеОрганизацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбработатьИзменениеДатыДокументаНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ВидАвторскогоДоговораПриИзменении(Элемент)
	
	Элементы.КатегорияЕСВ.ТолькоПросмотр = ВидАвторскогоДоговораПриИзмененииСервер();
	УстановитьДоступностьЭлементаКатегорияЕСВ();
	
КонецПроцедуры

&НаСервере
Функция ВидАвторскогоДоговораПриИзмененииСервер()
	Если Объект.ВидАвторскогоДоговора.ВидЕСВ = Перечисления.ВидыЕСВ.НеУчитывается Тогда
		Объект.КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НеУчитывается;
		Возврат Истина;
	Иначе
		Объект.КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;	
КонецФункции

&НаКлиенте
Процедура ВариантОплатыПриИзменении(Элемент)
	
	Если Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот") И Объект.СуммаВычета <> 0 Тогда
		Объект.СуммаВычета = 0;
	КонецЕсли;
	
	УстановитьВидимостьВводаНаОснованииАкта(ЭтаФорма, Объект.СпособОплаты);
	
	УстановитьВидимостьЗакладкиАктов(ЭтаФорма, Объект.СпособОплаты);

	УстановитьДоступностьЭлементаРазмерПлатежа();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Если СотрудникПрежний <> Объект.Сотрудник Тогда
		НовыеНастройкиБухучета = "";
		ОбработатьИзменениеСотрудникаНаСервереБезКонтекста(Объект.Сотрудник, НовыеНастройкиБухучета);
		ЗаполнитьЗначенияСвойств(Объект, НовыеНастройкиБухучета);
		//ОбработатьИзменениеОтношениеКЕНВД();
		СотрудникПрежний = Объект.Сотрудник;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьИзменениеСотрудникаНаСервереБезКонтекста(Сотрудник, НастройкиБухучета)

	КадровыйУчетРасширенный.УстановитьРольДоговорникСотруднику(Сотрудник);
	НастройкиБухучета = Новый Структура("Подразделение, СтатьяФинансирования, СтатьяРасходов, СпособОтраженияЗарплатыВБухучете");
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина,Сотрудник,"ТекущееПодразделение");
	Если КадровыеДанные.Количество()>0 Тогда
		НастройкиБухучета.Подразделение = КадровыеДанные[0].ТекущееПодразделение;
	КонецЕсли;
	БухучетСотрудника = ОтражениеЗарплатыВБухучетеРасширенный.НастройкаБухучетаЗарплатыСотрудника(Сотрудник, ТекущаяДатаСеанса());
	ЗаполнитьЗначенияСвойств(НастройкиБухучета, БухучетСотрудника);

КонецПроцедуры










#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура СоздатьАкт(Команда)
	
	Если Модифицированность Тогда
		Записать();                  	
	КонецЕсли;	
		
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Основание", Объект.Ссылка);
	
	ОткрытьФорму("Документ.АктПриемкиВыполненныхРаботОказанныхУслуг.ФормаОбъекта", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);

КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства


// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки




&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьВводаНаОснованииАкта(Форма, СпособОплаты)

	ЭлементыФормы = Форма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаСоздатьНаОсновании.ПодчиненныеЭлементы;
	ЭлементыФормы.ФормаДокументАктПриемкиВыполненныхРаботОказанныхУслугСоздатьНаОсновании.Доступность = 
	СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЗакладкиАктов(Форма, СпособОплаты)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаАкты",
		"Видимость",
		СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот"));

	СпособОтображенияСтраниц = ?(СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот"), ОтображениеСтраницФормы.ЗакладкиСверху, ОтображениеСтраницФормы.Нет);	
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаУсловияДоговораАкты",
		"ОтображениеСтраниц",
		СпособОтображенияСтраниц); 
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаАкты",
		"Доступность",
		ЗначениеЗаполнено(Форма.Объект.Ссылка)); 
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()

	ЗаполнитьДанныеФормыПоОрганизации();
	УстановитьФункциональныеОпцииФормы();

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеДатыДокументаНаСервере()

	УстановитьФункциональныеОпцииФормы();

КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, НачалоДня(Объект.Дата));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыПоОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли; 
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
	
	ЗапрашиваемыеЗначения.Вставить("Руководитель", "Объект.Руководитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьРуководителя", "Объект.ДолжностьРуководителя");
	
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементаРазмерПлатежа()
	
	Элементы.РазмерПлатежа.Доступность = Объект.СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыОплатыПоДоговоруГПХ.ВКонцеСрокаСАвансовымиПлатежами");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрСпискаАктов()
	
	Акты.Параметры.УстановитьЗначениеПараметра("Договор", Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти
