#Если Не ТолстыйКлиентУправляемоеПриложение Или Сервер Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Уведомление";
	КомандаПечати.Представление = НСтр("ru='Уведомление';uk='Повідомлення'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Уведомление") Тогда
		ТабличныйДокумент = ТабличныйДокументУведомление(МассивОбъектов[0], ОбъектыПечати);
		Если НЕ ТабличныйДокумент = Неопределено Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"Уведомление", НСтр("ru='Уведомление о выплатах за счет ФСС';uk='Повідомлення про виплати за рахунок ФСС'"), ТабличныйДокумент);
		КонецЕсли;
	КонецЕсли;
	

КонецПроцедуры

Функция ТабличныйДокументУведомление(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ПФ_MXL_UK_Уведомление");
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = МассивОбъектов.Организация.НаименованиеПолное;
	ОбластьШапка.Параметры.КодПоЕДРПОУ = МассивОбъектов.КодПоЕДРПОУ;
	
	 Если Не ПустаяСтрока(МассивОбъектов.АдресОрганизации) Тогда
		 СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		 МассивОбъектов.АдресОрганизации,
		 ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
		 УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ОбластьШапка.Параметры.Адрес);
	 Иначе
		 ОбластьШапка.Параметры.Адрес = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	 КонецЕсли;
	 
	 Если Не ПустаяСтрока(МассивОбъектов.ТелефонОрганизации) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		МассивОбъектов.ТелефонОрганизации,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
		ОбластьШапка.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																					  СтруктураТелефона.КодГорода, 
																					  СтруктураТелефона.НомерТелефона, 
																					  СтруктураТелефона.Добавочный, 
																					  СтруктураТелефона.Комментарий);
	Иначе
		ОбластьШапка.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	КонецЕсли;
	 
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    ТабДокумент.Вывести(ОбластьЗаголовок);	
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	НомерСтроки = 1;
	
	РезультатЗапросаПоСтрокам = ПолучитьЗапросДляПечатиВыплаты(МассивОбъектов.Ссылка);
	Для Каждого Строка ИЗ РезультатЗапросаПоСтрокам Цикл
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.Фамилия	= Строка.Фамилия;
		ОбластьСтрока.Параметры.Имя	= Строка.Имя;
		ОбластьСтрока.Параметры.Отчество = Строка.Отчество;
		ОбластьСтрока.Параметры.КодПоДРФО = Строка.КодПоДРФО;
		Если Строка.СвидетельствоСерия <> "" ИЛИ Строка.СвидетельствоНомер <> "" Тогда
			ОбластьСтрока.Параметры.Серия = Строка.СвидетельствоСерия;
			ОбластьСтрока.Параметры.Номер = Строка.СвидетельствоНомер;
		Иначе	
			СерияНомер = УчетПособийСоциальногоСтрахования.РазложитьНомерБольничного(Строка.НомерБольничного);
			ОбластьСтрока.Параметры.Серия = СерияНомер.Серия;
			ОбластьСтрока.Параметры.Номер = СерияНомер.Номер;
		КонецЕсли;	
		ОбластьСтрока.Параметры.Сумма = Формат(Строка.Сумма,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
		ОбластьСтрока.Параметры.ДатаВыплаты = Формат(Строка.ДатаВыплаты,"ДФ=dd.MM.yyyy");
		ТабДокумент.Присоединить(ОбластьСтрока);
		НомерСтроки = НомерСтроки +1;
	КонецЦикла;

	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	СписокФизическихЛиц = Новый СписокЗначений;
	СписокФизическихЛиц.Добавить(МассивОбъектов.Руководитель);
	СписокФизическихЛиц.Добавить(МассивОбъектов.ГлавныйБухгалтер);
	ТаблицаКадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
		Истина, 
		СписокФизическихЛиц, 
		"Фамилия, Имя, Отчество,", 
		МассивОбъектов.Дата);
	Руководитель = ТаблицаКадровыеДанныеФизическихЛиц.Найти(МассивОбъектов.Руководитель,"ФизиЧескоеЛицо");
	Если Руководитель <> Неопределено Тогда
		ОбластьПодпись.Параметры.ФИОРуководителя = Руководитель.Фамилия + " " + Руководитель.Имя + " " + Руководитель.Отчество;
	КонецЕсли;
	Бухгалтер = ТаблицаКадровыеДанныеФизическихЛиц.Найти(МассивОбъектов.ГлавныйБухгалтер,"ФизиЧескоеЛицо");
	Если Руководитель <> Неопределено Тогда
		ОбластьПодпись.Параметры.ФИОБухгалтера = Бухгалтер.Фамилия + " " + Бухгалтер.Имя + " " + Бухгалтер.Отчество;
	КонецЕсли;
	
	ОбластьПодпись.Параметры.ДатаДокумента = Формат(МассивОбъектов.Дата, "Л=uk; ДЛФ=DD");
	
	ТабДокумент.Вывести(ОбластьПодпись);
	
	Возврат ТабДокумент;
	
КонецФункции	

//
//Функция ТабличныйДокументЗаявкаНС(МассивОбъектов, ОбъектыПечати)
//	ТабДокумент = Новый ТабличныйДокумент;
//	Макет = ПолучитьМакет("ПФ_MXL_UK_ЗаявкаНС");
//	
//	//Шапка 
//	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьШапка.Параметры.Организация = МассивОбъектов.Организация.НаименованиеПолное;
//	
//	Если Не ПустаяСтрока(МассивОбъектов.АдресОрганизации) Тогда
//		СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
//		МассивОбъектов.АдресОрганизации,
//		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
//		УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, ОбластьШапка.Параметры.Адрес);
//	Иначе
//		ОбластьШапка.Параметры.Адрес = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
//	КонецЕсли;
//	
//	
//	Если Не ПустаяСтрока(МассивОбъектов.ТелефонСоставителя) Тогда
//		СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
//		МассивОбъектов.ТелефонСоставителя,
//		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
//		ОбластьШапка.Параметры.Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
//		СтруктураТелефона.КодГорода, 
//		СтруктураТелефона.НомерТелефона, 
//		СтруктураТелефона.Добавочный, 
//		СтруктураТелефона.Комментарий);
//	Иначе
//		ОбластьШапка.Параметры.Телефон = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
//	КонецЕсли;
//	
//	ОбластьШапка.Параметры.Месяц = Формат(МассивОбъектов.Месяц, "ДФ=MMMM;Л = uk_UA");;
//	ОбластьШапка.Параметры.Год = Год(МассивОбъектов.Месяц);
//	
//	ТабДокумент.Вывести(ОбластьШапка);
//	
//	//Шапка помощь 
//	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПомощь");
//	ТабДокумент.Вывести(ОбластьШапка);
//	
//	//Строка Помощь
//	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПомощь");
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	|	ЗаявлениеРасчетВФСС.Комментарий,
//	|	ЗаявлениеРасчетВФССОплаты.НомерСтроки КАК Номер,
//	|	ЗаявлениеРасчетВФССОплаты.Сотрудник,
//	|	ЗаявлениеРасчетВФССОплаты.ДокументОснование КАК Документ,
//	|	ЗаявлениеРасчетВФССОплаты.СуммаПособияВсегоФСС КАК Результат,
//	|	ЗаявлениеРасчетВФССОплаты.НомерБольничного КАК СерияНомер
//	|ИЗ
//	|	Документ.ЗаявлениеРасчетВФСС.Оплаты КАК ЗаявлениеРасчетВФССОплаты
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
//	|		ПО ЗаявлениеРасчетВФССОплаты.Ссылка = ЗаявлениеРасчетВФСС.Ссылка
//	|ГДЕ
//	|	ЗаявлениеРасчетВФССОплаты.Ссылка = &Ссылка
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Номер";
//	
//	Запрос.УстановитьПараметр("Ссылка",МассивОбъектов.Ссылка );
//	
//	Результат = Запрос.Выполнить();
//	Выборка = Результат.Выбрать();
//	//
//	Пока Выборка.Следующий() Цикл 
//		
//		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
//		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
//		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
//			ОбластьСтрока.Параметры.Номер = Выборка.Номер;
//			ОбластьСтрока.Параметры.СерияНомер = Выборка.СерияНомер;
//			ОбластьСтрока.Параметры.Сотрудник  = Выборка.Сотрудник;
//			Сумма = Выборка.Результат;
//			СтрокаСуммы = ЧислоПрописью(Сумма, "Л = uk_UA","гривня, гривні, гривень, м, копійка, копійки, копійок, ж, 2");
//			СтрокаСуммы  = СтрокаСуммы + " (" + Цел(Сумма) + " грн. " + Формат((Сумма - Цел(Сумма)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
//			ОбластьСтрока.Параметры.Результат  = СтрокаСуммы;  
//			ОбластьСтрока.Параметры.Комментарий = Выборка.Комментарий;
//			ТабДокумент.Присоединить(ОбластьСтрока);
//		КонецЕсли;
//		
//	КонецЦикла;
//	
//	//Шапка траты 
//	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТраты");
//	ТабДокумент.Вывести(ОбластьШапка);
//	
//	//Шапка погребение
//	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПогребение");
//	ТабДокумент.Вывести(ОбластьШапка);
//	
//	
//	//Строка Помощь
//	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПогребение");
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	|	ЗаявлениеРасчетВФСС.Комментарий,
//	|	ЗаявлениеРасчетВФССПособияНаПогребение.НомерСтроки КАК Номер,
//	|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник,
//	|	ЗаявлениеРасчетВФССПособияНаПогребение.ДокументОснование КАК Документ,
//	|	ЗаявлениеРасчетВФССПособияНаПогребение.РазмерПособия КАК Результат
//	|ИЗ
//	|	Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение КАК ЗаявлениеРасчетВФССПособияНаПогребение
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
//	|		ПО ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка = ЗаявлениеРасчетВФСС.Ссылка
//	|ГДЕ
//	|	ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка = &Ссылка
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Номер";
//	
//	Запрос.УстановитьПараметр("Ссылка",МассивОбъектов.Ссылка);
//	
//	Результат = Запрос.Выполнить();
//	Выборка = Результат.Выбрать();
//	Пока Выборка.Следующий() Цикл  
//		
//		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
//		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
//		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
//			ОбластьСтрока.Параметры.Номер = Выборка.Номер;
//			ОбластьСтрока.Параметры.Сотрудник  = Выборка.Сотрудник;
//			Сумма = Выборка.Результат;
//			СтрокаСуммы = ЧислоПрописью(Сумма, "Л = uk_UA","гривня, гривні, гривень, м, копійка, копійки, копійок, ж, 2");
//			СтрокаСуммы  = СтрокаСуммы + " (" + Цел(Сумма) + " грн. " + Формат((Сумма - Цел(Сумма)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
//			ОбластьСтрока.Параметры.Результат  = СтрокаСуммы;  
//			ОбластьСтрока.Параметры.Комментарий = Выборка.Комментарий;
//			ТабДокумент.Присоединить(ОбластьСтрока);
//		КонецЕсли;
//		
//	КонецЦикла;
//	
//	//Подпись
//	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
//	ТабДокумент.Вывести(ОбластьПодпись);
//	
//	Возврат ТабДокумент;
//	
//КонецФункции	

//
//Функция ТабличныйДокументПриложение(МассивОбъектов, ОбъектыПечати)
//	ТабДокумент = Новый ТабличныйДокумент;
//	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
//	Макет = ПолучитьМакет("ПФ_MXL_UK_Приложение");
//	
//	Если МассивОбъектов.ФондСоциальногоСтрахования = Перечисления.ВидыОбязательногоСтрахованияСотрудников.ФСС Тогда		
//		//Шапка 
//		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//		ТабДокумент.Вывести(ОбластьШапка);
//		
//		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
//		НомерСтроки = 1;
//		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(МассивОбъектов.Ссылка);
//		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
//		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
//			
//			РезультатЗапросаПоСтрокам = ПолучитьЗапросДляПечатиПриложения(МассивОбъектов.Ссылка);
//			
//			Для Каждого Строка ИЗ РезультатЗапросаПоСтрокам Цикл
//				ОбластьСтрока.Параметры.Номер = НомерСтроки;
//				ОбластьСтрока.Параметры.Сотрудник 					= Строка.Фамилия + " " + Строка.Имя + " " + Строка.Отчество;
//				ОбластьСтрока.Параметры.КодПоДРФО 					= Строка.ДРФО;
//				ОбластьСтрока.Параметры.СерияНомер 					= Строка.НомерБольничного;
//				ОбластьСтрока.Параметры.ПричинаНетрудоспособности   = Строка.ПричинаНетрудоспособности;
//				ОбластьСтрока.Параметры.ПериодНетрудоспособности    = "З " + Формат(Строка.ПериодС, "ДЛФ=Д") + " по " + Формат(Строка.ПериодПО, "ДЛФ=Д");
//				ОбластьСтрока.Параметры.КоличествоДней 				= Строка.КоличествоДнейВсего;
//				ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Строка.КоличествоДнейВсегоФСС;
//				ОбластьСтрока.Параметры.Результат 					= Формат(Строка.СуммаПособияВсего,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
//				ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Строка.СуммаПособияВсегоФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
//				ТабДокумент.Присоединить(ОбластьСтрока);
//				НомерСтроки = НомерСтроки +1;
//			КонецЦикла;
//			
//		КонецЕсли;
//		
//		//Подпись
//		ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
//		
//		ЧислоДокумента                          = Формат(МассивОбъектов.Дата,"ДФ='дд';Л=uk_UA");
//		ДатаДокумента                           = Формат(МассивОбъектов.Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
//		ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
//		ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
//		
//		ТабДокумент.Вывести(ОбластьПодпись);
//	Иначе
//		//НеДляФССОтНС 
//		ОбластьНеДляФССОтНС = Макет.ПолучитьОбласть("НеДляФССОтНС");
//		ТабДокумент.Вывести(ОбластьНеДляФССОтНС);
//	КонецЕсли;	
//	
//	Возврат ТабДокумент;
//	
//КонецФункции

Функция ПолучитьЗапросДляПечатиВыплаты(Документ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодтверждениеВыплатЗаСчетФСС.Сотрудник.ФизическоеЛицо.КодПоДРФО КАК КодПоДРФО,
		|	ЕстьNULL(БольничныйЛист.НомерЛисткаНетрудоспособности,"""") КАК НомерБольничного,
		|	ЕстьNULL(ЕдиновременноеПособиеЗаСчетФСС.СвидетельствоСерия,"""") КАК СвидетельствоСерия,
		|	ЕстьNULL(ЕдиновременноеПособиеЗаСчетФСС.СвидетельствоНомер,"""") КАК СвидетельствоНомер,
		|	ПодтверждениеВыплатЗаСчетФСС.Сумма,
		|	ПодтверждениеВыплатЗаСчетФСС.ДатаВыплаты,
		|	ПодтверждениеВыплатЗаСчетФСС.Сотрудник.ФизическоеЛицо
		|ПОМЕСТИТЬ ВыборкаПоДокументу
		|ИЗ
		|	Документ.ПодтверждениеВыплатЗаСчетФСС.Выплаты КАК ПодтверждениеВыплатЗаСчетФСС
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   Документ.БольничныйЛист КАК БольничныйЛист
		|   ПО БольничныйЛист.Ссылка = ПодтверждениеВыплатЗаСчетФСС.ДокументОснование
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|   ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ПодтверждениеВыплатЗаСчетФСС.ДокументОснование
		|ГДЕ
		|	ПодтверждениеВыплатЗаСчетФСС.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыборкаПоДокументу.НомерБольничного,
		|	ВыборкаПоДокументу.СвидетельствоСерия,
		|	ВыборкаПоДокументу.СвидетельствоНомер,
		|	ВыборкаПоДокументу.КодПоДРФО,
		|	ВыборкаПоДокументу.Сумма,
		|	ВыборкаПоДокументу.ДатаВыплаты,
		|	ФИОФизическихЛицСрезПоследних.Фамилия,
		|	ФИОФизическихЛицСрезПоследних.Имя,
		|	ФИОФизическихЛицСрезПоследних.Отчество
		|ИЗ
		|	ВыборкаПоДокументу КАК ВыборкаПоДокументу
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц.СрезПоследних(&Дата, ) КАК ФИОФизическихЛицСрезПоследних
		|		ПО ВыборкаПоДокументу.СотрудникФизическоеЛицо = ФИОФизическихЛицСрезПоследних.ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("Дата", Документ.Дата);
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции	
	

#КонецОбласти


#КонецЕсли
