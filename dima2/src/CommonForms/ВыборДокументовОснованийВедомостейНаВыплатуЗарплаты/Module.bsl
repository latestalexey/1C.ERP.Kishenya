
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ВидДокумента, Организация, Подразделение, ПериодВзаиморасчетов, ВыбранныеДокументы");
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой");
	
	УстановитьЗаголовки();
	
	ЗаполнитьСписокДокументов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой", Модифицированность);
	ЗаполнитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ПериодРегистрацииНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой", , Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	ЗаполнитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой", Направление, Модифицированность);
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияПериодРегистрацииПриРегулировании", 0.3, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияПериодРегистрацииПриРегулировании()
	ЗаполнитьСписокДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьДокумент(Элемент.ТекущиеДанные.Значение)
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВыполнить(Команда)
	
	ВыбранныеДокументы = Новый СписокЗначений;
	Для Каждого ЭлементСпискаДокументов Из СписокДокументов Цикл
		Если ЭлементСпискаДокументов.Пометка Тогда
			ВыбранныеДокументы.Добавить(ЭлементСпискаДокументов.Значение);
		КонецЕсли	
	КонецЦикла;	
	
	Оповестить("ВыборДокументовОснованийВедомостейНаВыплатуЗарплаты", ВыбранныеДокументы, ЭтаФорма);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьВыполнить(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыполнить(Команда)
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если Элементы.СписокДокументов.ТекущиеДанные <> Неопределено Тогда
		ОткрытьДокумент(ТекущиеДанные.Значение)
	КонецЕсли	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполнить(Команда)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовки()
	
	ИмяВидаДокумента = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидДокумента);
	
	Если ВидДокумента = Перечисления.ВидыДокументовМежрасчетныхНачислений.НачислениеЗарплаты Тогда
		ПредставлениеСписка = НСтр("ru='Доначисления зарплаты';uk='Донарахування зарплати'")
	Иначе
		ПредставлениеСписка = Метаданные.Документы.Найти(ИмяВидаДокумента).ПредставлениеСписка
	КонецЕсли;
	
	Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 для выплаты по ведомости';uk='%1 для виплати по відомості'"),
			ПредставлениеСписка);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументов()
	
	ШаблонПредставления = НСтр("ru='%1 от %2 - %3';uk='%1 від %2 - %3'");
	
	СписокДокументов.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодВзаиморасчетов", ПериодВзаиморасчетов);
	
	ИмяВидаДокумента = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидДокумента);
	ИменаВозможныхДокументов = Новый Массив;
	ИменаВозможныхДокументов.Добавить(ИмяВидаДокумента);
	ИменаВозможныхДокументов.Добавить(ИмяВидаДокумента + "Списком");
	
	Для Каждого ИмяВозможногоДокумента Из ИменаВозможныхДокументов Цикл
		МетаданныеДокумента = Метаданные.Документы.Найти(ИмяВозможногоДокумента);
		Если МетаданныеДокумента <> Неопределено Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ЗарплатаКВыплате.Регистратор КАК Ссылка,
			|	&РегистраторНомер КАК Номер,
			|	&РегистраторДата КАК Дата,
			|	ЗарплатаКВыплате.Сотрудник КАК Сотрудник
			|ИЗ
			|	РегистрНакопления.ЗарплатаКВыплате КАК ЗарплатаКВыплате
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокВыплатыДокументов КАК ПорядокВыплатыДокументов
			|		ПО (ПорядокВыплатыДокументов.Регистратор = ЗарплатаКВыплате.Регистратор)
			|ГДЕ
			|	&ОтборПоВидуДокумента
			|	И ПорядокВыплатыДокументов.ПорядокВыплаты = ЗНАЧЕНИЕ(Перечисление.ХарактерВыплатыЗарплаты.Межрасчет)
			|	И ЗарплатаКВыплате.Организация = &Организация
			|	И ЗарплатаКВыплате.ПериодВзаиморасчетов = &ПериодВзаиморасчетов";
			
			ПриведенныйРегистратор = "ВЫРАЗИТЬ(ЗарплатаКВыплате.Регистратор КАК " + МетаданныеДокумента.ПолноеИмя() + ")";
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РегистраторНомер", ПриведенныйРегистратор + ".Номер");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&РегистраторДата", ПриведенныйРегистратор + ".Дата");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоВидуДокумента", "ЗарплатаКВыплате.Регистратор ССЫЛКА "+ МетаданныеДокумента.ПолноеИмя());
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
				
				Сотрудники = Новый Массив;
				Пока Выборка.Следующий() Цикл
					Сотрудники.Добавить(Выборка.Сотрудник);
				КонецЦикла;
				
				Представление = 
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонПредставления, 
						Выборка.Номер, 
						Формат(Выборка.Дата, "ДЛФ=Д"),
						ЗарплатаКадры.КраткийСоставСотрудников(Сотрудники, Выборка.Дата));
				
				ЭлементСпискаДокументов = СписокДокументов.Добавить(Выборка.Ссылка, Представление);
				ЭлементСпискаДокументов.Пометка = ВыбранныеДокументы.НайтиПоЗначению(Выборка.Ссылка) <> Неопределено;
				
			КонецЦикла	
			
		КонецЕсли;			
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьДокумент(Ссылка)
	ПоказатьЗначение(, Ссылка);
КонецПроцедуры

#КонецОбласти
