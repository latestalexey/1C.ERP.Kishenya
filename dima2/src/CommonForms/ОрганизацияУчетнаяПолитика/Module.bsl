#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Заголовок",			Заголовок);
	Параметры.Свойство("ОрганизацияСсылка",	ОрганизацияСсылка);
	
	Заголовок = ?(ПустаяСтрока(Заголовок), "", Заголовок + ": ") + НСтр("ru='Учетная политика';uk='Облікова політика'");
	
	ПрочитатьДанные();
	
	// Установка доступности элементов формы в зависимости от текущих настроек.
	ОбновитьЭлементыФормыПоТекущимНастройкам();
	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОтредактированаИстория" И ОрганизацияСсылка = Источник Тогда
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(ЗначенияПоказателейДоплатыЗаРаботуВНочноеВечернееВремя.ПроцентДоплатыЗаРаботуВНочноеВремя) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Процент доплаты за работу в ночное время не указан.';uk='Відсоток доплати за роботу у нічний час не вказаний.'"), , , , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЗначенияПоказателейДоплатыЗаРаботуВНочноеВечернееВремя.ПроцентДоплатыЗаРаботуВВечернееВремя) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Процент доплаты за работу в вечернее время не указан.';uk='Відсоток доплати за роботу у вечірній час не вказаний.'"), , , , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНаСервере();

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт 

	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено) Экспорт
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	Иначе
		СохранитьДанныеНаСервере(Отказ);
		Если НЕ Отказ И ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
		
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт  
	
	СохранитьДанныеНаСервере(Отказ);
	
	Если НЕ Отказ И ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные()
	
	ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(ОрганизацияСсылка);
	ОбособленноеПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияСсылка,"ОбособленноеПодразделение");
	
	
	УчетСтраховыхВзносовЗначение = РегистрыСведений.НастройкиУчетаСтраховыхВзносов.СоздатьМенеджерЗаписи();
	УчетСтраховыхВзносовЗначение.Организация = ОрганизацияСсылка;
	УчетСтраховыхВзносовЗначение.Прочитать();
	ЗначениеВРеквизитФормы(УчетСтраховыхВзносовЗначение, "УчетСтраховыхВзносов");
	
	УчетПособийНастройкиОрганизацийЗначение = РегистрыСведений.НастройкиУчетаПособийСоциальногоСтрахования.СоздатьМенеджерЗаписи();
	УчетПособийНастройкиОрганизацийЗначение.Организация = ОрганизацияСсылка;
	УчетПособийНастройкиОрганизацийЗначение.Прочитать();
	ЗначениеВРеквизитФормы(УчетПособийНастройкиОрганизацийЗначение, "НастройкиУчетаПособийСоциальногоСтрахования");
		
	УчетнаяПолитикаПоНДФЛЗначение = РегистрыСведений.УчетнаяПолитикаПоНДФЛ.СоздатьМенеджерЗаписи();
	УчетнаяПолитикаПоНДФЛЗначение.ГоловнаяОрганизация = ГоловнаяОрганизация;
	УчетнаяПолитикаПоНДФЛЗначение.Прочитать();
	ЗначениеВРеквизитФормы(УчетнаяПолитикаПоНДФЛЗначение, "УчетнаяПолитикаПоНДФЛ");
	
	Настройки = РегистрыСведений.НастройкиЗарплатаКадрыРасширенная.СоздатьМенеджерЗаписи();
	Настройки.Организация = ОрганизацияСсылка;
	Настройки.Прочитать();
	ЗначениеВРеквизитФормы(Настройки, "НастройкиОрганизацийРасширенная"); 
	
	// Показатели доплаты за работу в ночное и вечернее время.
	ПроцентДоплатыНочныеВечерние = РегистрыСведений.ЗначенияПоказателейДоплатыЗаРаботуВНочноеВечернееВремя.СоздатьМенеджерЗаписи();
	ПроцентДоплатыНочныеВечерние.Организация = ОрганизацияСсылка;
	ПроцентДоплатыНочныеВечерние.Прочитать();
	
	Если Не ПроцентДоплатыНочныеВечерние.Выбран() Тогда
		// Заполняем значениями по умолчанию.
		ПроцентДоплатыНочныеВечерние.ПроцентДоплатыЗаРаботуВНочноеВремя = 20;
		ПроцентДоплатыНочныеВечерние.ПроцентДоплатыЗаРаботуВВечернееВремя = 10;
	Иначе
		Если ПроцентДоплатыНочныеВечерние.ПроцентДоплатыЗаРаботуВНочноеВремя = 0 Тогда
			ПроцентДоплатыНочныеВечерние.ПроцентДоплатыЗаРаботуВНочноеВремя = 20;	
		КонецЕсли;
		Если ПроцентДоплатыНочныеВечерние.ПроцентДоплатыЗаРаботуВВечернееВремя = 0 Тогда
			ПроцентДоплатыНочныеВечерние.ПроцентДоплатыЗаРаботуВВечернееВремя = 10;	
		КонецЕсли;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ПроцентДоплатыНочныеВечерние, "ЗначенияПоказателейДоплатыЗаРаботуВНочноеВечернееВремя"); 
	
	УстановитьНадписьДоплатаЗаДниНетрудоспособности();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере(Отказ)
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	
	УчетнаяПолитикаПоНДФЛЗначение = РеквизитФормыВЗначение("УчетнаяПолитикаПоНДФЛ");
	УчетнаяПолитикаПоНДФЛЗначение.ГоловнаяОрганизация = ГоловнаяОрганизация;
	УчетнаяПолитикаПоНДФЛЗначение.Записать();
	
	УчетСтраховыхВзносовЗначение = РеквизитФормыВЗначение("УчетСтраховыхВзносов");
	УчетСтраховыхВзносовЗначение.Организация = ОрганизацияСсылка;
	УчетСтраховыхВзносовЗначение.Записать();
	
	УчетПособийНастройкиОрганизацийЗначение = РеквизитФормыВЗначение("НастройкиУчетаПособийСоциальногоСтрахования");
	УчетПособийНастройкиОрганизацийЗначение.Организация = ОрганизацияСсылка;
	УчетПособийНастройкиОрганизацийЗначение.Записать();
	
	НастройкиОрганизаций = РеквизитФормыВЗначение("НастройкиОрганизацийРасширенная");
	НастройкиОрганизаций.Организация = ОрганизацияСсылка;
	НастройкиОрганизаций.Записать();
	
	ПроцентДоплатыНочныеВечерние = РеквизитФормыВЗначение("ЗначенияПоказателейДоплатыЗаРаботуВНочноеВечернееВремя");
	ПроцентДоплатыНочныеВечерние.Организация = ОрганизацияСсылка;
	ПроцентДоплатыНочныеВечерние.Записать();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()

	Отказ = Ложь;
	СохранитьДанныеНаСервере(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПрочитатьДанные();
	
	// Установка доступности элементов формы в зависимости от текущих настроек.
	ОбновитьЭлементыФормыПоТекущимНастройкам();

КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	СохранитьДанныеНаСервере(Отказ);
	
	Если Не Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписьДоплатаЗаДниНетрудоспособности()
	
	НадписьДоплатаЗаДниНетрудоспособности = НСтр("ru='% среднего заработка';uk='% середнього заробітку'");
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыФормыПоТекущимНастройкам()
	
	Элементы.ОрганизацияОписаниеДекорация.Видимость = ОбособленноеПодразделение;
	
	Элементы.ГруппаУчетСтраховыхВзносов.ТолькоПросмотр = ОбособленноеПодразделение;
	Элементы.НДФЛГруппа.ТолькоПросмотр = ОбособленноеПодразделение;
	
	// Установим видимость отдельных полей в зависимости от настройки.
	ИспользоватьНочные = ПолучитьФункциональнуюОпцию("УчитыватьНочныеЧасы");
	ИспользоватьВечерние = ПолучитьФункциональнуюОпцию("УчитыватьВечерниеЧасы");
	
	Если Не ИспользоватьНочные И Не ИспользоватьВечерние Тогда
		Элементы.ПроцентДоплатыЗаНочныеВечерниеГруппа.Видимость = Ложь;
	Иначе
		// Устанавливаем по отдельности видимость каждого поля.
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПроцентДоплатыЗаРаботуВНочноеВремяГруппа", "Видимость", ИспользоватьНочные);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПроцентДоплатыЗаРаботуВВечернееВремяГруппа", "Видимость", ИспользоватьВечерние);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
