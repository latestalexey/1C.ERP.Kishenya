
#Область ОбработчикСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		ТаблицаНастроекДействия = Объект.ЭтапПодготовкиБюджетов.НастройкаДействия.Получить();
		Если ТаблицаНастроекДействия <> Неопределено Тогда
			НесколькоЭкземпляровБюджета(ТаблицаНастроекДействия);
			НастройкаДействия.Загрузить(ТаблицаНастроекДействия);
		КонецЕсли;
		
		ТаблицаНастроекКонтрольныхОтчетов = Объект.ЭтапПодготовкиБюджетов.НастройкиКонтрольныхОтчетов.Получить();
		Если ТаблицаНастроекКонтрольныхОтчетов <> Неопределено Тогда
			НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастроекКонтрольныхОтчетов);
		КонецЕсли;
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НесколькоЭкземпляровБюджета(ТаблицаНастроекДействия)
	
	Для Индекс = 1 По Элементы.СписокДокументовГруппаКолонокАналитик.ПодчиненныеЭлементы.Количество() Цикл
		Элементы.Удалить(Элементы.СписокДокументовГруппаКолонокАналитик.ПодчиненныеЭлементы[0]);
	КонецЦикла;
	
	СтрокаНастроек = ТаблицаНастроекДействия.Найти("ВидБюджета","Имя");
	Если СтрокаНастроек <> Неопределено Тогда
		ВидБюджета = СтрокаНастроек.Значение;
		ВидимостьСписка = Справочники.ВидыБюджетов.ВидБюджетаСодержитАналитикиШапки(ВидБюджета);
		АналитикиШапки.ЗагрузитьЗначения(ВидБюджета.АналитикиШапки.ВыгрузитьКолонку("ВидАналитики"));
		Для Индекс = 1 По АналитикиШапки.Количество() Цикл
			АналитикаШапки = АналитикиШапки[Индекс-1];
			НоваяКолонкаАналитики = Элементы.Добавить("СписокДокументовДокументАналитика"+Индекс, 
				Тип("ПолеФормы"), Элементы.СписокДокументовГруппаКолонокАналитик);
			НоваяКолонкаАналитики.ПутьКДанным = "Объект.СписокДокументов.Аналитика"+Индекс;
			НоваяКолонкаАналитики.Заголовок = Строка(АналитикаШапки);
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьИнформациюПоСвязаннымЗадачам();
	
	ТаблицаНастроекДействия = ТекущийОбъект.НастройкаДействия.Получить();
	Если ТаблицаНастроекДействия <> Неопределено Тогда
		НесколькоЭкземпляровБюджета(ТаблицаНастроекДействия);
		НастройкаДействия.Загрузить(ТаблицаНастроекДействия);
	КонецЕсли;
	
	ТаблицаНастроекКонтрольныхОтчетов = ТекущийОбъект.НастройкиКонтрольныхОтчетов.Получить();
	Если ТаблицаНастроекКонтрольныхОтчетов <> Неопределено Тогда
		НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастроекКонтрольныхОтчетов);
	КонецЕсли;
	
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкаДействия = Новый ХранилищеЗначения(НастройкаДействия.Выгрузить());
	ТекущийОбъект.НастройкиКонтрольныхОтчетов = Новый ХранилищеЗначения(НастройкиКонтрольныхОтчетов.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусыУтверждаемыхДокументов();
	ОбновитьСтатусыДокументовСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПланЗакупок"
		Или ИмяСобытия = "Запись_ПланПродаж"
		Или ИмяСобытия = "Запись_ПланПроизводства"
		Или ИмяСобытия = "Запись_ПланСборкиРазборки"
		Или ИмяСобытия = "Запись_ЭкземплярБюджета" Тогда
		
		РезультатПоиска = Объект.УтверждаемыеДокументы.НайтиСтроки(Новый Структура("Документ", Источник));
		Если РезультатПоиска.Количество() ИЛИ ВидимостьСписка Тогда
			УправлениеФормой();
		КонецЕсли;
		
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_БюджетнаяЗадача",,Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	ДействиеПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗадачиПриИзменении(Элемент)
	
	УстановитьПериодЗадачиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапПодготовкиБюджетовПриИзменении(Элемент)
	
	УстановитьПериодЗадачиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура УтверждаемыеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Документ = Объект.УтверждаемыеДокументы.НайтиПоИдентификатору(ВыбраннаяСтрока).Документ;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Документ);
	ОткрытьФорму(ИмяФормыДокумента(Документ), ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Объект.СписокДокументов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Документ);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьСписокДокументов", ЭтотОбъект);
	
	ФормаНовогоДокумента = ОткрытьФорму("Документ.ЭкземплярБюджета.ФормаОбъекта",
		ПараметрыФормы, Элементы.СписокДокументов,,,,ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьДействие(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для настройки действия необходимо записать объект. Записать?';uk='Для настройки дії необхідно записати об''єкт. Записати?'");
		Ответ = Неопределено;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("НастроитьДействиеЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	НастроитьДействиеФрагмент(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействиеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Отказ = Не Записать();
	Иначе 
		Отказ = Истина;
	КонецЕсли;
	
	НастроитьДействиеФрагмент(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействиеФрагмент(Знач Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиДействияВоВременноеХранилище());
	ПараметрыФормы.Вставить("ЭтапПодготовкиБюджетов",          Объект.ЭтапПодготовкиБюджетов);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыНастройкиДействия", ЭтаФорма);
	
	ИмяФормыНастройки = ИмяФормыНастройкиНаСервере(Объект.Действие);
	ОткрытьФорму(ИмяФормыНастройки, ПараметрыФормы, ЭтаФорма, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьКонтрольныеОтчеты(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище());
	ПараметрыФормы.Вставить("ЭтапПодготовкиБюджетов",          Объект.ЭтапПодготовкиБюджетов);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыНастройкиКонтрольныхОтчетов", ЭтаФорма);
	
	ОткрытьФорму("Справочник.ЭтапыПодготовкиБюджетов.Форма.НастройкаКонтрольныхОтчетов", 
		ПараметрыФормы, ЭтаФорма, , , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		ЭтаФорма.Записать();
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИЗакрыть(Команда)
	
	Объект.Выполнена = Истина;
	
	ДатаИсполнения = Объект.ДатаИсполнения;
	Если Не ЗначениеЗаполнено(ДатаИсполнения) Тогда
		Объект.ДатаИсполнения = ТекущаяДата();
	КонецЕсли;
	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		ЭтаФорма.Записать();
		ЭтаФорма.Закрыть();
	Иначе
		Объект.Выполнена = Ложь;
		Объект.ДатаИсполнения = ДатаИсполнения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	Документ = ТекущийДокумент(Объект.СписокДокументов);
	Если ПроверитьНеобходимостьСозданияНовогоДокументаСервер(Документ, Объект.Действие, ВидимостьСписка) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьНовыйДокумент", ЭтаФорма);
		ПоказатьВопрос(
			ОписаниеОповещения, 
			НСтр("ru='Будет создан и записан новый документ. Продолжить?';uk='Буде створено і записано новий документ. Продовжити?'"),
			РежимДиалогаВопрос.ДаНет,
			60);
	Иначе
		ВыполнитьДействиеКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьНеобходимостьСозданияНовогоДокументаСервер(Документ, Действие, ВидимостьСписка)
	
	Возврат	Задачи.БюджетнаяЗадача.НеобходимоСозданиеНовогоДокумента(Документ, Действие, ВидимостьСписка);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗаписьОбъекта(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Записать();
		Если ТипЗнч(ДополнительныеПараметры) = Тип("ОписаниеОповещения") Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКонтрольныйОтчет(Команда)
	
	НастройкиОтчета = НастройкиКонтрольныхОтчетов[0];
	ОткрытьБюджетныйОтчет(НастройкиОтчета.ВидБюджета, 
		НастройкиОтчета.Сценарий, 
		НастройкиОтчета.Организации, 
		НастройкиОтчета.Подразделения,
		НастройкиОтчета.ДанныеКУтверждению,
		НастройкиОтчета.ДанныеВПодготовке);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеОтчеты(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Адрес",                ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище());
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	ПараметрыФормы.Вставить("Период",               Объект.Период);
	ПараметрыФормы.Вставить("Периодичность",        Периодичность);
	
	ОткрытьФорму("Задача.БюджетнаяЗадача.Форма.КонтрольныеОтчеты", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьНаПодготовку(Команда)
	
	УстановитьСтатус("ВПодготовке", НСтр("ru='В подготовке';uk='У підготовці'"));
	
	ВыделенныеСтроки = Элементы.УтверждаемыеДокументы.ВыделенныеСтроки; 
	
	ДополнительныйПараметры = Новый Структура("СтрокиДляВозвратаНаПодготовку", ВыделенныеСтроки);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВводеПараметровЗадачиВернутьНаПодготовку", 
		ЭтотОбъект, ДополнительныйПараметры);
	
	ПараметрыФормы = Новый Структура;
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		ПараметрыФормы.Вставить("ЗаголовокФормы",
			НСтр("ru='Формирование задач ответственным за подготовку документов';uk='Формування задач відповідальним за підготовку документів'"));
	Иначе
		ПараметрыФормы.Вставить("ЗаголовокФормы",
			НСтр("ru='Формирование задачи ответственному за подготовку документа';uk='Формування задачі відповідальному за підготовку документа'"));
	КонецЕсли;
	ПараметрыФормы.Вставить("ФормированиеНесколькихЗадач", ВыделенныеСтроки.Количество() > 1);
	ПараметрыФормы.Вставить("ВыбиратьЭтапПодготовкиБюджетов", Ложь);
	ПараметрыФормы.Вставить("ВыбиратьИсполнителя", Ложь);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	ОткрытьФорму("Задача.БюджетнаяЗадача.Форма.ФормированиеСвязаннойЗадачи", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Утвердить(Команда)
	
	УстановитьСтатус("Утвержден", НСтр("ru='Утвержден';uk='Затверджено'"));
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	УстановитьСтатус("Отменен", НСтр("ru='Отменен';uk='Скасовано'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	ТекущаяСтрока = Элементы.УтверждаемыеДокументы.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", ТекущаяСтрока.Документ);
	ОткрытьФорму(ИмяФормыДокумента(ТекущаяСтрока.Документ), ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязаннуюЗадачу(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВводеПараметровСвязаннойЗадачи", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФормированиеНесколькихЗадач", Ложь);
	ПараметрыФормы.Вставить("ВыбиратьЭтапПодготовкиБюджетов", Истина);
	ПараметрыФормы.Вставить("ВыбиратьИсполнителя", Истина);
	ПараметрыФормы.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	
	ОткрытьФорму("Задача.БюджетнаяЗадача.Форма.ФормированиеСвязаннойЗадачи", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЕстьАвтор = ЗначениеЗаполнено(Объект.Автор);
	Элементы.Автор.Видимость = ЕстьАвтор;
	Элементы.НадписьСформированаАвтоматически.Видимость = Не ЕстьАвтор;
	
	Реквизиты = Новый Структура("Периодичность", "Родитель.Периодичность");
	Периодичность = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ЭтапПодготовкиБюджетов, Реквизиты).Периодичность;
	НадписьПериод = БюджетированиеКлиентСервер.ПредставлениеПериодаПоДате(Объект.Период, Периодичность);
	
	Если Объект.Выполнена Тогда
		Заголовок = НСтр("ru='Выполнено';uk='Виконано'");
	КонецЕсли;
	
	НастроитьСписокДействийЗадачи();
	УстановитьДоступностьМоделиБюджетирования();
	
	ТекущееДействие = Объект.Действие;
	
	УправлениеФормой();
	
	ОткрытьНастройки = ЗначениеЗаполнено(Объект.ЭтапПодготовкиБюджетов);
	Элементы.МодельБюджетирования.ТолькоПросмотр = ОткрытьНастройки;
	Элементы.ЭтапПодготовкиБюджетов.ТолькоПросмотр = ОткрытьНастройки;
	Элементы.Действие.ТолькоПросмотр = ОткрытьНастройки;
	
	КлючСохраненияПоложенияОкна = ?(ВидимостьСписка, "СписокДокументов", "Документ");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФормыДокумента(Документ)
	
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Документ));
	Возврат ОбъектМетаданных.ПолноеИмя() + ".ФормаОбъекта";
	
КонецФункции

&НаСервере
Процедура ВернутьДокументыВПодготовкуСервер(ПараметрыЗадачи, СтрокиДляВозвратаНаПодготовку)
	
	КешНовыхЗадач = Новый Соответствие;
	
	Для Каждого Идентификатор Из СтрокиДляВозвратаНаПодготовку Цикл
		
		СтрокаДокумент = Объект.УтверждаемыеДокументы.НайтиПоИдентификатору(Идентификатор);
		
		ЭтапПодготовкиБюджетов	= СтрокаДокумент.ЭтапПодготовкиБюджетов;
		Ответственный			= СтрокаДокумент.Ответственный;
		
		Если ТипЗнч(СтрокаДокумент.Документ) = Тип("ДокументСсылка.ЭкземплярБюджета") Тогда
			
			ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводЭкземпляраБюджета;
			
		ИначеЕсли ТипЗнч(СтрокаДокумент.Документ) = Тип("ДокументСсылка.ПланЗакупок") 
			ИЛИ ТипЗнч(СтрокаДокумент.Документ) = Тип("ДокументСсылка.ПланПродаж")
			ИЛИ ТипЗнч(СтрокаДокумент.Документ) = Тип("ДокументСсылка.ПланСборкиРазборки") Тогда
			
			ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводПлана;
			
		Иначе

			ВызватьИсключение НСтр("ru='Тип действия для задачи не определен.';uk='Тип дії для задачі не визначено.'");
			
		КонецЕсли;
		
		Если ТипДействия = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводЭкземпляраБюджета Тогда
			
			ЗадачиИзКеша = КешНовыхЗадач.Получить(ЭтапПодготовкиБюджетов);
			Если ЗадачиИзКеша = Неопределено Тогда
				ЗадачиИзКеша = Новый Соответствие;
				КешНовыхЗадач.Вставить(ЭтапПодготовкиБюджетов, ЗадачиИзКеша);			
			КонецЕсли;
			
			ЗадачаОбъект = ЗадачиИзКеша.Получить(Ответственный);
			Если ЗадачаОбъект = Неопределено Тогда
				ЗадачаОбъект = Задачи.БюджетнаяЗадача.СоздатьЗадачу();
				ЗадачиИзКеша.Вставить(Ответственный, ЗадачаОбъект);
			КонецЕсли;
			
		Иначе
			
			ЗадачаОбъект = Задачи.БюджетнаяЗадача.СоздатьЗадачу();
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЗадачаОбъект, ПараметрыЗадачи);
		
		ЗадачаОбъект.Дата					= ТекущаяДатаСеанса();
		ЗадачаОбъект.МодельБюджетирования 	= Объект.МодельБюджетирования;
		ЗадачаОбъект.ЭтапПодготовкиБюджетов	= Объект.ЭтапПодготовкиБюджетов;
		ЗадачаОбъект.Период					= Объект.Период;
		ЗадачаОбъект.ОсновнаяЗадача			= Объект.Ссылка;
		
		ЗадачаОбъект.ИсходныйЭтапПодготовкиБюджетов			= ЭтапПодготовкиБюджетов;
		ЗадачаОбъект.Исполнитель							= Ответственный;
		ЗадачаОбъект.Действие								= ТипДействия;
		ЗадачаОбъект.СписокДокументов.Добавить().Документ 	= СтрокаДокумент.Документ;
				
		ЗадачаОбъект.НастройкаДействия = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтапПодготовкиБюджетов, "НастройкаДействия");
		
		ЗадачаОбъект.Автор = ПользователиКлиентСервер.АвторизованныйПользователь();
		
		ЗадачаОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьНастройкиКонтрольныхОтчетовВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(НастройкиКонтрольныхОтчетов.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПоместитьНастройкиДействияВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(НастройкаДействия.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьНастройкиДействияСервер(Адрес)
	
	НастройкаДействия.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиКонтрольныхОтчетовСервер(Адрес)
	
	НастройкиКонтрольныхОтчетов.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВводеПараметровЗадачиВернутьНаПодготовку(ПараметрыЗадачи, ДополнительныеПараметры) Экспорт
	
	Если ПараметрыЗадачи <> Неопределено Тогда
		ВернутьДокументыВПодготовкуСервер(ПараметрыЗадачи, ДополнительныеПараметры.СтрокиДляВозвратаНаПодготовку);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВводеПараметровСвязаннойЗадачи(ПараметрыЗадачи, ДополнительныеПараметры) Экспорт
	
	Если ПараметрыЗадачи <> Неопределено Тогда
		СоздатьСвязаннуюЗадачуСервер(ПараметрыЗадачи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыНастройкиДействия(Адрес, ДополнительныеПараметры) Экспорт
	
	Если Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНастройкиДействияСервер(Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыНастройкиКонтрольныхОтчетов(Адрес, ДополнительныеПараметры) Экспорт
	
	Если Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНастройкиКонтрольныхОтчетовСервер(Адрес);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокДействийЗадачи()
	
	Если Не (ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеЗакупок")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПродаж")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПроизводства")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеСборкиРазборки")) Тогда
		УдалитьДействиеИзСписка(Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводПлана);
	КонецЕсли;
	
	Если НЕ Объект.МодельБюджетирования.Пустая() Тогда
	
		РеквизитыМодели = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.МодельБюджетирования, "ИспользоватьУтверждениеБюджетов");
			
		Если Не РеквизитыМодели.ИспользоватьУтверждениеБюджетов Тогда
			УдалитьДействиеИзСписка(Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДействиеИзСписка(ТипДействия)
	
	ЭлементСписка = Элементы.Действие.СписокВыбора.НайтиПоЗначению(ТипДействия);
	Если ЭлементСписка <> Неопределено Тогда
		Элементы.Действие.СписокВыбора.Удалить(ЭлементСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДействиеПриИзмененииСервер()
	
	Если Объект.Действие = ТекущееДействие Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаДействия.Очистить();
	
	Объект.СписокДокументов.Очистить();
	
	ТекущееДействие = Объект.Действие;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСвязанныхЗадач(Дерево, ВсегоЗадач, Выполнено, ЗадачаВерхнегоУровня)
	
	Если Дерево = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДерева из Дерево.Строки Цикл
		Если СтрокаДерева.Задача = ЗадачаВерхнегоУровня Тогда
			Продолжить;
		КонецЕсли;
		ВсегоЗадач = ВсегоЗадач + 1;
		Если СтрокаДерева.ЗадачаВыполнена Тогда
			Выполнено = Выполнено + 1;
		КонецЕсли;
		ЗаполнитьСписокСвязанныхЗадач(СтрокаДерева, ВсегоЗадач, Выполнено, СтрокаДерева.Задача);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяФормыНастройкиНаСервере(Действие)
	
	Возврат Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ИмяФормы(Действие)
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	ОбновитьСтатусыУтверждаемыхДокументов();
	
	УстановитьПредставлениеДействия();
	
	ЭтоДействиеПрочее = (Объект.Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.Прочее);
	ЭтоДействиеУтверждения = (Объект.Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов);
	Элементы.СтраницаУтверждаемыеДокументы.Видимость = ЭтоДействиеУтверждения;
	
	ВидимостьНастроек = ЗначениеЗаполнено(Объект.Действие) И Не ЭтоДействиеПрочее;
	Элементы.НастройкиДействия.Видимость = ВидимостьНастроек;
	
	ПредставлениеНастройки =
		Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ПолучитьПредставлениеДействия(НастройкаДействия);
	Элементы.ДекорацияНастройки.Заголовок = ПредставлениеНастройки;
	
	КоличествоОтчетов = НастройкиКонтрольныхОтчетов.Количество();
	
	ЗаголовокКонтрольныеОтчеты = НСтр("ru='Настроить контрольные отчеты (%1)';uk='Настроїти контрольні звіти (%1)'");
	Элементы.НастроитьКонтрольныеОтчеты.Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ЗаголовокКонтрольныеОтчеты, 
			КоличествоОтчетов);
	Элементы.НастроитьКонтрольныеОтчеты.Видимость = ЭтоДействиеПрочее Или ЭтоДействиеУтверждения;
	
	ЕстьКонтрольныеОтчеты = (КоличествоОтчетов > 0);
	НесколькоКонтрольныхОтчетов = (КоличествоОтчетов > 1);
	ЕдинственныйКонтрольныйОтчет = (КоличествоОтчетов = 1);
	
	Элементы.ГруппаОтчеты.Видимость = ЕстьКонтрольныеОтчеты И ЭтоДействиеПрочее;
	Элементы.ГруппаОтчетыУтверждение.Видимость = ЕстьКонтрольныеОтчеты И ЭтоДействиеУтверждения;
	
	Элементы.СформироватьКонтрольныйОтчет.Видимость = ЕдинственныйКонтрольныйОтчет;
	Элементы.СформироватьКонтрольныйОтчетУтверждение.Видимость = ЕдинственныйКонтрольныйОтчет;
	Если ЕдинственныйКонтрольныйОтчет Тогда
		НастройкиОтчета = НастройкиКонтрольныхОтчетов[0];
		ЗаголовокОтчета = Строка(НастройкиОтчета.ВидБюджета);
		Элементы.СформироватьКонтрольныйОтчет.Заголовок = ЗаголовокОтчета;
		Элементы.СформироватьКонтрольныйОтчетУтверждение.Заголовок = ЗаголовокОтчета;
	КонецЕсли;
	
	Элементы.КонтрольныеОтчеты.Видимость = НесколькоКонтрольныхОтчетов;
	Элементы.КонтрольныеОтчетыУтверждение.Видимость = НесколькоКонтрольныхОтчетов;
	Если НесколькоКонтрольныхОтчетов Тогда
		ЗаголовокКонтрольныеОтчеты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Контрольные отчеты (%1)';uk='Контрольні звіти (%1)'"), 
			КоличествоОтчетов);
		Элементы.КонтрольныеОтчеты.Заголовок = ЗаголовокКонтрольныеОтчеты;
		Элементы.КонтрольныеОтчетыУтверждение.Заголовок = ЗаголовокКонтрольныеОтчеты;
	КонецЕсли;
	
	ОбновитьСтатусыДокументовСписка();
	
	Элементы.ГруппаВыполнитьДействиеГиперссылка.Видимость = НЕ ВидимостьСписка;
	Элементы.ГруппаВыполнитьДействиеСписок.Видимость = ВидимостьСписка;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПериодЗадачиПриИзмененииНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		Объект.Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("Действие", "Действие");
	Реквизиты.Вставить("НастройкаДействия", "НастройкаДействия");
	Реквизиты.Вставить("НастройкиКонтрольныхОтчетов", "НастройкиКонтрольныхОтчетов");
	Реквизиты.Вставить("Периодичность", "Родитель.Периодичность");
	Реквизиты.Вставить("ТипДлительности", "ТипДлительности");
	Реквизиты.Вставить("Длительность", "Длительность");
	ЗначениеРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ЭтапПодготовкиБюджетов, Реквизиты);
	
	Объект.Действие = ЗначениеРеквизитов.Действие;
	Периодичность = ЗначениеРеквизитов.Периодичность;
	Задачи.БюджетнаяЗадача.УстановитьДлительностьЗадачи(Объект, ЗначениеРеквизитов);
	Объект.Период = БюджетированиеКлиентСервер.ДатаНачалаПериода(Объект.Период, Периодичность);
	
	Если ЗначениеРеквизитов.НастройкаДействия <> Неопределено Тогда
		ТаблицаНастроекДействия = ЗначениеРеквизитов.НастройкаДействия.Получить();
		Если ТаблицаНастроекДействия <> Неопределено Тогда
			НастройкаДействия.Загрузить(ТаблицаНастроекДействия);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеРеквизитов.НастройкиКонтрольныхОтчетов <> Неопределено Тогда
		ТаблицаНастроекКонтрольныхОтчетов = ЗначениеРеквизитов.НастройкиКонтрольныхОтчетов.Получить();
		Если ТаблицаНастроекКонтрольныхОтчетов <> Неопределено Тогда
			НастройкиКонтрольныхОтчетов.Загрузить(ТаблицаНастроекКонтрольныхОтчетов);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаУтверждаемыхДокументов = Задачи.БюджетнаяЗадача.УтверждаемыеДокументыПоШагуПроцесса(
													Объект.Действие, НастройкаДействия, Объект.Период);
	Объект.УтверждаемыеДокументы.Загрузить(ТаблицаУтверждаемыхДокументов);
	
	НадписьПериод = БюджетированиеКлиентСервер.ПредставлениеПериодаПоДате(Объект.Период, Периодичность);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьМоделиБюджетирования()
	
	КоличествоДействующихМоделей
		= Справочники.МоделиБюджетирования.КоличествоДействующихМоделейБюджетирования();
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, 
		"МодельБюджетирования", 
		"Видимость", 
		КоличествоДействующихМоделей <> 1 Или Не ЗначениеЗаполнено(Объект.МодельБюджетирования));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеДействия()
	
	Действие = Объект.Действие;
	
	ДействиеЗаполнено = ЗначениеЗаполнено(Действие);
	ЭтоДействиеПрочее = (Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.Прочее);
	
	ТекстПояснения = НСтр("ru='Пояснение действия';uk='Пояснення дії'");
	ПредставлениеДействия = НСтр("ru='Выполнить действие';uk='Виконати дію'");
	Если Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводЭкземпляраБюджета Тогда
		Документ = ТекущийДокумент(Объект.СписокДокументов);
		ПредставлениеДействия = 
			?(ЗначениеЗаполнено(Документ), Строка(Документ), НСтр("ru='<Ввести бюджет>';uk='<Ввести бюджет>'"));
			
	ИначеЕсли Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УстановкаЛимитовРасходаДС Тогда
		Документ = ТекущийДокумент(Объект.СписокДокументов);
		ПредставлениеДействия =
			?(ЗначениеЗаполнено(Документ), Строка(Документ), НСтр("ru='<Установить лимиты расхода денежных средств>';uk='<Встановити ліміти витрачання грошових коштів>'"));
			
	ИначеЕсли Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.ВводПлана Тогда
		Документ = ТекущийДокумент(Объект.СписокДокументов);
		ПредставлениеДействия = 
			?(ЗначениеЗаполнено(Документ), Строка(Документ), НСтр("ru='<Ввести план>';uk='<Ввести план>'"));
			
	ИначеЕсли Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УстановкаЗначенийНефинансовыхПоказателей Тогда
		Документ = ТекущийДокумент(Объект.СписокДокументов);
		ПредставлениеДействия =
			?(ЗначениеЗаполнено(Документ), Строка(Документ), НСтр("ru='<Ввести значения нефинансовых показателей>';uk='<Ввести значення нефінансових показників>'"));
			
	ИначеЕсли Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов Тогда
		ВсегоДокументов = Объект.УтверждаемыеДокументы.Количество();
		
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.Утвержден);
		Утверждено = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.Отменен);
		Отменено = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.НаУтверждении);
		КУтверждению = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		ПараметрыОтбора = Новый Структура("Статус", Перечисления.СтатусыПланов.ВПодготовке);
		ВПодготовке = Объект.УтверждаемыеДокументы.НайтиСтроки(ПараметрыОтбора).Количество();
		
		Если ВсегоДокументов = 0 Тогда
			ПредставлениеДействия = НСтр("ru='Нет документов к утверждению';uk='Немає документів до затвердження'");
		ИначеЕсли Утверждено = ВсегоДокументов Тогда
			ПредставлениеДействия = НСтр("ru='Все документы утверждены';uk='Всі документи затверджені'");
		ИначеЕсли Отменено = ВсегоДокументов Тогда
			ПредставлениеДействия = НСтр("ru='Все документы отменены';uk='Всі документи скасовані'");
		ИначеЕсли ВсегоДокументов = Утверждено + Отменено Тогда
			ПредставлениеДействия = НСтр("ru='Утверждены: %1 %3, отменены: %2''%';uk='Затверджено: %1 %3, скасовані: %2''%4");
			ПредставлениеДействия = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
					Утверждено, 
					Отменено,
					СклонениеДокументов(Утверждено),
					СклонениеДокументов(Отменено));
		ИначеЕсли КУтверждению <> 0 И ВПодготовке <> 0 Тогда
			ПредставлениеДействия = НСтр("ru='К утверждению: %1 %3, не готовы к утверждению: %2 %4';uk='До затвердження: %1 %3, не готові до затвердження: %2 %4'");
			ПредставлениеДействия = 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
					КУтверждению, 
					ВПодготовке,
					СклонениеДокументов(КУтверждению),
					СклонениеДокументов(ВПодготовке));
		ИначеЕсли ВПодготовке <> 0 Тогда
			ПредставлениеДействия = НСтр("ru='Не готовы к утверждению: %1 %2';uk='Не готові до затвердження: %1 %2'");
			ПредставлениеДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
				ВПодготовке,
				СклонениеДокументов(ВПодготовке));
		Иначе 
			ПредставлениеДействия = НСтр("ru='К утверждению: %1 %2';uk='До затвердження: %1 %2'");
			ПредставлениеДействия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ПредставлениеДействия, 
				КУтверждению,
				СклонениеДокументов(КУтверждению));
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ВыполнитьДействие.Видимость = ДействиеЗаполнено И Не ЭтоДействиеПрочее;
	
	Элементы.ГруппаОтчеты.Видимость = ЭтоДействиеПрочее;
	
	Элементы.ВыполнитьДействие.Заголовок = ПредставлениеДействия;
	
КонецПроцедуры

&НаСервере
Функция СклонениеДокументов(ЧислоДокументов)
	
	Возврат ОбщегоНазначенияУТКлиентСервер.СклонениеСлова(
		ЧислоДокументов, 
		НСтр("ru='документ';uk='документ'"), НСтр("ru='документа';uk='документа'"), НСтр("ru='документов';uk='документів'"), "м");
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьДействиеКлиент()
	
	Если Объект.Действие = ПредопределенноеЗначение("Перечисление.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов") Тогда
		Элементы.ОсновнаяПанель.ТекущаяСтраница = Элементы.СтраницаУтверждаемыеДокументы;
	Иначе
		Результат = ВыполнитьДействиеСервер();
		Если Результат <> Неопределено Тогда
			ОткрытьФорму(Результат.ИмяФормы, Результат.ПараметрыФормы, ЭтаФорма, Результат.Уникальность);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйДокумент(РезультатВопроса, ДопПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыполнитьДействиеКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБюджетныйОтчет(ВидБюджета, Сценарий, Организации, Подразделения, ДанныеКУтверждению, ДанныеВПодготовке)
	
	Если Не ЗначениеЗаполнено(ВидБюджета) Тогда
		ВызватьИсключение НСтр("ru='Не определен Вид бюджета для построения отчета.';uk='Не визначено Вид бюджету для побудови звіту.'")
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("МодельБюджетирования", Объект.МодельБюджетирования);
	ПараметрыОтчета.Вставить("ВидБюджета", ВидБюджета);
	ПараметрыОтчета.Вставить("Сценарий", Сценарий);
	ПараметрыОтчета.Вставить("Организация", Организации);
	ПараметрыОтчета.Вставить("Подразделение", Подразделения);
	ПараметрыОтчета.Вставить("ДанныеКУтверждению", ДанныеКУтверждению);
	ПараметрыОтчета.Вставить("ДанныеВПодготовке", ДанныеВПодготовке);
	
	Период = ?(ЗначениеЗаполнено(Объект.Период), Объект.Период, ТекущаяДата());
	НачалоПериода = БюджетированиеКлиентСервер.ДатаНачалаПериода(Период, Периодичность);
	КонецПериода = БюджетированиеКлиентСервер.ДатаКонцаПериода(Период, Периодичность);
	ПараметрыОтчета.Вставить("Период", Новый СтандартныйПериод(НачалоПериода, КонецПериода));
	
	ПараметрыОтчета.Вставить("СформироватьБюджетныйОтчетПриОткрытии", Истина);
	ПараметрыОтчета.Вставить("НеИспользоватьСохраненныеНастройки", Истина);
	ПараметрыОтчета.Вставить("ПоказыватьПанельНастройки", Ложь);
	
	ОткрытьФорму("Отчет.БюджетныйОтчет.ФормаОбъекта", ПараметрыОтчета, ЭтаФорма, Истина); 
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьДействиеСервер()
	
	Действие = Объект.Действие;
	Документ = ТекущийДокумент(Объект.СписокДокументов);
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Записывать = Ложь;
	Результат = Задачи.БюджетнаяЗадача.ВыполнитьДействие(Объект, НастройкаДействия.Выгрузить(), Записывать, Истина);
	
	Если Записывать Тогда
		ЭтаФорма.Записать();
	КонецЕсли;
	
	УстановитьПредставлениеДействия();
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекущийДокумент(СписокДокументов)
	
	Возврат ?(СписокДокументов.Количество(), СписокДокументов[СписокДокументов.Количество()-1].Документ, Неопределено);
	
КонецФункции

&НаСервере
Процедура ОбновитьСтатусыУтверждаемыхДокументов()
	
	Если Объект.Действие <> Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УтверждаемыеДокументы.НомерСтроки,
	|	УтверждаемыеДокументы.Документ,
	|	УтверждаемыеДокументы.ЭтапПодготовкиБюджетов
	|ПОМЕСТИТЬ УтверждаемыеДокументы
	|ИЗ
	|	&УтверждаемыеДокументы КАК УтверждаемыеДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УтверждаемыеДокументы.НомерСтроки КАК НомерСтроки,
	|	УтверждаемыеДокументы.Документ,
	|	ЭтапыПодготовкиБюджетов.Ответственный,
	|	ВЫБОР
	|		КОГДА НЕ ЭкземплярБюджета.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЭкземплярБюджета.Статус
	|		КОГДА НЕ ПланЗакупок.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПланЗакупок.Статус
	|		КОГДА НЕ ПланПродаж.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПланПродаж.Статус
	|		КОГДА НЕ ПланПроизводства.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПланПроизводства.Статус
	|		КОГДА НЕ ПланСборкиРазборки.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПланСборкиРазборки.Статус
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	УтверждаемыеДокументы КАК УтверждаемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	|		ПО УтверждаемыеДокументы.ЭтапПодготовкиБюджетов = ЭтапыПодготовкиБюджетов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭкземплярБюджета КАК ЭкземплярБюджета
	|		ПО УтверждаемыеДокументы.Документ = ЭкземплярБюджета.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланЗакупок КАК ПланЗакупок
	|		ПО УтверждаемыеДокументы.Документ = ПланЗакупок.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланПродаж КАК ПланПродаж
	|		ПО УтверждаемыеДокументы.Документ = ПланПродаж.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланПроизводства КАК ПланПроизводства
	|		ПО УтверждаемыеДокументы.Документ = ПланПроизводства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПланСборкиРазборки КАК ПланСборкиРазборки
	|		ПО УтверждаемыеДокументы.Документ = ПланСборкиРазборки.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("УтверждаемыеДокументы", Объект.УтверждаемыеДокументы.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Для каждого Строка Из Объект.УтверждаемыеДокументы Цикл
		Если Строка.НомерСтроки <> Выборка.НомерСтроки Тогда
			Выборка.Следующий();
		КонецЕсли;
		Строка.Статус = Выборка.Статус;
		Строка.Ответственный = Выборка.Ответственный;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатус(Статус, ТексСтатуса)
	
	ДокументыДляУстановкиСтатуса = Новый Массив;
	Для каждого Идентификатор Из Элементы.УтверждаемыеДокументы.ВыделенныеСтроки Цикл
		Документ = Объект.УтверждаемыеДокументы.НайтиПоИдентификатору(Идентификатор).Документ;
		ДокументыДляУстановкиСтатуса.Добавить(Документ);
	КонецЦикла;
	
	Если ДокументыДляУстановкиСтатуса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	КоличествоОбработанных = 
		ОбщегоНазначенияУТВызовСервера.УстановитьСтатусДокументов(ДокументыДляУстановкиСтатуса, Статус);
	
	ОбщегоНазначенияУТКлиент.ОповеститьПользователяОбУстановкеСтатуса(Элементы.УтверждаемыеДокументы,
		КоличествоОбработанных, ДокументыДляУстановкиСтатуса.Количество(), ТексСтатуса);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязаннуюЗадачуСервер(ПараметрыЗадачи)
	
	ВРамкахДругогоШага = 
		ПараметрыЗадачи.Свойство("ЭтапПодготовкиБюджетов")
		И ПараметрыЗадачи.ЭтапПодготовкиБюджетов <> Объект.ЭтапПодготовкиБюджетов;
	
	Если ВРамкахДругогоШага Тогда
		ДанныеЗаполнения = ПараметрыЗадачи.ЭтапПодготовкиБюджетов;
	Иначе
		ДанныеЗаполнения = Новый Структура("МодельБюджетирования, ЭтапПодготовкиБюджетов, Действие, Период, Документ");
		ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Объект);
		ДанныеЗаполнения.Вставить("НастройкаДействия", Новый ХранилищеЗначения(НастройкаДействия.Выгрузить()));
		ДанныеЗаполнения.Вставить("НастройкиКонтрольныхОтчетов", Новый ХранилищеЗначения(НастройкиКонтрольныхОтчетов.Выгрузить()));
	КонецЕсли;
	
	НоваяЗадача = Задачи.БюджетнаяЗадача.СоздатьЗадачу();
	НоваяЗадача.Заполнить(ДанныеЗаполнения);
	ЗаполнитьЗначенияСвойств(НоваяЗадача, ПараметрыЗадачи, "Наименование, СрокИсполнения, ОписаниеЗадачи, Исполнитель");
	
	НоваяЗадача.ОсновнаяЗадача = Объект.Ссылка;
	НоваяЗадача.Период = Объект.Период;
	НоваяЗадача.ИсходныйЭтапПодготовкиБюджетов = Объект.ЭтапПодготовкиБюджетов;
	
	Если НоваяЗадача.Действие = Перечисления.ТипыДействийЭтаповПодготовкиБюджетов.УтверждениеБюджетов
		И Не ВРамкахДругогоШага Тогда
		НоваяЗадача.УтверждаемыеДокументы.Загрузить(Объект.УтверждаемыеДокументы.Выгрузить());
	КонецЕсли;
	
	НоваяЗадача.Записать();
	
	ОбновитьИнформациюПоСвязаннымЗадачам();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПоСвязаннымЗадачам()
	
	ДеревоПодчиненныхЗадач = Задачи.БюджетнаяЗадача.ПолучитьДеревоПодчиненныхЗадач(Объект.Ссылка);
	НайденнаяСтрока = ДеревоПодчиненныхЗадач.Строки.Найти(Объект.Ссылка, , Истина);
	ВсегоЗадач = 0;
	Выполнено = 0;
	ЗаполнитьСписокСвязанныхЗадач(НайденнаяСтрока, ВсегоЗадач, Выполнено, Объект.Ссылка);
	Если ВсегоЗадач Тогда
		Элементы.НадписьВыполнено.Заголовок = НСтр("ru='Выполнено %1 из %2';uk='Виконано %1 з %2'");
		Элементы.НадписьВыполнено.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												Элементы.НадписьВыполнено.Заголовок, Выполнено, ВсегоЗадач);
	Иначе
		Элементы.НадписьВыполнено.Заголовок = НСтр("ru='Связанные задачи не назначены';uk='Пов''язані задачі не призначені'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовУдалитьДокумент(Команда)
	
	ОбработатьВыделенныеДокументы(Новый ОписаниеОповещения("ПометкаУдаления", ЭтотОбъект));
				
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ОбработатьВыделенныеДокументы(Новый ОписаниеОповещения("ПометкаУдаления", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыделенныеДокументы(Знач Оповещение)
	
	Если Элементы.СписокДокументов.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбраны документы';uk='Не вибрані документи'"));
	Иначе
		МассивДокументов = Новый Массив;
		Для Каждого ВыделеннаяСтрока Из Элементы.СписокДокументов.ВыделенныеСтроки Цикл
			ТекущиеДанные = Объект.СписокДокументов.НайтиПоИдентификатору(ВыделеннаяСтрока);
			МассивДокументов.Добавить(ТекущиеДанные.Документ);
		КонецЦикла;
		ВыполнитьОбработкуОповещения(Оповещение, МассивДокументов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаУдаления(Результат, ДополнительныеПараметры) Экспорт

	Если ЕстьПомеченныйНаУдалениеДокумент(Результат) Тогда
		ТекстОповещения = НСтр("ru='Снять с выделенных документов пометку удаления?';uk='Зняти з виділених документів позначку вилучення?'");
		ПометкаУдаления = Ложь;
	Иначе
		ТекстОповещения = НСтр("ru='Пометить выделенные документы на удаление?';uk='Позначити виділені документи на вилучення?'");
		ПометкаУдаления = Истина;
	КонецЕсли;

	ПараметрыОповещения = Новый Структура("МассивДокументов, ПометкаУдаления", Результат, ПометкаУдаления);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПометкаУдаленияЗавершение", ЭтотОбъект, ПараметрыОповещения);
	ПоказатьВопрос(ОписаниеОповещения, ТекстОповещения, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометкаУдаленияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ДополнительныеПараметры.ПометкаУдаления = Истина Тогда
			ПометитьНаУдалениеСервер(ДополнительныеПараметры.МассивДокументов);
		Иначе
			СнятьПометкуНаУдалениеСервер(ДополнительныеПараметры.МассивДокументов);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПометитьНаУдалениеСервер(МассивДокументов)
	
	Для Каждого Документ Из МассивДокументов Цикл
		ДокументОбъект = Документ.ПолучитьОбъект();
		Если НЕ ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.ПометкаУдаления = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
	КонецЦикла;
	
	УправлениеФормой();
	
КонецФункции

&НаСервере
Функция СнятьПометкуНаУдалениеСервер(МассивДокументов)
	
	Для Каждого Документ Из МассивДокументов Цикл
		ДокументОбъект = Документ.ПолучитьОбъект();
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.ПометкаУдаления = Ложь;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
	КонецЦикла;
	
	УправлениеФормой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьПомеченныйНаУдалениеДокумент(МассивДокументов)
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ШаблонЗапроса = 	
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Истина КАК Поле
		|ИЗ
		|	&ИмяДокумента КАК ПсевдонимЗаданнойТаблицы
		|ГДЕ
		|	ПсевдонимЗаданнойТаблицы.Ссылка В(&МассивДокументов)
		|	И ПсевдонимЗаданнойТаблицы.ПометкаУдаления";
	
	ТекстОбъединитьВсе =
		"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
	ИменаДокументов = Новый Массив;
	Для Каждого Документ Из МассивДокументов Цикл
		МетаданныеДокумента = Документ.Метаданные();
		Если ИменаДокументов.Найти(МетаданныеДокумента.ПолноеИмя()) = Неопределено
			И Метаданные.Документы.Содержит(МетаданныеДокумента)
			И МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
				ИменаДокументов.Добавить(МетаданныеДокумента.ПолноеИмя());
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = "";
	Для Каждого ИмяДокумента Из ИменаДокументов Цикл
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + ТекстОбъединитьВсе;
		КонецЕсли;
		ТекстПодзапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяДокумента", ИмяДокумента);
		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

&НаКлиенте
Процедура ОбновитьСписокДокументов(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.СписокДокументов.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусыДокументовСписка()
	
	Если НЕ ВидимостьСписка Тогда
		Возврат;
	КонецЕсли;
	
	МассивДокументов = Новый Массив;
	Для Каждого СтрокаСписка Из Объект.СписокДокументов Цикл
		МассивДокументов.Добавить(СтрокаСписка.Документ);
	КонецЦикла;
	
	РеквизитыДокументов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивДокументов,
		"Проведен,ПометкаУдаления,Комментарий,Аналитика1,Аналитика2,Аналитика3,Аналитика4,Аналитика5,Аналитика6");
	
	Для Каждого СтрокаСписка Из Объект.СписокДокументов Цикл
		
		Документ = СтрокаСписка.Документ;
		
		Если Документ.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
			
			РеквизитыДокумента = РеквизитыДокументов[Документ];
			СтрокаСписка.СтатусДокумента = ?(РеквизитыДокумента.Проведен, 1,
				?(РеквизитыДокумента.ПометкаУдаления, 2, 0));
				
		Иначе
				
			СтрокаСписка.СтатусДокумента = ?(РеквизитыДокумента.ПометкаУдаления, 5, 3);
			
		КонецЕсли;
		
		Для Индекс = 1 По АналитикиШапки.Количество() Цикл
				
			СтрокаСписка["Аналитика"+Индекс] = РеквизитыДокумента["Аналитика"+Индекс];
				
		КонецЦикла;
		
		СтрокаСписка.Комментарий = РеквизитыДокумента.Комментарий;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовОбновить(Команда)
	
	ОбновитьСтатусыДокументовСписка();
	
КонецПроцедуры

#КонецОбласти