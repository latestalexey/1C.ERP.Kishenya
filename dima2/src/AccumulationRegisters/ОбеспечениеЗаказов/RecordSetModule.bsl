#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ПроведениеСервер.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, "СостоянияЗаказов") Тогда
		ПроведениеСервер.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, "СостоянияЗаказов");
	КонецЕсли;
	
	ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства);
	
	Если Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	БлокироватьДляИзменения = Истина;

	// Текущее состояние набора помещается во временную таблицу "ДвиженияТоварыКОтгрузкеПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			Таблица.Потребность
		|		ИНАЧЕ
		|			-Таблица.Потребность
		|	КОНЕЦ                  КАК ПотребностьПередЗаписью,
		|
		|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			Таблица.НаличиеПодЗаказ
		|		ИНАЧЕ
		|			-Таблица.НаличиеПодЗаказ
		|	КОНЕЦ                  КАК НаличиеПередЗаписью,
		|
		|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|
		|			Таблица.КЗаказу
		|		ИНАЧЕ
		|			-Таблица.КЗаказу
		|	КОНЕЦ                  КАК ЗаказатьПередЗаписью
		|
		|ПОМЕСТИТЬ РезервыТоваровПередЗаписью
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|	
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|	И НЕ &ЭтоНовый";

	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, "СостоянияЗаказов") Тогда
		ПроведениеСервер.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, "СостоянияЗаказов");
	КонецЕсли;
	
	ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства);
	
	Если Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонтролироватьПревышение",
		Не ПолучитьФункциональнуюОпцию("НеКонтролироватьОбособленноеОбеспечениеСверхПотребности"));

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаИзменений.Назначение                      КАК Назначение,
		|	ТаблицаИзменений.Номенклатура                    КАК Номенклатура,
		|	ТаблицаИзменений.Характеристика                  КАК Характеристика,
		|	ТаблицаИзменений.Склад                           КАК Склад,
		|	СУММА(ТаблицаИзменений.НаличиеИзменение)         КАК НаличиеИзменение,
		|
		|	СУММА(ВЫБОР КОГДА ТаблицаИзменений.КонтролироватьПревышение ТОГДА
		|				ТаблицаИзменений.ПотребностьИзменение
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)                                       КАК ПотребностьИзменение,
		|
		|	СУММА(ВЫБОР КОГДА ТаблицаИзменений.КонтролироватьПревышение ТОГДА
		|				ТаблицаИзменений.ЗаказатьИзменение
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)                                       КАК ЗаказатьИзменение
		|
		|ПОМЕСТИТЬ ОбеспечениеЗаказовИзменение
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.Назначение                  КАК Назначение,
		|		ВЫБОР КОГДА НЕ &КонтролироватьПревышение ТОГДА
		|					ЛОЖЬ
		|				
		|				КОГДА Таблица.Назначение.НаправлениеДеятельности.ВариантОбособления
		|					= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом) ТОГДА
		|					ЛОЖЬ
	//++ НЕ УТКА
		|				КОГДА НЕ НазначенияДавальца.Ссылка ЕСТЬ NULL ТОГДА
		|					ЛОЖЬ
		|				КОГДА ТИПЗНАЧЕНИЯ(&Регистратор) = ТИП(Документ.МаршрутныйЛистПроизводства) ТОГДА
		|					ЛОЖЬ
		|				КОГДА НЕ ВыпускПродукцииПоРаспоряжениям.Ссылка ЕСТЬ NULL ТОГДА
		|					ЛОЖЬ
	//-- НЕ УТКА
		|				ИНАЧЕ
		|					ИСТИНА
		|			КОНЕЦ                           КАК КонтролироватьПревышение,
		|		Таблица.Номенклатура                КАК Номенклатура,
		|		Таблица.Характеристика              КАК Характеристика,
		|		Таблица.Склад                       КАК Склад,
		|		Таблица.НаличиеПередЗаписью         КАК НаличиеИзменение,
		|		Таблица.ПотребностьПередЗаписью     КАК ПотребностьИзменение,

		|		Таблица.ЗаказатьПередЗаписью        КАК ЗаказатьИзменение
		|	ИЗ
		|		РезервыТоваровПередЗаписью КАК Таблица
	//++ НЕ УТКА
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК НазначенияДавальца
		|		ПО Таблица.Назначение = НазначенияДавальца.Ссылка
		|		 И НазначенияДавальца.Заказ ССЫЛКА Документ.ЗаказДавальца
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции КАК ВыпускПродукцииПоРаспоряжениям
		|		ПО ВыпускПродукцииПоРаспоряжениям.Ссылка = &Регистратор
		|		 И ВыпускПродукцииПоРаспоряжениям.ВыпускПоРаспоряжениям
		|		
	//-- НЕ УТКА
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Назначение             КАК Назначение,
		|		ВЫБОР КОГДА НЕ &КонтролироватьПревышение ТОГДА
		|					ЛОЖЬ
		|			
		|			КОГДА Таблица.Назначение.НаправлениеДеятельности.ВариантОбособления
		|				= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом) ТОГДА
		|				ЛОЖЬ
	//++ НЕ УТКА
		|				КОГДА НЕ НазначенияДавальца.Ссылка ЕСТЬ NULL ТОГДА
		|					ЛОЖЬ
	//-- НЕ УТКА
		|				ИНАЧЕ
		|					ИСТИНА
		|			КОНЕЦ                      КАК КонтролироватьПревышение,
		|		Таблица.Номенклатура           КАК Номенклатура,
		|		Таблица.Характеристика         КАК Характеристика,
		|		Таблица.Склад                  КАК Склад,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				-Таблица.НаличиеПодЗаказ
		|			ИНАЧЕ
		|				Таблица.НаличиеПодЗаказ
		|		КОНЕЦ                          КАК НаличиеИзменение,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				-Таблица.Потребность
		|			ИНАЧЕ
		|				Таблица.Потребность
		|		КОНЕЦ                          КАК ПотребностьИзменение,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА

		|				-Таблица.КЗаказу
		|			ИНАЧЕ
		|				Таблица.КЗаказу
		|		КОНЕЦ                          КАК ЗаказатьИзменение
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|		
	//++ НЕ УТКА
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК НазначенияДавальца
		|		ПО Таблица.Назначение = НазначенияДавальца.Ссылка
		|		 И НазначенияДавальца.Заказ ССЫЛКА Документ.ЗаказДавальца
	//-- НЕ УТКА
		|	
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор
		|) КАК ТаблицаИзменений
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Назначение,
		|	ТаблицаИзменений.Номенклатура,
		|	ТаблицаИзменений.Характеристика,
		|	ТаблицаИзменений.Склад
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.НаличиеИзменение) > 0
		|
		|	ИЛИ МАКСИМУМ(ТаблицаИзменений.КонтролироватьПревышение) = ИСТИНА
		|		И(СУММА(ТаблицаИзменений.ПотребностьИзменение) <> 0
		|			ИЛИ СУММА(ТаблицаИзменений.НаличиеИзменение) < 0
		|			ИЛИ СУММА(ТаблицаИзменений.ЗаказатьИзменение) > 0)
		|;
		|УНИЧТОЖИТЬ РезервыТоваровПередЗаписью";

	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();

	СтруктураВременныеТаблицы.Вставить("ОбеспечениеЗаказовИзменение", Выборка.Количество > 0);

КонецПроцедуры

Процедура ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства)
	
	Если Не ДополнительныеСвойства.Свойство("ДляЗаписиПодчиненныхДанных") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных, "СостоянияЗаказов") Тогда
		ПроведениеСервер.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных, "СостоянияЗаказов");
	КонецЕсли;
	
	СтруктураДляРасчетаСостояний = ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных.СтруктураДляРасчетаСостояний;
	
	// Заказы из текущего состояния набора добавляем к общему массиву заказов.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("МассивЗаказов", СтруктураДляРасчетаСостояний.МассивЗаказов);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ФильтрЗаказы.Регистратор КАК Заказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов КАК ВсеДвиженияНазначения
		|		ПО ВсеДвиженияНазначения.Назначение        = Таблица.Назначение
		|			И ВсеДвиженияНазначения.Номенклатура   = Таблица.Номенклатура
		|			И ВсеДвиженияНазначения.Характеристика = Таблица.Характеристика
		|			И ВсеДвиженияНазначения.Склад          = Таблица.Склад
		|			И ВсеДвиженияНазначения.Потребность > 0
		|			И ВсеДвиженияНазначения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикОтгрузкиТоваров КАК ФильтрЗаказы
		|		ПО ФильтрЗаказы.Регистратор = ВсеДвиженияНазначения.Регистратор
		|			И ФильтрЗаказы.Назначение     = ВсеДвиженияНазначения.Назначение
		|			И ФильтрЗаказы.Номенклатура   = ВсеДвиженияНазначения.Номенклатура
		|			И ФильтрЗаказы.Характеристика = ВсеДвиженияНазначения.Характеристика
		|			И ФильтрЗаказы.Склад          = ВсеДвиженияНазначения.Склад
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|	И Таблица.Активность
		|	И ВсеДвиженияНазначения.Активность
		|	И ФильтрЗаказы.Активность
		|	
		|	И НЕ ФильтрЗаказы.Регистратор В(&МассивЗаказов)";
	МассивЗаказов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СтруктураДляРасчетаСостояний.МассивЗаказов, МассивЗаказов);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли