#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция формирует массивы доступных счетов учета для номенклатуры.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета
//
Функция ДоступныеСчетаУчетаНоменклатуры() Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета товаров на складе
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|	И Не ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета передачи на комиссию
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И Не ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета выручки от продаж
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета вычетов из выручки
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета себестоимости продаж
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатЗапросаТовары = МассивРезультатов[0];
	РезультатЗапросаКомиссия = МассивРезультатов[1];
	РезультатЗапросаВыручка = МассивРезультатов[2];
	РезультатЗапросаВычеты = МассивРезультатов[3];
	РезультатЗапросаСебестоимость = МассивРезультатов[4];
	
	СтруктураСчетовУчета = Новый Структура;
	
	// Счета учета товаров на складе.
	МассивСчетовУчетаНаСкладе = Новый Массив;
	Выборка = РезультатЗапросаТовары.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовУчетаНаСкладе.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаУчетаНаСкладе", МассивСчетовУчетаНаСкладе); 
	
	
	// Счета учета передачи на комиссию.
	МассивСчетовПередачиНаКомиссию = Новый Массив;
	Выборка = РезультатЗапросаКомиссия.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовПередачиНаКомиссию.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаУчетаПередачиНаКомиссию", МассивСчетовПередачиНаКомиссию);
	
	// Счета учета выручки от продаж.
	МассивСчетовУчетаВыручкиОтПродаж = Новый Массив;
	Выборка = РезультатЗапросаВыручка.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовУчетаВыручкиОтПродаж.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаУчетаВыручкиОтПродаж", МассивСчетовУчетаВыручкиОтПродаж);
	
	// Счета учета выручки от продаж.
	МассивСчетовУчетаВычетовИзДоходов = Новый Массив;
	Выборка = РезультатЗапросаВычеты.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовУчетаВычетовИзДоходов.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаУчетаВычетовИзДоходов", МассивСчетовУчетаВычетовИзДоходов);
	
	// Счета учета себестоимости от продаж.
	МассивСчетовУчетаСебестоимостиПродаж = Новый Массив;
	Выборка = РезультатЗапросаСебестоимость.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовУчетаСебестоимостиПродаж.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаУчетаСебестоимостиПродаж", МассивСчетовУчетаСебестоимостиПродаж);
	
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета для расчетов с клиентами.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета
//
Функция ДоступныеСчетаУчетаРасчетов() Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов с поставщиками
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиДебиторами)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по авансам, выданным поставщикам
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиДебиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоВыданнымАвансам)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов с клиентами
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиДебиторами)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по авансам, полученным от клиентов
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиДебиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученным)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И (ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный) ИЛИ ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.АктивноПассивный))
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета расчетов по комиссионному вознаграждению
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиКредиторами),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСДругимиДебиторами)
	|		)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатЗапросаРасчетыСПоставщиками = МассивРезультатов[0];
	РезультатЗапросаРасчетыПоАвансамВыданным = МассивРезультатов[1];
	РезультатЗапросаРасчетыСКлиентами = МассивРезультатов[2];
	РезультатЗапросаРасчетыПоАвансамПолученным = МассивРезультатов[3];
	РезультатЗапросаРасчетыПоКомиссии = МассивРезультатов[4];
	
	СтруктураСчетовУчета = Новый Структура;
	
	// Счета учета расчетов с поставщиками.
	МассивСчетовРасчетовСПоставщиками = Новый Массив;
	Выборка = РезультатЗапросаРасчетыСПоставщиками.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовРасчетовСПоставщиками.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСПоставщиками", МассивСчетовРасчетовСПоставщиками);
	
	// Счета учета расчетов по авансам выданным.
	МассивСчетовРасчетовПоАвансамВыданным = Новый Массив;
	Выборка = РезультатЗапросаРасчетыПоАвансамВыданным.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовРасчетовПоАвансамВыданным.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаРасчетовПоАвансаВыданным", МассивСчетовРасчетовПоАвансамВыданным);
	
	// Счета учета расчетов с клиентами.
	МассивСчетовРасчетовСКлиентами = Новый Массив;	
	Выборка = РезультатЗапросаРасчетыСКлиентами.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовРасчетовСКлиентами.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаРасчетовСКлиентами", МассивСчетовРасчетовСКлиентами);
	
	// Счета учета расчетов по авансам полученным.
	МассивСчетовРасчетовПоАвансамПолученным = Новый Массив;
	Выборка = РезультатЗапросаРасчетыПоАвансамПолученным.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовРасчетовПоАвансамПолученным.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаРасчетовПоАвансаПолученным", МассивСчетовРасчетовПоАвансамПолученным);
	
	// Счета учета расчетов по комиссионному вознаграждению.
	МассивСчетовРасчетовПоКомиссии = Новый Массив;
	Выборка = РезультатЗапросаРасчетыПоКомиссии.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовРасчетовПоКомиссии.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаРасчетовПоКомиссии", МассивСчетовРасчетовПоКомиссии);
	
	Возврат СтруктураСчетовУчета;

КонецФункции

// Функция формирует массивы доступных счетов учета для прочих доходов.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета
//
Функция ДоступныеСчетаУчетаПрочихДоходов() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДоходов)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код
	|;
	|");
	
	МассивСчетов = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетов.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета = Новый Структура;
	
	СтруктураСчетовУчета.Вставить("СчетаПрочихДоходов", МассивСчетов);
	
	Возврат СтруктураСчетовУчета;

КонецФункции

// Функция формирует массивы доступных счетов учета для расходов.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета
//
Функция ДоступныеСчетаУчетаРасходов(СтатьяРасходов = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка,
	|	ВЫБОР КОГДА ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|								  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА),
	|								  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК НаВнеоборотныеАктивы,
	|	ВЫБОР КОГДА ВидЦенности В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|								  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства)) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасходыНаОбъектыЭксплуатации,
	|	ВЫБОР КОГДА ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РасходыНаНМАиНИОКР
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	Ссылка = &СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Счета учета Расходов
	// Прочие расходы
	|ВЫБРАТЬ
	|	""СчетаПрочихРасходов"" КАК РазделСчета,
	|	План.Ссылка КАК Ссылка,
	|	План.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланСчетов.Хозрасчетный.ВидыСубконто КАК Виды
	|	ПО
	|		План.Ссылка = Виды.Ссылка
	|		И Виды.ВидСубконто В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат))
	|
	|ГДЕ
	|	НЕ ЕСТЬNULL(Статьи.НаВнеоборотныеАктивы, ЛОЖЬ)
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|	И НЕ План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств), 
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КапитальноеСтроительство),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеДругихНеоборотныхМатериальныхАктивов),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбслуживаниеИРемонт), 
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьРеализации), 
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьРеализованныхПроизводственныхЗапасов), 	
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеНематериальныхАктивов))	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ОС
	|ВЫБРАТЬ
	|	""СчетаОС"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаОбъектыЭксплуатации, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КапитальноеСтроительство),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеДругихНеоборотныхМатериальныхАктивов))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	// Ремонты ОС
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""СчетаРемонтаОС"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаОбъектыЭксплуатации, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбслуживаниеИРемонт))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// НМА
	|ВЫБРАТЬ
	|	""СчетаНМА"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК Статьи ПО ИСТИНА
	|	
	|ГДЕ
	|	ЕСТЬNULL(Статьи.РасходыНаНМАиНИОКР, ИСТИНА)
	|	И План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов),
	|							  ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеНематериальныхАктивов))
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Счета себестоимости реализации
	|ВЫБРАТЬ
	|	""СчетаСебестоимостиРеализации"",
	|	План.Ссылка,
	|	План.Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК План
	|	
	|ГДЕ
	|	План.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьРеализации),
	|							ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьРеализованныхПроизводственныхЗапасов))
	|	И План.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы)
	|	И План.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И НЕ План.Забалансовый
	|	И НЕ План.Количественный
	|	И НЕ План.ЗапретитьИспользоватьВПроводках
	|;
	|");
	
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	
	СтруктураСчетовУчета = Новый Структура;
	СтруктураСчетовУчета.Вставить("СчетаРасходов",			Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаПрочихРасходов",	Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаОС",				Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаРемонтаОС",			Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаНМА",				Новый Массив);
	СтруктураСчетовУчета.Вставить("СчетаСебестоимостиРеализации", Новый Массив);
	
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураСчетовУчета[Выборка.РазделСчета].Добавить(Выборка.Ссылка);
		Если Не Выборка.РазделСчета = "СчетаСебестоимостиРеализации" Тогда
			СтруктураСчетовУчета.СчетаРасходов.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета ТМЦ в эксплуатации.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета
//
Функция ДоступныеСчетаУчетаТМЦВЭксплуатации() Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета в эксплуатации
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|	И Не ПланСчетов.Забалансовый
	|	И ПланСчетов.Количественный
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета амортизации ТМЦ в эксплуатации
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации)
	|	И ПланСчетов.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|	И НЕ ПланСчетов.Забалансовый
	|	И НЕ ПланСчетов.Количественный
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатЗапросаСчетаУчета = МассивРезультатов[0];
	РезультатЗапросаСчетаАмортизации = МассивРезультатов[1];
	
	СтруктураСчетовУчета = Новый Структура;
	
	// Счета учета в эксплуатации
	МассивСчетовУчета = Новый Массив;
	Выборка = РезультатЗапросаСчетаУчета.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовУчета.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаУчета", МассивСчетовУчета); 
	
	// Счета забалансового учета в эксплуатации.
	МассивСчетовАмортизации = Новый Массив;
	Выборка = РезультатЗапросаСчетаАмортизации.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовАмортизации.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	СтруктураСчетовУчета.Вставить("СчетаАмортизации", МассивСчетовАмортизации);
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция формирует массивы доступных счетов учета денежных средств.
//
// Возвращаемое значение:
//	Структура - Структура массивов доступных счетов учета
//
Функция ДоступныеСчетаУчетаДенежныхСредств() Экспорт
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета безналичных денежных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.ВидыСубконто.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.БанковскиеСчета)
	|	И Не ПланСчетов.Забалансовый
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|// Счета учета наличных денежных средств
	|ВЫБРАТЬ
	|	ПланСчетов.Ссылка КАК Ссылка,
	|	ПланСчетов.Код КАК Код
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК ПланСчетов
	|ГДЕ
	|	ПланСчетов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Касса))
	|	И ПланСчетов.ВидыСубконто.ВидСубконто <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДенежныеДокументы)
	|	И Не ПланСчетов.ЗапретитьИспользоватьВПроводках
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланСчетов.Код 
	|;
	|");
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатЗапросаБезналичныеДенежныеСредства = МассивРезультатов[0];
	РезультатЗапросаНаличныеДенежныеСредства    = МассивРезультатов[1];
	
	СтруктураСчетовУчета = Новый Структура;
	
	// Счета учета безналичных ДС
	МассивСчетовБезналичныхДенежныехСредств = Новый Массив;
	Выборка = РезультатЗапросаБезналичныеДенежныеСредства.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовБезналичныхДенежныехСредств.Добавить(Выборка.Ссылка);
	КонецЦикла;
	СтруктураСчетовУчета.Вставить("СчетаБезналичныхДенежныхСредств", МассивСчетовБезналичныхДенежныехСредств);
	
	// Счета учета наличных ДС
	МассивСчетовНаличныхДенежныхСредств = Новый Массив;
	Выборка = РезультатЗапросаНаличныеДенежныеСредства.Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСчетовНаличныхДенежныхСредств.Добавить(Выборка.Ссылка);
	КонецЦикла;
	СтруктураСчетовУчета.Вставить("СчетаНаличныхДенежныхСредств", МассивСчетовНаличныхДенежныхСредств);
	
	Возврат СтруктураСчетовУчета;
	
КонецФункции

// Функция возвращает признак того, что требуется настройка счетов учета денежных средств
//
// Параметры:
// 	МассивОрганизаций - Массив - Организации, для которых необходимо выполнить проверку
//
// Возвращаемое значение:
// 	ТребуетсяНастройка - Булево - Признак необходимости настройки
//
Функция ТребуетсяНастройкаСчетовУчетаДенежныхСредств(МассивОрганизаций) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ТребуетсяНастройка
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|ГДЕ
	|	БанковскиеСчетаОрганизаций.Владелец В (&МассивОрганизаций)
	|	И БанковскиеСчетаОрганизаций.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ТребуетсяНастройка
	|ИЗ
	|	Справочник.Кассы КАК Кассы
	|ГДЕ
	|	Кассы.Владелец В (&МассивОрганизаций)
	|	И Кассы.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|";
	
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	ТребуетсяНастройка = НЕ Запрос.Выполнить().Пустой();
	
	Возврат ТребуетсяНастройка;
	
КонецФункции

// Функция определяет период, в котором находятся документы к отражению в регл. учете
// 
// Параметры:
// 	МассивОрганизаций - Массив - Организации для отбора
// 	ОрганичениеПериода - СтандартнаяДатаНачала - ограничение периода "сверху"
//
// Возвращаемое значение:
// 	Период - Структура - Структура с полями ДатаНачала и ДатаОкончания
// 	
Функция ПериодКОтражениюВРеглУчете(МассивОрганизаций, ОрганичениеПериода) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МИНИМУМ(Строки.ДатаОтражения) КАК ДатаНачала,
	|	МАКСИМУМ(Строки.ДатаОтражения) КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передачи
	|		ПО Передачи.Ссылка = Строки.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
	|		ПО Возвраты.Ссылка = Строки.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК Отчеты
	|		ПО Отчеты.Ссылка = Строки.Регистратор
	|ГДЕ
	|	(Строки.Организация В (&МассивОрганизаций)
	|		ИЛИ Передачи.ОрганизацияПолучатель В (&МассивОрганизаций)
	|		ИЛИ Возвраты.ОрганизацияПолучатель В (&МассивОрганизаций)
	|		ИЛИ Отчеты.Комиссионер В (&МассивОрганизаций))
	|	И Строки.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете)
	|
	|ИМЕЮЩИЕ
	|	НЕ МИНИМУМ(Строки.ДатаОтражения) ЕСТЬ NULL
	|	ИЛИ НЕ МАКСИМУМ(Строки.ДатаОтражения) ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Период = Новый Структура("ДатаНачала, ДатаОкончания", Дата(1,1,1), Дата(2029, 12, 31));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Период.ДатаНачала = НачалоДня(Выборка.ДатаНачала);
		Период.ДатаОкончания = КонецДня(Выборка.ДатаОкончания);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОрганичениеПериода.Дата) И Период.ДатаОкончания > КонецДня(ОрганичениеПериода.Дата) Тогда
		Период.ДатаОкончания = КонецДня(ОрганичениеПериода.Дата);
	КонецЕсли;
	Если Период.ДатаНачала > Период.ДатаОкончания Тогда
		Период.ДатаНачала = Период.ДатаОкончания;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Период;
	
КонецФункции

#КонецОбласти

#КонецЕсли