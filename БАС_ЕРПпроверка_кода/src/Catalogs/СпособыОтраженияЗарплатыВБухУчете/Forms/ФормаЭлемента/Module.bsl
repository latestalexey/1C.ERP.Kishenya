&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
		Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность = Ложь;
	КонецЕсли;
	
	Если Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность Тогда
		Элементы.НастроитьОтражениеВРеглУчете.Доступность           = Ложь;
		Элементы.НастроитьОтражениеВРеглУчетеВзносов.Доступность     = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПриСозданииЧтенииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов")
		И Не ЗначениеЗаполнено(Объект.СчетУчета)Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указан счет учета для отражения зарплаты на прочие пассивы.';uk='Не зазначений рахунок обліку для відображення зарплати на інші пасиви.'"),
			,
			"НастроитьОтражениеВРеглУчете",
			,
			Отказ);
	КонецЕсли;
	
	Если Объект.РежимУчетаВзносов = 1 И АналитикаРасходовВзносовОбязательна И Не ЗначениеЗаполнено(Объект.АналитикаРасходовВзносов) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Аналитика расходов не заполнена.';uk='Аналітика витрат не заповнена.'"),
			,
			"АналитикаРасходовВзносов",
			,
			Отказ);
	КонецЕсли;
	
	Если Объект.РежимУчетаВзносов = 1 И ТипЗнч(Объект.СтатьяРасходовВзносов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов")
		И Не ЗначениеЗаполнено(Объект.СчетУчетаВзносов) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru='Не указан счет учета для отражения взносов на прочие пассивы.';uk='Не зазначений рахунок обліку для відображення внесків на інші пасиви.'"),
			,
			"НастроитьОтражениеВРеглУчетеВзносов",
			,
			Отказ);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьРеквизитыФормы();
	
	УстановитьПризнакиКонтроляАналитикиРасходов();
	
	НастроитьВидимостьАналитик();
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность Тогда
		Элементы.НастроитьОтражениеВРеглУчете.Доступность           = Ложь;
		Элементы.НастроитьОтражениеВРеглУчетеВзносов.Доступность     = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НастроитьОтражениеВРеглУчетеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПодбираемыеАналитики = ПодбираемыеАналитики();
	
	ПараметрыОповещения = Новый Структура(
		"Постфикс, ПодбираемыеАналитики",
		"",
		ПодбираемыеАналитики);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НастройкаОтраженияВРеглУчетеЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	Параметрыформы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаОтраженияВРеглУчете", СтруктураОтражения(""));
	ПараметрыФормы.Вставить("ПодбираемыеАналитики", ПодбираемыеАналитики);
	
	РеглУчетКлиент.ОткрытьНастройкуОтраженияВРеглУчетеАктиваПассива(ЭтаФорма, ОписаниеОповещения, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтражениеВРеглУчетеВзносыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПодбираемыеАналитики = ПодбираемыеАналитики(Истина);
	
	ПараметрыОповещения = Новый Структура(
		"Постфикс, ПодбираемыеАналитики",
		"Взносов",
		ПодбираемыеАналитики);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НастройкаОтраженияВРеглУчетеЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	Параметрыформы = Новый Структура;
	ПараметрыФормы.Вставить("НастройкаОтраженияВРеглУчете", СтруктураОтражения("Взносов"));
	ПараметрыФормы.Вставить("ПодбираемыеАналитики", ПодбираемыеАналитики);
	
	РеглУчетКлиент.ОткрытьНастройкуОтраженияВРеглУчетеАктиваПассива(ЭтаФорма, ОписаниеОповещения, Параметрыформы);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	СтатьяРасходовПриИзмененииНаСервере(
		Объект.СтатьяРасходов,
		Объект.АналитикаРасходов,
		"АналитикаРасходов",
		Объект.АналитикаАктивовПассивов,
		"АналитикаАктивовПассивов",
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("СтатьяРасходовВыборЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Статья", Объект.СтатьяРасходов);
	ПараметрыФормы.Вставить("ПараметрыВыбора", Элемент.ПараметрыВыбора);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСтатьи", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СтатьяРасходов = Результат;
	
	СтатьяРасходовПриИзмененииНаСервере(
		Объект.СтатьяРасходов,
		Объект.АналитикаРасходов,
		"АналитикаРасходов",
		Объект.АналитикаАктивовПассивов,
		"АналитикаАктивовПассивов",
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если АналитикаРасходовЗаказРеализация Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("ОбщаяФорма.ВыборАналитикиРасходов", , Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Объект.АналитикаРасходов = ВыбранноеЗначение.АналитикаРасходов;
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РежимАналитикиВзносовПриИзменении(Элемент)
	
	Объект.СтатьяРасходовВзносов = ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка");
	Объект.АналитикаРасходовВзносов = Неопределено;
	Объект.АналитикаАктивовПассивовВзносов = Неопределено;
	АналитикаРасходовВзносовАвтоматически = Ложь;
	АналитикаРасходовВзносовОбязательна = Ложь;
	
	Элементы.ГруппаВзносыОбщаяАналитика.Видимость = Объект.РежимУчетаВзносов = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВзносовПриИзменении(Элемент)
	
	СтатьяРасходовПриИзмененииНаСервере(
		Объект.СтатьяРасходовВзносов,
		Объект.АналитикаРасходовВзносов,
		"АналитикаРасходовВзносов",
		Объект.АналитикаАктивовПассивовВзносов,
		"АналитикаАктивовПассивовВзносов",
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВзносовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("СтатьяРасходовВзносовВыборЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Статья", Объект.СтатьяРасходовВзносов);
	ПараметрыФормы.Вставить("ПараметрыВыбора", Элемент.ПараметрыВыбора);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСтатьи", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВзносовВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СтатьяРасходовВзносов = Результат;
	
	СтатьяРасходовПриИзмененииНаСервере(
		Объект.СтатьяРасходовВзносов,
		Объект.АналитикаРасходовВзносов,
		"АналитикаРасходовВзносов",
		Объект.АналитикаАктивовПассивовВзносов,
		"АналитикаАктивовПассивовВзносов",
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если АналитикаРасходовВзносовЗаказРеализация Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("ОбщаяФорма.ВыборАналитикиРасходов", , Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		АналитикаРасходовВзносов = ВыбранноеЗначение.АналитикаРасходов;
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВзносовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаОтраженияВРеглУчетеЗавершение(Результат, ПараметрыОповещения) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Постфикс = ПараметрыОповещения.Постфикс;
	
	Объект["СчетУчета" + Постфикс] = Результат.СчетУчета;
	Объект["Субконто1" + Постфикс] = Результат.Субконто1;
	Объект["Субконто2" + Постфикс] = Результат.Субконто2;
	Объект["Субконто3" + Постфикс] = Результат.Субконто3;
	ЭтаФорма["НастроитьОтражениеВРеглУчете" + Постфикс] = РеглУчетВызовСервера.ПредставлениеОтраженияВРеглУчете(Результат, ПараметрыОповещения.ПодбираемыеАналитики);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		Модифицированность = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Объект", Объект.Ссылка);
		
		ОткрытьФорму("Справочник.СпособыОтраженияЗарплатыВБухУчете.Форма.РазблокированиеРеквизитов", 
			ПараметрыФормы,,,,,
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Реквизиты = ЗапретРедактированияРеквизитовОбъектовКлиент.Реквизиты(ЭтаФорма);
		Элементы.РазрешитьРедактированиеРеквизитовОбъекта.Доступность = Ложь;
		Элементы.НастроитьОтражениеВРеглУчете.Доступность            = Истина;
		Элементы.НастроитьОтражениеВРеглУчетеВзносов.Доступность      = Истина;
		
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Реквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОФормление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ПланыВидовХарактеристик.СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(УсловноеОформление,
		"СтатьяРасходов, АналитикаРасходов, СтатьяРасходовВзносов, АналитикаРасходовВзносов");
		
	
	ПланыВидовХарактеристик.СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(
		УсловноеОформление, Новый Структура("Взносы"));
		
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Элементы.ГруппаВзносыОбщаяАналитика.Видимость = Объект.РежимУчетаВзносов = 1;
	
	
	СписокСтатей = СписокПараметровСтатейАналитик(ЭтаФорма);
	
	Для Каждого Элемент Из СписокСтатей Цикл
		ЗаполнитьПодсказкиВвода(Элемент.ИмяАналитикиРасходов, Элемент.ИмяАналитикиПассивов, ЭтаФорма[Элемент.ИмяАналитикиРасходов + "Автоматически"]);
	КонецЦикла;
	
	ПодбираемыеАналитики = ПодбираемыеАналитики();
	
	НастроитьОтражениеВРеглУчете = РеглУчетВызовСервера.ПредставлениеОтраженияВРеглУчете(СтруктураОтражения(""), ПодбираемыеАналитики);
	
	ПодбираемыеАналитики = ПодбираемыеАналитики(Истина);
	
	НастроитьОтражениеВРеглУчетеВзносов = РеглУчетВызовСервера.ПредставлениеОтраженияВРеглУчете(СтруктураОтражения("Взносов"), ПодбираемыеАналитики);
	
КонецПроцедуры

&НаСервере
Функция СтруктураОтражения(Постфикс, Заполнять = Истина)
	
	СтруктураЗаполнения = Новый Структура("СтатьяРасходов, АналитикаРасходов, АналитикаАктивовПассивов, СчетУчета, Субконто1, Субконто2, Субконто3",
		ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	
	Если Не Заполнять Тогда
		Возврат СтруктураЗаполнения;
	КонецЕсли;
	
	СтруктураЗаполнения.СтатьяРасходов           = Объект["СтатьяРасходов" + Постфикс];
	СтруктураЗаполнения.АналитикаРасходов        = Объект["АналитикаРасходов" + Постфикс];
	СтруктураЗаполнения.АналитикаАктивовПассивов = Объект["АналитикаАктивовПассивов" + Постфикс];
	СтруктураЗаполнения.СчетУчета                = Объект["СчетУчета" + Постфикс];
	СтруктураЗаполнения.Субконто1                = Объект["Субконто1" + Постфикс];
	СтруктураЗаполнения.Субконто2                = Объект["Субконто2" + Постфикс];
	СтруктураЗаполнения.Субконто3                = Объект["Субконто3" + Постфикс];
		
	Если ТипЗнч(СтруктураЗаполнения.АналитикаРасходов) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СтруктураЗаполнения.Вставить("ФизическоеЛицо", СтруктураЗаполнения.АналитикаРасходов);
	ИначеЕсли ТипЗнч(СтруктураЗаполнения.АналитикаАктивовПассивов) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СтруктураЗаполнения.Вставить("ФизическоеЛицо", СтруктураЗаполнения.АналитикаАктивовПассивов);
	КонецЕсли;
	
	Возврат СтруктураЗаполнения;
	
КонецФункции

&НаСервере
Процедура НастроитьВидимостьАналитик()
	
	Элементы.АналитикаАктивовПассивов.Видимость  = ТипЗнч(Объект.СтатьяРасходов) <> Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов");
	Элементы.АналитикаРасходов.Видимость         = ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов");
	Элементы.ГруппаОтражениеВРеглУчете.Видимость = ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов");
	
	Элементы.АналитикаАктивовПассивовВзносов.Видимость = ТипЗнч(Объект.СтатьяРасходовВзносов) <> Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов");
	Элементы.АналитикаРасходовВзносов.Видимость        = ТипЗнч(Объект.СтатьяРасходовВзносов) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов");
	Элементы.ГруппаОтражениеВРеглУчетеВзносы.Видимость = ТипЗнч(Объект.СтатьяРасходовВзносов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов");
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсказкиВвода(ИмяЭлементаРасходов, ИмяЭлементаПассивов, ОтображатьПодсказку)
	
	Если ОтображатьПодсказку Тогда
		Элементы[ИмяЭлементаРасходов].ПодсказкаВвода = НСтр("ru='<подбирается автоматически>';uk='<підбирається автоматично>'");
		Элементы[ИмяЭлементаПассивов].ПодсказкаВвода = НСтр("ru='<подбирается автоматически>';uk='<підбирається автоматично>'");
	Иначе
		Элементы[ИмяЭлементаРасходов].ПодсказкаВвода = "";
		Элементы[ИмяЭлементаПассивов].ПодсказкаВвода = "";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ЗаполнитьРеквизитыФормы();
	
	УстановитьПризнакиКонтроляАналитикиРасходов();
	
	НастроитьЭлементыФормы();
	
	НастроитьВидимостьАналитик();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	ПодбираемыеАналитики = ПодбираемыеАналитики(Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПризнакиКонтроляАналитикиРасходов(СтатьяРасходов = Неопределено, ИмяЭлементаРасходов = "", ИмяЭлементаПассивов = "", АвтоподборВидаВзноса = Ложь)
	
	ПодбираемыеАналитикиЗарплаты = ПодбираемыеАналитики();
	ПодбираемыеАналитикиВзносов  = ПодбираемыеАналитики(Истина);
	
	Если СтатьяРасходов <> Неопределено Тогда
		
		МассивСтатей = Новый Массив;
		СтруктураСтатьи = Новый Структура("СтатьяРасходов, ИмяАналитикиРасходов, ИмяАналитикиПассивов, ВидыВзносовПодбираются",
			СтатьяРасходов, ИмяЭлементаРасходов, ИмяЭлементаПассивов, АвтоподборВидаВзноса);
		МассивСтатей.Добавить(СтруктураСтатьи);
		
	Иначе
		МассивСтатей = СписокПараметровСтатейАналитик(ЭтаФорма);
	КонецЕсли;
	
	Для Каждого Элемент Из МассивСтатей Цикл
		
		Если Не ЗначениеЗаполнено(Элемент.СтатьяРасходов) Тогда
			Продолжить;
		КонецЕсли;
		
		Автоматически = Ложь;
		
		Если Элемент.ВидыВзносовПодбираются Тогда
			
			Для Каждого Аналитика Из ПодбираемыеАналитикиВзносов Цикл
				Если Элемент.СтатьяРасходов.ТипЗначения.СодержитТип(Аналитика) Тогда
					Автоматически = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Для Каждого Аналитика Из ПодбираемыеАналитикиЗарплаты Цикл
				Если Элемент.СтатьяРасходов.ТипЗначения.СодержитТип(Аналитика) Тогда
					Автоматически = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		ЭтаФорма[Элемент.ИмяАналитикиРасходов + "Автоматически"] = Автоматически;
		
		Если Автоматически Тогда
			ЭтаФорма[Элемент.ИмяАналитикиРасходов + "Обязательна"] = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СписокПараметровСтатейАналитик(Форма)
	
	Массив = Новый Массив;
	
	СтруктураСтатьи = Новый Структура("СтатьяРасходов, ИмяАналитикиРасходов, ИмяАналитикиПассивов, ВидыВзносовПодбираются",
		Форма.Объект.СтатьяРасходов, "АналитикаРасходов", "АналитикаАктивовПассивов", Ложь);
	Массив.Добавить(СтруктураСтатьи);
	
	СтруктураСтатьи = Новый Структура("СтатьяРасходов, ИмяАналитикиРасходов, ИмяАналитикиПассивов, ВидыВзносовПодбираются",
		Форма.Объект.СтатьяРасходовВзносов, "АналитикаРасходовВзносов", "АналитикаАктивовПассивовВзносов", Истина);
	Массив.Добавить(СтруктураСтатьи);
	
	
	Возврат Массив;
	
КонецФункции

&НаСервереБезКонтекста
Процедура АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст)
	
	ДанныеВыбора = Новый СписокЗначений;
	ПродажиСервер.ЗаполнитьДанныеВыбораАналитикиРасходов(ДанныеВыбора, Текст);
	
КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура СтатьяРасходовПриИзмененииНаСервере(Статья, АналитикаРасходов, ИмяАналитикиРасходов, АналитикаПассивов, ИмяАналитикаПассивов, АвтоподборВидаВзноса)
	
	Если ТипЗнч(Статья) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		
		ДоходыИРасходыСервер.СтатьяАктивовПассивовПриИзменении(Объект, Статья, АналитикаПассивов);
		
			АналитикаРасходов = Неопределено;
			
			ЭтаФорма[ИмяАналитикиРасходов + "Обязательна"] = Ложь;
			ЭтаФорма[ИмяАналитикиРасходов + "ЗаказРеализация"] = Ложь;
			
	Иначе
		
		ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(Объект, Статья, АналитикаРасходов);
		
		ЭтаФорма[ИмяАналитикиРасходов + "Обязательна"] = 
			ЗначениеЗаполнено(Статья)
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Статья, "КонтролироватьЗаполнениеАналитики");
		
		ЭтаФорма[ИмяАналитикиРасходов + "ЗаказРеализация"] = 
			ЗначениеЗаполнено(Статья)
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Статья, "АналитикаРасходовЗаказРеализация");
		
		АналитикаАктивовПассивов = Неопределено;
		
	КонецЕсли;
	
	УстановитьПризнакиКонтроляАналитикиРасходов(Статья, ИмяАналитикиРасходов, ИмяАналитикаПассивов, АвтоподборВидаВзноса);
	
	ЗаполнитьПодсказкиВвода(ИмяАналитикиРасходов, ИмяАналитикаПассивов, ЭтаФорма[ИмяАналитикиРасходов + "Автоматически"]);
	
	НастроитьВидимостьАналитик();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПодбираемыеАналитики(Взносы = Ложь)
	
	ПодбираемыеАналитики = Новый Массив;
	ПодбираемыеАналитики.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ПодбираемыеАналитики.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	ПодбираемыеАналитики.Добавить(Тип("СправочникСсылка.Организации"));
	ПодбираемыеАналитики.Добавить(Тип("СправочникСсылка.СтруктураПредприятия"));
	
	Если Взносы Тогда
		ПодбираемыеАналитики.Добавить(Тип("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	КонецЕсли;
	
	Возврат ПодбираемыеАналитики;
	
КонецФункции

#КонецОбласти

#КонецОбласти