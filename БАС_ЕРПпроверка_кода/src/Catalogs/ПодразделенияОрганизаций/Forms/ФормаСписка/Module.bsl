
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		
		Если Параметры.Свойство("ПоказыватьРасформированныеПодразделения") Тогда
			ПоказыватьРасформированныеПодразделения = Параметры.ПоказыватьРасформированныеПодразделения;
		КонецЕсли;
	
		Если Параметры.Свойство("ПоказыватьНовыеПодразделения") Тогда
			ПоказыватьНовыеПодразделения = Параметры.ПоказыватьНовыеПодразделения;
		КонецЕсли;
		
		ИспользоватьУсловноеОформление = Истина;
		
	Иначе
		
		ИспользоватьУсловноеОформление = Ложь;
		
		ПоказыватьРасформированныеПодразделения = Истина;
		ПоказыватьНовыеПодразделения = Истина;
		
	КонецЕсли; 
	
	Если Параметры.Отбор.Свойство("Сформировано") Тогда
		Параметры.Отбор.Удалить("Сформировано");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Расформировано") Тогда
		Параметры.Отбор.Удалить("Расформировано");
	КонецЕсли;
	
	Для каждого ЭлементУсловногоОформления Из Список.УсловноеОформление.Элементы Цикл
		ЭлементУсловногоОформления.Использование = ИспользоватьУсловноеОформление;
	КонецЦикла;
	
	Если Параметры.РежимВыбора Тогда
		
		Элементы.Список.РежимВыбора = Истина;
		
		Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			
			ПоказыватьРасформированныеПодразделения = Параметры.ТекущаяСтрока.Расформировано;
			Если НЕ Параметры.ТекущаяСтрока.Сформировано Тогда
				ПоказыватьНовыеПодразделения = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("Владелец")
			И ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
			
			АвтоЗаголовок = Ложь;
			Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Подразделения %1';uk='Підрозділи %1'"),
				Параметры.Отбор.Владелец);
			
		КонецЕсли;
		
		Если Параметры.МножественныйВыбор = Истина Тогда
			Элементы.Список.МножественныйВыбор = Истина;
			Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Множественный;
		Иначе
			Элементы.Список.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
		КонецЕсли;
		
		// Инициализация списка подобранных сотрудников	
		АдресСпискаПодобранных = "";
		Если Параметры.Свойство("АдресСпискаПодобранных", АдресСпискаПодобранных) Тогда
			Если НЕ ПустаяСтрока(АдресСпискаПодобранных) Тогда
				СписокПодобранных.ЗагрузитьЗначения(ПолучитьИзВременногоХранилища(АдресСпискаПодобранных));
			КонецЕсли;
		КонецЕсли;
		УстановитьСписокПодобранных();
		
		Если Параметры.Свойство("Отображение") И ЗначениеЗаполнено(Параметры.Отображение) Тогда
			ОтображениеСписка = Параметры.Отображение;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.КоманднаяПанельФормы);
	// Конец СтандартныеПодсистемы.Печать
	
	ЗарплатаКадры.ПриСозданииНаСервереФормыСДинамическимСписком(ЭтотОбъект, "Список",,,, "Ссылка, Сформировано, Расформировано");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(ОтображениеСписка) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Список", "Отображение", ОтображениеТаблицы[ОтображениеСписка]);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ВыбранныеПодразделения.Количество() > 0 Тогда
		ОповеститьОВыборе(ВыбранныеПодразделения.ВыгрузитьЗначения());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьНовыеПодразделенияПриИзменении(Элемент)
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения);
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьРасформированныеПодразделенияПриИзменении(Элемент)
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МассивВыбранных = Новый Массив;
	Для каждого ИдентификаторВыбраннойСтроки Из Элементы.Список.ВыделенныеСтроки Цикл
		ВыбраннаяСтрока = Элементы.Список.ДанныеСтроки(ИдентификаторВыбраннойСтроки);
		МассивВыбранных.Добавить(ВыбраннаяСтрока.Ссылка);
	КонецЦикла;
	
	Если МассивВыбранных.Количество() > 0 Тогда
		
		Если Элементы.Список.МножественныйВыбор Тогда
			
			ОбновитьСписокПодобранных(МассивВыбранных);
			Если МассивВыбранных.Количество() > 1 Тогда
				Закрыть();
			КонецЕсли; 
			
		Иначе
			
			Если СписокПодобранных.НайтиПоЗначению(МассивВыбранных[0]) = Неопределено Тогда
				ОповеститьОВыборе(МассивВыбранных[0]);
			Иначе
				Закрыть();
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПереместитьЭлементВверх(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВверхВыполнить(Список, Элементы.Список);
	
	Оповестить("ИзмененаСтруктураПредприятия", Элементы.Список.ТекущиеДанные.Владелец);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПереместитьЭлементВниз(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВнизВыполнить(Список, Элементы.Список);
	
	Оповестить("ИзмененаСтруктураПредприятия", Элементы.Список.ТекущиеДанные.Владелец);
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект, Истина);
КонецПроцедуры

&НаСервере
Процедура СписокПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗарплатаКадры.ПроверитьПользовательскиеНастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(ГруппаОтбора, ПоказыватьНовыеПодразделения, ПоказыватьРасформированныеПодразделения)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора, "Сформировано");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора, "Расформировано");
	
	Если НЕ ПоказыватьНовыеПодразделения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Сформировано", Истина);
	КонецЕсли;
	
	Если НЕ ПоказыватьРасформированныеПодразделения Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "Расформировано", Ложь);
	КонецЕсли;
		
КонецПроцедуры	

#Область ОбслуживаниеСпискаПодобранных

&НаСервере
Процедура УстановитьСписокПодобранных()
	
	ЭлементУсловногоОформления = Неопределено;
	Для каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементОформления.Представление = НСтр("ru='Выделение подобранных';uk='Виділення підібраних'") Тогда
			ЭлементУсловногоОформления = ЭлементОформления;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Если ЭлементУсловногоОформления <> Неопределено Тогда
		ЭлементУсловногоОформления.Отбор.Элементы[0].ПравоеЗначение = СписокПодобранных;
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПодобранных(Знач Значение)
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		СписокЗначений = Значение;
	Иначе
		СписокЗначений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Значение);
	КонецЕсли;
	
	Для каждого ВыбранноеЗначение Из СписокЗначений Цикл
		Если СписокПодобранных.НайтиПоЗначению(ВыбранноеЗначение) = Неопределено Тогда
			СписокПодобранных.Добавить(ВыбранноеЗначение);
			ВыбранныеПодразделения.Добавить(ВыбранноеЗначение);
		КонецЕсли; 
	КонецЦикла;
	
	УстановитьСписокПодобранных();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
