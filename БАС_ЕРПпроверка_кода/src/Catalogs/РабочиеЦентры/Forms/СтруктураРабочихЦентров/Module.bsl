&НаКлиенте
Перем ОтображениеСпискаРабочихЦентров;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если НЕ ПравоДоступа("Добавление", Метаданные.Справочники.ВидыРабочихЦентров) Тогда
		Элементы.ВидыРабочихЦентровСоздать.Доступность       = Ложь;
		Элементы.ВидыРабочихЦентровСоздатьГруппу.Доступность = Ложь;
	КонецЕсли; 
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.РабочиеЦентры);
	Элементы.РабочиеЦентрыИзменитьВыделенные.Видимость = МожноРедактировать;
	Элементы.РабочиеЦентрыКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	
	ОтборРабочихЦентровПоВидуРабочегоЦентра = Истина;
	Элементы.РабочиеЦентры.Отображение = ОтображениеТаблицы.Список;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РабочиеЦентры" Тогда
		// Обновим счетчик количества РЦ
		Элементы.ВидыРабочихЦентров.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	УстановитьОборПоПодразделению(ЭтаФорма);
	
	УправлениеОтображениемСпискаРабочихЦентров();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВидыРабочихЦентров

&НаКлиенте
Процедура ВидыРабочихЦентровПриАктивизацииСтроки(Элемент)
	
	Если ОтборРабочихЦентровПоВидуРабочегоЦентра Тогда
		ПодключитьОбработчикОжидания("УстановитьОтборРабочихЦентровПоТекущемуВидуРабочегоЦентра", 0.2, Истина);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочиеЦентры

&НаКлиенте
Процедура РабочиеЦентрыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ТекущиеДанные = Элементы.ВидыРабочихЦентров.ТекущиеДанные;
	Если НЕ Группа
		И НЕ Копирование 
		И ОтборРабочихЦентровПоВидуРабочегоЦентра 
		И ТекущиеДанные <> Неопределено 
		И ТипЗнч(ТекущиеДанные) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		
		Отказ = Истина;
		
		ЗначенияЗаполнения = Новый Структура("ВидРабочегоЦентра", ТекущиеДанные.Ссылка);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.РабочиеЦентры.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОтборРабочихЦентровПоВидуРабочегоЦентра(Команда)
	
	ОтборРабочихЦентровПоВидуРабочегоЦентра = НЕ ОтборРабочихЦентровПоВидуРабочегоЦентра;
	Элементы.РабочиеЦентрыОтборРабочихЦентровПоВидуРабочегоЦентра.Пометка = ОтборРабочихЦентровПоВидуРабочегоЦентра;
	
	Если ОтборРабочихЦентровПоВидуРабочегоЦентра Тогда
		УстановитьОтборРабочихЦентровПоТекущемуВидуРабочегоЦентра();
	Иначе
		УстановитьОтборРабочихЦентровПоВидуРабочегоЦентра(Неопределено, Ложь);
	КонецЕсли;
	
	УправлениеОтображениемСпискаРабочихЦентров();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.РабочиеЦентры);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОборПоПодразделению(Форма)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ВидыРабочихЦентров, 
		"Подразделение", 
		Форма.ОтборПодразделение, 
		ВидСравненияКомпоновкиДанных.Равно,
		, 
		ЗначениеЗаполнено(Форма.ОтборПодразделение));

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.РабочиеЦентры, 
		"ВидРабочегоЦентра.Подразделение", 
		Форма.ОтборПодразделение, 
		ВидСравненияКомпоновкиДанных.Равно,
		, 
		ЗначениеЗаполнено(Форма.ОтборПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборРабочихЦентровПоТекущемуВидуРабочегоЦентра()

	ТекущиеДанные = Элементы.ВидыРабочихЦентров.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ВидРабочегоЦентра = ПустойВидРабочегоЦентра;
	Иначе
		ВидРабочегоЦентра = ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	УстановитьОтборРабочихЦентровПоВидуРабочегоЦентра(ВидРабочегоЦентра, ЗначениеЗаполнено(ВидРабочегоЦентра));

КонецПроцедуры
 
&НаКлиенте
Процедура УстановитьОтборРабочихЦентровПоВидуРабочегоЦентра(ВидРабочегоЦентра, Использование = Истина)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		РабочиеЦентры, 
		"ВидРабочегоЦентра", 
		ВидРабочегоЦентра, 
		ВидСравненияКомпоновкиДанных.ВИерархии,
		, 
		Использование);

КонецПроцедуры
 
&НаКлиенте
Процедура УправлениеОтображениемСпискаРабочихЦентров()

	Если ОтборРабочихЦентровПоВидуРабочегоЦентра ИЛИ НЕ ОтборПодразделение.Пустая() Тогда
		// Включили отбор
		Если ОтображениеСпискаРабочихЦентров = Неопределено Тогда
			ОтображениеСпискаРабочихЦентров = Элементы.РабочиеЦентры.Отображение;
		КонецЕсли;
		Элементы.РабочиеЦентры.Отображение = ОтображениеТаблицы.Список;
	ИначеЕсли ОтображениеСпискаРабочихЦентров <> Неопределено Тогда
		// Отключили отбор
		Элементы.РабочиеЦентры.Отображение = ОтображениеСпискаРабочихЦентров;
		ОтображениеСпискаРабочихЦентров = Неопределено;
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#КонецОбласти
