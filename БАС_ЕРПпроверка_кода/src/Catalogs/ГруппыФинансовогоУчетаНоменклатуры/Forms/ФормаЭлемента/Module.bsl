
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		Элементы.ГруппаОтражениеВРеглУчете.Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаОтражениеВМеждународномУчете.Видимость = Ложь;
	//++ НЕ УТ
	ДоступныеСчетаУчетаНоменклатуры();
	//-- НЕ УТ
	//++ НЕ УТКА
	ПолучитьСостояниеУточненияСчетовУчета();
	//-- НЕ УТКА
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//++ НЕ УТКА
	Если ИмяСобытия = "ИзмененыНастройкиУточненияСчетовУчета" Тогда
		ПолучитьСостояниеУточненияСчетовУчета();
	КонецЕсли;
	//-- НЕ УТКА
	Возврат;// в УТ11 обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	//++ НЕ УТ
	ПолучитьСостояниеНастройкиСчетовРеглУчетаПоОрганизациямИСкладам();
	//-- НЕ УТ
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовШапкиФормы

&НаКлиенте
Процедура СчетУчетаНаСкладеПриИзменении(Элемент)
	
	//++ НЕ УТ
	Если Не ЗначениеЗаполнено(Объект.СчетУчетаНаСкладе) Тогда
		Возврат;
	КонецЕсли;
	//-- НЕ УТ
	
	Возврат; // Чтобы в УТ был не пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаВыручкиОтПродажПриИзменении(Элемент)
	
	//++ НЕ УТ
	СчетУчетаВыручкиОтПродажПриИзмененииСервер();
	//-- НЕ УТ
	
	Возврат; // Чтобы в УТ был не пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьСчетаРеглУчетаПоОрганизациямИСкладам(Команда)
	
	//++ НЕ УТ
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаВопросЗаписиОбъекта", ЭтотОбъект);
		ТекстВопроса = НСтр("ru='Для продолжения необходимо записать объект. Записать?';uk='Для продовження необхідно записати об''єкт. Записати?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Записать';uk='Записати'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
		Возврат;
	КонецЕсли;
	ОткрытьФормуНастройкиСчетовРеглУчетаПоОрганизациямИСкладам();
	//-- НЕ УТ
	
	Возврат; // Чтобы в УТ был не пустой обработчик
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	УстановитьВидимостьРеквизитов();
	
КонецПроцедуры

//++ НЕ УТ

&НаСервере
Процедура СчетУчетаВыручкиОтПродажПриИзмененииСервер()
	
	
	УстановитьВидимостьРеквизитов();
	
КонецПроцедуры

//-- НЕ УТ

&НаСервере
Процедура УстановитьВидимостьРеквизитов()
	
//++ НЕ УТ
//-- НЕ УТ
	
	Возврат;
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

//++ НЕ УТ
&НаКлиенте
Процедура ОбработкаВопросЗаписиОбъекта(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Не Записать() Тогда
			Возврат;
		КонецЕсли;
		ОткрытьФормуНастройкиСчетовРеглУчетаПоОрганизациямИСкладам();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиСчетовРеглУчетаПоОрганизациямИСкладам()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ГруппаФинансовогоУчета", Объект.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеНастройкиСчетовРеглУчетаПоОрганизациямИСкладам", ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.ПорядокОтраженияНоменклатуры.Форма.ФормаНастройки", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеНастройкиСчетовРеглУчетаПоОрганизациямИСкладам(Результат, ДополнительныеПараметры) Экспорт
	
	ПолучитьСостояниеНастройкиСчетовРеглУчетаПоОрганизациямИСкладам();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСостояниеНастройкиСчетовРеглУчетаПоОрганизациямИСкладам()
	
	ЗаголовокКоманды  = НСтр("ru='Посмотреть настройки счетов учета по организациям и складам';uk='Подивитися настройки рахунків обліку по організаціях і складах'");
	
	Если ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.ПорядокОтраженияНоменклатуры)
		 И ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.ПорядокОтраженияНоменклатурыПереданнойНаКомиссию) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Количество
		|ИЗ
		|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
		|ГДЕ
		|	ПорядокОтражения.ГруппаФинансовогоУчета = &ГруппаФинансовогоУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	1
		|ИЗ
		|	РегистрСведений.ПорядокОтраженияНоменклатурыПереданнойНаКомиссию КАК ПорядокОтражения
		|ГДЕ
		|	ПорядокОтражения.ГруппаФинансовогоУчета = &ГруппаФинансовогоУчета";
		
		Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			ЗаголовокКоманды  = НСтр("ru='Настроить счета учета по организациям и складам';uk='Настроїти рахунки обліку по організаціях і складах'");
		Иначе
			ЗаголовокКоманды  = НСтр("ru='Изменить настройки счетов учета по организациям и складам';uk='Змінити настройки рахунків обліку по організаціях і складах'");
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.НастроитьСчетаРеглУчетаПоОрганизациямИСкладам.Заголовок = ЗаголовокКоманды; 
	
КонецПроцедуры

&НаСервере
Процедура ДоступныеСчетаУчетаНоменклатуры()
	
	Если Не ПравоДоступа("Просмотр",  Метаданные.ПланыСчетов.Хозрасчетный) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСчетовУчета = Обработки.НастройкаОтраженияДокументовВРеглУчете.ДоступныеСчетаУчетаНоменклатуры();

	// Счета учета товаров на складе.
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаНаСкладе)));
	Элементы.СчетУчетаНаСкладе.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

	// Счета учета товаров в пути и передачи на комиссию.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаПередачиНаКомиссию)));
	Элементы.СчетУчетаПередачиНаКомиссию.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

	// Счета учета выручки от продаж.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаВыручкиОтПродаж)));
	Элементы.СчетУчетаВыручкиОтПродаж.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

	// Счета учета вычетов из доходов.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаВычетовИзДоходов)));
	Элементы.СчетУчетаВычетовИзДоходов.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета себестоимости от продаж.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаУчетаСебестоимостиПродаж)));
	Элементы.СчетУчетаСебестоимостиПродаж.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры
//-- НЕ УТ

//++ НЕ УТКА
&НаСервере
Процедура ПолучитьСостояниеУточненияСчетовУчета()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМеждународныйФинансовыйУчет")
		И МеждународныйУчетОбщегоНазначения.ДоступноЧтениеНастроекМеждународногоУчета() Тогда
		
		ДанныеНастроек = МеждународныйУчетОбщегоНазначения.СостояниеУточненияСчетовУчета(Объект.Ссылка);
		КоличествоСвязанныхШаблонов = ДанныеНастроек.КоличествоСвязанныхШаблонов;
		КоличествоНастроенныхШаблонов = ДанныеНастроек.КоличествоНастроенныхШаблонов;
		
		ВидимостьНастроек = Ложь;
		ДоступноИзменениеНастроекМФУ = МеждународныйУчетОбщегоНазначения.ДоступноИзменениеНастроекМеждународногоУчета();
		
		Если КоличествоСвязанныхШаблонов > 0 и КоличествоНастроенныхШаблонов > 0 Тогда
			Если ДоступноИзменениеНастроекМФУ Тогда
				Элементы.НастроитьУточнениеСчетов.Заголовок = НСтр("ru='Изменить настройки счетов учета по шаблонам проводок';uk='Змінити настройки рахунків обліку за шаблонами проводок'");
			Иначе
				Элементы.НастроитьУточнениеСчетов.Заголовок = НСтр("ru='Посмотреть настройки счетов учета по шаблонам проводок';uk='Подивитися настройки рахунків обліку по шаблонах проводок'");
			КонецЕсли;
			ВидимостьНастроек = Истина;
		ИначеЕсли КоличествоСвязанныхШаблонов > 0 и КоличествоНастроенныхШаблонов = 0 Тогда
			Элементы.НастроитьУточнениеСчетов.Заголовок = НСтр("ru='Настроить счета учета по шаблонам проводок';uk='Настроїти рахунки обліку за шаблонами проводок'");
			ВидимостьНастроек = ДоступноИзменениеНастроекМФУ; 
		КонецЕсли;
		Элементы.ГруппаОтражениеВМеждународномУчете.Видимость = ВидимостьНастроек
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти
