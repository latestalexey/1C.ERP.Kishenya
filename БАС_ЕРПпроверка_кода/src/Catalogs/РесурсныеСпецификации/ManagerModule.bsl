#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Возвращает структуру данных основного изделия по спецификации
//
// Параметры:
//  Спецификация	 - СправочникСсылка.РесурсныеСпецификации	 - спецификация, данные которой требуется получить
//  Номенклатура	 - СправочникСсылка.Номенклатура			 - Номенклатура выходного изделия, если не указано, то основная
//  Характеристика	 - СправочникСсылка.ХарактеристикиНоменклатуры - Характеристика выходного изделия, если не указано, 
//																	то основная или любая из характеристик номенклатуры
//
// Возвращаемое значение:
//   Структура   - содержит данные изделия
//
Функция ДанныеОсновногоИзделияСпецификации(Спецификация, Номенклатура = Неопределено, Характеристика = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СУММА(ВыходныеИзделия.ДоляСтоимости) КАК ДоляСтоимости
	|ПОМЕСТИТЬ ИтогоДоляСтоимости
	|ИЗ
	|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ВыходныеИзделия
	|ГДЕ
	|	ВыходныеИзделия.Ссылка = &Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВыходныеИзделия.Характеристика КАК Характеристика,
	|	СУММА(ВыходныеИзделия.Количество) КАК Количество,
	|	СУММА(ВыходныеИзделия.ДоляСтоимости) КАК ДоляСтоимости,
	|	0 КАК ДнейДоОкончания
	|ПОМЕСТИТЬ ВыходныеИзделия
	|ИЗ
	|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ВыходныеИзделия
	|ГДЕ
	|	ВыходныеИзделия.Ссылка = &Спецификация
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходныеИзделия.Характеристика,
	|	ВыходныеИзделия.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходныеИзделия.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыходныеИзделия.Характеристика
	|		ИНАЧЕ &Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ВыходныеИзделия.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК НачалоПроизводства,
	|	ВЫБОР
	|		КОГДА ИтогоДоляСтоимости.ДоляСтоимости = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВыходныеИзделия.ДоляСтоимости / ИтогоДоляСтоимости.ДоляСтоимости
	|	КОНЕЦ КАК ДоляСтоимости,
	|	&Спецификация КАК Спецификация,
	|	ВыходныеИзделия.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВыходныеИзделия.ДнейДоОкончания
	|ИЗ
	|	ВыходныеИзделия КАК ВыходныеИзделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ОсновноеВыходноеИзделие
	|		ПО ВыходныеИзделия.Номенклатура = ОсновноеВыходноеИзделие.Номенклатура
	|			И ВыходныеИзделия.Характеристика = ОсновноеВыходноеИзделие.Характеристика
	|			И (ОсновноеВыходноеИзделие.НомерСтроки = 1)
	|			И (ОсновноеВыходноеИзделие.Ссылка = &Спецификация),
	|	ИтогоДоляСтоимости КАК ИтогоДоляСтоимости
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						И НЕ ОсновноеВыходноеИзделие.Номенклатура ЕСТЬ NULL 
	|					ИЛИ ВыходныеИзделия.Номенклатура = &Номенклатура
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						И НЕ ОсновноеВыходноеИзделие.Номенклатура ЕСТЬ NULL 
	|					ИЛИ ВыходныеИзделия.Характеристика = &Характеристика
	|					ИЛИ ВыходныеИзделия.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ");
	
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	Если Номенклатура = Неопределено Тогда
		Запрос.УстановитьПараметр("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	КонецЕсли;
	
	Если Характеристика = Неопределено Тогда
		Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
	КонецЕсли;
	
	ДанныеПоНоменклатуре = Новый Структура("Номенклатура, Характеристика, Спецификация, Количество, Подразделение, НачалоПроизводства, ДнейДоОкончания");
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(ДанныеПоНоменклатуре, Выборка);
		
	КонецЕсли;
	
	Возврат ДанныеПоНоменклатуре;
	
КонецФункции

// Возвращает данные спецификации с учетом данных о номенклатуре и спецификаций полуфабрикатов, производимых в процессе
//
// Параметры:
//  ДанныеПоНоменклатуре		- Структура - содержит данные о номенклатуре
//  ИсключитьПолуфабрикаты		- Булево - Истина, если не требуется добавлять полуфабрикаты в материалы и выходные изделия
//  ПолучитьПредставления		- Булево - Истина, если нужно получить представления ссылочных полей
//
// Возвращаемое значение:
//   Структура   - содержит данные спецификации
//
Функция ДанныеСпецификацииСПолуфабрикатами(ДанныеПоНоменклатуре, ИсключитьПолуфабрикаты, ПолучитьПредставления = Ложь, ПереченьДанных = Неопределено, КэшированныеСпецификации = Неопределено) Экспорт
	
	МассивДанных = Новый Массив;
	МассивДанных.Добавить(ДанныеПоНоменклатуре);
	
	// данные конечной спецификации
	ДанныеСпецификаций = ДанныеСпецификацииПоСпискуНоменклатуры(МассивДанных, ПолучитьПредставления,,ПереченьДанных, КэшированныеСпецификации);
	
	ДанныеОсновнойСпецификации = ДанныеСпецификаций[0];
	
	Если ДанныеОсновнойСпецификации = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Ресурсная спецификация содержит ошибки заполнения. Проверьте заполнение и повторите попытку.';uk='Ресурсна специфікація містить помилки заповнення. Перевірте заповнення і повторіть спробу.'");
	КонецЕсли;
	
	МатериалыПроизводимыеВПроцессе = Новый Массив;
	
	Для Каждого Строка Из ДанныеОсновнойСпецификации.МатериалыИУслуги Цикл
		
		Если Строка.ПроизводитсяВПроцессе Тогда
			
			ДанныеМатериала = Новый Структура;
			ДанныеМатериала.Вставить("Номенклатура",          Строка.Номенклатура);
			ДанныеМатериала.Вставить("Характеристика",        Строка.Характеристика);
			ДанныеМатериала.Вставить("Подразделение",         Строка.ПодразделениеЭтапа);
			ДанныеМатериала.Вставить("Спецификация",          Строка.ИсточникПолученияПолуфабриката);
			ДанныеМатериала.Вставить("Количество",            Строка.Количество);
			ДанныеМатериала.Вставить("Упаковка",              Строка.Упаковка);
			
			МатериалыПроизводимыеВПроцессе.Добавить(ДанныеМатериала);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Пока МатериалыПроизводимыеВПроцессе.Количество() > 0 Цикл
		
		МатериалыПроизводимыеВПроцессе = ДобавитьДанныеПолуфабрикатов(
			ДанныеОсновнойСпецификации, 
			МатериалыПроизводимыеВПроцессе,
			ПолучитьПредставления,
			КэшированныеСпецификации,
			ПереченьДанных);
		
	КонецЦикла;
	
	Если ИсключитьПолуфабрикаты Тогда
		
		СтруктураОтбора = Новый Структура("ПроизводитсяВПроцессе", Истина);
		НайденныеСтроки = ДанныеОсновнойСпецификации.МатериалыИУслуги.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			ДанныеОсновнойСпецификации.МатериалыИУслуги.Удалить(Строка);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеОсновнойСпецификации;
	
КонецФункции

// Возвращает данные спецификации с учетом данных о номенклатуре
//
// Параметры:
//  ДанныеПоНоменклатуре		- Структура - содержит данные о номенклатуре
//  ПолучитьПредставления		- Булево - Истина, если нужно получить представления ссылочных полей
//	ПолучитьСведенияАвтовыбора	- Булево - Истина, если нужно получить сведения автовыбора
//	ПереченьДанных				- Массив - Содержит перечень данных спецификации, которые требуеется получить.
//								- Неопределено - если нужно получить весь набор данных
//
// Возвращаемое значение:
//   Структура   - содержит данные спецификации
//
Функция ДанныеСпецификацииПоНоменклатуре(ДанныеПоНоменклатуре, ПолучитьПредставления = Ложь, ПолучитьСведенияАвтовыбора = Ложь, ПереченьДанных = Неопределено) Экспорт
	
	СтруктураДанных = ДанныеСпецификации(
		ДанныеПоНоменклатуре,
		ПолучитьПредставления,
		ПолучитьСведенияАвтовыбора,
		ПереченьДанных);
	
	Если СтруктураДанных.Свойство("Этапы") Тогда
		РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Ложь,   СтруктураДанных.Этапы);
	КонецЕсли;
	Если СтруктураДанных.Свойство("ВыходныеИзделия") Тогда
		РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Истина, СтруктураДанных.ВыходныеИзделия);
	КонецЕсли;
	Если СтруктураДанных.Свойство("МатериалыИУслуги") Тогда
		РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Истина, СтруктураДанных.МатериалыИУслуги);
	КонецЕсли;
	Если СтруктураДанных.Свойство("Трудозатраты") Тогда
		РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Ложь,   СтруктураДанных.Трудозатраты);
	КонецЕсли;
	
	//++ НЕ УТКА
	// Для материалов требуется обработать автовыбор номенклатуры (характеристики) и формулы.
	Если СтруктураДанных.Свойство("МатериалыИУслуги") Тогда
		
		УправлениеДаннымиОбИзделиях.ОбработатьНастройкиАвтовыбораИПотребленияМатериалов(
			СтруктураДанных.МатериалыИУслуги, 
			ДанныеПоНоменклатуре, 
			"РесурсныеСпецификации", 
			ПолучитьПредставления, 
			ПолучитьСведенияАвтовыбора,
			Истина);
		
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат СтруктураДанных;
	
КонецФункции

// Возвращает данные спецификации по переданному списку номенклатуры
//
// Параметры:
//  МассивДанных				- Массив - содержит структуру данных о номенклатуре
//  ПолучитьПредставления		- Булево - Истина, если нужно получить представления ссылочных полей
//	ПолучитьСведенияАвтовыбора	- Булево - Истина, если нужно получить сведения автовыбора
//	ПереченьДанных				- Массив - Содержит перечень данных спецификации, которые требуеется получить.
//								- Неопределено - если нужно получить весь набор данных
//
// Возвращаемое значение:
//   Массив   - содержит данные для каждой переданной номенклатуры (соответствие данных выполняется по индексу)
//
Функция ДанныеСпецификацииПоСпискуНоменклатуры(МассивДанных, ПолучитьПредставления = Ложь, ПолучитьСведенияАвтовыбора = Ложь, ПереченьДанных = Неопределено, КэшированныеСпецификации = Неопределено) Экспорт

	Результат = Новый Массив;
	
	Если КэшированныеСпецификации = Неопределено Тогда
		
		КэшированныеСпецификации = Новый ТаблицаЗначений;
		КэшированныеСпецификации.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		КэшированныеСпецификации.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		КэшированныеСпецификации.Колонки.Добавить("Спецификация",   Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
		КэшированныеСпецификации.Колонки.Добавить("Подразделение",  Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		КэшированныеСпецификации.Колонки.Добавить("СтруктураДанных");
		КэшированныеСпецификации.Индексы.Добавить("Номенклатура, Характеристика, Спецификация, Подразделение");
		
	КонецЕсли; 
	
	Для каждого ДанныеПоНоменклатуре Из МассивДанных Цикл
		
		Если НЕ ЗначениеЗаполнено(ДанныеПоНоменклатуре.Спецификация) Тогда
			Результат.Добавить(Неопределено);
			Продолжить;
		КонецЕсли;
		
		Если ДанныеПоНоменклатуре.Свойство("Подразделение") Тогда
			Подразделение = ДанныеПоНоменклатуре.Подразделение;
		Иначе
			Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
		КонецЕсли;
		
		СтруктураДанных = Неопределено;
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура",   ДанныеПоНоменклатуре.Номенклатура);
		Отбор.Вставить("Характеристика", ДанныеПоНоменклатуре.Характеристика);
		Отбор.Вставить("Спецификация",   ДанныеПоНоменклатуре.Спецификация);
		Отбор.Вставить("Подразделение",  Подразделение);
		
		НайденныеСтроки = КэшированныеСпецификации.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтруктураДанных = КопияДанныхСпецификации(НайденныеСтроки[0].СтруктураДанных);
		КонецЕсли; 
		
		Если СтруктураДанных = Неопределено Тогда
			
			СтруктураДанных = ДанныеСпецификации(
				ДанныеПоНоменклатуре,
				ПолучитьПредставления,
				ПолучитьСведенияАвтовыбора,
				ПереченьДанных);
			
			НоваяСтрока = КэшированныеСпецификации.Добавить();
			НоваяСтрока.Номенклатура    = ДанныеПоНоменклатуре.Номенклатура;
			НоваяСтрока.Характеристика  = ДанныеПоНоменклатуре.Характеристика;
			НоваяСтрока.Спецификация    = ДанныеПоНоменклатуре.Спецификация;
			НоваяСтрока.Подразделение   = Подразделение;
			НоваяСтрока.СтруктураДанных = КопияДанныхСпецификации(СтруктураДанных);
			
		КонецЕсли; 
		
		Если СтруктураДанных.Свойство("Этапы") Тогда
			РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Ложь,   СтруктураДанных.Этапы);
		КонецЕсли;
		Если СтруктураДанных.Свойство("ВыходныеИзделия") Тогда
			РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Истина, СтруктураДанных.ВыходныеИзделия);
		КонецЕсли;
		Если СтруктураДанных.Свойство("ВозвратныеОтходы") Тогда
			РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Истина, СтруктураДанных.ВозвратныеОтходы);
		КонецЕсли;
		Если СтруктураДанных.Свойство("МатериалыИУслуги") Тогда
			РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Истина, СтруктураДанных.МатериалыИУслуги);
			РассчитатьДнейДоОкончания(ДанныеПоНоменклатуре, СтруктураДанных.МатериалыИУслуги);
		КонецЕсли;
		Если СтруктураДанных.Свойство("Трудозатраты") Тогда
			РассчитатьКоличество(ДанныеПоНоменклатуре.Количество, Ложь,   СтруктураДанных.Трудозатраты);
			РассчитатьДнейДоОкончания(ДанныеПоНоменклатуре, СтруктураДанных.Трудозатраты);
		КонецЕсли;
		Если СтруктураДанных.Свойство("ВидыРабочихЦентров") Тогда
			РассчитатьЗанятость(ДанныеПоНоменклатуре.Количество, СтруктураДанных.ВидыРабочихЦентров);
			РассчитатьДнейДоОкончания(ДанныеПоНоменклатуре, СтруктураДанных.ВидыРабочихЦентров);
		КонецЕсли;
		
		//++ НЕ УТКА
		// Для материалов требуется обработать автовыбор номенклатуры (характеристики) и формулы.
		Если СтруктураДанных.Свойство("МатериалыИУслуги") Тогда
			
			УправлениеДаннымиОбИзделиях.ОбработатьНастройкиАвтовыбораИПотребленияМатериалов(
				СтруктураДанных.МатериалыИУслуги, 
				ДанныеПоНоменклатуре, 
				"РесурсныеСпецификации", 
				ПолучитьПредставления, 
				ПолучитьСведенияАвтовыбора,
				Истина);
			
		КонецЕсли;
		//-- НЕ УТКА
		
		Результат.Добавить(СтруктураДанных);
		
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

// Возвращает ссылку на этап спецификации у которой производственный процесс одноэтапный
//
// Параметры:
//  Спецификация	- СправочникСсылка.РесурсныеСпецификации - спецификация, этапы которой требуется проверить
//
// Возвращаемое значение:
//   СправочникСсылка.ЭтапыПроизводства
//
Функция ПолучитьЭтапОдногоЭтапногоПроцесса(Спецификация) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Этапы.Ссылка
	               |ИЗ
	               |	Справочник.ЭтапыПроизводства КАК Этапы
	               |ГДЕ
	               |	НЕ Этапы.ПометкаУдаления
	               |	И Этапы.Владелец = &Спецификация
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Этапы.Ссылка";
	
	Запрос.УстановитьПараметр("Спецификация", Спецификация);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка;

КонецФункции

// Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значание:
//	Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	// Элементы шапки
	Результат.Добавить("Код");
	Результат.Добавить("ВидПроизводственногоПроцесса");
	Результат.Добавить("СпособПроизводства");
	
	// Элементы табличных частей
	Результат.Добавить("ВыходныеИзделия");
	Результат.Добавить("ВозвратныеОтходы");
	Результат.Добавить("МатериалыИУслуги");
	Результат.Добавить("Трудозатраты");
	
	// Команды
	Результат.Добавить("ФормаЗаполнитьПоМаршрутнымКартамЭтапов");
	Результат.Добавить("МатериалыИУслугиРазбитьСтроку");
	Результат.Добавить("МатериалыИУслугиОткрытьПодборМатериалов");
	
	Возврат Результат;
	
КонецФункции

// Проверяет использование объекта
//
// Параметры:
//  Параметры		- Структура - содержит объект использование которого нужно проверить
//  АдресХранилища	- Строка - адрес хранилища в которое будут помещен результат проверки
//
Процедура ПроверитьИспользованиеОбъекта(Параметры, АдресХранилища) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьСсылки
	|ИЗ
	|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК ТаблицаПоиска
	|ГДЕ
	|	ТаблицаПоиска.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
	|	И ТаблицаПоиска.ИсточникПолученияПолуфабриката = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ВыпускПродукции.Товары КАК ВыпускПродукцииТовары
	|ГДЕ
	|	ВыпускПродукцииТовары.Спецификация = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.СписаниеЗатратНаВыпуск КАК СписаниеЗатратНаВыпуск
	|ГДЕ
	|	СписаниеЗатратНаВыпуск.Спецификация = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ПланПроизводства.Продукция КАК ТаблицаПоиска
	|ГДЕ
	|	ТаблицаПоиска.Спецификация = &Объект
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Продукция КАК ТаблицаПоиска
	|ГДЕ
	|	ТаблицаПоиска.Спецификация = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ЗаказНаПроизводство.МатериалыИУслуги КАК ТаблицаПоиска
	|ГДЕ
	|	ТаблицаПоиска.ПроизводитсяВПроцессе
	|	И ТаблицаПоиска.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
	|	И ТаблицаПоиска.ИсточникПолученияПолуфабриката = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.МаршрутныйЛистПроизводства КАК ТаблицаПоиска
	|ГДЕ
	|	ТаблицаПоиска.Спецификация = &Объект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.АналогиВПроизводстве КАК ТаблицаПоиска
	|ГДЕ
	|	ТаблицаПоиска.Спецификация = &Объект
	//-- НЕ УТКА
	|";
	
	Запрос.УстановитьПараметр("Объект", Параметры.Объект);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ЕстьСсылки = НЕ Результат.Пустой();
	
	ПоместитьВоВременноеХранилище(ЕстьСсылки, АдресХранилища);

КонецПроцедуры

// Проверяет спецификацию на наличие зацикленности материалов и выходных изделий
//
// Параметры:
//  Спецификация	- СправочникСсылка.РесурсныеСпецификации или СправочникОбъект.РесурсныеСпецификации - Ссылка/объект на текущую спецификацию по которой происходит проверка.
//  Материалы		- ТЧ.МатериалыИУслуги - Табличная часть спецификации, содержащая материалы
//  ВыходныеИзделия	- ТЧ.ВыходныеИзделия - Табличная часть спецификации, содержащая выходные изделия
//  Отказ			- Булево - Флаг наличия ошибок проверки
//
Процедура ПроверитьЗацикливаниеСпецификаций(Спецификация, Материалы, ВыходныеИзделия, Отказ = Ложь) Экспорт 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	НайденныеПолуфабрикаты = Материалы.НайтиСтроки(Новый Структура("ПроизводитсяВПроцессе", Истина));
	Если НайденныеПолуфабрикаты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(Спецификация) = Тип("СправочникОбъект.РесурсныеСпецификации") Тогда
		СпецификацияСсылка = Спецификация.Ссылка;
	Иначе
		СпецификацияСсылка = Спецификация;
	КонецЕсли; 
	
	ТаблицаМатериалы = Материалы.Выгрузить(Новый Структура("ПроизводитсяВПроцессе", Истина), "НомерСтроки, Номенклатура, Характеристика, ИсточникПолученияПолуфабриката");
	
	ТаблицаМатериалы.Колонки.Добавить("Спецификация",              Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	ТаблицаМатериалы.Колонки.Добавить("СпецификацияПолуфабриката", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	
	Для Индекс = -ТаблицаМатериалы.Количество() + 1 По 0 Цикл
		
		Строка = ТаблицаМатериалы[-Индекс];
		
		Если ТипЗнч(Строка.ИсточникПолученияПолуфабриката) = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда
			Строка.Спецификация              = СпецификацияСсылка;
			Строка.СпецификацияПолуфабриката = Строка.ИсточникПолученияПолуфабриката;
		Иначе
			ТаблицаМатериалы.Удалить(Строка);
		КонецЕсли;
		
	КонецЦикла;
	
	ВсеВыходныеИзделия = ВыходныеИзделия.Выгрузить(, "Номенклатура, Характеристика");
	ВсеВыходныеИзделия.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	ВсеВыходныеИзделия.ЗаполнитьЗначения(СпецификацияСсылка, "Спецификация");
	
	// Контроллируем зацикленность по "веткам" дерева спецификаций - для этого нужна иерархия строк
	КС = Новый КвалификаторыСтроки(40);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	
	ВсеВыходныеИзделия.Колонки.Добавить("УИ", ОписаниеТиповС);
	УИ = Строка(Новый УникальныйИдентификатор());
	ВсеВыходныеИзделия.ЗаполнитьЗначения(УИ, "УИ");
	ВсеВыходныеИзделия.Колонки.Добавить("Родитель", ОписаниеТиповС);
	ВсеВыходныеИзделия.ЗаполнитьЗначения("", "Родитель");
	ВсеВыходныеИзделия.Индексы.Добавить("УИ");
	ВсеВыходныеИзделия.Индексы.Добавить("УИ, Номенклатура, Характеристика, Спецификация");
	
	ТаблицаМатериалы.Колонки.Добавить("Родитель", ОписаниеТиповС);
	ТаблицаМатериалы.ЗаполнитьЗначения(УИ, "Родитель");
	ТаблицаМатериалы.Колонки.Добавить("УИ", ОписаниеТиповС);
	
	// Текущие материалы сразу добавляем в "дерево" спецификаций т.к. проверки внутри уже отработаны
	Для каждого Материал Из ТаблицаМатериалы Цикл
		Материал.УИ = Строка(Новый УникальныйИдентификатор());
		НоваяСтрока = ВсеВыходныеИзделия.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Материал);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Материалы.УИ,
	|	Материалы.НомерСтроки,
	|	Материалы.Спецификация,
	|	Материалы.Номенклатура,
	|	Материалы.Характеристика,
	|	Материалы.СпецификацияПолуфабриката
	|ПОМЕСТИТЬ МатериалыИсходные
	|ИЗ
	|	&Материалы КАК Материалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыИсходные.УИ КАК Родитель,
	|	МатериалыИсходные.НомерСтроки КАК НомерСтроки,
	|	РесурсныеСпецификацииМатериалыИУслуги.Ссылка КАК Спецификация,
	|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура,
	|	РесурсныеСпецификацииМатериалыИУслуги.Характеристика,
	|	ВЫРАЗИТЬ(РесурсныеСпецификацииМатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.РесурсныеСпецификации) КАК СпецификацияПолуфабриката,
	|	РесурсныеСпецификации.Код
	|ИЗ
	|	МатериалыИсходные КАК МатериалыИсходные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК РесурсныеСпецификацииВыходныеИзделия
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации КАК РесурсныеСпецификации
	|				ПО РесурсныеСпецификацииМатериалыИУслуги.Ссылка = РесурсныеСпецификации.Ссылка
	|			ПО РесурсныеСпецификацииВыходныеИзделия.Ссылка = РесурсныеСпецификацииМатериалыИУслуги.Ссылка
	|		ПО МатериалыИсходные.Спецификация <> РесурсныеСпецификацииВыходныеИзделия.Ссылка
	|			И МатериалыИсходные.СпецификацияПолуфабриката = РесурсныеСпецификацииВыходныеИзделия.Ссылка
	|			И МатериалыИсходные.Номенклатура = РесурсныеСпецификацииВыходныеИзделия.Номенклатура
	|			И (МатериалыИсходные.Характеристика = РесурсныеСпецификацииВыходныеИзделия.Характеристика
	|				ИЛИ РесурсныеСпецификацииВыходныеИзделия.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|ГДЕ
	|	РесурсныеСпецификацииМатериалыИУслуги.ПроизводитсяВПроцессе
	|	И РесурсныеСпецификацииМатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации";
	
	ШаблонТекстаОшибки = НСтр("ru='Выбранный материал с указанной спецификацией приводит к зацикливанию материалов и выходных изделий в спецификации ""%Спецификация%"" Код: %Код%';uk='Вибраний матеріал із зазначеної специфікацією призводить до зациклювання матеріалів і вихідних виробів в специфікації ""%Спецификация%"" Код: %Код%'");
	
	Пока НЕ Отказ И ТаблицаМатериалы.Количество() > 0 Цикл
	
		Запрос.УстановитьПараметр("Материалы", ТаблицаМатериалы);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаМатериалы = РезультатЗапроса.Выгрузить();
		ТаблицаМатериалы.Колонки.Добавить("УИ", ОписаниеТиповС);
		
		// Проверяем что материалы не содержатся в Выходных изделиях
		Для каждого Материал Из ТаблицаМатериалы Цикл
			
			Материал.УИ = Строка(Новый УникальныйИдентификатор());
			
			Родитель = Материал.Родитель;
			Отбор = Новый Структура("Номенклатура, Характеристика, Спецификация");
			ЗаполнитьЗначенияСвойств(Отбор, Материал);
			
			Пока Истина Цикл
				
				Отбор.Вставить("УИ", Родитель);
				
				НайденныеСтроки = ВсеВыходныеИзделия.НайтиСтроки(Отбор);
				Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					ТекстОшибки = ШаблонТекстаОшибки;
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Спецификация%", Строка(Материал.Спецификация));
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Код%", Материал.Код);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, 
						Спецификация,
						ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("МатериалыИУслуги", Материал.НомерСтроки, "ИсточникПолученияПолуфабриката"),
						,
						Отказ);
					
				КонецЦикла; 
				
				Если НЕ ЗначениеЗаполнено(Родитель) Тогда
					Прервать;
				КонецЕсли; 
				
				// Проверяем следующий уровень цепочки спецификаций по данной "ветке"
				НайденныеСтроки = ВсеВыходныеИзделия.НайтиСтроки(Новый Структура("УИ", Родитель));
				Если НайденныеСтроки.Количество() > 0 Тогда
					
					Родитель = НайденныеСтроки[0].Родитель;
				Иначе
					Прервать; // Прерывает т.к. возможно не корректные данные.
				КонецЕсли; 
			КонецЦикла; 
		КонецЦикла;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли; 
		
		// Копируем проверенные материалы в выходные изделия для последующей проверки
		Для каждого Материал Из ТаблицаМатериалы Цикл
			НоваяСтрока = ВсеВыходныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Материал);
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	УправлениеДаннымиОбИзделияхВызовСервера.РесурсныеСпецификацииОбработкаПолученияДанныхВыбора(
				ДанныеВыбора, 
				Параметры, 
				СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" И Параметры.Свойство("ПолучитьСписокДействующихСпецификаций") Тогда
		ВыбраннаяФорма = "ВыборДействующихСпецификаций";
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПолучениеДанныхСпецификации

Процедура ДобавитьПредставленияВЗапрос(ТекстЗапроса)
            
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ЭтапыПроизводства_Представления", 	
									"ЕСТЬNULL(ЭтапыПроизводства.Подразделение.Представление, """") КАК ПодразделениеПредставление,
									|	ЕСТЬNULL(ЭтапыПроизводства.МаршрутнаяКарта.Представление, """") КАК МаршрутнаяКартаПредставление,");
									
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ВидыРабочихЦентров_Представления", 	
									"ЕСТЬNULL(ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.Представление, """") КАК ВидРабочегоЦентраПредставление,");
									
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ВыходныеИзделия_Представления",
									"ЕСТЬNULL(ВыходныеИзделия.Этап.Представление, """") КАК ЭтапПредставление,
									|	ВЫБОР
									|		КОГДА ВыходныеИзделия.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
									|			ТОГДА ЕСТЬNULL(ВыходныеИзделия.Упаковка.Представление, """")
									|		ИНАЧЕ ЕСТЬNULL(ВыходныеИзделия.Номенклатура.ЕдиницаИзмерения.Представление, """")
									|	КОНЕЦ КАК ЕдИзм,
									|	ЕСТЬNULL(ВыходныеИзделия.Номенклатура.Представление, """") КАК НоменклатураПредставление,
									|	ЕСТЬNULL(ВыходныеИзделия.Характеристика.Представление, """") КАК ХарактеристикаПредставление,");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ВозвратныеОтходы_Представления",
									"ЕСТЬNULL(ВозвратныеОтходы.Этап.Представление, """") КАК ЭтапПредставление,
									|	ВЫБОР
									|		КОГДА ВозвратныеОтходы.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
									|			ТОГДА ЕСТЬNULL(ВозвратныеОтходы.Упаковка.Представление, """")
									|		ИНАЧЕ ЕСТЬNULL(ВозвратныеОтходы.Номенклатура.ЕдиницаИзмерения.Представление, """")
									|	КОНЕЦ КАК ЕдИзм,
									|	ЕСТЬNULL(ВозвратныеОтходы.Номенклатура.Представление, """") КАК НоменклатураПредставление,
									|	ЕСТЬNULL(ВозвратныеОтходы.Характеристика.Представление, """") КАК ХарактеристикаПредставление,");
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//МатериалыИУслуги_Представления",
									"ЕСТЬNULL(МатериалыИУслуги.Этап.Представление, """") КАК ЭтапПредставление,
									|	ВЫБОР
									|		КОГДА МатериалыИУслуги.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
									|			ТОГДА ЕСТЬNULL(МатериалыИУслуги.Упаковка.Представление, """")
									|		ИНАЧЕ ЕСТЬNULL(МатериалыИУслуги.Номенклатура.ЕдиницаИзмерения.Представление, """")
									|	КОНЕЦ КАК ЕдИзм,
									|	ЕСТЬNULL(МатериалыИУслуги.Номенклатура.Представление, """") КАК НоменклатураПредставление,
									|	ЕСТЬNULL(МатериалыИУслуги.Характеристика.Представление, """") КАК ХарактеристикаПредставление,");

КонецПроцедуры

Функция ДанныеСпецификации(ДанныеПоНоменклатуре, ПолучитьПредставления, ПолучитьСведенияАвтовыбора, ПереченьДанных = Неопределено)
	
	Если ПереченьДанных = Неопределено Тогда
		// Возвращаем полный набор данных
		ПереченьДанных = Новый Массив;
		ПереченьДанных.Добавить("Этапы");
		ПереченьДанных.Добавить("ВыходныеИзделия");
		ПереченьДанных.Добавить("ВозвратныеОтходы");
		ПереченьДанных.Добавить("МатериалыИУслуги");
		ПереченьДанных.Добавить("Трудозатраты");
		//++ НЕ УТКА
		ПереченьДанных.Добавить("ВидыРабочихЦентров");
		ПереченьДанных.Добавить("АльтернативныеВидыРабочихЦентров");
		//-- НЕ УТКА
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
#Область РеквизитыСпецификации
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РесурсныеСпецификации.Представление КАК СпецификацияПредставление,
	|	РесурсныеСпецификации.МногоэтапныйПроизводственныйПроцесс КАК МногоэтапныйПроизводственныйПроцесс,
	|	РесурсныеСпецификации.ОптимальноеКоличествоПередачиМеждуЭтапами КАК ОптимальноеКоличествоПередачиМеждуЭтапами
	|ИЗ
	|	Справочник.РесурсныеСпецификации КАК РесурсныеСпецификации
	|ГДЕ
	|	РесурсныеСпецификации.Ссылка = &Спецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
#КонецОбласти

//++ НЕ УТКА
#Область МатериалыЗаказДавальца

	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Материалы.Номенклатура КАК Номенклатура,
	|	Материалы.Характеристика КАК Характеристика,
	|	МАКСИМУМ(Материалы.Склад) КАК Склад
	|
	|ПОМЕСТИТЬ ВТМатериалыЗаказаДавальца
	|
	|ИЗ
	|	Документ.ЗаказДавальца.Материалы КАК Материалы
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО (Назначения.Ссылка = &Назначение)
	|			И Материалы.Ссылка = Назначения.Заказ
	|			И (Назначения.Заказ ССЫЛКА Документ.ЗаказДавальца)
	|
	|СГРУППИРОВАТЬ ПО
	|	Материалы.Номенклатура,
	|	Материалы.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
#КонецОбласти
//-- НЕ УТКА

#Область Этапы
	Если Не ПереченьДанных.Найти("Этапы") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	//ЭтапыПроизводства_Представления
		|	ЭтапыПроизводства.Ссылка                                  КАК Этап,
		|	ЭтапыПроизводства.Владелец                                КАК Спецификация,
		|	ЭтапыПроизводства.Представление                           КАК ЭтапПредставление,
		|	ЭтапыПроизводства.НомерЭтапа                              КАК НомерЭтапа,
		|	ЭтапыПроизводства.НомерСледующегоЭтапа                    КАК НомерСледующегоЭтапа,
		|	ЭтапыПроизводства.Подразделение                           КАК Подразделение,
		|	ЕСТЬNULL(ИсходноеВыходноеИзделие.Количество, 1)           КАК КоличествоИзделие,
		|	1                                                         КАК Количество,
		|	ЭтапыПроизводства.ПланироватьРаботуВидовРабочихЦентров    КАК ПланироватьРаботуВидовРабочихЦентров,
		|	ЭтапыПроизводства.Непрерывный                             КАК Непрерывный,
		|	ЭтапыПроизводства.ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий  КАК ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий,
		|	ЭтапыПроизводства.ДлительностьЭтапа                       КАК ДлительностьЭтапа,
		|	ЭтапыПроизводства.ЕдиницаИзмеренияДлительностиЭтапа       КАК ЕдиницаИзмеренияДлительностиЭтапа,
		|	ЭтапыПроизводства.ПредварительныйБуфер                    КАК ПредварительныйБуфер,
		|	ЭтапыПроизводства.ЗавершающийБуфер                        КАК ЗавершающийБуфер,
		|	ЭтапыПроизводства.ЕдиницаИзмеренияПредварительногоБуфера  КАК ЕдиницаИзмеренияПредварительногоБуфера,
		|	ЭтапыПроизводства.ЕдиницаИзмеренияЗавершающегоБуфера      КАК ЕдиницаИзмеренияЗавершающегоБуфера,
		|	ЭтапыПроизводства.МаршрутнаяКарта                         КАК МаршрутнаяКарта,
		|	ЭтапыПроизводства.Описание                                КАК Описание,
		|	ЭтапыПроизводства.ПроизводствоНаСтороне                   КАК ПроизводствоНаСтороне,
		|	ЭтапыПроизводства.Партнер                                 КАК Партнер,
		|	ЭтапыПроизводства.ГрафикРаботыПартнера                    КАК ГрафикРаботыПартнера,
		|	ЭтапыПроизводства.УслугаПереработчика                     КАК УслугаПереработчика,
		|	ЭтапыПроизводства.ХарактеристикаУслугиПереработчика       КАК ХарактеристикаУслугиПереработчика,
		|	ЭтапыПроизводства.СтатьяКалькуляции                       КАК СтатьяКалькуляции
		|ИЗ
		|	Справочник.ЭтапыПроизводства КАК ЭтапыПроизводства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ИсходноеВыходноеИзделие
		|		ПО ИсходноеВыходноеИзделие.Ссылка = ЭтапыПроизводства.Владелец
		|			И (ИсходноеВыходноеИзделие.Номенклатура = &Номенклатура)
		|			И (ИсходноеВыходноеИзделие.Характеристика = &Характеристика
		|				ИЛИ ИсходноеВыходноеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|ГДЕ
		|	ЭтапыПроизводства.Владелец = &Спецификация
		|	И (НЕ ЭтапыПроизводства.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерЭтапа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
#КонецОбласти
	
#Область ВыходныеИзделия
	Если Не ПереченьДанных.Найти("ВыходныеИзделия") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	//ВыходныеИзделия_Представления
		|	ВыходныеИзделия.НомерСтроки                       КАК НомерСтроки,
		|	ВыходныеИзделия.Номенклатура                      КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ВыходныеИзделия.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ВыходныеИзделия.Характеристика
		|		КОГДА ВыходныеИзделия.Номенклатура = &Номенклатура
		|			ТОГДА &Характеристика
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ                                             КАК Характеристика,
		|	ВЫБОР 
		|		КОГДА ВыходныеИзделия.Номенклатура.ИспользованиеХарактеристик В (
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                             КАК ХарактеристикиИспользуются,
		|	ВыходныеИзделия.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	ВыходныеИзделия.Упаковка                          КАК Упаковка,
		|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)     КАК КоэффициентУпаковки,
		|	ЕСТЬNULL(ИсходноеВыходноеИзделие.Количество, 1)   КАК КоличествоИзделие,
		|	ВыходныеИзделия.КоличествоУпаковок                КАК КоличествоУпаковок,
		|	ВыходныеИзделия.Количество                        КАК Количество,
		|	ВыходныеИзделия.Этап                              КАК Этап,
		|	ВыходныеИзделия.Этап.Подразделение                КАК ПодразделениеЭтапа,
		|	ВыходныеИзделия.ДоляСтоимости                     КАК ДоляСтоимости,
		|	ЕСТЬNULL(НастройкиПодразделения.Склад, Значение(Справочник.Склады.ПустаяСсылка)) КАК СкладМатериалов,
		|	ВыходныеИзделия.Номенклатура.ТипНоменклатуры      КАК ТипНоменклатуры
		|
		|ИЗ
		|	Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ВыходныеИзделия
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ИсходноеВыходноеИзделие
		|	ПО ИсходноеВыходноеИзделие.Ссылка = ВыходныеИзделия.Ссылка
		|		И ИсходноеВыходноеИзделие.Номенклатура = &Номенклатура
		|		И (ИсходноеВыходноеИзделие.Характеристика = &Характеристика
		|			ИЛИ ИсходноеВыходноеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкиПодразделения
		|	По ИсходноеВыходноеИзделие.Этап.Подразделение = НастройкиПодразделения.Подразделение
		|		И НастройкиПодразделения.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)
		|		И НастройкиПодразделения.Характеристика = Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|
		|ГДЕ
		|	ВыходныеИзделия.Ссылка = &Спецификация
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВыходныеИзделия.Упаковка",
			"ВыходныеИзделия.Номенклатура"));
		
	КонецЕсли;
#КонецОбласти

#Область ВозвратныеОтходы
	Если Не ПереченьДанных.Найти("ВозвратныеОтходы") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	//ВозвратныеОтходы_Представления
		|	ВозвратныеОтходы.НомерСтроки                       КАК НомерСтроки,
		|	ВозвратныеОтходы.Номенклатура                      КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ВозвратныеОтходы.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ВозвратныеОтходы.Характеристика
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ                                              КАК Характеристика,
		|	ВЫБОР 
		|		КОГДА ВозвратныеОтходы.Номенклатура.ИспользованиеХарактеристик В (
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                              КАК ХарактеристикиИспользуются,
		|	ВозвратныеОтходы.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	ВозвратныеОтходы.Упаковка                          КАК Упаковка,
		|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)      КАК КоэффициентУпаковки,
		|	ЕСТЬNULL(ИсходноеВыходноеИзделие.Количество, 1)    КАК КоличествоИзделие,
		|	ВозвратныеОтходы.КоличествоУпаковок                КАК КоличествоУпаковок,
		|	ВозвратныеОтходы.Количество                        КАК Количество,
		|	ВозвратныеОтходы.СтатьяКалькуляции                 КАК СтатьяКалькуляции,
		|	ВозвратныеОтходы.ОписаниеИзделия                   КАК ОписаниеИзделия,
		|	ВозвратныеОтходы.Этап                              КАК Этап,
		|	ВозвратныеОтходы.Этап.Подразделение                КАК ПодразделениеЭтапа,
		|	ЕСТЬNULL(НастройкиПодразделения.Склад, Значение(Справочник.Склады.ПустаяСсылка)) КАК СкладМатериалов,
		|	ВозвратныеОтходы.Номенклатура.ТипНоменклатуры      КАК ТипНоменклатуры
		|
		|ИЗ
		|	Справочник.РесурсныеСпецификации.ВозвратныеОтходы КАК ВозвратныеОтходы
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ИсходноеВыходноеИзделие
		|	ПО ИсходноеВыходноеИзделие.Ссылка = ВозвратныеОтходы.Ссылка
		|		И ИсходноеВыходноеИзделие.Номенклатура = &Номенклатура
		|		И (ИсходноеВыходноеИзделие.Характеристика = &Характеристика
		|			ИЛИ ИсходноеВыходноеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкиПодразделения
		|	По ИсходноеВыходноеИзделие.Этап.Подразделение = НастройкиПодразделения.Подразделение
		|		И НастройкиПодразделения.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)
		|		И НастройкиПодразделения.Характеристика = Значение(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|
		|ГДЕ
		|	ВозвратныеОтходы.Ссылка = &Спецификация
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВозвратныеОтходы.Упаковка",
			"ВозвратныеОтходы.Номенклатура"));
	КонецЕсли;
#КонецОбласти

#Область МатериалыИУслуги
	Если Не ПереченьДанных.Найти("МатериалыИУслуги") = Неопределено Тогда
	
		Запрос.Текст =
		РегистрыСведений.СхемыОбеспечения.ВременнаяТаблицаФорматыСкладов(Ложь)
		+ Запрос.Текст + "
		|ВЫБРАТЬ
		|	//МатериалыИУслуги_Представления
		|	МатериалыИУслуги.НомерСтроки                      КАК НомерСтроки,
		|	МатериалыИУслуги.Номенклатура                     КАК Номенклатура,
		|	МатериалыИУслуги.Характеристика                   КАК Характеристика,
		|	МатериалыИУслуги.Номенклатура.ТипНоменклатуры     КАК ТипНоменклатуры,
		|	ВЫБОР 
		|		КОГДА МатериалыИУслуги.Номенклатура.ИспользованиеХарактеристик В (
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                             КАК ХарактеристикиИспользуются,
		|	МатериалыИУслуги.Номенклатура.ЕдиницаИзмерения    КАК ЕдиницаИзмерения,
		|	МатериалыИУслуги.Упаковка                         КАК Упаковка,
		|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)                         КАК КоэффициентУпаковки,
		|	ЕСТЬNULL(ИсходноеВыходноеИзделие.Количество, 1)   КАК КоличествоИзделие,
		|	МатериалыИУслуги.КоличествоУпаковок               КАК КоличествоУпаковок,
		|	МатериалыИУслуги.Количество                       КАК Количество,
		|	МатериалыИУслуги.Этап                             КАК Этап,
		
		// Начало. Склад
		//  При изменении необходимо модифицировать метод
		//  ПланированиеПроизводства.СпособПолученияМатериалаПоУмолчанию
		|	ВЫБОР 
		//++ НЕ УТКА
		|		КОГДА НЕ ТМатериалыЗаказаДавальца.Склад ЕСТЬ NULL ТОГДА
		|			ТМатериалыЗаказаДавальца.Склад
		//-- НЕ УТКА
		|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ИЛИ МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|																ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		КОГДА МатериалыИУслуги.ПроизводитсяВПроцессе ТОГДА
		|			ВЫБОР 
		|				КОГДА МатериалыИУслуги.Этап.Подразделение.СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЕСТЬNULL(НастройкаПередачиХарактеристика.Склад, 
		|							ЕСТЬNULL(НастройкаПередачиНоменклатура.Склад, 
		|								ЕСТЬNULL(НастройкаПередачиСклад.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))))
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
		|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЕСТЬNULL(НастройкаПередачиХарактеристика.Склад, 
		|							ЕСТЬNULL(НастройкаПередачиНоменклатура.Склад, 
		|								ЕСТЬNULL(НастройкаПередачиСклад.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))))
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			КОНЕЦ
		|		КОГДА ЕСТЬNULL(НастройкаПередачиХарактеристика.ОснованиеДляПолучения,
		|				ЕСТЬNULL(НастройкаПередачиНоменклатура.ОснованиеДляПолучения,
		|					ЕСТЬNULL(НастройкаПередачиСклад.ОснованиеДляПолучения,
		|						ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)))) = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)
		|				ИЛИ МатериалыИУслуги.Этап.ПроизводствоНаСтороне
		|			ТОГДА ЕСТЬNULL(НастройкаПередачиХарактеристика.Склад, 
		|					ЕСТЬNULL(НастройкаПередачиНоменклатура.Склад, 
		|						ЕСТЬNULL(НастройкаПередачиСклад.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))))
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	КОНЕЦ                                             КАК Склад,
		// Конец. Склад
		
		// Начало. Заказать на склад
		//  При изменении необходимо модифицировать метод
		//  ПланированиеПроизводства.СпособПолученияМатериалаПоУмолчанию
		|	ВЫБОР 
		|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ИЛИ МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|																	ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|			ТОГДА ЛОЖЬ
		|		КОГДА МатериалыИУслуги.ПроизводитсяВПроцессе ТОГДА
		|			ВЫБОР 
		|				КОГДА МатериалыИУслуги.Этап.Подразделение.СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
		|					ТОГДА ЛОЖЬ
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЛОЖЬ
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ИСТИНА
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
		|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ
		|		КОГДА ЕСТЬNULL(НастройкаПередачиХарактеристика.ОснованиеДляПолучения,
		|				ЕСТЬNULL(НастройкаПередачиНоменклатура.ОснованиеДляПолучения,
		|					ЕСТЬNULL(НастройкаПередачиСклад.ОснованиеДляПолучения,
		|						ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)))) = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)
		|				ИЛИ МатериалыИУслуги.Этап.ПроизводствоНаСтороне
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                              КАК ЗаказатьНаСклад,
		// Конец. Заказать на склад
		
		// Начало. Вариант обеспечения
		//  При изменении необходимо модифицировать метод
		//  ПланированиеПроизводства.СпособПолученияМатериалаПоУмолчанию
		|	ВЫБОР 
		|		КОГДА МатериалыИУслуги.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА
		|			
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|		
		|		КОГДА МатериалыИУслуги.ПроизводитсяВПроцессе ТОГДА
		|			
		|			ВЫБОР 
		|				КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|																	ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|				
		|				КОГДА МатериалыИУслуги.Этап.Подразделение.СпособПолученияПолуфабрикатов = ЗНАЧЕНИЕ(Перечисление.СпособыПолученияПолуфабрикатовПроизводимыхВПроцессе.Напрямую)
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|				
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение = МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|				
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|						И ВЫРАЗИТЬ(МатериалыИУслуги.ИсточникПолученияПолуфабриката КАК Справочник.ЭтапыПроизводства).Подразделение <> МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|				
		|				КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
		|						И ПроизводимоеВПроцессеИзделие.Этап.Подразделение <> МатериалыИУслуги.Этап.Подразделение
		|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|				
		|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|				
		|			КОНЕЦ
		|			
		//++ НЕ УТКА
		|		КОГДА НЕ ТМатериалыЗаказаДавальца.Номенклатура ЕСТЬ NULL ТОГДА
		|
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|
		//-- НЕ УТКА
		|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара) ТОГДА
		|			
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется)
		|			
		|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
		|																	ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) ТОГДА
		|			
		|			ВЫБОР КОГДА МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|			КОНЕЦ
		|
		|		КОГДА МатериалыИУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|				И (ЕСТЬNULL(НастройкаПередачиХарактеристика.ОснованиеДляПолучения,
		|					ЕСТЬNULL(НастройкаПередачиНоменклатура.ОснованиеДляПолучения,
		|						ЕСТЬNULL(НастройкаПередачиСклад.ОснованиеДляПолучения,
		|							ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)))) = ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство)
		|					ИЛИ МатериалыИУслуги.Этап.ПроизводствоНаСтороне) ТОГДА
		|		
		|			ВЫБОР КОГДА МатериалыИУслуги.Номенклатура.ОбособленнаяЗакупкаПродажа ТОГДА
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется)
		|			КОНЕЦ
		|	
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|	КОНЕЦ                                              КАК ВариантОбеспечения,
		// Конец. Вариант обеспечения
		
		|	ВЫБОР 
		|		КОГДА (&ПодразделениеДиспетчер = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 
		|				ИЛИ ЕСТЬNULL(СпрСпособОбеспечения.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) = &ПодразделениеДиспетчер
		|				ИЛИ ЕСТЬNULL(СпрСпособОбеспечения.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|				И ЕСТЬNULL(СпрСпособОбеспечения.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Производство)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                              КАК Запланировать,
		|	МатериалыИУслуги.СтатьяКалькуляции                 КАК СтатьяКалькуляции,
		|	ВЫБОР 
		|		КОГДА МатериалыИУслуги.СпособАвтовыбораНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ)
		|				ИЛИ МатериалыИУслуги.СпособАвтовыбораХарактеристики <> ЗНАЧЕНИЕ(Перечисление.СпособыАвтовыбораХарактеристики.УказываетсяВНСИ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                              КАК ИспользуетсяАвтовыбор,
		|	МатериалыИУслуги.СпособАвтовыбораНоменклатуры      КАК СпособАвтовыбораНоменклатуры,
		|	МатериалыИУслуги.СпособАвтовыбораХарактеристики    КАК СпособАвтовыбораХарактеристики,
		|	МатериалыИУслуги.СвойствоСодержащееНоменклатуру    КАК СвойствоСодержащееНоменклатуру,
		
		|	МатериалыИУслуги.ОтборСвойство                          КАК ОтборСвойство,
		|	МатериалыИУслуги.ОтборЗначениеСвойства                  КАК ОтборЗначениеСвойства,
		|	ЕСТЬNULL(СвойстваНоменклатуры.Значение, НЕОПРЕДЕЛЕНО)   КАК ЗначениеСвойстваНоменклатуры,
		|	ЕСТЬNULL(СвойстваХарактеристики.Значение, НЕОПРЕДЕЛЕНО) КАК ЗначениеСвойстваХарактеристики,
		
		|	МатериалыИУслуги.АлгоритмРасчетаКоличества         КАК АлгоритмРасчетаКоличества,
		|	МатериалыИУслуги.ПрименениеМатериала               КАК ПрименениеМатериала,
		|	МатериалыИУслуги.КлючСвязи                         КАК КлючСвязи,
		|	МатериалыИУслуги.ПроизводитсяВПроцессе             КАК ПроизводитсяВПроцессе,
		|	МатериалыИУслуги.ИсточникПолученияПолуфабриката    КАК ИсточникПолученияПолуфабриката,
		|	ВЫБОР
		|		КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.РесурсныеСпецификации
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПолучениеМатериаловЭтапаПроизводства.ПроизвестиПоСпецификации)
		|		КОГДА МатериалыИУслуги.ИсточникПолученияПолуфабриката ССЫЛКА Справочник.ЭтапыПроизводства
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПолучениеМатериаловЭтапаПроизводства.ПроизвестиНаЭтапе)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПолучениеМатериаловЭтапаПроизводства.ПустаяСсылка)
		|	КОНЕЦ                                              КАК СпособПолученияПолуфабриката,
		|	МатериалыИУслуги.Этап.ПроизводствоНаСтороне        КАК ПроизводствоНаСтороне,
		|	МатериалыИУслуги.Этап.ДнейДоОкончания              КАК ДнейДоОкончания,
		|	МатериалыИУслуги.Этап.Подразделение                КАК ПодразделениеЭтапа,
		|	МатериалыИУслуги.Этап.Подразделение                КАК Подразделение,
		|	&ДатаПотребности                                   КАК ДатаПотребности
		|ИЗ
		|	Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК МатериалыИУслуги
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ИсходноеВыходноеИзделие
		|		ПО ИсходноеВыходноеИзделие.Ссылка = МатериалыИУслуги.Ссылка
		|			И ИсходноеВыходноеИзделие.Номенклатура = &Номенклатура
		|			И (ИсходноеВыходноеИзделие.Характеристика = &Характеристика
		|				ИЛИ ИсходноеВыходноеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ПроизводимоеВПроцессеИзделие
		|		ПО ПроизводимоеВПроцессеИзделие.Ссылка = МатериалыИУслуги.ИсточникПолученияПолуфабриката
		|			И МатериалыИУслуги.ПроизводитсяВПроцессе
		|			И ПроизводимоеВПроцессеИзделие.Номенклатура = МатериалыИУслуги.Номенклатура
		|			И (ПроизводимоеВПроцессеИзделие.Характеристика = МатериалыИУслуги.Характеристика
		|				ИЛИ ПроизводимоеВПроцессеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК СвойстваНоменклатуры
		|		ПО МатериалыИУслуги.ОтборСвойство = СвойстваНоменклатуры.Свойство
		|			И СвойстваНоменклатуры.Ссылка = &Номенклатура
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК СвойстваХарактеристики
		|		ПО МатериалыИУслуги.ОтборСвойство = СвойстваХарактеристики.Свойство
		|			И СвойстваХарактеристики.Ссылка = &Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиХарактеристика
		|		ПО МатериалыИУслуги.Этап.Подразделение = НастройкаПередачиХарактеристика.Подразделение
		|			И МатериалыИУслуги.Номенклатура = НастройкаПередачиХарактеристика.Номенклатура
		|			И МатериалыИУслуги.Характеристика = НастройкаПередачиХарактеристика.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиНоменклатура
		|		ПО МатериалыИУслуги.Этап.Подразделение = НастройкаПередачиНоменклатура.Подразделение
		|			И МатериалыИУслуги.Номенклатура = НастройкаПередачиНоменклатура.Номенклатура
		|			И НастройкаПередачиНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			И НастройкаПередачиХарактеристика.Подразделение ЕСТЬ NULL
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиМатериаловВПроизводство КАК НастройкаПередачиСклад
		|		ПО МатериалыИУслуги.Этап.Подразделение = НастройкаПередачиСклад.Подразделение
		|			И НастройкаПередачиСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			И НастройкаПередачиСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			И НастройкаПередачиХарактеристика.Подразделение ЕСТЬ NULL
		|			И НастройкаПередачиНоменклатура.Подразделение ЕСТЬ NULL
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО ВЫБОР КОГДА ЕСТЬNULL(НастройкаПередачиХарактеристика.ОснованиеДляПолучения,
		|				ЕСТЬNULL(НастройкаПередачиНоменклатура.ОснованиеДляПолучения,
		|				ЕСТЬNULL(НастройкаПередачиСклад.ОснованиеДляПолучения,
		|				ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство))))
		|					= ЗНАЧЕНИЕ(Перечисление.ОснованияДляПолученияМатериаловВПроизводстве.ПоЗаказуНаПроизводство) ТОГДА
		|					
		|					ЕСТЬNULL(НастройкаПередачиХарактеристика.Склад,
		|						ЕСТЬNULL(НастройкаПередачиНоменклатура.Склад,
		|						ЕСТЬNULL(НастройкаПередачиСклад.Склад,
		|						ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))))
		|					ИНАЧЕ
		|						ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				КОНЕЦ = СпрСклады.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособОбеспечения
		|		ПО &ПодстановкаОсновногоСпособаОбеспечения
		//++ НЕ УТКА
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМатериалыЗаказаДавальца КАК ТМатериалыЗаказаДавальца
		|		ПО МатериалыИУслуги.Номенклатура = ТМатериалыЗаказаДавальца.Номенклатура
		|			И МатериалыИУслуги.Характеристика = ТМатериалыЗаказаДавальца.Характеристика
		//-- НЕ УТКА
		|
		|ГДЕ
		|	МатериалыИУслуги.Ссылка = &Спецификация
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"МатериалыИУслуги.Упаковка",
			"МатериалыИУслуги.Номенклатура"));
			
		ПоляСоединения = "МатериалыИУслуги.Номенклатура, МатериалыИУслуги.Характеристика,СпрСклады.Ссылка";
		ИмяПараметра = "ПодстановкаОсновногоСпособаОбеспечения";
		Запрос.Текст = РегистрыСведений.СхемыОбеспечения.ПодставитьСоединениеДляПолученияСпособаОбеспечения(
			Запрос.Текст, ИмяПараметра, ПоляСоединения);
		
	КонецЕсли;
#КонецОбласти
	
#Область Трудозатраты
	Если Не ПереченьДанных.Найти("Трудозатраты") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	Трудозатраты.НомерСтроки               КАК НомерСтроки,
		|	Трудозатраты.ВидРабот                  КАК ВидРабот,
		|	Трудозатраты.ВидРабот.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ИсходноеВыходноеИзделие.Количество, 1)   КАК КоличествоИзделие,
		|	Трудозатраты.Количество                           КАК Количество,
		|	Трудозатраты.СтатьяКалькуляции         КАК СтатьяКалькуляции,
		|	Трудозатраты.НазначениеРабот           КАК НазначениеРабот,
		|	Трудозатраты.Этап                      КАК Этап,
		|	Трудозатраты.Этап.ДнейДоОкончания      КАК ДнейДоОкончания,
		|	Трудозатраты.Этап.ДлительностьЭтапа    КАК ДлительностьЭтапа,
		|	Трудозатраты.Этап.Подразделение        КАК ПодразделениеЭтапа,
		|	Трудозатраты.Этап.Подразделение        КАК Подразделение
		|ИЗ
		|	Справочник.РесурсныеСпецификации.Трудозатраты КАК Трудозатраты
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ИсходноеВыходноеИзделие
		|		ПО ИсходноеВыходноеИзделие.Ссылка = Трудозатраты.Ссылка
		|			И ИсходноеВыходноеИзделие.Номенклатура = &Номенклатура
		|			И (ИсходноеВыходноеИзделие.Характеристика = &Характеристика
		|				ИЛИ ИсходноеВыходноеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|ГДЕ
		|	Трудозатраты.Ссылка = &Спецификация
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
#КонецОбласти

//++ НЕ УТКА
#Область ВидыРабочихЦентров
	Если Не ПереченьДанных.Найти("ВидыРабочихЦентров") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	//ВидыРабочихЦентров_Представления
		|	ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра                                     КАК ВидРабочегоЦентра,
		|	ВЫБОР
		|		КОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И НЕ ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ВремяРаботы
		|		КОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ТаблицаВидыРабочихЦентров.ВариантНаладки.ВремяРаботы
		|		ИНАЧЕ ТаблицаВидыРабочихЦентров.ВремяРаботы                                           
		|	КОНЕЦ                                                                           КАК ВремяРаботы,
		|	ВЫБОР
		|		КОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И НЕ ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ЕдиницаИзмерения
		|		КОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ТаблицаВидыРабочихЦентров.ВариантНаладки.ЕдиницаИзмерения
		|		ИНАЧЕ ТаблицаВидыРабочихЦентров.ЕдиницаИзмерения                                           
		|	КОНЕЦ                                                                           КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			ТОГДА 0
		|		ИНАЧЕ ТаблицаВидыРабочихЦентров.Занятость                                           
		|	КОНЕЦ                                                                           КАК Занятость,
		|	ТаблицаВидыРабочихЦентров.ВариантНаладки                                        КАК ВариантНаладки,
		|	ТаблицаВидыРабочихЦентров.Загрузка                                              КАК Загрузка,
		|	ЕСТЬNULL(ИсходноеВыходноеИзделие.Количество, 1)                                 КАК КоличествоИзделие,
		|	ЭтапыПроизводства.Ссылка                                                        КАК Этап,
		|	ЭтапыПроизводства.ДлительностьЭтапа                                             КАК ДлительностьЭтапа,
		|	ЭтапыПроизводства.ДнейДоОкончания                                               КАК ДнейДоОкончания,
		|	ЭтапыПроизводства.Подразделение                                                 КАК ПодразделениеЭтапа,
		|	ЭтапыПроизводства.ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий         КАК ОдновременноПроизводимоеКоличествоЕдиницПартийИзделий
		|ИЗ
		|	Справочник.ЭтапыПроизводства КАК ЭтапыПроизводства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства.ВидыРабочихЦентров КАК ТаблицаВидыРабочихЦентров
		|		ПО ТаблицаВидыРабочихЦентров.Ссылка = ЭтапыПроизводства.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.ВыходныеИзделия КАК ИсходноеВыходноеИзделие
		|		ПО ИсходноеВыходноеИзделие.Ссылка = ЭтапыПроизводства.Владелец
		|			И ИсходноеВыходноеИзделие.Номенклатура = &Номенклатура
		|			И (ИсходноеВыходноеИзделие.Характеристика = &Характеристика
		|				ИЛИ ИсходноеВыходноеИзделие.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|
		|ГДЕ
		|	ЭтапыПроизводства.Владелец = &Спецификация
		|	И (НЕ ЭтапыПроизводства.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаВидыРабочихЦентров.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
#КонецОбласти
	
#Область АльтернативныеВидыРабочихЦентров
	Если Не ПереченьДанных.Найти("АльтернативныеВидыРабочихЦентров") = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
		|	ВЫБОР
		|		КОГДА ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И НЕ ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ВремяРаботы
		|		КОГДА ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВариантНаладки.ВремяРаботы
		|		ИНАЧЕ ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВремяРаботы                                           
		|	КОНЕЦ                                                                           КАК ВремяРаботы,
		|	ВЫБОР
		|		КОГДА ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И НЕ ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра.ЕдиницаИзмерения
		|		КОГДА ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ПараллельнаяЗагрузка
		|			И ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ВариантЗагрузки = ЗНАЧЕНИЕ(Перечисление.ВариантыЗагрузкиРабочихЦентров.Синхронный)
		|			И ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВидРабочегоЦентра.ИспользуютсяВариантыНаладки
		|			ТОГДА ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВариантНаладки.ЕдиницаИзмерения
		|		ИНАЧЕ ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ЕдиницаИзмерения                                           
		|	КОНЕЦ                                                                           КАК ЕдиницаИзмерения,
		|	ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.ВариантНаладки КАК ВариантНаладки,
		|	ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.Загрузка КАК Загрузка,
		|	ТаблицаВидыРабочихЦентров.ВидРабочегоЦентра КАК ОсновнойВидРабочегоЦентра,
		|	ЭтапыПроизводства.Ссылка КАК Этап
		|ИЗ
		|	Справочник.ЭтапыПроизводства КАК ЭтапыПроизводства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства.ВидыРабочихЦентров КАК ТаблицаВидыРабочихЦентров
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства.АльтернативныеВидыРабочихЦентров КАК ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров
		|			ПО ТаблицаВидыРабочихЦентров.Ссылка = ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.Ссылка
		|				И ТаблицаВидыРабочихЦентров.КлючСвязи = ЭтапыПроизводстваАльтернативныеВидыРабочихЦентров.КлючСвязиВидыРабочихЦентров
		|		ПО ЭтапыПроизводства.Ссылка = ТаблицаВидыРабочихЦентров.Ссылка
		|ГДЕ
		|	ЭтапыПроизводства.Владелец = &Спецификация
		|	И НЕ ЭтапыПроизводства.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаВидыРабочихЦентров.НомерСтроки";
	КонецЕсли;
	#КонецОбласти
//-- НЕ УТКА
	
	Если ПолучитьПредставления Тогда
		
		ДобавитьПредставленияВЗапрос(Запрос.Текст);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Номенклатура",   ДанныеПоНоменклатуре.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", ДанныеПоНоменклатуре.Характеристика);
	Запрос.УстановитьПараметр("Спецификация",   ДанныеПоНоменклатуре.Спецификация);
	Запрос.УстановитьПараметр("Количество",     ДанныеПоНоменклатуре.Количество);
	
	Если ДанныеПоНоменклатуре.Свойство("ПодразделениеДиспетчер") Тогда
		Запрос.УстановитьПараметр("ПодразделениеДиспетчер", ДанныеПоНоменклатуре.ПодразделениеДиспетчер);
	Иначе
		Запрос.УстановитьПараметр("ПодразделениеДиспетчер", Справочники.СтруктураПредприятия.ПустаяСсылка());
	КонецЕсли;
	
	Если ДанныеПоНоменклатуре.Свойство("Назначение") Тогда
		Запрос.УстановитьПараметр("Назначение", ДанныеПоНоменклатуре.Назначение);
	Иначе
		Запрос.УстановитьПараметр("Назначение", Справочники.Назначения.ПустаяСсылка());
	КонецЕсли;
	
	Если ДанныеПоНоменклатуре.Свойство("ДатаПотребности") Тогда
		Запрос.УстановитьПараметр("ДатаПотребности", ДанныеПоНоменклатуре.ДатаПотребности);
	Иначе
		Запрос.УстановитьПараметр("ДатаПотребности", Неопределено);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	СтруктураДанных = Новый Структура;
	
	ВыборкаРеквизитыСпецификации = МассивРезультатов[1].Выбрать();
	ВыборкаРеквизитыСпецификации.Следующий();
	
	СтруктураДанных.Вставить("СпецификацияПредставление", ВыборкаРеквизитыСпецификации.СпецификацияПредставление);
	СтруктураДанных.Вставить("МногоэтапныйПроизводственныйПроцесс", ВыборкаРеквизитыСпецификации.МногоэтапныйПроизводственныйПроцесс);
	СтруктураДанных.Вставить("ОптимальноеКоличествоПередачиМеждуЭтапами", ВыборкаРеквизитыСпецификации.ОптимальноеКоличествоПередачиМеждуЭтапами);
	
	НомерВыборки = 2;
	//++ НЕ УТКА
	НомерВыборки = 3;
	//-- НЕ УТКА
	Для каждого ИмяНабораДанных Из ПереченьДанных Цикл
		
		СтруктураДанных.Вставить(ИмяНабораДанных, МассивРезультатов[НомерВыборки].Выгрузить());
		НомерВыборки = НомерВыборки + 1;
		
		// Нужно удалить материалы не соответствующие отбору по свойствам продукции
		Если ИмяНабораДанных = "МатериалыИУслуги" Тогда
			СтрокиКУдалению = Новый Массив;
			Для каждого ДанныеСтроки Из СтруктураДанных.МатериалыИУслуги Цикл
				Если ЗначениеЗаполнено(ДанныеСтроки.ОтборСвойство)
					И (
					// Свойства не заданы, т.е. имеют пустое значение
					ДанныеСтроки.ЗначениеСвойстваНоменклатуры = Неопределено
					И ДанныеСтроки.ЗначениеСвойстваХарактеристики = Неопределено
					И ЗначениеЗаполнено(ДанныеСтроки.ОтборЗначениеСвойства)
					
					// Свойство относится к продукции
					ИЛИ
					ДанныеСтроки.ЗначениеСвойстваНоменклатуры <> Неопределено
					И ДанныеСтроки.ЗначениеСвойстваНоменклатуры <> ДанныеСтроки.ОтборЗначениеСвойства
					
					// Свойство относится к характеристике
					ИЛИ
					ДанныеСтроки.ЗначениеСвойстваХарактеристики <> Неопределено
					И ДанныеСтроки.ЗначениеСвойстваХарактеристики <> ДанныеСтроки.ОтборЗначениеСвойства) Тогда
					
					СтрокиКУдалению.Добавить(ДанныеСтроки);
				КонецЕсли; 
			КонецЦикла;
			Для каждого ДанныеСтроки Из СтрокиКУдалению Цикл
				СтруктураДанных.МатериалыИУслуги.Удалить(ДанныеСтроки);
			КонецЦикла; 
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат СтруктураДанных;

КонецФункции

Процедура РассчитатьКоличество(Количество, ЕстьУпаковки, ИсходнаяТаблица)

	Для каждого СтрокаТаблицы Из ИсходнаяТаблица Цикл
		
		Если СтрокаТаблицы.КоличествоИзделие = 0 Тогда
			
			СтрокаТаблицы.Количество = 0;
			
			Если ЕстьУпаковки Тогда
				СтрокаТаблицы.КоличествоУпаковок = 0;
			КонецЕсли; 
			
		Иначе
			
			КоличествоЦелое = Цел(Количество / СтрокаТаблицы.КоличествоИзделие);
			
			Если КоличествоЦелое * СтрокаТаблицы.КоличествоИзделие < Количество Тогда
				Коэффициент = КоличествоЦелое + 1;
			Иначе
				Коэффициент = КоличествоЦелое;
			КонецЕсли;

			Если ЕстьУпаковки Тогда
				СтрокаТаблицы.КоличествоУпаковок = Коэффициент * СтрокаТаблицы.КоличествоУпаковок;
				СтрокаТаблицы.Количество = СтрокаТаблицы.КоличествоУпаковок * СтрокаТаблицы.КоэффициентУпаковки;
			Иначе
				СтрокаТаблицы.Количество = Коэффициент * СтрокаТаблицы.Количество;	
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьЗанятость(Количество, ИсходнаяТаблица)

	Для каждого СтрокаТаблицы Из ИсходнаяТаблица Цикл
		
		Если СтрокаТаблицы.КоличествоИзделие = 0 Тогда
			
			СтрокаТаблицы.Занятость = 0;
			
		Иначе
			
			КоличествоЦелое = Цел(Количество / СтрокаТаблицы.КоличествоИзделие);
			
			Если КоличествоЦелое * СтрокаТаблицы.КоличествоИзделие < Количество Тогда
				Коэффициент = КоличествоЦелое + 1;
			Иначе
				Коэффициент = КоличествоЦелое;
			КонецЕсли;
			
			СтрокаТаблицы.Занятость = Коэффициент * СтрокаТаблицы.Занятость;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьДнейДоОкончания(ДанныеПоНоменклатуре, ИсходнаяТаблица)

	Если Не ДанныеПоНоменклатуре.Свойство("ДнейДоОкончания") Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ИсходнаяТаблица Цикл
		СтрокаТаблицы.ДнейДоОкончания = СтрокаТаблицы.ДнейДоОкончания + ДанныеПоНоменклатуре.ДнейДоОкончания;
	КонецЦикла;

КонецПроцедуры
 
Функция КопияДанныхСпецификации(СтруктураДанных)

	КопияСтруктураДанных = Новый Структура;
	КопияСтруктураДанных.Вставить("СпецификацияПредставление",                 СтруктураДанных.СпецификацияПредставление);
	КопияСтруктураДанных.Вставить("МногоэтапныйПроизводственныйПроцесс",       СтруктураДанных.МногоэтапныйПроизводственныйПроцесс);
	КопияСтруктураДанных.Вставить("ОптимальноеКоличествоПередачиМеждуЭтапами", СтруктураДанных.ОптимальноеКоличествоПередачиМеждуЭтапами);
	
	ТаблицыДанных = Новый Массив;
	ТаблицыДанных.Добавить("Этапы");
	ТаблицыДанных.Добавить("ВыходныеИзделия");
	ТаблицыДанных.Добавить("ВозвратныеОтходы");
	ТаблицыДанных.Добавить("МатериалыИУслуги");
	ТаблицыДанных.Добавить("Трудозатраты");
	ТаблицыДанных.Добавить("ВидыРабочихЦентров");
	ТаблицыДанных.Добавить("АльтернативныеВидыРабочихЦентров");
	
	ВременнаяТаблица = Неопределено;
	Для Каждого ИмяТаблицы из ТаблицыДанных Цикл
		Если СтруктураДанных.Свойство(ИмяТаблицы, ВременнаяТаблица) Тогда
			КопияСтруктураДанных.Вставить(ИмяТаблицы, ВременнаяТаблица.Скопировать());
		КонецЕсли;
	КонецЦикла;
	
	Возврат КопияСтруктураДанных
	
КонецФункции

Функция ДобавитьДанныеПолуфабрикатов(СводнаяТаблицаСпецификаций, МассивДанных, ПолучитьПредставления, КэшированныеСпецификации, ПереченьДанных)
	
	МатериалыПроизводимыеВПроцессе = Новый Массив;
	
	ДанныеСпецификаций = ДанныеСпецификацииПоСпискуНоменклатуры(МассивДанных, ПолучитьПредставления,,ПереченьДанных, КэшированныеСпецификации);
	
	Для ИндексТекущихДанных = 0 По МассивДанных.ВГраница() Цикл
		
		ТекущиеДанные = ДанныеСпецификаций.Получить(ИндексТекущихДанных);
		
		Если ТекущиеДанные.Свойство("АльтернативныеВидыРабочихЦентров") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.АльтернативныеВидыРабочихЦентров, СводнаяТаблицаСпецификаций.АльтернативныеВидыРабочихЦентров);
		КонецЕсли;
		Если ТекущиеДанные.Свойство("ВидыРабочихЦентров") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.ВидыРабочихЦентров, СводнаяТаблицаСпецификаций.ВидыРабочихЦентров);
		КонецЕсли;
		
		Если ТекущиеДанные.Свойство("ВыходныеИзделия") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.ВыходныеИзделия, СводнаяТаблицаСпецификаций.ВыходныеИзделия);
		КонецЕсли;
		
		Если ТекущиеДанные.Свойство("ВозвратныеОтходы") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.ВозвратныеОтходы, СводнаяТаблицаСпецификаций.ВозвратныеОтходы);
		КонецЕсли;
		
		Если ТекущиеДанные.Свойство("МатериалыИУслуги") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.МатериалыИУслуги, СводнаяТаблицаСпецификаций.МатериалыИУслуги);
		КонецЕсли;
		
		Если ТекущиеДанные.Свойство("Трудозатраты") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.Трудозатраты, СводнаяТаблицаСпецификаций.Трудозатраты);
		КонецЕсли;
		
		Если ТекущиеДанные.Свойство("Этапы") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекущиеДанные.Этапы, СводнаяТаблицаСпецификаций.Этапы);
		КонецЕсли;
		
		Для Каждого Строка Из ТекущиеДанные.МатериалыИУслуги Цикл
			
			Если Строка.ПроизводитсяВПроцессе Тогда
				
				ДанныеМатериала = Новый Структура;
				ДанныеМатериала.Вставить("Номенклатура",          Строка.Номенклатура);
				ДанныеМатериала.Вставить("Характеристика",        Строка.Характеристика);
				ДанныеМатериала.Вставить("Подразделение",         Строка.ПодразделениеЭтапа);
				ДанныеМатериала.Вставить("Спецификация",          Строка.ИсточникПолученияПолуфабриката);
				ДанныеМатериала.Вставить("Количество",            Строка.Количество);
				ДанныеМатериала.Вставить("Упаковка",              Строка.Упаковка);
				
				МатериалыПроизводимыеВПроцессе.Добавить(ДанныеМатериала);
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат МатериалыПроизводимыеВПроцессе;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт



КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	//++ НЕ УТКА
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСравнениеСПлановойКалькуляцией(КомандыОтчетов);
	//-- НЕ УТКА

	//++ НЕ УТКА
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтоимостьМатериаловИРабот(КомандыОтчетов);
	//-- НЕ УТКА

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область Обработчики_2_0_10


#КонецОбласти

#Область Обработчики_2_1_2

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли