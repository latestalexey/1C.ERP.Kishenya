
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыФормы(Параметры);
	
	УстановитьВидимостьИДоступность();
	
	Элементы.ФормаОК.Доступность = Не ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?';uk='Дані були змінені. Зберегти зміни?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПередЗакрытием", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если РежимУчетаВзносовПоСтатьямКалькуляции = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляцииВзносов");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УчетаВзносовПоСтатьямКалькуляцииПриИзменении(Элемент)
	
	СтатьяКалькуляцииВзносов = ПредопределенноеЗначение("Справочник.СтатьиКалькуляции.ПустаяСсылка");
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Модифицированность Тогда
		ЗавершитьРедактирование();
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыФормы(СтруктураПараметров)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураПараметров.СтатьиКалькуляции);
    
	Если Не ЗначениеЗаполнено(СтатьяКалькуляцииВзносов) Тогда
		РежимУчетаВзносовПоСтатьямКалькуляции = 0;
	Иначе
		РежимУчетаВзносовПоСтатьямКалькуляции = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступность()
	
	Элементы.СтатьяКалькуляцииВзносов.Доступность = РежимУчетаВзносовПоСтатьямКалькуляции = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытием(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗавершитьРедактирование();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование()
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
    
    СтатьиКалькуляции = Новый Структура("СтатьяКалькуляцииВзносов");
	ЗаполнитьЗначенияСвойств(СтатьиКалькуляции, ЭтаФорма);
	
	ЗначениеВыбора = Новый Структура;
	ЗначениеВыбора.Вставить("СтатьиКалькуляции", СтатьиКалькуляции);
	
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

#КонецОбласти