&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	
	Элементы.ГруппаПодразделениеДиспетчер.Видимость = Не ЭтоКА;
	Элементы.ГруппаПроизводствоПоЗаказу.Видимость = Не ЭтоКА;
	Элементы.ГруппаИнтервалПланирования.Видимость = Не ЭтоКА;
	Элементы.ГруппаУправлениеМаршрутнымиЛистами.Видимость = Не ЭтоКА;
	Элементы.ГруппаСпособУправленияОперациями.Видимость = Не ЭтоКА;
	
	Если ЭтоКА Тогда
		Элементы.ДекорацияПроизводствоБезЗаказа.Заголовок = НСтр("ru='Производство';uk='Виробництво'");
		Элементы.ДекорацияВариантСписанияЗатратНаВыпускиБезЗаказов.Заголовок = НСтр("ru='Вариант списания затрат на выпуск';uk='Варіант списання витрат на випуск'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РазрешитьРедактирование(Команда)

	Результат = БлокируемыеРеквизитыОбъекта();
	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИспользованиеОбъекта(Команда)
	
	Результат = ПроверитьИспользованиеОбъектаНаСервере();
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПараметрыОбработчикаОжидания.КоэффициентУвеличенияИнтервала = 1.2; // Уменьшим шаг увеличения времени опроса выполнения задания
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	Иначе
		ПолучитьРезультатПроверкиНаСервере();
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

// Унифицированная процедура проверки выполнения фонового задания.
//
&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
 
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ПолучитьРезультатПроверкиНаСервере();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьИспользованиеОбъектаНаСервере()
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Объект", Параметры.Объект);
	
	Результат = Новый Структура("ЗаданиеВыполнено", Истина);
	
	//++ НЕ УТ
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Справочники.СтруктураПредприятия.ПроверитьИспользованиеПараметровПроизводства(ПараметрыЗадания, АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		
		НаименованиеЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Проверка использования объекта %1';uk='Перевірка використання об''єкта %1'"),
				Параметры.Объект);
				
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
				УникальныйИдентификатор,
				"Справочники.СтруктураПредприятия.ПроверитьИспользованиеПараметровПроизводства",
				ПараметрыЗадания,
				НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
		
	КонецЕсли; 
	//-- НЕ УТ
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьРезультатПроверкиНаСервере()
	
	РезультатПроверки = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	//++ НЕ УТКА
	
	// Результат проверки
	Если РезультатПроверки.ИнтервалПланированияИспользуется 
		ИЛИ РезультатПроверки.УправлениеМаршрутнымиЛистамиИспользуется
		ИЛИ РезультатПроверки.ПооперационноеРасписаниеИспользуется Тогда
		Элементы.ГруппаОбъектИспользуетсяСтраницы.ТекущаяСтраница = Элементы.ГруппаОбъектИспользуетсяОбъектИспользуется;
	Иначе
		Элементы.ГруппаОбъектИспользуетсяСтраницы.ТекущаяСтраница = Элементы.ГруппаОбъектИспользуетсяОбъектНеИспользуется;
	КонецЕсли; 
	
	// ИнтервалПланирования
	Если РезультатПроверки.ИнтервалПланированияИспользуется Тогда
		СтраницаИнтервалПланирования = Элементы.СтраницаИнтервалПланированияПараметрИспользуется;
	Иначе
		СтраницаИнтервалПланирования = Элементы.СтраницаИнтервалПланированияПараметрНеИспользуется;
	КонецЕсли; 
	Элементы.СтраницыИнтервалПланирования.ТекущаяСтраница = СтраницаИнтервалПланирования;
	
	// УправлениеМаршрутнымиЛистами
	Если РезультатПроверки.УправлениеМаршрутнымиЛистамиИспользуется Тогда
		СтраницаИнтервалПланирования = Элементы.СтраницаУправлениеМаршрутнымиЛистамиПараметрИспользуется;
	Иначе
		СтраницаИнтервалПланирования = Элементы.СтраницаУправлениеМаршрутнымиЛистамиПараметрНеИспользуется;
	КонецЕсли; 
	Элементы.СтраницыУправлениеМаршрутнымиЛистами.ТекущаяСтраница = СтраницаИнтервалПланирования;
	
	// СпособУправленияОперациями
	Если РезультатПроверки.ПооперационноеРасписаниеИспользуется Тогда
		СтраницаСпособУправленияОперациями = Элементы.СтраницаСпособУправленияОперациямиПараметрИспользуется;
	Иначе
		СтраницаСпособУправленияОперациями = Элементы.СтраницаСпособУправленияОперациямиПараметрНеИспользуется;
	КонецЕсли; 
	Элементы.СтраницыСпособУправленияОперациями.ТекущаяСтраница = СтраницаСпособУправленияОперациями;
	
	// Подразделение-диспетчер
	Если РезультатПроверки.ИспользуетсяКакДиспетчер Тогда
		Элементы.СтраницыПодразделениеДиспетчер.ТекущаяСтраница = Элементы.СтраницаПодразделениеДиспетчерПараметрИспользуется;
	Иначе
		Элементы.СтраницыПодразделениеДиспетчер.ТекущаяСтраница = Элементы.СтраницаПодразделениеДиспетчерНеИспользуется;
	КонецЕсли;
	
	// Производство по заказу
	Если РезультатПроверки.ИспользуетсяДляПроизводстваПоЗаказам Тогда
		Элементы.СтраницыПроизводствоПоЗаказу.ТекущаяСтраница = Элементы.СтраницаПроизводствоПоЗаказуПараметрИспользуется;
	Иначе
		Элементы.СтраницыПроизводствоПоЗаказу.ТекущаяСтраница = Элементы.СтраницаПроизводствоПоЗаказуПараметрНеИспользуется;
	КонецЕсли;
	
	//-- НЕ УТКА
	// Производство без заказов
	Если РезультатПроверки.ИспользуетсяДляПроизводстваБезЗаказов Тогда
		Элементы.СтраницыПроизводствоБезЗаказов.ТекущаяСтраница = Элементы.СтраницаПроизводствоБезЗаказовПараметрИспользуется;
		Элементы.СтраницыВариантСписанияЗатратНаВыпускиБезЗаказов.ТекущаяСтраница = Элементы.СтраницаВариантСписанияЗатратНаВыпускиБезЗаказовИспользуется;
	Иначе
		Элементы.СтраницыПроизводствоБезЗаказов.ТекущаяСтраница = Элементы.СтраницаПроизводствоБезЗаказовПараметрНеИспользуется;
		Элементы.СтраницыВариантСписанияЗатратНаВыпускиБезЗаказов.ТекущаяСтраница = Элементы.СтраницаВариантСписанияЗатратНаВыпускиБезЗаказовНеИспользуется;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция БлокируемыеРеквизитыОбъекта()
	
	Реквизиты = Справочники.СтруктураПредприятия.ПолучитьБлокируемыеРеквизитыОбъекта();
	
	Индекс = 0;
	Для каждого Реквизит Из Реквизиты Цикл
		
		СимволРазделитель = СтрНайти(Реквизит, ";");
		Если НЕ СимволРазделитель = 0 Тогда
			Реквизиты[Индекс] = СокрЛП(Лев(Реквизит, СимволРазделитель-1));
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	Возврат Реквизиты;
	
КонецФункции

#КонецОбласти
