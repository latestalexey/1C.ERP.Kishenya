
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Организация", ОтборОрганизация);
		СтруктураБыстрогоОтбора.Свойство("Подразделение", ОтборПодразделение);
		СтруктураБыстрогоОтбора.Свойство("Ответственный", ОтборОтветственный);
		СтруктураБыстрогоОтбора.Свойство("Операции", ОтборОперации);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ОтборОтветственный,,, ЗначениеЗаполнено(ОтборОтветственный));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Операции", ОтборОперации, ВидСравненияКомпоновкиДанных.ВСписке,, ОтборОперации.Количество()<>0);
	
	ОперацииЖурнала.Очистить();
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление"), НСтр("ru='Заказ на передачу в эксплуатацию';uk='Замовлення на передачу в експлуатацію'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров"), НСтр("ru='Передача в эксплуатацию';uk='Передача в експлуатацію'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ПеремещениеВЭксплуатации"), НСтр("ru='Перемещение в эксплуатации';uk='Переміщення в експлуатації'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.СписаниеИзЭксплуатации"), НСтр("ru='Списание из эксплуатации';uk='Списання з експлуатації'"));
	
	ЕстьПравоСоздатьЗаказ = ПравоДоступа("Добавление", Метаданные.Документы.ЗаказНаВнутреннееПотребление);
	ЕстьПравоСоздатьПередачу = ПравоДоступа("Добавление", Метаданные.Документы.ВнутреннееПотреблениеТоваров);
	ЕстьПравоСоздатьПеремещение = ПравоДоступа("Добавление", Метаданные.Документы.ПеремещениеВЭксплуатации);
	ЕстьПравоСоздатьСписание = ПравоДоступа("Добавление", Метаданные.Документы.СписаниеИзЭксплуатации);
	
	Элементы.СоздатьЗаказ.Видимость = ЕстьПравоСоздатьЗаказ;
	Элементы.СоздатьПередачу.Видимость = ЕстьПравоСоздатьПередачу;
	Элементы.СоздатьПеремещение.Видимость = ЕстьПравоСоздатьПеремещение;
	Элементы.СоздатьСписание.Видимость = ЕстьПравоСоздатьСписание;
	
	Элементы.Скопировать.Видимость = ЕстьПравоСоздатьЗаказ Или ЕстьПравоСоздатьПередачу
		Или ЕстьПравоСоздатьПеремещение Или ЕстьПравоСоздатьСписание;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ОтборОрганизация = Настройки.Получить("ОтборОрганизация");
	Настройки.Удалить("ОтборОрганизация");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
	ОтборПодразделение = Настройки.Получить("ОтборПодразделение");
	Настройки.Удалить("ОтборПодразделение");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
	ОтборОтветственный = Настройки.Получить("ОтборОтветственный");
	Настройки.Удалить("ОтборОтветственный");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ОтборОтветственный,,, ЗначениеЗаполнено(ОтборОтветственный));
	
	ОтборОперации = Настройки.Получить("ОтборОперации");
	Настройки.Удалить("ОтборОперации");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Тип", ОтборОперации, ВидСравненияКомпоновкиДанных.ВСписке,, ОтборОперации.Количество()<>0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаОтметкиЭлементов" Тогда
		
		ОтборОперации.Очистить();
		
		Если ВыбранноеЗначение <> Неопределено Тогда
			Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
				Если ЭлементСписка.Пометка Тогда
					ОтборОперации.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ОтборОперацииПриИзменении();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ОтборОтветственный,,, ЗначениеЗаполнено(ОтборОтветственный));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для каждого Элемент Из ОперацииЖурнала Цикл
		НайденныйЭлементВОтборе = ОтборОперации.НайтиПоЗначению(Элемент.Значение);
		Элемент.Пометка = (НайденныйЭлементВОтборе <> Неопределено);
	КонецЦикла;
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормаОтметкиЭлементов",
		Новый Структура("СписокЗначений", ОперацииЖурнала),
		ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацииОчистка(Элемент, СтандартнаяОбработка)
	
	ОтборОперации.Очистить();
	
	ОтборОперацииПриИзменении();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗаказ(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию"));
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ЗаказНаВнутреннееПотребление.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПередачу(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию"));
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ВнутреннееПотреблениеТоваров.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	
	ОткрытьФорму("Документ.ПеремещениеВЭксплуатации.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписание(Команда)
	
	ОткрытьФорму("Документ.СписаниеИзЭксплуатации.ФормаОбъекта");
	
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Документы.ВнутреннееПотреблениеТоваров.УстановитьУсловноеОформлениеСписка(Список);
	
	ОбщегоНазначенияУТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацииПриИзменении()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Тип",
		ОтборОперации,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		ОтборОперации.Количество() > 0);
	
КонецПроцедуры

#КонецОбласти


