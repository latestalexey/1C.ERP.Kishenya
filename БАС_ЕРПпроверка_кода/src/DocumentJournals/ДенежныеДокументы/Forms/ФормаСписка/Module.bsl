
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыСписка());
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	

	ОбщегоНазначенияУТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");
	
	ВводНаОсновании.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	
	МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСписков

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		СоздатьДокумент(Истина, "ПоступлениеОтП");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьПоступлениеОтПодотчетника(Команда)
	СоздатьДокумент(Истина, "ПоступлениеОтФЛ");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыдачуПодотчетнику(Команда)
	СоздатьДокумент(Ложь, "ВыдачаФЛ");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратПоставщику(Команда)
	СоздатьДокумент(Ложь, "ВозвратП");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	СоздатьДокумент(Ложь, "Перемещение");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписание(Команда)
	СоздатьДокумент(Ложь, "Списание");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьДокумент(Поступление, ИмяХозОперации)
	
	СтрХозОпераций = Новый Структура;
	СтрХозОпераций.Вставить("ПоступлениеОтП",	ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика"));
	СтрХозОпераций.Вставить("ПоступлениеОтФЛ",	ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПодотчетника"));
	СтрХозОпераций.Вставить("ВыдачаФЛ",			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику"));
	СтрХозОпераций.Вставить("ВозвратП",			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
	СтрХозОпераций.Вставить("Перемещение",		ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов"));
	СтрХозОпераций.Вставить("Списание",			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов"));
	
	ДанныеЗаполнения = Новый Структура("ХозяйственнаяОперация", СтрХозОпераций[ИмяХозОперации]);
	ПарамОткрытия = Новый Структура("Основание", ДанныеЗаполнения);
	
	Если Поступление Тогда
		ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента",
			ПарамОткрытия,
			ЭтаФорма);
	Иначе
		ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаДокумента",
			ПарамОткрытия,
			ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

