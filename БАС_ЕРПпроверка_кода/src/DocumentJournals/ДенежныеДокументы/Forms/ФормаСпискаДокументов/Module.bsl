
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыСписка());
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	УстановитьОтбор(ЭтаФорма);
	

	ОбщегоНазначенияУТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");

	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборОрганизацияр = Настройки.Получить("ОтборОрганизацияр");
	ОтборПодразделение = Настройки.Получить("ОтборПодразделение");
	ОтборМОЛ = Настройки.Получить("ОтборМОЛ");
	
	УстановитьОтбор(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ВыбытиеДенежныхДокументов" Тогда
		Элементы.СписокРаспоряжений.Обновить();
	ИначеЕсли ИмяСобытия = "Запись_ПоступлениеДенежныхДокументов" Тогда
		Элементы.СписокРаспоряжений.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОтборМОЛПриИзменении(Элемент)
	УстановитьОтбор(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСписков

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		СоздатьДокумент(Истина, "ПоступлениеОтП");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРаспоряженийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРаспоряженийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.СписокРаспоряжений.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		Если Поле.Имя = "СписокРаспоряженийОрганизация" Тогда
			ПоказатьЗначение(Неопределено, ТекДанные.Организация);
			
		ИначеЕсли Поле.Имя = "СписокРаспоряженийПодразделение" Тогда
			ПоказатьЗначение(Неопределено, ТекДанные.Подразделение);
			
		ИначеЕсли Поле.Имя = "СписокРаспоряженийМОЛ" Тогда
			ПоказатьЗначение(Неопределено, ТекДанные.МОЛ);
			
		Иначе ПоказатьЗначение(Неопределено, ТекДанные.ДенежныйДокумент);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура СоздатьПоступлениеОтПоставщика(Команда)
	СоздатьДокумент(Истина, "ПоступлениеОтП");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеОтПодотчетника(Команда)
	СоздатьДокумент(Истина, "ПоступлениеОтФЛ");
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВыдачуПодтчетнику(Команда)
	СоздатьДокумент(Ложь, "ВыдачаФЛ", Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыдачуПодотчетнику(Команда)
	СоздатьДокумент(Ложь, "ВыдачаФЛ");
КонецПроцедуры

&НаКлиенте
Процедура ОформитьВозвратПоставщику(Команда)
	СоздатьДокумент(Ложь, "ВозвратП", Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратПоставщику(Команда)
	СоздатьДокумент(Ложь, "ВозвратП");
КонецПроцедуры

&НаКлиенте
Процедура ОформитьПеремещение(Команда)
	СоздатьДокумент(Ложь, "Перемещение", Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	СоздатьДокумент(Ложь, "Перемещение");
КонецПроцедуры

&НаКлиенте
Процедура ОформитьСписание(Команда)
	СоздатьДокумент(Ложь, "Списание", Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписание(Команда)
	СоздатьДокумент(Ложь, "Списание");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьДокумент(Поступление, ИмяХозОперации, ПоСписку = Ложь)
	
	СтрХозОпераций = Новый Структура;
	СтрХозОпераций.Вставить("ПоступлениеОтП",	ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика"));
	СтрХозОпераций.Вставить("ПоступлениеОтФЛ",	ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПодотчетника"));
	СтрХозОпераций.Вставить("ВыдачаФЛ",			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику"));
	СтрХозОпераций.Вставить("ВозвратП",			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
	СтрХозОпераций.Вставить("Перемещение",		ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов"));
	СтрХозОпераций.Вставить("Списание",			ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов"));
	
	Если Поступление И ПоСписку Тогда
		
		ДенежныеСредстваКлиент.СоздатьПоступлениеДенежныхДокументов(
			СтрХозОпераций[ИмяХозОперации],
			Элементы.СписокРаспоряжений);
		
		Возврат;
		
	ИначеЕсли ПоСписку Тогда // Выбытие
		
		ДенежныеСредстваКлиент.СоздатьВыбытиеДенежныхДокументов(
			СтрХозОпераций[ИмяХозОперации],
			Элементы.СписокРаспоряжений);
		
		Возврат;
		
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура("ХозяйственнаяОперация", СтрХозОпераций[ИмяХозОперации]);
	Если Не ОтборМОЛ.Пустая() Тогда
		ДанныеЗаполнения.Вставить("МОЛ", ОтборМОЛ);
		ДанныеЗаполнения.Вставить("МОЛОтправитель", ОтборМОЛ);
	КонецЕсли;
	Если Не ОтборОрганизация.Пустая() Тогда
		ДанныеЗаполнения.Вставить("Организация", ОтборОрганизация);
	КонецЕсли;
	Если Не ОтборПодразделение.Пустая() Тогда
		ДанныеЗаполнения.Вставить("Подразделение", ОтборПодразделение);
	КонецЕсли;
	
	ПарамОткрытия = Новый Структура("Основание", ДанныеЗаполнения);
	
	Если Поступление Тогда
		ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента",
			ПарамОткрытия,
			ЭтаФорма);
	Иначе
		ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаДокумента",
			ПарамОткрытия,
			ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтбор(Форма)
	
	Списки = Новый Массив;
	Списки.Добавить(Форма.Список);
	Списки.Добавить(Форма.СписокРаспоряжений);
	
	Отбор = Новый Структура;
	Отбор.Вставить("Организация", Форма.ОтборОрганизация);
	Отбор.Вставить("Подразделение", Форма.ОтборПодразделение);
	Отбор.Вставить("МОЛ", Форма.ОтборМОЛ);
	
	Для Каждого Список Из Списки Цикл
		Для Каждого ЭлементОтбора Из Отбор Цикл
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список,
				ЭлементОтбора.Ключ,
				ЭлементОтбора.Значение,
				ВидСравненияКомпоновкиДанных.Равно,
				,
				ЗначениеЗаполнено(ЭлементОтбора.Значение));
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

