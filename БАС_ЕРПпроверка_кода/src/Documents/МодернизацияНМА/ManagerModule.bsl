
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ИзменениеПараметровНМА.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.МодернизацияНМА) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.МодернизацияНМА.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.МодернизацияНМА);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	УчетОСВызовСервера.ПрочиеРасходы(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ПартииПрочихРасходов(ТекстыЗапроса, Регистры);
	
	ПервоначальныеСведенияНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияНМАНалоговыйУчет(ТекстыЗапроса, Регистры);
	ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Дата", ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("НематериальныйАктив", ДокументСсылка.НематериальныйАктив);
	Запрос.УстановитьПараметр("Организация", ДокументСсылка.Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.НематериальныйАктив,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ИЗ
	|	Документ.МодернизацияНМА КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				НематериальныйАктив = &НематериальныйАктив
	|					И Организация = &Организация) КАК МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|		ПО ДанныеДокумента.НематериальныйАктив = МестонахождениеНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Дата,
	|				НематериальныйАктив = &НематериальныйАктив
	|					И Организация = &Организация) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|		ПО ДанныеДокумента.НематериальныйАктив = СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	УчетОСВызовСервера.ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДополнительныеСвойства);
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Граница", Новый Граница(НачалоМесяца(Реквизиты.Период), ВидГраницы.Исключая));		
	Запрос.УстановитьПараметр("ГраницаКонецМесяца", Новый Граница(КонецМесяца(Реквизиты.Дата), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
	
КонецПроцедуры

Процедура ДанныеДокументаИУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втДанныеДокументаИУчета";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втДанныеДокументаИУчета
	|"+
	"ВЫБРАТЬ
	|	МодернизацияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	СУММА(ЕСТЬNULL(ДанныеУчета.СуммаОстатокДт, 0)) КАК СтоимостьИнвестицийБУ,
	|	СУММА(ЕСТЬNULL(СтоимостьНМА.СуммаОстатокДт, 0)) КАК СтоимостьБУ,
	|	СУММА(ЕСТЬNULL(СтоимостьНМА.СуммаНУОстатокДт, 0)) КАК СтоимостьНУ,
	|	СУММА(ЕСТЬNULL(АмортизацияНМА.СуммаОстатокКт, 0)) КАК АмортизацияБУ,
	|	СУММА(ЕСТЬNULL(АмортизацияНМА.СуммаНУОстатокКт, 0)) КАК АмортизацияНУ
	|	 
	|ПОМЕСТИТЬ втДанныеДокументаИУчета
	|ИЗ
	|	Документ.МодернизацияНМА КАК МодернизацияНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ГраницаКонецМесяца,
	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеИзготовлениеНематериальныхАктивов)),
	|				,
	|				Организация = &Организация
	|					И  Подразделение = &Подразделение
	|						И Субконто1 = &НематериальныйАктив) КАК ДанныеУчета
	|		ПО МодернизацияНМА.НематериальныйАктив = ДанныеУчета.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Граница,
	|				Счет  = &СчетУчета,
	|				,
	|				Организация = &Организация
	|					И  Подразделение = &Подразделение
	|						И Субконто1 = &НематериальныйАктив) КАК СтоимостьНМА
	|		ПО МодернизацияНМА.НематериальныйАктив = СтоимостьНМА.Субконто1
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Граница,
	|				Счет  = &СчетНачисленияАмортизации,
	|				,
	|				Организация = &Организация
	|					И  Подразделение = &Подразделение
	|						И Субконто1 = &НематериальныйАктив) КАК АмортизацияНМА
	|		ПО МодернизацияНМА.НематериальныйАктив = АмортизацияНМА.Субконто1
	|
	|ГДЕ
	|	МодернизацияНМА.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	МодернизацияНМА.НематериальныйАктив
	|"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияПоДокументу(ТекстыЗапроса)
	
	ИмяТаблицы = "втАмортизацияПоДокументу";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	УчетОСВызовСервера.ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияПоДокументу
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втАмортизацияПоДокументу
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.ОбъектУчета"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры
 





Процедура ПервоначальныеСведенияНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокументаИУчета(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияПоДокументу(ТекстыЗапроса);		
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Дата КАК Период,
	|	&Организация КАК Организация,
	|	втДанныеДокументаИУчета.НематериальныйАктив КАК НематериальныйАктив,
	|
	| втДанныеДокументаИУчета.СтоимостьБУ	
	| - втДанныеДокументаИУчета.АмортизацияБУ 
	| - втАмортизацияПоДокументу.СуммаБУ		
	| + втДанныеДокументаИУчета.СтоимостьИнвестицийБУ КАК ПервоначальнаяСтоимость,
	|	
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|
	| ПервоначальныеСведенияНМАБухгалтерскийУчет.СрокПолезногоИспользования
	|	- РАЗНОСТЬДАТ(ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.Период, &Период), &Период, МЕСЯЦ) КАК СрокПолезногоИспользования,
	|
	| ПервоначальныеСведенияНМАБухгалтерскийУчет.ОбъемПродукцииРаботДляВычисленияАмортизации 
	|  КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	втДанныеДокументаИУчета КАК втДанныеДокументаИУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ  втАмортизацияПоДокументу КАК втАмортизацияПоДокументу
	|		ПО втДанныеДокументаИУчета.НематериальныйАктив = втАмортизацияПоДокументу.ОбъектУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив
	|					И Регистратор <> &Ссылка ) КАК ПервоначальныеСведенияНМАБухгалтерскийУчет
	|		ПО втДанныеДокументаИУчета.НематериальныйАктив = ПервоначальныеСведенияНМАБухгалтерскийУчет.НематериальныйАктив
	|ГДЕ
	|	втДанныеДокументаИУчета.СтоимостьИнвестицийБУ > 0"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияНМАНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМАНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокументаИУчета(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияПоДокументу(ТекстыЗапроса);		
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Дата КАК Период,
	|	&Организация КАК Организация,
	|	втДанныеДокументаИУчета.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияНМАНалоговыйУчет.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияНМАНалоговыйУчет.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|			ТОГДА 
	| 				0	
	|		ИНАЧЕ 
	| 				втДанныеДокументаИУчета.СтоимостьНУ	
	| 				- втДанныеДокументаИУчета.АмортизацияНУ	 
	| 				- втАмортизацияПоДокументу.СуммаНУ		
	| 				+ втДанныеДокументаИУчета.СтоимостьИнвестицийБУ 
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ,
	|	
	|	ПервоначальныеСведенияНМАНалоговыйУчет.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|
	| ПервоначальныеСведенияНМАНалоговыйУчет.СрокПолезногоИспользования
	|	- РАЗНОСТЬДАТ(ЕСТЬNULL(ПервоначальныеСведенияНМАНалоговыйУчет.Период, &Период), &Период, МЕСЯЦ) КАК СрокПолезногоИспользования,
	|
	|	ПервоначальныеСведенияНМАНалоговыйУчет.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияНМАНалоговыйУчет.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	втДанныеДокументаИУчета КАК втДанныеДокументаИУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ  втАмортизацияПоДокументу КАК втАмортизацияПоДокументу
	|		ПО втДанныеДокументаИУчета.НематериальныйАктив = втАмортизацияПоДокументу.ОбъектУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И НематериальныйАктив = &НематериальныйАктив
	|					И Регистратор <> &Ссылка) КАК ПервоначальныеСведенияНМАНалоговыйУчет
	|		ПО втДанныеДокументаИУчета.НематериальныйАктив = ПервоначальныеСведенияНМАНалоговыйУчет.НематериальныйАктив
	|ГДЕ
	|	втДанныеДокументаИУчета.СтоимостьИнвестицийБУ > 0"+";";

	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры




Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВРеглУчете
	|" +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	
	|	&Организация КАК Организация,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	 Разделитель = Символы.ПС + ";" + Символы.ПС;
	
	Возврат ВременнаяТаблицаДанныеДокументаУКР() + Разделитель
		+ ВременнаяТаблицаОстаткиСчетаКапитализацииУКР() + Разделитель 
		+УчетНМА.ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР("МодернизацияНМА")
		+ УчетНМА.ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетамУКР()
		;
	
КонецФункции

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
			
	Разделитель = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	
	Возврат 
			УчетНМА.ТекстОтраженияВРеглУчетеНачисленнойАмортизацииУКР()
	        + Разделитель 
			+
			УвеличениеСтоимостиНМА()
			;
	
КонецФункции

Функция УвеличениеСтоимостиНМА()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Принятие к учету  (Дт СчетУчета:: Кт СчетаКапитальныхЗатрат)
	|
	|ВЫБРАТЬ
	|	
	|	втДанныеДокумента.Ссылка КАК Ссылка,
	|	втДанныеДокумента.Дата КАК Период,
	|	втДанныеДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	втДанныеСчетаКапитализации.СуммаБУ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	втДанныеДокумента.Подразделение КАК ПодразделениеДт,
	|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|втДанныеДокумента.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	
	|	втДанныеДокумента.СчетУчета КАК СчетДт,
	|	
	|	втДанныеДокумента.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА втДанныеДокумента.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|			ТОГДА 0
	|		ИНАЧЕ втДанныеСчетаКапитализации.СуммаБУ
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	втДанныеДокумента.Подразделение КАК ПодразделениеКт,
	|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	втДанныеСчетаКапитализации.Счет КАК СчетКт,
	|	
	|	втДанныеДокумента.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	втДанныеСчетаКапитализации.СуммаНУ КАК СуммаНУКт,
	|	втДанныеСчетаКапитализации.СуммаПР КАК СуммаПРКт,
	|	втДанныеСчетаКапитализации.СуммаВР КАК СуммаВРКт,
	|	""Принятие к учету НМА"" КАК Содержание
	|ИЗ
	|	втДанныеДокумента КАК втДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеСчетаКапитализации
	|	ПО втДанныеДокумента.НематериальныйАктив = втДанныеСчетаКапитализации.НематериальныйАктив
	|ГДЕ
	|	втДанныеДокумента.ВариантПримененияЦелевогоФинансирования В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.ПустаяСсылка)
	|	)
	|";
	
КонецФункции

Функция ВременнаяТаблицаДанныеДокументаУКР()
	
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ТаблицаДокумента.НематериальныйАктив КАК НематериальныйАктив,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.НеИспользуется) КАК ВариантПримененияЦелевогоФинансирования
	|ПОМЕСТИТЬ втДанныеМодернизации
	|ИЗ
	|	Документ.МодернизацияНМА КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеМодернизации.Ссылка,
	|	втДанныеМодернизации.Дата,
	|	втДанныеМодернизации.Организация,
	|	втДанныеМодернизации.Подразделение,
	|	втДанныеМодернизации.НаправлениеДеятельности,
	|	втДанныеМодернизации.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета,
	|	втДанныеМодернизации.ВариантПримененияЦелевогоФинансирования,
	|	ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НалоговоеНазначение
	|ПОМЕСТИТЬ втДанныеДокумента
	|ИЗ
	|	втДанныеМодернизации КАК втДанныеМодернизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Дата,
	|				(НематериальныйАктив, Организация) В
	|					(ВЫБРАТЬ
	|						Т.НематериальныйАктив,
	|						Т.Организация
	|					ИЗ
	|						втДанныеМодернизации КАК Т)) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|		ПО втДанныеМодернизации.НематериальныйАктив = СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(
	|				&Дата,
	|				(НематериальныйАктив, Организация) В
	|					(ВЫБРАТЬ
	|						Т.НематериальныйАктив,
	|						Т.Организация
	|					ИЗ
	|						втДанныеМодернизации КАК Т)) КАК ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних
	|		ПО втДанныеМодернизации.НематериальныйАктив = ПервоначальныеСведенияНМАНалоговыйУчетСрезПоследних.НематериальныйАктив";

	
КонецФункции

Функция ВременнаяТаблицаОстаткиСчетаКапитализацииУКР()
	Возврат
	"ВЫБРАТЬ
	|	ДанныеУчета.Счет КАК Счет,
	|	ДанныеУчета.Субконто1 КАК НематериальныйАктив,
	|	СУММА(ДанныеУчета.СуммаОборот) КАК СуммаБУ,
	|	СУММА(ДанныеУчета.СуммаНУОборот) КАК СуммаНУ,
	|	СУММА(ДанныеУчета.СуммаПРОборот) КАК СуммаПР,
	|	СУММА(ДанныеУчета.СуммаВРОборот) КАК СуммаВР
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ГраницаМесяцОкончание,
	|			Регистратор,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеИзготовлениеНематериальныхАктивов)),
	|			,
	|			(Организация, Подразделение,  Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НематериальныйАктив
	|				ИЗ
	|					втДанныеДокумента КАК Т),
	|			,
	|			) КАК ДанныеУчета
	|ГДЕ
	|	ДанныеУчета.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеУчета.Субконто1,
	|	ДанныеУчета.Счет
	|;
	|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.Счет КАК Счет,
	|	втОстатки.НематериальныйАктив,
	|	втОстатки.СуммаБУ  КАК СуммаБУ,
	|	втОстатки.СуммаНУ  КАК СуммаНУ,
	|	0  КАК СуммаПР,
	|	0  КАК СуммаВР

	|ПОМЕСТИТЬ втДанныеСчетаКапитализации
	|ИЗ
	|	втОстатки КАК втОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеСчетаКапитализации.НематериальныйАктив,
	|	СУММА(втДанныеСчетаКапитализации.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втДанныеСчетаКапитализации.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втДанныеСчетаКапитализации.СуммаПР) КАК СуммаПР,
	|	СУММА(втДанныеСчетаКапитализации.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСчетаКапитализацииСгруппированные
	|ИЗ
	|	втДанныеСчетаКапитализации КАК втДанныеСчетаКапитализации
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанныеСчетаКапитализации.НематериальныйАктив
	|";
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	
КонецПроцедуры


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли