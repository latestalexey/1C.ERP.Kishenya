#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "НачисленияУдержанияВзносы.ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ВсегоВыплачено = НачисленияУдержанияВзносы.Итог("КВыплате");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеДляБухучета = Документы.ВыплатаБывшимСотрудникам.ДанныеДляБухучетаЗарплатыПервичныхДокументов(ЭтотОбъект);
	ОтражениеЗарплатыВБухучетеРасширенный.ЗарегистрироватьБухучетЗарплатыПервичныхДокументов(ДанныеДляБухучета);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	МесяцНачисления = НачалоМесяца(ПериодРегистрации);
	
	// НДФЛ
	УчетНДФЛ.СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, Организация, ПланируемаяДатаВыплаты, ДанныеДляПроведения.ДанныеДляНДФЛДоходы, Ложь, Ложь);
	УчетНДФЛ.СформироватьНалогиВычеты(ЭтотОбъект.Движения, Отказ, Организация, ПланируемаяДатаВыплаты, ДанныеДляПроведения.НДФЛ, Ложь, Ложь);
	УчетНДФЛРасширенный.СформироватьПеречислениеНДФЛПоТаблицеЗначений(Движения, Отказ, Организация, Дата, ДанныеДляПроведения.НДФЛ, Истина, Истина);

	УчетНачисленнойЗарплатыРасширенный.ЗарегистрироватьНачисленияУдержанияПоКонтрагентамАкционерам(Движения, Отказ, Организация, МесяцНачисления, ДанныеДляПроведения.Начисления, , ДанныеДляПроведения.НДФЛНачисления);
	
	// - Регистрация начислений и удержаний.
	ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоКонтрагентамАкционерам(Движения, Отказ, Организация, МесяцНачисления, ДанныеДляПроведения.Начисления, Неопределено, ДанныеДляПроведения.НДФЛ, Истина);
	
	// Страховые взносы
	УчетСтраховыхВзносов.СформироватьДоходыСтраховыеВзносы(Движения, Отказ, Организация, МесяцНачисления, ДанныеДляПроведения.ДанныеДляВзносов, Истина);
	УчетСтраховыхВзносов.СформироватьИсчисленныеВзносы(ЭтотОбъект.Движения, Отказ, Организация, МесяцНачисления, ДанныеДляПроведения.СтраховыеВзносы,,,,, Истина);	
	УчетСтраховыхВзносов.СформироватьСтраховыеВзносыПоФизическимЛицам(Движения, Отказ, Организация, МесяцНачисления, Ссылка, ДанныеДляПроведения.СтраховыеВзносы);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Увольнение") Тогда
			
		Организация = ДанныеЗаполнения.Организация;
		ВидВыплаты = Справочники.ВидыВыплатБывшимСотрудникам.ВыплатыЗаОтработанноеВремя;                                                 
			
		Выплата = НачисленияУдержанияВзносы.Добавить();                    
		Выплата.ФизическоеЛицо = ДанныеЗаполнения.ФизическоеЛицо;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УвольнениеСписком") Тогда
			
		Организация = ДанныеЗаполнения.Организация;
		ВидВыплаты = Справочники.ВидыВыплатБывшимСотрудникам.ВыплатыЗаОтработанноеВремя;                                                 
		
		Для Каждого Сотрудник Из ДанныеЗаполнения.Сотрудники Цикл
			
			Выплата = НачисленияУдержанияВзносы.Добавить();                    
			Выплата.ФизическоеЛицо = Сотрудник.ФизическоеЛицо;	
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Документы.ВыплатаБывшимСотрудникам.СоздатьВТДанныеДокумента(Запрос.МенеджерВременныхТаблиц, Ссылка);
	Документы.ВыплатаБывшимСотрудникам.СоздатьВТНачисленияДокумента(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, Организация, ПериодРегистрации);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокумента.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	ВТДанныеДокумента КАК ДанныеДокумента";
		
	Запрос.Выполнить();
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияДокумента.ФизическоеЛицо,
		|	НачисленияДокумента.СтатьяФинансирования,
		|	НачисленияДокумента.СтатьяРасходов
		|ПОМЕСТИТЬ ВТБухучетФизическихЛиц
		|ИЗ
		|	ВТНачисленияДокумента КАК НачисленияДокумента";
		
	Запрос.Выполнить();
	
	ДанныеДляПроведения.Вставить("ДанныеДляНДФЛДоходы", Документы.ВыплатаБывшимСотрудникам.ДанныеДляПроведениеНДФЛ(Запрос.МенеджерВременныхТаблиц));
	
	ДанныеДляПроведения.Вставить("НДФЛ");
	ДанныеДляПроведения.Вставить("НДФЛПоСотрудникам");
	РасчетЗарплаты.ЗаполнитьДанныеНДФЛ(ДанныеДляПроведения, Ссылка);
	
	ДанныеДляПроведения.Вставить("ДанныеДляВзносов", Документы.ВыплатаБывшимСотрудникам.ДанныеДляПроведенияВзносы(Запрос.МенеджерВременныхТаблиц));
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.Сумма,
		|	ДанныеДокумента.Начисление КАК Начисление,
		|	ДанныеДокумента.ДокументОснование,
		|	ДанныеДокумента.СтатьяФинансирования,
		|	ДанныеДокумента.СтатьяРасходов,
		|	ДанныеДокумента.СпособОтраженияЗарплатыВБухучете
		|ИЗ
		|	ВТНачисленияДокумента КАК ДанныеДокумента";
	
	ДанныеДляПроведения.Вставить("Начисления", Запрос.Выполнить().Выгрузить());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.НДФЛ КАК Сумма,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.НДФЛРасчетыСБывшимиСотрудниками) КАК НачислениеУдержание,
		|	ДанныеДокумента.Ссылка КАК ДокументОснование,
		|	БухучетФизическихЛиц.СтатьяФинансирования,
		|	БухучетФизическихЛиц.СтатьяРасходов
		|ИЗ
		|	ВТДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетФизическихЛиц КАК БухучетФизическихЛиц
		|		ПО ДанныеДокумента.ФизическоеЛицо = БухучетФизическихЛиц.ФизическоеЛицо";
	
	ДанныеДляПроведения.Вставить("НДФЛНачисления", Запрос.Выполнить().Выгрузить());
	
	ДанныеДляПроведения.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	
	ИсчисленныеВзносы = УчетСтраховыхВзносов.ДанныеОВзносахИзДокумента(
		Ссылка,
		, 
		Ложь, , ,
		"Ссылка.ПланируемаяДатаВыплаты");
	
	ДанныеДляПроведения.Вставить("СтраховыеВзносы", ИсчисленныеВзносы);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура РассчитатьНДФЛИВзносыДокумента(СписокФизическихЛиц = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	Записать(РежимЗаписиДокумента.Запись);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Документы.ВыплатаБывшимСотрудникам.СоздатьВТДанныеДокумента(Запрос.МенеджерВременныхТаблиц, Ссылка, СписокФизическихЛиц);
	Документы.ВыплатаБывшимСотрудникам.СоздатьВТНачисленияДокумента(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, Организация, ПериодРегистрации);
	
	// НДФЛ
	ДанныеДляНДФЛ = Документы.ВыплатаБывшимСотрудникам.ДанныеДляПроведениеНДФЛ(Запрос.МенеджерВременныхТаблиц);
	
	// Регистрация доходов для НДФЛ в привилегированном режиме
	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	УчетНДФЛ.СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(
		Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляНДФЛ, Истина, Ложь);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеДокумента.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТФизическиеЛица
		|ИЗ
		|	ВТДанныеДокумента КАК ДанныеДокумента";
	
	Запрос.Выполнить();
	
	РезультатРасчетаНДФЛ = УчетНДФЛ.РезультатРасчетаНДФЛ(Запрос.МенеджерВременныхТаблиц, Неопределено,
		Организация, ПериодРегистрации, Ложь);
	
	// Взносы
	ДанныеДляВзносов = Документы.ВыплатаБывшимСотрудникам.ДанныеДляПроведенияВзносы(Запрос.МенеджерВременныхТаблиц);
	
	// Регистрация доходов для страховых взносов в привилегированном режиме
	УстановитьПривилегированныйРежим(Истина);
	
	УчетСтраховыхВзносов.СформироватьДоходыСтраховыеВзносы(
		Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляВзносов, Истина);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	РезультатРасчетаСтраховыхВзносов = УчетСтраховыхВзносов.РассчитатьВзносы(
		Ссылка, Организация, ПериодРегистрации, Запрос.МенеджерВременныхТаблиц, Ложь);
	
	ОтменитьТранзакцию();
	
	// Перенос в документ результатов расчета НДФЛ
	ФизическиеЛицаПоКоторымОчищалисьДанные = Новый Соответствие;
	МаксимальныйИдентификатор = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(НДФЛ);
	Для каждого СтрокаРезультатаРасчетаНДФЛ Из РезультатРасчетаНДФЛ Цикл
		
		Если ФизическиеЛицаПоКоторымОчищалисьДанные.Получить(СтрокаРезультатаРасчетаНДФЛ.ФизическоеЛицо) = Неопределено Тогда
			УчетНДФЛКлиентСерверРасширенный.УдалитьДанныеНДФЛФизическогоЛица(ЭтотОбъект, СтрокаРезультатаРасчетаНДФЛ.ФизическоеЛицо);
			ФизическиеЛицаПоКоторымОчищалисьДанные.Вставить(СтрокаРезультатаРасчетаНДФЛ.ФизическоеЛицо, Истина);
		КонецЕсли; 
		
		МаксимальныйИдентификатор = МаксимальныйИдентификатор + 1;
		
		Если СтрокаРезультатаРасчетаНДФЛ.Доход = 0 И СтрокаРезультатаРасчетаНДФЛ.Налог = 0 Тогда
			Продолжить;
		КонецЕсли;	
			
		НоваяСтрокаНДФЛ = НДФЛ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНДФЛ, СтрокаРезультатаРасчетаНДФЛ);
		НоваяСтрокаНДФЛ.ИдентификаторСтрокиНДФЛ = МаксимальныйИдентификатор;
		
		
	КонецЦикла;
	
	// Перенос в документ результатов расчета взносов
	ФизическиеЛицаПоКоторымОчищалисьДанные = Новый Соответствие;
	Для каждого СтрокаРезультатаРасчета Из РезультатРасчетаСтраховыхВзносов.ВзносыФОТ Цикл
		
		Если ФизическиеЛицаПоКоторымОчищалисьДанные.Получить(СтрокаРезультатаРасчета.ФизическоеЛицо) = Неопределено Тогда
			СтрокиВзносов = ВзносыФОТ.НайтиСтроки(Новый Структура("ФизическоеЛицо", СтрокаРезультатаРасчета.ФизическоеЛицо));
			Для каждого СтрокаВзносов Из СтрокиВзносов Цикл
				ВзносыФОТ.Удалить(СтрокаВзносов);
			КонецЦикла;
			ФизическиеЛицаПоКоторымОчищалисьДанные.Вставить(СтрокаРезультатаРасчета.ФизическоеЛицо, Истина);
		КонецЕсли; 
		
		Если СтрокаРезультатаРасчета.Результат = 0 И СтрокаРезультатаРасчета.База = 0 И СтрокаРезультатаРасчета.БазаВзноса = 0 Тогда
			Продолжить;
		КонецЕсли;	
			
		НоваяСтрокаВзносов = ВзносыФОТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаВзносов, СтрокаРезультатаРасчета);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
