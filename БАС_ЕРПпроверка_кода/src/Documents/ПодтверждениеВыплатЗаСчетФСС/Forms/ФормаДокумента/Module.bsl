
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		// Заполнение нового документа.
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный,",
		"Объект.Организация",
		"Объект.Ответственный");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Объект.ПериодС = НачалоМесяца(Объект.Дата);
		Объект.ПериодПо = КонецМесяца(Объект.Дата);
		
		ОбновитьДанныеСтрахователя();
		УстановитьПредставлениеАдресов();
		
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.РасчетыСФондами.Очистить();
	КонецЕсли;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать

	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьДанныеСтрахователя();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("АдресОрганизацииЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"), Объект.АдресОрганизации);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура АдресОрганизацииЗавершениеВыбора(СтруктураАдреса, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(СтруктураАдреса) = Тип("Структура")Тогда
		Объект.АдресОрганизации = СтруктураАдреса.КонтактнаяИнформация;
		АдресОрганизации = СтруктураАдреса.Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТелефонОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("ТелефонОрганизацииЗавершениеВыбора", ЭтотОбъект);
	ПараметрыОткрытия = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"), Объект.ТелефонОрганизации);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, ЭтотОбъект, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ТелефонОрганизацииЗавершениеВыбора(СтруктураТелефона, ПараметрыОповещения) Экспорт 
	
	Если ТипЗнч(СтруктураТелефона) = Тип("Структура") Тогда
		Объект.ТелефонОрганизации = СтруктураТелефона.КонтактнаяИнформация;
		ТелефонОрганизации = СтруктураТелефона.Представление;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВыплатамНаСервере()
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ЗаполнитьПоВыплатам();
	ЗначениеВРеквизитФормы(Документ, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоВыплатам(Команда)
	ЗаполнитьПоВыплатамНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыплатыДокументОснованиеПриИзменении(Элемент)
	
	ЗаполнитьСуммуПоДокументу(Элементы.Выплаты.ТекущаяСтрока, "Выплаты");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСуммуПоДокументу(Идентификатор, ТабличнаяЧасть)
	
	ТекущаяСтрока = Объект[ТабличнаяЧасть].НайтиПоИдентификатору(Идентификатор);
	
	Если ТипЗнч(ТекущаяСтрока.ДокументОснование) = Тип("ДокументСсылка.БольничныйЛист") Тогда
		ТекущаяСтрока.Сумма = ТекущаяСтрока.ДокументОснование.НачисленоФСС;
	ИначеЕсли ТипЗнч(ТекущаяСтрока.ДокументОснование) = Тип("ДокументСсылка.ЕдиновременноеПособиеЗаСчетФСС") Тогда
		ТекущаяСтрока.Сумма = ТекущаяСтрока.ДокументОснование.Начислено;
	Иначе
		ТекущаяСтрока.Сумма = 0;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеСтрахователя()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КодПоЕДРПОУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "КодПоЕДРПОУ");
	Объект.НомерФССУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "НомерФССУ");
	
	ЗаполняемыеЗначения = Новый Структура("Организация,Руководитель,ГлавныйБухгалтер", Объект.Организация);
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения);
	Объект.Руководитель = ЗаполняемыеЗначения.Руководитель;
	Объект.ГлавныйБухгалтер = ЗаполняемыеЗначения.ГлавныйБухгалтер;
	
	АдресаОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Организация),	
																					Перечисления.ТипыКонтактнойИнформации.Адрес, 
																					Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Если АдресаОрганизации.Количество() > 0 Тогда
		Объект.АдресОрганизации = АдресаОрганизации[0].ЗначенияПолей;	
	Иначе
		Объект.АдресОрганизации = "";	
	КонецЕсли;
	
	ТелефоныОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Организация),	
																					Перечисления.ТипыКонтактнойИнформации.Телефон, 
																					Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Если ТелефоныОрганизации.Количество() > 0 Тогда
		Объект.ТелефонОрганизации = ТелефоныОрганизации[0].ЗначенияПолей;	
	Иначе
		Объект.ТелефонОрганизации = "";	
	КонецЕсли;
	
	УстановитьПредставлениеАдресов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеАдресов()
	Если Не ПустаяСтрока(Объект.АдресОрганизации) Тогда
		СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		Объект.АдресОрганизации,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
		УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, Этаформа.АдресОрганизации);
	Иначе
		ЭтаФорма.АдресОрганизации = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Объект.ТелефонОрганизации) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		Объект.ТелефонОрганизации,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
		ЭтаФорма.ТелефонОрганизации = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																					  СтруктураТелефона.КодГорода, 
																					  СтруктураТелефона.НомерТелефона, 
																					  СтруктураТелефона.Добавочный, 
																					  СтруктураТелефона.Комментарий);
	Иначе
		ЭтаФорма.ТелефонОрганизации = НСтр("ru='<Не заполнен>';uk='<Не заповнений>'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьПредставлениеАдресов();
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать	

#Область Выгрузка

&НаКлиенте
Процедура ВыгрузкаВFredo(Команда)
	
	Если Не РегламентированнаяОтчетностьКлиент.ПодключитьМенеджерЗвит1С(Истина) Тогда
		Возврат;
	КонецЕсли;

	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		Если Объект.Ссылка.Пустая() Тогда
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Данные еще не записаны."
					 "Выполнение действия ""%1"" возможно только после записи данных."
					 "Данные будут записаны.';uk='Дані ще не записані."
				 	 "Виконання дії ""%1"" можливо тільки після запису даних."
					 "Дані будуть записані.'"),
					 НСтр("ru='выгрузки';uk= 'вивантаження'"));
				
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьВыгрузку", ЭтаФорма);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
			
		КонецЕсли;
	Иначе
		ВыполнитьВыгрузку(КодВозвратаДиалога.ОК, Неопределено);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыгрузку(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Записать();
		Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
			Возврат; // запись не удалась, сообщения о причинах выводит платформа
		КонецЕсли;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьПодключениеКЗвит1С = глМенеджерЗвит1С.ЗапуститьЗвит1С(Ложь, Объект.Организация);
	Если Не ЕстьПодключениеКЗвит1С Тогда
		ОписаниеОшибки = НСтр("ru='<Ошибка взаимодействия с ""FREDO Звіт"">';uk='<Помилка взаємодії з ""FREDO Звіт"">'");
		ВызватьИсключение ОписаниеОшибки;
		Возврат;
	КонецЕсли;
	
	ВыборкаШапка = ПолучитьВыборкуШапка();
	ВыборкаТЧ = ПолучитьВыборкуТЧ();
	
	глКомпонентаЗвит1С.Bring1CToFront();
	
	ВерсияОтчета = "01";
	
	// Создаем основной документ C11002..
	ТипПериода	   = 0; 
	НомерВПериоде  = Месяц(Объект.Дата);
	Год			   = Год(Объект.Дата);
	ИмяСхемыЗвит1С = "C11002"+ВерсияОтчета;
	
	ИдГоловнойОтчет = СтрЗаменить("" + Объект.Ссылка.УникальныйИдентификатор(), "-", "");
	Попытка
		ГоловнойОтчет = глКомпонентаЗвит1С.OpenCreateReport(ВыборкаШапка.КодПоЕДРПОУ, ИмяСхемыЗвит1С, ТипПериода, НомерВПериоде, Год, ИдГоловнойОтчет);
	Исключение
	    Сообщить("Ошибка создания отчета " + ИмяСхемыЗвит1С + ": " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Сообщить("Формирование отчета прервано!", СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;

	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_NAME",    ВыборкаШапка.НаименованиеПолное);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_EDRPOU",  ВыборкаШапка.КодПоЕДРПОУ);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "CODE_FSSU",    ВыборкаШапка.НомерФССУ);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_ADR", 	ВыборкаШапка.АдресОрганизации);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_TELORG", 	ВыборкаШапка.ТелефонОрганизации);

	НомерСтроки = 1;
	Для каждого Выборка ИЗ ВыборкаТЧ Цикл
		ДобавитьСтрокуВОтчетЗвит1С(ГоловнойОтчет, "TAB1");
		
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A1", НомерСтроки);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A2", Выборка.Фамилия);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A3", Выборка.Имя);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A4", Выборка.Отчество);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A5", Выборка.КодПоДРФО);
		
		СерияНомер = ПолучитьСериюНомер(Выборка);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A6", СерияНомер.Серия);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A7", СерияНомер.Номер);
		
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A8", Выборка.ДатаВыплаты);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A9", Выборка.Сумма);
		
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;	 

	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "REP_DATE", Объект.Дата);	
    ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_RUK", ВыборкаШапка.Руководитель);	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_BUH", ВыборкаШапка.Бухгалтер);	
	
	глКомпонентаЗвит1С.SaveReportEx(ГоловнойОтчет, 1);
	
	ПоказатьПредупреждение(,НСтр("ru='Уведомление успешно выгружено во FREDO!';uk='Повідомлення успішно вивантажено у FREDO!'"));
	
	глКомпонентаЗвит1С.BringZvitToFront();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоказательВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С = "", ИмяЗвит1С, Значение, ЗаписыватьПустое = Ложь)
	
	Если НЕ ЗаписыватьПустое И НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат;	
	КонецЕсли;
	
	Попытка
		Отчет.SetValue(ИмяТаблицыЗвит1С, ИмяЗвит1С, Значение); 
	Исключение
		Если глМенеджерЗвит1С.ФлагОтладки Тогда
			Сообщить("FREDO. Ошибка установки показателя (схема """+Отчет.CharCode+?(ПустаяСтрока(ИмяТаблицыЗвит1С),"",""", имя таблицы """+ИмяТаблицыЗвит1С)+""", поле """+ИмяЗвит1С+""", тип значения """+ТипЗнч(Значение)+""", значение """+ Значение+""")", СтатусСообщения.Внимание);
		КонецЕсли;
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С)

	Отчет.NewRow(ИмяТаблицыЗвит1С);

КонецПроцедуры

&НаСервере
Функция ПолучитьВыборкуШапка()
	
	Шапка = Новый Структура;
	Шапка.Вставить("Организация", Объект.Организация);
	Шапка.Вставить("НаименованиеПолное", Объект.Организация.НаименованиеПолное);
	Шапка.Вставить("КодПоЕДРПОУ", Объект.КодПоЕДРПОУ);
	Шапка.Вставить("НомерФССУ", Объект.НомерФССУ);
	
	Если Не ПустаяСтрока(Объект.АдресОрганизации) Тогда
		 СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(
		 Объект.АдресОрганизации,
		 ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
		 Адрес = "";
		 УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеАдреса(СтруктураАдреса, Адрес);
		 Шапка.Вставить("АдресОрганизации", Адрес);
	 Иначе
		 Шапка.Вставить("АдресОрганизации", НСтр("ru='<Не заполнен>';uk='<Не заповнений>'"));
	 КонецЕсли;
	 
	 Если Не ПустаяСтрока(Объект.ТелефонОрганизации) Тогда
		СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(
		Объект.ТелефонОрганизации,
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации"));
		Телефон = УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона(СтруктураТелефона.КодСтраны, 
																					  СтруктураТелефона.КодГорода, 
																					  СтруктураТелефона.НомерТелефона, 
																					  СтруктураТелефона.Добавочный, 
																					  СтруктураТелефона.Комментарий);
		Шапка.Вставить("ТелефонОрганизации", ФормированиеПечатныхФорм.ПолучитьТелефонДляНалоговойНакладной(Телефон));																			  
	Иначе
		Шапка.Вставить("ТелефонОрганизации", НСтр("ru='<Не заполнен>';uk='<Не заповнений>'"));
	КонецЕсли;	
	
	СписокФизическихЛиц = Новый СписокЗначений;
	СписокФизическихЛиц.Добавить(Объект.Руководитель);
	СписокФизическихЛиц.Добавить(Объект.ГлавныйБухгалтер);
	ТаблицаКадровыеДанныеФизическихЛиц = КадровыйУчет.КадровыеДанныеФизическихЛиц(
		Истина, 
		СписокФизическихЛиц, 
		"Фамилия, Имя, Отчество,", 
		Объект.Дата);
	Руководитель = ТаблицаКадровыеДанныеФизическихЛиц.Найти(Объект.Руководитель,"ФизиЧескоеЛицо");
	Если Руководитель <> Неопределено Тогда
		Шапка.Вставить("Руководитель", Руководитель.Фамилия + " " + Руководитель.Имя + " " + Руководитель.Отчество);
	Иначе
		Шапка.Вставить("Руководитель",  "");	
	КонецЕсли;
	Бухгалтер = ТаблицаКадровыеДанныеФизическихЛиц.Найти(Объект.ГлавныйБухгалтер,"ФизиЧескоеЛицо");
	Если Бухгалтер <> Неопределено Тогда
		Шапка.Вставить("Бухгалтер",  Бухгалтер.Фамилия + " " + Бухгалтер.Имя + " " + Бухгалтер.Отчество);
	Иначе
		Шапка.Вставить("Бухгалтер",  "");
	КонецЕсли;

	
	Возврат Шапка;
	
КонецФункции	


&НаСервере
Функция ПолучитьВыборкуТЧ()
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Документы.ПодтверждениеВыплатЗаСчетФСС.ПолучитьЗапросДляПечатиВыплаты(Объект.Ссылка));
	
КонецФункции	

&НаСервере
Функция ПолучитьСериюНомер(Выборка)
	
	Если Выборка.СвидетельствоСерия <> "" ИЛИ Выборка.СвидетельствоНомер <> "" Тогда
		СерияНомер = Новый Структура;
		СерияНомер.Вставить("Серия", Выборка.СвидетельствоСерия);
		СерияНомер.Вставить("Номер", Выборка.СвидетельствоНомер);
		Возврат СерияНомер;
	Иначе	
		Возврат УчетПособийСоциальногоСтрахования.РазложитьНомерБольничного(Выборка.НомерБольничного);
	КонецЕсли;
	
КонецФункции	


#КонецОбласти


