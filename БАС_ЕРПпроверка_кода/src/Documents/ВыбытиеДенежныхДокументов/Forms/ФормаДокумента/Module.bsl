&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
		Если Объект.СтатьяРасходов = Неопределено Тогда
			Объект.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2 Тогда
		Элементы.ГруппаПоДокументу.ЦветФона = Новый Цвет();
	КонецЕсли;
	
	УстановитьЗаголовокСтатьяДоходовРасходов();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	ОбновитьКонтрольЗаполненияАналитикиРасходов(ЭтаФорма, Неопределено);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ПериодАвансовогоОтчета = "Через неделю" Тогда
			Объект.ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()) + 7 * 24 * 3600;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьОбщихКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ВыбытиеДенежныхДокументов.Форма.ФормаПодбораДенежныхДокументов" Тогда
		ОбработкаПодбораОстатковДД(РезультатВыбора.АдресДДВХранилище);
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриЧтенииСозданииНаСервере();
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	ЗаполнитьПризнакАналитикаДоходовОбязательна();
	ЗаполнитьПризнакАналитикаРасходовОбязательна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВыбытиеДенежныхДокументов", ПараметрыЗаписи, Объект.Ссылка);
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
	НастроитьОтображениеЭлементовПоИтогамРасхождений(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьПризнакАналитикаДоходовОбязательна();
	ЗаполнитьПризнакАналитикаРасходовОбязательна();
	УстановитьВидимость();
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(
		ЭтаФорма,
		ТекущийОбъект,
		ПараметрыЗаписи);
	
	УстановитьЗаголовокПоХозОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПриИзмененииОрганизацииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ХозяйственнаяОперацияПриИзменении(Элемент)
	
	ПриИзмененииХозяйственнойОперацииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагентаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Партнер) Тогда
		Возврат;
	КонецЕсли;
	
	ПриИзмененииПартнераСервер();
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		ЗакупкиКлиент.ОповеститьОбОкончанииЗаполненияУсловийЗакупокПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеПриИзменении(Элемент)
	
	ПриИзмененииСоглашенияСервер();
	Если ЗначениеЗаполнено(Объект.Соглашение) Тогда
		ЗакупкиКлиент.ОповеститьОбОкончанииЗаполненияУсловийЗакупок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗакупкиКлиент.НачалоВыбораСоглашенияСПоставщиком(
		Элемент,
		СтандартнаяОбработка,
		Объект.Партнер,
		Объект.Соглашение,
		Объект.Дата,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовПриИзменении(Элемент)
	
	ПриИзмененииСтатьиРасходовСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДоходовПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СтатьяДоходов) Тогда
		ПриИзмененииСтатьиДоходовСервер();
	Иначе
		Объект.АналитикаДоходов = Неопределено;
		АналитикаДоходовВозвратаОбязательна = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	ЗаданВопросОбОчистке = ПроверитьДенежныеДокументыПоВалюте();
	Если Не ЗаданВопросОбОчистке Тогда
		ВалютаДокумента = Объект.Валюта;
		РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
		УстановитьПараметрыВыбораДД();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшенДолгСтрокойНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Партнер");
	СтруктураРеквизитов.Вставить("Контрагент");
	СтруктураРеквизитов.Вставить("ХозяйственнаяОперация", "Операция");
	
	Оповещение = Новый ОписаниеОповещения("УменьшенДолгСтрокойНажатиеПослеПроверки", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.ПроверитьВозможностьЗаполненияТабличнойЧасти(
		Оповещение, 
		ЭтаФорма, 
		Неопределено, 
		СтруктураРеквизитов,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшенДолгСтрокойНажатиеПослеПроверки(Результат, ДополнительныеПараметры) Экспорт 
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Валюта", Объект.Валюта);
	СтруктураПараметров.Вставить("Дата", Объект.Дата);
	СтруктураПараметров.Вставить("Контрагент", Объект.Контрагент);
	СтруктураПараметров.Вставить("Организация", Объект.Организация);
	СтруктураПараметров.Вставить("Партнер", Объект.Партнер);
	СтруктураПараметров.Вставить("Проведен", Объект.Проведен);
	СтруктураПараметров.Вставить("СуммаТоваров", Объект.ДенежныеДокументы.Итог("СуммаВозврата"));
	СтруктураПараметров.Вставить("ИдентификаторВызывающейФормы", УникальныйИдентификатор);
	СтруктураПараметров.Вставить("ХозяйственнаяОперация", Объект.ХозяйственнаяОперация);
	СтруктураПараметров.Вставить("Документ", Объект.Ссылка);
	СтруктураПараметров.Вставить("ЭтоРасчетыСКлиентами", Ложь);
	СтруктураПараметров.Вставить("АдресПлатежейВХранилище", ПоместитьРасшифровкуПлатежаВХранилище());
	
	ОткрытьФорму("ОбщаяФорма.ВзаиморасчетыПоВозвратуТоваров",
		СтруктураПараметров, 
		ЭтаФорма,
		,
		,
		,
		Новый ОписаниеОповещения("УменьшенДолгСтрокойНажатиеЗавершение", ЭтотОбъект), 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшенДолгСтрокойНажатиеЗавершение(АдресПлатежейВХранилище, ДополнительныеПараметры) Экспорт
	
	Если АдресПлатежейВХранилище <> Неопределено Тогда
		ПолучитьРасшифровкуПлатежаИзХранилища(АдресПлатежейВХранилище);
		РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ДенежныеДокументыПослеУдаления(Элемент)
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыДенежныйДокументПриИзменении(Элемент)
	
	ПриИзмененииДенежногоДокументаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыЦенаВозвратаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДенежныеДокументы.ТекущиеДанные;
	ТекДанные.СуммаВозврата = ТекДанные.ЦенаВозврата * ТекДанные.Количество;
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыЦенаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДенежныеДокументы.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыКоличествоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДенежныеДокументы.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
	ТекДанные.СуммаВозврата = ТекДанные.ЦенаВозврата * ТекДанные.Количество;
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыСуммаПриИзменении(Элемент)
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДенежныеДокументыСуммаВозвратаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДенежныеДокументы.ТекущиеДанные;
	ТекДанные.ЦенаВозврата = ?(ТекДанные.Количество = 0, 0, ТекДанные.СуммаВозврата / ТекДанные.Количество);
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастроитьОтражениеВРеглУчете(Команда)
	
	РеглУчетКлиент.ОткрытьНастройкуОтраженияВРеглУчетеАктиваПассива(ЭтаФорма);
	
КонецПроцедуры

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты


// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ПодборПоОстаткам(Команда)
	
	МассивДД = Новый Массив;
	Для Каждого ТекДанные Из Объект.ДенежныеДокументы Цикл
		ДД = ТекДанные.ДенежныйДокумент;
		Если ЗначениеЗаполнено(ДД) И МассивДД.Найти(ДД) = Неопределено Тогда
			МассивДД.Добавить(ДД);
		КонецЕсли;
	КонецЦикла;
	
	ЭтоВозврат = (Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
	
	ПарамОткрытия = Новый Структура;
	ПарамОткрытия.Вставить("Подразделение",	Объект.Подразделение);
	ПарамОткрытия.Вставить("ВыбытиеДД",		Объект.Ссылка);
	ПарамОткрытия.Вставить("Ссылка",		Объект.Ссылка);
	ПарамОткрытия.Вставить("МОЛ",			Объект.МОЛОтправитель);
	ПарамОткрытия.Вставить("Валюта",		?(ЭтоВозврат, Объект.Валюта, Неопределено));
	ПарамОткрытия.Вставить("МассивДД",		МассивДД);
	ПарамОткрытия.Вставить("Организация",	Объект.Организация);
	
	ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаПодбораДенежныхДокументов", ПарамОткрытия, ЭтаФорма);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПодчиненныеСвойстваПоСтатистике(ИмяРеквизитаРодителя)
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьПодчиненныеСвойства(Объект, ИмяРеквизитаРодителя);
КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ПриИзмененииСтатьиДоходовСервер()
	
	Объект.АналитикаДоходов = ПланыВидовХарактеристик.СтатьиДоходов.ПолучитьАналитикуДоходовПоУмолчанию(
		Объект.СтатьяДоходов, Объект, Объект.Подразделение);
	
	ЗаполнитьПризнакАналитикаДоходовОбязательна();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСтатьиРасходовСервер()
	
	Если ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
		
		ДоходыИРасходыСервер.СтатьяАктивовПассивовПриИзменении(
			Объект,
			Объект.СтатьяРасходов,
			Объект.АналитикаАктивовПассивов);
			
		Объект.АналитикаРасходов = Неопределено;
		АналитикаРасходовОбязательна = Ложь;
		АналитикаРасходовЗаказРеализация = Ложь;
		
	Иначе
		
		ДоходыИРасходыСервер.СтатьяРасходовПриИзменении(
			Объект,
			Объект.СтатьяРасходов,
			Объект.АналитикаРасходов);
		
		ЗаполнитьПризнакАналитикаРасходовОбязательна();
		ЗаполнитьПризнакАналитикаРасходовЗаказРеализация();
		
		Объект.АналитикаАктивовПассивов = Неопределено;
		
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОрганизацииСервер()
	
	ЗакупкиСервер.УстановитьДоступностьДоговора(
		Объект,
		Элементы.Договор.Доступность,
		Элементы.Договор.Видимость,
		Объект.Договор);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗаполнитьДоговорПоУмолчанию();
	КонецЕсли;
	
	ЗаполнитьПодчиненныеСвойстваПоСтатистике("Организация");
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПартнераСервер()
	
	ДокументЗакупки = РеквизитФормыВЗначение("Объект");
	ДокументЗакупки.ЗаполнитьУсловияЗакупокПоУмолчанию();
	ЗначениеВРеквизитФормы(ДокументЗакупки, "Объект");
	
	УстановитьДоступностьСоглашений();
	ЗакупкиСервер.УстановитьДоступностьДоговора(
		Объект,
		Элементы.Договор.Доступность,
		Элементы.Договор.Видимость,
		Объект.Договор);
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииХозяйственнойОперацииСервер()
	
	УстановитьВидимость();
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКонтрагентаСервер()
	
	ЗакупкиСервер.УстановитьДоступностьДоговора(
		Объект,
		Элементы.Договор.Доступность,
		Элементы.Договор.Видимость,
		Объект.Договор);
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ЗаполнитьДоговорПоУмолчанию();
	КонецЕсли;
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСоглашенияСервер()
	
	ЗакупкиСервер.УстановитьДоступностьДоговора(
		Объект,
		Элементы.Договор.Доступность,
		Элементы.Договор.Видимость,
		Объект.Договор);
	
	Если Не ЗначениеЗаполнено(Объект.Соглашение) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументЗакупки = РеквизитФормыВЗначение("Объект");
	ДокументЗакупки.ЗаполнитьУсловияЗакупокПоCоглашению();
	ЗначениеВРеквизитФормы(ДокументЗакупки, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДенежногоДокументаСервер()
	
	ТекСтрока = Элементы.ДенежныеДокументы.ТекущаяСтрока;
	ТекДанные = Объект.ДенежныеДокументы.НайтиПоИдентификатору(ТекСтрока);
	
	РеквизитыДД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекДанные.ДенежныйДокумент, "Валюта, Цена");
	
	ТекДанные.Валюта		= РеквизитыДД.Валюта;
	ТекДанные.Цена			= РеквизитыДД.Цена;
	ТекДанные.ЦенаВозврата	= РеквизитыДД.Цена;
	ТекДанные.Сумма			= ТекДанные.Цена * ТекДанные.Количество;
	ТекДанные.СуммаВозврата	= ТекДанные.ЦенаВозврата * ТекДанные.Количество;
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАвансовогоОтчетаПриИзменении(Элемент)
	
	ПересчитатьДатуАвансовогоОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАвансовогоОтчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = "ДоДаты" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораДаты", ЭтотОбъект);
		
		ПоясняющийТекст = НСтр("ru='Выберите дату отчета по выдаваемому авансу';uk='Виберіть дату звіту за авансом, що видається'") + " ";
		ОткрытьФорму(
			"ОбщаяФорма.ВыборДаты",
			Новый Структура("ПоясняющийТекст, НачальноеЗначение", ПоясняющийТекст),
			,,,,
			Оповещение,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) <> Тип("Дата") Тогда
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));
		ОписаниеТиповДата = Новый ОписаниеТипов(Массив, , );
		
		Элемент.ОграничениеТипа = ОписаниеТиповДата;
		
		Элемент.КнопкаВыбора = Ложь;
		Элемент.РедактированиеТекста = Ложь;
	КонецЕсли;
	
	Элементы.ДатаАвансовогоОтчета.Видимость = (ТипЗнч(ВыбранноеЗначение) <> Тип("Дата") И ВыбранноеЗначение <> "ДоДаты");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеВыбораДаты(ВыбраннаяДата, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(ВыбраннаяДата) Тогда
		
		Если ВыбраннаяДата < Объект.Дата Тогда
			ВыбраннаяДата = Объект.Дата;
		КонецЕсли;
		
		Объект.ДатаАвансовогоОтчета = ВыбраннаяДата;
		ПериодАвансовогоОтчета = ВыбраннаяДата;
		
		Массив = Новый Массив;
		Массив.Добавить(Тип("Дата"));
		ОписаниеТиповДата = Новый ОписаниеТипов(Массив, , );
		
		Элементы.ПериодАвансовогоОтчета.ОграничениеТипа = ОписаниеТиповДата;
		
		Элементы.ПериодАвансовогоОтчета.КнопкаВыбора = Истина;
		Элементы.ПериодАвансовогоОтчета.РедактированиеТекста = Истина;
	Иначе
		
		Если ТипЗнч(ПериодАвансовогоОтчета) = Тип("Дата") Тогда
			Возврат;
		КонецЕсли;
		
		Если Объект.ДатаАвансовогоОтчета = ТекущаяДата() + 7 * 24 * 3600 Тогда
			ПериодАвансовогоОтчета = "Через неделю";
		ИначеЕсли Объект.ДатаАвансовогоОтчета = ТекущаяДата() + 14 * 24 * 3600 Тогда
			ПериодАвансовогоОтчета = "Через две недели";
		ИначеЕсли Объект.ДатаАвансовогоОтчета = ТекущаяДата() + 30 * 24 * 3600 Тогда
			ПериодАвансовогоОтчета = "Через месяц";
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ДатаАвансовогоОтчета.Видимость = (ТипЗнч(ПериодАвансовогоОтчета) <> Тип("Дата"));
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПересчитатьДатуАвансовогоОтчета();
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаКлиенте
Процедура УстановитьВидимостьОбщихКоманд()
	
	ХозОперации = Новый Массив;
	ХозОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
	
	КнопкиСоздать = Новый Структура;
	КнопкиСоздать.Вставить("ФормаДокументПоступлениеБезналичныхДенежныхСредствСоздатьНаОсновании", ХозОперации);
	КнопкиСоздать.Вставить("ФормаДокументПриходныйКассовыйОрдерСоздатьНаОсновании", ХозОперации);
	
	ХозОперации = Новый Массив;
	ХозОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
	ХозОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику"));
	ХозОперации.Добавить(ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов"));
	
	КнопкиСоздать.Вставить("ФормаРегистрБухгалтерииХозрасчетныйПроводкиРеглУчета", ХозОперации);
	
	Для Каждого КнопкаСоздать из КнопкиСоздать Цикл
		
		Если КнопкаСоздать.Значение.Найти(Объект.ХозяйственнаяОперация) = Неопределено Тогда
			КнопкаЭлемент = Элементы.Найти(КнопкаСоздать.Ключ);
			Если КнопкаЭлемент <> Неопределено Тогда
				КнопкаЭлемент.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьОтображениеЭлементовПоИтогамРасхождений(Форма)
	
	ДД = Форма.Объект.ДенежныеДокументы;
	
	ОбщаяРазница = ДД.Итог("СуммаВозврата") - ДД.Итог("Сумма");
	
	ЕстьДоход  = ОбщаяРазница > 0;
	Форма.Элементы.СуммаНаПрочиеДоходы.Доступность			= ЕстьДоход;
	Форма.Элементы.ВалютаНаПрочиеДоходы.Доступность			= ЕстьДоход;
	Форма.Элементы.СтатьяДоходовВозврата.Доступность		= ЕстьДоход;
	Форма.Элементы.АналитикаДоходовВозврата.Доступность		= ЕстьДоход;
	
	ЕстьРасход = ОбщаяРазница < 0;
	Форма.Элементы.СуммаНаПрочиеРасходы.Доступность			= ЕстьРасход;
	Форма.Элементы.ВалютаНаПрочиеРасходы.Доступность		= ЕстьРасход;
	Форма.Элементы.СтатьяРасходовВозврата.Доступность		= ЕстьРасход;
	Форма.Элементы.АналитикаРасходовВозврата.Доступность	= ЕстьРасход;
	
	Форма.СуммаНаПрочиеДоходы  = ?(ОбщаяРазница > 0,  ОбщаяРазница, 0);
	Форма.СуммаНаПрочиеРасходы = ?(ОбщаяРазница < 0, -ОбщаяРазница, 0);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакАналитикаДоходовОбязательна()
	
	ЭтаФорма.АналитикаДоходовВозвратаОбязательна = 
		ЗначениеЗаполнено(Объект.СтатьяДоходов)
		И НЕ ЗначениеЗаполнено(Объект.АналитикаДоходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект["СтатьяДоходов"], "КонтролироватьЗаполнениеАналитики");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакАналитикаРасходовОбязательна()
	
	АналитикаРасходовОбязательна = Ложь;
	
	Если Объект.СтатьяРасходов = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") 
		 И ЗначениеЗаполнено(Объект.СтатьяРасходов) Тогда
		АналитикаРасходовОбязательна = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СтатьяРасходов, "КонтролироватьЗаполнениеАналитики");
	КонецЕсли;
	
	АналитикаРасходовВозвратаОбязательна = АналитикаРасходовОбязательна;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СтатьиДоходов = ПланыВидовХарактеристик.СтатьиДоходов;
	СтатьиДоходов.УстановитьУсловноеОформлениеАналитик(
		УсловноеОформление,
		"СтатьяДоходовВозврата, АналитикаДоходовВозврата");
	
	СтатьиРасходов = ПланыВидовХарактеристик.СтатьиРасходов;
	СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(
		УсловноеОформление,
		"СтатьяРасходовВозврата, АналитикаРасходовВозврата");
	СтатьиРасходов.УстановитьУсловноеОформлениеАналитик(УсловноеОформление);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	
	Документы.ВыбытиеДенежныхДокументов.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		Объект.ХозяйственнаяОперация, 
		МассивВсехРеквизитов, 
		МассивРеквизитовОперации);
	ДенежныеСредстваСервер.УстановитьВидимостьЭлементовПоМассиву(
		Элементы,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	ЭтоПеремещение = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеДенежныхДокументов;
	ЭтоВозврат = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику;
	ЭтоСписание = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДенежныхДокументов;
	
	Элементы.МОЛОтправитель.Заголовок = ?(ЭтоПеремещение, НСтр("ru='МОЛ (отправитель)';uk='МВО (відправник)'"), НСтр("ru='МОЛ';uk='МВО'"));
	
	Если ЭтоВозврат Тогда
		Элементы.ДенежныеДокументыВалюта.Видимость = Ложь;
		Элементы.СтатьяРасходов.Видимость = Ложь;
		Элементы.АналитикаРасходов.Видимость = Ложь;
	Иначе
		Элементы.СтатьяРасходовВозврата.Видимость = Ложь;
		Элементы.АналитикаРасходовВозврата.Видимость = Ложь;
		Элементы.СтатьяДоходовВозврата.Видимость = Ложь;
		Элементы.АналитикаДоходовВозврата.Видимость = Ложь;
	КонецЕсли;
	
	НаАктивыПассивы = (ТипЗнч(Объект.СтатьяРасходов) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов"));
	Элементы.АналитикаРасходов.Видимость = ЭтоСписание И НЕ НаАктивыПассивы;
	Элементы.АналитикаАктивовПассивов.Видимость = ЭтоСписание И НаАктивыПассивы;
	Элементы.ГруппаОтражениеВРеглУчете.Видимость = ЭтоСписание И НаАктивыПассивы;
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("СуммаНаПрочиеРасходы");
	МассивИменЭлементов.Добавить("ВалютаНаПрочиеРасходы");
	МассивИменЭлементов.Добавить("ОтступНаПрочиеРасходы");
	МассивИменЭлементов.Добавить("ДекорацияОтступ1");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы,
		МассивИменЭлементов,
		"Видимость",
		Элементы.СтатьяРасходовВозврата.Видимость);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("СуммаНаПрочиеДоходы");
	МассивИменЭлементов.Добавить("ВалютаНаПрочиеДоходы");
	МассивИменЭлементов.Добавить("ОтступНаПрочиеДоходы");
	МассивИменЭлементов.Добавить("ДекорацияОтступ2");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы,
		МассивИменЭлементов,
		"Видимость",
		Элементы.СтатьяДоходовВозврата.Видимость);
	
	МассивИменЭлементов = Новый Массив;
	МассивИменЭлементов.Добавить("ГруппаКомпенсация");
	МассивИменЭлементов.Добавить("УменьшенДолгСтрокой");
	МассивИменЭлементов.Добавить("СуммаКомпенсации");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы,
		МассивИменЭлементов,
		"Видимость",
		Элементы.СпособКомпенсации.Видимость);
	
	Элементы.ПериодАвансовогоОтчета.Видимость = (Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику);
	Элементы.ДатаАвансовогоОтчета.Видимость = (Элементы.ПериодАвансовогоОтчета.Видимость И ТипЗнч(ПериодАвансовогоОтчета) <> Тип("Дата"));
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ОбработкаПодбораОстатковДД(АдресДДВХранилище)
	
	ТаблицаДД = ПолучитьИзВременногоХранилища(АдресДДВХранилище);
	
	СтруктураПоиска = Новый Структура("ДенежныйДокумент");
	
	Для Каждого ДанныеДД Из ТаблицаДД Цикл
		
		СтруктураПоиска.ДенежныйДокумент = ДанныеДД.ДенежныйДокумент;
		МассивСтрокТЧ = Объект.ДенежныеДокументы.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрокТЧ.Количество() = 0 Тогда
			
			СтрокаТЧ = Объект.ДенежныеДокументы.Добавить();
			
		ИначеЕсли МассивСтрокТЧ.Количество() = 1 Тогда
			
			СтрокаТЧ = МассивСтрокТЧ[0];
			
		ИначеЕсли МассивСтрокТЧ.Количество() > 1 Тогда
			
			Для Каждого СтрокаКУдалению Из МассивСтрокТЧ Цикл
				Объект.ДенежныеДокументы.Удалить(СтрокаКУдалению);
			КонецЦикла;
			
			СтрокаТЧ = Объект.ДенежныеДокументы.Добавить();
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, ДанныеДД);
		
	КонецЦикла;
	
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	УстановитьДоступностьСоглашений();
	
	ХозяйственнаяОперацияДоговора = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика");
	
	ЗакупкиСервер.УстановитьДоступностьДоговора(
		Объект,
		Элементы.Договор.Доступность,
		Элементы.Договор.Видимость);
	
	ЗаполнитьСписокВыбораПериодов();
	
	УстановитьВидимость();
	РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
	
	УстановитьЗаголовокПоХозОперации();
	УстановитьПараметрыВыбораДД();
	
	Элементы.НастроитьОтражениеВРеглУчете.Заголовок = РеглУчетВызовСервера.ПредставлениеОтраженияВРеглУчете(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокПоХозОперации()
	
	ХозОперация = Объект.ХозяйственнаяОперация;
	ХозОперации = Перечисления.ХозяйственныеОперации;
	
	Заголовок = "";
	
	Если ХозОперация = ХозОперации.ВыдачаДенежныхДокументовПодотчетнику Тогда
		Заголовок = НСтр("ru='Выдача денежных документов подотчетному лицу';uk='Видача грошових документів підзвітній особі'");
	ИначеЕсли ХозОперация = ХозОперации.СписаниеДенежныхДокументов Тогда
		Заголовок = НСтр("ru='Списание денежных документов на расходы / активы';uk='Списання грошових документів на витрати / активи'");
	ИначеЕсли ХозОперация = ХозОперации.ВозвратДенежныхДокументовПоставщику Тогда
		Заголовок = НСтр("ru='Возврат денежных документов поставщику';uk='Повернення грошових документів постачальнику'");
	ИначеЕсли ХозОперация = ХозОперации.ПеремещениеДенежныхДокументов Тогда
		Заголовок = НСтр("ru='Перемещение денежных документов между МОЛ';uk='Переміщення грошових документів між МВО'");
	КонецЕсли;
	
	НомерДата = ?(Объект.Ссылка.Пустая(), НСтр("ru=' (создание)';uk=' (створення)'"), " " + Объект.Номер + " " + НСтр("ru='от';uk='від'") + " " + Объект.Дата);
	Заголовок = Заголовок + НомерДата;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораДД()
	
	ХозОперация = Объект.ХозяйственнаяОперация;
	ХозОперации = Перечисления.ХозяйственныеОперации;
	
	Если ХозОперация = ХозОперации.ВозвратДенежныхДокументовПоставщику Тогда
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.Валюта", Объект.Валюта));
		Элементы.ДенежныеДокументыДенежныйДокумент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыйМассив);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьДенежныеДокументыПоВалюте()
	
	ВозвратДД = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику");
	
	Если Объект.ХозяйственнаяОперация = ВозвратДД Тогда
		
		КУдалениюДД = ДенежныеДокументыВИнойВалюте();
		
		Если КУдалениюДД.Количество() <> 0 Тогда
			
			// Кнопки вопроса
			КнопкиВопроса = Новый СписокЗначений;
			КнопкиВопроса.Добавить(Истина, НСтр("ru='Удалить строки';uk='Видалити рядки'"));
			КнопкиВопроса.Добавить(Ложь, НСтр("ru='Отменить изменение валюты';uk='Скасувати зміну валюти'"));
			
			// Описание оповещения
			ДопПараметры = Новый Структура("КУдалению, СтараяВалюта", КУдалениюДД, ВалютаДокумента);
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ВычиститьДенежныеДокументыПоВалюте",
				ЭтаФорма,
				ДопПараметры);
			
			// Текст вопроса
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В таблице ""Денежные документы"" выбраны документы с валютой, отличной от ""%1"".
                    |Удалить из таблицы такие документы или отменить изменение валюты?'
                    |;uk='В таблиці ""Грошові документи"" вибрані документи з валютою, відмінної від ""%1"".
                    |Видалити з таблиці такі документи або скасувати зміну валюти?'"),
				Объект.Валюта);
			
			// Сам вопрос
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, КнопкиВопроса);
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ДенежныеДокументыВИнойВалюте()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.ДенежныйДокумент,
	|	Т.НомерСтроки
	|ПОМЕСТИТЬ ДенежныеДокументы
	|ИЗ
	|	&ДенежныеДокументы КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Т.ДенежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧ.НомерСтроки - 1 КАК Индекс
	|ИЗ
	|	ДенежныеДокументы КАК ТЧ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДенежныеДокументы КАК Спр
	|		ПО (Спр.Ссылка = ТЧ.ДенежныйДокумент)
	|ГДЕ
	|	Спр.Валюта <> &Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТЧ.НомерСтроки УБЫВ");
	
	Запрос.УстановитьПараметр("Валюта", Объект.Валюта);
	Запрос.УстановитьПараметр("ДенежныеДокументы", Объект.ДенежныеДокументы.Выгрузить(, "НомерСтроки, ДенежныйДокумент"));
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Индекс");
	
КонецФункции

&НаСервере
Функция ВычиститьДенежныеДокументыПоВалюте(УдалитьСтроки, ДопПараметры) Экспорт
	
	Если УдалитьСтроки = Истина Тогда
		
		Для Каждого СтрНаУдаление из ДопПараметры.КУдалению Цикл
			Объект.ДенежныеДокументы.Удалить(СтрНаУдаление);
		КонецЦикла;
		
		ВалютаДокумента = Объект.Валюта;
		РассчитатьИтоговыеПоказателиВыбытия(ЭтаФорма);
		УстановитьПараметрыВыбораДД();
		
	Иначе
		
		Объект.Валюта = ДопПараметры.СтараяВалюта;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДоговорПоУмолчанию()
	
	Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(Объект, ХозяйственнаяОперацияДоговора);
	Если Договор <> Объект.Договор Тогда
		Объект.Договор = Договор;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьСоглашений()
	
	Если ЗначениеЗаполнено(Объект.Партнер) Тогда
		
		КолвоСоглашений = ЗакупкиВызовСервера.ПолучитьКоличествоСоглашенийСПоставщиком(Объект.Партнер);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Соглашение",
			"Видимость",
			КолвоСоглашений > 0);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказателиВыбытия(Форма)
	
	НастроитьОтображениеЭлементовПоИтогамРасхождений(Форма);
	
	ТЧ = Форма.Объект.ДенежныеДокументы;
	ВозвратПоставщику = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику");
	ВозвратПоставщику = Форма.Объект.ХозяйственнаяОперация = ВозвратПоставщику;
	
	// Табличная часть пустая
	Если ТЧ.Количество() = 0 Тогда
		
		Форма.ВалютаДокумента = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
		Форма.СуммаДокумента = СуммаДокумента(0);
		
	Иначе
		
		ВалютаДокумента = ?(ВозвратПоставщику, Форма.Объект.Валюта, ТЧ[0].Валюта);
		
		Если Не ВозвратПоставщику И Не ТЧ.НайтиСтроки(Новый Структура("Валюта", ВалютаДокумента)).Количество() = ТЧ.Количество() Тогда
			
			// В табличной части указаны разные валюты
			Форма.ВалютаДокумента = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
			Форма.СуммаДокумента = НСтр("ru='Разные валюты';uk='Різні валюти'");
			
		Иначе
			
			ИмяКолокниСуммы = ?(ВозвратПоставщику, "СуммаВозврата", "Сумма");
			
			Форма.ВалютаДокумента = ВалютаДокумента;
			Форма.СуммаДокумента = СуммаДокумента(ТЧ.Итог(ИмяКолокниСуммы));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВозвратПоставщику Тогда
		
		// Информация о взаиморасчетах.
		СуммаУменьшенДолг = 0;
		Для Каждого СтрокаРасшифровкаПлатежа Из Форма.Объект.РасшифровкаПлатежа Цикл
			Если ЗначениеЗаполнено(СтрокаРасшифровкаПлатежа.Заказ) Тогда
				СуммаУменьшенДолг = СуммаУменьшенДолг + СтрокаРасшифровкаПлатежа.Сумма;
			КонецЕсли;
		КонецЦикла;
		
		Форма.СуммаКомпенсации = Форма.СуммаДокумента - СуммаУменьшенДолг;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"СпособКомпенсации",
			"Доступность",
			Форма.СуммаКомпенсации <> 0);
		
		Форма.УменьшенДолгСтрокой = НСтр("ru='Уменьшен долг перед поставщиком:';uk='Зменшено борг перед постачальником:'") + " " + Формат(СуммаУменьшенДолг, "ЧДЦ=2; ЧН=0,00")
			+ " " + Форма.Объект.Валюта;
			
		Если ТЧ.Итог("СуммаВозврата") <> Форма.Объект.РасшифровкаПлатежа.Итог("Сумма") Тогда
			Форма.Объект.РасшифровкаПлатежа.Очистить();
		КонецЕСли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СуммаДокумента(ЗнСумма)
	
	Возврат Формат(ЗнСумма, "ЧЦ=15; ЧДЦ=2; ЧН=");
	
КонецФункции

&НаСервере
Функция ПоместитьРасшифровкуПлатежаВХранилище()
	
	Возврат ДенежныеСредстваСервер.ПоместитьРасшифровкуПлатежаВХранилище(
		Объект.РасшифровкаПлатежа,
		УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ПолучитьРасшифровкуПлатежаИзХранилища(АдресПлатежейВХранилище)

	Объект.РасшифровкаПлатежа.Загрузить(ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище));
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.Свойства 

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);

КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства 

&НаКлиенте
Процедура АналитикаРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если АналитикаРасходовЗаказРеализация Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("ОбщаяФорма.ВыборАналитикиРасходов", , Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Объект.АналитикаРасходов = ВыбранноеЗначение.АналитикаРасходов;
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВозвратаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если АналитикаРасходовЗаказРеализация Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("ОбщаяФорма.ВыборАналитикиРасходов", , Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВозвратаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		Объект.АналитикаРасходов = ВыбранноеЗначение.АналитикаРасходов;
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВозвратаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналитикаРасходовВозвратаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура АналитикаРасходовПолучениеДанныхВыбора(ДанныеВыбора, Текст)
	
	ДанныеВыбора = Новый СписокЗначений;
	ПродажиСервер.ЗаполнитьДанныеВыбораАналитикиРасходов(ДанныеВыбора, Текст);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьКонтрольЗаполненияАналитикиРасходов(Форма, КэшированныеЗначения)
	
	СтруктураДействий = Новый Структура("ЗаполнитьПризнакАналитикаРасходовЗаказРеализация");
	
	ДанныеОбъекта = Новый Структура;
	ДанныеОбъекта.Вставить("СтатьяРасходов", Форма.Объект.СтатьяРасходов);
	ДанныеОбъекта.Вставить("АналитикаРасходовЗаказРеализация", Форма.АналитикаРасходовЗаказРеализация);
	
#Если Клиент Тогда
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ДанныеОбъекта, СтруктураДействий, КэшированныеЗначения);
#Иначе
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ДанныеОбъекта, СтруктураДействий, КэшированныеЗначения);
#КонецЕсли
	
	Форма.АналитикаРасходовЗаказРеализация = ДанныеОбъекта.АналитикаРасходовЗаказРеализация;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакАналитикаРасходовЗаказРеализация()
	
	ЭтаФорма.АналитикаРасходовЗаказРеализация = 
		ЗначениеЗаполнено(Объект.СтатьяРасходов)
		И НЕ ЗначениеЗаполнено(Объект.АналитикаРасходов)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект["СтатьяРасходов"], "АналитикаРасходовЗаказРеализация");
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("СтатьяРасходовВыборЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Статья", Объект.СтатьяРасходов);
	ПараметрыФормы.Вставить("ПараметрыВыбора", Элемент.ПараметрыВыбора);
	
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораСтатьи", ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяРасходовВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СтатьяРасходов = Результат;
	ПриИзмененииСтатьиРасходовСервер();
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораПериодов()
	
	СписокВыбораПериода = Элементы.ПериодАвансовогоОтчета.СписокВыбора;
	
	СписокВыбораПериода.Добавить("Через неделю",     НСтр("ru='Через неделю';uk='Через тиждень'"));
	СписокВыбораПериода.Добавить("Через две недели", НСтр("ru='Через две недели';uk='Через два тижні'"));
	СписокВыбораПериода.Добавить("Через месяц",      НСтр("ru='Через месяц';uk='Через місяць'"));
	СписокВыбораПериода.Добавить("ДоДаты",           НСтр("ru='До даты...';uk='До дати...'"));
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
		И Не ЗначениеЗаполнено(Объект.ДатаАвансовогоОтчета) Тогда
		
		ПериодАвансовогоОтчета = "Через неделю";
		
	Иначе
		Если Объект.ДатаАвансовогоОтчета = НачалоДня(Объект.Дата) + 7 * 24 * 3600 Тогда
			ПериодАвансовогоОтчета = "Через неделю";
		ИначеЕсли Объект.ДатаАвансовогоОтчета = НачалоДня(Объект.Дата) + 14 * 24 * 3600 Тогда
			ПериодАвансовогоОтчета = "Через две недели";
		ИначеЕсли Объект.ДатаАвансовогоОтчета = НачалоДня(Объект.Дата) + 30 * 24 * 3600 Тогда
			ПериодАвансовогоОтчета = "Через месяц";
		Иначе
			ПериодАвансовогоОтчета = Объект.ДатаАвансовогоОтчета;
			
			Массив = Новый Массив;
			Массив.Добавить(Тип("Дата"));
			ОписаниеТиповДата = Новый ОписаниеТипов(Массив, , );
			
			Элементы.ПериодАвансовогоОтчета.ОграничениеТипа = ОписаниеТиповДата;
			
			Элементы.ПериодАвансовогоОтчета.КнопкаВыбора = Истина;
			Элементы.ПериодАвансовогоОтчета.РедактированиеТекста = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДатуАвансовогоОтчета()
	
	Если ПериодАвансовогоОтчета = "Через неделю" Тогда
		Объект.ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()) + 7 * 24 * 3600;
		
	ИначеЕсли ПериодАвансовогоОтчета = "Через две недели" Тогда
		Объект.ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()) + 14 * 24 * 3600;
		
	ИначеЕсли ПериодАвансовогоОтчета = "Через месяц" Тогда
		Объект.ДатаАвансовогоОтчета = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()) + 30 * 24 * 3600;
		
	ИначеЕсли ПериодАвансовогоОтчета = "ДоДаты" Тогда
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораДаты", ЭтаФорма, );
		ПоказатьВводДаты(Оповещение, ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата()), "Дата отчета по выдаваемому авансу", ЧастиДаты.Дата);
		Возврат;
		
	ИначеЕсли ТипЗнч(ПериодАвансовогоОтчета) = Тип("Дата") Тогда
		Если ПериодАвансовогоОтчета < Объект.Дата Тогда
			ПериодАвансовогоОтчета = Объект.Дата;
		КонецЕсли;
		
		Объект.ДатаАвансовогоОтчета = ПериодАвансовогоОтчета;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовокСтатьяДоходовРасходов()
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов") Тогда
		Элементы.СтатьяРасходовВозврата.Заголовок = НСтр("ru='Статья расходов';uk='Стаття витрат'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
