#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
    
	// Инициализация данных документа
	Документы.ПерерасчетПропорциональногоНДСпоТоварамИОС.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
    
	// Отражение в разделах учета
	НДСВходящийСервер.ОтразитьНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(ДополнительныеСвойства, Движения, Отказ);
    ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
    
    // закроем остатки в регистре, по ОС, которые эксплуатируются более 36 месяцев 
    ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСтоимостьПриобретенияОСПропорциональноОблагаемыхНДС,
    	Движения.СтоимостьПриобретенияОСПропорциональноОблагаемыхНДС,
    	Отказ
    );
    
	// Движения по первоначальным сведениям ОС
	ПроведениеСервер.ОтразитьДвижения(
		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияОСБухгалтерскийУчет,
		Движения.ПервоначальныеСведенияОСБухгалтерскийУчет,
		Отказ
    );
    ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияОСНалоговыйУчет,
    	Движения.ПервоначальныеСведенияОСНалоговыйУчет,
    	Отказ
    );
    // Движения по параметрам амортизации ОС
    ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПараметрыАмортизацииОСБухгалтерскийУчет,
    	Движения.ПараметрыАмортизацииОСБухгалтерскийУчет,
    	Отказ
    );
    ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПараметрыАмортизацииОСНалоговыйУчет,
    	Движения.ПараметрыАмортизацииОСНалоговыйУчет,
    	Отказ
    );
    // Движения по первоначальным сведениям НМА
    ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияНМАБухгалтерскийУчет,
    	Движения.ПервоначальныеСведенияНМАБухгалтерскийУчет,
    	Отказ
    );
    ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПервоначальныеСведенияНМАНалоговыйУчет,
    	Движения.ПервоначальныеСведенияНМАНалоговыйУчет,
    	Отказ
    );
	ПроведениеСервер.ОтразитьДвижения(
    	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСуммыКорректировокПропорциональногоНДС,
    	Движения.СуммыКорректировокПропорциональногоНДС,
    	Отказ
    );
	
    РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);    
    
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
    
    // формирование документа установки коэффициента на следующий год
    ФормированиеДокументаУстановкаКоэффициентаПропорциональногоОтнесенияНДСНаКредит();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаУдаленияПроведения(Отказ)

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры // ОбработкаУдаленияПроведения

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
    ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	ФормироватьДокументУстановкиКоэффициентаНаСледующийГод = (Месяц(Дата) = 12);
	Дата = КонецМесяца(Дата);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
    
    ПроверитьДублиДокументов(Отказ);
    
    ПроверитьЗаполнениеТабличнойЧастиПоПерерасчетуОС(Отказ);
    
	МассивНепроверяемыхРеквизитов = Новый Массив;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)


КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДублиДокументов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
    |ВЫБРАТЬ
    |	ПерерасчетПропорциональногоНДСпоТоварамИОС.Ссылка КАК Ссылка
    |ИЗ
    |	Документ.ПерерасчетПропорциональногоНДСпоТоварамИОС КАК ПерерасчетПропорциональногоНДСпоТоварамИОС
    |ГДЕ
    |	ПерерасчетПропорциональногоНДСпоТоварамИОС.Проведен
    |	И ПерерасчетПропорциональногоНДСпоТоварамИОС.Организация = &Организация
    |	И ПерерасчетПропорциональногоНДСпоТоварамИОС.СпецРежимНалогообложения = &СпецРежимНалогообложения
    |	И ПерерасчетПропорциональногоНДСпоТоварамИОС.Дата МЕЖДУ &ПериодНачало И &ПериодОкончание
    |	И НЕ ПерерасчетПропорциональногоНДСпоТоварамИОС.Ссылка = &ТекущийДокумент
    |");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодНачало",    НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ПериодОкончание", КонецМесяца(Дата));
    Запрос.УстановитьПараметр("СпецРежимНалогообложения", СпецРежимНалогообложения);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ПредставлениеПериода = ПредставлениеПериода(НачалоМесяца(Дата), КонецМесяца(Дата), "ДЛФ=D");
		ШаблонТекста = НСтр("ru='В периоде ""%1"" уже есть проведенный документ ""Перерасчет пропорционального НДС по товарам и ОС"" для организации %2 и спец. режима налогообложения %3';uk='В періоді ""%1"" вже є проведений документ ""Перерахунок пропорційного ПДВ по товарах і ОС"" для організації %2 і спец. режиму оподаткування %3'");
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, ПредставлениеПериода, Организация, СпецРежимНалогообложения);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, "Дата", , Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧастиПоПерерасчетуОС(Отказ)

	Для Каждого Строка Из ПараметрыПерерасчетаОС Цикл
		
		Поле = "ПараметрыПерерасчетаОС[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ДатаНачалаИспользования";
		
		Если Не ЗначениеЗаполнено(Строка.ДатаНачалаИспользования) Тогда

			СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке номер ""%1"" табличной части ""Перерасчет ОС (за 1, 2, 3 год использования)"": ';uk='У рядку номер ""%1"" табличної частини ""Перерахунок ОЗ (за 1, 2, 3 рік використання)"": '"), СокрЛП(Строка.НомерСтроки));
			
			СтрокаСообщения = НСтр("ru='Не заполнено значение реквизита ""Начало использования""!';uk='Не заповнене значення реквізиту ""Початок використання""!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			
		ИначеЕсли  НачалоГода(Строка.ДатаНачалаИспользования) < НачалоГода(ДобавитьМесяц(Дата, -36)) Тогда
				
				СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке номер ""%1"" табличной части ""Перерасчет ОС (за 1, 2, 3 год использования)"": ';uk='У рядку номер ""%1"" табличної частини ""Перерахунок ОЗ (за 1, 2, 3 рік використання)"": '"), СокрЛП(Строка.НомерСтроки));
				
				СтрокаСообщения = НСтр("ru='Указано некорректное значение реквизита ""Начало использования"". Прошло уже более 3-х лет после года ввода в эксплуатацию!';uk='Зазначене некоректне значення реквізиту ""Початок використання"". Пройшло вже більше 3-х років після року введення у експлуатацію!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
				
		ИначеЕсли  КонецГода(Строка.ДатаНачалаИспользования) > КонецГода(Дата) Тогда		
				
				СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке номер ""%1"" табличной части ""ОС, введенные в эксплуатацию в текущем году"": ';uk='У рядку номер ""%1"" табличної частини ""ОС, що введені у експлуатацію в поточному році"": '"), СокрЛП(Строка.НомерСтроки));
				
				СтрокаСообщения = НСтр("ru='Указано некорректное значение реквизита ""Начало использования"". Дата ввода в эксплуатацию не может быть позже конца текущего месяца!';uk='Зазначене некоректне значення реквізиту ""Початок використання"". Дата введення в експлуатацію не може бути більшою за кінець поточного місяця!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
				
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры 

Процедура ФормированиеДокументаУстановкаКоэффициентаПропорциональногоОтнесенияНДСНаКредит()
	
	Если НЕ ФормироватьДокументУстановкиКоэффициентаНаСледующийГод ИЛИ Месяц(Дата) <> 12 Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СпецРежимНалогообложения", СпецРежимНалогообложения);
	Запрос.УстановитьПараметр("Период", НачалоГода(ДобавитьМесяц(Дата, 12)));
	
	Запрос.Текст = "
    |ВЫБРАТЬ ПЕРВЫЕ 1
    |	КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Регистратор,
    |	КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Регистратор.Коэффициент КАК Коэффициент,
    |	КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Регистратор.СуммаОблагаемыхОпераций КАК СуммаОблагаемыхОпераций,
    |	КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Регистратор.СуммаВсехОпераций КАК СуммаВсехОпераций,
    //	если движение сделал не документ установки коэффициента, а универсальный - мы это определим по отсутствию реквизита
    |	ЕСТЬNULL(КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Регистратор.ПоДаннымПрошлогоГода, НЕОПРЕДЕЛЕНО) КАК ПоДаннымПрошлогоГода
    |ИЗ
    |	РегистрСведений.КоэффициентыПропорциональногоОтнесенияНДСНаКредит КАК КоэффициентыПропорциональногоОтнесенияНДСНаКредит
    |ГДЕ
    |	КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Организация = &Организация
    |	И КоэффициентыПропорциональногоОтнесенияНДСНаКредит.СпецРежимНалогообложения = &СпецРежимНалогообложения
    |	И КоэффициентыПропорциональногоОтнесенияНДСНаКредит.Период = &Период
    |";
				                                    
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		// если запись в регистр сделал не правильный документ - не будем его переоформлять
        Если Выборка.ПоДаннымПрошлогоГода = Неопределено Тогда
            
			СтрокаСообщения = НСтр("ru='Невозможно установить коэффициент пропорционального НДС на следующий год!"
"Запись в регистр сформирована не документом ""Установка коэффициента пропорционального НДС""';uk='Неможливо встановити коефіцієнт пропорційного ПДВ на наступний рік!"
"Запис у регістр сформований не документом ""Встановлення коефіцієнта пропорційного ПДВ ""'");

            ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
						   
			Возврат;
		
		КонецЕсли;
		
		// проверим, нужно ли переоформлять этот документ
		Если    Выборка.ПоДаннымПрошлогоГода = Истина 
			И  Выборка.Коэффициент 				= Коэффициент/100
			И  Выборка.СуммаОблагаемыхОпераций 	= СуммаОблагаемыхОпераций
			И  Выборка.СуммаВсехОпераций		= СуммаВсехОпераций Тогда
		
			Возврат;	
		
		КонецЕсли;
		
		ДокументУстановкаКоэффициента = Выборка.Регистратор.ПолучитьОбъект();
		
	Иначе
		
		ДокументУстановкаКоэффициента = Документы.УстановкаКоэффициентаПропорциональногоНДС.СоздатьДокумент();
		
	КонецЕсли;
				   
	ДокументУстановкаКоэффициента.Дата 		                = НачалоГода(ДобавитьМесяц(Дата, 12));
	ДокументУстановкаКоэффициента.Организация               = Организация;
	ДокументУстановкаКоэффициента.СпецРежимНалогообложения  = СпецРежимНалогообложения;
	ДокументУстановкаКоэффициента.Ответственный             = Ответственный;
	ДокументУстановкаКоэффициента.Комментарий               = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сформирован автоматически документом %1';uk='Сформований автоматично документом %1'"), Ссылка);
	ДокументУстановкаКоэффициента.МесяцРасчета              = 12;
	ДокументУстановкаКоэффициента.ПоДаннымПрошлогоГода      = Истина;
	ДокументУстановкаКоэффициента.СуммаОблагаемыхОпераций   = СуммаОблагаемыхОпераций;
	ДокументУстановкаКоэффициента.СуммаВсехОпераций         = СуммаВсехОпераций;
	ДокументУстановкаКоэффициента.Коэффициент               = Коэффициент/100;
	
	Попытка
		ДокументУстановкаКоэффициента.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Невозможно установить коэффициент пропорционального НДС на следующий год! "
" ошибка: %1';uk='Неможливо встановити коефіцієнт пропорційного ПДВ на наступний рік! "
" помилка: %1'"), ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
	КонецПопытки;
	
КонецПроцедуры
    
#КонецОбласти    
   
#КонецЕсли

