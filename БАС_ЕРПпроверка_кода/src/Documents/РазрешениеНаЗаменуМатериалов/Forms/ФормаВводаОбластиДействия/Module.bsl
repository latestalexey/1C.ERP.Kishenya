
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокСвойств = "ЗаказНаПроизводство, ЗаказКлиента, Подразделение, Спецификация, Изделие, ХарактеристикаИзделия, КоличествоМатериалов";
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, СписокСвойств);
	
	ИспользоватьЗаказНаПроизводство = ЗначениеЗаполнено(ЗаказНаПроизводство);
	ИспользоватьЗаказКлиента = ЗначениеЗаполнено(ЗаказКлиента);
	ИспользоватьПодразделение = ЗначениеЗаполнено(Подразделение) И Не  ЗначениеЗаполнено(Спецификация);
	
	Если ЗначениеЗаполнено(Спецификация) Тогда
		
		Режим = 1;
		ИспользоватьСпецификацию = Истина;
		ПоСпецификации = Истина;
		
	ИначеЕсли ЗначениеЗаполнено(Изделие) Тогда
		
		Режим = 2;
		ИспользоватьИзделие = Истина;
		
		Если ЗначениеЗаполнено(ХарактеристикаИзделия) Тогда
			ИспользуютсяХарактеристикиДляТекущегоИзделия = Истина;
			ИспользоватьХарактеристикуИзделия = Истина;
		Иначе
			ИспользуютсяХарактеристикиДляТекущегоИзделия = ПризнакИспользованияХарактеристикНаСервере(Изделие);
			ИспользоватьХарактеристикуИзделия = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	РежимПриОткрытии = Режим;
	
	Если ЗначениеЗаполнено(Спецификация) или КоличествоМатериалов > 0 Тогда
		УведомлятьОбИзмененииРежима = Истина;
	КонецЕсли;
	
	УстановитьДоступность();

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекстВопроса = НСтр("ru='Данные были изменены. Перенести изменения в документ?';uk='Дані були змінені. Перенести зміни в документ?'");
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьНаКлиенте", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ТекстВопроса);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьЗаказНаПроизводствоПриИзменении(Элемент)
	Элементы.ЗаказНаПроизводство.Доступность = ИспользоватьЗаказНаПроизводство;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗаказКлиентаПриИзменении(Элемент)
	Элементы.ЗаказКлиента.Доступность = ИспользоватьЗаказКлиента;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодразделениеПриИзменении(Элемент)
	Элементы.Подразделение.Доступность = ИспользоватьПодразделение;
КонецПроцедуры

&НаКлиенте
Процедура БезОграниченийПриИзменении(Элемент)
	
	ИспользоватьСпецификацию = Ложь;
	ИспользоватьИзделие = Ложь;
	ИспользоватьХарактеристикуИзделия = Ложь;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоСпецификацииПриИзменении(Элемент)
	
	Если УведомлятьОбИзмененииРежима Тогда
		
		ТекстВопроса = НСтр("ru='Изменение области действия приведет к очистке 
                                    |табличной части ""Набор заменямых материалов"".
                                    |Продолжить?'
                                    |;uk='Зміна області дії призведе до очищення 
                                    |табличної частини ""Набір замінних матеріалів"".
                                    |Продовжити?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПоСпецификацииПриИзмененииЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
		
	КонецЕсли;
	
	ПоСпецификацииПриИзмененииФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоСпецификацииПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
        УведомлятьОбИзмененииРежима = Ложь;
    Иначе
        Режим = РежимПриОткрытии;
        Возврат;
    КонецЕсли;
    
    
    ПоСпецификацииПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ПоСпецификацииПриИзмененииФрагмент()
    
    ИспользоватьСпецификацию = Истина;
    ИспользоватьИзделие = Ложь;
    ИспользоватьХарактеристикуИзделия = Ложь;
    
    ИспользоватьПодразделение = Ложь;
    
    УстановитьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если УведомлятьОбИзмененииРежима Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекстВопроса = НСтр("ru='Изменение спецификации приведет к очистке табличной части ""Материалы"", продолжить?';uk='Зміна специфікації призведе до очищення табличної частини ""Матеріали"", продовжити?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("СпецификацияНачалоВыбораЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоПроизводимомуИзделиюПриИзменении(Элемент)
	
	ИспользоватьСпецификацию = Ложь;
	ИспользоватьИзделие = Истина;
	ИспользоватьХарактеристикуИзделия = Ложь;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзделиеПриИзменении(Элемент)
	
	ИспользоватьХарактеристикуИзделия = Ложь;
	
	Если ЗначениеЗаполнено(Изделие) Тогда
		ИспользуютсяХарактеристикиДляТекущегоИзделия = ПризнакИспользованияХарактеристикНаСервере(Изделие);
	Иначе
		ИспользуютсяХарактеристикиДляТекущегоИзделия = Ложь;
	КонецЕсли;
	
	Элементы.ИспользоватьХарактеристикуИзделия.Доступность = ИспользуютсяХарактеристикиДляТекущегоИзделия;
	Элементы.ХарактеристикаИзделия.Доступность = ИспользоватьХарактеристикуИзделия;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьХарактеристикуИзделияПриИзменении(Элемент)
	Элементы.ХарактеристикаИзделия.Доступность = ИспользоватьХарактеристикуИзделия;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Модифицированность Тогда
		ЗавершитьРедактирование();
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатРедактированияНаСервере()
	
	Результат = Новый Структура;
	
	Результат.Вставить("ЗаказНаПроизводство", ?(ЗначениеЗаполнено(ЗаказНаПроизводство) и ИспользоватьЗаказНаПроизводство,
		ЗаказНаПроизводство, Документы.ЗаказНаПроизводство.ПустаяСсылка()));
	Результат.Вставить("ЗаказКлиента", ?(ЗначениеЗаполнено(ЗаказКлиента) и ИспользоватьЗаказКлиента,
		ЗаказКлиента, Документы.ЗаказКлиента.ПустаяСсылка()));
	Результат.Вставить("Подразделение", ?(ЗначениеЗаполнено(Подразделение) и ИспользоватьПодразделение,
		Подразделение, Справочники.СтруктураПредприятия.ПустаяСсылка()));
	Результат.Вставить("Спецификация", ?(ЗначениеЗаполнено(Спецификация) и ИспользоватьСпецификацию,
		Спецификация, Справочники.РесурсныеСпецификации.ПустаяСсылка()));
	Результат.Вставить("Изделие", ?(ЗначениеЗаполнено(Изделие) и ИспользоватьИзделие,
		Изделие, Справочники.Номенклатура.ПустаяСсылка()));
	Результат.Вставить("ХарактеристикаИзделия", ?(ЗначениеЗаполнено(ХарактеристикаИзделия) и ИспользоватьХарактеристикуИзделия,
		ХарактеристикаИзделия, Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьРедактирование()
	
	Отказ = Ложь;
	
	// Проверка заполнения
	ОчиститьСообщения();
	
	Если ИспользоватьЗаказНаПроизводство и Не ЗначениеЗаполнено(ЗаказНаПроизводство) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Заказ на производство"" не заполнено';uk='Полі ""Замовлення на виробництво"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "ЗаказНаПроизводство", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьЗаказКлиента и Не ЗначениеЗаполнено(ЗаказКлиента) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Заказ клиента"" не заполнено';uk='Поле ""Заказ клієнта"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "ЗаказКлиента", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьПодразделение и Не ЗначениеЗаполнено(Подразделение) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Подразделение"" не заполнено';uk='Полі ""Підрозділ"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Подразделение", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьСпецификацию и Не ЗначениеЗаполнено(Спецификация) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Спецификация"" не заполнено';uk='Поле ""Специфікація"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Спецификация", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьИзделие и Не ЗначениеЗаполнено(Изделие) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Изделие"" не заполнено';uk='Поле ""Виріб"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Изделие", , Отказ);
	КонецЕсли;
	
	Если ИспользоватьХарактеристикуИзделия и Не ЗначениеЗаполнено(ХарактеристикаИзделия) Тогда
		ТекстОшибки = НСтр("ru='Поле ""Характеристика"" не заполнено';uk='Поле ""Характеристика"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "ХарактеристикаИзделия", , Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	СтруктураВыбора = Новый Структура();
	СтруктураВыбора.Вставить("ВыполняемаяОперация", "ВыборОбластиДействия");
	СтруктураВыбора.Вставить("ЗначениеВыбора", РезультатРедактированияНаСервере());
	
	ОповеститьОВыборе(СтруктураВыбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	Элементы.ЗаказНаПроизводство.Доступность = ИспользоватьЗаказНаПроизводство;
	Элементы.ЗаказКлиента.Доступность = ИспользоватьЗаказКлиента;
	Элементы.Подразделение.Доступность = ИспользоватьПодразделение;
	
	Если ИспользоватьСпецификацию Тогда
		
		Элементы.Спецификация.Доступность = Истина;
		Элементы.СпецификацияНадпись.Доступность = Истина;
		
		Элементы.Изделие.Доступность = Ложь;
		Элементы.ИзделиеНадпись.Доступность = Ложь;
		Элементы.ХарактеристикаИзделия.Доступность = Ложь;
		Элементы.ИспользоватьХарактеристикуИзделия.Доступность = Ложь;
		
		Элементы.ИспользоватьПодразделение.Доступность = Ложь;
		
	ИначеЕсли ИспользоватьИзделие Тогда
		
		Элементы.Спецификация.Доступность = Ложь;
		Элементы.СпецификацияНадпись.Доступность = Ложь;
		
		Элементы.Изделие.Доступность = Истина;
		Элементы.ИзделиеНадпись.Доступность = Истина;
		Элементы.ИспользоватьХарактеристикуИзделия.Доступность = ИспользуютсяХарактеристикиДляТекущегоИзделия;
		Элементы.ХарактеристикаИзделия.Доступность = ИспользоватьХарактеристикуИзделия;
		
		Элементы.ИспользоватьПодразделение.Доступность = Истина;
		
	Иначе
		
		Элементы.Спецификация.Доступность = Ложь;
		Элементы.СпецификацияНадпись.Доступность = Ложь;
		
		Элементы.Изделие.Доступность = Ложь;
		Элементы.ИзделиеНадпись.Доступность = Ложь;
		
		Элементы.ХарактеристикаИзделия.Доступность = Ложь;
		Элементы.ИспользоватьХарактеристикуИзделия.Доступность = Ложь;
		
		Элементы.ИспользоватьПодразделение.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПризнакИспользованияХарактеристикНаСервере(Номенклатура)
	
	ИспользованиеХарактеристик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ИспользованиеХарактеристик");
	
	Если ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры 
		Или ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры
		Или ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры
		Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрытьНаКлиенте(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗавершитьРедактирование();
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНачалоВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		УведомлятьОбИзмененииРежима = Ложь;
		ОткрытьФорму("Справочник.РесурсныеСпецификации.ФормаВыбора",, Элементы.Спецификация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
