#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическиеЛица.ФизическоеЛицо");
	
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ДанныеДляПроведения = ДанныеДляПроведения(ЭтотОбъект.Ссылка);
	ПроверитьЗаполнениеСтрокиСпецстажа(ДанныеДляПроведения, Отказ);
	ДвижениеПоРегиструСпецстажСотрудников(ДанныеДляПроведения, Движения, Ссылка);
		
КонецПроцедуры	

Функция ДанныеДляПроведения(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = "ВЫБРАТЬ
	|	СтрокиДокумента.НомерСтроки КАК НомерСтроки,
	|	СтрокиДокумента.Сотрудник,
	|	СтрокиДокумента.ОснованияСпецСтажа КАК ОснованияСпециальногоСтажа,
	|	СтрокиДокумента.ЕдиницаВремени,
	|	СтрокиДокумента.ДатаНачала,
	|	СтрокиДокумента.ГрафикНормы,
	|	СтрокиДокумента.Сезонность,
	|	СтрокиДокумента.Результат,
	|	СтрокиДокумента.Норма,
	|	СтрокиДокумента.Приказ,
	|	СтрокиДокумента.ДатаОкончания,
	|	РасчетСпецстажаСотрудников.Дата,
	|	РасчетСпецстажаСотрудников.ПериодРегистрации,
	|	РасчетСпецстажаСотрудников.Организация
	|ИЗ
	|	Документ.РасчетСпецстажаСотрудников.Спецстаж КАК СтрокиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСпецстажаСотрудников КАК РасчетСпецстажаСотрудников
	|		ПО СтрокиДокумента.Ссылка = РасчетСпецстажаСотрудников.Ссылка
	|ГДЕ
	|	СтрокиДокумента.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // СформироватьЗапросПоСпецстажу()

Процедура ДвижениеПоРегиструСпецстажСотрудников(Данные, Движения, Ссылка)
	
	Для Каждого Строка ИЗ Данные Цикл
		НовыеДвижения = Движения.СпецстажСотрудников.Добавить();
		ЗаполнитьЗначенияСвойств(НовыеДвижения,Строка);
	КонецЦикла;
	Движения.СпецстажСотрудников.Записывать = Истина;
	Движения.СпецстажСотрудников.Записать();
	
КонецПроцедуры


// Проверяет правильность заполнения реквизитов в строке ТЧ "Спецстаж" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса
//  Отказ 						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиСпецстажа(ДанныеДляПроведения, Отказ)
	
	Для каждого Строка ИЗ ДанныеДляПроведения Цикл
		СтрокаНачалаСообщенияОбОшибке = НСтр("ru='В строке номер ';uk='У рядку номер '") + СокрЛП(Строка.НомерСтроки) + " ";
		
		Если НачалоМесяца(Строка.ДатаНачала) <> НачалоМесяца(Строка.ПериодРегистрации) Тогда
			СтрокаОшибки = СтрокаНачалаСообщенияОбОшибке + НСтр("ru='дата начала не соответствует периоду регистрации документа!';uk='дата початку не відповідає періоду реєстрації документа!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки,,,,Отказ);
		ИначеЕсли НачалоМесяца(Строка.ДатаОкончания) <> НачалоМесяца(Строка.ПериодРегистрации) Тогда
			СтрокаОшибки = СтрокаНачалаСообщенияОбОшибке + НСтр("ru='дата окончания не соответствует периоду регистрации документа!';uk='дата закінчення не відповідає періоду реєстрації документа!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки,,,,Отказ);
		ИначеЕсли Строка.ДатаНачала > Строка.ДатаОкончания Тогда
			СтрокаОшибки = СтрокаНачалаСообщенияОбОшибке + НСтр("ru='дата окончания должна быть больше даты начала!';uk='дата закінчення повинна бути більше дати початку!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки,,,,Отказ);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиСпецстажа()

#КонецЕсли
