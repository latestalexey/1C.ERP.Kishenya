
&НаСервере
Процедура ЗаполнитьСпецстажНаСервере(Организация, ПодразделениеОрганизации = НЕОПРЕДЕЛЕНО, Сотрудник)
	
	Запрос = Новый Запрос;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудников.Организация  		= Организация;
	ПараметрыПолученияСотрудников.НачалоПериода = НачалоМесяца(Объект.ПериодРегистрации);
	ПараметрыПолученияСотрудников.ОкончаниеПериода = КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыПолученияСотрудников.Подразделение = ПодразделениеОрганизации;		
	ПараметрыПолученияСотрудников.ПодработкиРаботниковПоТрудовымДоговорам = ПолучитьФункциональнуюОпцию("ИспользоватьПодработки");
	ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудников);
	СписокСотрудников = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаСотрудников, "Сотрудник", Истина);
	
	// Для выявленных по установленным фильтрам сотрудникам получаем полную кадровую историю в пределах головной
	// организации.
	ПараметрыПолученияРабочихМест = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоСпискуСотрудников();
	ПараметрыПолученияРабочихМест.Организация  					= Организация;
	ПараметрыПолученияРабочихМест.Подразделение                 = ПодразделениеОрганизации;
	ПараметрыПолученияРабочихМест.ОтбиратьПоГоловнойОрганизации = Истина;
	ПараметрыПолученияРабочихМест.НачалоПериода					= НачалоМесяца(Объект.ПериодРегистрации);
	ПараметрыПолученияРабочихМест.ОкончаниеПериода  			= КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыПолученияРабочихМест.СписокСотрудников 			= СписокСотрудников;
	ПараметрыПолученияРабочихМест.ПодработкиРаботниковПоТрудовымДоговорам = ПолучитьФункциональнуюОпцию("ИспользоватьПодработки");
	
	// Сотрудники у нас уже есть, поэтому допустимо установить привилегированный режим.
	УстановитьПривилегированныйРежим(Истина);
	КадровыйУчет.СоздатьВТРабочиеМестаСотрудников(МенеджерВременныхТаблиц, Истина, ПараметрыПолученияРабочихМест);
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Объект.ПериодРегистрации)); 
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РабочиеМестаСотрудников.Сотрудник,
	|	РабочиеМестаСотрудников.ДолжностьПоШтатномуРасписанию,
	|	РабочиеМестаСотрудников.Период,
	|	МИНИМУМ(Периоды.Период) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТМинимальныеПериоды
	|ИЗ
	|	ВТРабочиеМестаСотрудников КАК РабочиеМестаСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеМестаСотрудников КАК Периоды
	|		ПО РабочиеМестаСотрудников.Сотрудник = Периоды.Сотрудник
	|			И РабочиеМестаСотрудников.Период < Периоды.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	РабочиеМестаСотрудников.Сотрудник,
	|	РабочиеМестаСотрудников.ДолжностьПоШтатномуРасписанию,
	|	РабочиеМестаСотрудников.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РабочиеМестаСотрудников.Сотрудник,
	|	РабочиеМестаСотрудников.ДолжностьПоШтатномуРасписанию,
	|	РабочиеМестаСотрудников.Период КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА Периоды.ДатаОкончания ЕСТЬ NULL 
	|			ТОГДА &ДатаОкончания
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Периоды.ДатаОкончания, ДЕНЬ), ДЕНЬ, -1), ДЕНЬ)
	|	КОНЕЦ КАК ДатаОкончания,
	|	РабочиеМестаСотрудников.Сотрудник.ФизическоеЛицо.Пол КАК ПолФизическогоЛица
	|ПОМЕСТИТЬ ВТСотрудникиИнтервалы
	|ИЗ
	|	ВТРабочиеМестаСотрудников КАК РабочиеМестаСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМинимальныеПериоды КАК Периоды
	|		ПО РабочиеМестаСотрудников.Сотрудник = Периоды.Сотрудник
	|			И РабочиеМестаСотрудников.ДолжностьПоШтатномуРасписанию = Периоды.ДолжностьПоШтатномуРасписанию
	|			И РабочиеМестаСотрудников.Период = Периоды.Период";
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|ГДЕ
		|	РабочиеМестаСотрудников.Сотрудник = &Сотрудник";
	Иначе
		ТекстЗапроса = ТекстЗапроса + ";
		|";
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	УчетРабочегоВремени.СоздатьВТРабочееСотрудниковВремяПоИнтервалам(МенеджерВременныхТаблиц, КонецМесяца(Объект.ПериодРегистрации)); 
	
	КадровыйУчетРасширенный.АттестованныеРабочиеМестаЗаПериод(Запрос, Организация, НачалоМесяца(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации)); 
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВТСотрудникиИнтервалы.Сотрудник КАК Сотрудник,
	               |	ВТСотрудникиИнтервалы.ДолжностьПоШтатномуРасписанию,
	               |	ВТСотрудникиИнтервалы.ДатаНачала КАК ДатаНачала,
	               |	ВТСотрудникиИнтервалы.ДатаОкончания КАК ДатаОкончания,
	               |	ВТСотрудникиИнтервалы.ПолФизическогоЛица
	               |ПОМЕСТИТЬ ВТДанныеДляОбъединения
	               |ИЗ
	               |	ВТСотрудникиИнтервалы КАК ВТСотрудникиИнтервалы
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	ДатаНачала,
	               |	ДатаОкончания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТСотрудникиИнтервалы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТРабочееВремяПоИнтервалам.ДатаНачала КАК Начало,
	               |	ВТРабочееВремяПоИнтервалам.ДатаОкончания КАК Конец,
	               |	ВТРабочееВремяПоИнтервалам.Сотрудник,
	               |	ВТРабочееВремяПоИнтервалам.НормаДней,
	               |	ВТРабочееВремяПоИнтервалам.НормаЧасов,
	               |	ВТДанныеДляОбъединения.ДолжностьПоШтатномуРасписанию,
	               |	ВТДанныеДляОбъединения.ПолФизическогоЛица
	               |ПОМЕСТИТЬ ВТСотрудникиИнтервалы
	               |ИЗ
	               |	ВТРабочееВремяПоИнтервалам КАК ВТРабочееВремяПоИнтервалам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеДляОбъединения КАК ВТДанныеДляОбъединения
	               |		ПО ВТРабочееВремяПоИнтервалам.Сотрудник = ВТДанныеДляОбъединения.Сотрудник
	               |			И ВТРабочееВремяПоИнтервалам.ДатаНачала = ВТДанныеДляОбъединения.ДатаНачала
	               |			И ВТРабочееВремяПоИнтервалам.ДатаОкончания = ВТДанныеДляОбъединения.ДатаОкончания";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Сотрудник КАК Сотрудник,
	|	РабочиеМеста.ОснованиеСпецСтажа КАК ОснованиеСпецСтажа,
	|	РабочиеМеста.ЕдиницаВремени КАК ЕдиницаВремени,
	|	РабочиеМеста.ГрафикНормы КАК ГрафикРаботы,
	|	РабочиеМеста.Сезонность КАК Сезонность,
	|	РабочиеМеста.Приказ КАК Приказ,
	|	ВЫБОР
	|		КОГДА Работники.Начало < РабочиеМеста.Начало
	|			ТОГДА РабочиеМеста.Начало
	|		ИНАЧЕ Работники.Начало
	|	КОНЕЦ КАК ДатаНачалаПериода,
	|	ВЫБОР
	|		КОГДА Работники.Конец < РабочиеМеста.Конец
	|			ТОГДА Работники.Конец
	|		ИНАЧЕ РабочиеМеста.Конец
	|	КОНЕЦ КАК ДатаОкончанияПериода,
	|	Работники.ДолжностьПоШтатномуРасписанию
	|ИЗ
	|	ВТСотрудникиИнтервалы КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеМеста КАК РабочиеМеста
	|		ПО Работники.ДолжностьПоШтатномуРасписанию = РабочиеМеста.РабочееМесто
	|			И (Работники.Начало <= РабочиеМеста.Начало
	|				ИЛИ Работники.Конец >= РабочиеМеста.Конец
	|					И Работники.Конец <= РабочиеМеста.Конец)
	|			И Работники.Конец >= РабочиеМеста.Начало
	|			И (ВЫБОР
	|				КОГДА РабочиеМеста.ОграничениеПоПолу
	|					ТОГДА РабочиеМеста.ПолФизическогоЛица = Работники.ПолФизическогоЛица
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ РабочиеМеста.ОснованиеСпецСтажа ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Сотрудник.Наименование,
	|	РабочиеМеста.ОснованиеСпецСтажа.Код,
	|	ДатаНачалаПериода";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("КалендарныеДни", Перечисления.ЕдиницыВремениУчетаСпецстажа.КалендарныеДни);
	Запрос.УстановитьПараметр("Часы", Перечисления.ЕдиницыВремениУчетаСпецстажа.Часы);
	Запрос.УстановитьПараметр("Смены", Перечисления.ЕдиницыВремениУчетаСпецстажа.Смены);
	
	Запрос.Выполнить();
	
	ОсновнаяТаблица = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков = ОсновнаяТаблица.Скопировать(,"ГрафикРаботы, ДатаНачалаПериода, ДатаОкончанияПериода");
	
	УчетРабочегоВремени.СоздатьВТВремяПоГрафикам(ТаблицаГрафиков, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("ОсновнаяТаблица",ОсновнаяТаблица); 
	
	ЗапросТекст =  "ВЫБРАТЬ
	               |	ОсновнаяТаблица.ДолжностьПоШтатномуРасписанию,
	               |	ОсновнаяТаблица.ЕдиницаВремени,
	               |	ОсновнаяТаблица.ОснованиеСпецСтажа,
	               |	ОсновнаяТаблица.Приказ,
	               |	ОсновнаяТаблица.Сезонность,
	               |	ОсновнаяТаблица.Сотрудник,
	               |	ОсновнаяТаблица.ГрафикРаботы КАК ГрафикРаботы,
	               |	ОсновнаяТаблица.ДатаНачалаПериода КАК ДатаНачалаПериода,
	               |	ОсновнаяТаблица.ДатаОкончанияПериода КАК ДатаОкончанияПериода
	               |ПОМЕСТИТЬ ОсновнаяТаблица
	               |ИЗ
	               |	&ОсновнаяТаблица КАК ОсновнаяТаблица
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ГрафикРаботы,
	               |	ДатаНачалаПериода,
	               |	ДатаОкончанияПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТГрафикиРаботыСотрудников.ГрафикРаботы,
	               |	ВТГрафикиРаботыСотрудников.НормаДней,
	               |	ВТГрафикиРаботыСотрудников.НормаЧасов,
	               |	ВТГрафикиРаботыСотрудников.ОтработаноДнейКалендарных,
	               |	ВТГрафикиРаботыСотрудников.ДатаОкончанияПериода,
	               |	ВТГрафикиРаботыСотрудников.ДатаНачалаПериода,
	               |	ВТГрафикиРаботыСотрудников.ОтработаноДней,
	               |	ВТГрафикиРаботыСотрудников.ОтработаноЧасов,
	               |	ОсновнаяТаблица.ДолжностьПоШтатномуРасписанию,
	               |	ОсновнаяТаблица.ЕдиницаВремени,
	               |	ОсновнаяТаблица.ОснованиеСпецСтажа,
	               |	ОсновнаяТаблица.Приказ,
	               |	ОсновнаяТаблица.Сезонность,
	               |	ОсновнаяТаблица.Сотрудник
	               |ПОМЕСТИТЬ Результат
	               |ИЗ
	               |	ОсновнаяТаблица КАК ОсновнаяТаблица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяПоГрафикам КАК ВТГрафикиРаботыСотрудников
	               |		ПО ОсновнаяТаблица.ГрафикРаботы = ВТГрафикиРаботыСотрудников.ГрафикРаботы
	               |			И ОсновнаяТаблица.ДатаНачалаПериода = ВТГрафикиРаботыСотрудников.ДатаНачалаПериода
	               |			И ОсновнаяТаблица.ДатаОкончанияПериода = ВТГрафикиРаботыСотрудников.ДатаОкончанияПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Результат.ГрафикРаботы,
	               |	ВЫБОР
	               |		КОГДА Результат.ЕдиницаВремени = &КалендарныеДни
	               |			ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(&ДатаОкончания, МЕСЯЦ), &ДатаОкончания, ДЕНЬ) + 1
	               |		КОГДА Результат.ЕдиницаВремени = &Часы
	               |			ТОГДА ЕСТЬNULL(Результат.НормаЧасов, 0)
	               |		КОГДА Результат.ЕдиницаВремени = &Смены
	               |			ТОГДА ЕСТЬNULL(Результат.НормаДней, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Норма,
	               |	Результат.ДатаОкончанияПериода,
	               |	Результат.ДатаНачалаПериода,
	               |	Результат.ДолжностьПоШтатномуРасписанию,
	               |	Результат.ЕдиницаВремени,
	               |	Результат.ОснованиеСпецСтажа,
	               |	Результат.Приказ,
	               |	Результат.Сезонность,
	               |	Результат.Сотрудник
	               |ИЗ
	               |	Результат КАК Результат";
	
	Запрос.Текст = ЗапросТекст;	
	
	ОсновнаяТаблицаСНормой = Запрос.Выполнить().Выгрузить();
	ОсновнаяТаблица.Очистить();
	
	
	ПараметрыЗаполнения = УчетРабочегоВремени.ПараметрыДляЗапросВТДанныеУчетаВремениИСостоянийСотрудников();
	
	ПараметрыЗаполнения.ИмяВТСотрудники = "ВТСотрудники";
	ПараметрыЗаполнения.ИмяВТРезультат = "ВТДанныеУчетаВремениИСостоянийСотрудников";
	ПараметрыЗаполнения.РассчитыватьПлановоеВремя = Ложь;
	ПараметрыЗаполнения.Организация  = Организация;
	ПараметрыЗаполнения.ДатаАктуальности  = КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыЗаполнения.ДатаНачала = НачалоМесяца(Объект.ПериодРегистрации);
	ПараметрыЗаполнения.ДатаОкончания = КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыЗаполнения.МесяцДатаНачала = НачалоМесяца(Объект.ПериодРегистрации);
	ПараметрыЗаполнения.МесяцДатаОкончания = КонецМесяца(Объект.ПериодРегистрации);
	ПараметрыЗаполнения.ПолучатьУжеРассчитанныеДанные = Ложь;
	ПараметрыЗаполнения.ПолучатьУсловияТрудаИТерритории = Ложь;
	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаСотрудники", ОсновнаяТаблицаСНормой);
	Запрос.УстановитьПараметр("ДатаНачала", ПараметрыЗаполнения.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыЗаполнения.ДатаОкончания);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСотрудники.Сотрудник,
	|	ТаблицаСотрудники.ДатаНачалаПериода,
	|	ТаблицаСотрудники.ДатаОкончанияПериода
	|ПОМЕСТИТЬ ТаблицаСотрудники
	|ИЗ
	|	&ТаблицаСотрудники КАК ТаблицаСотрудники 
	|;
	|
	|
	|ВЫБРАТЬ
	|	ТаблицаСотрудники.Сотрудник,
	|	ТаблицаСотрудники.ДатаНачалаПериода КАК ДатаНачала,
	|	ТаблицаСотрудники.ДатаОкончанияПериода КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	ТаблицаСотрудники КАК ТаблицаСотрудники";
	
	Запрос.Выполнить();
	
	УчетРабочегоВремени.СоздатьВТДанныеУчетаВремениИСостоянийСотрудников(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыЗаполнения);
	
	Запрос.УстановитьПараметр("Явка", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Явка"));
	Запрос.УстановитьПараметр("ВечерниеЧасы", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РаботаВечерниеЧасы"));
	Запрос.УстановитьПараметр("НочныеЧасы", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РаботаНочныеЧасы"));
	Запрос.УстановитьПараметр("Сверхурочно", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.Сверхурочные"));
	Запрос.УстановитьПараметр("РабочееВремя", ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыИспользованияРабочегоВремени.РабочееВремя"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеУчетаВремениИСостоянийСотрудников.Сотрудник КАК Сотрудник,
	|	ДанныеУчетаВремениИСостоянийСотрудников.Дни КАК ОтработаноДни,
	|	ДанныеУчетаВремениИСостоянийСотрудников.Часы КАК ОтработаноЧасы,
	|	ДанныеУчетаВремениИСостоянийСотрудников.Дата
	|ПОМЕСТИТЬ ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром
	|ИЗ
	|	ВТДанныеУчетаВремениИСостоянийСотрудников КАК ДанныеУчетаВремениИСостоянийСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыИспользованияРабочегоВремени КАК ОписаниеВидовВремени
	|		ПО ДанныеУчетаВремениИСостоянийСотрудников.ВидУчетаВремени = ОписаниеВидовВремени.Ссылка
	|ГДЕ
	|	(ОписаниеВидовВремени.Ссылка = &Явка
	|			ИЛИ ОписаниеВидовВремени.ОсновноеВремя = &Явка
	|			ИЛИ ОписаниеВидовВремени.Ссылка = &ВечерниеЧасы
	|			ИЛИ ОписаниеВидовВремени.ОсновноеВремя = &ВечерниеЧасы
	|			ИЛИ ОписаниеВидовВремени.Ссылка = &НочныеЧасы
	|			ИЛИ ОписаниеВидовВремени.ОсновноеВремя = &НочныеЧасы
	|			ИЛИ ОписаниеВидовВремени.Ссылка = &Сверхурочно
	|			ИЛИ ОписаниеВидовВремени.ОсновноеВремя = &Сверхурочно)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОНЕЦПЕРИОДА(ДанныеУчетаВремениИСостоянийСотрудников.Дата, МЕСЯЦ) КАК Период,
	|	ДанныеУчетаВремениИСостоянийСотрудников.Сотрудник
	|ПОМЕСТИТЬ ВТСотрудникиСПериодомКонцаМесяца
	|ИЗ
	|	ВТДанныеУчетаВремениИСостоянийСотрудников КАК ДанныеУчетаВремениИСостоянийСотрудников";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром.Сотрудник КАК Сотрудник,
	               |	ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром.ОтработаноДни КАК ОтработаноДней,
	               |	ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром.ОтработаноЧасы КАК ОтработаноЧасов,
	               |	ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром.Дата КАК Дата
	               |ПОМЕСТИТЬ ВТОтработанноеВремяПоДням
	               |ИЗ
	               |	ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром КАК ВТДанныеУчетаВремениИСостоянийСотрудниковСФильтром
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТСотрудникиПериоды.Сотрудник КАК Сотрудник,
	               |	ВТСотрудникиПериоды.ДатаНачалаПериода КАК ДатаНачалаПериода,
	               |	ВТСотрудникиПериоды.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	               |	ВТСотрудникиПериоды.Сезонность,
	               |	ВТСотрудникиПериоды.ГрафикРаботы,
	               |	ВТСотрудникиПериоды.ЕдиницаВремени,
	               |	ВТСотрудникиПериоды.ДолжностьПоШтатномуРасписанию,
	               |	ВТСотрудникиПериоды.Норма,
	               |	ВТСотрудникиПериоды.Приказ,
	               |	ВТСотрудникиПериоды.ОснованиеСпецСтажа
	               |ПОМЕСТИТЬ ВТСотрудникиПериоды
	               |ИЗ
	               |	&ТаблицаСотрудники КАК ВТСотрудникиПериоды
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник,
	               |	ДатаНачалаПериода,
	               |	ДатаОкончанияПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТСотрудникиПериоды.Сотрудник,
	               |	ВТСотрудникиПериоды.ДатаНачалаПериода,
	               |	ВТСотрудникиПериоды.ДатаОкончанияПериода,
	               |	СУММА(ВТОтработанноеВремяПоДням.ОтработаноДней) КАК ОтработаноДней,
	               |	СУММА(ВТОтработанноеВремяПоДням.ОтработаноЧасов) КАК ОтработаноЧасов,
	               |	ВТСотрудникиПериоды.Сезонность,
	               |	ВТСотрудникиПериоды.ГрафикРаботы,
	               |	ВТСотрудникиПериоды.ЕдиницаВремени,
	               |	ВТСотрудникиПериоды.ДолжностьПоШтатномуРасписанию,
	               |	ВТСотрудникиПериоды.Норма,
	               |	ВТСотрудникиПериоды.Приказ,
	               |	ВТСотрудникиПериоды.ОснованиеСпецСтажа
	               |ПОМЕСТИТЬ Результат
	               |ИЗ
	               |	ВТСотрудникиПериоды КАК ВТСотрудникиПериоды
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтработанноеВремяПоДням КАК ВТОтработанноеВремяПоДням
	               |		ПО ВТСотрудникиПериоды.Сотрудник = ВТОтработанноеВремяПоДням.Сотрудник
	               |			И ВТСотрудникиПериоды.ДатаНачалаПериода <= ВТОтработанноеВремяПоДням.Дата
	               |			И ВТСотрудникиПериоды.ДатаОкончанияПериода >= ВТОтработанноеВремяПоДням.Дата
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТСотрудникиПериоды.Сотрудник,
	               |	ВТСотрудникиПериоды.ДатаНачалаПериода,
	               |	ВТСотрудникиПериоды.ДатаОкончанияПериода,
	               |	ВТСотрудникиПериоды.Сезонность,
	               |	ВТСотрудникиПериоды.ГрафикРаботы,
	               |	ВТСотрудникиПериоды.ЕдиницаВремени,
	               |	ВТСотрудникиПериоды.ДолжностьПоШтатномуРасписанию,
	               |	ВТСотрудникиПериоды.Норма,
	               |	ВТСотрудникиПериоды.Приказ,
	               |	ВТСотрудникиПериоды.ОснованиеСпецСтажа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Результат.Сотрудник КАК Сотрудник,
	               |	Результат.ДатаНачалаПериода КАК ДатаНачала,
	               |	Результат.ДатаОкончанияПериода КАК ДатаОкончания,
	               |	Результат.ОтработаноДней,
	               |	Результат.ОтработаноЧасов,
	               |	Результат.Сезонность,
	               |	ВЫБОР
	               |		КОГДА Результат.ЕдиницаВремени = &КалендарныеДни
	               |			ТОГДА НЕОПРЕДЕЛЕНО
	               |		ИНАЧЕ Результат.ГрафикРаботы
	               |	КОНЕЦ КАК ГрафикНормы,
	               |	Результат.ЕдиницаВремени,
	               |	Результат.ДолжностьПоШтатномуРасписанию,
	               |	Результат.Норма,
	               |	ВЫБОР
	               |		КОГДА Результат.ЕдиницаВремени = &КалендарныеДни
	               |			ТОГДА РАЗНОСТЬДАТ(Результат.ДатаНачалаПериода, Результат.ДатаОкончанияПериода, ДЕНЬ) + 1
	               |		КОГДА Результат.ЕдиницаВремени = &Часы
	               |			ТОГДА ЕСТЬNULL(Результат.ОтработаноЧасов, 0)
	               |		КОГДА Результат.ЕдиницаВремени = &Смены
	               |			ТОГДА ЕСТЬNULL(Результат.ОтработаноДней, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Результат,
	               |	Результат.Приказ,
	               |	Результат.ОснованиеСпецСтажа КАК ОснованияСпецСтажа
	               |ИЗ
	               |	Результат КАК Результат
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник,
	               |	ДатаНачала";
				   
	Запрос.УстановитьПараметр("КалендарныеДни", Перечисления.ЕдиницыВремениУчетаСпецстажа.КалендарныеДни);
	Запрос.УстановитьПараметр("Часы", Перечисления.ЕдиницыВремениУчетаСпецстажа.Часы);
	Запрос.УстановитьПараметр("Смены", Перечисления.ЕдиницыВремениУчетаСпецстажа.Смены);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Объект.Спецстаж.Загрузить(Результат);
	Иначе
		Для Каждого Строка ИЗ Результат Цикл
			Запись = Объект.Спецстаж.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Строка);
		КонецЦикла;
		Объект.Спецстаж.Сортировать("Сотрудник, ДатаНачала");
	КонецЕсли;
	
	Если Объект.Спецстаж.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Нет информации для заполнения данных о стаже';uk='Немає інформації для заповнення даних про стажі'"));
	КонецЕсли;

	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОрганизации(Команда)
	
	Если ЗначениеЗаполнено(Объект.Организация) И ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
		ЗаполнитьСпецстажНаСервере(Объект.Организация, Объект.ПодразделениеОрганизации,);
	Иначе
		ПустойРеквизит = ?(ЗначениеЗаполнено(Объект.Организация), НСтр("ru='Период регистрации';uk='Період реєстрації'"),НСтр("ru='Организация';uk='Організація'"));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен реквизит ';uk='Не заповнено реквізит '") + ПустойРеквизит + НСтр("ru=', заполнение документа не выполнено!';uk=' заповнення документа не виконано!'"));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Модифицированность);
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтотОбъект, ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПериодРегистрацииСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Направление, Модифицированность);
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗначенияДляЗаполнения = Новый Структура;
		ЗначенияДляЗаполнения.Вставить("Месяц", "Объект.ПериодРегистрации");
		ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
		ЗначенияДляЗаполнения.Вставить("Ответственный", "Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	ПриПолученииДанныхНаСервере(ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере(ТекущийОбъект)
		
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");	
		
	ОписаниеКлючевыхРеквизитов = КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов();
	ТаблицыОчищаемыеПриИзменении = КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении();
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(ЭтаФорма, , ОписаниеКлючевыхРеквизитов, ТаблицыОчищаемыеПриИзменении);
	
	ЗарплатаКадры.КлючевыеРеквизитыЗаполненияФормыЗаполнитьПредупреждения(ЭтаФорма, ОписаниеКлючевыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыОписаниеКлючевыхРеквизитов() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "Организация", НСтр("ru='организации';uk='організації'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ПодразделениеОрганизации", НСтр("ru='подразделения';uk='підрозділи'")));
	Массив.Добавить(Новый Структура("ЭлементФормы, Представление", "ПериодРегистрацииСтрокой", НСтр("ru='периода регистрации';uk='періоду реєстрації'")));
	Возврат Массив
	
КонецФункции

&НаСервере
Функция КлючевыеРеквизитыЗаполненияФормыТаблицыОчищаемыеПриИзменении() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("Объект.Спецстаж");
	Возврат Массив
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииСоставаОчищаемойТаблицы(Форма)
	
	ЗарплатаКадрыКлиентСервер.КлючевыеРеквизитыЗаполненияФормыУстановитьОтображениеПредупреждения(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура СпецстажПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ПриИзмененииСоставаОчищаемойТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СпецстажПриИзменении(Элемент)
	
	ПриИзмененииСоставаОчищаемойТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СпецстажОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПриИзмененииСоставаОчищаемойТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СпецстажПослеУдаления(Элемент)
	
	ПриИзмененииСоставаОчищаемойТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.КлючевыеРеквизитыЗаполненияФормыОчиститьТаблицы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСотрудникаНаСервере(Сотрудник)
	
	ТабличнаяЧасть = Объект.Спецстаж.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
	Для каждого Стр Из ТабличнаяЧасть Цикл
		Объект.Спецстаж.Удалить(Стр.НомерСтроки - 1);
	КонецЦикла;
	
	ЗаполнитьСпецстажНаСервере(Объект.Организация, Объект.ПодразделениеОрганизации, Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСотрудника(Команда)
	
	ИзменитьСотрудникаНаСервере(Элементы.Спецстаж.ТекущиеДанные.Сотрудник);
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеИсправленияНаСервере()
	ЗаполнитьСпецстажНаСервере(Объект.Организация, Объект.ПодразделениеОрганизации,);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеИсправления(Команда)
	ОтменитьВсеИсправленияНаСервере();
КонецПроцедуры




