#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирование списка доступных типов операций ввода начальных остатков.
//
// Параметры:
// 		СписокТиповОпераций - СписокЗначений
//
Процедура ПолучитьСписокТиповОпераций(СписокТиповОпераций) Экспорт
	
	СписокТиповОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиОС);
	СписокТиповОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиНМА);
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ПрограммныйИнтерфейс

#Область Представление

// Возвращает структуру параметров процедуры "ПредставлениеДокумента"
//
Функция ПредставлениеДокументаСтруктураПараметров() Экспорт
	
	Возврат Новый Структура("Ссылка, Номер, Дата, ТипОперации");
	
КонецФункции

// Возвращает представлние документа
//
// Параметры:
// 		Объект - ДанныеФормыСтруктура, Структура - Структура описания объекта, по которому требуется получить представление,
// 			необходимые реквизиты описаны в функции "ПредставлениеДокументаСтруктураПараметров"
//
// Возвращаемое значение:
// 		Строка - Представление документа
//
Функция ПредставлениеДокумента(Объект) Экспорт
	
	РеквизитыОбъекта = ПредставлениеДокументаСтруктураПараметров();
	ЗаполнитьЗначенияСвойств(РеквизитыОбъекта, Объект);
	
	Если Не ЗначениеЗаполнено(РеквизитыОбъекта.ТипОперации) Тогда
		Возврат "";
	КонецЕсли;
	
	ПредставлениеНомерДата = НСтр("ru='(создание)';uk='(створення)'");
	Если ЗначениеЗаполнено(РеквизитыОбъекта.Ссылка) Тогда
		ПредставлениеНомерДата = СтрШаблон(НСтр("ru='%1 от %2';uk=' %1 від %2'"), РеквизитыОбъекта.Номер, РеквизитыОбъекта.Дата);
	КонецЕсли;
	
	Представление = НСтр("ru='Ввод начальных остатков необоротных активов %1';uk='Введення початкових залишків необоротних активів %1'");
	Если РеквизитыОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиОС Тогда
		Представление = НСтр("ru='Ввод начальных остатков основных средств %1';uk='Введення початкових залишків основних засобів, %1'");
	ИначеЕсли РеквизитыОбъекта.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиНМА Тогда
		Представление = НСтр("ru='Ввод начальных остатков нематериальных активов %1';uk='Введення початкових залишків нематеріальних активів, %1'");
	КонецЕсли;
	
	Возврат СтрШаблон(Представление, ПредставлениеНомерДата);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ВыбраннаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВыбраннаяОперация = Параметры.Ключ.ТипОперации;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ТипОперации", ВыбраннаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ВводОстатковВнеоборотныхАктивов.ТипОперации КАК ТипОперации
			|ИЗ
			|	Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
			|ГДЕ
			|	ВводОстатковВнеоборотныхАктивов.Ссылка = &ЗначениеКопирования");
		Запрос.УстановитьПараметр("ЗначениеКопирования", Параметры.ЗначениеКопирования);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ВыбраннаяОперация = Выборка.ТипОперации;
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("ОтборПоТипамОпераций") И Параметры.ОтборПоТипамОпераций.Количество() = 1 Тогда
		ВыбраннаяОперация = Параметры.ОтборПоТипамОпераций[0].Значение;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ТипОперации", ВыбраннаяОперация);
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		Если Параметры.Свойство("Организация") Тогда
			ЗначенияЗаполнения.Вставить("Организация", Параметры.Организация);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбраннаяОперация) Тогда
		Если ВыбраннаяОперация = Перечисления.ТипыОперацийВводаОстатков.ОстаткиОС
			Или ВыбраннаяОперация = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаНаБалансе Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаОсновныеСредства";
		ИначеЕсли ВыбраннаяОперация = Перечисления.ТипыОперацийВводаОстатков.ОстаткиНМА Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаНематериальныеАктивы";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ТипОперации");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Представление = ПредставлениеДокумента(Данные);
	Если Не ПустаяСтрока(Представление) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	МестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	НачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	НачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияНМАБухгалтерскийУчетУКР(ТекстыЗапроса, Регистры);
	МестонахождениеНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияНМАНалоговыйУчетУКР(ТекстыЗапроса, Регистры);
	СобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	СостоянияОСОрганизаций(ТекстыЗапроса, Регистры);
	СостоянияНМАОрганизаций(ТекстыЗапроса, Регистры);
	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетУКР(ТекстыЗапроса, Регистры);	 
	СчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	СчетаБухгалтерскогоУчетаНМА(ТекстыЗапроса, Регистры);
	
	ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	
	ПереоценкаНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	
	НалоговыеНазначенияОС(ТекстыЗапроса, Регистры);
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.ТипОперации КАК ТипОперации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
КонецПроцедуры

Процедура ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаОС";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.ИнвентарныйНомер,
	|	ТаблицаОС.СчетУчета,
	|	ТаблицаОС.СчетАмортизации,
	|	ТаблицаОС.МОЛ,
	|	ТаблицаОС.АдресМестонахождения,
	|	ТаблицаОС.МетодНачисленияАмортизацииБУ,
	|	ТаблицаОС.СрокИспользованияБУ,	
	|	ТаблицаОС.ГрафикАмортизацииБУ,
	|	ТаблицаОС.ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработкиБУ,
	|	ТаблицаОС.НачислятьАмортизациюНУ,
	|	ТаблицаОС.СрокИспользованияНУ,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ,
	|	ТаблицаОС.ПервоначальнаяСтоимостьНУ,
	|	ТаблицаОС.ТекущаяСтоимостьБУ,
	|	ТаблицаОС.ТекущаяСтоимостьНУ,
	|	ТаблицаОС.НакопленнаяАмортизацияБУ,
	|	ТаблицаОС.НакопленнаяАмортизацияНУ,
	|	ТаблицаОС.НазваниеДокументаПринятияКУчету,
	|	ТаблицаОС.НомерДокументаПринятияКУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.ДатаПринятияКУчету = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &Период
	|		ИНАЧЕ ТаблицаОС.ДатаПринятияКУчету
	|	КОНЕЦ КАК ДатаПринятияКУчету,
	|	ТаблицаОС.СобытиеПринятияКУчету,
	|	ТаблицаОС.НазваниеДокументаМодернизации,
	|	ТаблицаОС.НомерДокументаМодернизации,
	|	ТаблицаОС.ДатаМодернизации,
	|	ТаблицаОС.СобытиеМодернизации,
	|	ТаблицаОС.АналитикаРасходовНалог,
	|	ТаблицаОС.НалоговаяГруппаОС,
	|	ТаблицаОС.НалоговоеНазначение,
	|	ТаблицаОС.СчетУчетаДооценокОС,
	|	ТаблицаОС.СпособНачисленияАмортизацииНУ,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьБУ,
	|	ТаблицаОС.СуммаПоследнейМодернизацииБУ,
	|	ТаблицаОС.ПревышениеСуммДооценокНадСуммамиУценокБУ,
	|	ТаблицаОС.СуммаДопКапиталаНачисленногоПриДооценкахОСБУ,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов,
	|	ТаблицаОС.СчетПередачиРасходов,
	|	ТаблицаОС.ЕстьСобытияМодернизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.СтатьяРасходовАмортизации,
	|	ТаблицаОС.АналитикаРасходовАмортизации,
	|	ТаблицаОС.НачислятьАмортизациюБУ
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	И ТаблицаОС.Ссылка = &Ссылка"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаНМА";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаНМА
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.Ссылка,
	|	ТаблицаНМА.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаНМА.ДатаПринятияКУчетуРегл = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &Период
	|		ИНАЧЕ ТаблицаНМА.ДатаПринятияКУчетуРегл
	|	КОНЕЦ КАК ДатаПринятияКУчетуРегл,
	|	ТаблицаНМА.СпособНачисленияАмортизацииНУ,
	
	|	ТаблицаНМА.НакопленнаяАмортизацияБУ,
	|	ТаблицаНМА.НакопленнаяАмортизацияНУ,	
	|	ТаблицаНМА.НачислятьАмортизациюБУ,
	|	ТаблицаНМА.НачислятьАмортизациюНУ,
	|	ТаблицаНМА.НематериальныйАктив,
	|	ТаблицаНМА.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаНМА.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаНМА.ПервоначальнаяСтоимостьБУ,
	|	ТаблицаНМА.ПервоначальнаяСтоимостьНУ,
	|	ТаблицаНМА.РеквизитыДокументаОплаты,
	|	ТаблицаНМА.СпособНачисленияАмортизацииБУ,
	|	ТаблицаНМА.ЛиквидационнаяСтоимостьБУ,	
	|	ТаблицаНМА.СрокПолезногоИспользованияБУ,
	|	ТаблицаНМА.СрокПолезногоИспользованияНУ,
	|	ТаблицаНМА.СчетАмортизации,
	|	ТаблицаНМА.СчетУчета,
	|	ТаблицаНМА.СчетУчетаДооценокНМА,	
	|	ТаблицаНМА.ПревышениеСуммДооценокНадСуммамиУценокБУ,
	|	ТаблицаНМА.СуммаДопКапиталаНачисленногоПриДооценкахНМАБУ,
	|	ТаблицаНМА.МОЛ,
	|	ТаблицаНМА.НалоговаяГруппаОС,
	|	ТаблицаНМА.НалоговоеНазначение,
	|	ТаблицаНМА.Подразделение,
	|	0 КАК ТекущаяСтоимостьНУ,
	|	0 КАК ТекущаяСтоимостьПР,
	|ТаблицаНМА.СчетУчетаДооценокНМА,
	|ТаблицаНМА.ПревышениеСуммДооценокНадСуммамиУценокБУ,
	|ТаблицаНМА.СуммаДопКапиталаНачисленногоПриДооценкахНМАБУ,
	|	ТаблицаНМА.СтатьяРасходовАмортизации,
	|	ТаблицаНМА.АналитикаРасходовАмортизации
	|ПОМЕСТИТЬ ТаблицаНМА
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ТаблицаНМА
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНМА)
	|	И ТаблицаНМА.Ссылка = &Ссылка"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикиАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ГрафикиАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ГрафикАмортизацииБУ КАК ГрафикАмортизации
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.ГрафикАмортизацииБУ <> ЗНАЧЕНИЕ(Справочник.ГодовыеГрафикиАмортизацииОС.ПустаяСсылка)
	|	И &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура МестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица МестонахождениеОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.МОЛ КАК МОЛ,
	|	&Подразделение КАК Местонахождение,
	|	ТаблицаОС.АдресМестонахождения КАК АдресМестонахождения
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	
	|"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура НачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НачислениеАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.НачислятьАмортизациюБУ КАК НачислятьАмортизацию
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура НачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НачислениеАмортизацииОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.НачислятьАмортизациюНУ КАК НачислятьАмортизацию
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#Область НЕУКР
#КонецОбласти 

Процедура ПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПараметрыАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработкиБУ КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьБУ КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработкиБУ КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	И НЕ ТаблицаОС.ЕстьСобытияМодернизации
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ + РАЗНОСТЬДАТ(ТаблицаОС.ДатаПринятияКУчету, ТаблицаОС.ДатаМодернизации, МЕСЯЦ) КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработкиБУ КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработкиБУ КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	И ТаблицаОС.ЕстьСобытияМодернизации
	|	И (ТаблицаОС.МетодНачисленияАмортизацииБУ <> ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|	)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработкиБУ КАК ОбъемПродукцииРабот,
	|	ТаблицаОС.СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ОбъемНаработкиБУ КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	И ТаблицаОС.ЕстьСобытияМодернизации
	|	И (ТаблицаОС.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПараметрыАмортизацииОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	 ТаблицаОС.СрокИспользованияНУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.СрокИспользованияНУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьНУ КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	ТаблицаОС.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ТаблицаОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьБУ КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	 &ТипОперации  = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ТаблицаОС.НомерСтроки,
	//|	
	//|	&Ссылка КАК Регистратор,
	//|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	//|	
	//|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	//|	
	//|	&Организация КАК Организация,
	//|	ТаблицаОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	//|	ТаблицаОС.ДоговорЛизинга КАК ДоговорЛизинга,
	//|	НЕОПРЕДЕЛЕНО КАК СпособПоступления,
	//|	НЕОПРЕДЕЛЕНО КАК ПервоначальнаяСтоимость,
	//|	НЕОПРЕДЕЛЕНО КАК СпособНачисленияАмортизации,
	//|	НЕОПРЕДЕЛЕНО КАК ПоказательНаработки,
	//|	НЕОПРЕДЕЛЕНО КАК ПорядокПогашенияСтоимости,
	//|	НЕОПРЕДЕЛЕНО КАК ГруппаОС,
	//|	НЕОПРЕДЕЛЕНО КАК КодПоОКОФ,
	//|	НЕОПРЕДЕЛЕНО КАК ШифрПоЕНАОФ,
	//
	//|	ТаблицаОС.ЛиквидационнаяСтоимостьБУ КАК ЛиквидационнаяСтоимость,
	//
	//|	НЕОПРЕДЕЛЕНО КАК АмортизационнаяГруппа
	//|ИЗ
	//|	ТаблицаОС КАК ТаблицаОС
	//|ГДЕ
	//
	//
	//|	 &ТипОперации  = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	//
	//|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

 

Процедура ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	
	ИмяРегистра = "ПереоценкаОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПереоценкаОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ПревышениеСуммДооценокНадСуммамиУценокБУ КАК СуммаПереоценки
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.СчетУчетаДооценокОС <> """"
	|	И ТаблицаОС.ПревышениеСуммДооценокНадСуммамиУценокБУ > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	&Ссылка,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ТаблицаОС.ОсновноеСредство,
	|	-ТаблицаОС.ПревышениеСуммДооценокНадСуммамиУценокБУ
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.СчетУчетаДооценокОС <> """"
	|	И ТаблицаОС.ПревышениеСуммДооценокНадСуммамиУценокБУ <= 0"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПереоценкаНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	
	ИмяРегистра = "ПереоценкаНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПереоценкаНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ТаблицаНМА.ПревышениеСуммДооценокНадСуммамиУценокБУ КАК СуммаПереоценки
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.СчетУчетаДооценокНМА <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И ТаблицаНМА.ПревышениеСуммДооценокНадСуммамиУценокБУ > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	&Ссылка,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ТаблицаНМА.НематериальныйАктив,
	|	-ТаблицаНМА.ПревышениеСуммДооценокНадСуммамиУценокБУ
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.СчетУчетаДооценокНМА <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И ТаблицаНМА.ПревышениеСуммДооценокНадСуммамиУценокБУ < 0"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура НалоговыеНазначенияОС(ТекстыЗапроса, Регистры) 
	ИмяРегистра = "НалоговыеНазначенияОС";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НалоговыеНазначенияОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияНМАБухгалтерскийУчетУКР(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНМА.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	ТаблицаНМА.НачислятьАмортизациюБУ КАК НачислятьАмортизацию,
	|	ТаблицаНМА.СпособНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ТаблицаНМА.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаНМА.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаНМА.ЛиквидационнаяСтоимостьБУ КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНМА.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура МестонахождениеНМАБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	/////////////////////////////
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица МестонахождениеНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНМА.Подразделение КАК Местонахождение,
	|	ТаблицаНМА.НачислятьАмортизациюБУ КАК НачислятьАмортизацию,
	|	ТаблицаНМА.МОЛ КАК МОЛ
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНМА.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);

КонецПроцедуры

Процедура ПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.НалоговоеНазначение КАК НалоговоеНазначение,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаОС.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ТаблицаОС.НалоговаяГруппаОС КАК НалоговаяГруппаОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

 
Процедура ПервоначальныеСведенияНМАНалоговыйУчетУКР(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияНМАНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияНМАНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	
	 |	ТаблицаНМА.СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	ТаблицаНМА.НачислятьАмортизациюНУ КАК НачислятьАмортизацию,
	|	&Организация КАК Организация,
	|	ТаблицаНМА.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ТаблицаНМА.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользования,
	|	ТаблицаНМА.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	ТаблицаНМА.НалоговоеНазначение КАК НалоговоеНазначение
	
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНМА.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СобытияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СобытиеПринятияКУчету КАК Событие,
	|	
	|	ТаблицаОС.НазваниеДокументаПринятияКУчету КАК НазваниеДокумента,
	|	ТаблицаОС.НомерДокументаПринятияКУчету КАК НомерДокумента
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.ДатаПринятияКУчету<>ДАТАВРЕМЯ(1,1,1,0,0,0)
	|	И &ТипОперации  = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаМодернизации КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СобытиеМодернизации КАК Событие,
	|	
	|	ТаблицаОС.НазваниеДокументаМодернизации КАК НазваниеДокумента,
	|	ТаблицаОС.НомерДокументаМодернизации КАК НомерДокумента
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.ЕстьСобытияМодернизации
	|	И &ТипОперации  = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СостоянияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СостоянияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.ДатаПринятияКУчету КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|
	|"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СостоянияНМАОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияНМАОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СостоянияНМАОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаНМА.ДатаПринятияКУчетуРегл КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету) КАК Состояние
	|	
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНМА.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СтатьяРасходовАмортизации КАК СтатьяРасходов,
	|	ТаблицаОС.АналитикаРасходовАмортизации КАК АналитикаРасходов,
	|	ТаблицаОС.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ТаблицаОС.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	ТаблицаОС.СчетПередачиРасходов КАК СчетПередачиРасходов
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС))
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

 
Процедура СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчетУКР(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	ТаблицаНМА.ДатаПринятияКУчетуРегл КАК Период,
	|
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	&Организация КАК Организация,
	|
	|	ТаблицаНМА.СтатьяРасходовАмортизации КАК СтатьяРасходов,
	|	ТаблицаНМА.АналитикаРасходовАмортизации КАК АналитикаРасходов
	|
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|ГДЕ
	|	ТаблицаНМА.НачислятьАмортизациюБУ ИЛИ ТаблицаНМА.НачислятьАмортизациюНУ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНМА.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СчетаБухгалтерскогоУчетаОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчету КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ТаблицаОС.СчетУчета КАК СчетУчета,
	|	ТаблицаОС.СчетАмортизации КАК СчетНачисленияАмортизации,
	|	ТаблицаОС.СчетУчетаДооценокОС КАК СчетУчетаДооценокОС
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ТипОперации В (	
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|	)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СчетаБухгалтерскогоУчетаНМА(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СчетаБухгалтерскогоУчетаНМА";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНематериальныхАктивов(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СчетаБухгалтерскогоУчетаНМА
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНМА.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	ТаблицаНМА.ДатаПринятияКУчетуРегл КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	
	|	ТаблицаНМА.СчетУчета КАК СчетУчета,
	|ТаблицаНМА.СчетУчетаДооценокНМА КАК СчетУчетаДооценокНМА,
	|	ТаблицаНМА.СчетАмортизации КАК СчетНачисленияАмортизации
	|	
	|ИЗ
	|	ТаблицаНМА КАК ТаблицаНМА
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНМА.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры


Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ТаблицаОС.ДатаПринятияКУчету, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|"+";";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчетуУКР

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
#Область ТекстСчетУчетаОС // (Дт СчетУчета :: Кт 00)
	ТекстСчетУчетаОС =  "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета ОС (Дт СчетУчета :: Кт 00)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ТекущаяСтоимостьБУ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	Строки.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА Строки.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|			ТОГДА 0
	|	ИНАЧЕ Строки.ТекущаяСтоимостьНУ 
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета ОС"" КАК Содержание
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (	
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|	)";
#КонецОбласти 	

#Область ТекстАмортизацияОС // (Дт 00 :: Кт СчетАмортизации)
	ТекстАмортизацияОС =  "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация ОС (Дт 00 :: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.НакопленнаяАмортизацияБУ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт,
	|
	|	Строки.СчетАмортизации КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.НакопленнаяАмортизацияНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Накопленная амортизация ОС"" КАК Содержание
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|	)
	|";
#КонецОбласти 

#Область ТекстСчетУчетаНМА // (Дт СчетУчета :: Кт 00)
	ТекстСчетУчетаНМА = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета НМА (Дт СчетУчета :: Кт 00)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ПервоначальнаяСтоимостьБУ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	Строки.НалоговоеНазначение КАК НалоговоеНазначениеДт, 
	|	
	|	Строки.СчетУчета КАК СчетДт,
	|	Строки.НематериальныйАктив КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.ПервоначальнаяСтоимостьНУ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт, 
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки счета учета НМА"" КАК Содержание
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНМА)";
#КонецОбласти 

#Область ТекстАмортизацияНМА // (Дт 00 :: Кт СчетАмортизации)
	ТекстАмортизацияНМА = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация НМА (Дт 00 :: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.НакопленнаяАмортизацияБУ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт, 
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	Строки.НалоговоеНазначение КАК НалоговоеНазначениеКт, 
	|	
	|	Строки.СчетАмортизации КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.НакопленнаяАмортизацияНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Накопленная амортизация НМА"" КАК Содержание
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНМА)
	|";
	
#КонецОбласти 

#Область ТекстДооценкаВосстановительнойСтоимости // Дт СчетУчета :: Кт СчетУчетаДооценокОС
	ТекстДооценкаВосстановительнойСтоимости = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Дооценка восстановительной стоимости (Дт СчетУчета :: Кт СчетУчетаДооценокОС)
	|ВЫБРАТЬ 
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаДопКапиталаНачисленногоПриДооценкахОСБУ КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	                     	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	Строки.СчетУчетаДооценокОС КАК СчетКт,	
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Переоценка ОС"" КАК Содержание
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Строки.СуммаДопКапиталаНачисленногоПриДооценкахОСБУ > 0
	|";
#КонецОбласти 

#Область ТекстДооценкаВосстановительнойСтоимости // Дт СчетУчета :: Кт СчетУчетаДооценокНМА
	ТекстДооценкаВосстановительнойСтоимостиНМА = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Дооценка восстановительной стоимости (Дт СчетУчета :: Кт СчетУчетаДооценокНМА)
	|
	|ВЫБРАТЬ 
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаДопКапиталаНачисленногоПриДооценкахНМАБУ КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	                     	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	Строки.СчетУчетаДооценокНМА КАК СчетКт,
	|	Строки.НематериальныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Переоценка НМА"" КАК Содержание
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	 |	Строки.СуммаДопКапиталаНачисленногоПриДооценкахНМАБУ > 0
	|";
#КонецОбласти

	Разделитель = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	
	Возврат ТекстСчетУчетаОС
	+ Разделитель + ТекстАмортизацияОС
	+ Разделитель + ТекстСчетУчетаНМА
	+ Разделитель + ТекстАмортизацияНМА
	+ Разделитель + ТекстДооценкаВосстановительнойСтоимостиНМА
	+ Разделитель + ТекстДооценкаВосстановительнойСтоимости;
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат "";
	
КонецФункции


#КонецОбласти

#Область ОбработчикиОбновления

Процедура ОбработчикОбновления_2_1_3_ОтметитьКОбработке(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиОС)
	|	И (НЕ ТабличнаяЧасть.ПервоначальнаяСтоимостьОтличается
	|				И НЕ(ТабличнаяЧасть.ПервоначальнаяСтоимостьБУ = ТабличнаяЧасть.ТекущаяСтоимостьБУ
	|						И ТабличнаяЧасть.ПервоначальнаяСтоимостьНУ = ТабличнаяЧасть.ТекущаяСтоимостьНУ
	|						И ТабличнаяЧасть.ПервоначальнаяСтоимостьПР = ТабличнаяЧасть.ТекущаяСтоимостьПР)
	|			ИЛИ НЕ ТабличнаяЧасть.ЕстьСобытияМодернизации
	|				И ТабличнаяЧасть.ДатаМодернизации <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНМА)
	|	И (НЕ ТабличнаяЧасть.ПервоначальнаяСтоимостьОтличается
	|				И НЕ(ТабличнаяЧасть.ПервоначальнаяСтоимостьБУ = ТабличнаяЧасть.ТекущаяСтоимостьБУ
	|						И ТабличнаяЧасть.ПервоначальнаяСтоимостьНУ = ТабличнаяЧасть.ТекущаяСтоимостьНУ))";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработчикОбновления_2_1_3(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ВводОстатковВнеоборотныхАктивов";
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВТ);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	втДокументыКЗаполнению.Ссылка КАК Ссылка
	|ИЗ
	|	ВТДляОбработки КАК втДокументыКЗаполнению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	""ОС"" КАК ИмяТЧ,
	|	ВЫБОР
	|		КОГДА НЕ(ТабличнаяЧасть.ПервоначальнаяСтоимостьБУ = ТабличнаяЧасть.ТекущаяСтоимостьБУ
	|					И ТабличнаяЧасть.ПервоначальнаяСтоимостьНУ = ТабличнаяЧасть.ТекущаяСтоимостьНУ
	|					И ТабличнаяЧасть.ПервоначальнаяСтоимостьПР = ТабличнаяЧасть.ТекущаяСтоимостьПР)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьОтличается,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаМодернизации <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьСобытияМодернизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК втДокументыКЗаполнению
	|		ПО ТабличнаяЧасть.Ссылка = втДокументыКЗаполнению.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	""НМА"" КАК ИмяТЧ,
	|	ВЫБОР
	|		КОГДА НЕ(ТабличнаяЧасть.ПервоначальнаяСтоимостьБУ = ТабличнаяЧасть.ТекущаяСтоимостьБУ
	|					И ТабличнаяЧасть.ПервоначальнаяСтоимостьНУ = ТабличнаяЧасть.ТекущаяСтоимостьНУ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьОтличается,
	|	ЛОЖЬ КАК ЕстьСобытияМодернизации
	|ИЗ
	|	Документ.ВводОстатковВнеоборотныхАктивов.НМА КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК втДокументыКЗаполнению
	|		ПО ТабличнаяЧасть.Ссылка = втДокументыКЗаполнению.Ссылка
	|	
	|ИТОГИ ПО
	|	Ссылка";
	#КонецОбласти
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Пакет[0].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Выборка = Пакет[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ВводОстатковВнеоборотныхАктивов");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ВыборкаТЧ = Выборка.Выбрать();
		Пока ВыборкаТЧ.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект[ВыборкаТЧ.ИмяТЧ][ВыборкаТЧ.ИндексСтроки], ВыборкаТЧ);
		КонецЦикла;
		
		ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			
			ОбработаноОбъектов = ОбработаноОбъектов - 1;
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru='Не удалось заполнить признаки отличия первоначальной стоимости и выполенной модернизации
                |в табличной части документа ""%1"" по причине:
                |%2'
                |;uk='Не вдалося заповнити ознаки відмінності первісної вартості і виконаної модернізації
                |у табличній частині документа ""%1"" з причини:
                |%2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(),
				Выборка.Ссылка,
				ТекстСообщения);
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не выполнено заполние признаков отличия первоначальной стоимости и выполненной модернизации для некоторых документов ввода остатков необоротных активов (пропущены): %1';uk='Не виконано заповнення ознак відмінності первісної вартості і виконаної модернізації для деяких документів введення залишків необоротних активів (пропущені): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеКоманды

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Команда = Документы.ИзменениеПараметровОС.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Если Команда <> Неопределено Тогда
		Команда.СписокФорм = "ФормаОсновныеСредства";
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.СписокФорм = "ФормаСписка, ФормаОсновныеСредства, ФормаНематериальныеАктивы, ФормаАрендованныеОсновныеСредства, ФормаРасчетыПоДоговорамЛизинга";
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли