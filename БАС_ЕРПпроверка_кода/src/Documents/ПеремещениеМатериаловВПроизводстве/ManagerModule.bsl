#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "ПодразделениеОтправитель,ПодразделениеПолучатель,Статус,Дата,ХозяйственнаяОперация";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

//Возвращает параметры указания серий для материалов, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();            
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПеремещениеМатериаловВПроизводстве";
	
	ПараметрыУказанияСерий.ИмяТЧТовары = "МатериалыИРаботы";
	ПараметрыУказанияСерий.ИмяТЧСерии  = "Серии";
	
	ПараметрыСерийОтправитель = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.ПодразделениеОтправитель);
	ПараметрыСерийПолучатель  = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.ПодразделениеПолучатель);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийОтправитель.ИспользоватьСерииНоменклатуры
														Или ПараметрыСерийПолучатель.ИспользоватьСерииНоменклатуры
														Или ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийОтправитель.УчитыватьСебестоимостьПоСериям
														Или ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
														
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве);
	Если Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Принято Тогда
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещениюВПроизводстве);
	КонецЕсли;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НазначениеОтправителя");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	Если Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Принято Тогда
		ПараметрыУказанияСерий.ИмяПоляСклад = "ПодразделениеПолучатель";
	Иначе	
		ПараметрыУказанияСерий.ИмяПоляСклад = "ПодразделениеОтправитель";
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИмяПоляСкладОтправитель = "ПодразделениеОтправитель";
	ПараметрыУказанияСерий.ИмяПоляСкладПолучатель = "ПодразделениеПолучатель";
	
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.КОтгрузке;
	ПараметрыУказанияСерий.ПланированиеОтбора   = Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.КОтгрузке;
	ПараметрыУказанияСерий.ФактОтбора           = Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Отгружено
													Или Объект.Статус = Перечисления.СтатусыПеремещенияМатериаловВПроизводстве.Принято;
													
	ПараметрыУказанияСерий.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий);
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	                
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.НазначениеОтправителя КАК НазначениеОтправителя,
	|	Товары.Серия КАК Серия,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	&СкладПолучатель КАК СкладПолучатель,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	Товары.СкладОтправитель,
	|	Товары.СкладПолучатель,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	Товары.СкладОтправитель,
	|	Товары.СкладПолучатель,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0 И НЕ &ФактОтбора
	|						ТОГДА 11
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеПоFEFOОстаткамиСерий)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0 И НЕ &ФактОтбора
	|						ТОГДА 11
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 6
	|					ИНАЧЕ 5
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.СкладОтправитель)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УправлениеОстаткамиСерий)
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПолученииМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.СкладПолучатель)
	|				И (ПолитикиУчетаСерий.Ссылка = ТоварыДляЗапроса.ВидНоменклатуры)
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий В (13, 14)
	|				И СтатусыОтправитель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий В (5, 6)
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий > ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО (СтатусыОтправитель.НомерСтроки = Товары.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО (СтатусыПолучатель.НомерСтроки = Товары.НомерСтроки)
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий В (13, 14)
	|						И СтатусыОтправитель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий В (5, 6)
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий > ВЫБОР
	|						КОГДА &ПриемкаПоПеремещениюВПроизводстве
	|							ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				ИНАЧЕ СтатусыПолучатель.СтатусУказанияСерий
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Статус

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
// 		МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
// 		НовыйСтатус - Строка - Имя нового статуса
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыПередачМатериаловВПроизводство[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка                КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                   КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен              КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
	|	ИСТИНА                                  КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
// 		ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
// 		НовыйСтатус - Перечисление - Новый статус
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа отсутствуют дополнительные проверки
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Если ПараметрыФормированияЗапроса.РежимВыбора = "Все" Тогда
		Возврат Справочники.Назначения.ТекстЗапросаВсехНазначений(ПараметрыФормированияЗапроса);	
	Иначе
		Возврат Справочники.Назначения.ТекстЗапросаНеобеспеченныхНазначенийОбеспечено(ПараметрыФормированияЗапроса);
	КонецЕсли;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПеремещениеМатериаловВПроизводстве) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПеремещениеМатериаловВПроизводстве.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПеремещениеМатериаловВПроизводстве);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПроизводство";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                      КАК Ссылка,
	|	ДанныеДокумента.Дата                        КАК Дата,
	|	ДанныеДокумента.Статус                      КАК Статус,
	|	ДанныеДокумента.Организация                 КАК Организация,
	|	ДанныеДокумента.ПодразделениеОтправитель    КАК ПодразделениеОтправитель,
	|	ДанныеДокумента.ПодразделениеПолучатель     КАК ПодразделениеПолучатель
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                   Реквизиты.Дата);
	Запрос.УстановитьПараметр("Статус",                   Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация",              Реквизиты.Организация);
	Запрос.УстановитьПараметр("ПодразделениеОтправитель", Реквизиты.ПодразделениеОтправитель);
	Запрос.УстановитьПараметр("ПодразделениеПолучатель",  Реквизиты.ПодразделениеПолучатель);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таб.Склад,
	|	Таб.Номенклатура,
	|	Таб.Характеристика,
	|	Таб.Серия
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеОтправитель КАК Склад,
	|		ТаблицаМатериалыИРаботы.Номенклатура КАК Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
		|ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Аналитика.Склад = &ПодразделениеОтправитель)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL 
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеОтправитель,
	|		ТаблицаМатериалыИРаботы.Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика,
	|		ТаблицаМатериалыИРаботы.Серия
	|	ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Серия = ТаблицаМатериалыИРаботы.Серия)
	|			И (Аналитика.Склад = &ПодразделениеОтправитель)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеПолучатель,
	|		ТаблицаМатериалыИРаботы.Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Аналитика.Склад = &ПодразделениеПолучатель)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПодразделениеПолучатель,
	|		ТаблицаМатериалыИРаботы.Номенклатура,
	|		ТаблицаМатериалыИРаботы.Характеристика,
	|		ТаблицаМатериалыИРаботы.Серия
	|	ИЗ
	|		Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Аналитика.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (Аналитика.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (Аналитика.Серия = ТаблицаМатериалыИРаботы.Серия)
	|			И (Аналитика.Склад = &ПодразделениеПолучатель)
	|	ГДЕ
	|		ТаблицаМатериалыИРаботы.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL) КАК Таб");
	
	ЗапросАналитики.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("ПодразделениеОтправитель", Запрос.Параметры.ПодразделениеОтправитель);
	ЗапросАналитики.УстановитьПараметр("ПодразделениеПолучатель", Запрос.Параметры.ПодразделениеПолучатель);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСерииТоваровОтправитель(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСерииТоваровОтправитель";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                 КАК Характеристика,
	|	АналитикаОтправителя.КлючАналитики                           КАК АналитикаУчетаНоменклатурыОтправитель,
	|	ТаблицаТовары.Назначение                                     КАК Назначение,
	|	ТаблицаТовары.Количество                                     КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерийОтправитель                 КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                                        КАК Серия,
	|	ТаблицаТовары.НомерСтроки,
	|	0 КАК Порядок
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровОтправитель
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителя
	|		ПО (АналитикаОтправителя.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (АналитикаОтправителя.Характеристика = ТаблицаТовары.Характеристика)
	|			И (АналитикаОтправителя.Склад = &ПодразделениеОтправитель)
	|			И ВЫБОР
	|				КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаОтправителя.Серия
	|				ИНАЧЕ АналитикаОтправителя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	АналитикаОтправителя.КлючАналитики,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель),
	|	ТаблицаСерии.Серия,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	1
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителя
	|		ПО (АналитикаОтправителя.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (АналитикаОтправителя.Характеристика = ТаблицаТовары.Характеристика)
	|			И (АналитикаОтправителя.Склад = &ПодразделениеОтправитель)
	|			И ВЫБОР
	|				КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаОтправителя.Серия
	|				ИНАЧЕ АналитикаОтправителя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	АналитикаОтправителя.КлючАналитики,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) В (4, 6, 8, 10)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаСерииТоваровПолучатель(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСерииТоваровПолучатель";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	АналитикаПолучателя.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучатель,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровПолучатель
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|		ПО (АналитикаПолучателя.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (АналитикаПолучателя.Характеристика = ТаблицаТовары.Характеристика)
	|			И (АналитикаПолучателя.Склад = &ПодразделениеПолучатель)
	|			И ВЫБОР
	|				КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателя.Серия
	|				ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	АналитикаПолучателя.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучатель,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|		ПО (АналитикаПолучателя.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (АналитикаПолучателя.Характеристика = ТаблицаТовары.Характеристика)
	|			И (АналитикаПолучателя.Склад = &ПодразделениеПолучатель)
	|			И ВЫБОР
	|				КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаТовары.Серия = АналитикаПолучателя.Серия
	|				ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	АналитикаПолучателя.КлючАналитики,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтПеремещения(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВТПеремещения";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаМатериалыИРаботы.НомерСтроки КАК НомерСтроки,
	|	АналитикаОтправителя.КлючАналитики КАК АналитикаУчетаНоменклатурыОтправитель,
	|	АналитикаПолучателя.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучатель,
	|	ТаблицаМатериалыИРаботы.Количество КАК Количество
	|ПОМЕСТИТЬ ВТПеремещения
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаМатериалыИРаботы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтправителя
	|		ПО (АналитикаОтправителя.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (АналитикаОтправителя.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (АналитикаОтправителя.Склад = &ПодразделениеОтправитель)
	|			И ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийОтправитель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия = АналитикаОтправителя.Серия
	|				ИНАЧЕ АналитикаОтправителя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|		ПО (АналитикаПолучателя.Номенклатура = ТаблицаМатериалыИРаботы.Номенклатура)
	|			И (АналитикаПолучателя.Характеристика = ТаблицаМатериалыИРаботы.Характеристика)
	|			И (АналитикаПолучателя.Склад = &ПодразделениеПолучатель)
	|			И ВЫБОР
	|				КОГДА ТаблицаМатериалыИРаботы.СтатусУказанияСерийПолучатель = 14
	|				ТОГДА ТаблицаМатериалыИРаботы.Серия = АналитикаПолучателя.Серия
	|				ИНАЧЕ АналитикаПолучателя.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			   КОНЕЦ
	|ГДЕ
	|	ТаблицаМатериалыИРаботы.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровОтправитель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровОтправитель(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровПолучатель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровПолучатель(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаМатериалыИРаботы.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	&ПодразделениеОтправитель КАК Подразделение,
	|	ТаблицаМатериалыИРаботы.Номенклатура,
	|	ТаблицаМатериалыИРаботы.Характеристика,
	|	ТаблицаМатериалыИРаботы.Серия,
	|	ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыОтправитель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаМатериалыИРаботы.Количество КАК Количество,
	|	&ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ТаблицаМатериалыИРаботы.Назначение КАК Назначение
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаМатериалыИРаботы
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенияМатериаловВПроизводстве.Отгружено),
	|				ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенияМатериаловВПроизводстве.Принято))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаМатериалыИРаботы.НомерСтроки,
	|	&Период,
	|	&Период,
	|	&Организация,
	|	&ПодразделениеПолучатель КАК Подразделение,
	|	ТаблицаМатериалыИРаботы.Номенклатура,
	|	ТаблицаМатериалыИРаботы.Характеристика,
	|	ТаблицаМатериалыИРаботы.Серия,
	|	ТаблицаМатериалыИРаботы.АналитикаУчетаНоменклатурыПолучатель,
	|	ТаблицаМатериалыИРаботы.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаМатериалыИРаботы.Назначение КАК Назначение
	|ИЗ
	|	ВтТаблицаСерииТоваровПолучатель КАК ТаблицаМатериалыИРаботы
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенияМатериаловВПроизводстве.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВТПеремещения", ТекстыЗапроса) Тогда
		ТекстЗапросаВТПеремещения(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Таб.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	Таб.АналитикаУчетаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка КАК ДокументПоступления,
	|	Таб.Количество КАК Количество
	|ИЗ
	|	ВТПеремещения КАК Таб
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таб.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаСерии.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСерии.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам
	|						ТОГДА ТаблицаСерии.НазначениеОтправителя
	|				КОНЕЦ
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&ПодразделениеОтправитель КАК Отправитель,
	|	&ПодразделениеПолучатель КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаСерии.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСерии.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам
	|						ТОГДА ТаблицаСерии.НазначениеОтправителя
	|				КОНЕЦ
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&ПодразделениеОтправитель КАК Отправитель,
	|	&ПодразделениеПолучатель КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ПроведениеПоРеглУчетуУКР

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
		
#Область ТекстПеремещениеМатериалов // (Дт 23 :: Кт 23)
	ТекстПеремещениеМатериалов = "
	|ВЫБРАТЬ //// Перемещение материалов в производстве (Дт 23 :: Кт 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.ПодразделениеПолучатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	ВЫБОР 
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) 
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаКт,
	|
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК АналитикаУчетаКт,
	|	Операция.ПодразделениеОтправитель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.ПодразделениеОтправитель КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначениеКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	ВЫБОР 
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) 
	|	КОНЕЦ КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение материалов в производстве"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПеремещениеМатериаловВПроизводстве КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|";
#КонецОбласти 
	
	Возврат ТекстПеремещениеМатериалов;
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат "";
	
КонецФункции
 
#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка
	|ИЗ
	|	Документ.ПеремещениеМатериаловВПроизводстве.МатериалыИРаботы КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СтатусУказанияСерий В (9, 10)
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмя = "Документ.ПеремещениеМатериаловВПроизводстве";
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь,ПолноеИмя);
	Пока Выборка.Следующий() Цикл
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмя);
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		НачатьТранзакцию();
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойБлокировке(Выборка.Ссылка);
			Продолжить;
		КонецПопытки;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Если Объект = Неопределено Тогда
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		ЕстьИзменения = Ложь;
		Для Каждого СтрокаТоваров Из Объект.МатериалыИРаботы Цикл
			Если (СтрокаТоваров.СтатусУказанияСерий = 10
				Или СтрокаТоваров.СтатусУказанияСерий = 9)
				И СтрокаТоваров.Серия <> Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
				СтрокаСерий = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСерий,СтрокаТоваров);
				СтрокаТоваров.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
				ЕстьИзменения = Истина;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьИзменения Тогда
			Объект.Серии.Свернуть("Номенклатура,Серия,Характеристика,Назначение,НазначениеОтправителя","Количество");
			Попытка
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
				ВызватьИсключение;
			КонецПопытки;
		Иначе
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмя);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли