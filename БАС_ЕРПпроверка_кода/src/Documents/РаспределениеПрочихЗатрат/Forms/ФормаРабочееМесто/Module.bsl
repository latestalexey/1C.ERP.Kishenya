
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	УстановитьЗначенияПоУмолчанию();
	Если Параметры.Свойство("Состояние") Тогда
		Состояние = Параметры.Состояние;
	КонецЕсли;
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Период = Параметры.ПериодРегистрации;
	КонецЕсли;
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МесяцСтрока = ОбщегоНазначенияУТКлиент.ПолучитьПредставлениеПериодаРегистрации(Период);
	ОбновитьДанныеФормы();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РаспределениеПрочихЗатрат" Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Организация", Параметр.Организация);
		СтруктураОтбора.Вставить("Подразделение", Параметр.Подразделение);
		СтруктураОтбора.Вставить("СтатьяРасходов", Параметр.СтатьяРасходов);
		СтруктураОтбора.Вставить("АналитикаРасходов", Параметр.АналитикаРасходов);
		Строки = СтатьиРасходов.НайтиСтроки(СтруктураОтбора);
		Если Строки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(Строки[0], Параметр);
		КонецЕсли;
		Если ЗначениеЗаполнено(Состояние) И Параметр.Свойство("Состояние") И Состояние <> Параметр.Состояние Тогда
			ОбновитьДанныеФормы();
		КонецЕсли;
		СтатьиРасходовПриАктивизацииСтроки(Элементы.СтатьиРасходов);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("Организация") Тогда
		Настройки["Организация"] = Параметры.Организация;
	КонецЕсли;
	Если Параметры.Свойство("Подразделение") Тогда
		Настройки["Подразделение"] = Параметры.Подразделение;
	КонецЕсли;
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Настройки["Период"] = Параметры.ПериодРегистрации;
	КонецЕсли;
	
	Настройки["Организация"] = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Настройки["Организация"]);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцСтрокаНачалоВыбораЗавершение", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.НачалоВыбораПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Период, ЭтаФорма, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод <> Неопределено Тогда
		Период = ВыбранныйПериод;
		МесяцСтрока = ОбщегоНазначенияУТКлиент.ПолучитьПредставлениеПериодаРегистрации(Период);

		ОбновитьДанныеФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ОбщегоНазначенияУТКлиент.РегулированиеПредставленияПериодаРегистрации(Направление,
																		  СтандартнаяОбработка,
																		  Период,
																		  МесяцСтрока);
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьДанныеФормы();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	
	ЗаполнитьСтатьиРасходов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтатьиРасходов

&НаКлиенте
Процедура СтатьиРасходовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуДокумента(Элементы.СтатьиРасходов.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиРасходовПриАктивизацииСтроки(Элемент)
	
	ТекстНеустановленногоЗначения = НСтр("ru='<Не установлено>';uk='<Не встановлено>'");
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		МассивПравил = ПравилоРаспределенияСтатьи(Элемент.ТекущиеДанные.СтатьяРасходов, Элемент.ТекущиеДанные.Документ);
		ВариантРаспределенияИзКарточки = МассивПравил[0];
		ПравилоРаспределенияПоЭтапамИзКарточки = МассивПравил[1];
		ПравилоРаспределенияПоПодразделениямИзКарточки = МассивПравил[2];
		ВариантРаспределенияИзДокумента = МассивПравил[3];
		ПравилоРаспределенияПоЭтапамИзДокумента = МассивПравил[4];
		ПравилоРаспределенияПоПодразделениямИзДокумента = МассивПравил[5];
	Иначе
		ВариантРаспределенияИзКарточки = ТекстНеустановленногоЗначения;
		ПравилоРаспределенияПоЭтапамИзКарточки = ТекстНеустановленногоЗначения;
		ПравилоРаспределенияПоПодразделениямИзКарточки = ТекстНеустановленногоЗначения;
		ВариантРаспределенияИзДокумента = ТекстНеустановленногоЗначения;
		ПравилоРаспределенияПоЭтапамИзДокумента = ТекстНеустановленногоЗначения;
		ПравилоРаспределенияПоПодразделениямИзДокумента = ТекстНеустановленногоЗначения;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиРасходовОткрыть(Команда)
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(
		"Документ.РаспределениеПрочихЗатрат.ФормаРабочееМесто.Команда.СтатьиРасходовОткрыть");
	
	ОткрытьТекущийЭлемент();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыСНастройкамиИзСтатьи(Команда)
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(
		"Документ.РаспределениеПрочихЗатрат.ФормаРабочееМесто.Команда.СформироватьДокументыСНастройкамиИзСтатьи");
	
	ДанныеЗаполнения = Новый Структура;
	СформированоДокументов = 0;
	ШаблонСообщения = НСтр("ru='Невозможно создать документ распределения для статьи %1 с аналитикой %2 по причине: %3.';uk='Неможливо створити документ розподілу для статті %1 з аналітикою %2: %3.'");
	Для Каждого ТекСтрока Из Элементы.СтатьиРасходов.ВыделенныеСтроки Цикл
		ДанныеЗаполнения.Очистить();
		ДанныеСтроки = Элементы.СтатьиРасходов.ДанныеСтроки(ТекСтрока);
		ДанныеЗаполнения.Вставить("Дата", КонецМесяца(Период));
		ДанныеЗаполнения.Вставить("Документ", ДанныеСтроки.Документ);
		ДанныеЗаполнения.Вставить("СтатьяРасходов", ДанныеСтроки.СтатьяРасходов);
		ДанныеЗаполнения.Вставить("АналитикаРасходов", ДанныеСтроки.АналитикаРасходов);
		ДанныеЗаполнения.Вставить("Организация", ДанныеСтроки.Организация);
		ДанныеЗаполнения.Вставить("Подразделение", ДанныеСтроки.Подразделение);
		НастройкиРаспределенияСтатьиРасходов = ПолучитьНастройкиРаспределенияСтатьиРасходов(ДанныеСтроки.СтатьяРасходов);
		ДанныеЗаполнения.Вставить("ВариантРаспределения", НастройкиРаспределенияСтатьиРасходов[0]);
		ДанныеЗаполнения.Вставить("ПравилоРаспределенияПоЭтапам", НастройкиРаспределенияСтатьиРасходов[1]);
		ДанныеЗаполнения.Вставить("ПравилоРаспределенияПоПодразделениям", НастройкиРаспределенияСтатьиРасходов[2]);
		ДанныеЗаполнения.Вставить("БазаРаспределенияПоПодразделениям", НастройкиРаспределенияСтатьиРасходов[3]);
		ДанныеЗаполнения.Вставить("БазаРаспределенияПоЭтапам", НастройкиРаспределенияСтатьиРасходов[4]);
		ДанныеЗаполнения.Вставить("НаправлениеРаспределения", НастройкиРаспределенияСтатьиРасходов[5]);
		ДанныеЗаполнения.Вставить("СтатьяКалькуляции", НастройкиРаспределенияСтатьиРасходов[6]);
		ДанныеЗаполнения.Вставить("ОтборПоПодразделениям", НастройкиРаспределенияСтатьиРасходов[7]);
		ДанныеЗаполнения.Вставить("ОтборПоМатериалам", НастройкиРаспределенияСтатьиРасходов[8]);
		ДанныеЗаполнения.Вставить("ОтборПоВидамРабот", НастройкиРаспределенияСтатьиРасходов[9]);
		ДанныеЗаполнения.Вставить("ОтборПоГруппамПродукции", НастройкиРаспределенияСтатьиРасходов[10]);
		Результат = СформироватьДокумент(ДанныеЗаполнения);
		Если ТипЗнч(Результат) = Тип("Строка") Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Невозможно создать документ распределения для статьи ""%1"" с аналитикой ""%2"" по причине: %3.';uk='Неможливо створити документ розподілу для статті ""%1"" з аналітикою ""%2"" з причини: %3.'"),
				ДанныеСтроки.СтатьяРасходов,
				ДанныеСтроки.АналитикаРасходов,
				СокрЛП(Результат));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,);
		Иначе
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Результат);
			СформированоДокументов = СформированоДокументов + 1;
		КонецЕсли;
	КонецЦикла;
	ПоказатьОповещениеПользователя(,
								   ,
								   НСтр("ru='Сформировано документов распределения:';uk='Сформовано документів розподілу:'") + " " + СформированоДокументов
								   ,
								   БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыСУказаниемНастроекВручную(Команда)
	
	ПараметрыФормы = Новый Структура("Период", НачалоМесяца(Период));
	НастройкиВручную = Неопределено;

	ОткрытьФорму("Документ.РаспределениеПрочихЗатрат.Форма.ФормаЗаполнения", ПараметрыФормы,,,,, Новый ОписаниеОповещения("СформироватьДокументыСУказаниемНастроекВручнуюЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыСУказаниемНастроекВручнуюЗавершение(НастройкиВручную, ДополнительныеПараметры) Экспорт
	
	Если НастройкиВручную = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ДанныеЗаполнения = Новый Структура;
	СформированоДокументов = 0;
	Для Каждого ТекСтрока Из Элементы.СтатьиРасходов.ВыделенныеСтроки Цикл
		ДанныеЗаполнения.Очистить();
		ДанныеСтроки = Элементы.СтатьиРасходов.ДанныеСтроки(ТекСтрока);
		ДанныеЗаполнения.Вставить("Дата", КонецМесяца(Период));
		ДанныеЗаполнения.Вставить("Документ", ДанныеСтроки.Документ);
		ДанныеЗаполнения.Вставить("СтатьяРасходов", ДанныеСтроки.СтатьяРасходов);
		ДанныеЗаполнения.Вставить("АналитикаРасходов", ДанныеСтроки.АналитикаРасходов);
		ДанныеЗаполнения.Вставить("Организация", ДанныеСтроки.Организация);
		ДанныеЗаполнения.Вставить("Подразделение", ДанныеСтроки.Подразделение);
		НастройкиПравил = ПолучитьНастройкиПравилИСтатьиРасходов(НастройкиВручную.ПравилоРаспределенияПоПодразделениям,
																				НастройкиВручную.ПравилоРаспределенияПоЭтапам,
																				ДанныеСтроки.СтатьяРасходов);
		ДанныеЗаполнения.Вставить("БазаРаспределенияПоЭтапам", НастройкиПравил[0]);
		ДанныеЗаполнения.Вставить("СтатьяКалькуляции", НастройкиПравил[1]);
		ДанныеЗаполнения.Вставить("БазаРаспределенияПоПодразделениям", НастройкиПравил[2]);
		ДанныеЗаполнения.Вставить("НаправлениеРаспределения", НастройкиПравил[3]);
		ДанныеЗаполнения.Вставить("ОтборПоПодразделениям", НастройкиПравил[4]);
		ДанныеЗаполнения.Вставить("ОтборПоМатериалам", НастройкиПравил[5]);
		ДанныеЗаполнения.Вставить("ОтборПоВидамРабот", НастройкиПравил[6]);
		ДанныеЗаполнения.Вставить("ОтборПоГруппамПродукции", НастройкиПравил[7]);
		ДанныеЗаполнения.Вставить("ПравилоРаспределенияПоЭтапам", НастройкиВручную.ПравилоРаспределенияПоЭтапам);
		ДанныеЗаполнения.Вставить("ПравилоРаспределенияПоПодразделениям", НастройкиВручную.ПравилоРаспределенияПоПодразделениям);
		ДанныеЗаполнения.Вставить("ВариантРаспределения", НастройкиВручную.ВариантРаспределения);
		Результат = СформироватьДокумент(ДанныеЗаполнения);
		Если Результат <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Результат);
			СформированоДокументов = СформированоДокументов + 1;
		КонецЕсли;
	КонецЦикла;
	ПоказатьОповещениеПользователя(,
											,
											НСтр("ru='Сформировано документов распределения:';uk='Сформовано документів розподілу:'") + " " + СформированоДокументов
											,
										БиблиотекаКартинок.Информация32);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Состояние.Имя);

	ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатьиРасходов.Состояние");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СостоянияРаспределенияРасходов.ОшибкаРаспределения;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.SpecialTextColor);

КонецПроцедуры

#Область ЗаполнениеФормы

&НаКлиенте
Процедура ОбновитьДанныеФормы()

	ЗаполнитьСтатьиРасходов();

КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПодразделений()
	
	УстановитьПривилегированныйРежим(Истина);
	СписокПодразделений = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		СписокПодразделений.Добавить(Подразделение);
	Иначе
		Запрос = Новый Запрос("
			|ВЫБРАТЬ
			|	СтруктураПредприятия.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)");

		СписокПодразделений.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
	Возврат СписокПодразделений;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтатьиРасходов()
	СписокОрганизаций = МассивДоступныхОрганизаций(Организация);
	СписокПодразделений =  ПолучитьСписокПодразделений();
	ТолькоПостоянныеРазницы = Ложь;
	
	Статьи = Документы.РаспределениеПрочихЗатрат.СтатьиКРаспределению(Период, СписокОрганизаций, СписокПодразделений, Состояние, ТолькоПостоянныеРазницы);
	СтатьиРасходов.Загрузить(Статьи);
	Для Каждого Элемент Из СтатьиРасходов Цикл
		Элемент.ГруппаСтатей = РодителиСтатьиРасходов(Элемент.СтатьяРасходов);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область АвтоматическоеФормированиеДокументовРаспределения

&НаСервереБезКонтекста
Функция СформироватьДокумент(ПараметрыЗаполнения)
	
	Возврат Документы.РаспределениеПрочихЗатрат.СформироватьДокумент(ПараметрыЗаполнения);
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаСервере
Функция РодителиСтатьиРасходов(Знач Статья)
	
	СтрокаНаименование = "";
	Пока Не Статья.Родитель.Пустая() Цикл
		СтрокаНаименование = СокрЛП(Статья.Родитель.Наименование)
							+ ?(СтрокаНаименование = "", "", "/") + СтрокаНаименование;
		Статья = Статья.Родитель;
	КонецЦикла;
	Возврат СтрокаНаименование;
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Элементы.СтатьиРасходовПодразделение.Видимость = Ложь;
	Иначе
		Элементы.СтатьиРасходовПодразделение.Видимость = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		Элементы.СтатьиРасходовОрганизация.Видимость = Ложь;
	Иначе
		Элементы.СтатьиРасходовОрганизация.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = НачалоМесяца(ТекущаяДата());
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуДокумента(ТекущиеДанные)
	
	Документ = ТекущиеДанные.Документ;
	
	Если Документ.Пустая() Тогда
		
		СтруктураОснования = Новый Структура;
		СтруктураОснования.Вставить("Дата", 				КонецМесяца(Период));
		СтруктураОснования.Вставить("Организация", 			ТекущиеДанные.Организация);
		СтруктураОснования.Вставить("Подразделение",		ТекущиеДанные.Подразделение);
		СтруктураОснования.Вставить("СтатьяРасходов",		ТекущиеДанные.СтатьяРасходов);
		СтруктураОснования.Вставить("АналитикаРасходов", 	ТекущиеДанные.АналитикаРасходов);
		
		НастройкиРаспределенияСтатьиРасходов = ПолучитьНастройкиРаспределенияСтатьиРасходов(ТекущиеДанные.СтатьяРасходов);
		СтруктураОснования.Вставить("ВариантРаспределения", НастройкиРаспределенияСтатьиРасходов[0]);
		СтруктураОснования.Вставить("ПравилоРаспределенияПоЭтапам", НастройкиРаспределенияСтатьиРасходов[1]);
		СтруктураОснования.Вставить("ПравилоРаспределенияПоПодразделениям", НастройкиРаспределенияСтатьиРасходов[2]);
		СтруктураОснования.Вставить("СтатьяКалькуляции", НастройкиРаспределенияСтатьиРасходов[6]);
		
		ПараметрыФормы = Новый Структура("Основание", СтруктураОснования);
	Иначе
		ПараметрыФормы = Новый Структура("Ключ", Документ);
	КонецЕсли;
	
	Форма = ПолучитьФорму("Документ.РаспределениеПрочихЗатрат.ФормаОбъекта", ПараметрыФормы, Элементы.СтатьиРасходов);
	
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТекущийЭлемент()
	
	ТекущиеДанные = Элементы.СтатьиРасходов.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ОткрытьФормуДокумента(ТекущиеДанные);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкиРаспределенияСтатьиРасходов(Знач СтатьяРасходов)

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СР.СпособРаспределенияНаПроизводственныеЗатраты КАК ВариантРаспределения,
		|	СР.ПравилоРаспределенияПоЭтапамПроизводства КАК ПравилоРаспределенияПоЭтапам,
		|	СР.ПравилоРаспределенияПоПодразделениям КАК ПравилоРаспределенияПоПодразделениям,
		|	ЕСТЬNULL(ПП.БазаРаспределения, НЕОПРЕДЕЛЕНО) КАК БазаРаспределенияПоПодразделениям,
		|	ЕСТЬNULL(ПЭ.БазаРаспределения, НЕОПРЕДЕЛЕНО) КАК БазаРаспределенияПоЭтапам,
		|	ЕСТЬNULL(ПП.НаправлениеРаспределения, НЕОПРЕДЕЛЕНО) КАК НаправлениеРаспределения,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПЭ.СтатьяКалькуляции, &ПустаяСтатьяКалькуляции) <> &ПустаяСтатьяКалькуляции
		|			ТОГДА ПЭ.СтатьяКалькуляции
		|		ИНАЧЕ СР.СтатьяКалькуляции
		|	КОНЕЦ КАК СтатьяКалькуляции
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СР
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК ПП
		|	ПО ПП.Ссылка = СР.ПравилоРаспределенияПоПодразделениям
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаРаспределенияРасходов КАК ПЭ
		|	ПО ПЭ.Ссылка = СР.ПравилоРаспределенияПоЭтапамПроизводства
		|ГДЕ
		|	СР.Ссылка = &Ссылка
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.Подразделение
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоПодразделениям КАК ПП
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СР
		|	ПО СР.ПравилоРаспределенияПоПодразделениям = ПП.Ссылка
		|		И СР.Ссылка = &Ссылка
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.Материал
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоМатериалам КАК ПП
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СР
		|	ПО СР.ПравилоРаспределенияПоЭтапамПроизводства = ПП.Ссылка
		|		И СР.Ссылка = &Ссылка
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.ВидРабот
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоВидамРабот КАК ПП
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СР
		|	ПО СР.ПравилоРаспределенияПоЭтапамПроизводства = ПП.Ссылка
		|		И СР.Ссылка = &Ссылка
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.ГруппаПродукции
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоГруппамПродукции КАК ПП
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СР
		|	ПО СР.ПравилоРаспределенияПоЭтапамПроизводства = ПП.Ссылка
		|		И СР.Ссылка = &Ссылка
		|");

	Запрос.УстановитьПараметр("Ссылка", СтатьяРасходов);
	Запрос.УстановитьПараметр("ПустаяСтатьяКалькуляции", Справочники.СтатьиКалькуляции.ПустаяСсылка());
	Результат = Запрос.ВыполнитьПакет();
	МассивРезультат = Новый Массив(11);
	ДанныеДокумента = Результат[0].Выгрузить()[0];
	МассивРезультат[0] = ДанныеДокумента.ВариантРаспределения;
	МассивРезультат[1] = ДанныеДокумента.ПравилоРаспределенияПоЭтапам;
	МассивРезультат[2] = ДанныеДокумента.ПравилоРаспределенияПоПодразделениям;
	МассивРезультат[3] = ДанныеДокумента.БазаРаспределенияПоПодразделениям;
	МассивРезультат[4] = ДанныеДокумента.БазаРаспределенияПоЭтапам;
	МассивРезультат[5] = ДанныеДокумента.НаправлениеРаспределения;
	МассивРезультат[6] = ДанныеДокумента.СтатьяКалькуляции;
	ОтборПоПодразделениям = Новый СписокЗначений;
	ОтборПоМатериалам = Новый СписокЗначений;
	ОтборПоВидамРабот = Новый СписокЗначений;
	ОтборПоГруппамПродукции = Новый СписокЗначений;
	ОтборПоПодразделениям.ЗагрузитьЗначения(Результат[1].Выгрузить().ВыгрузитьКолонку("Подразделение"));
	ОтборПоМатериалам.ЗагрузитьЗначения(Результат[2].Выгрузить().ВыгрузитьКолонку("Материал"));
	ОтборПоВидамРабот.ЗагрузитьЗначения(Результат[3].Выгрузить().ВыгрузитьКолонку("ВидРабот"));
	ОтборПоГруппамПродукции.ЗагрузитьЗначения(Результат[4].Выгрузить().ВыгрузитьКолонку("ГруппаПродукции"));
	МассивРезультат[7] = ОтборПоПодразделениям;
	МассивРезультат[8] = ОтборПоМатериалам;
	МассивРезультат[9] = ОтборПоВидамРабот;
	МассивРезультат[10] = ОтборПоГруппамПродукции;
	
	Возврат МассивРезультат;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНастройкиПравилИСтатьиРасходов(Знач ПравилоПоПодразделениям, Знач ПравилоПоЭтапам, Знач СтатьяРасходов)

	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ПП.БазаРаспределения КАК БазаРаспределенияПоЭтапам,
		|	ВЫБОР
		|		КОГДА ПП.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
		|		ТОГДА СР.СтатьяКалькуляции
		|		ИНАЧЕ ПП.СтатьяКалькуляции
		|	КОНЕЦ КАК СтатьяКалькуляции
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов КАК ПП
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СР
		|		ПО СР.Ссылка = &СтатьяРасходов
		|ГДЕ
		|	ПП.Ссылка = &ПравилоПоЭтапам
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.БазаРаспределения КАК БазаРаспределенияПоПодразделениям,
		|	ПП.НаправлениеРаспределения КАК НаправлениеРаспределения
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов КАК ПП
		|ГДЕ
		|	ПП.Ссылка = &ПравилоПоПодразделениям
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.Подразделение
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоПодразделениям КАК ПП
		|ГДЕ
		|	ПП.Ссылка = &ПравилоПоПодразделениям
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.Материал
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоМатериалам КАК ПП
		|ГДЕ
		|	ПП.Ссылка = &ПравилоПоЭтапам
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.ВидРабот
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоВидамРабот КАК ПП
		|ГДЕ
		|	ПП.Ссылка = &ПравилоПоЭтапам
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПП.ГруппаПродукции
		|ИЗ
		|	Справочник.ПравилаРаспределенияРасходов.ОтборПоГруппамПродукции КАК ПП
		|ГДЕ
		|	ПП.Ссылка = &ПравилоПоЭтапам
		|");

	Запрос.УстановитьПараметр("ПравилоПоЭтапам", ПравилоПоЭтапам);
	Запрос.УстановитьПараметр("ПравилоПоПодразделениям", ПравилоПоПодразделениям);
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	Результат = Запрос.ВыполнитьПакет();
	МассивРезультат = Новый Массив(8);
	ДанныеПоЭтапам = Результат[0].Выгрузить()[0];
	МассивРезультат[0] = ДанныеПоЭтапам.БазаРаспределенияПоЭтапам;
	МассивРезультат[1] = ДанныеПоЭтапам.СтатьяКалькуляции;
	ДанныеПоПодразделениям = Результат[1].Выгрузить();
	Если ДанныеПоПодразделениям.Количество() > 0 Тогда
		МассивРезультат[2] = ДанныеПоПодразделениям[0].БазаРаспределенияПоПодразделениям;
		МассивРезультат[3] = ДанныеПоПодразделениям[0].НаправлениеРаспределения;
	КонецЕсли;
	ОтборПоПодразделениям = Новый СписокЗначений;
	ОтборПоМатериалам = Новый СписокЗначений;
	ОтборПоВидамРабот = Новый СписокЗначений;
	ОтборПоГруппамПродукции = Новый СписокЗначений;
	ДанныеОтбораПоПодразделениям = Результат[2].Выгрузить();
	Если ДанныеОтбораПоПодразделениям.Количество() > 0 Тогда
		ОтборПоПодразделениям.ЗагрузитьЗначения(ДанныеОтбораПоПодразделениям.ВыгрузитьКолонку("Подразделение"));
	КонецЕсли;
	ОтборПоМатериалам.ЗагрузитьЗначения(Результат[3].Выгрузить().ВыгрузитьКолонку("Материал"));
	ОтборПоВидамРабот.ЗагрузитьЗначения(Результат[4].Выгрузить().ВыгрузитьКолонку("ВидРабот"));
	ОтборПоГруппамПродукции.ЗагрузитьЗначения(Результат[5].Выгрузить().ВыгрузитьКолонку("ГруппаПродукции"));
	МассивРезультат[4] = ОтборПоПодразделениям;
	МассивРезультат[5] = ОтборПоМатериалам;
	МассивРезультат[6] = ОтборПоВидамРабот;
	МассивРезультат[7] = ОтборПоГруппамПродукции;
	
	Возврат МассивРезультат;

КонецФункции

&НаСервере
Функция МассивДоступныхОрганизаций(Организация = Неопределено)
	
	Если Организация = Неопределено Или Организация = Справочники.Организации.ПустаяСсылка() Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеСправочника.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Организация
		|	ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|");
		Запрос.УстановитьПараметр("Организация", Организация);
		МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	Иначе
		МассивОрганизаций =Новый Массив;
		МассивОрганизаций.Добавить(Организация);
	КонецЕсли;
	
	Возврат МассивОрганизаций;
	
КонецФункции

&НаСервере
Функция ПравилоРаспределенияСтатьи(СтатьяРасходов, ДокументРаспределения)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СР.СпособРаспределенияНаПроизводственныеЗатраты = 
	|				ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПустаяСсылка)
	|			ТОГДА &ТекстНеустановленногоЗначения
	|		ИНАЧЕ СР.СпособРаспределенияНаПроизводственныеЗатраты
	|	КОНЕЦ КАК ВариантРаспределения,
	|	ВЫБОР
	|		КОГДА СР.ПравилоРаспределенияПоЭтапамПроизводства = 
	|				ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
	|			ТОГДА &ТекстНеустановленногоЗначения
	|		ИНАЧЕ СР.ПравилоРаспределенияПоЭтапамПроизводства
	|	КОНЕЦ КАК ПравилоРаспределенияПоЭтапамПроизводства,
	|	ВЫБОР
	|		КОГДА СР.ПравилоРаспределенияПоПодразделениям = 
	|				ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
	|			ТОГДА &ТекстНеустановленногоЗначения
	|		ИНАЧЕ СР.ПравилоРаспределенияПоПодразделениям
	|	КОНЕЦ КАК ПравилоРаспределенияПоПодразделениям
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СР
	|ГДЕ
	|	СР.Ссылка = &СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДД.ВариантРаспределения = 
	|				ЗНАЧЕНИЕ(Перечисление.СпособыРаспределенияСтатейРасходов.ПустаяСсылка)
	|			ТОГДА &ТекстНеустановленногоЗначения
	|		ИНАЧЕ ДД.ВариантРаспределения
	|	КОНЕЦ КАК ВариантРаспределения,
	|	ВЫБОР
	|		КОГДА ДД.ПравилоРаспределенияПоЭтапам = 
	|				ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
	|			ТОГДА &ТекстНеустановленногоЗначения
	|		ИНАЧЕ ДД.ПравилоРаспределенияПоЭтапам
	|	КОНЕЦ КАК ПравилоРаспределенияПоЭтапамПроизводства,
	|	ВЫБОР
	|		КОГДА ДД.ПравилоРаспределенияПоПодразделениям = 
	|				ЗНАЧЕНИЕ(Справочник.ПравилаРаспределенияРасходов.ПустаяСсылка)
	|			ТОГДА &ТекстНеустановленногоЗначения
	|		ИНАЧЕ ДД.ПравилоРаспределенияПоПодразделениям
	|	КОНЕЦ КАК ПравилоРаспределенияПоПодразделениям
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК ДД
	|ГДЕ
	|	ДД.Ссылка = &Документ");
	
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	Запрос.УстановитьПараметр("Документ", ДокументРаспределения);
	ТекстНеустановленногоЗначения = НСтр("ru='<Не установлено>';uk='<Не встановлено>'");
	Запрос.УстановитьПараметр("ТекстНеустановленногоЗначения", ТекстНеустановленногоЗначения);
	
	Результат = Запрос.ВыполнитьПакет();
	Если Результат[1].Пустой() Тогда
		ВариантИзДокумента = ТекстНеустановленногоЗначения;
		ПоЭтапамИзДокумента = ТекстНеустановленногоЗначения;
		ПоПодразделениямИзДокумента = ТекстНеустановленногоЗначения;
	Иначе
		ДанныеИзДокумента = Результат[1].Выгрузить()[0];
		ВариантИзДокумента = ДанныеИзДокумента.ВариантРаспределения;
		Если ВариантИзДокумента = 
			Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам Тогда
			ПоПодразделениямИзДокумента = ДанныеИзДокумента.ПравилоРаспределенияПоПодразделениям;
		Иначе
			ПоПодразделениямИзДокумента = ТекстНеустановленногоЗначения;
		КонецЕсли;
		Если ВариантИзДокумента <> Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов Тогда
			ПоЭтапамИзДокумента = ДанныеИзДокумента.ПравилоРаспределенияПоЭтапамПроизводства;
		Иначе
			ПоЭтапамИзДокумента = ТекстНеустановленногоЗначения;
		КонецЕсли;
	КонецЕсли;
	
	Если Результат[0].Пустой() Тогда
		ВариантИзКарточки = ТекстНеустановленногоЗначения;
		ПоПодразделениямИзКарточки = ТекстНеустановленногоЗначения;
		ПоЭтапамИзКарточки = ТекстНеустановленногоЗначения;
	Иначе
		ДанныеИзКарточки = Результат[0].Выгрузить()[0];
		ВариантИзКарточки = ДанныеИзКарточки.ВариантРаспределения;
		Если ВариантИзКарточки = 
			Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам Тогда
			ПоПодразделениямИзКарточки = ДанныеИзКарточки.ПравилоРаспределенияПоПодразделениям;
		Иначе
			ПоПодразделениямИзКарточки = ТекстНеустановленногоЗначения;
		КонецЕсли;
		Если ВариантИзКарточки <> Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов Тогда
			ПоЭтапамИзКарточки = ДанныеИзКарточки.ПравилоРаспределенияПоЭтапамПроизводства;
		Иначе
			ПоЭтапамИзКарточки = ТекстНеустановленногоЗначения;
		КонецЕсли;
	КонецЕсли;

	МассивПравил = Новый Массив;
	МассивПравил.Добавить(ВариантИзКарточки);
	МассивПравил.Добавить(ПоЭтапамИзКарточки);
	МассивПравил.Добавить(ПоПодразделениямИзКарточки);
	МассивПравил.Добавить(ВариантИзДокумента);
	МассивПравил.Добавить(ПоЭтапамИзДокумента);
	МассивПравил.Добавить(ПоПодразделениямИзДокумента);
	
	Возврат МассивПравил;
	
КонецФункции

#КонецОбласти

#КонецОбласти
