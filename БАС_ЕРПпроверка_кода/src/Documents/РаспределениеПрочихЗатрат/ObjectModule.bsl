#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Если ДанныеЗаполнения.Свойство("ОтборПоПодразделениям") Тогда
			ЭтотОбъект.ОтборПоПодразделениям.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоПодразделениям Цикл
				ЭтотОбъект.ОтборПоПодразделениям.Добавить().Подразделение = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоПодразделениям) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоПодразделениям.ОтборПоПодразделениям Цикл
				ЭтотОбъект.ОтборПоПодразделениям.Добавить().Подразделение = Элемент.Подразделение;
			КонецЦикла;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ОтборПоМатериалам") Тогда
			ЭтотОбъект.ОтборПоМатериалам.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоМатериалам Цикл
				ЭтотОбъект.ОтборПоМатериалам.Добавить().Материал = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоЭтапам.ОтборПоМатериалам Цикл
				ЭтотОбъект.ОтборПоМатериалам.Добавить().Материал = Элемент.Материал;
			КонецЦикла;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ОтборПоВидамРабот") Тогда
			ЭтотОбъект.ОтборПоВидамРабот.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоВидамРабот Цикл
				ЭтотОбъект.ОтборПоВидамРабот.Добавить().ВидРабот = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоЭтапам.ОтборПоВидамРабот Цикл
				ЭтотОбъект.ОтборПоВидамРабот.Добавить().ВидРабот = Элемент.ВидРабот;
			КонецЦикла;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ОтборПоГруппамПродукции") Тогда
			ЭтотОбъект.ОтборПоГруппамПродукции.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоГруппамПродукции Цикл
				ЭтотОбъект.ОтборПоГруппамПродукции.Добавить().ГруппаПродукции = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоЭтапам.ОтборПоГруппамПродукции Цикл
				ЭтотОбъект.ОтборПоГруппамПродукции.Добавить().ГруппаПродукции = Элемент.ГруппаПродукции;
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПравилоРаспределенияПоПодразделениям)
			И Не ЗначениеЗаполнено(БазаРаспределенияПоПодразделениям)
			И Не ЗначениеЗаполнено(НаправлениеРаспределения) Тогда
			БазаРаспределенияПоПодразделениям = ПравилоРаспределенияПоПодразделениям.БазаРаспределения;
			НаправлениеРаспределения = ПравилоРаспределенияПоПодразделениям.НаправлениеРаспределения;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) И Не ЗначениеЗаполнено(БазаРаспределенияПоЭтапам) Тогда
			БазаРаспределенияПоЭтапам = ПравилоРаспределенияПоЭтапам.БазаРаспределения;
		КонецЕсли;
		
	КонецЕсли;
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Регистрация задания к расчету себестоимости.
	РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(Дата, Ссылка, Организация);
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если ВариантРаспределения <> Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПравилоРаспределенияПоПодразделениям");
	КонецЕсли;
	
	Если (ВариантРаспределения <> Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям
		И ВариантРаспределения <> Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов
		И НЕ ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам)) Тогда
			Если ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация") Тогда
				СообщитьОбОшибке(НСтр("ru='Не заполнено правило распределения по выпускам';uk='Не заповнено правило розподілу за випусками'"), Отказ);
			Иначе
				СообщитьОбОшибке(НСтр("ru='Не заполнено правило распределения по этапам';uk='Не заповнено правило розподілу по етапах'"), Отказ);
			КонецЕсли;
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу
		ИЛИ ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям
		ИЛИ ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов 
		И Списание.Количество() = 0 Тогда
		СообщитьОбОшибке(НСтр("ru='Не введено ни одной строки в список ""На другие статьи расходов""';uk='Не введено жодного рядка в список ""На інші статті витрат""'"), Отказ);
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу
		И ПоБазе.Количество() = 0 Тогда
		СообщитьОбОшибке(НСтр("ru='Не введено ни одной строки в список ""По подразделениям вручную""';uk='Не введено жодного рядка в список ""По підрозділах вручну""'"), Отказ);
	КонецЕсли;
	
	РеквизитТЧСписание = Новый Массив;
	СтруктураТЧСписание = Новый Структура;
	СтруктураТЧСписание.Вставить("Списание", "СтатьяРасходов, АналитикаРасходов");
	РеквизитТЧСписание.Добавить(СтруктураТЧСписание);
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект, РеквизитТЧСписание, МассивНепроверяемыхРеквизитов, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СообщитьОбОшибке(ТекстОшибки, Отказ)
	
	Ошибки = Новый Структура;
	Ошибки.Вставить("СписокОшибок", Новый Массив);
	Ошибки.Вставить("ГруппыОшибок", Новый Соответствие);
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				Ошибки,
				"Объект.ПравилоРаспределенияПоЭтапам",
				ТекстОшибки,
				"");
	Если Ошибки.СписокОшибок.Количество() <> 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
