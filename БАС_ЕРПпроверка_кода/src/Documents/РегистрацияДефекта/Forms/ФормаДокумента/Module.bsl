
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриСозданииЧтенииНаСервере();
		
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	ОбъектЭксплуатации = Объект.ОбъектЭксплуатации;
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбъектЭксплуатацииПриИзменении(Элемент)
	
	Если Объект.ДефектныеУзлы.Количество() <> 0 Тогда
		
		ТекстВопроса = НСтр("ru='Для объекта эксплуатации ""%ОбъектЭксплуатации%"" заполнена таблица дефектов узлов';uk='Для об''єкта експлуатації ""%ОбъектЭксплуатации%"" заповнена таблиця дефектів вузлів'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ОбъектЭксплуатации%", ОбъектЭксплуатации);
		ВариантыОтветов = Новый СписокЗначений;
		ВариантыОтветов.Добавить(КодВозвратаДиалога.ОК, НСтр("ru='Очистить таблицу';uk='Очистити таблицю'"));
		ВариантыОтветов.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отменить';uk='Скасувати'"));
		
		Ответ = Неопределено;

		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбъектЭксплуатацииПриИзмененииЗавершение", ЭтотОбъект), ТекстВопроса, ВариантыОтветов);
        Возврат;
	КонецЕсли;
	
	ОбъектЭксплуатацииПриИзмененииФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЭксплуатацииПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.ОК Тогда
        Объект.ДефектныеУзлы.Очистить();
        ОбъектЭксплуатации = Объект.ОбъектЭксплуатации;
    Иначе
        Объект.ОбъектЭксплуатации = ОбъектЭксплуатации;
    КонецЕсли;
    
    ОбъектЭксплуатацииПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОбъектЭксплуатацииПриИзмененииФрагмент()
    
    ОбъектЭксплуатации = Объект.ОбъектЭксплуатации;
    
    ОбъектЭксплуатацииПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ОбъектЭксплуатацииПриИзмененииНаСервере()
	
	ЗаполнитьСписокВыбораПодразделения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты


// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработки события при создании и чтении на сервере
//
&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);
	
	ЗаполнитьСписокВыбораПодразделения();
	ОбъектЭксплуатации = Объект.ОбъектЭксплуатации;
	
КонецПроцедуры

// Заполняет список выбора элемента управления "Подразделение"
//
&НаСервере
Процедура ЗаполнитьСписокВыбораПодразделения()
	
	Список = Элементы.Подразделение.СписокВыбора;
	Список.Очистить();
	
	РеквизитыОбъектаЭксплуатации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.ОбъектЭксплуатации,
		"ЭксплуатирующееПодразделение, РемонтирующееПодразделение");
	
	Если ЗначениеЗаполнено(РеквизитыОбъектаЭксплуатации.ЭксплуатирующееПодразделение) Тогда
		Список.Добавить(РеквизитыОбъектаЭксплуатации.ЭксплуатирующееПодразделение, НСтр("ru='Эксплуатирующее подразделение';uk='Експлуатуючий підрозділ'"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыОбъектаЭксплуатации.РемонтирующееПодразделение) Тогда
		Список.Добавить(РеквизитыОбъектаЭксплуатации.РемонтирующееПодразделение, НСтр("ru='Ремонтирующее подразделение';uk='Ремонтуючий підрозділ'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
