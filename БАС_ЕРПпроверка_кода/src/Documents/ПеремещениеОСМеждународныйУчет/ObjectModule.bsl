#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	Если ТипОснования = Тип("СправочникСсылка.ОбъектыЭксплуатации") Тогда
		ОсновныеСредства.Добавить().ОсновноеСредство = ДанныеЗаполнения;
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПеремещениеОС") Тогда
		ЗаполнитьПоДокументуРеглУчета(ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ОчиститьЗаписатьДвижения(Движения, "Международный, ОсновныеСредстваМеждународныйУчет");
	
	ПроверитьВозможностьПроведения(Отказ);
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.ПеремещениеОСМеждународныйУчет.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение
	Для Каждого ТаблицаДвижений Из ДополнительныеСвойства.ТаблицыДляДвижений Цикл
		ПроведениеСервер.ОтразитьДвижения(ТаблицаДвижений.Значение, Движения[ТаблицаДвижений.Ключ], Отказ);
	КонецЦикла;
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Инициализация дополнительных свойств для удаления проведения документа
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КлючевыеРеквизиты = Новый Массив;
	КлючевыеРеквизиты.Добавить("ОсновноеСредство");
	ОбщегоНазначенияУТ.ПроверитьНаличиеДублейСтрокТЧ(
		ЭтотОбъект, "ОсновныеСредства", КлючевыеРеквизиты, Отказ, НСтр("ru='Основные средства';uk='Основні засоби'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуРеглУчета(ДанныеЗаполнения)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Документ.Ссылка КАК ДокументОснование,
		|	Документ.Организация КАК Организация,
		|	Документ.Подразделение КАК Подразделение,
		|	Документ.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Документ.ОС.(
		|		ОсновноеСредство
		|	) КАК ТабличнаяЧасть
		|ИЗ
		|	Документ.ПеремещениеОС КАК Документ
		|ГДЕ
		|	Документ.Ссылка = &Ссылка"
	);
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
	ЭтотОбъект.ОсновныеСредства.Загрузить(Реквизиты.ТабличнаяЧасть.Выгрузить());
	
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Ответственный, Подразделение);
	
КонецПроцедуры

Процедура ПроверитьВозможностьПроведения(Отказ=Ложь)
	
	ТребуемоеСостояние = Новый Структура(
		"Организация, Состояние, Подразделение",
		Организация,
		Перечисления.СостоянияОС.ПринятоКУчету,
		Подразделение);
	ПараметрыПроверки = Новый Структура("ДатаСведений, ИсключаемыйРегистратор", Дата, Ссылка);
	Ошибки = МеждународныйУчетВнеоборотныеАктивы.ПроверитьСостояниеВнеоборотныхАктивов(
		ОсновныеСредства.ВыгрузитьКолонку("ОсновноеСредство"), ТребуемоеСостояние, ПараметрыПроверки);
	Если Ошибки=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ОсновныеСредства Цикл
		
		Данные = Ошибки.Получить(Строка.ОсновноеСредство);
		Если Данные = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстОшибки = НСтр("ru='Учетные данные основного средства ""%1"" не могут быть изменены.';uk='Облікові дані основного засобу ""%1"" не можуть бути змінені.'") + Символы.ПС;
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1", Строка.ОсновноеСредство);
		Если Данные.Состояние <> Перечисления.СостоянияОС.ПринятоКУчету Тогда
			ТекстОшибки = ТекстОшибки
				+ НСтр("ru='Объект не принят к учету';uk='Об''єкт не прийнятий до обліку'");
		Иначе
			Шаблон = НСтр("ru='Объект принят к учету в организации ""%1"" в подразделение ""%2""';uk='Об''єкт прийнято до обліку в організації ""%1"" в підрозділ ""%2""'");
			ТекстОшибки = ТекстОшибки
				+ СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Данные.Организация, Данные.Подразделение);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОсновныеСредства", Строка.НомерСтроки, "ОсновноеСредство"),
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли