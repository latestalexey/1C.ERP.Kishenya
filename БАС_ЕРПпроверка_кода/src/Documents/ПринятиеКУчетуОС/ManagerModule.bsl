#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура обновляет движения документа принятия к учету после отражения в регл. учете
// Вызывается при отражения в регл. учете из функции "РеглУчетПроведениеСервер.ДополнительнаяОбработкаПриОтраженииДокумента"
//
// Параметры:
// 		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджера временных таблиц проводок в регл. учете
//
Процедура ЗаполнитьПервоначальныеСуммыПриОтражении(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПринятиеКУчетуОС.Ссылка КАК Ссылка,
	|	ПринятиеКУчетуОС.Дата КАК Дата
	|ИЗ
	|	Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
	|		ПО ПринятиеКУчетуОС.Ссылка = ДокументыКОтражению.Ссылка";
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	
	Если Не РеквизитыДокумента.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", РеквизитыДокумента.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТеблицаКОтражению.СубконтоДт1 КАК ОсновноеСредство,
	|	СУММА(ТеблицаКОтражению.Сумма) КАК СуммаБУ,
	|	СУММА(ТеблицаКОтражению.СуммаНУДт) КАК СуммаНУ,
	|	СУММА(ТеблицаКОтражению.СуммаПРДт) КАК СуммаПР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			,
	|			,
	|			Регистратор = &Ссылка
	|				И СчетДт В
	|					(ВЫБРАТЬ
	|						Т.СчетУчета
	|					ИЗ
	|						Документ.ПринятиеКУчетуОС КАК Т
	|					ГДЕ
	|						Т.Ссылка = &Ссылка
	|			
	|			),
	|			,
	|			) КАК ТеблицаКОтражению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТеблицаКОтражению.СубконтоДт1";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Стоимости = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Стоимости.Вставить(
			Выборка.ОсновноеСредство,
			Новый Структура(
				"СуммаБУ, СуммаНУ, СуммаПР",
				Выборка.СуммаБУ, Выборка.СуммаНУ, Выборка.СуммаПР));
	КонецЦикла;
	
	НачатьТранзакцию();
	
	#Область БлокировкаДанных
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", РеквизитыДокумента.Ссылка);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", РеквизитыДокумента.Ссылка);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", РеквизитыДокумента.Ссылка);
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", РеквизитыДокумента.Ссылка);
	
	Блокировка.Заблокировать();
	
	#КонецОбласти
	
	// ПараметрыАмортизацииОСБухгалтерскийУчет
	
	НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(РеквизитыДокумента.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Стоимости.Получить(Запись.ОсновноеСредство) <> Неопределено Тогда
			Запись.СтоимостьДляВычисленияАмортизации = Стоимости.Получить(Запись.ОсновноеСредство).СуммаБУ;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	// ПараметрыАмортизацииОСНалоговыйУчет
	
	НаборЗаписей = РегистрыСведений.ПараметрыАмортизацииОСНалоговыйУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(РеквизитыДокумента.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Стоимости.Получить(Запись.ОсновноеСредство) <> Неопределено Тогда
		Запись.СтоимостьДляВычисленияАмортизации = Стоимости.Получить(Запись.ОсновноеСредство).СуммаБУ;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	// ПервоначальныеСведенияОСБухгалтерскийУчет
	
	НаборЗаписей = РегистрыСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(РеквизитыДокумента.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Стоимости.Получить(Запись.ОсновноеСредство) <> Неопределено Тогда
			Запись.ПервоначальнаяСтоимость = Стоимости.Получить(Запись.ОсновноеСредство).СуммаБУ;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	// ПервоначальныеСведенияОСНалоговыйУчет
	
	НаборЗаписей = РегистрыСведений.ПервоначальныеСведенияОСНалоговыйУчет.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(РеквизитыДокумента.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		
		Если Стоимости.Получить(Запись.ОсновноеСредство) <> Неопределено Тогда
			Запись.ПервоначальнаяСтоимостьНУ = Стоимости.Получить(Запись.ОсновноеСредство).СуммаНУ;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ИзменениеПараметровОС.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	//++ НЕ УТКА
	Документы.ПринятиеКУчетуОСМеждународныйУчет.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	//-- НЕ УТКА
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПринятиеКУчетуОС) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПринятиеКУчетуОС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПринятиеКУчетуОС);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	
	ГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	МестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	НачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	НачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	СобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	СостоянияОСОрганизаций(ТекстыЗапроса, Регистры);
	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	СчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);	
	НалоговыеНазначенияОС(ТекстыЗапроса, Регистры);
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура НалоговыеНазначенияОС(ТекстыЗапроса, Регистры) 
	ИмяРегистра = "НалоговыеНазначенияОС";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НалоговыеНазначенияОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СобытиеОС КАК СобытиеОС,
	|	ДанныеДокумента.СчетУчета КАК СчетУчета,
	|	ДанныеДокумента.СчетАмортизации КАК СчетАмортизации,
	|	ДанныеДокумента.СчетУчетаДооценокОС КАК СчетУчетаДооценокОС,
	|	ДанныеДокумента.ЛиквидационнаяСтоимостьБУ КАК ЛиквидационнаяСтоимостьБУ,
	|	ДанныеДокумента.СпособНачисленияАмортизацииНУ,
	|	ДанныеДокумента.НалоговаяГруппаОС 	КАК НалоговаяГруппаОС,
	|	ДанныеДокумента.Местонахождение КАК Местонахождение,
	|	ДанныеДокумента.МОЛ КАК МОЛ,
	|	ДанныеДокумента.АдресМестонахождения КАК АдресМестонахождения,
	|	ДанныеДокумента.СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов,
	|	ДанныеДокумента.НачислятьАмортизациюБУ,
	|	ДанныеДокумента.МетодНачисленияАмортизацииБУ,
	|	ДанныеДокумента.СрокИспользованияБУ,
	|	ДанныеДокумента.ГрафикАмортизации,
	|	ДанныеДокумента.НачислятьАмортизациюНУ,
	|	ДанныеДокумента.СрокИспользованияНУ,
	|	ДанныеДокумента.ПередаватьРасходыВДругуюОрганизацию,
	|	ДанныеДокумента.ОрганизацияПолучательРасходов,
	|	ДанныеДокумента.СчетПередачиРасходов,
	|	ДанныеДокумента.НаправлениеДеятельности,
	|	ДанныеДокумента.НалоговоеНазначение
	|ИЗ
	|	Документ.ПринятиеКУчетуОС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	Запрос.УстановитьПараметр("НазваниеДокумента", НСтр("ru='Принятие к учету ОС';uk='Прийняття до обліку ОЗ'"));
	Запрос.УстановитьПараметр("ГраницаКонецМесяца", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
КонецПроцедуры

Процедура ВременнаяТаблицаПоТабличнойЧастиДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "ТабличнаяЧасть";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТабличнаяЧасть
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ИнвентарныйНомер,
	|	ТаблицаОС.ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	Документ.ПринятиеКУчетуОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ДанныеДокументаИУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втДанныеДокументаИУчета";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПоТабличнойЧастиДокумента(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ИнвентарныйНомер,
	|	ТаблицаОС.ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки,
	|	ПервоначальныеСведения.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	СУММА(ЕСТЬNULL(ДанныеУчета.СуммаОстаток, 0)) КАК ПервоначальнаяСтоимостьБУ,
	|	ВЫБОР
	|		КОГДА &НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ЕСТЬNULL(ДанныеУчета.СуммаОстатокДт, 0))
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ
	|ПОМЕСТИТЬ втДанныеДокументаИУчета
	|ИЗ
	|	ТабличнаяЧасть КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						ТабличнаяЧасть КАК Т)) КАК ПервоначальныеСведения
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ГраницаКонецМесяца,
	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеИзготовлениеДругихНеоборотныхМатериальныхАктивов)),
	|				,
	|				Организация = &Организация
	|					И Подразделение = &Подразделение
	|					И НаправлениеДеятельности = &НаправлениеДеятельности
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							Т.ОсновноеСредство
	|						ИЗ
	|							ТабличнаяЧасть КАК Т)) КАК ДанныеУчета
	|		ПО ТаблицаОС.ОсновноеСредство = ДанныеУчета.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ИнвентарныйНомер,
	|	ТаблицаОС.ПоказательНаработки,
	|	ТаблицаОС.ОбъемНаработки,
	|	ПервоначальныеСведения.ЛиквидационнаяСтоимость"+";"; 
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаОС";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДокументаИУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаОС
	|"+
	"ВЫБРАТЬ
	|	втДанныеДокументаИУчета.Ссылка,
	|	втДанныеДокументаИУчета.НомерСтроки,
	|	втДанныеДокументаИУчета.ОсновноеСредство,
	|	втДанныеДокументаИУчета.ИнвентарныйНомер,
	|	втДанныеДокументаИУчета.ПоказательНаработки,
	|	втДанныеДокументаИУчета.ОбъемНаработки,
	|	втДанныеДокументаИУчета.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	втДанныеДокументаИУчета.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	//|	ВЫБОР
	//|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Неиспользуется)
	//|			ТОГДА втДанныеДокументаИУчета.ПервоначальнаяСтоимостьНУ
	//|		КОГДА втДанныеДокументаИУчета.СуммаЦелевыхСредств > втДанныеДокументаИУчета.ПервоначальнаяСтоимостьПР - втДанныеДокументаИУчета.ПервоначальнаяСтоимостьВР
	//|			ТОГДА втДанныеДокументаИУчета.ПервоначальнаяСтоимостьНУ - втДанныеДокументаИУчета.СуммаЦелевыхСредств + втДанныеДокументаИУчета.ПервоначальнаяСтоимостьПР + втДанныеДокументаИУчета.ПервоначальнаяСтоимостьВР
	//|		ИНАЧЕ втДанныеДокументаИУчета.СуммаЦелевыхСредств
	//|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУ,
	//|	ВЫБОР
	//|		КОГДА &ВариантПримененияЦелевогоФинансирования = ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Неиспользуется)
	//|			ТОГДА втДанныеДокументаИУчета.ПервоначальнаяСтоимостьПР
	//|		КОГДА втДанныеДокументаИУчета.СуммаЦелевыхСредств > втДанныеДокументаИУчета.ПервоначальнаяСтоимостьПР - втДанныеДокументаИУчета.ПервоначальнаяСтоимостьВР
	//|			ТОГДА втДанныеДокументаИУчета.СуммаЦелевыхСредств - втДанныеДокументаИУчета.ПервоначальнаяСтоимостьВР
	//|		ИНАЧЕ втДанныеДокументаИУчета.ПервоначальнаяСтоимостьПР
	//|	КОНЕЦ КАК ПервоначальнаяСтоимостьПР,
	|	втДанныеДокументаИУчета.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	втДанныеДокументаИУчета КАК втДанныеДокументаИУчета"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ГрафикиАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикиАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ГрафикиАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&ГрафикАмортизации КАК ГрафикАмортизации
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ГрафикАмортизации <> ЗНАЧЕНИЕ(Справочник.ГодовыеГрафикиАмортизацииОС.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура МестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица МестонахождениеОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&МОЛ КАК МОЛ,
	|	&Местонахождение КАК Местонахождение,
	|	&АдресМестонахождения КАК АдресМестонахождения
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура НачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НачислениеАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&НачислятьАмортизациюБУ КАК НачислятьАмортизацию
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура НачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НачислениеАмортизацииОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&НачислятьАмортизациюНУ КАК НачислятьАмортизацию
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры


Процедура ПараметрыАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПараметрыАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&СрокИспользованияБУ КАК СрокПолезногоИспользования,
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРабот,
	|	&СрокИспользованияБУ КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ КАК СтоимостьДляВычисленияАмортизации,	
	|	ТаблицаОС.ОбъемНаработки КАК ОбъемПродукцииРаботДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПараметрыАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПараметрыАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПараметрыАмортизацииОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&СрокИспользованияНУ КАК СрокПолезногоИспользования,
	|	&СрокИспользованияНУ КАК СрокИспользованияДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТаблицаОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	&МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ТаблицаОС.ПоказательНаработки КАК ПоказательНаработки,
	|	&ЛиквидационнаяСтоимостьБУ КАК ЛиквидационнаяСтоимость
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПервоначальныеСведенияОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&НалоговоеНазначение КАК НалоговоеНазначение,
	|	&Организация КАК Организация,
	|	ТаблицаОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	&СпособНачисленияАмортизацииНУ КАК СпособНачисленияАмортизацииНУ,
	|	&НалоговаяГруппаОС КАК НалоговаяГруппаОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СобытияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&Номер КАК НомерДокумента,
	|	&СобытиеОС КАК Событие
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СостоянияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СостоянияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&Период КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК Состояние
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЛОЖЬ КАК СпособОтраженияРасходовЗаданДокументом,
	|	НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходов,
	|	&ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	&ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
	|	&СчетПередачиРасходов КАК СчетПередачиРасходов
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры


Процедура СчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СчетаБухгалтерскогоУчетаОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&СчетУчета КАК СчетУчета,
	|	&СчетАмортизации КАК СчетНачисленияАмортизации,
	|	&СчетУчетаДооценокОС КАК СчетУчетаДооценокОС
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВРеглУчете
	|" +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения,
	|	
	|	&Организация КАК Организация,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыОтраженияДокументовВРеглУчете.КОтражениюВРеглУчете) КАК Статус" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры


#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Разделитель = Символы.ПС + ";" + Символы.ПС;
	
	Возврат ВременнаяТаблицаДанныеДокументаУКР() + Разделитель
		+ ВременнаяТаблицаОстаткиСчетаКапитализацииУКР() + Разделитель;
	
КонецФункции

Функция ВременнаяТаблицаДанныеДокументаУКР()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ТаблицаДокумента.Местонахождение КАК Местонахождение,
	|	ТаблицаДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаДокумента.СчетУчета,
	|	ТаблицаДокумента.СчетАмортизации,
	|	ТаблицаДокумента.СтатьяРасходов,
	|	ТаблицаДокумента.АналитикаРасходов,
	|	ТаблицаДокумента.НалоговоеНазначение КАК НалоговоеНазначение
	|ПОМЕСТИТЬ втДанныеДокумента
	|ИЗ
	|	Документ.ПринятиеКУчетуОС КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС.ОС КАК ТабличнаяЧасть
	|		ПО ТаблицаДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|				&Дата,
	|				Организация В
	|					(ВЫБРАТЬ
	|						Т.Организация
	|					ИЗ
	|						Документ.ПринятиеКУчетуОС КАК Т
	|					ГДЕ
	|						Т.Ссылка = &Ссылка)) КАК УчетнаяПолитикаОрганизаций
	|		ПО ТаблицаДокумента.Организация = УчетнаяПолитикаОрганизаций.Организация
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
КонецФункции

Функция ВременнаяТаблицаОстаткиСчетаКапитализацииУКР()
	
	Возврат
	"ВЫБРАТЬ
	|	ДанныеУчета.Счет КАК Счет,
	|	ДанныеУчета.Субконто1 КАК ОсновноеСредство,
	|	СУММА(ДанныеУчета.СуммаОборот) КАК СуммаБУ,
	|	СУММА(ДанныеУчета.СуммаНУОборот) КАК СуммаНУ
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			,
	|			&ГраницаМесяцОкончание,
	|			Регистратор,
	|           Счет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КапитальноеСтроительство), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзготовлениеДругихНеоборотныхМатериальныхАктивов)),
	|			,
	|			(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НаправлениеДеятельности,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втДанныеДокумента КАК Т),
	|			,
	|			) КАК ДанныеУчета
	|ГДЕ
	|	ДанныеУчета.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеУчета.Субконто1,
	|	ДанныеУчета.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстатки.Счет КАК Счет,
	|	втОстатки.ОсновноеСредство,
	|	втОстатки.СуммаБУ  КАК СуммаБУ,
	|	втОстатки.СуммаНУ  КАК СуммаНУ
	|ПОМЕСТИТЬ втДанныеСчетаКапитализации
	|ИЗ
	|	втОстатки КАК втОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеСчетаКапитализации.ОсновноеСредство,
	|	СУММА(втДанныеСчетаКапитализации.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втДанныеСчетаКапитализации.СуммаНУ) КАК СуммаНУ
	|ПОМЕСТИТЬ втДанныеСчетаКапитализацииСгруппированные
	|ИЗ
	|	втДанныеСчетаКапитализации КАК втДанныеСчетаКапитализации
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанныеСчетаКапитализации.ОсновноеСредство";
	
КонецФункции

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
		
	Возврат ПринятиеКУчетуОСУКР();
			
КонецФункции

Функция ПринятиеКУчетуОСУКР()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Принятие к учету ОС (Дт СчетУчета:: Кт СчетПриобретениеОС)
	|//
	|ВЫБРАТЬ
	|	
	|	втДанныеДокумента.Ссылка КАК Ссылка,
	|	втДанныеДокумента.Дата КАК Период,
	|	втДанныеДокумента.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	втДанныеСчетаКапитализации.СуммаБУ КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	втДанныеДокумента.Местонахождение КАК ПодразделениеДт,
	|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	втДанныеДокумента.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	
	|	втДанныеДокумента.СчетУчета КАК СчетДт,
	|	
	|	втДанныеДокумента.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,	
	|	ВЫБОР
	|		КОГДА втДанныеДокумента.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|			ТОГДА 0
	|		ИНАЧЕ втДанныеСчетаКапитализации.СуммаБУ
	|	КОНЕЦ КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	втДанныеДокумента.Подразделение КАК ПодразделениеКт,
	|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	втДанныеСчетаКапитализации.Счет КАК СчетКт,
	|	
	|	втДанныеДокумента.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	втДанныеСчетаКапитализации.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Принятие к учету ОС"" КАК Содержание
	|ИЗ
	|	втДанныеДокумента КАК втДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеСчетаКапитализации
	|	ПО втДанныеДокумента.ОсновноеСредство = втДанныеСчетаКапитализации.ОсновноеСредство
	|";
	
КонецФункции


#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	// Форма ОЗ-1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ1";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-1';uk='Форма ОЗ-1'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюУТКлиент.ВыполнитьКомандуПечати";
	
	
КонецПроцедуры

// Функция формирует табличный документ с типовой печатной формой ОЗ-1
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьОЗ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	
	УстановитьПривилегированныйРежим(Истина);
	
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПринятиеКУчету_ОЗ1";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ1");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка);
		Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.УстановитьПараметр("Сдал", 			Ссылка.Сдал);
		Запрос.УстановитьПараметр("Принял", 		Ссылка.Принял);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Дата КАК ДатаАкта,
		|	Док.Номер КАК НомерАкта,
		|	Док.МОЛ.Код КАК КодМОЛа,
		|	Док.Организация.НаименованиеПолное КАК Организация,
		|	Док.Подразделение КАК ПринялоПодразделение,
		|	Док.Дата КАК ДатаВвода,
		|	Док.СчетУчета КАК СчетДт,
		|	Док.Организация.КодПоЕДРПОУ КАК ЕДРПОУ,
		|	Хозрасчетный.СчетКт
		|ИЗ
		|	Документ.ПринятиеКУчетуОС КАК Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
		|		ПО (Хозрасчетный.Регистратор = Док.Ссылка)
		|ГДЕ
		|	Док.Ссылка = &Ссылка
		|	И НЕ Хозрасчетный.СчетДт.Забалансовый";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();
														
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Если Ссылка.Проведен Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
			|	ПервоначальныеСведения.ПервоначальнаяСтоимость             КАК ПервоначальнаяСтоимость,
			|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
			|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
			|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
			|ИЗ
			|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведения
			|
			|ГДЕ
			|	ПервоначальныеСведения.Регистратор = &Ссылка";
			
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПервоначальныеСведения.ИнвентарныйНомер                    КАК ИнвентарныйНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
			|	ПервоначальныеСведения.ОсновноеСредство.ЗаводскойНомер     КАК ЗаводскойНомер,
			|	ПервоначальныеСведения.ОсновноеСредство.ДатаВыпуска        КАК ГодВыпуска,
			|	ПервоначальныеСведения.ОсновноеСредство.НомерПаспорта      КАК НомерПаспорта
			|ИЗ
			|	Документ.ПринятиеКУчетуОС.ОС КАК ПервоначальныеСведения
			|
			|ГДЕ
			|	ПервоначальныеСведения.Ссылка = &Ссылка";
			
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		ВыборкаПоОС = Результат.Выбрать();
		
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
							
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Ссылка.Организация, Ссылка.Дата);
		
		Пока ВыборкаПоОС.Следующий() Цикл

			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ1");
			Параметры     = ОбластьМакета.Параметры;
			Параметры.Заполнить(ВыборкаПоШапке);
			Параметры.Заполнить(ВыборкаПоКомиссии);
			Параметры.Заполнить(ВыборкаПоОС);
			Параметры.ВидОперации = "Принятие к учету ОС";
			Параметры.Валюта      = ВалютаРегламентированногоУчета;
			
			ОсновныеСотрудникиФизическихЛицПринял = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(Ссылка.Принял, Истина, Ссылка.Организация, Ссылка.Дата);
			Если ЗначениеЗаполнено(ОсновныеСотрудникиФизическихЛицПринял) Тогда
				Для каждого Строка Из ОсновныеСотрудникиФизическихЛицПринял Цикл
				    ДанныеФизЛицаПолучил = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Строка.Сотрудник, "Должность", Ссылка.Дата);			
				КонецЦикла;
				Для каждого СтрокаДанныеПолучил Из ДанныеФизЛицаПолучил Цикл			
					ОбластьМакета.Параметры.ПолучилДолжность = СтрокаДанныеПолучил.Должность;
					ОбластьМакета.Параметры.ПолучилФИО 			= СтрокаДанныеПолучил.ФизическоеЛицо;			
				КонецЦикла;
			КонецЕсли;
			ОсновныеСотрудникиФизическихЛицСдал = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(Ссылка.Сдал, Истина, Ссылка.Организация, Ссылка.Дата);
			Если ЗначениеЗаполнено(ОсновныеСотрудникиФизическихЛицСдал) Тогда		
				Для каждого Строка Из ОсновныеСотрудникиФизическихЛицСдал Цикл
					ДанныеФизЛицаСдал = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Строка.Сотрудник, "Должность", Ссылка.Дата);
				КонецЦикла;
				Для каждого СтрокаДанныеСдал Из ДанныеФизЛицаСдал Цикл
					ОбластьМакета.Параметры.СдалДолжность 	= СтрокаДанныеСдал.Должность;
					ОбластьМакета.Параметры.СдалФИО	 		= СтрокаДанныеСдал.ФизическоеЛицо;
				КонецЦикла;			
			КонецЕсли;
			
			ОбластьМакета.Параметры.ГлавныйБухгалтер 	= ОтветственныеЛица.ГлавныйБухгалтерПредставление;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;

		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции // ПечатьОЗ1()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ1") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ1",
			НСтр("ru='Форма ОЗ-1';uk='Форма ОЗ-1'"), ПечатьОЗ1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
	КонецЕсли;

	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ОбработчикОбновления_2_1_3_ОтметитьКОбработке(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПринятиеКУчетуОС КАК Операция
	|	";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработчикОбновления_2_1_3(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПринятиеКУчетуОС";
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ПринятиеКУчетуОС");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
		Исключение
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			
			ОбработаноОбъектов = ОбработаноОбъектов - 1;
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru='Не удалось заполнить новые реквизиты значениями по умолчанию
                |в документе ""%1"" по причине:
                |%2'
                |;uk='Не вдалося заповнити нові реквізити значеннями по умовчанню
                |в документі ""%1"" з причини:
                |%2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(),
				Выборка.Ссылка,
				ТекстСообщения);
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не выполнено заполние новых реквизитов значениями по умолчанию для некоторых документов принятия к учету ОС (пропущены): %1';uk='Не виконано заповнення нових реквізитів значеннями по умовчанню для деяких документів прийняття до обліку ОЗ (пропущені): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли