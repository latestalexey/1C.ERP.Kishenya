#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ИзделияИЗатратыНЗП) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ИзделияИЗатратыНЗП.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ИзделияИЗатратыНЗП);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	Возврат; //В дальнейшем будет добавлен код команд

КонецПроцедуры

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "Дата, Спецификация";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

//Возвращает параметры указания серий для материалов, указанных в документе.
//
//	Параметры
//		Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
//	Возвращаемое значение
//		Тип Структура
//			Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерийМатериалов = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийМатериалов.ПолноеИмяОбъекта = "Документ.ИзделияИЗатратыНЗП";
	
	ПараметрыУказанияСерийМатериалов.Спецификация = Объект.Спецификация;
	
	ПараметрыУказанияСерийМатериалов.ИмяПоляСклад = "Подразделение";
	ПараметрыУказанияСерийМатериалов.ИмяТЧТовары = "МатериалыИУслуги";
	ПараметрыУказанияСерийМатериалов.ИмяТЧСерии  = "МатериалыИУслуги";
	
	ПараметрыУказанияСерийМатериалов.ИмяПоляКоличество = "Количество";
	
	ПараметрыУказанияСерийМатериалов.УчитыватьСебестоимостьПоСериям = 
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямПроизводство", Новый Структура());
	ПараметрыУказанияСерийМатериалов.ИспользоватьСерииНоменклатуры  = 
		ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыПроизводство", Новый Структура());
	
	ПараметрыУказанияСерийМатериалов.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.СписаниеМатериаловНаЗатраты);
	ПараметрыУказанияСерийМатериалов.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийМатериалов.ПоляСвязи.Добавить("Подразделение");
	
	ПараметрыУказанияСерийМатериалов.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийМатериалов.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий = Новый Структура;
	ПараметрыУказанияСерий.Вставить("МатериалыИУслуги", ПараметрыУказанияСерийМатериалов);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Подразделение,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Подразделение,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Подразделение,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.УчетСебестоимостиПоСериям)
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ТоварыДляЗапроса.Подразделение = ПолитикиУчетаСерий.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Подразделение = ТоварыДляЗапроса.Подразделение
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтатусУказанияСерийСтарый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ПрограммныйИнтерфейсПродолжение

//Возвращает текстовое представление документа.
//
//	Параметры
//		Объект - ДокументОбъект.ИзделияИЗатратыНЗП - документ, представление которого требуется получить.
//
//	Возвращаемое значение:
//		Строка - представление в виде "Изделия и затраты НЗП на [день] [месяц строкой] [год] №%[номер]"
//
Функция ПредставлениеДокумента(Объект) Экспорт
	
	МесяцДокумента = Месяц(Объект.Дата);
	
	Если МесяцДокумента = 1 Тогда
		МесяцСтрокой = НСтр("ru='Января';uk='Січня'");
	ИначеЕсли МесяцДокумента = 2 Тогда
		МесяцСтрокой = НСтр("ru='Февраля';uk='Лютого'");
	ИначеЕсли МесяцДокумента = 3 Тогда
		МесяцСтрокой = НСтр("ru='Марта';uk='Березня'");
	ИначеЕсли МесяцДокумента = 4 Тогда
		МесяцСтрокой = НСтр("ru='Апреля';uk='Квітня'");
	ИначеЕсли МесяцДокумента = 5 Тогда
		МесяцСтрокой = НСтр("ru='Мая';uk='Травня'");
	ИначеЕсли МесяцДокумента = 6 Тогда
		МесяцСтрокой = НСтр("ru='Июня';uk='Червня'");
	ИначеЕсли МесяцДокумента = 7 Тогда
		МесяцСтрокой = НСтр("ru='Июля';uk='Липня'");
	ИначеЕсли МесяцДокумента = 8 Тогда
		МесяцСтрокой = НСтр("ru='Августа';uk='Серпня'");
	ИначеЕсли МесяцДокумента = 9 Тогда
		МесяцСтрокой = НСтр("ru='Сентября';uk='Вересня'");
	ИначеЕсли МесяцДокумента = 10 Тогда
		МесяцСтрокой = НСтр("ru='Октября';uk='Жовтня'");
	ИначеЕсли МесяцДокумента = 11 Тогда
		МесяцСтрокой = НСтр("ru='Ноября';uk='Листопада'");
	ИначеЕсли МесяцДокумента = 12 Тогда
		МесяцСтрокой = НСтр("ru='Декабря';uk='Грудня'");
	КонецЕсли;
	
	ШаблонПредставления = НСтр("ru='Изделия и затраты НЗП на %1 %2 %3 №%4';uk='Вироби і витрати НЗВ на %1 %2 %3 №%4'");
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ШаблонПредставления,
		День(КонецМесяца(Объект.Дата)),
		МесяцСтрокой,
		Формат(Объект.Дата,"ДФ=гггг"),
		Объект.Номер);
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = ПредставлениеДокумента(Данные);
	
КонецПроцедуры

#КонецОбласти

