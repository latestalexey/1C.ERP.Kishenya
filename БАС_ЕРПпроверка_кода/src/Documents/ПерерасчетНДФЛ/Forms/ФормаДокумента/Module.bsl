
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ = Документы.ПерерасчетНДФЛ.ПустаяСсылка() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Месяц, Год, Организация, Ответственный", 
		"Объект.МесяцПерерасчета",
		"Объект.НалоговыйПериод",
		"Объект.Организация",
		"Объект.Ответственный");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.Сотрудники, "НалоговыйПериод", "НалоговыйПериодСтрокой");	

	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцПерерасчетаСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцПерерасчета", "МесяцПерерасчетаСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцПерерасчетаСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцПерерасчета", "МесяцПерерасчетаСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцПерерасчетаСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцПерерасчета", "МесяцПерерасчетаСтрокой", Направление, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцПерерасчетаСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцПерерасчетаСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыСотрудники

&НаКлиенте
Процедура СотрудникиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбработкаПодбораНаСервере(ВыбранноеЗначение);
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.Сотрудники, "НалоговыйПериод", "НалоговыйПериодСтрокой");
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		Элемент.ТекущиеДанные.НалоговыйПериод = Объект.МесяцПерерасчета;
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.Сотрудники, "НалоговыйПериод", "НалоговыйПериодСтрокой");	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СотрудникиНалоговыйПериодПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.Сотрудники.ТекущиеДанные, "НалоговыйПериод", "НалоговыйПериодСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиНалоговыйПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.Сотрудники.ТекущиеДанные, "НалоговыйПериод", "НалоговыйПериодСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиНалоговыйПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.Сотрудники.ТекущиеДанные, "НалоговыйПериод", "НалоговыйПериодСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиНалоговыйПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиНалоговыйПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Заполнить(Команда)
	Объект.Сотрудники.Очистить();
	Если ЗначениеЗаполнено(Объект.Организация)
		И ЗначениеЗаполнено(Объект.МесяцПерерасчета) Тогда
		
		ЗаполнитьНаСервере();
		
		Если Объект.Сотрудники.Количество() > 0 Тогда
			Элементы.Сотрудники.ТекущаяСтрока = Объект.Сотрудники[0].ПолучитьИдентификатор();
		КонецЕсли; 
		
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(Объект.Сотрудники, "НалоговыйПериод", "НалоговыйПериодСтрокой");		
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСотрудников(Команда)
	КадровыйУчетКлиент.ПодобратьФизическихЛицОрганизации(Элементы.Сотрудники, Объект.Организация, АдресСпискаПодобранныхСотрудников());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцПерерасчета", "МесяцПерерасчетаСтрокой");
	
	
КонецПроцедуры

&НаСервере
Функция ДанныеПоНДФЛ(Сотрудники = Неопределено)
	ДанныеОНалогах = УчетНДФЛ.ДанныеОПерерасчетеНДФЛ(
								Объект.Организация, 
								Объект.МесяцПерерасчета, 
								Дата(Объект.НалоговыйПериод, 1, 1), 
								Мин(Дата(Объект.НалоговыйПериод, 12, 31), КонецМесяца(Объект.МесяцПерерасчета)), 
								Сотрудники, 
								Объект.Ссылка);	
								
	
	Возврат ДанныеОНалогах;
КонецФункции	

&НаСервере
Процедура ОбработкаПодбораНаСервере(Сотрудники)
	
	ДанныеОНалогах = ДанныеПоНДФЛ(Сотрудники);	
	ПеренестиПолученныеДанныеПоНДФЛВДокумент(ДанныеОНалогах);
	
	Для Каждого Сотрудник Из Сотрудники Цикл
		
		СтрокиНДФЛП = ДанныеОНалогах.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
		
		Если СтрокиНДФЛП.Количество() = 0 Тогда
			
			ПустаяСтрока = Объект.Сотрудники.Добавить();
			ПустаяСтрока.Сотрудник = Сотрудник;
			ПустаяСтрока.НалоговыйПериод = Объект.МесяцПерерасчета;
			
				
		КонецЕсли;
		
	КонецЦикла;
	
			
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьНаСервере()

	ПеренестиПолученныеДанныеПоНДФЛВДокумент(ДанныеПоНДФЛ())
	
КонецПроцедуры	

&НаСервере
Процедура ПеренестиПолученныеДанныеПоНДФЛВДокумент(НДФЛ)
	
	НДФЛ.Колонки.ФизическоеЛицо.Имя = "Сотрудник";
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НДФЛ, Объект.Сотрудники);
	
КонецПроцедуры	

&НаСервере
Функция АдресСпискаПодобранныхСотрудников()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Сотрудники.Выгрузить(,"Сотрудник").ВыгрузитьКолонку("Сотрудник"), УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти

#КонецОбласти
