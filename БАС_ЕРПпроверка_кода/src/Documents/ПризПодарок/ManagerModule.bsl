#Если Не ТолстыйКлиентУправляемоеПриложение Или Сервер Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Проводит документ по учетам. Если в параметре ВидыУчетов передано Неопределено, то документ проводится по всем учетам.
// Процедура вызывается из обработки проведения и может вызываться из вне.
// 
// Параметры:
//  ДокументСсылка	- ДокументСсылка.ПризПодарок - Ссылка на документ
//  РежимПроведения - РежимПроведенияДокумента - Режим проведения документа (оперативный, неоперативный)
//  Отказ 			- Булево - Признак отказа от выполнения проведения
//  ВидыУчетов 		- Строка - Список видов учета, по которым необходимо провести документ. Если параметр пустой или Неопределено, то документ проведется по всем учетам
//  Движения 		- Коллекция движений документа - Передается только при вызове из обработки проведения документа
//  Объект			- ДокументОбъект.ПризПодарок - Передается только при вызове из обработки проведения документа
//  ДополнительныеПараметры - Структура - Дополнительные параметры, необходимые для проведения документа
//
Процедура ПровестиПоУчетам(ДокументСсылка, РежимПроведения, Отказ, ВидыУчетов = Неопределено, Движения = Неопределено, Объект = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	СтруктураВидовУчета = ПроведениеРасширенныйСервер.СтруктураВидовУчета();
	ПроведениеПоВсемУчетам = Ложь;
	МассивРегистров = Новый Массив;
	ПроведениеРасширенныйСервер.ПодготовитьНаборыЗаписейКРегистрацииДвиженийПоВидамУчета(ДокументСсылка, СтруктураВидовУчета, ВидыУчетов, Движения, ПроведениеПоВсемУчетам, МассивРегистров);
	
	Если Объект <> Неопределено И ВидыУчетов = Неопределено Тогда
		ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(Объект);
		ИсправлениеПериодическихСведений.ИсправлениеПериодическихСведений(Объект, Отказ, РежимПроведения);
	КонецЕсли;        
	
	РеквизитыДляПроведения = РеквизитыДляПроведения(ДокументСсылка);
	ДанныеДляПроведения = ДанныеДляПроведения(РеквизитыДляПроведения, СтруктураВидовУчета);
	
	Если СтруктураВидовУчета.ОстальныеВидыУчета Тогда
		
		МесяцНачисления = НачалоМесяца(РеквизитыДляПроведения.ПериодРегистрации);
			
		УчетНДФЛ.СформироватьДоходыНДФЛПоКодамДоходовИзТаблицыЗначений(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ДатаПолученияДохода, ДанныеДляПроведения.ДанныеДляНДФЛ, Ложь, Ложь);
		
		УчетНачисленнойЗарплаты.ЗарегистрироватьНачисленияУдержания(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации,
			Неопределено, Неопределено, Неопределено, ДанныеДляПроведения.Начисления);
			
		
		// - Регистрация начислений и удержаний.
		ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(
					Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации,
					ДанныеДляПроведения.Начисления, Неопределено, ДанныеДляПроведения.НДФЛ, Истина);
					
		УчетСтраховыхВзносов.СформироватьДоходыСтраховыеВзносы(Движения, Отказ, РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, ДанныеДляПроведения.ДанныеДляВзносов, Истина);
		
	КонецЕсли;
	
	Если СтруктураВидовУчета.ДанныеДляРасчетаСреднего Тогда

		// Средний заработок ФСС.
		УчетПособийСоциальногоСтрахованияРасширенный.ЗарегистрироватьДанныеСреднегоЗаработкаФСС(Движения, Отказ, ДанныеДляПроведения.МенеджерВременныхТаблиц, , "ВТНачисленияДокумента");
		
	КонецЕсли;
		
	ПроведениеРасширенныйСервер.ЗаписьДвиженийПоУчетам(Движения, ПроведениеПоВсемУчетам, МассивРегистров);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьКадровыхПриказовРасширенная";
	КомандаПечати.Идентификатор = "ПФ_MXL_ПоощрениеСотрудников";
	КомандаПечати.Представление = НСтр("ru='Приказ о поощрении сотрудников';uk='Наказ про заохочення співробітників'");
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьКадровыхПриказовРасширенная";
	КомандаПечати.Идентификатор = "ПФ_MXL_Поощрение";
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВсехПриказов", Истина);
	КомандаПечати.Представление = НСтр("ru='Приказы на каждого сотрудника в отдельности';uk='Накази на кожного співробітника окремо'");
	
КонецПроцедуры

Функция ДанныеДляБухучетаЗарплатыПервичныхДокументов(Объект) Экспорт

	ДанныеДляБухучета = Новый Структура;
	ДанныеДляБухучета.Вставить("ДокументОснование", Объект.Ссылка);
	
	ТаблицаБухучетЗарплаты = ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаБухучетЗарплатыПервичныхДокументов();
	НоваяСтрока = ТаблицаБухучетЗарплаты.Добавить();
	НоваяСтрока.ДокументОснование = Объект.Ссылка;
	НоваяСтрока.НачислениеУдержание = Перечисления.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов;
	НоваяСтрока.СпособОтраженияЗарплатыВБухучете = Объект.СпособОтраженияЗарплатыВБухучете;
	НоваяСтрока.СтатьяФинансирования = Объект.СтатьяФинансирования;
	НоваяСтрока.СтатьяРасходов = Объект.СтатьяРасходов;
	
	ДанныеДляБухучета.Вставить("ТаблицаБухучетЗарплаты", ТаблицаБухучетЗарплаты);
	
	Возврат ДанныеДляБухучета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения(РеквизитыДляПроведения, СтруктураВидовУчета) 

	ДанныеДляПроведения = РасчетЗарплаты.СоздатьДанныеДляПроведенияНачисленияЗарплаты();
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", РеквизитыДляПроведения.Ссылка);
	Запрос.УстановитьПараметр("ИспользоватьШтатноеРасписание", ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПризПодарок.Ссылка КАК Ссылка,
	|	ПризПодарок.Ссылка.Дата КАК Дата,
	|	ПризПодарок.Ссылка.ДатаПолученияДохода КАК ДатаДействия,
	|	НАЧАЛОПЕРИОДА(ПризПодарок.Ссылка.ДатаПолученияДохода, МЕСЯЦ) КАК ПериодДействия,
	|	ПризПодарок.Ссылка.Организация КАК Организация,
	|	ПризПодарок.Сотрудник КАК Сотрудник,
	|	ПризПодарок.Подразделение КАК Подразделение,
	|	ПризПодарок.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПризПодарок.Ссылка.ДатаПолученияДохода КАК ПланируемаяДатаВыплаты,
	|	НАЧАЛОПЕРИОДА(ПризПодарок.Ссылка.ДатаПолученияДохода, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	|	НАЧАЛОПЕРИОДА(ПризПодарок.Ссылка.ДатаПолученияДохода, МЕСЯЦ) КАК ПериодРегистрации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов) КАК Начисление,
	|	ПризПодарок.Результат КАК Сумма,
	|	ПризПодарок.Ссылка.КодДоходаНДФЛ КАК КодДохода,
	|	ПризПодарок.Ссылка.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ПризПодарок.Ссылка.СтатьяРасходов КАК СтатьяРасходов,
	|	ПризПодарок.Ссылка.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ПризПодарок.Ссылка.ПредусмотреноКолдоговором КАК ОблагаетсяЕСВ,
	|	ПризПодарок.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТДанныеДокумента
	|ИЗ
	|	Документ.ПризПодарок.Начисления КАК ПризПодарок
	|ГДЕ
	|	ПризПодарок.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПризПодарок.Ссылка,
	|	ПризПодарок.Ссылка.Дата,
	|	ПризПодарок.Ссылка.ДатаПолученияДохода,
	|	НАЧАЛОПЕРИОДА(ПризПодарок.Ссылка.ДатаПолученияДохода, МЕСЯЦ),
	|	ПризПодарок.Ссылка.Организация,
	|	ПризПодарок.Сотрудник,
	|	ПризПодарок.Подразделение,
	|	ПризПодарок.Сотрудник.ФизическоеЛицо,
	|	ПризПодарок.Ссылка.ДатаПолученияДохода,
	|	НАЧАЛОПЕРИОДА(ПризПодарок.Ссылка.ДатаПолученияДохода, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(ПризПодарок.Ссылка.ДатаПолученияДохода, МЕСЯЦ),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.СтоимостьПодарковПризов),
	|	ВЫБОР
	|		КОГДА ПризПодарок.Сторно
	|			ТОГДА -ПризПодарок.Результат
	|		ИНАЧЕ ПризПодарок.Результат
	|	КОНЕЦ,
	|	ПризПодарок.Ссылка.КодДоходаНДФЛ,
	|	ПризПодарок.Ссылка.СтатьяФинансирования,
	|	ПризПодарок.Ссылка.СтатьяРасходов,
	|	ПризПодарок.Ссылка.СпособОтраженияЗарплатыВБухучете,
	|	ПризПодарок.Ссылка.ПредусмотреноКолдоговором,
	|	ПризПодарок.НомерСтроки
	|ИЗ
	|	Документ.ПризПодарок.НачисленияПерерасчет КАК ПризПодарок
	|ГДЕ
	|	ПризПодарок.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.КодДохода,
	|	ДанныеДокумента.ПланируемаяДатаВыплаты КАК Период
	|ПОМЕСТИТЬ ВТДоходыФизическихЛиц
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента";
	
	Запрос.Выполнить();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокумента.ПериодРегистрации КАК ПериодРегистрации,
			|	ДанныеДокумента.ДатаДействия,
			|	ДанныеДокумента.ПериодДействия,
			|	ДанныеДокумента.Организация,
			|	ДанныеДокумента.Сотрудник КАК Сотрудник,
			|	ДанныеДокумента.ФизическоеЛицо,
			|	ДанныеДокумента.Подразделение,
			|	ДанныеДокумента.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
			|	ДанныеДокумента.Начисление,
			|	ДанныеДокумента.ВидДохода,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка) КАК ВидОперации,
			|	НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодРегистрации, МЕСЯЦ) КАК ДатаНачала,
			|	КОНЕЦПЕРИОДА(ДанныеДокумента.ПериодРегистрации, МЕСЯЦ) КАК ДатаОкончания,
			|	ДанныеДокумента.НомерСтроки КАК ИдентификаторСтроки,
			|	ДанныеДокумента.Сумма,
			|	ДанныеДокумента.СуммаВычета,
			|	ДанныеДокумента.Ссылка КАК ДокументОснование
			|ПОМЕСТИТЬ ВТНачисления
			|ИЗ
			|	ВТДанныеДокумента КАК ДанныеДокумента";
		Запрос.Выполнить();
		
		ДанныеФормы = ОтражениеЗарплатыВБухучетеРасширенный.ДополнительныеПараметрыДляОтраженияВБухучете();
		ДанныеФормы.БухучетПервичногоДокумента = Документы.ПризПодарок.ДанныеДляБухучетаЗарплатыПервичныхДокументов(РеквизитыДляПроведения.Ссылка).ТаблицаБухучетЗарплаты;
		ДанныеФормы.ДокументСсылка = РеквизитыДляПроведения.Ссылка;
		ОтражениеЗарплатыВБухучетеРасширенный.СоздатьВТБухучетНачислений(РеквизитыДляПроведения.Организация, РеквизитыДляПроведения.ПериодРегистрации, 0, Запрос.МенеджерВременныхТаблиц, ДанныеФормы);
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Начисления.ПериодРегистрации,
			|	Начисления.ПериодРегистрации КАК МесяцНачисления,
			|	Начисления.ДатаДействия,
			|	Начисления.ПериодДействия,
			|	Начисления.Организация,
			|	Начисления.Сотрудник,
			|	Начисления.ФизическоеЛицо,
			|	Начисления.Подразделение,
			|	Начисления.Начисление,
			|	Начисления.ВидДохода,
			|	Начисления.ДатаНачала,
			|	Начисления.ДатаОкончания,
			|	Начисления.ДокументОснование,
			|	Начисления.ДокументОснование КАК ДокументСсылка,
			|	БухучетНачислений.СтатьяФинансирования,
			|	БухучетНачислений.СтатьяРасходов,
			|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
			|	БухучетНачислений.ОблагаетсяЕНВД,
			|	БухучетНачислений.Сумма,
			|	ВЫБОР
			|		КОГДА Начисления.Сумма = 0
			|			ТОГДА Начисления.СуммаВычета
			|		КОГДА БухучетНачислений.ОблагаетсяЕНВД
			|			ТОГДА ВЫРАЗИТЬ(Начисления.СуммаВычета * БухучетНачислений.Сумма / Начисления.Сумма КАК ЧИСЛО(15, 2))
			|		ИНАЧЕ Начисления.СуммаВычета - (ВЫРАЗИТЬ(Начисления.СуммаВычета * (Начисления.Сумма - БухучетНачислений.Сумма) / Начисления.Сумма КАК ЧИСЛО(15, 2)))
			|	КОНЕЦ КАК СуммаВычета
			|ПОМЕСТИТЬ ВТНачисленияДокумента
			|ИЗ
			|	ВТНачисления КАК Начисления
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачислений КАК БухучетНачислений
			|		ПО Начисления.ИдентификаторСтроки = БухучетНачислений.ИдентификаторСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисления
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТБухучетНачислений";
		Запрос.Выполнить();
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Начисления.ПериодРегистрации,
			|	Начисления.ПериодРегистрации КАК МесяцНачисления,
			|	Начисления.ДатаДействия,
			|	Начисления.ПериодДействия,
			|	Начисления.Организация,
			|	Начисления.Сотрудник КАК Сотрудник,
			|	Начисления.ФизическоеЛицо,
			|	Начисления.Подразделение,
			|	Начисления.Начисление,
			|	НАЧАЛОПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) КАК ДатаНачала,
			|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации, МЕСЯЦ) КАК ДатаОкончания,
			|	Начисления.Ссылка КАК ДокументОснование,
			|	Начисления.Ссылка КАК ДокументСсылка,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) КАК СтатьяФинансирования,
			|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) КАК СтатьяРасходов,
			|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) КАК СпособОтраженияЗарплатыВБухучете,
			|	Начисления.Сумма,
			|	Начисления.ОблагаетсяЕСВ,
			|	Начисления.КодДохода
			|ПОМЕСТИТЬ ВТНачисленияДокумента
			|ИЗ
			|	ВТДанныеДокумента КАК Начисления";
		Запрос.Выполнить();
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияДокумента.ФизическоеЛицо,
		|	НачисленияДокумента.СтатьяФинансирования,
		|	НачисленияДокумента.СтатьяРасходов
		|ПОМЕСТИТЬ ВТБухучетФизическихЛиц
		|ИЗ
		|	ВТНачисленияДокумента КАК НачисленияДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.КодДохода,
        |	ДанныеДокумента.Начисление,
		|	ДанныеДокумента.ПланируемаяДатаВыплаты КАК ДатаПолученияДохода,
		|	ДанныеДокумента.Сумма КАК СуммаДохода,
		|	ДанныеДокумента.МесяцНалоговогоПериода,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.Подразделение КАК ПодразделениеСотрудника,
		|	ИСТИНА КАК НатуральныйКоэффициент
		|ИЗ
		|	ВТДанныеДокумента КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Подразделение,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ОсновнаяЗарплата) КАК ВидЕСВ,
		|	ДанныеДокумента.МесяцНачисления КАК НалоговыйПериод,		
		|	ДанныеДокумента.Начисление,
		|	ДанныеДокумента.ДатаНачала,
		|	ДанныеДокумента.Сумма
		|ИЗ
		|	ВТНачисленияДокумента КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.ОблагаетсяЕСВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.Организация,
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.Сумма,
		|	ДанныеДокумента.Начисление,
		|	ДанныеДокумента.ДатаНачала,
		|	ДанныеДокумента.ДатаОкончания,
		|	ДанныеДокумента.ДокументОснование,
		|	ЕСТЬNULL(НастройкаГруппУчетаОсобыхНачисленийИУдержаний.ГруппаУчета,ЗНАЧЕНИЕ(Справочник.ГруппыУчетаНачисленийИУдержаний.Зарплата)) КАК ГруппаУчетаНачислений,
		|	ДанныеДокумента.КодДохода,
		|	ДанныеДокумента.СтатьяФинансирования,
		|	ДанныеДокумента.СтатьяРасходов,
		|	ДанныеДокумента.СпособОтраженияЗарплатыВБухучете
		|ИЗ
		|	ВТНачисленияДокумента КАК ДанныеДокумента
		|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаГруппУчетаОсобыхНачисленийИУдержаний КАК НастройкаГруппУчетаОсобыхНачисленийИУдержаний
		|       ПО ДанныеДокумента.Начисление = НастройкаГруппУчетаОсобыхНачисленийИУдержаний.НачислениеУдержание
		|
		|";
	
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.Количество();
	

	ДанныеДляПроведения.Вставить("ДанныеДляНДФЛ", Результат[КоличествоРезультатов-3].Выгрузить());
	ДанныеДляПроведения.Вставить("ДанныеДляВзносов", Результат[КоличествоРезультатов-2].Выгрузить());
	ДанныеДляПроведения.Вставить("Начисления", Результат[КоличествоРезультатов-1].Выгрузить());
	ДанныеДляПроведения.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);

	Возврат ДанныеДляПроведения;

КонецФункции

Функция РеквизитыДляПроведения(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПризПодарок.Ссылка,
	|	ПризПодарок.Организация,
	|	ПризПодарок.ПериодРегистрации,
	|	ПризПодарок.ДатаПолученияДохода
	|ИЗ
	|	Документ.ПризПодарок КАК ПризПодарок
	|ГДЕ
	|	ПризПодарок.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результаты = Запрос.ВыполнитьПакет();
	
	РеквизитыДляПроведения = РеквизитыДляПроведенияПустаяСтруктура();
	
	ВыборкаРеквизиты = Результаты[0].Выбрать();
	
	Пока ВыборкаРеквизиты.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(РеквизитыДляПроведения, ВыборкаРеквизиты);
		
	КонецЦикла;
	
	Возврат РеквизитыДляПроведения;
	
КонецФункции

Функция РеквизитыДляПроведенияПустаяСтруктура()
	
	РеквизитыДляПроведенияПустаяСтруктура = Новый Структура("Ссылка, Организация, ПериодРегистрации, ДатаПолученияДохода");	
	
	Возврат РеквизитыДляПроведенияПустаяСтруктура;
	
КонецФункции

#КонецОбласти

#КонецЕсли
