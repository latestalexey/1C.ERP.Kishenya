#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет документ сведениями на основе данных договора займа.
//
// Параметры:
//	- ДоговорЗайма - ДокументСсылка.ДоговорЗаймаСотруднику, 
//		ссылка на договор займа, условия которого изменяются.
//	- ДатаАктуальности - дата условий договора займа.
//
Процедура ЗаполнитьПоДоговоруЗайма(ДоговорЗайма, ДатаАктуальности) Экспорт
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, 
		ЗаймыСотрудникам.ДанныеЗаполненияДокументаПоДоговоруЗайма(ДоговорЗайма));
		
	ЗаполнитьПоУсловиямДоговораЗайма(ДатаАктуальности);
	
КонецПроцедуры

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, 
			ЗаймыСотрудникам.ДанныеЗаполненияДокументаПоСотруднику(ДанныеЗаполнения));
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ДоговорЗаймаСотруднику") Тогда
		ЗаполнитьПоДоговоруЗайма(ДанныеЗаполнения, ТекущаяДатаСеанса());
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Условия договора
	ЗаймыСотрудникам.ЗаписатьУсловияДоговораЗайма(Движения, ДоговорЗайма, ДатаИзменений, Ссылка);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 				= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода				= ДатаИзменений;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода			= ДатаИзменений;
	ПараметрыПолученияСотрудниковОрганизаций.РаботникиПоДоговорамГПХ 	= Неопределено;
	
	КадровыйУчет.ПроверитьРаботающихФизическихЛиц(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо),
		ПараметрыПолученияСотрудниковОрганизаций,
		Отказ,
		Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "ФизическоеЛицо", "Объект")
	);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Период", ДатаИзменений);
	Запрос.УстановитьПараметр("ДоговорЗайма", ДоговорЗайма);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	УсловияДоговораЗаймаСотруднику.Регистратор
	               |ИЗ
	               |	РегистрСведений.УсловияДоговораЗаймаСотруднику КАК УсловияДоговораЗаймаСотруднику
	               |ГДЕ
	               |	УсловияДоговораЗаймаСотруднику.Регистратор <> &Регистратор
	               |	И УсловияДоговораЗаймаСотруднику.Период = &Период
	               |	И УсловияДоговораЗаймаСотруднику.ДоговорЗайма = &ДоговорЗайма";
				   
	УстановитьПривилегированныйРежим(Истина);			   
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);			   
	
	Если Выборка.Следующий() Тогда 
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='На %1 уже оформлен документ %2';uk='На %1 вже оформлений документ %2'"), Формат(ДатаИзменений, "ДФ=""ММММ гггг"""), Выборка.Регистратор);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "МесяцИзменений", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоУсловиямДоговораЗайма(ДатаАктуальности)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УсловияДоговораСрезПоследних.Сумма,
	|	УсловияДоговораСрезПоследних.ДатаОкончания,
	|	УсловияДоговораСрезПоследних.ПроцентнаяСтавка,
	|	УсловияДоговораСрезПоследних.РазмерПлатежа,
	|	УсловияДоговораСрезПоследних.РазмерПогашения,
	|	УсловияДоговораСрезПоследних.ДатаНачалаПогашения,
	|	УсловияДоговораСрезПоследних.ОграничениеПлатежа,
	|	УсловияДоговораСрезПоследних.МатериальнаяВыгодаОблагаетсяНДФЛ
	|ИЗ
	|	РегистрСведений.УсловияДоговораЗаймаСотруднику.СрезПоследних(&ДатаАктуальности, ДоговорЗайма = &ДоговорЗайма) КАК УсловияДоговораСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТраншиСрезПоследних.ДатаПредоставления,
	|	ТраншиСрезПоследних.Сумма,
	|	ТраншиСрезПоследних.ДатаПогашения,
	|	ТраншиСрезПоследних.РазмерПогашения
	|ИЗ
	|	РегистрСведений.ТраншиЗаймаСотруднику.СрезПоследних(&ДатаАктуальности, ДоговорЗайма = &ДоговорЗайма) КАК ТраншиСрезПоследних";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДоговорЗайма", ДоговорЗайма);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[РезультатыЗапроса.ВГраница() - 1].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Выборка = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выбрать();
	ТраншиЗайма.Очистить();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТраншиЗайма.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
