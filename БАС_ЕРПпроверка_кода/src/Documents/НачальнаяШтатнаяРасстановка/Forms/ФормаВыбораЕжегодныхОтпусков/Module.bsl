
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Сотрудник,ДатаОстатков");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Информация по отпускам для сотрудника %1';uk='Інформація щодо відпусток для співробітника %1'"),
		Сотрудник);
	
	Если ТолькоПросмотр Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ФормаOK",
			"ТолькоПросмотр",
			Истина);
		
	КонецЕсли; 
	
	Для каждого СтрокаЕжегодныеОтпуска Из Параметры.ЕжегодныеОтпуска Цикл
		ЗаполнитьЗначенияСвойств(ЕжегодныеОтпуска.Добавить(), СтрокаЕжегодныеОтпуска);
	КонецЦикла;
	Для каждого СтрокаОстаткиОтпусковПоРабочимГодам Из Параметры.ОстаткиОтпусковПоРабочимГодам Цикл
		ЗаполнитьЗначенияСвойств(ОстаткиОтпусковПоРабочимГодам.Добавить(), СтрокаОстаткиОтпусковПоРабочимГодам);
	КонецЦикла;
	
	ПараметрыСтажевыхЭлементов = ОстаткиОтпусков.ПараметрыДляДополнитьТабличнуюЧастьСтажевымиЭлементами();
	ПараметрыСтажевыхЭлементов.Форма = ЭтаФорма;
	ПараметрыСтажевыхЭлементов.ИмяТаблицы = "ЕжегодныеОтпуска";
	ПараметрыСтажевыхЭлементов.ТабличнаяЧастьВОбъекте = Ложь;
	ПараметрыСтажевыхЭлементов.ЗаполнятьРеквизитыПоСотруднику = Истина;
	ПараметрыСтажевыхЭлементов.Сотрудник = Сотрудник;
	ПараметрыСтажевыхЭлементов.ДатаСреза = ДатаОстатков;
	ОстаткиОтпусков.ДополнитьТабличнуюЧастьСтажевымиЭлементами(ПараметрыСтажевыхЭлементов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыЕжегодныеОтпуска

&НаКлиенте
Процедура ЕжегодныеОтпускаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если ЕжегодныеОтпуска.Количество() = 1 Тогда
			Элемент.ТекущиеДанные.ВидЕжегодногоОтпуска = ПредопределенноеЗначение("Справочник.ВидыОтпусков.Основной");
			ОстаткиОтпусковКлиент.ПриИзмененииВидаЕжегодногоОтпуска(ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ЕжегодныеОтпуска.ТекущиеДанные;
	
	Если ОстаткиОтпусковКлиент.СуществуетГодовойОстаток(ОстаткиОтпусковПоРабочимГодам, ТекущиеДанные.ВидЕжегодногоОтпуска) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуПраваЗавершение", ЭтотОбъект, ТекущиеДанные);
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='По виду отпуска %1 введены остатки. Они так же будут удалены. Продолжить?';uk='По виду відпустки %1 введені залишки. Вони так само будуть видалені. Продовжити?'"),
				ТекущиеДанные.ВидЕжегодногоОтпуска);
				
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
				
		Отказ = Истина;
		
	Иначе
		ОстаткиОтпусковКлиент.ОчиститьОстаткиОтпусковПоВидуОтпуска(ОстаткиОтпусковПоРабочимГодам, ТекущиеДанные.ВидЕжегодногоОтпуска);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаВидЕжегодногоОтпускаПриИзменении(Элемент)
	
	ОстаткиОтпусковКлиентСервер.ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
	
	ТекущиеДанные = Элементы.ЕжегодныеОтпуска.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоДнейВГод = КоличествоДнейЕжегодногоОтпускаПоУмолчанию(ТекущиеДанные.ВидЕжегодногоОтпуска);
	Если КоличествоДнейВГод <> Неопределено Тогда
		ТекущиеДанные.КоличествоДнейВГод = КоличествоДнейВГод;
	КонецЕсли;
	
	ЗаполнитьЗначенияСтажевыхРеквизитовВСтроке(Сотрудник, ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура ЕжегодныеОтпускаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЕжегодныеОтпуска.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ЕжегодныеОтпускаОписаниеСтажевыхПоказателей" Тогда
		КадровыйУчетРасширенныйКлиент.ОткрытьФормуРедактированияСтажейСотрудника(
			ЭтаФорма, Сотрудник, ДатаОстатков, Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВидСтажаОтпуска(ТекущиеДанные.ВидЕжегодногоОтпуска))));
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыОстаткиОтпусковПоРабочимГодам

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОстаткиОтпусковКлиентСервер.ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если ОстаткиОтпусковПоРабочимГодам.Количество() = 1 Тогда
			Элемент.ТекущиеДанные.ВидЕжегодногоОтпуска = ПредопределенноеЗначение("Справочник.ВидыОтпусков.Основной");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамОстатокПриИзменении(Элемент)
	ОстаткиОтпусковКлиентСервер.ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамВидЕжегодногоОтпускаПриИзменении(Элемент)
	ОстаткиОтпусковКлиентСервер.ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамРабочийГодНачалоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОстаткиОтпусковПоРабочимГодам.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.РабочийГодНачало) И НЕ ЗначениеЗаполнено(ТекущиеДанные.РабочийГодОкончание) Тогда
			ТекущиеДанные.РабочийГодОкончание = ДобавитьМесяц(ТекущиеДанные.РабочийГодНачало, 12) - 1;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиОтпусковПоРабочимГодамПослеУдаления(Элемент)
	ОстаткиОтпусковКлиентСервер.ВнестиСводныйОстатокВТаблицуПрав(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура OK(Команда)
	
	ОчиститьСообщения();
	
	Если Модифицированность Тогда
		
		Если НЕ ПроверитьЗаполнениеОтпусков() Тогда
			Возврат;
		КонецЕсли; 
		
		СтруктураПараметраОповещения = Новый Структура;
		СтруктураПараметраОповещения.Вставить("Сотрудник", Сотрудник);
		СтруктураПараметраОповещения.Вставить("ДатаОстатков", ДатаОстатков);
		СтруктураПараметраОповещения.Вставить("ЕжегодныеОтпуска", ЕжегодныеОтпуска);
		СтруктураПараметраОповещения.Вставить("ОстаткиОтпусковПоРабочимГодам", ОстаткиОтпусковПоРабочимГодам);
		
		Оповестить("ИзмененыЕжегодныеОтпуска", СтруктураПараметраОповещения, ВладелецФормы);
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УдалитьСтрокуПраваЗавершение(Результат, УдаляемаяСтрока) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ОстаткиОтпусковКлиент.ОчиститьОстаткиОтпусковПоВидуОтпуска(ОстаткиОтпусковПоРабочимГодам, УдаляемаяСтрока.ВидЕжегодногоОтпуска);
		ЕжегодныеОтпуска.Удалить(УдаляемаяСтрока);
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеОтпусков()
	Возврат ОстаткиОтпусков.ДокументВводаОстатковОтпусковЗаполненКорректно(ЭтаФорма);
КонецФункции

&НаСервере
Процедура ЗаполнитьЗначенияСтажевыхРеквизитовВСтроке(Сотрудник, ИдентификаторСтроки)
	ТекущиеДанные = ЕжегодныеОтпуска.НайтиПоИдентификатору(ИдентификаторСтроки);
	ОстаткиОтпусков.ЗаполнитьЗначенияСтажевыхРеквизитовВСтроке(ТекущиеДанные, Сотрудник, ДатаОстатков);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидСтажаОтпуска(ВидОтпуска)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидОтпуска, "ВидСтажа");
КонецФункции

&НаСервереБезКонтекста
Функция КоличествоДнейЕжегодногоОтпускаПоУмолчанию(ВидЕжегодногоОтпуска)
	Возврат ОстаткиОтпусков.КоличествоДнейОтпускаВГодПоУмолчанию(ВидЕжегодногоОтпуска);
КонецФункции

#КонецОбласти

