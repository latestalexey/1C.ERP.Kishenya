#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическиеЛица.ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти


#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ОбработкаЗаполненияДокументаНачальнаяШтатнаяРасстановка(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация, , , Истина);
	
	// Проведение документа
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, ДанныеДляПроведения.СотрудникиДаты, Ссылка);
	
	КадровыеДвиженияБезПодработок = ДанныеДляПроведения.КадровыеДвижения.Скопировать(ДанныеДляПроведения.КадровыеДвижения.НайтиСтроки(Новый Структура("ЭтоПодработка",Ложь)));
	КадровыеДвиженияПодработок = ДанныеДляПроведения.КадровыеДвижения.Скопировать(ДанныеДляПроведения.КадровыеДвижения.НайтиСтроки(Новый Структура("ЭтоПодработка",Истина)));
	РегистрыСведений.СостоянияПодработок.СформироватьДвижения(ЭтотОбъект, Движения, КадровыеДвиженияПодработок);
	КадровыйУчет.СформироватьКадровыеДвижения(ЭтотОбъект, Движения, КадровыеДвиженияБезПодработок);
	
	Если ДанныеДляПроведения.РегистрироватьГрафикиРаботы Тогда
		КадровыйУчетРасширенный.СформироватьИсториюИзмененияГрафиков(Движения, ДанныеДляПроведения.КадровыеДвижения);
	КонецЕсли;
		
	СтруктураПлановыхНачислений = Новый Структура;
	СтруктураПлановыхНачислений.Вставить("ДанныеОПлановыхНачислениях", ДанныеДляПроведения.ПлановыеНачисления);
	СтруктураПлановыхНачислений.Вставить("ЗначенияПоказателей", ДанныеДляПроведения.ЗначенияПоказателейНачислений);
	СтруктураПлановыхНачислений.Вставить("ПрименениеДополнительныхПоказателей", ДанныеДляПроведения.ПрименениеДополнительныхПоказателей);
	
	РасчетЗарплаты.СформироватьДвиженияПлановыхНачислений(ЭтотОбъект, Движения, СтруктураПлановыхНачислений);
	
	Если Не ДанныеДляПроведения.ШтатнаяРасстановкаВоеннослужащих Тогда
		РасчетЗарплатыРасширенный.СформироватьДвиженияПорядкаПересчетаТарифныхСтавок(Движения, ДанныеДляПроведения.ПорядокПересчетаТарифнойСтавки);
		РасчетЗарплатыРасширенный.СформироватьДвиженияЗначенийСовокупныхТарифныхСтавок(Движения, ДанныеДляПроведения.ДанныеСовокупныхТарифныхСтавок);
		РасчетЗарплаты.СформироватьДвиженияПлановыхВыплат(Движения, КадровыеДвиженияБезПодработок);
		ОстаткиОтпусков.СформироватьДвиженияПоложенныхЕжегодныхОтпусков(Ссылка, Движения, ДанныеДляПроведения.ЕжегодныеОтпуска);
		ОстаткиОтпусков.СформироватьДвиженияНачальныхОстатковОтпусков(Движения, ДанныеДляПроведения.НачальныеОстаткиОтпусков);
	КонецЕсли;
	
	РазрядыКатегорииДолжностей.СформироватьДвиженияРазрядовКатегорийСотрудников(Движения, ДанныеДляПроведения.РазрядыКатегорииСотрудников);
	РазрядыКатегорииДолжностей.СформироватьДвиженияПКУСотрудников(Движения, ДанныеДляПроведения.ПКУСотрудников);
	
	СостоянияСотрудников.ЗарегистрироватьСостоянияСотрудников(Движения, Ссылка, ДанныеДляПроведения.ДанныеСостояний);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("Грейды");
		Модуль.СформироватьДвиженияГрейдовСотрудников(Движения, ДанныеДляПроведения.ДанныеГрейдовСотрудников);
	КонецЕсли;
	
	СтруктураЕСВСотрудников = Новый Структура;
	СтруктураЕСВСотрудников.Вставить("ДанныеОЕСВСотрудников", ДанныеДляПроведения.ДанныеОЕСВСотрудников);
	УчетСтраховыхВзносов.СформироватьДвиженияКатегорииЕСВ(ЭтотОбъект, Движения, СтруктураЕСВСотрудников);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетов(Движения, ДанныеДляРегистрацииПерерасчетов, Организация, , Истина);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КадровыйУчет.ПроверитьВозможностьПроведенияПоКадровомуУчету(
		ЭтотОбъект.Месяц, ЭтотОбъект.Сотрудники.ВыгрузитьКолонку("Сотрудник"), ЭтотОбъект.Ссылка, Отказ, Перечисления.ВидыКадровыхСобытий.Прием);
		
	ПроверитьУникальностьЗапрашиванияПоказателя(Отказ);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
		Модуль.ПроверкаЗаполненияДокументаНачальнаяШтатнаяРасстановка(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ВидДоговора");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Подработки") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("Подработки");
		Модуль.ПроверкаЗаполненияДокументаНачальнаяШтатнаяРасстановка(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеДокументов(ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетовПриОтменеПроведения(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаСотрудники.ДолжностьПоШтатномуРасписанию КАК Позиция,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Подразделение КАК Подразделение,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Должность КАК Должность,
		|	НачальнаяШтатнаяРасстановкаСотрудники.КоличествоСтавок КАК КоличествоСтавок,
		|	НачальнаяШтатнаяРасстановкаСотрудники.ГрафикРаботы КАК ГрафикРаботы,
		|	НачальнаяШтатнаяРасстановкаСотрудники.СпособРасчетаАванса КАК СпособРасчетаАванса,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Аванс КАК Аванс,
		|	НачальнаяШтатнаяРасстановкаСотрудники.ВидЗанятости КАК ВидЗанятости,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.ВидДоговора КАК ВидДоговора,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыКадровыхСобытий.НачальныеДанные) КАК ВидСобытия,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник.ГоловнойСотрудник КАК ГоловнойСотрудник,
		|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК ОтсутствующийСотрудник,
        |	НачальнаяШтатнаяРасстановкаСотрудники.ПринятНаНовоеРабочееМесто КАК ПринятНаНовоеРабочееМесто,
		|	НачальнаяШтатнаяРасстановкаСотрудники.ДатаСозданияРабочегоМеста КАК ДатаСозданияРабочегоМеста,
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаСотрудники.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Подработка)
		|			ТОГДА ИСТИНА
		|		КОГДА НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник <> НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник.ГоловнойСотрудник
		|				И НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник.ГоловнойСотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоПодработка
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка";
	
	
	// Первый набор данных для проведения - таблица для формирования кадровых движений, истории графиков, авансов.
	КадровыеДвижения = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("КадровыеДвижения", КадровыеДвижения);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НачальнаяШтатнаяРасстановкаНачисления.Ссылка.Месяц
		|		ИНАЧЕ НачальнаяШтатнаяРасстановкаНачисления.ДатаНачала
		|	КОНЕЦ КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаНачисления.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НачальнаяШтатнаяРасстановкаНачисления.ДатаОкончания, ДЕНЬ, 1)
		|	КОНЕЦ КАК ДействуетДо,
		|	НачальнаяШтатнаяРасстановкаНачисления.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаНачисления.Начисление,
		|	ИСТИНА КАК Используется,
		|	НачальнаяШтатнаяРасстановкаНачисления.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаНачисления.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
		|	НачальнаяШтатнаяРасстановкаНачисления.Размер
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Начисления КАК НачальнаяШтатнаяРасстановкаНачисления
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаНачисления.Ссылка = &Ссылка
		|	И НачальнаяШтатнаяРасстановкаНачисления.Начисление ССЫЛКА ПланВидовРасчета.Начисления
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаЛьготы.Ссылка.Месяц,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	НачальнаяШтатнаяРасстановкаЛьготы.Сотрудник,
		|	НачальнаяШтатнаяРасстановкаЛьготы.Льгота,
		|	ИСТИНА,
		|	НачальнаяШтатнаяРасстановкаЛьготы.Сотрудник.ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаЛьготы.Сотрудник.ГоловнаяОрганизация,
		|	НачальнаяШтатнаяРасстановкаЛьготы.Размер
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Льготы КАК НачальнаяШтатнаяРасстановкаЛьготы
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаЛьготы.Ссылка = &Ссылка
		|	И НачальнаяШтатнаяРасстановкаЛьготы.Льгота ССЫЛКА ПланВидовРасчета.Начисления";
	
	// Второй набор данных для проведения - таблица для формирования плановых начислений.
	ПлановыеНачисления = Запрос.Выполнить().Выгрузить();
	ПлановыеНачисления.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ОснованиеНачисления.Тип));
	ДанныеДляПроведения.Вставить("ПлановыеНачисления", ПлановыеНачисления);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаНачисления.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НачальнаяШтатнаяРасстановкаНачисления.Ссылка.Месяц
		|		ИНАЧЕ НачальнаяШтатнаяРасстановкаНачисления.ДатаНачала
		|	КОНЕЦ КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаНачисления.Ссылка.Организация,
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаНачисления.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(НачальнаяШтатнаяРасстановкаНачисления.ДатаОкончания, ДЕНЬ, 1)
		|	КОНЕЦ КАК ДействуетДо,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник КАК Сотрудник,
		|	СправочникСотрудники.ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Значение
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Показатели КАК НачальнаяШтатнаяРасстановкаПоказатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачальнаяШтатнаяРасстановка.Начисления КАК НачальнаяШтатнаяРасстановкаНачисления
		|		ПО НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = НачальнаяШтатнаяРасстановкаНачисления.Ссылка
		|			И НачальнаяШтатнаяРасстановкаПоказатели.ИдентификаторСтрокиВидаРасчета = НачальнаяШтатнаяРасстановкаНачисления.ИдентификаторСтрокиВидаРасчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК СправочникСотрудники
		|		ПО НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник = СправочникСотрудники.Ссылка
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
		|	И НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаЛьготы.Ссылка.Месяц,
		|	НачальнаяШтатнаяРасстановкаЛьготы.Ссылка.Организация,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник,
		|	СправочникСотрудники.ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Значение
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Показатели КАК НачальнаяШтатнаяРасстановкаПоказатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачальнаяШтатнаяРасстановка.Льготы КАК НачальнаяШтатнаяРасстановкаЛьготы
		|		ПО НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = НачальнаяШтатнаяРасстановкаЛьготы.Ссылка
		|			И НачальнаяШтатнаяРасстановкаПоказатели.ИдентификаторСтрокиВидаРасчета = НачальнаяШтатнаяРасстановкаЛьготы.ИдентификаторСтрокиВидаРасчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК СправочникСотрудники
		|		ПО НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник = СправочникСотрудники.Ссылка
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
		|	И НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаПоказатели.Ссылка.Месяц,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Ссылка.Организация,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник,
		|	СправочникСотрудники.ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Значение
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Показатели КАК НачальнаяШтатнаяРасстановкаПоказатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК СправочникСотрудники
		|		ПО НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник = СправочникСотрудники.Ссылка
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
		|	И НачальнаяШтатнаяРасстановкаПоказатели.ИдентификаторСтрокиВидаРасчета = 0
		|	И НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = &Ссылка";
	
	// Третий набор данных для проведения - таблица для формирования значений показателей начислений.
	ЗначенияПоказателей = Запрос.Выполнить().Выгрузить();
	ЗначенияПоказателей.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ОснованиеНачисления.Тип));
	ДанныеДляПроведения.Вставить("ЗначенияПоказателейНачислений", ЗначенияПоказателей);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.ДатаОстатка = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НачальнаяШтатнаяРасстановка.Месяц
		|		ИНАЧЕ НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.ДатаОстатка
		|	КОНЕЦ КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.Сотрудник,
		|	НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.ВидЕжегодногоОтпуска,
		|	НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.КоличествоДнейВГод,
		|	НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.КоличествоДней
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.ЕжегодныеОтпуска КАК НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыОтпусков КАК ВидыОтпусков
		|		ПО НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.ВидЕжегодногоОтпуска = ВидыОтпусков.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачальнаяШтатнаяРасстановка КАК НачальнаяШтатнаяРасстановка
		|		ПО НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.Ссылка = НачальнаяШтатнаяРасстановка.Ссылка
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.Ссылка = &Ссылка
		|	И (НачальнаяШтатнаяРасстановкаЕжегодныеОтпуска.КоличествоДнейВГод > 0
		|			ИЛИ ВидыОтпусков.ХарактерЗависимостиДнейОтпуска = ЗНАЧЕНИЕ(Перечисление.ХарактерЗависимостиКоличестваДнейОтпуска.ЗависитОтСтажа))";
	
	// Четвертый набор данных для проведения - таблица для формирования положенных видов ежегодных отпусков.
	ПоложенныеЕжегодныеОтпуска = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ЕжегодныеОтпуска", ПоложенныеЕжегодныеОтпуска);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаСотрудники.ПорядокРасчетаСтоимостиЕдиницыВремени КАК ПорядокРасчета,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка";
	
	// Пятый набор данных для проведения - таблица для формирования значений порядка пересчета тарифной ставки.
	ПорядокПересчетаТарифнойСтавки = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ПорядокПересчетаТарифнойСтавки", ПорядокПересчетаТарифнойСтавки);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаСотрудники.СовокупнаяТарифнаяСтавка КАК Значение,
		|	ВЫБОР
		|		КОГДА НачальнаяШтатнаяРасстановкаСотрудники.СовокупнаяТарифнаяСтавка = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыТарифныхСтавок.ПустаяСсылка)
		|		ИНАЧЕ НачальнаяШтатнаяРасстановкаСотрудники.ВидТарифнойСтавки
		|	КОНЕЦ КАК ВидТарифнойСтавки,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка";
	
	// Шестой набор данных для проведения - таблица для формирования значений совокупной тарифной ставки.
	ДанныеСовокупныхТарифныхСтавок = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ДанныеСовокупныхТарифныхСтавок", ДанныеСовокупныхТарифныхСтавок);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаСотрудники.РазрядКатегория КАК РазрядКатегория,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка";
		
	// Седьмой набор данных для проведения - таблица для формирования значений разряда сотрудника.
	РазрядыКатегорииСотрудников = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("РазрядыКатегорииСотрудников", РазрядыКатегорииСотрудников);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник,
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа) КАК Состояние,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК Начало,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК Окончание
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка
		|	И НачальнаяШтатнаяРасстановкаСотрудники.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.Подработка)";
	
	// Данные состояний
	ДанныеСостояний = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ДанныеСостояний", ДанныеСостояний);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка";
	
	// Девятый набор данных для проведения - таблица для формирования времени регистрации документа.
	СотрудникиДаты = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("СотрудникиДаты", СотрудникиДаты);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаПоказатели.Ссылка.Месяц КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Ссылка.Организация КАК Организация,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачальнаяШтатнаяРасстановкаПоказатели.Показатель КАК Показатель,
		|	ИСТИНА КАК Применение,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Показатели КАК НачальнаяШтатнаяРасстановкаПоказатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачальнаяШтатнаяРасстановка.Показатели КАК НачальнаяШтатнаяРасстановкаПоказателиНачислений
		|		ПО НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = НачальнаяШтатнаяРасстановкаПоказателиНачислений.Ссылка
		|			И НачальнаяШтатнаяРасстановкаПоказатели.Сотрудник = НачальнаяШтатнаяРасстановкаПоказателиНачислений.Сотрудник
		|			И НачальнаяШтатнаяРасстановкаПоказатели.Показатель = НачальнаяШтатнаяРасстановкаПоказателиНачислений.Показатель
		|			И (НачальнаяШтатнаяРасстановкаПоказателиНачислений.ИдентификаторСтрокиВидаРасчета <> 0)
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаПоказатели.ИдентификаторСтрокиВидаРасчета = 0
		|	И НачальнаяШтатнаяРасстановкаПоказатели.Ссылка = &Ссылка
		|	И НачальнаяШтатнаяРасстановкаПоказатели.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)
		|	И НачальнаяШтатнаяРасстановкаПоказателиНачислений.Показатель ЕСТЬ NULL ";
	
	// Десятый набор данных для проведения - таблица для формирования применения дополнительных показателей.
	ПрименениеДополнительныхПоказателей = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ПрименениеДополнительныхПоказателей", ПрименениеДополнительныхПоказателей);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.ДатаОстатка,
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.Сотрудник,
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.ВидЕжегодногоОтпуска,
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.РабочийГодНачало,
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.РабочийГодОкончание,
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.Остаток КАК КоличествоДней
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.ОстаткиОтпусковПоРабочимГодам КАК НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаОстаткиОтпусковПоРабочимГодам.Ссылка = &Ссылка";
	
	// Одиннадцатый набор данных для проведения - таблица для формирования остатков отпусков.
	НачальныеОстаткиОтпусков = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("НачальныеОстаткиОтпусков", НачальныеОстаткиОтпусков);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	НачальнаяШтатнаяРасстановкаСотрудники.Сотрудник КАК Сотрудник,
		|	НачальнаяШтатнаяРасстановкаСотрудники.ПКУ КАК ПКУ,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДействуетДо
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК НачальнаяШтатнаяРасстановкаСотрудники
		|ГДЕ
		|	НачальнаяШтатнаяРасстановкаСотрудники.Ссылка = &Ссылка";
	
	// Двенадцатый набор данных для проведения - таблица для формирования значений разряда сотрудника.
	ПКУСотрудников = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ПКУСотрудников", ПКУСотрудников);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("Грейды");
		ДанныеГрейдовСотрудников = Модуль.ДанныеДляПроведенияНачальнойШтатнойРасстановкиГрейдыСотрудников(Ссылка);
		ДанныеДляПроведения.Вставить("ДанныеГрейдовСотрудников", ДанныеГрейдовСотрудников);
	КонецЕсли;
	
	НастройкиПрограммыБюджетногоУчреждения = ЗарплатаКадрыРасширенный.НастройкиПрограммыБюджетногоУчреждения();
	ИспользоватьРасчетДенежногоДовольствияВоеннослужащих = НастройкиПрограммыБюджетногоУчреждения.ИспользоватьРасчетДенежногоДовольствияВоеннослужащих;
	ШтатнаяРасстановкаВоеннослужащих = ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.ВоеннослужащийПоПризыву
		Или ВидДоговора = Перечисления.ВидыДоговоровССотрудниками.КонтрактВоеннослужащего;
	
	ДанныеДляПроведения.Вставить("РегистрироватьГрафикиРаботы", Не ШтатнаяРасстановкаВоеннослужащих Или Не ИспользоватьРасчетДенежногоДовольствияВоеннослужащих); 
	ДанныеДляПроведения.Вставить("ШтатнаяРасстановкаВоеннослужащих",ШтатнаяРасстановкаВоеннослужащих);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка.Месяц КАК ДатаСобытия,
		|	Сотрудники.Сотрудник,
		|	Сотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Сотрудники.КатегорияЕСВ
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Ссылка = &Ссылка
		|	И Сотрудники.КатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка)";
	
	// Данные ЕСВ
	ДанныеОЕСВСотрудников = Запрос.Выполнить().Выгрузить();
	ДанныеДляПроведения.Вставить("ДанныеОЕСВСотрудников", ДанныеОЕСВСотрудников);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

Процедура ПроверитьУникальностьЗапрашиванияПоказателя(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаСобытия", Месяц);
	Запрос.УстановитьПараметр("ТаблицаНачислений", Начисления);
	Запрос.УстановитьПараметр("ТаблицаПоказателей", Показатели);
	Запрос.УстановитьПараметр("ДополнительныеПоказатели", РасчетЗарплатыРасширенный.ПустаяТаблицаДополнительныхПоказателей());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаВидовРасчета.ДатаНачала КАК Период,
		|	ТаблицаВидовРасчета.Сотрудник КАК Сотрудник,
		|	ТаблицаВидовРасчета.Начисление КАК Начисление,
		|	ЗНАЧЕНИЕ(Перечисление.ДействияСНачислениямиИУдержаниями.Утвердить) КАК Действие,
		|	ТаблицаВидовРасчета.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета
		|ПОМЕСТИТЬ ВТВидыРасчета
		|ИЗ
		|	&ТаблицаНачислений КАК ТаблицаВидовРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПоказателей.Показатель КАК Показатель,
		|	ТаблицаПоказателей.Значение КАК ЗначениеПоказателя,
		|	ТаблицаПоказателей.ИдентификаторСтрокиВидаРасчета КАК ИдентификаторСтрокиВидаРасчета
		|ПОМЕСТИТЬ ВТПоказатели
		|ИЗ
		|	&ТаблицаПоказателей КАК ТаблицаПоказателей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыРасчета.Период КАК Период,
		|	ВидыРасчета.Сотрудник КАК Сотрудник,
		|	ВидыРасчета.Начисление КАК Начисление,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|	ВидыРасчета.Действие КАК Действие,
		|	ЕСТЬNULL(Показатели.Показатель, ЗНАЧЕНИЕ(Справочник.ПоказателиРасчетаЗарплаты.ПустаяСсылка)) КАК Показатель,
		|	ЕСТЬNULL(Показатели.ЗначениеПоказателя, 0) КАК ЗначениеПоказателя
		|ПОМЕСТИТЬ ВТПоказателиВидовРасчета
		|ИЗ
		|	ВТВидыРасчета КАК ВидыРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|		ПО ВидыРасчета.ИдентификаторСтрокиВидаРасчета = Показатели.ИдентификаторСтрокиВидаРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДополнительныеПоказатели.Период КАК Период,
		|	ДополнительныеПоказатели.Сотрудник КАК Сотрудник,
		|	ДополнительныеПоказатели.Показатель КАК Показатель,
		|	ДополнительныеПоказатели.ЗначениеПоказателя КАК ЗначениеПоказателя,
		|	ДополнительныеПоказатели.Действие КАК Действие
		|ПОМЕСТИТЬ ВТДополнительныеПоказатели
		|ИЗ
		|	&ДополнительныеПоказатели КАК ДополнительныеПоказатели";
	
	Запрос.Выполнить();
	
	РасчетЗарплатыРасширенный.ПроверитьУникальностьЗапрашиванияПоказателя(Запрос.МенеджерВременныхТаблиц, Ссылка, Отказ);

КонецПроцедуры

Процедура СоздатьВТДанныеДокументов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.Сотрудник,
		|	НАЧАЛОПЕРИОДА(ТаблицаДокумента.Ссылка.Месяц, МЕСЯЦ) КАК ПериодДействия,
		|	ТаблицаДокумента.Ссылка КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.НачальнаяШтатнаяРасстановка.Сотрудники КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Регистратор";
		
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
