
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ПрочееОприходованиеТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	//++ НЕ УТКА
	Документы.СписаниеОСМеждународныйУчет.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	//-- НЕ УТКА
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеОС) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СписаниеОС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СписаниеОС);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Подготовка к передаче ОС';uk='Підготовка до передачі ОЗ'"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	УчетОСВызовСервера.ПрочиеРасходы(ТекстыЗапроса, Регистры, ПрочиеРасходы(ТекстыЗапроса));
	УчетОСВызовСервера.ПартииПрочихРасходов(ТекстыЗапроса, Регистры, ПартииПрочихРасходов(ТекстыЗапроса));
	УчетОСВызовСервера.ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса, Регистры, ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса));
	УчетОСВызовСервера.ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры);
	УчетОСВызовСервера.ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	НачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	НачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	СостоянияОСОрганизаций(ТекстыЗапроса, Регистры);
	СобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СобытиеОС КАК СобытиеОС,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	Документ.СписаниеОС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	УчетОСВызовСервера.ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДополнительныеСвойства);
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	Запрос.УстановитьПараметр("Граница", Новый Граница(НачалоМесяца(Реквизиты.Период), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НазваниеДокумента", НСтр("ru='Списание ОС';uk='Списання ОЗ'"));
	Запрос.УстановитьПараметр("КонецМесяца", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СписаниеОстаточнойСтоимости", Истина);
	Запрос.УстановитьПараметр("ДатаСписанияОстаточнойСтоиости", Реквизиты.Период);
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
	
КонецПроцедуры

Процедура ВременнаяТаблицаСгруппированнаяАмортизация(ТекстыЗапроса)
	
	ИмяТаблицы = "НачисленнаяАмортизация";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	УчетОСВызовСервера.ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица сгруппированная амортизация
	|"+
	"ВЫБРАТЬ
	|	НачисленнаяАмортизация.ОбъектУчета КАК ОсновноеСредство,
	|	СУММА(НачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(НачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ,
	|	0 КАК СуммаПР,
	|	0 КАК СуммаВР
	|ПОМЕСТИТЬ НачисленнаяАмортизация
	|ИЗ
	|	втНачисленнаяАмортизация КАК НачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленнаяАмортизация.ОбъектУчета
	|" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПоТабличнойЧасти(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаДокумента";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСгруппированнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица по табличной части
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СуммаСписанияБУ,
	|	ТаблицаОС.СуммаСписанияНУ,
	|	ЕСТЬNULL(Амортизация.СуммаБУ,0) КАК СуммаАмортизацииБУ,
	|	ЕСТЬNULL(Амортизация.СуммаНУ,0) КАК СуммаАмортизацииНУ,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				,
	|				(Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						&Организация,
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						Документ.СписаниеОС.ОС КАК ТаблицаОС
	|					ГДЕ
	|						ТаблицаОС.Ссылка = &Ссылка)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|		ПО ТаблицаОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачисленнаяАмортизация КАК Амортизация
	|		ПО ТаблицаОС.ОсновноеСредство = Амортизация.ОсновноеСредство
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаОС";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПоТабличнойЧасти(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ТаблицаОС
	|"+
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ОсновноеСредство,
	|	ТаблицаДокумента.НомерСтроки,
	|	ПервоначальныеСведения.ПоказательНаработки КАК ПоказательНаработки,
	|	
	|	ТаблицаДокумента.СуммаСписанияБУ КАК СуммаСписанияБУ,
	|	ТаблицаДокумента.СуммаСписанияНУ КАК СуммаСписанияНУ,
	|	
	|	ТаблицаДокумента.СуммаСписанияБУ -
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеСчетУчета.СуммаОстатокДт,0)=0
	|	ТОГДА 0
	|	ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(ДанныеСчетАмортизации.СуммаОстатокКт,0) + ЕСТЬNULL(ТаблицаДокумента.СуммаАмортизацииБУ,0)) * ЕСТЬNULL(ТаблицаДокумента.СуммаСписанияБУ/ДанныеСчетУчета.СуммаОстатокДт,0) КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК РасходБУ,
	|	
	|	ТаблицаДокумента.СуммаСписанияНУ -
	|	ВЫБОР КОГДА ЕСТЬNULL(ДанныеСчетУчета.СуммаНУОстатокДт,0)=0
	|	ТОГДА 0
	|	ИНАЧЕ ВЫРАЗИТЬ((ЕСТЬNULL(ДанныеСчетАмортизации.СуммаНУОстатокКт,0) + ЕСТЬNULL(ТаблицаДокумента.СуммаАмортизацииНУ,0)) * ЕСТЬNULL(ТаблицаДокумента.СуммаСписанияНУ/ДанныеСчетУчета.СуммаНУОстатокДт,0) КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК РасходНУ,
	|	
	|	
	|	ЕСТЬNULL(ДанныеСчетУчета.СуммаОстатокДт,0)
	|	- ЕСТЬNULL(ДанныеСчетАмортизации.СуммаОстатокКт,0)
	|	- ЕСТЬNULL(ТаблицаДокумента.СуммаАмортизацииБУ,0) КАК ОстаточнаяСтоимостьБУ
	|	
	|	
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство В(ВЫБРАТЬ Т.ОсновноеСредство ИЗ ТаблицаДокумента КАК Т)) КАК ПервоначальныеСведения
	|		ПО ПервоначальныеСведения.ОсновноеСредство = ТаблицаДокумента.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&КонецМесяца,
	|				Счет В (ВЫБРАТЬ Т.СчетУчета ИЗ ТаблицаДокумента КАК Т),,
	|				(Организация, Подразделение, Субконто1) В
	|					(ВЫБРАТЬ
	|						&Организация, &Подразделение, ТаблицаДокумента.ОсновноеСредство
	|					ИЗ
	|						ТаблицаДокумента)
	|				) КАК ДанныеСчетУчета
	|		ПО ТаблицаДокумента.ОсновноеСредство = ДанныеСчетУчета.Субконто1
	|			И ТаблицаДокумента.СчетУчета = ДанныеСчетУчета.Счет
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&КонецМесяца,
	|				Счет В (ВЫБРАТЬ Т.СчетНачисленияАмортизации ИЗ ТаблицаДокумента КАК Т),,
	|				(Организация, Подразделение, Субконто1) В
	|					(ВЫБРАТЬ
	|						&Организация, &Подразделение, ТаблицаДокумента.ОсновноеСредство
	|					ИЗ
	|						ТаблицаДокумента)
	|				) КАК ДанныеСчетАмортизации
	|		ПО ТаблицаДокумента.ОсновноеСредство = ДанныеСчетАмортизации.Субконто1
	|			И ТаблицаДокумента.СчетНачисленияАмортизации = ДанныеСчетАмортизации.Счет
	|"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОстаткиСтоимости(ТекстыЗапроса)
	
	ИмяТаблицы = "ОстаткиДопКапитала";
	
	Если ПроведениеСервер.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПоТабличнойЧасти(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица остатков доп капитала
	|"+
	"ВЫБРАТЬ
	|	ПереоценкаОСБухгалтерскийУчетОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ПереоценкаОСБухгалтерскийУчетОбороты.СуммаПереоценкиОстаток) КАК СуммаВыбытия
	|ПОМЕСТИТЬ ОстаткиДопКапитала
	|ИЗ
	|	РегистрНакопления.ПереоценкаОСБухгалтерскийУчет.Остатки(
	|				&Период,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							ТаблицаДокумента.ОсновноеСредство
	|						ИЗ
	|							ТаблицаДокумента КАК ТаблицаДокумента)) КАК ПереоценкаОСБухгалтерскийУчетОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновноеСредство
	|" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура НачислениеАмортизацииОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСБухгалтерскийУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НачислениеАмортизацииОСБухгалтерскийУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ЛОЖЬ КАК НачислятьАмортизацию
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура НачислениеАмортизацииОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НачислениеАмортизацииОСНалоговыйУчет";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица НачислениеАмортизацииОСНалоговыйУчет
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ЛОЖЬ КАК НачислятьАмортизацию
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры


Процедура СобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СобытияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&СобытиеОС КАК Событие,
	|
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&Номер КАК НомерДокумента,
	|	0 КАК СуммаЗатратБУ,
	|	0 КАК СуммаЗатратНУ
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура СостоянияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияОСОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СостоянияОСОрганизаций
	|"+
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	&Период КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК Состояние
	|
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ПрочиеРасходы(ТекстыЗапроса)
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Возврат
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,	
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.ОстаточнаяСтоимостьБУ КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|		
	|ГДЕ
	|	НЕ ПВХСтатьиРасходов.ВариантРаспределенияРасходов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,	
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.ОстаточнаяСтоимостьБУ КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|   ЛОЖЬ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,	
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.РасходБУ КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ	
	|	НЕ ПВХСтатьиРасходов.ВариантРаспределенияРасходов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначение,	
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.РасходБУ КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|   ЛОЖЬ
	|   ";
КонецФункции

Функция ПартииПрочихРасходов(ТекстыЗапроса)
	
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	
	Возврат
	"ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.ОстаточнаяСтоимостьБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|		
	|ГДЕ
	|	 ПВХСтатьиРасходов.ВариантРаспределенияРасходов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.ОстаточнаяСтоимостьБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|	ЛОЖЬ	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.РасходБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|	ПВХСтатьиРасходов.ВариантРаспределенияРасходов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.РасходБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК ПВХСтатьиРасходов
	|		ПО &СтатьяРасходов = ПВХСтатьиРасходов.Ссылка
	|ГДЕ
	|   ЛОЖЬ
	|	";
	
КонецФункции

Функция ПереоценкаОСБухгалтерскийУчет(ТекстыЗапроса)
		
	ВременнаяТаблицаОсновныхСредств(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиСтоимости(ТекстыЗапроса);	
	
	Возврат
	"ВЫБРАТЬ // Выбытие ОС
	|	&Дата КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ОстаткиДопКапитала.СуммаВыбытия КАК СуммаПереоценки
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиДопКапитала КАК ОстаткиДопКапитала
	|		ПО ТаблицаОС.ОсновноеСредство = ОстаткиДопКапитала.ОсновноеСредство
	|		
	|ГДЕ
	|	ОстаткиДопКапитала.СуммаВыбытия > 0
	|
	|";
	
КонецФункции
#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстЗапросаВТОтраженияВРеглУчетеУКР() Экспорт
	
	Возврат УчетОСВызовСервера.ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизацииУКР("СписаниеОС")
		+ УчетОСВызовСервера.ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетам();
КонецФункции

Функция ТекстОтраженияВРеглУчетеУКР() Экспорт
	
	Разделитель = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	
	Возврат УчетОСВызовСервера.ТекстОтраженияВРеглУчетеНачисленнойАмортизации()
		+ Разделитель + СписаниеПервоначальнойСтоимостиОС()
		+ Разделитель + СписаниеНачисленнойАмортизации()
		+ Разделитель + СписаниеОстатковДопКапиталаОС();
	
КонецФункции

Функция СписаниеПервоначальнойСтоимостиОС()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание первоначальной стоимости ОС (Дт Счет выбытия ОС :: Кт Счет учета ОС)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьБУ - втОстаткиПоСчетам.НакопленнаяАмортизацияБУ, 0) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьНУ, 0) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначениеКт,	
	|	
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.ВосстановительнаяСтоимостьНУ - втОстаткиПоСчетам.НакопленнаяАмортизацияНУ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Списание остаточной стоимости ОС на расходы"" КАК Содержание
	|ИЗ
	|	Документ.СписаниеОС КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС.ОС КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|		ПО Строки.ОсновноеСредство = НалоговыеНазначенияОС.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|		ПО Строки.ОсновноеСредство = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоСчетам КАК втОстаткиПоСчетам
	|		ПО Строки.ОсновноеСредство = втОстаткиПоСчетам.ОбъектУчета
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|";
	
КонецФункции

Функция СписаниеНачисленнойАмортизации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание начисленной амортизации (Дт Счет начисления амортизации:: Кт Счет учета ОС)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(втОстаткиПоСчетам.НакопленнаяАмортизацияБУ, 0) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|   НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначениеДт,
	|	
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетДт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.НакопленнаяАмортизацияНУ, 0) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Строки.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|   НалоговыеНазначенияОС.НалоговоеНазначение КАК НалоговоеНазначениеКт,		
	|	
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(втОстаткиПоСчетам.НакопленнаяАмортизацияНУ, 0) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Списание начисленной амортизации ОС"" КАК Содержание
	|ИЗ
	|	Документ.СписаниеОС КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС.ОС КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНалоговыеНазначенияОС КАК НалоговыеНазначенияОС
	|		ПО Строки.ОсновноеСредство = НалоговыеНазначенияОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|		ПО Строки.ОсновноеСредство = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиПоСчетам КАК втОстаткиПоСчетам
	|		ПО Строки.ОсновноеСредство = втОстаткиПоСчетам.ОбъектУчета
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И СчетаОтражения.СчетНачисленияАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|";
	
КонецФункции


Функция СписаниеОстатковДопКапиталаОС()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание дополнительного капитала (Дт СчетДооценки :: Кт СчетНераспределеннойПрибыли)
	|ВЫБРАТЬ 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(-ОстаткиДопКапитала.СуммаОстаток, 0) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеДт,	
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДооценкаОсновныхСредств) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|   НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Списание дополнительного капитала"" КАК Содержание
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС.ОС КАК Строки
	|		ПО Строки.Ссылка = Операция.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДооценкаОсновныхСредств),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|				) КАК ОстаткиДопКапитала
	|		ПО Строки.ОсновноеСредство = ОстаткиДопКапитала.Субконто1
	|		И  Операция.Организация = ОстаткиДопКапитала.Организация
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И (-ОстаткиДопКапитала.СуммаОстаток) > 0
	|";
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	
	// Форма ОЗ-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОЗ3";
	КомандаПечати.Представление = НСтр("ru='Форма ОЗ-3';uk='Форма ОЗ-3'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОЗ3") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОЗ3",
			НСтр("ru='Форма ОЗ-3';uk='Форма ОЗ-3'"), ПечатьОЗ3(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета),, ИмяМакета);
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой ОЗ-3
// 
Функция ПечатьОЗ3(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент   = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеОС_ОЗ3";
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_UK_ОЗ3");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл	
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка",         Ссылка);
		Запрос.УстановитьПараметр("ТекДата",        Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеОС.Дата                           КАК ДатаАкта,
		|	СписаниеОС.Номер                          КАК НомерАкта,
		|	ВЫРАЗИТЬ(СписаниеОС.Организация.НаименованиеПолное 
		|	                    КАК СТРОКА(1000))     КАК Организация,
		|	СписаниеОС.Организация.КодПоЕДРПОУ               КАК ЕДРПОУ,
		|	СписаниеОС.ПричинаСписания                КАК ПричинаСписания,
		|	СписаниеОС.ПричинаСписания.Код            КАК КодПричины
		|ИЗ
		|	Документ.СписаниеОС                       КАК СписаниеОС
		|
		|ГДЕ
		|	СписаниеОС.Ссылка = &Ссылка";
		ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
		ВыборкаПоШапке.Следующий();
		
		СписокОС = Ссылка.ОС.ВыгрузитьКолонку("ОсновноеСредство");
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка"        , Ссылка);
		Запрос.УстановитьПараметр("СписокОС"      , СписокОС);
		Запрос.УстановитьПараметр("ТекДата"       , Ссылка.МоментВремени());
		Запрос.УстановитьПараметр("ТекОрганизация", Ссылка.Организация);
		Запрос.УстановитьПараметр("СостояниеВвода", Перечисления.СостоянияОС.ПринятоКУчету);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПервоначальныеСведенияБУ.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ПервоначальныеСведенияБУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
		|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетКт,
		|	СписаниеОСОС.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОС,
		|	СписаниеОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		|	СписаниеОСОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
		|	ДанныеСчетаРасходов.Счет КАК СчетДт,
		|	ДанныеСчетУчета.СуммаОстаток - ДанныеСчетАмортизации.СуммаОборотКт КАК ОстаточнаяСтоимость,
		|	ДанныеСчетАмортизации.СуммаОборотКт КАК Амортизация,
		|	МестонахождениеОС.Местонахождение КАК СдалоПодразделение,
		|	СостояниеОС.ДатаСостояния КАК ДатаВвода
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК СписаниеОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
		|				&ТекДата,
		|				ОсновноеСредство В (&СписокОС)
		|					И Организация = &ТекОрганизация) КАК ПервоначальныеСведенияБУ
		|		ПО СписаниеОСОС.ОсновноеСредство = ПервоначальныеСведенияБУ.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
		|				&ТекДата,
		|				ОсновноеСредство В (&СписокОС)
		|					И Организация = &ТекОрганизация) КАК СчетаБухгалтерскогоУчета
		|		ПО СписаниеОСОС.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
		|				&ТекДата,
		|				Организация = &ТекОрганизация
		|					И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОС
		|		ПО СписаниеОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|			СостоянияОС.ДатаСостояния КАК ДатаСостояния
		|		ИЗ
		|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОС
		|		ГДЕ
		|			СостоянияОС.Состояние = &СостояниеВвода
		|			И СостоянияОС.Организация = &ТекОрганизация
		|			И СостоянияОС.ОсновноеСредство В(&СписокОС)) КАК СостояниеОС
		|		ПО СписаниеОСОС.ОсновноеСредство = СостояниеОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&ТекДата,
		|				Счет В
		|					(ВЫБРАТЬ
		|						Т.СчетУчета
		|					ИЗ
		|						РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ТекДата, ОсновноеСредство В (&СписокОС)
		|							И Организация = &ТекОрганизация) КАК Т),
		|				,
		|				(Организация, Подразделение, Субконто1) В
		|					(ВЫБРАТЬ
		|						ДокументСписания.Организация,
		|						ДокументСписания.Подразделение,
		|						СписаниеОСОС.ОсновноеСредство
		|					ИЗ
		|						Документ.СписаниеОС.ОС КАК СписаниеОСОС
		|							ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК ДокументСписания
		|							ПО
		|								СписаниеОСОС.Ссылка = ДокументСписания.Ссылка
		|					ГДЕ
		|						ДокументСписания.Ссылка = &Ссылка)) КАК ДанныеСчетУчета
		|		ПО СписаниеОСОС.ОсновноеСредство = ДанныеСчетУчета.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				,
		|				&ТекДата,
		|				,
		|				,
		|				Счет В
		|					(ВЫБРАТЬ
		|						Т.СчетНачисленияАмортизации
		|					ИЗ
		|						РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ТекДата, ОсновноеСредство В (&СписокОС)
		|							И Организация = &ТекОрганизация) КАК Т),
		|				,
		|				(Организация, Подразделение, Субконто1) В
		|					(ВЫБРАТЬ
		|						ДокументСписания.Организация,
		|						ДокументСписания.Подразделение,
		|						СписаниеОСОС.ОсновноеСредство
		|					ИЗ
		|						Документ.СписаниеОС.ОС КАК СписаниеОСОС
		|							ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК ДокументСписания
		|							ПО
		|								СписаниеОСОС.Ссылка = ДокументСписания.Ссылка
		|					ГДЕ
		|						ДокументСписания.Ссылка = &Ссылка)) КАК ДанныеСчетАмортизации
		|		ПО (СписаниеОСОС.ОсновноеСредство = ДанныеСчетУчета.Субконто1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				,
		|				&ТекДата,
		|				,
		|				,
		|				,
		|				(Организация, Подразделение, Субконто1) В
		|					(ВЫБРАТЬ
		|						ДокументСписания.Организация,
		|						ДокументСписания.Подразделение,
		|						ДокументСписания.СтатьяРасходов
		|					ИЗ
		|						Документ.СписаниеОС КАК ДокументСписания
		|					ГДЕ
		|						ДокументСписания.Ссылка = &Ссылка),
		|				КорСчет В
		|					(ВЫБРАТЬ
		|						Т.СчетУчета
		|					ИЗ
		|						РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ТекДата, ОсновноеСредство В (&СписокОС)
		|							И Организация = &ТекОрганизация) КАК Т),
		|				) КАК ДанныеСчетаРасходов
		|		ПО СписаниеОСОС.ОсновноеСредство = ДанныеСчетаРасходов.КорСубконто1
		|ГДЕ
		|	СписаниеОСОС.Ссылка = &Ссылка";
			
		Результат = Запрос.Выполнить();
		ВыборкаПоОС = Результат.Выбрать();
		
		СписокПодразделений = Результат.Выгрузить().ВыгрузитьКолонку("СдалоПодразделение");
		ВыборкаПоКомиссии = ОбщегоНазначенияБПВызовСервера.ПолучитьСведенияОКомиссии(Ссылка);
		
		Пока ВыборкаПоОС.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("ОЗ3");
			Параметры     = ОбластьМакета.Параметры;
			Параметры.Заполнить(ВыборкаПоШапке);
			Параметры.Заполнить(ВыборкаПоКомиссии);
			Параметры.Организация = СокрП(ВыборкаПоШапке.Организация);
			Параметры.Заполнить(ВыборкаПоОС);
			Параметры.ВидОперации = "Списання";	
			ТабДокумент.Вывести(ОбластьМакета);
			НеНачало = Истина;
			
		КонецЦикла;
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;	
		
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСписаниеТоваров()


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	УчетОСВызовСервера.ЗаполнитьВходящиеДанныеАмортизации(ВходящиеДанные);
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
