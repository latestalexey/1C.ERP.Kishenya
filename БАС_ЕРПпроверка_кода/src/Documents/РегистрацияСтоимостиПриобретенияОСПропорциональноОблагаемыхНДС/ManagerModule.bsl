#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс    

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ПроведениеПоРеглУчетуУКР

#КонецОбласти 	

#КонецОбласти 	

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
    
    Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                   КАК Ссылка,
	|	ДанныеДокумента.Дата                     КАК Период,
    |
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ДанныеДокумента.СпецРежимНалогообложения КАК СпецРежимНалогообложения
	|
	|ИЗ
	|	Документ.РегистрацияСтоимостиПриобретенияОСПропорциональноОблагаемыхНДС КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
    
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
    
	Запрос.УстановитьПараметр("Период",                                   Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",                              Реквизиты.Организация);
	Запрос.УстановитьПараметр("СпецРежимНалогообложения",                 Реквизиты.СпецРежимНалогообложения);
	
КонецПроцедуры

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
    
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
    ТекстЗапросаТаблицаСтоимостьПриобретенияОСПропорциональноОблагаемыхНДС(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
    
КонецПроцедуры

Функция ТекстЗапросаТаблицаСтоимостьПриобретенияОСПропорциональноОблагаемыхНДС(Запрос, ТекстыЗапроса, Регистры)
    
	ИмяРегистра = "СтоимостьПриобретенияОСПропорциональноОблагаемыхНДС";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
    КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
    |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
    |
	|	&Организация КАК Организация,
	|	ОС.НеоборотныйАктив КАК НеоборотныйАктив,
    |	ОС.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации,
    |	ОС.ДатаНачалаИспользования КАК ДатаНачалаИспользования,
    |	&СпецРежимНалогообложения КАК СпецРежимНалогообложения,
    |
    |	ОС.БазаНДС КАК БазаНДС,
    |	ОС.СуммаНДС КАК СуммаНДС,
    |	ОС.СуммаНДСПропорциональноКредит КАК СуммаНДСПропорциональноКредит
	|ИЗ
	|	Документ.РегистрацияСтоимостиПриобретенияОСПропорциональноОблагаемыхНДС.ОС КАК ОС
	|ГДЕ
	|	ОС.Ссылка = &Ссылка
    |";
		
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти 	

#Область СозданиеНаОсновании

Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#КонецОбласти 	

#КонецОбласти 	


#КонецЕсли