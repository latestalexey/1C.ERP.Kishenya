#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическиеЛица.ФизическоеЛицо");
	
КонецПроцедуры
// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДанныеПроведения = ДанныеДляПроведения();
	
	ВзаиморасчетыССотрудниками.ЗарегистрироватьНачальныеОстатки(
		Движения, Отказ, Организация, Месяц, ДанныеПроведения.ЗадолженностьПоЗарплате);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПроведения()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодВзаиморасчетов", Месяц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
	|	ЗадолженностьПоЗарплате.Сотрудник,
	|	ЗадолженностьПоЗарплате.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗадолженностьПоЗарплате.Подразделение,
	|	ЗадолженностьПоЗарплате.СтатьяФинансирования,
	|	ЗадолженностьПоЗарплате.СтатьяРасходов,
	|	ЗадолженностьПоЗарплате.ГруппаУчетаНачислений,
	|	ЗадолженностьПоЗарплате.Сумма
	|ИЗ
	|	Документ.НачальнаяЗадолженностьПоЗарплате.ЗадолженностьПоЗарплате КАК ЗадолженностьПоЗарплате
	|ГДЕ
	|	ЗадолженностьПоЗарплате.Ссылка = &Ссылка";
	
	РезультатыЗапроса = Запрос.Выполнить();
	
	ДанныеДляПроведения = Новый Структура; 	
	ДанныеДляПроведения.Вставить("ЗадолженностьПоЗарплате", РезультатыЗапроса.Выгрузить());
	
	Возврат ДанныеДляПроведения;
	
КонецФункции

#КонецОбласти

#КонецЕсли
