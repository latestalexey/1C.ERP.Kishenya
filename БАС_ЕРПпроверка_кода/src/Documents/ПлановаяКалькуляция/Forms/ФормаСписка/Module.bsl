
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Основание;
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Спецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ЗаказНаПроизводство", Документы.ЗаказНаПроизводство.ПустаяСсылка());
	
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.ОтборОтветственный.СписокВыбора,
		ОбщегоНазначенияУТ.ПолучитьСписокПользователейСПравомДобавления(Метаданные.Документы.ПлановаяКалькуляция));
		
	Параметры.Свойство("РежимВыбора", Элементы.Список.РежимВыбора);
		
	Если Параметры.Свойство("Основание", Основание) И ЗначениеЗаполнено(Основание) Тогда
		
		// Форма открывается из карточки номенклатуры, спецификации или заказа
		ТипОснования = ТипЗнч(Основание);
		
		Если ТипОснования = Тип("СправочникСсылка.РесурсныеСпецификации") Тогда
			Спецификация = Основание;
			УстановитьОтборПоСпецификации();
			Элементы.ОтборСпецификация.Видимость = Элементы.Список.РежимВыбора;
		ИначеЕсли ТипОснования = Тип("СправочникСсылка.Номенклатура") Тогда
			Номенклатура = Основание;
			УстановитьОтборПоНоменклатуре();
			Элементы.ОтборНоменклатура.Видимость = Элементы.Список.РежимВыбора;
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			ЗаказНаПроизводство = Основание;
			УстановитьОтборПоЗаказуНаПроизводство();
		КонецЕсли;
		
		НеЗагружатьНастройки = Истина;
	КонецЕсли;
	
	Параметры.Отбор.Свойство("Статус", Статус);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	

	ОбщегоНазначенияУТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");

	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если НеЗагружатьНастройки Тогда
		Настройки.Удалить("Статус");
		Настройки.Удалить("Номенклатура");
		Настройки.Удалить("Ответственный");
		Настройки.Удалить("Спецификация");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если НеЗагружатьНастройки Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьОтборПоСтатусу();
	УстановитьОтборПоНоменклатуре();
	УстановитьОтборПоСпецификации();
	УстановитьОтборПоОтветственному();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	
	УстановитьОтборПоСтатусу();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНоменклатураПриИзменении(Элемент)
	
	УстановитьОтборПоНоменклатуре();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСпецификацияПриИзменении(Элемент)
	
	УстановитьОтборПоСпецификации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйПриИзменении(Элемент)
	
	УстановитьОтборПоОтветственному();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Перем ПараметрыФормы;
	
	Если Не Копирование Тогда
		
		Если ЗначениеЗаполнено(Спецификация) Тогда
			
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(Спецификация);
			
			ЗначенияЗаполнения = Новый Структура("МассивОбъектов, ТипОснования", МассивОбъектов, Тип("СправочникСсылка.РесурсныеСпецификации"));
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
		ИначеЕсли ЗначениеЗаполнено(Номенклатура) Тогда
			МассивОбъектов = Новый Массив;
			МассивОбъектов.Добавить(Номенклатура);
			
			ЗначенияЗаполнения = Новый Структура("МассивОбъектов, ТипОснования", МассивОбъектов, Тип("СправочникСсылка.Номенклатура"));
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
		ИначеЕсли ЗначениеЗаполнено(ЗаказНаПроизводство) Тогда
			
			ЗначенияЗаполнения = Новый Структура("ОбъектКалькуляции", ПредопределенноеЗначение("Перечисление.ОбъектыКалькуляции.ЗаказНаПроизводство"));
			ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрыФормы) Тогда
			Отказ = Истина;
			ОткрытьФорму("Документ.ПлановаяКалькуляция.ФормаОбъекта", ПараметрыФормы);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец МенюОтчеты


&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоСтатусу()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Статус",
		Статус,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Статус));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоНоменклатуре()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Номенклатура",
		Номенклатура,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Номенклатура));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Номенклатура", Номенклатура);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоСпецификации()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Спецификация",
		Спецификация,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Спецификация));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Спецификация", Спецификация);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоОтветственному()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Ответственный",
		Ответственный,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Ответственный));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоЗаказуНаПроизводство()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"ЗаказНаПроизводство",
		ЗаказНаПроизводство,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(ЗаказНаПроизводство));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ЗаказНаПроизводство", ЗаказНаПроизводство);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти