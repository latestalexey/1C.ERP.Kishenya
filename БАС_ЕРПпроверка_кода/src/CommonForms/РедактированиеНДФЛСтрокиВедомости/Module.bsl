#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ИдентификаторСтроки",	ИдентификаторСтроки);
	НДФЛ.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВХранилищеНДФЛПоСтроке));
	
	Параметры.Свойство("ФизическоеЛицо",		ФизическоеЛицо);
	
	Параметры.Свойство("Организация",			Организация);
	Параметры.Свойство("Подразделение",			Подразделение);
	Параметры.Свойство("ПериодРегистрации",		ПериодРегистрации);
	
	Заголовок = Строка(ФизическоеЛицо);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(НДФЛ, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой");	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(НДФЛ, "МесяцНалоговогоПериода", "МесяцНалоговогоПериодаСтрокой");	
	
	ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ = ПолучитьФункциональнуюОпцию("ИспользоватьУчетОбособленныхПодразделенийДляНДФЛ", Новый Структура("Организация", Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для НомерСтроки = 0 По НДФЛ.Количество()-1 Цикл
		
		Если НЕ ЗначениеЗаполнено(НДФЛ[НомерСтроки].ФизическоеЛицо) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан сотрудник';uk='Не вказаний співробітник'"), , СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("НДФЛ[%1].ФизическоеЛицо", НомерСтроки));
			Отказ = Истина
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НДФЛ[НомерСтроки].ПериодВзаиморасчетов) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не задан период взаиморасчетов';uk='Не заданий період взаєморозрахунків'"), , СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("НДФЛ[%1].ПериодВзаиморасчетовСтрокой", НомерСтроки));
			Отказ = Истина
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НДФЛ[НомерСтроки].МесяцНалоговогоПериода) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не задан налоговый период';uk='Не встановлено податковий період'"), , СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("НДФЛ[%1].МесяцНалоговогоПериодаСтрокой", НомерСтроки));
			Отказ = Истина
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НДФЛ[НомерСтроки].ГруппаУчетаУдержаний) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана группа учета';uk='Не вказана група обліку'"), , СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("НДФЛ[%1].ГруппаУчетаУдержаний", НомерСтроки));
			Отказ = Истина
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НДФЛ[НомерСтроки].КодДохода) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан код дохода';uk='Не вказано код доходу'"), , СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("НДФЛ[%1].КодДохода", НомерСтроки));
			Отказ = Истина
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура НДФЛПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ЗаполнитьЗначенияСвойств(Элемент.ТекущиеДанные, ЭтаФорма);
		Элемент.ТекущиеДанные.МесяцНалоговогоПериода = ПериодРегистрации;
		Элемент.ТекущиеДанные.ПериодВзаиморасчетов = ПериодРегистрации;
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(НДФЛ, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой");	
		ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДатеВТабличнойЧасти(НДФЛ, "МесяцНалоговогоПериода", "МесяцНалоговогоПериодаСтрокой");	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура НДФЛПериодВзаиморасчетовПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.НДФЛ.ТекущиеДанные, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПериодВзаиморасчетовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.НДФЛ.ТекущиеДанные, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПериодВзаиморасчетовРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.НДФЛ.ТекущиеДанные, "ПериодВзаиморасчетов", "ПериодВзаиморасчетовСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПериодВзаиморасчетовАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛПериодВзаиморасчетовОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛМесяцНалоговогоПериодаПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(Элементы.НДФЛ.ТекущиеДанные, "МесяцНалоговогоПериода", "МесяцНалоговогоПериодаСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛМесяцНалоговогоПериодаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, Элементы.НДФЛ.ТекущиеДанные, "МесяцНалоговогоПериода", "МесяцНалоговогоПериодаСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура НДФЛМесяцНалоговогоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(Элементы.НДФЛ.ТекущиеДанные, "МесяцНалоговогоПериода", "МесяцНалоговогоПериодаСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура НДФЛМесяцНалоговогоПериодаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НДФЛМесяцНалоговогоПериодаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ПроверитьЗаполнение() Тогда
		
		РезультатыРедактирования = Новый Структура;
		РезультатыРедактирования.Вставить("Модифицированность", Модифицированность);
		РезультатыРедактирования.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
		РезультатыРедактирования.Вставить("АдресВХранилищеНДФЛПоСтроке", АдресВХранилищеНДФЛПоСтроке());
		
		Модифицированность = Ложь;
		Закрыть(РезультатыРедактирования)
		
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Функция АдресВХранилищеНДФЛПоСтроке()
	
	НДФЛФизлица = НДФЛ.Выгрузить();
	НДФЛФизлица.ЗаполнитьЗначения(ИдентификаторСтроки, "ИдентификаторСтроки");
	
	Возврат ПоместитьВоВременноеХранилище(НДФЛФизлица, УникальныйИдентификатор);
	
КонецФункции	


#КонецОбласти
