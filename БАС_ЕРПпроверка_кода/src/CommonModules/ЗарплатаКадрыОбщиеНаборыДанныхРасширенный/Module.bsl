
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстОбщегоЗапроса(ИсточникДанных) Экспорт
	
	ТекстЗапроса = ЗарплатаКадрыОбщиеНаборыДанныхБазовый.ПолучитьТекстОбщегоЗапроса(ИсточникДанных);
	
	Если ВРег(ИсточникДанных) = ВРег("НачисленияУдержания") Тогда
		// В расширенной реализации необходимо учитывать корректировки отработанного времени.
		
		ФрагментЗапросаДляЗамены = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОтработанноеВремя.МесяцНачисления КАК МесяцНачисления,
			|	ОтработанноеВремя.ПериодДействия КАК ПериодДействия,
			|	ОтработанноеВремя.Регистратор,
			|	ОтработанноеВремя.Сотрудник,
			|	ОтработанноеВремя.Подразделение КАК Подразделение,
			|	ОтработанноеВремя.ВидРасчета КАК ВидРасчета,
			|	ОтработанноеВремя.ОтработаноДней КАК ОтработаноДней,
			|	ОтработанноеВремя.ОтработаноЧасов КАК ОтработаноЧасов,
			|	ОтработанноеВремя.ОплаченоДней КАК ОплаченоДней,
			|	ОтработанноеВремя.ОплаченоЧасов КАК ОплаченоЧасов,
			|	ОтработанноеВремя.ДатаНачала КАК ДатаНачала,
			|	ОтработанноеВремя.СтатьяФинансирования КАК СтатьяФинансирования,
			|	ОтработанноеВремя.ВремяВЧасах КАК ВремяВЧасах,
			|	МИНИМУМ(ОтработанноеВремя.СтатьяРасходов) КАК СтатьяРасходов
			|ПОМЕСТИТЬ ВТОтработанноеВремяСКорректировками
			|ИЗ
			|	ВТОтработанноеВремяСНачислениями КАК ОтработанноеВремя
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтработанноеВремяСоСтатьейФинансирования КАК ОтработанноеВремяСоСтатьейФинансирования
			|		ПО ОтработанноеВремя.МесяцНачисления = ОтработанноеВремяСоСтатьейФинансирования.МесяцНачисления
			|			И ОтработанноеВремя.ПериодДействия = ОтработанноеВремяСоСтатьейФинансирования.ПериодДействия
			|			И ОтработанноеВремя.Регистратор = ОтработанноеВремяСоСтатьейФинансирования.Регистратор
			|			И ОтработанноеВремя.Сотрудник = ОтработанноеВремяСоСтатьейФинансирования.Сотрудник
			|			И ОтработанноеВремя.Подразделение = ОтработанноеВремяСоСтатьейФинансирования.Подразделение
			|			И ОтработанноеВремя.ВидРасчета = ОтработанноеВремяСоСтатьейФинансирования.ВидРасчета
			|			И ОтработанноеВремя.ДатаНачала = ОтработанноеВремяСоСтатьейФинансирования.ДатаНачала
			|			И ОтработанноеВремя.СтатьяФинансирования = ОтработанноеВремяСоСтатьейФинансирования.СтатьяФинансирования
			|			И ОтработанноеВремя.ВремяВЧасах = ОтработанноеВремяСоСтатьейФинансирования.ВремяВЧасах
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтработанноеВремя.МесяцНачисления,
			|	ОтработанноеВремя.ПериодДействия,
			|	ОтработанноеВремя.Регистратор,
			|	ОтработанноеВремя.Сотрудник,
			|	ОтработанноеВремя.Подразделение,
			|	ОтработанноеВремя.ВидРасчета,
			|	ОтработанноеВремя.ОтработаноДней,
			|	ОтработанноеВремя.ОтработаноЧасов,
			|	ОтработанноеВремя.ОплаченоДней,
			|	ОтработанноеВремя.ОплаченоЧасов,
			|	ОтработанноеВремя.ДатаНачала,
			|	ОтработанноеВремя.СтатьяФинансирования,
			|	ОтработанноеВремя.ВремяВЧасах
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НАЧАЛОПЕРИОДА(ОтработанноеВремя.Период, МЕСЯЦ),
			|	НАЧАЛОПЕРИОДА(ОтработанноеВремя.ПериодДействия, МЕСЯЦ),
			|	ОтработанноеВремя.Регистратор,
			|	ОтработанноеВремя.Сотрудник,
			|	ОтработанноеВремя.Подразделение,
			|	ОтработанноеВремя.Начисление,
			|	ОтработанноеВремя.ОтработаноДней,
			|	NULL,
			|	ОтработанноеВремя.ОплаченоДней,
			|	NULL,
			|	ОтработанноеВремя.ДатаНачала,
			|	NULL,
			|	ЛОЖЬ,
			|	NULL
			|ИЗ
			|	РегистрНакопления.ОтработанноеВремяПоСотрудникамКорректировка КАК ОтработанноеВремя
			|ГДЕ
			|	ОтработанноеВремя.Период МЕЖДУ &НачалоПериода И &КонецПериода
			|{ГДЕ
			|	ОтработанноеВремя.Сотрудник,
			|	ОтработанноеВремя.ФизическоеЛицо,
			|	ОтработанноеВремя.Организация}
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОтработанноеВремя.МесяцНачисления,
			|	ОтработанноеВремя.ПериодДействия,
			|	ОтработанноеВремя.ДатаНачала,
			|	ОтработанноеВремя.Регистратор,
			|	ОтработанноеВремя.Сотрудник,
			|	ОтработанноеВремя.Подразделение КАК Подразделение,
			|	ОтработанноеВремя.ВидРасчета,
			|	ОтработанноеВремя.ВремяВЧасах КАК ВремяВЧасах,
			|	СУММА(ОтработанноеВремя.ОтработаноДней) КАК ОтработаноДней,
			|	СУММА(ОтработанноеВремя.ОтработаноЧасов) КАК ОтработаноЧасов,
			|	СУММА(ОтработанноеВремя.ОплаченоДней) КАК ОплаченоДней,
			|	СУММА(ОтработанноеВремя.ОплаченоЧасов) КАК ОплаченоЧасов,
			|	МАКСИМУМ(ОтработанноеВремя.СтатьяФинансирования) КАК СтатьяФинансирования,
			|	МАКСИМУМ(ОтработанноеВремя.СтатьяРасходов) КАК СтатьяРасходов
			|ПОМЕСТИТЬ ВТОтработанноеВремя
			|ИЗ
			|	ВТОтработанноеВремяСКорректировками КАК ОтработанноеВремя
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтработанноеВремя.МесяцНачисления,
			|	ОтработанноеВремя.ПериодДействия,
			|	ОтработанноеВремя.ДатаНачала,
			|	ОтработанноеВремя.Регистратор,
			|	ОтработанноеВремя.Сотрудник,
			|	ОтработанноеВремя.Подразделение,
			|	ОтработанноеВремя.ВидРасчета,
			|	ОтработанноеВремя.ВремяВЧасах";
		
		Если Не ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьЗапросСозданияВременнойТаблицы(ТекстЗапроса, "ВТОтработанноеВремя", ФрагментЗапросаДляЗамены) Тогда
			ВызватьИсключение НСтр("ru='Неправильный текст запроса к отработанному времени';uk='Неправильний текст запиту до відпрацьованого часу'");
		КонецЕсли;
		
		// Добавление полей разрядов, категорий должностей.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,",
			"	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
			|	ЗНАЧЕНИЕ(Справочник.РазрядыКатегорииДолжностей.ПустаяСсылка) КАК РазрядКатегория,");
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеСотрудников.Должность,",
			"	КадровыеДанныеСотрудников.Должность,
			|	КадровыеДанныеСотрудников.РазрядКатегория,");
			
		// Разряд, категория головного сотрудника
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеГоловныхСотрудников.Должность КАК ДолжностьГоловногоСотрудникаНаКонецПериода,",
			"	КадровыеДанныеГоловныхСотрудников.Должность КАК ДолжностьГоловногоСотрудникаНаКонецПериода,
			|	КадровыеДанныеГоловныхСотрудников.РазрядКатегория КАК РазрядКатегорияГоловногоСотрудникаНаКонецПериода,");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеСотрудников.Должность КАК ДолжностьГоловногоСотрудникаНаКонецПериода,",
			"	КадровыеДанныеСотрудников.Должность КАК ДолжностьГоловногоСотрудникаНаКонецПериода,
			|	КадровыеДанныеСотрудников.РазрядКатегория КАК РазрядКатегорияГоловногоСотрудникаНаКонецПериода,");
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеГоловныхСотрудников.Должность,",
			"	КадровыеДанныеГоловныхСотрудников.Должность,
			|	КадровыеДанныеГоловныхСотрудников.РазрядКатегория,");
			
		// Разряд, категория на конец месяца
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеСотрудников.Должность КАК ДолжностьНаКонецПериода,",
			"	КадровыеДанныеСотрудников.Должность КАК ДолжностьНаКонецПериода,
			|	КадровыеДанныеСотрудников.РазрядКатегория КАК РазрядКатегорияНаКонецПериода,");
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеСотрудниковНаКонецПериод.Должность КАК ДолжностьНаКонецПериода,",
			"	КадровыеДанныеСотрудниковНаКонецПериод.Должность КАК ДолжностьНаКонецПериода,
			|	КадровыеДанныеСотрудниковНаКонецПериод.РазрядКатегория КАК РазрядКатегорияНаКонецПериода,");
			
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	КадровыеДанныеСотрудниковНаКонецПериод.Должность,",
			"	КадровыеДанныеСотрудниковНаКонецПериод.Должность,
			|	КадровыеДанныеСотрудниковНаКонецПериод.РазрядКатегория,");
			
		// Разряды, категории в результирующей таблице
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "	ДанныеСотрудников.Должность,",
			"	ДанныеСотрудников.Должность,
			|	ДанныеСотрудников.РазрядКатегория,
			|	ДанныеСотрудников.РазрядКатегорияНаКонецПериода,
			|	ДанныеСотрудников.РазрядКатегорияГоловногоСотрудникаНаКонецПериода,");
			
		МассивПодзапросов = СтрРазделить(ТекстЗапроса, ";");
		Для каждого ТекстПодзапроса Из МассивПодзапросов Цикл
			
			Если СтрНайти(ВРег(ТекстПодзапроса), ВРег("ПОМЕСТИТЬ ВТНачисленияИУдержанияСКадровымиДанными")) > 0 Тогда
				
				ИсходныйПодзапрос = ТекстПодзапроса;
				
				ПозицияГде = СтрНайти(ТекстПодзапроса, Символы.ПС + "ГДЕ" + Символы.ПС);
				Если ПозицияГде > 0 Тогда
					
					ТекстЗапросаПоказателейНачислений =
						"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
						|	СотрудникиМесяцы.Организация КАК Организация,
						|	СотрудникиМесяцы.Сотрудник КАК Сотрудник,
						|	СотрудникиМесяцы.Месяц КАК ПериодРегистрации,
						|	Начисления.Регистратор,
						|	Начисления.ПериодДействияНачало,
						|	МИНИМУМ(Начисления.ПериодДействияКонец) КАК ПериодДействияКонец,
						|	Начисления.ВидРасчета,
						|	ЗначенияПоказателейНачислений.Показатель КАК Показатель,
						|	МАКСИМУМ(ЗначенияПоказателейНачислений.Значение) КАК Значение,
						|	Начисления.ДокументОснование
						|ПОМЕСТИТЬ ВТПоказателиНачислений
						|ИЗ
						|	ВТСотрудникиМесяцы КАК СотрудникиМесяцы
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
						|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления.Показатели КАК НачисленияПоказатели
						|			ПО Начисления.ВидРасчета = НачисленияПоказатели.Ссылка
						|				И (НачисленияПоказатели.ОсновнойПоказатель)
						|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПоказателейНачислений КАК ЗначенияПоказателейНачислений
						|			ПО Начисления.Регистратор = ЗначенияПоказателейНачислений.Регистратор
						|				И Начисления.ИдентификаторСтроки = ЗначенияПоказателейНачислений.ИдентификаторСтроки
						|				И (НачисленияПоказатели.Показатель = ЗначенияПоказателейНачислений.Показатель)
						|		ПО СотрудникиМесяцы.Сотрудник = Начисления.Сотрудник
						|			И СотрудникиМесяцы.Месяц = Начисления.ПериодРегистрации
						|ГДЕ
						|	НЕ НачисленияПоказатели.Показатель ЕСТЬ NULL 
						|
						|СГРУППИРОВАТЬ ПО
						|	СотрудникиМесяцы.Организация,
						|	СотрудникиМесяцы.Сотрудник,
						|	СотрудникиМесяцы.Месяц,
						|	Начисления.Регистратор,
						|	Начисления.ПериодДействияНачало,
						|	Начисления.ВидРасчета,
						|	ЗначенияПоказателейНачислений.Показатель,
						|	Начисления.ДокументОснование";
					
					СоединениеСТаблицамиПоказателей = "
						|		{ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНачислений КАК ПоказателиНачислений
						|		ПО НачисленияИУдержания.Регистратор = ПоказателиНачислений.Регистратор
						|			И НачисленияИУдержания.НачислениеУдержание = ПоказателиНачислений.ВидРасчета
						|			И НачисленияИУдержания.Сотрудник = ПоказателиНачислений.Сотрудник
						|			И НачисленияИУдержания.ДатаНачала >= ПоказателиНачислений.ПериодДействияНачало
						|			И НачисленияИУдержания.ДатаОкончания <= ПоказателиНачислений.ПериодДействияКонец
						|			И НачисленияИУдержания.Период = ПоказателиНачислений.ПериодРегистрации
						|			И НачисленияИУдержания.ПериодДействия = ПоказателиНачислений.ПериодРегистрации
						|			И НачисленияИУдержания.ДокументОснование = ПоказателиНачислений.ДокументОснование}
						|";
						
					ТекстПодзапроса = Лев(ТекстПодзапроса, ПозицияГде - 1) + СоединениеСТаблицамиПоказателей + Сред(ТекстПодзапроса, ПозицияГде);
					
					ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "NULL КАК Показатель", "МАКСИМУМ(ПоказателиНачислений.Показатель) КАК Показатель");
					ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "NULL КАК Значение", "МАКСИМУМ(ПоказателиНачислений.Значение) КАК Значение");
					
					ТекстПодзапроса = ТекстЗапросаПоказателейНачислений
						+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
						+ ТекстПодзапроса;
					
				КонецЕсли; 
				
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИсходныйПодзапрос, ТекстПодзапроса);
					
				Прервать;
				
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьЗапросПоПредставлению(ТекстЗапроса, СоответствиеПараметров) Экспорт
	
	Запрос = Неопределено;
	
	ПозицияСловаПоместить = СтрНайти(ВРег(ТекстЗапроса), "ПОМЕСТИТЬ ");
	
	ИмяИсточникаДанных = ЗарплатаКадрыОбщиеНаборыДанных.ПервоеСловоНачинаяСПозицииВТексте(ТекстЗапроса, ПозицияСловаПоместить + СтрДлина("ПОМЕСТИТЬ "));
	МассивПодстрокИмениИсточникаДанных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяИсточникаДанных, "_");
	ИмяВременнойТаблицы = МассивПодстрокИмениИсточникаДанных[0];
	ИмяПредставления = МассивПодстрокИмениИсточникаДанных[1];
	Если МассивПодстрокИмениИсточникаДанных.Количество() > 2 Тогда
		ИмяПараметра = МассивПодстрокИмениИсточникаДанных[2];
	Иначе
		ИмяПараметра = Неопределено;
	КонецЕсли;
				
	МассивИменВТИсточниковПараметров = ЗарплатаКадрыОбщиеНаборыДанных.МассивИменВТИсточниковПараметров(ТекстЗапроса, ИмяИсточникаДанных);
	ПараметрыЗапроса = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыЗапроса(ТекстЗапроса, ИмяИсточникаДанных);
				
	ПредставлениеТолькоРазрешенные = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрЗапроса("ТолькоРазрешенные", ПараметрыЗапроса);
	ТолькоРазрешенные = ВРег(ПредставлениеТолькоРазрешенные) = "ИСТИНА";
	
	Если ВРег(ИмяПредставления) = ВРег("ШтатноеРасписание") Тогда
		
		ПредставлениеВключатьНачисления = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрЗапроса("ВключатьНачисления", ПараметрыЗапроса);
		НеВключатьНачисления = ВРег(ПредставлениеВключатьНачисления) = "ЛОЖЬ";
	
		ДатаАктуальности = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрЗапроса("ДатаАктуальности", ПараметрыЗапроса);
		Если МассивИменВТИсточниковПараметров.Количество() > 0  Тогда
			ИмяВТИсточникДанных = МассивИменВТИсточниковПараметров[0];
		Иначе
			ИмяВТИсточникДанных = "";
		КонецЕсли;
		
		Запрос = УправлениеШтатнымРасписанием.ЗапросПредставленияШтатноеРасписание(ТолькоРазрешенные, ДатаАктуальности, ИмяИсточникаДанных, НЕ НеВключатьНачисления, ИмяВТИсточникДанных);
		
	ИначеЕсли ВРег(ИмяПредставления) = ВРег("ТекущаяКадроваяРасстановка") Тогда
		
		Организация = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрЗапроса("Организация", ПараметрыЗапроса);
		Дата = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрЗапроса("Дата", ПараметрыЗапроса);
		
		Запрос = КадровыйУчетРасширенный.ЗапросВТТекущаяКадроваяРасстановка(
			ТолькоРазрешенные,
			Организация,
			Дата,
			ИмяИсточникаДанных);
			
	ИначеЕсли ВРег(ИмяПредставления) = ВРЕг("ФункциональныеОпцииОрганизаций") Тогда
			
		МассивИменФункциональныхОпций =  ЗарплатаКадрыОбщиеНаборыДанных.МассивПолейЗапроса(Лев(ТекстЗапроса, ПозицияСловаПоместить - 1));
		
		Запрос = КадровыйУчетБазовый.ЗапросВТФункциональныеОпцииОрганизаций(
			ТолькоРазрешенные,
			ИмяИсточникаДанных,
			МассивИменФункциональныхОпций);
				
	ИначеЕсли ВРег(ИмяПредставления) = ВРег("ФактическиеОтпускаСотрудников") Тогда
			
		ИмяВТИсточникДанных = МассивИменВТИсточниковПараметров[0];
		
		ОписательВременныхТаблиц = ОстаткиОтпусков.ОписательВременныхТаблицДляСоздатьВТФактическиеОтпускаСотрудников(
			Неопределено,
			ИмяВТИсточникДанных,
			,
			ИмяИсточникаДанных);
		
		Запрос = ОстаткиОтпусков.ЗапросВТФактическиеОтпускаСотрудников(ОписательВременныхТаблиц, ТолькоРазрешенные);
		
	ИначеЕсли ВРег(ИмяПредставления) = ВРег("ПлановыеНачисленияСотрудников") Тогда
		
		ИмяВТИсточникДанных = МассивИменВТИсточниковПараметров[0];
		Запрос = КадровыйУчетРасширенный.ЗапросВТПлановыеНачисленияСотрудников(ТолькоРазрешенные, ИмяИсточникаДанных, ИмяВТИсточникДанных);
		
	ИначеЕсли ВРег(ИмяПредставления) = ВРег("ПлановыеУдержанияСотрудников") Тогда
		
		ИмяВТИсточникДанных = МассивИменВТИсточниковПараметров[0];
		Запрос = КадровыйУчетРасширенный.ЗапросВТПлановыеУдержанияСотрудников(ТолькоРазрешенные, ИмяИсточникаДанных, ИмяВТИсточникДанных);
		
	ИначеЕсли ВРег(ИмяПредставления) = ВРег("СтажиСотрудников") Тогда
		
		ИмяВТИсточникДанных = МассивИменВТИсточниковПараметров[0];
		ОписаниеВременнойТаблицыОтборов = КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц(ИмяВТИсточникДанных);
		Запрос = КадровыйУчетРасширенный.ЗапросВТСтажиФизическихЛиц(ТолькоРазрешенные, ОписаниеВременнойТаблицыОтборов, , ИмяИсточникаДанных);
		
	ИначеЕсли ВРег(ИмяПредставления) = ВРег("СвойстваСтатейФинансирования") Тогда
		
		Если ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении") Тогда
			
			Запрос = Новый Запрос;
			
			Запрос.Текст =
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СвойстваСтатейФинансированияУчетБюджетныхУчреждений.СтатьяФинансирования КАК СтатьяФинансирования,
				|	ВЫБОР
				|		КОГДА СвойстваСтатейФинансированияУчетБюджетныхУчреждений.КФО = ЗНАЧЕНИЕ(Перечисление.КФО.Внебюджет)
				|			ТОГДА 2
				|		КОГДА СвойстваСтатейФинансированияУчетБюджетныхУчреждений.КФО = ЗНАЧЕНИЕ(Перечисление.КФО.СредстваОМС)
				|			ТОГДА 3
				|		ИНАЧЕ 1
				|	КОНЕЦ КАК НомерКолонки
				|ПОМЕСТИТЬ Представления_СвойстваСтатейФинансирования
				|ИЗ
				|	РегистрСведений.СвойстваСтатейФинансированияУчетБюджетныхУчреждений КАК СвойстваСтатейФинансированияУчетБюджетныхУчреждений";
			
		ИначеЕсли  ПолучитьФункциональнуюОпцию("РаботаВХозрасчетнойОрганизации") Тогда
			
			Запрос = Новый Запрос;
			
			Запрос.Текст =
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СтатьиФинансированияЗарплата.Ссылка КАК СтатьяФинансирования,
				|	2 КАК НомерКолонки
				|ПОМЕСТИТЬ Представления_СвойстваСтатейФинансирования
				|ИЗ
				|	Справочник.СтатьиФинансированияЗарплата КАК СтатьиФинансированияЗарплата";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Запрос = Неопределено Тогда
		Запрос = УчетРабочегоВремени.ЗапросПоПредставлению(ТолькоРазрешенные, ИмяПредставления, МассивИменВТИсточниковПараметров, ПараметрыЗапроса, ИмяИсточникаДанных);
	КонецЕсли;	
	
	Если Запрос = Неопределено Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
			Запрос = Модуль.ЗапросПоПредставлению(ИмяПредставления, МассивИменВТИсточниковПараметров, ТолькоРазрешенные);
		КонецЕсли;
	КонецЕсли;
	
	Если Запрос = Неопределено Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.АттестацииСотрудников") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("АттестацииСотрудников");
			Запрос = Модуль.ЗапросПоПредставлению(ИмяПредставления, ПараметрыЗапроса);
		КонецЕсли;
	КонецЕсли;
	
	Если Запрос = Неопределено Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Медицина") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("Медицина");
			Запрос = Модуль.ЗапросПоПредставлению(ИмяПредставления, ПараметрыЗапроса);
		КонецЕсли;
	КонецЕсли;
	
	Если Запрос = Неопределено Тогда
		Запрос = ЗарплатаКадрыОбщиеНаборыДанныхБазовый.ПолучитьЗапросПоПредставлению(ТекстЗапроса, СоответствиеПараметров);
	КонецЕсли; 	
		
	Возврат Запрос;	
	
КонецФункции

#Область КонтекстноеДополнениеСхемКомпоновки

Процедура ДополнитьАнализЗадолженностиПоЗарплате(ЭтотОбъект) Экспорт 
		
	Если ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
			ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений").ДополнитьАнализЗадолженностиПоЗарплате(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьШтатноеРасписание(ЭтотОбъект) Экспорт 
		
	Если ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
			ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений").ДополнитьШтатноеРасписание(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ДополнитьШтатноеРасписаниеНачисления(ЭтотОбъект) Экспорт 
	
	Если ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных() Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
			ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений").ДополнитьШтатноеРасписаниеНачисления(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти