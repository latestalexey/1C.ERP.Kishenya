
//УКРАИНА
Процедура СформироватьДвиженияКатегорииЕСВ(РегистраторОбъект, Движения, ДанныеДляПроведения) Экспорт
	
	УчетСтраховыхВзносовВнутренний.СформироватьДвиженияКатегорииЕСВ(РегистраторОбъект, Движения, ДанныеДляПроведения);
	
КонецПроцедуры

Процедура ЗаполнитьКатегориюЕСВПоУмолчанию(Форма, ПутьКРеквизиту, Сотрудник, ДатаСобытия, Организация, ДолжностьПоШтатномуРасписанию) Экспорт
	
	Если Не ЗначениеЗаполнено(ДолжностьПоШтатномуРасписанию) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Форма, ПутьКРеквизиту, Неопределено);
		Возврат;
	КонецЕсли;
	
	КатегорияЕСВ = КатегорияЕСВПоУмолчанию(Организация);
	
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудник, "Инвалидность", ДатаСобытия);
	Если КадровыеДанные.Количество() > 0 Тогда
		Если ЗначениеЗаполнено(КадровыеДанные[0].Инвалидность) Тогда
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид;
		КонецЕсли;
	КонецЕсли;
	
	Если ДолжностьПоШтатномуРасписанию.ЯвляетсяДолжностьюЛетногоЭкипажа Тогда
		КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникЛетчик;
	ИначеЕсли ДолжностьПоШтатномуРасписанию.ЯвляетсяДолжностьюСпециальныхРабот Тогда
		Если КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалид Тогда
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникИнвалидНаСпециальныхРаботах;
		Иначе	
			КатегорияЕСВ = Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникНаСпециальныхРаботах;
		КонецЕсли;	
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(Форма, ПутьКРеквизиту, КатегорияЕСВ);
	
КонецПроцедуры

Функция КатегорияЕСВПоУмолчанию(Организация) Экспорт
	
	НаборЗаписей = РегистрыСведений.НастройкиУчетаСтраховыхВзносов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		Возврат Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникНаОбщихОснованиях;
		
	Иначе	
		
		Если ЗначениеЗаполнено(НаборЗаписей[0].ОсновнаяКатегорияЗастрахованныхЛиц) Тогда
			Возврат НаборЗаписей[0].ОсновнаяКатегорияЗастрахованныхЛиц;
		Иначе
			Возврат Справочники.КатегорииЗастрахованныхЛицЕСВ.НаемныйРаботникНаОбщихОснованиях;
		Конецесли;	
		
	КонецЕсли;
	
КонецФункции

Функция СписокНалогиБезКоэффициента()
	
	МассивНалогиБезКоэффициента = Новый Массив();
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТГПХУТОГ);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды50);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыУТОГУТОС);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыСР);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТРаботникиУТОГУТОС);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды50);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТБольничныеУТОГ);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды50);
	МассивНалогиБезКоэффициента.Добавить(Справочники.Налоги.ЕСВФОТДекретныеУТОГ);

	
	Возврат МассивНалогиБезКоэффициента;
		
КонецФункции

Функция СписокНалогиБезМинимальнойБазы()
	
	МассивНалогиБезБезМинимальнойБазы = Новый Массив();
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТГПХУТОГ);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалиды50);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыУТОГУТОС);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТИнвалидыСР);	
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТРаботникиУТОГУТОС);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТБольничныеИнвалиды50);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТБольничныеУТОГ);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТДекретныеИнвалиды50);
	МассивНалогиБезБезМинимальнойБазы.Добавить(Справочники.Налоги.ЕСВФОТДекретныеУТОГ);

	
	Возврат МассивНалогиБезБезМинимальнойБазы;
		
КонецФункции


Функция РассчитатьУдержанныеНалоги(Регистратор, Организация, ДатаОперации, МенеджерТаблиц, ПериодРегистрации = Неопределено) Экспорт
	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблиц;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Регистратор", Регистратор.Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОперации", КонецДня(ДатаОперации));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ДатаОперации));
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	РезультатыРасчетов = Новый ТаблицаЗначений;
	РезультатыРасчетов.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("ФизическоеЛицо",Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
    РезультатыРасчетов.Колонки.Добавить("ПериодВзаиморасчетов",Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	РезультатыРасчетов.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	ПараметрыПолученияЗарплатыКВыплате = ВзаиморасчетыССотрудниками.ПараметрыПолученияЗарплатыКВыплатеВедомости(Регистратор);
	
	Запрос.УстановитьПараметр("ЭтоУвольнение", ПараметрыПолученияЗарплатыКВыплате.ЭтоУвольнение);
	
	//Взносы могут не перечисляться
	Если ПараметрыПолученияЗарплатыКВыплате.ПорядокЗаполненияНалогов <> Перечисления.ПорядокЗаполненияНалогов.Взносы
		И  ПараметрыПолученияЗарплатыКВыплате.ПорядокЗаполненияНалогов <> Перечисления.ПорядокЗаполненияНалогов.НДФЛИВзносы Тогда
		Возврат РезультатыРасчетов;	
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ ВТСписокСотрудников КАК СписокСотрудников";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат РезультатыРасчетов
	КонецЕсли;
	
	Если ПараметрыПолученияЗарплатыКВыплате.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		//Заполнение по зарплате - приход по ФЛ минсу расход по ФЛ, но не больше остатков по организации
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТОтборПоСотрудникам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСФондамиПоСтраховымВзносам.Организация КАК Организация,
		|	РасчетыСФондамиПоСтраховымВзносам.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСФондамиПоСтраховымВзносам.Сумма
		|			ИНАЧЕ -РасчетыСФондамиПоСтраховымВзносам.Сумма
		|		КОНЕЦ) КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТПодробно
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК РасчетыСФондамиПоСтраховымВзносам
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо
		|			И (РасчетыСФондамиПоСтраховымВзносам.Организация = &Организация)
		|			И (РасчетыСФондамиПоСтраховымВзносам.Регистратор <> &Регистратор)
		|			И (РасчетыСФондамиПоСтраховымВзносам.Период <= &ДатаОперации)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСФондамиПоСтраховымВзносам.Организация,
		|	РасчетыСФондамиПоСтраховымВзносам.Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСФондамиПоСтраховымВзносам.Сумма
		|			ИНАЧЕ -РасчетыСФондамиПоСтраховымВзносам.Сумма
		|		КОНЕЦ) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСФондамиПоСтраховымВзносам.Организация КАК Организация,
		|	РасчетыСФондамиПоСтраховымВзносам.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносам.СуммаОстаток КАК Сумма
		|ИЗ
		|	ВТПодробно КАК РасчетыСФондамиПоСтраховымВзносам
		|";
		ОстаткиПоФизЛицам = Запрос.Выполнить().Выгрузить();
		
		Запрос.Текст =  
		"ВЫБРАТЬ
		|	РасчетыСФондамиПоСтраховымВзносам.Организация КАК Организация,
		|	РасчетыСФондамиПоСтраховымВзносам.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносам.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам.Остатки(&ДатаОперации, Организация = &Организация) КАК РасчетыСФондамиПоСтраховымВзносам
		|ГДЕ
		|   РасчетыСФондамиПоСтраховымВзносам.СуммаОстаток > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСФондамиПоСтраховымВзносам.Организация КАК Организация,
		|	РасчетыСФондамиПоСтраховымВзносам.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	СУММА(РасчетыСФондамиПоСтраховымВзносам.СуммаОстаток) КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТСуммыКСписанию
		|ИЗ
		|	ВТПодробно КАК РасчетыСФондамиПоСтраховымВзносам
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСФондамиПоСтраховымВзносам.Организация,
		|	РасчетыСФондамиПоСтраховымВзносам.Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СуммыКСписанию.Организация КАК Организация,
		|	СуммыКСписанию.Налог КАК Налог,
		|	СуммыКСписанию.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &ЭтоУвольнение И СуммыКСписанию.ПериодВзаиморасчетов = &ПериодРегистрации 
		|		ТОГДА СуммыКСписанию.СуммаОстаток
		|		КОГДА ЕСТЬNULL(Остатки.СуммаОстаток,0) > СуммыКСписанию.СуммаОстаток
		|		ТОГДА СуммыКСписанию.СуммаОстаток
		|		ИНАЧЕ ЕСТЬNULL(Остатки.СуммаОстаток,0)
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	ВТСуммыКСписанию КАК СуммыКСписанию
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстатки КАК Остатки
		|       ПО СуммыКСписанию.Организация = Остатки.Организация
		|        И СуммыКСписанию.Налог = Остатки.Налог
		|        И СуммыКСписанию.ПериодВзаиморасчетов = Остатки.ПериодВзаиморасчетов
		|";
		Остатки = Запрос.Выполнить().Выгрузить();
		
		
		//Доступные остатки распределяем пропорционально остаткам по физлицам
		ПоляРазрез = Новый Массив();
		ПоляРазрез.Добавить("ФизическоеЛицо");
		ПоляСвязи = Новый Структура();
		ПоляСвязи.Вставить("Организация","Организация");
		ПоляСвязи.Вставить("Налог","Налог");
		ПоляСвязи.Вставить("ПериодВзаиморасчетов","ПериодВзаиморасчетов");
		РезультатыРасчетов = ЗарплатаКадры.РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(Остатки, "Сумма", ОстаткиПоФизЛицам, "Сумма", ПоляРазрез, ПоляСвязи,,Ложь);
		РезультатыРасчетов.Сортировать("ПериодВзаиморасчетов");
		
		Запрос.Текст =  
		"УНИЧТОЖИТЬ ВТОтборПоСотрудникам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПодробно
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСуммыКСписанию
		|";
		Запрос.Выполнить();
		
		
	ИначеЕсли ПараметрыПолученияЗарплатыКВыплате.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Тогда
		//Заполнение по межрасчетным - приходы и расходы по документам-основаниям
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование
		|ПОМЕСТИТЬ ВТОтборПоСотрудникам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	ИсчисленныеСтраховыеВзносыАвансом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	ИсчисленныеСтраховыеВзносыАвансом.Налог КАК Налог,
		|	ИсчисленныеСтраховыеВзносыАвансом.Сумма КАК Сумма,
		|	ИсчисленныеСтраховыеВзносыАвансом.Регистратор КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДвиженияПриход 
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИсчисленныеСтраховыеВзносыАвансом КАК ИсчисленныеСтраховыеВзносыАвансом
		|		ПО СписокСотрудников.ФизическоеЛицо = ИсчисленныеСтраховыеВзносыАвансом.ФизическоеЛицо
		|		 И (ИсчисленныеСтраховыеВзносыАвансом.Регистратор = СписокСотрудников.ДокументОснование)
		|			И (ИсчисленныеСтраховыеВзносыАвансом.Организация = &Организация)
		|			И (НАЧАЛОПЕРИОДА(ИсчисленныеСтраховыеВзносыАвансом.Период, МЕСЯЦ) = &ПериодРегистрации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСФондамиПоСтраховымВзносам.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносам.Сумма КАК Сумма,
		|	РасчетыСФондамиПоСтраховымВзносам.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДвиженияРасход
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК РасчетыСФондамиПоСтраховымВзносам
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо
		|		 И (РасчетыСФондамиПоСтраховымВзносам.ДокументОснование = СписокСотрудников.ДокументОснование)
		|			И (РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И (РасчетыСФондамиПоСтраховымВзносам.Организация = &Организация)
		|			И (РасчетыСФондамиПоСтраховымВзносам.Регистратор <> &Регистратор)
		|			И (РасчетыСФондамиПоСтраховымВзносам.Период <= &ДатаОперации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ДокументОснование КАК ДокументОснование,
		|	СУММА(РасчетыСФондамиПоСтраховымВзносамПриход.Сумма - ЕСТЬNULL(РасчетыСФондамиПоСтраховымВзносамРасход.Сумма, 0)) КАК Сумма
		|ИЗ
		|   ВТДвиженияПриход КАК РасчетыСФондамиПоСтраховымВзносамПриход
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   ВТДвиженияРасход КАК РасчетыСФондамиПоСтраховымВзносамРасход
		|   ПО РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо = РасчетыСФондамиПоСтраховымВзносамРасход.ФизическоеЛицо
		|		 И (РасчетыСФондамиПоСтраховымВзносамПриход.ДокументОснование = РасчетыСФондамиПоСтраховымВзносамРасход.ДокументОснование)
		|		 И (РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов = РасчетыСФондамиПоСтраховымВзносамРасход.ПериодВзаиморасчетов)
		|		 И (РасчетыСФондамиПоСтраховымВзносамПриход.Налог = РасчетыСФондамиПоСтраховымВзносамРасход.Налог)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.Налог,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ДокументОснование
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыСФондамиПоСтраховымВзносамПриход.Сумма - ЕСТЬNULL(РасчетыСФондамиПоСтраховымВзносамРасход.Сумма, 0)) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|   РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо.Наименование, 
		|   РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов
		|";
		РезультатыРасчетов = Запрос.Выполнить().Выгрузить();

		
	ИначеЕсли ПараметрыПолученияЗарплатыКВыплате.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда	
		//Заполнение по авансам- приходы и расходы по документам-основаниям плюс исчисленные авансом
		Запрос.Текст =  
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокСотрудников.ФизическоеЛицо,
		|	СписокСотрудников.ДокументОснование
		|ПОМЕСТИТЬ ВТОтборПоСотрудникам
		|ИЗ
		|	ВТСписокСотрудников КАК СписокСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	ИсчисленныеСтраховыеВзносыАвансом.ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ПериодРегистрации КАК ПериодВзаиморасчетов,
		|	ИсчисленныеСтраховыеВзносыАвансом.Налог КАК Налог,
		|	ИсчисленныеСтраховыеВзносыАвансом.Сумма КАК Сумма,
		|	ИсчисленныеСтраховыеВзносыАвансом.Регистратор КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДвиженияПриход 
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИсчисленныеСтраховыеВзносыАвансом КАК ИсчисленныеСтраховыеВзносыАвансом
		|		ПО СписокСотрудников.ФизическоеЛицо = ИсчисленныеСтраховыеВзносыАвансом.ФизическоеЛицо
		|		 И (ИсчисленныеСтраховыеВзносыАвансом.Регистратор = СписокСотрудников.ДокументОснование ИЛИ (СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО И ИсчисленныеСтраховыеВзносыАвансом.Регистратор ССЫЛКА Документ.НачислениеЗаПервуюПоловинуМесяца))
		|			И (ИсчисленныеСтраховыеВзносыАвансом.Организация = &Организация)
		|			И (НАЧАЛОПЕРИОДА(ИсчисленныеСтраховыеВзносыАвансом.Период, МЕСЯЦ) = &ПериодРегистрации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСФондамиПоСтраховымВзносам.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносам.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносам.Сумма КАК Сумма,
		|	РасчетыСФондамиПоСтраховымВзносам.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТДвиженияРасход
		|ИЗ
		|	ВТОтборПоСотрудникам КАК СписокСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам КАК РасчетыСФондамиПоСтраховымВзносам
		|		ПО СписокСотрудников.ФизическоеЛицо = РасчетыСФондамиПоСтраховымВзносам.ФизическоеЛицо
		|		 И (РасчетыСФондамиПоСтраховымВзносам.ДокументОснование = СписокСотрудников.ДокументОснование ИЛИ (СписокСотрудников.ДокументОснование = НЕОПРЕДЕЛЕНО И РасчетыСФондамиПоСтраховымВзносам.ДокументОснование ССЫЛКА Документ.НачислениеЗаПервуюПоловинуМесяца))
		|			И (РасчетыСФондамиПоСтраховымВзносам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
		|			И (РасчетыСФондамиПоСтраховымВзносам.Организация = &Организация)
		|			И (РасчетыСФондамиПоСтраховымВзносам.Регистратор <> &Регистратор)
		|			И (РасчетыСФондамиПоСтраховымВзносам.Период <= &ДатаОперации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ		
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо КАК ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.Налог КАК Налог,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ДокументОснование КАК ДокументОснование,
		|	СУММА(РасчетыСФондамиПоСтраховымВзносамПриход.Сумма - ЕСТЬNULL(РасчетыСФондамиПоСтраховымВзносамРасход.Сумма, 0)) КАК Сумма
		|ИЗ
		|   ВТДвиженияПриход КАК РасчетыСФондамиПоСтраховымВзносамПриход
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   ВТДвиженияРасход КАК РасчетыСФондамиПоСтраховымВзносамРасход
		|   ПО РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо = РасчетыСФондамиПоСтраховымВзносамРасход.ФизическоеЛицо
		|		 И (РасчетыСФондамиПоСтраховымВзносамПриход.ДокументОснование = РасчетыСФондамиПоСтраховымВзносамРасход.ДокументОснование)
		|		 И (РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов = РасчетыСФондамиПоСтраховымВзносамРасход.ПериодВзаиморасчетов)
		|		 И (РасчетыСФондамиПоСтраховымВзносамПриход.Налог = РасчетыСФондамиПоСтраховымВзносамРасход.Налог)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.Налог,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов,
		|	РасчетыСФондамиПоСтраховымВзносамПриход.ДокументОснование
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыСФондамиПоСтраховымВзносамПриход.Сумма - ЕСТЬNULL(РасчетыСФондамиПоСтраховымВзносамРасход.Сумма, 0)) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|   РасчетыСФондамиПоСтраховымВзносамПриход.ФизическоеЛицо.Наименование, 
		|   РасчетыСФондамиПоСтраховымВзносамПриход.ПериодВзаиморасчетов
		|";
		РезультатыРасчетов = Запрос.Выполнить().Выгрузить();
			
	КонецЕсли;
	
	Возврат РезультатыРасчетов;
	
КонецФункции



////////////////////////////////////////////////////////////////////////////////
// Важные даты

//Функция возвращает дату ввода Единого социального взноса
//
Функция ДатаВводаЕСВ() Экспорт
	
	Возврат Дата(2011,1,1);
	
КонецФункции

//Функция возвращает дату реформы Единого социального взноса
//
Функция ДатаИзмененияЕСВ1573() Экспорт
	
	Возврат Дата(2015,1,1);
	
КонецФункции

// Функция возвращает дату реформы Единого социального взноса
//
Функция ДатаИзмененияЕСВ1863() Экспорт
	
	Возврат Дата(2015,3,1);
	
КонецФункции

 // Функция возвращает дату реформы Единого социального взноса
//
Функция ДатаИзмененияЕСВ3688() Экспорт
	
	Возврат Дата(2016,1,1);
	
КонецФункции





#Область ПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации - должно быть непустым значением.
//		РасчетыСФондом - таблица значений с колонками.
//			Период: должно быть непустым.
//          Сумма
//			ВидОбязательногоСтрахованияСотрудников: должно быть непустым
//          ЭтоСтраховыеВзносы
//          ГодЗадолженностиПоЕСН: должно быть непустым, если ЭтоСтраховыеВзносы = Ложь
//          ВидДвижения: ВидДвиженияНакопления.Расход или ВидДвиженияНакопления.Приход.
//          РасчетыПоПособиям - необязательная, может отсутствовать.
//			ПлатежноеПоручениеНомер - Строка - необязательно, но желательно для уплаты взносов в ФСС.
//			ПлатежноеПоручениеДата - Дата - необязательно, но желательно для уплаты взносов в ФСС.
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьРасчетыСФондом(Движения, Отказ, Организация, РасчетыСФондом, Записывать = Ложь) Экспорт
	
	Если РасчетыСФондом <> Неопределено Тогда
		ЕстьНовыеСтроки = Ложь;
		Для Каждого СтрокаДанных Из РасчетыСФондом Цикл
			Если СтрокаДанных.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			ЕстьНовыеСтроки = Истина;
			НоваяСтрока = Движения.РасчетыСФондамиПоСтраховымВзносам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
		КонецЦикла;
		Если ЕстьНовыеСтроки Тогда
			Если Записывать Тогда
				Движения.РасчетыСФондамиПоСтраховымВзносам.Записать();
				Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Ложь;
			Иначе
				Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует движения по регистрам подсистемы.
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - булево - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации - должно быть непустым значением.
//		ПериодРегистрации - дата -
//		ВзносыИсчисленные - ТаблицаЗначений - с обязательными колонками:
//			ФизическоеЛицо: должно быть непустым
//			ПФРНакопительная
//			ПФРСтраховая
//			ПФРПоСуммарномуТарифу,
//			ПФРДоПредельнойВеличины,
//			ПФРСПревышения,
//          ТФОМС
//			ФФОМС
//			ФСС
//			ФССНесчастныеСлучаи
//			ПФРСтраховаяЕНВД,
//			ПФРПоСуммарномуТарифуЕНВД,
//			ПФРДоПредельнойВеличиныЕНВД,
//			ПФРСПревышенияЕНВД,
//			ПФРНакопительнаяЕНВД,
//			ФССЕНВД,
//			ФФОМСЕНВД,
//			ТФОМСЕНВД,
//			ПФРНаДоплатуЛетчикам
//			ПФРНаДоплатуШахтерам
//          ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
//          ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
//          с 2014 года также должны присутствовать колонки по классам условий труда 
//          ПФРЗаЗанятыхНаПодземныхИВредныхРаботахХХХ
//          ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахХХХ.
//		ЗаписыватьИсчисленныеВзносы - булево - признак того, надо ли записывать движения сразу, или они будут записаны
//		                                       позже.
//		ЗаписыватьРасчеты - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ПоАктуПроверки - булево - признак того, что взносы изменены в связи с решением Фонда.
//		ОснованиеДляДоначисления - ПеречислениеСсылка.ОснованияДляДоначисленияСтраховыхВзносов - значение одноименного реквизита регистра ИсчисленныеСтраховыеВзносы.
//
Процедура СформироватьИсчисленныеВзносы(Движения, Отказ, Организация, ПериодРегистрации, ВзносыИсчисленные, ЗаписыватьИсчисленныеВзносы = Истина, ЗаписыватьРасчеты = Ложь, ПоАктуПроверки = Ложь, ОснованиеДляДоначисления = Неопределено, ВзносыПеречислены = Ложь) Экспорт
	
	
	Если ВзносыИсчисленные <> Неопределено Тогда
		ЕстьНовыеСтроки = Ложь;
		ФизическиеЛицаМассив = ОбщегоНазначения.ВыгрузитьКолонку(ВзносыИсчисленные, "ФизическоеЛицо", Истина);
		ТаблицаМестРаботы = КадровыйУчет.ТаблицаРабочихМестОсновныхСотрудников(ФизическиеЛицаМассив, Организация, ПериодРегистрации);
		
		Для Каждого СтрокаДанных Из ВзносыИсчисленные Цикл
			ЕстьНовыеСтроки = Истина;
			НоваяСтрока = Движения.ИсчисленныеСтраховыеВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			НоваяСтрока.Сумма = СтрокаДанных.Результат;
			НоваяСтрока.Организация = Организация;
			НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
			Если Не ЗначениеЗаполнено(НоваяСтрока.Период) Тогда
				НоваяСтрока.Период = ПериодРегистрации;
			КонецЕсли;
			НоваяСтрока.ОснованиеДляДоначисления = ОснованиеДляДоначисления;
			НоваяСтрока.ДатаПолученияДохода = УчетСтраховыхВзносовКлиентСервер.ДатаПолученияДохода(?(ЗначениеЗаполнено(НоваяСтрока.ДатаПолученияДохода), НоваяСтрока.ДатаПолученияДохода, ПериодРегистрации));
			НоваяСтрока.НалоговыйПериод = УчетСтраховыхВзносовКлиентСервер.ДатаНалоговогоПериода(НоваяСтрока.ДатаНачала);
			СтрокаРабочееМесто = ТаблицаМестРаботы.Найти(СтрокаДанных.ФизическоеЛицо,"ФизическоеЛицо");
			Если СтрокаРабочееМесто <> Неопределено Тогда 
				НоваяСтрока.Подразделение	= СтрокаРабочееМесто.Подразделение;
			КонецЕсли;			
			
			ПериодДвижения = НоваяСтрока.Период;
			СтрокаНачисленияВзносов(Движения, Организация, ПериодДвижения, НоваяСтрока, ПоАктуПроверки);
			Если ВзносыПеречислены Тогда
				СтрокаПеречисленияВзносов(Движения, Организация, ПериодДвижения, НоваяСтрока, ПоАктуПроверки);
			КонецЕсли;	
			
		КонецЦикла;
		Если ЕстьНовыеСтроки Тогда
			Если ЗаписыватьИсчисленныеВзносы Тогда
				Движения.ИсчисленныеСтраховыеВзносы.Записать();
				Движения.ИсчисленныеСтраховыеВзносы.Записывать = Ложь;
			Иначе
				Движения.ИсчисленныеСтраховыеВзносы.Записывать = Истина;
			КонецЕсли;
			Если ЗаписыватьРасчеты Тогда
				Движения.РасчетыСФондамиПоСтраховымВзносам.Записать();
				Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Ложь;
			Иначе
				Движения.РасчетыСФондамиПоСтраховымВзносам.Записывать = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьИсчисленныеВзносыАвансом(Движения, Отказ, Организация, ПериодРегистрации, ВзносыИсчисленные, ЗаписыватьИсчисленныеВзносы = Истина, ЗаписыватьРасчеты = Ложь, ПоАктуПроверки = Ложь, ОснованиеДляДоначисления = Неопределено) Экспорт
	
	
	Если ВзносыИсчисленные <> Неопределено Тогда
		ЕстьНовыеСтроки = Ложь;
		Для Каждого СтрокаДанных Из ВзносыИсчисленные Цикл
			
			ЕстьНовыеСтроки = Истина;
			НоваяСтрока = Движения.ИсчисленныеСтраховыеВзносыАвансом.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
			НоваяСтрока.Сумма = СтрокаДанных.Результат;
			НоваяСтрока.Организация = Организация;
			НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
			Если Не ЗначениеЗаполнено(НоваяСтрока.Период) Тогда
				НоваяСтрока.Период = ПериодРегистрации;
			КонецЕсли;
			НоваяСтрока.ОснованиеДляДоначисления = ОснованиеДляДоначисления;
			НоваяСтрока.ДатаПолученияДохода = УчетСтраховыхВзносовКлиентСервер.ДатаПолученияДохода(?(ЗначениеЗаполнено(НоваяСтрока.ДатаПолученияДохода), НоваяСтрока.ДатаПолученияДохода, ПериодРегистрации));
			НоваяСтрока.НалоговыйПериод = УчетСтраховыхВзносовКлиентСервер.ДатаНалоговогоПериода(НоваяСтрока.ДатаНачала);
			
		КонецЦикла;
		Если ЕстьНовыеСтроки Тогда
			Если ЗаписыватьИсчисленныеВзносы Тогда
				Движения.ИсчисленныеСтраховыеВзносыАвансом.Записать();
				Движения.ИсчисленныеСтраховыеВзносыАвансом.Записывать = Ложь;
			Иначе
				Движения.ИсчисленныеСтраховыеВзносыАвансом.Записывать = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
//	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация - СправочникСсылка.Организации - должно быть непустым значением.
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы ВТНачисления и ВТНачисленияСДаннымиЕНВД
//      	поля таблицы ВТНачисления
//				Сотрудник
//				ПодразделениеОрганизации
//				Начисление
//				ДатаНачала 
//				СуммаДохода
//				СуммаВычетаВзносы
//     	         и, возможно, другими - см. описание метода СформироватьВТНачисленияСДаннымиУчета()
//      	поля таблицы ВТНачисленияСДаннымиЕНВД
//				Сотрудник
//				Начисление
//				Подразделение
//				ДатаНачала
//				ДоляЕНВД - число от 0 до 1
//	
//		ПроверятьЕНВД - булево -
//		Записывать - булево - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//		ИсключаемыйРегистратор - ДокументСсылка -
//
Процедура СформироватьСведенияОДоходахСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ПроверятьЕНВД = Ложь, Записывать = Ложь, ИсключаемыйРегистратор = Неопределено) Экспорт
	
	СведенияОДоходахСтраховыеВзносы = СведенияОДоходахСтраховыеВзносы(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключаемыйРегистратор);
	СформироватьДоходыСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, СведенияОДоходахСтраховыеВзносы, Записывать);
	
КонецПроцедуры

// Формирует движения по регистрам подсистемы.
//      	 
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ПериодРегистрации
//		Начисления - Таблица значений с колонками
//				ФизическоеЛицо: должно быть непустым.
//				ДатаПолученияДохода - необязательная, может отсутствовать
//				ВидДохода.
//      	    ОблагаетсяЕНВД - необязательная, может отсутствовать.
//      	    ОблагаетсяВзносамиНаДоплатуЛетчикам - необязательная, может отсутствовать.
//      	    ОблагаетсяВзносамиНаДоплатуШахтерам - необязательная, может отсутствовать.
//      	    ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - необязательная, может отсутствовать.
//      	    КлассУсловийТруда - необязательная, может отсутствовать.
//      	    ЯвляетсяДоходомФармацевта - необязательная, может отсутствовать.
//      	    ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ - необязательная, может отсутствовать.
//				Сумма
//          	Скидка - необязательная, может отсутствовать.
//				Сотрудник - необязательная, может отсутствовать.
//      	    Начисление - необязательная, может отсутствовать.
//      	    Подразделение - необязательная, может отсутствовать.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура СформироватьДоходыСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, Начисления, Записывать = Ложь, ПоАктуПроверки = Ложь) Экспорт
	
	Если Начисления.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из Начисления Цикл
		СтрокаНачисленияДоходов(Движения, Организация, ПериодРегистрации, ПоАктуПроверки, СтрокаДанных);
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.СведенияОДоходахСтраховыеВзносы.Записать();
		Движения.СведенияОДоходахСтраховыеВзносы.Записывать = Ложь;
	Иначе
		Движения.СведенияОДоходахСтраховыеВзносы.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Формирует движения по регистру СтраховыеВзносыПоФизическимЛицам.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ПериодРегистрации
//		СтраховыеВзносыПоФизическимЛицам - таблица значений с колонками рег-ра накоплений СтраховыеВзносыПоФизическимЛицам.
//		Записывать - признак того, надо ли записывать движения сразу, или они будут записаны позже.
//
Процедура ЗаписатьСтраховыеВзносыПоФизическимЛицам(Движения, Отказ, Организация, ПериодРегистрации, СтраховыеВзносыПоФизическимЛицам, Записывать = Ложь) Экспорт

	Если СтраховыеВзносыПоФизическимЛицам = Неопределено Или СтраховыеВзносыПоФизическимЛицам.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из СтраховыеВзносыПоФизическимЛицам Цикл
		НоваяСтрока = Движения.СтраховыеВзносыПоФизическимЛицам.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.Период = ПериодРегистрации;
		НоваяСтрока.Сумма = СтрокаДанных.Результат;
		НоваяСтрока.ДатаНачала = СтрокаДанных.ДатаНачалаНачисление;
	КонецЦикла;
	
	Если Записывать Тогда
		Движения.СтраховыеВзносыПоФизическимЛицам.Записать();
		Движения.СтраховыеВзносыПоФизическимЛицам.Записывать = Ложь;
	Иначе
		Движения.СтраховыеВзносыПоФизическимЛицам.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполнитьВзносы(ВременнаяСсылка, МенеджерВременныхТаблиц, Организация, МесяцНачисления, ПоВсемДокументам = Истина, БезУчетаУвольнений = Ложь) Экспорт
	

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("МесяцНачисления",МесяцНачисления);
	Запрос.УстановитьПараметр("ВременнаяСсылка",ВременнаяСсылка);
	Запрос.УстановитьПараметр("БезУчетаУвольнений",БезУчетаУвольнений);	
	
	Запрос.Текст = 
	   "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо,
		|	СведенияОДоходахСтраховыеВзносы.ВидЕСВ,
		|	СведенияОДоходахСтраховыеВзносы.ДокументОснование,
		|	СведенияОДоходахСтраховыеВзносы.НалоговыйПериод
		|ПОМЕСТИТЬ ВТНачисленияОбороты
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы.Обороты(
		|			НАЧАЛОПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		|			КОНЕЦПЕРИОДА(&МесяцНачисления, МЕСЯЦ),
		|			,
		|			Организация = &Организация
		|            И ФизическоеЛицо В (ВЫБРАТЬ ФизическиеЛица.ФизическоеЛицо ИЗ ВТФизическиеЛица КАК ФизическиеЛица)
		|			) КАК СведенияОДоходахСтраховыеВзносы
		|ГДЕ
		|	СведенияОДоходахСтраховыеВзносы.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НеУчитывается)
		|";
	
	Если НЕ ПоВсемДокументам Тогда
		ПоляСуммирования = Новый Массив;
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, ".Проведен", ПоляСуммирования, "ЕСТЬ NULL");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияОбороты.ФизическоеЛицо,
		|	НачисленияОбороты.ВидЕСВ,
		|	НачисленияОбороты.ДокументОснование,
		|	НачисленияОбороты.НалоговыйПериод
		|ПОМЕСТИТЬ ВТСтрокиРасчета
		|ИЗ ВТНачисленияОбороты КАК НачисленияОбороты
		|";
	Запрос.Выполнить();
	
//Категории застрахованных лиц по данным кадрового учета	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСВДвижения.ФизическоеЛицо,
		|	ЕСВДвижения.Сотрудник,
		|	ЕСВДвижения.КатегорияЕСВ,
		|	ЕСВДвижения.Регистратор,
		|	ВЫБОР
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.Увольнение
		|		ТОГДА КОНЕЦПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.ПриемНаРаботу
		|		ТОГДА НАЧАЛОПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ЕСВДвижения.Период,ДЕНЬ,-1)
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.Увольнение
		|		ТОГДА КОНЕЦПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		КОГДА ЕСВДвижения.Регистратор ССЫЛКА Документ.ПриемНаРаботу
		|		ТОГДА НАЧАЛОПЕРИОДА(ЕСВДвижения.Период, МЕСЯЦ)
		|		ИНАЧЕ ЕСВДвижения.Период
		|	КОНЕЦ КАК ПериодНачало
		|ПОМЕСТИТЬ ВТЕСВДвиженияВсе
		|ИЗ
		|	РегистрСведений.ЕСВСотрудников КАК ЕСВДвижения
		|    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|    ВТФизическиеЛица КАК ФизическиеЛица
		|    ПО ЕСВДвижения.ФизическоеЛицо = ФизическиеЛица.ФизическоеЛицо
		|     И ЕСВДвижения.Сотрудник.ГоловнаяОрганизация = &Организация
		|ГДЕ
		|   НЕ (&БезУчетаУвольнений) ИЛИ НЕ (ЕСВДвижения.Регистратор ССЫЛКА Документ.Увольнение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЕСВДвижения.Сотрудник,
		|	МАКСИМУМ(ЕСВДвижения.Период) КАК Период	
		|ПОМЕСТИТЬ ВТМаксимальныеПериоды
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТЕСВДвиженияВсе КАК ЕСВДвижения
		|    ПО СтрокиРасчета.ФизическоеЛицо = ЕСВДвижения.ФизическоеЛицо 
		|     И СтрокиРасчета.НалоговыйПериод >= ЕСВДвижения.Период
		|СГРУППИРОВАТЬ ПО
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЕСВДвижения.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксимальныеПериоды.ФизическоеЛицо,
		|	МаксимальныеПериоды.Сотрудник,
		|	МаксимальныеПериоды.НалоговыйПериод,
		|	МаксимальныеПериоды.НалоговыйПериод КАК ДатаНачала,
		|	ЕСВДвижения.КатегорияЕСВ	
		|ПОМЕСТИТЬ ВТЕСВСрез
		|ИЗ
		|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЕСВДвиженияВсе КАК ЕСВДвижения
		|    ПО МаксимальныеПериоды.ФизическоеЛицо = ЕСВДвижения.ФизическоеЛицо 
		|     И МаксимальныеПериоды.Период = ЕСВДвижения.Период
		|     И МаксимальныеПериоды.Сотрудник = ЕСВДвижения.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСВДвижения.ФизическоеЛицо,
		|	ЕСВДвижения.Сотрудник,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ЕСВДвижения.КатегорияЕСВ,
		|	ЕСВДвижения.Период,
		|	ЕСВДвижения.ПериодНачало
		|ПОМЕСТИТЬ ВТЕСВДвижения
		|ИЗ
		|	ВТЕСВДвиженияВсе КАК ЕСВДвижения
		|    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|    ВТСтрокиРасчета КАК СтрокиРасчета
		|     ПО ЕСВДвижения.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
		|      И ЕСВДвижения.Период >= СтрокиРасчета.НалоговыйПериод
		|      И ЕСВДвижения.Период <= КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
		|      И НЕ (ЕСВДвижения.Регистратор ССЫЛКА Документ.ПриемНаРаботу)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВСрез.ФизическоеЛицо,
		|	ЕСВСрез.Сотрудник,
		|	ЕСВСрез.НалоговыйПериод,
		|	ЕСВСрез.КатегорияЕСВ,
		|	ЕСВСрез.ДатаНачала КАК ДатаНачала	
		|ПОМЕСТИТЬ ВТЕСВНачало
		|ИЗ
		|	ВТЕСВСрез КАК ЕСВСрез
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСВДвижения.ФизическоеЛицо,
		|	ЕСВДвижения.Сотрудник,
		|	ЕСВДвижения.НалоговыйПериод,
		|	ЕСВДвижения.КатегорияЕСВ,
		|	ЕСВДвижения.ПериодНачало КАК ДатаНачала	
		|ИЗ
		|	ВТЕСВДвижения КАК ЕСВДвижения
		|ГДЕ
		|   ЕСВДвижения.КатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.ПустаяСсылка)
		|   И ЕСВДвижения.КатегорияЕСВ <> ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НеУчитывается)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСВНачало.ФизическоеЛицо,
		|	ЕСВНачало.Сотрудник,
		|	ЕСВНачало.КатегорияЕСВ,
		|	ЕСВНачало.ДатаНачала,
		|	ЕСВНачало.НалоговыйПериод,
		|	МИНИМУМ(ЕСВДвижения.Период) КАК ДатаОкончания	
		|ПОМЕСТИТЬ ВТМинимальныеПериоды
		|ИЗ
		|	ВТЕСВНачало КАК ЕСВНачало
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТЕСВДвижения КАК ЕСВДвижения
		|    ПО ЕСВНачало.ФизическоеЛицо = ЕСВДвижения.ФизическоеЛицо 
		|     И ЕСВНачало.Сотрудник = ЕСВДвижения.Сотрудник
		|     И ЕСВНачало.НалоговыйПериод = ЕСВДвижения.НалоговыйПериод
		|     И ЕСВНачало.КатегорияЕСВ <> ЕСВДвижения.КатегорияЕСВ
		|     И ЕСВНачало.ДатаНачала < ЕСВДвижения.Период
		|СГРУППИРОВАТЬ ПО
		|	ЕСВНачало.ФизическоеЛицо,
		|	ЕСВНачало.Сотрудник,
		|	ЕСВНачало.НалоговыйПериод,
		|	ЕСВНачало.КатегорияЕСВ,
		|	ЕСВНачало.ДатаНачала
		|";
     Запрос.Выполнить();
	 
	 Запрос.Текст ="ВЫБРАТЬ 
		|	ЕСВНачало.ФизическоеЛицо,
		|	ЕСВНачало.Сотрудник,
		|	ЕСВНачало.НалоговыйПериод,
		|	ЕСВНачало.КатегорияЕСВ,
		|	ЕСВНачало.ДатаНачала,
		|	ЕСТЬNULL(МинимальныеПериоды.ДатаОкончания, КОНЕЦПЕРИОДА(ЕСВНачало.ДатаНачала, МЕСЯЦ)) КАК ДатаОкончания,
		|	NULL КАК ДокументОснование
		|ПОМЕСТИТЬ ВТОсновныеКатегории
		|ИЗ
		|	ВТЕСВНачало КАК ЕСВНачало
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТМинимальныеПериоды КАК МинимальныеПериоды
		|    ПО ЕСВНачало.ФизическоеЛицо = МинимальныеПериоды.ФизическоеЛицо 
		|     И ЕСВНачало.НалоговыйПериод = МинимальныеПериоды.НалоговыйПериод
		|     И ЕСВНачало.Сотрудник = МинимальныеПериоды.Сотрудник
		|     И ЕСВНачало.КатегорияЕСВ = МинимальныеПериоды.КатегорияЕСВ
		|     И ЕСВНачало.ДатаНачала = МинимальныеПериоды.ДатаНачала
		|";
		
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТНачисленияПоДоговорам") <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ 
			|	НачисленияПоДоговорам.ФизическоеЛицо,
			|	НачисленияПоДоговорам.Сотрудник,
			|	НачисленияПоДоговорам.ПериодДействия,
			|	НачисленияПоДоговорам.КатегорияЕСВ,
			|	НАЧАЛОПЕРИОДА(НачисленияПоДоговорам.ПериодДействия, МЕСЯЦ),
			|	КОНЕЦПЕРИОДА(НачисленияПоДоговорам.ПериодДействия, МЕСЯЦ),
			|	НачисленияПоДоговорам.Договор
			|ИЗ
			|	ВТНачисленияПоДоговорам КАК НачисленияПоДоговорам
			|
			|";
	КонецЕсли;		
	Запрос.Выполнить();	
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтрокиРасчета.ФизическоеЛицо.Наименование КАК Наименование,
		|	СтрокиРасчета.ФизическоеЛицо,
		|	СтрокиРасчета.ВидЕСВ,
		|	СтрокиРасчета.НалоговыйПериод,
		|	ВЫБОР 
		|		КОГДА СтрокиРасчета.ВидЕСВ = ОсновныеКатегории.КатегорияЕСВ.ВидЕСВ
		|	    ТОГДА ОсновныеКатегории.КатегорияЕСВ
		|		КОГДА СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
		|	    ТОГДА ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботник)
		|	    ИНАЧЕ ПараметрыКатегорийЕСВ.СвязаннаяКатегория
		|    КОНЕЦ КАК КатегорияЕСВ,
		|   ВЫБОР 
		|   	КОГДА ОсновныеКатегории.ДокументОснование ЕСТЬ NULL
		|			ТОГДА ОсновныеКатегории.ДатаНачала
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
		|	КОНЕЦ КАК ДатаНачала,
		|   ВЫБОР 
		|   	КОГДА ОсновныеКатегории.ДокументОснование ЕСТЬ NULL
		|			ТОГДА ОсновныеКатегории.ДатаОкончания
		|		ИНАЧЕ КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
		|	КОНЕЦ КАК ДатаОкончания	
		|ПОМЕСТИТЬ ВТВзносыВсе
		|ИЗ
		|	ВТСтрокиРасчета КАК СтрокиРасчета
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    ВТОсновныеКатегории КАК ОсновныеКатегории
		|    ПО СтрокиРасчета.ФизическоеЛицо = ОсновныеКатегории.ФизическоеЛицо
		|     И (СтрокиРасчета.НалоговыйПериод = ОсновныеКатегории.НалоговыйПериод
		|      ИЛИ СтрокиРасчета.ДокументОснование = ОсновныеКатегории.ДокументОснование)
		|    ЛЕВОЕ СОЕДИНЕНИЕ
		|    РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
		|    ПО ОсновныеКатегории.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
		|     И СтрокиРасчета.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
		|ГДЕ НЕ (ОсновныеКатегории.КатегорияЕСВ  ЕСТЬ NULL)
		|    И НЕ (ОсновныеКатегории.КатегорияЕСВ = ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.НеУчитывается))
		|    И НЕ ВЫБОР 
		|		КОГДА СтрокиРасчета.ВидЕСВ = ОсновныеКатегории.КатегорияЕСВ.ВидЕСВ
		|	    ТОГДА ОсновныеКатегории.КатегорияЕСВ
		|		КОГДА СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
		|	    ТОГДА ЗНАЧЕНИЕ(Справочник.КатегорииЗастрахованныхЛицЕСВ.МобилизованныйРаботник)
		|	    ИНАЧЕ ПараметрыКатегорийЕСВ.СвязаннаяКатегория
		|   КОНЕЦ ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВзносыВсе.Наименование,
		|	ВзносыВсе.ФизическоеЛицо,
		|	ВзносыВсе.ВидЕСВ,
		|	ВзносыВсе.НалоговыйПериод,
		|	ВзносыВсе.КатегорияЕСВ,
		|	МИНИМУМ(ВзносыВсе.ДатаНачала) КАК ДатаНачала,
		|	МАКСИМУМ(ВзносыВсе.ДатаОкончания) КАК ДатаОкончания	
		|ПОМЕСТИТЬ ВТВзносы
		|ИЗ
		|	ВТВзносыВсе КАК ВзносыВсе
		|СГРУППИРОВАТЬ ПО 
		|	ВзносыВсе.Наименование,
		|	ВзносыВсе.ФизическоеЛицо,
		|	ВзносыВсе.ВидЕСВ,
		|	ВзносыВсе.НалоговыйПериод,
		|	ВзносыВсе.КатегорияЕСВ
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.Наименование,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.ВидЕСВ,
		|	Взносы.КатегорияЕСВ,
		|	Взносы.ДатаНачала,
		|	Взносы.ДатаОкончания	
		|ИЗ
		|	ВТВзносы КАК Взносы
		|   ЛЕВОЕ СОЕДИНЕНИЕ
	    |   РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
	    |    ПО Взносы.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	    |     И Взносы.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
		|ГДЕ
		|   ЕСТЬNULL(ПараметрыКатегорийЕСВ.ЕСВ, ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)
		|УПОРЯДОЧИТЬ ПО
		|	Взносы.Наименование,
		|	Взносы.ДатаНачала,
		|	Взносы.ВидЕСВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.Наименование,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.ВидЕСВ,
		|	Взносы.КатегорияЕСВ,
		|	Взносы.ДатаНачала,
		|	Взносы.ДатаОкончания	
		|ИЗ
		|	ВТВзносы КАК Взносы
		|   ЛЕВОЕ СОЕДИНЕНИЕ
	    |   РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&МесяцНачисления) КАК ПараметрыКатегорийЕСВ
	    |    ПО Взносы.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	    |     И Взносы.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
		|ГДЕ
		|   ЕСТЬNULL(ПараметрыКатегорийЕСВ.ЕСВФОТ, ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка)
		|УПОРЯДОЧИТЬ ПО
		|	Взносы.Наименование,
		|	Взносы.ДатаНачала,
		|	Взносы.ВидЕСВ
		|";
	
	Взносы = Запрос.ВыполнитьПакет();   
	
	СтруктураВзносы = Новый Структура();
	СтруктураВзносы.Вставить("Взносы", Взносы[2].Выгрузить());
	СтруктураВзносы.Вставить("ВзносыФОТ", Взносы[3].Выгрузить());
	
	Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТНачисленияОбороты
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТСтрокиРасчета
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТЕСВДвиженияВсе
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТМаксимальныеПериоды
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТЕСВСрез
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТЕСВДвижения
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТЕСВНачало
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТМинимальныеПериоды
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТОсновныеКатегории
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТВзносыВсе
	    |;
		|
		|////////////////////////////////////////////////////////////////////////////////
	    |УНИЧТОЖИТЬ ВТВзносы
	    |;
		|";
	Запрос.Выполнить();	
	
	
	Возврат СтруктураВзносы;
	
КонецФункции

// Рассчитывает взносы по уже записанным в учете данным о начислениях и 
// по переданным данным о начислениях.
// Возвращает таблицу значений с полями:
//		ФизическоеЛицо
//		ФФОМС
//		ФФОМСЕНВД
//		ТФОМС
//		ТФОМСЕНВД
//		ФСС
//		ФССЕНВД
//		ФССНесчастныеСлучаи
//		ПФРПоСуммарномуТарифу
//		ПФРДоПредельнойВеличины,
//		ПФРСПревышения,
//		ПФРПоСуммарномуТарифуЕНВД
//		ПФРДоПредельнойВеличиныЕНВД,
//		ПФРСПревышенияЕНВД,
//		ПФРНаДоплатуЛетчикам
//		ПФРНаДоплатуШахтерам
//		ПФРЗаЗанятыхНаПодземныхИВредныхРаботахХХХ
//		ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахХХХ
//
// Параметры:
//      Ссылка
//		ПериодРегистрации - дата - определяет месяц, по который ведется расчет.
//		Организация
//      МенеджерВременныхТаблиц содержит вр. таблицы 
//      	ВТФизическиеЛица 
//				ФизическоеЛицо.
//		ИсключатьДоходыРегистратора - булево -
//		ДатаОкончанияРегистрацииДоходов - дата - определяет самую позднюю дату регистрации учитываемых доходов, 
//			относящихся к заданному ранее месяцу расчета.
//
Функция РассчитатьВзносы(Ссылка, Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключатьДоходыРегистратора = Истина, ДатаОкончанияРегистрацииДоходов = Неопределено) Экспорт


    ОкончательныйРасчет = (ТипЗнч(Ссылка) = Тип("ДокументСсылка.НачислениеЗарплаты"))
						ИЛИ (ТипЗнч(Ссылка) = Тип("ДокументСсылка.Увольнение"))
						ИЛИ (ТипЗнч(Ссылка) = Тип("ДокументСсылка.УвольнениеСписком"))
						ИЛИ (ТипЗнч(Ссылка) = Тип("ДокументСсылка.ВыплатаБывшимСотрудникам"));
						
	БезУчетаУвольнений = ТипЗнч(Ссылка) = Тип("ДокументСсылка.ВыплатаБывшимСотрудникам");					

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", Организация);
    Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("НачалоПредыдущегоГода", ДобавитьМесяц(НачалоГода(ПериодРегистрации), -12));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("ГодРасчета", Год(ПериодРегистрации));
	Запрос.УстановитьПараметр("МесяцРасчета", Месяц(ПериодРегистрации));
	Запрос.УстановитьПараметр("ПредыдущийМесяц", Месяц(ПериодРегистрации) - 1);
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ?(ИсключатьДоходыРегистратора, Ссылка, Неопределено));
	
	СтрокиКРасчету = ЗаполнитьВзносы(Ссылка, МенеджерВременныхТаблиц, Организация, ПериодРегистрации, ОкончательныйРасчет, БезУчетаУвольнений); 
	
	Если СтрокиКРасчету.Взносы.Количество() = 0 И СтрокиКРасчету.ВзносыФОТ.Количество() = 0 Тогда
		Возврат СтрокиКРасчету;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МесяцПредыдущий",ДобавитьМесяц(ПериодРегистрации,-1));
	Запрос.УстановитьПараметр("Взносы",СтрокиКРасчету.Взносы);
	Запрос.УстановитьПараметр("ВзносыФОТ",СтрокиКРасчету.ВзносыФОТ);
	
	Запрос.УстановитьПараметр("НеПрименяетсяМинимальнаяБаза", ПериодРегистрации < ДатаИзмененияЕСВ1573());
	Запрос.УстановитьПараметр("НеПрименяетсяКоэффициентСтавки", ПериодРегистрации < ДатаИзмененияЕСВ1573());
	
	Применяется1863 = (ПериодРегистрации >= ДатаИзмененияЕСВ1863());
	
	Запрос.УстановитьПараметр("Применяется1863", Применяется1863);
	
	Запрос.УстановитьПараметр("МассивНалогиБезКоэффициента",СписокНалогиБезКоэффициента());
	Запрос.УстановитьПараметр("МассивНалогиБезМинимальнойБазы",СписокНалогиБезМинимальнойБазы());
	
	Запрос.УстановитьПараметр("ОкончательныйРасчет",ОкончательныйРасчет);
	
	Применяется3688 = (ПериодРегистрации >= ДатаИзмененияЕСВ3688());
	
	Запрос.УстановитьПараметр("Применяется3688", Применяется3688);
	
	Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	НАЧАЛОПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК НалоговыйПериод,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ПОМЕСТИТЬ ВТСтрокиРасчетаВзносы
	   |ИЗ
	   |	&Взносы КАК Взносы
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	НАЧАЛОПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК НалоговыйПериод,
	   |	КОНЕЦПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК ПериодУчета,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ПОМЕСТИТЬ ВТСтрокиРасчетаВзносыФОТ
	   |ИЗ
	   |	&ВзносыФОТ КАК Взносы
	   |;
       |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	Взносы.НалоговыйПериод,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ПОМЕСТИТЬ ВТСтрокиРасчета
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносы КАК Взносы
	   |
	   |ОБЪЕДИНИТЬ ВСЕ
	   |
	   |ВЫБРАТЬ
	   |	Взносы.ФизическоеЛицо,
	   |	Взносы.ВидЕСВ,
	   |	Взносы.НалоговыйПериод,
	   |	Взносы.ДатаНачала,
	   |	Взносы.ДатаОкончания,
	   |	Взносы.КатегорияЕСВ
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносыФОТ КАК Взносы";
	Запрос.Выполнить();
	
	//Получим список работающих по основному месту работы
	КадровыйУчет.СоздатьВТОсновныеМестаРаботыФизическихЛиц(МенеджерВременныхТаблиц, Истина, Организация, "ВТОсновныеМестаРаботы", "ВТСтрокиРасчетаВзносыФОТ", "ПериодУчета");
	
	//Запросы к данным регистров - начислениям сотрудников и удержанному ЕСВ.
	//Если не по всем документам - нужен отбор по регистратору
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо,
	   |	СведенияОДоходахСтраховыеВзносы.ВидЕСВ,
	   |	ВидыЕСВ.Порядок КАК ВидЕСВПорядок,
	   |	СведенияОДоходахСтраховыеВзносы.НалоговыйПериод,
	   |	СведенияОДоходахСтраховыеВзносы.СуммаОборот КАК База,
	   |	ВЫБОР 
	   |     КОГДА СведенияОДоходахСтраховыеВзносы.ЭтоОтпускные
	   |         И СведенияОДоходахСтраховыеВзносы.Период = &ПериодРегистрации
	   |     ТОГДА СведенияОДоходахСтраховыеВзносы.СуммаОборот
	   |     ИНАЧЕ 0
	   |    КОНЕЦ КАК БазаОтпускные
	   |
	   |ПОМЕСТИТЬ ВТНачисленияОбороты
	   |ИЗ
	   |	РегистрНакопления.СведенияОДоходахСтраховыеВзносы.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
	   |			МЕСЯЦ,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))
	   |				) КАК СведенияОДоходахСтраховыеВзносы
	   |
	   |    ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыЕСВ КАК ВидыЕСВ
	   |    ПО ВидыЕСВ.Ссылка = СведенияОДоходахСтраховыеВзносы.ВидЕСВ 
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ЕСВПоСотрудникамОборот.ФизическоеЛицо,
	   |	ЕСВПоСотрудникамОборот.ВидЕСВ КАК ВидЕСВ,
	   |	ЕСВПоСотрудникамОборот.НалоговыйПериод КАК НалоговыйПериод,
	   |	ЕСВПоСотрудникамОборот.СпособРасчета КАК СпособРасчета,
	   |	ЕСВПоСотрудникамОборот.БазаОборот КАК БазаДо,
	   |	ЕСВПоСотрудникамОборот.БазаВзносаОборот КАК БазаВзносаДо
	   |
	   |ПОМЕСТИТЬ ВТЕСВПоСотрудникамОборот
	   |ИЗ
	   |	РегистрНакопления.ИсчисленныеСтраховыеВзносы.Обороты(
	   |			,
	   |			КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
	   |			,
	   |			Организация = &Организация
	   |				И (ФизическоеЛицо В
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТСтрокиРасчета КАК СтрокиРасчета))) КАК ЕСВПоСотрудникамОборот
	   |";
	
	Если ОкончательныйРасчет И ИсключатьДоходыРегистратора Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("База");
		ПоляСуммирования.Добавить("БазаОтпускные");
		ПоляСуммирования.Добавить("БазаДо");
		ПоляСуммирования.Добавить("БазаВзносаДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, "ИсключаемыйРегистратор", ПоляСуммирования, "<>");
	ИначеЕсли НЕ ОкончательныйРасчет Тогда
		ПоляСуммирования = Новый Массив;
		ПоляСуммирования.Добавить("База");
		ПоляСуммирования.Добавить("БазаОтпускные");
		ПоляСуммирования.Добавить("БазаДо");
		ПоляСуммирования.Добавить("БазаВзносаДо");
		Запрос.Текст = ЗарплатаКадры.ДобавитьОтборПоРегистраторуРегистрНакопленияОбороты(Запрос.Текст, ".Проведен", ПоляСуммирования, "ЕСТЬ NULL");
	КонецЕсли;
	
	Запрос.Выполнить();   
	
	//Базы
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	НачисленияОбороты.ФизическоеЛицо,
	   |	НачисленияОбороты.ВидЕСВ,
	   |	НачисленияОбороты.НалоговыйПериод,
	   |	НачисленияОбороты.База КАК База,
	   |	НачисленияОбороты.БазаОтпускные КАК БазаОтпускные
	   |ПОМЕСТИТЬ ВТБазаСФильтром
	   |ИЗ
	   |	ВТНачисленияОбороты КАК НачисленияОбороты
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчета КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = НачисленияОбороты.ФизическоеЛицо
	   |     И СтрокиРасчета.ВидЕСВ = НачисленияОбороты.ВидЕСВ
	   |     И СтрокиРасчета.НалоговыйПериод = НачисленияОбороты.НалоговыйПериод
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	БазаСФильтром.ФизическоеЛицо,
	   |	БазаСФильтром.ВидЕСВ,
	   |	БазаСФильтром.НалоговыйПериод,
	   |	СУММА(БазаСФильтром.База) КАК База,
	   |	СУММА(БазаСФильтром.БазаОтпускные) КАК БазаОтпускные
	   |ПОМЕСТИТЬ ВТБаза
	   |ИЗ
	   |	ВТБазаСФильтром КАК БазаСФильтром
	   |СГРУППИРОВАТЬ ПО
	   |	БазаСФильтром.ФизическоеЛицо,
	   |	БазаСФильтром.ВидЕСВ,
	   |	БазаСФильтром.НалоговыйПериод
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.ВидЕСВ,
	   |	ТаблицаБаза.НалоговыйПериод,
	   |	СУММА(ТаблицаБазаВычет.База) КАК БазаВычет
	   |ПОМЕСТИТЬ ВТБазаВычет
	   |ИЗ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТНачисленияОбороты КАК ТаблицаБазаВычет
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаВычет.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаВычет.НалоговыйПериод
	   |     И ТаблицаБаза.ВидЕСВ.Порядок > ТаблицаБазаВычет.ВидЕСВ.Порядок
	   |ГДЕ
	   |    ТаблицаБаза.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
	   |    И ТаблицаБазаВычет.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
	   |СГРУППИРОВАТЬ ПО
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.ВидЕСВ,
	   |	ТаблицаБаза.НалоговыйПериод
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод,
	   |	СУММА(ТаблицаБаза.База) КАК БазаПолная
	   |ПОМЕСТИТЬ ВТБазаПолная
	   |ИЗ
	   |	ВТБаза КАК ТаблицаБаза
	   |ГДЕ
	   |	(&Применяется1863
	   |	ИЛИ ТаблицаБаза.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ))
	   |	И ТаблицаБаза.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.НачисленияМобилизованным)
	   |СГРУППИРОВАТЬ ПО
	   |	ТаблицаБаза.ФизическоеЛицо,
	   |	ТаблицаБаза.НалоговыйПериод
	   |;
	   |";
	Запрос.Выполнить();
	
	//Пределы страховых взносов
	ОтборыОТ = Новый Структура();
	ВыбираемыеПоляОТ = Новый Структура();
	ОтборыРС = Новый Структура();
	ВыбираемыеПоляРС = Новый Структура();
	ВыбираемыеПоляРС.Вставить("Предел","Предел");
	ВыбираемыеПоляРС.Вставить("МинимальнаяБаза","МинимальнаяБаза");
	ПоляСвязей = Новый Структура();
	ПоляСвязей.Вставить("ВидЕСВ","ВидЕСВ");
	
	Запрос.Текст = ЗарплатаКадры.ЗапросВТСрезПоследнихНаВсеДаты("ВТПределыСтраховыхВзносовСрез", "ВТСтрокиРасчетаВзносыФОТ", ОтборыОТ, ВыбираемыеПоляОТ, "НалоговыйПериод", "РегистрСведений.ПределыСтраховыхВзносов", ОтборыРС, ВыбираемыеПоляРС,"Период", ПоляСвязей, ЛОЖЬ, ЛОЖЬ, ЛОЖЬ);
	Запрос.Выполнить();
	
	//Принятые и уволенные
	Запрос.Текст = 
	   "////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.НалоговыйПериод
	   |ПОМЕСТИТЬ ВТТекущиеКадровыеДанныеСотрудников
	   |ИЗ
	   |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	   |    ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	   |    ВТСтрокиРасчетаВзносыФОТ КАК СтрокиРасчета
	   |    ПО СтрокиРасчета.ФизическоеЛицо = ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
	   |     И ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация = &Организация
	   |ГДЕ
	   |   НЕ ТекущиеКадровыеДанныеСотрудников.ДатаПриема > СтрокиРасчета.НалоговыйПериод
	   |    И НЕ ТекущиеКадровыеДанныеСотрудников.ДатаПриема = ДАТАВРЕМЯ(1,1,1)
	   |    И НЕ (КОНЕЦПЕРИОДА(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения, ДЕНЬ) < КОНЕЦПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ)
	   |       И ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения <> ДАТАВРЕМЯ(1,1,1))
	   |    
	   |";
	Запрос.Выполнить();   
	
	
	Запрос.Текст =
	   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.ВидЕСВ,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	СтрокиРасчета.ДатаНачала,
	   |	СтрокиРасчета.ДатаОкончания,
	   |	СтрокиРасчета.КатегорияЕСВ,
	   |	ЕСТЬNULL(ТаблицаБаза.База, 0) КАК База,
	   |	0 КАК БазаВзноса,
	   |	ЕСТЬNULL(ТаблицаБаза.БазаОтпускные, 0) КАК БазаОтпускные,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаДо, 0) КАК БазаДо,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаВзносаДо, 0) КАК БазаВзносаДо,
	   |	0 КАК Результат,
	   |	0 КАК РезультатПолная,
	   |	ЕСТЬNULL(ТаблицаБазаВычет.БазаВычет, 0) КАК БазаВычет,
	   |	ПараметрыКатегорийЕСВ.ЕСВ КАК Налог,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтатьяНалоговойДекларации,ШкалаСтавокНалогов.СтатьяНалоговойДекларации) КАК СтатьяНалоговойДекларации,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.Ставка, ЕСТЬNULL(ШкалаСтавокНалогов.Ставка, 0)) КАК Ставка,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтавкаПолная, ЕСТЬNULL(ШкалаСтавокНалогов.СтавкаПолная, 0)) КАК СтавкаПолная,
	   |	ЕСТЬNULL(ПределыСтраховыхВзносов.Предел,0) КАК Предел
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносы КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ПО ТаблицаБаза.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаБаза.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаБаза.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТЕСВПоСотрудникамОборот КАК ТаблицаЕСВПоСотрудникамДо
	   |    ПО ТаблицаЕСВПоСотрудникамДо.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаЕСВПоСотрудникамДо.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаЕСВПоСотрудникамДо.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |     И ТаблицаЕСВПоСотрудникамДо.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы)
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&ПериодРегистрации) КАК ПараметрыКатегорийЕСВ
	   |    ПО СтрокиРасчета.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	   |     И СтрокиРасчета.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаВычет КАК ТаблицаБазаВычет
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаВычет.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаВычет.НалоговыйПериод
	   |     И ТаблицаБаза.ВидЕСВ = ТаблицаБазаВычет.ВидЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),Организация = &Организация И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалоговПоОрганизации
	   |    ПО ШкалаСтавокНалоговПоОрганизации.Налог = ПараметрыКатегорийЕСВ.ЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалогов
	   |    ПО ШкалаСтавокНалогов.Налог = ПараметрыКатегорийЕСВ.ЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТПределыСтраховыхВзносовСрез КАК ПределыСтраховыхВзносов
	   |    ПО СтрокиРасчета.ВидЕСВ = ПределыСтраховыхВзносов.ВидЕСВ 
	   |     И СтрокиРасчета.НалоговыйПериод = ПределыСтраховыхВзносов.НалоговыйПериод
	   |ГДЕ НЕ (ПараметрыКатегорийЕСВ.ЕСВ ЕСТЬ NULL)
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СтрокиРасчета.ФизическоеЛицо,
	   |	СтрокиРасчета.ВидЕСВ,
	   |	СтрокиРасчета.НалоговыйПериод,
	   |	СтрокиРасчета.ДатаНачала,
	   |	СтрокиРасчета.ДатаОкончания,
	   |	СтрокиРасчета.КатегорияЕСВ,
	   |	ЕСТЬNULL(ТаблицаБаза.База, 0) КАК База,
	   |	0 КАК БазаВзноса,
	   |	ЕСТЬNULL(ТаблицаБаза.БазаОтпускные, 0) КАК БазаОтпускные,
	   |	0 КАК БазаДоначисление,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаДо, 0) КАК БазаДо,
	   |	ЕСТЬNULL(ТаблицаЕСВПоСотрудникамДо.БазаВзносаДо, 0) КАК БазаВзносаДо,
	   |	0 КАК Результат,
	   |	0 КАК РезультатДоначисление,
	   |	0 КАК РезультатПолная,
	   |	ЕСТЬNULL(ТаблицаБазаВычет.БазаВычет, 0) КАК БазаВычет,
	   |	ЕСТЬNULL(ТаблицаБазаПолная.БазаПолная, 0) КАК БазаПолная,
	   |	ПараметрыКатегорийЕСВ.ЕСВФОТ КАК Налог,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтатьяНалоговойДекларации,ШкалаСтавокНалогов.СтатьяНалоговойДекларации) КАК СтатьяНалоговойДекларации,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.Ставка, ЕСТЬNULL(ШкалаСтавокНалогов.Ставка, 0)) КАК Ставка,
	   |	ЕСТЬNULL(ШкалаСтавокНалоговПоОрганизации.СтавкаПолная, ЕСТЬNULL(ШкалаСтавокНалогов.СтавкаПолная, 0)) КАК СтавкаПолная,
	   |	ЕСТЬNULL(ПределыСтраховыхВзносов.Предел,0) КАК Предел,
	   |	ВЫБОР
	   |		КОГДА &НеПрименяетсяМинимальнаяБаза
	   |		 ТОГДА 0
	   |		КОГДА НЕ &ОкончательныйРасчет
	   |		 ТОГДА 0
	   |		КОГДА ПараметрыКатегорийЕСВ.ЕСВФОТ  В (&МассивНалогиБезМинимальнойБазы)
	   |		 ТОГДА 0
	   |		КОГДА НЕ ТаблицаОсновныеМестаРаботы.ОсновноеМестоРаботы
	   |		 ТОГДА 0
	   |		КОГДА ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо ЕСТЬ NULL
	   |		 ТОГДА 0
       |	 	КОГДА НАЧАЛОПЕРИОДА(СтрокиРасчета.НалоговыйПериод, МЕСЯЦ) > &ПериодРегистрации
	   |	  	 ТОГДА 0
	   |		ИНАЧЕ ЕСТЬNULL(ПределыСтраховыхВзносов.МинимальнаяБаза,0) 
	   |	КОНЕЦ КАК МинимальнаяБаза,
	   |	ВЫБОР
	   |		КОГДА &НеПрименяетсяКоэффициентСтавки
	   |		 ТОГДА 0
	   |		КОГДА НЕ &ОкончательныйРасчет
	   |		 ТОГДА 0
	   |		КОГДА ПараметрыКатегорийЕСВ.ЕСВФОТ  В (&МассивНалогиБезКоэффициента)
	   |		 ТОГДА 0
	   |		КОГДА &Применяется1863
	   |		 ТОГДА ЕСТЬNULL(КоэффициентыСтавкиВзносовФОТ.КоэффициентСтавки,1)
	   |		КОГДА НЕ ТаблицаОсновныеМестаРаботы.ОсновноеМестоРаботы
	   |		 ТОГДА 0
	   |		КОГДА СтрокиРасчета.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ОсновнаяЗарплата)И СтрокиРасчета.ВидЕСВ <> ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ)
	   |		 ТОГДА 0
	   |		ИНАЧЕ ЕСТЬNULL(КоэффициентыСтавкиВзносовФОТ.КоэффициентСтавки,1) 
	   |	КОНЕЦ КАК КоэффициентСтавки
	   |ИЗ
	   |	ВТСтрокиРасчетаВзносыФОТ КАК СтрокиРасчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТОсновныеМестаРаботы КАК ТаблицаОсновныеМестаРаботы
	   |    ПО ТаблицаОсновныеМестаРаботы.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаОсновныеМестаРаботы.ПериодУчета = СтрокиРасчета.ПериодУчета
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	   |    ПО ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТекущиеКадровыеДанныеСотрудников.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТБаза КАК ТаблицаБаза
	   |    ПО ТаблицаБаза.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаБаза.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаБаза.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |	ВТЕСВПоСотрудникамОборот КАК ТаблицаЕСВПоСотрудникамДо
	   |    ПО ТаблицаЕСВПоСотрудникамДо.ФизическоеЛицо = СтрокиРасчета.ФизическоеЛицо
	   |     И ТаблицаЕСВПоСотрудникамДо.ВидЕСВ = СтрокиРасчета.ВидЕСВ
	   |     И ТаблицаЕСВПоСотрудникамДо.НалоговыйПериод = СтрокиРасчета.НалоговыйПериод
	   |     И ТаблицаЕСВПоСотрудникамДо.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.ВзносыФОТ)
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ПараметрыКатегорийЕСВ.СрезПоследних(&ПериодРегистрации) КАК ПараметрыКатегорийЕСВ
	   |    ПО СтрокиРасчета.ВидЕСВ = ПараметрыКатегорийЕСВ.Вид
	   |     И СтрокиРасчета.КатегорияЕСВ = ПараметрыКатегорийЕСВ.Категория
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаВычет КАК ТаблицаБазаВычет
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаВычет.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаВычет.НалоговыйПериод
	   |     И ТаблицаБаза.ВидЕСВ = ТаблицаБазаВычет.ВидЕСВ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаПолная КАК ТаблицаБазаПолная
	   |    ПО ТаблицаБаза.ФизическоеЛицо = ТаблицаБазаПолная.ФизическоеЛицо
	   |     И ТаблицаБаза.НалоговыйПериод = ТаблицаБазаПолная.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),Организация = &Организация И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалоговПоОрганизации
	   |    ПО ШкалаСтавокНалоговПоОрганизации.Налог = ПараметрыКатегорийЕСВ.ЕСВФОТ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) И НомерПорога = ЗНАЧЕНИЕ(Перечисление.ПорогиШкалыСтавокНалогов.Порог1)) КАК ШкалаСтавокНалогов
	   |    ПО ШкалаСтавокНалогов.Налог = ПараметрыКатегорийЕСВ.ЕСВФОТ
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТПределыСтраховыхВзносовСрез КАК ПределыСтраховыхВзносов
	   |    ПО СтрокиРасчета.ВидЕСВ = ПределыСтраховыхВзносов.ВидЕСВ 
	   |     И СтрокиРасчета.НалоговыйПериод = ПределыСтраховыхВзносов.НалоговыйПериод
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.КоэффициентыСтавкиВзносовФОТ КАК КоэффициентыСтавкиВзносовФОТ
	   |    ПО КоэффициентыСтавкиВзносовФОТ.Организация = &Организация
	   |     И КоэффициентыСтавкиВзносовФОТ.МесяцНачисления = &ПериодРегистрации
	   |     И (СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ОсновнаяЗарплата)
	   |        ИЛИ СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.ПоДоговорамГПХ)
	   |        ИЛИ СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.Больничные)
	   |        ИЛИ СтрокиРасчета.ВидЕСВ = ЗНАЧЕНИЕ(Перечисление.ВидыЕСВ.Декретные))
	   |ГДЕ НЕ (ПараметрыКатегорийЕСВ.ЕСВФОТ ЕСТЬ NULL)
	   |
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТНачисленияОбороты
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТСтрокиРасчета
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТСтрокиРасчетаВзносы
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТСтрокиРасчетаВзносыФОТ
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТЕСВПоСотрудникамОборот
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТБазаСФильтром
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТБаза
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТБазаВычет
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТБазаПолная
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ ВТТекущиеКадровыеДанныеСотрудников
       |";
	   
	РезультатПакета = Запрос.ВыполнитьПакет();   
	   
	СтрокиКРасчету.Взносы = РезультатПакета[0].Выгрузить();
	СтрокиКРасчету.ВзносыФОТ = РезультатПакета[1].Выгрузить();
	
	Для Каждого СтрокаВзносов из СтрокиКРасчету.Взносы Цикл
		
		Коэф = 1; //*
		
		Предел = СтрокаВзносов.Предел;
		Ставка = СтрокаВзносов.Ставка;

		БазаДо = СтрокаВзносов.БазаДо;
		БазаВзносаДо = СтрокаВзносов.БазаВзносаДо;

		База = СтрокаВзносов.База;
		БазаВычет = СтрокаВзносов.БазаВычет;
		
		БазаВзноса = Мин(Макс(Предел-БазаВычет,0), База);
		
		База = (База - БазаДо) * Коэф;
		БазаВзноса = (БазаВзноса - БазаВзносаДо) * Коэф;
	
		Результат  = БазаВзноса * Ставка;
		Результат = Окр(Результат,2);
		
		СтрокаВзносов.База = База;
		СтрокаВзносов.БазаВзноса = БазаВзноса;
		СтрокаВзносов.Результат = Результат;
		
	КонецЦикла;
	
	Для Каждого СтрокаВзносовФОТ из СтрокиКРасчету.ВзносыФОТ Цикл
		
		Коэф = 1; //*
		
		Предел = СтрокаВзносовФОТ.Предел;
		Ставка = СтрокаВзносовФОТ.Ставка;
	    СтавкаПолная = СтрокаВзносовФОТ.СтавкаПолная;
		МинимальнаяБаза = СтрокаВзносовФОТ.МинимальнаяБаза;
		КоэффициентСтавки = СтрокаВзносовФОТ.КоэффициентСтавки;
		
		БазаДо = СтрокаВзносовФОТ.БазаДо;
		БазаВзносаДо = СтрокаВзносовФОТ.БазаВзносаДо;
		
		База = СтрокаВзносовФОТ.База;
		БазаВычет = СтрокаВзносовФОТ.БазаВычет;
		БазаПолная = СтрокаВзносовФОТ.БазаПолная;
		
		БазаВзноса = Мин(Макс(Предел-БазаВычет,0), База);
		
		БазаДоначисление = 0;
		РезультатДоначисление = 0;
		РезультатПолная = 0;
		
		Если МинимальнаяБаза <> 0 И База <> 0 И БазаВычет = 0 Тогда
			БазаДоначисление = Макс(МинимальнаяБаза - БазаПолная,0);
			БазаВзноса = БазаВзноса + БазаДоначисление;
		ИначеЕсли МинимальнаяБаза <> 0 И БазаДо <> 0 И БазаВзносаДо <> 0 И БазаВычет = 0 Тогда
			ДоначисленоРанее = Макс(БазаВзносаДо - БазаДо,0);
			БазаДоначисление = Макс(МинимальнаяБаза - БазаПолная,0) - ДоначисленоРанее;
			БазаВзноса = БазаДоначисление;
		КонецЕсли;
		
		База = (База - БазаДо) * Коэф;
		БазаВзноса = (БазаВзноса - БазаВзносаДо) * Коэф;
	
		Результат  = БазаВзноса * Ставка*?(КоэффициентСтавки = 0, 1, КоэффициентСтавки);
		РезультатДоначисление  = Окр(БазаДоначисление * Ставка * ?(КоэффициентСтавки = 0, 1, КоэффициентСтавки),2);
		
		Результат = Окр((БазаВзноса - БазаДоначисление) * Окр(Ставка * ?(КоэффициентСтавки = 0, 1, КоэффициентСтавки),5),2);
		РезультатДоначисление  = Окр(БазаДоначисление * Ставка,2);
		Результат = Результат + РезультатДоначисление;
		Если (СтавкаПолная > 0) И (СтавкаПолная <> Ставка) Тогда
			РезультатПолная = Окр(БазаВзноса * СтавкаПолная, 2);
		КонецЕсли;	
		СтрокаВзносовФОТ.База = База;
		СтрокаВзносовФОТ.БазаВзноса = БазаВзноса;
		СтрокаВзносовФОТ.Результат = Результат;
		
		СтрокаВзносовФОТ.БазаДоначисление = БазаДоначисление;
		СтрокаВзносовФОТ.РезультатДоначисление = РезультатДоначисление;
		СтрокаВзносовФОТ.РезультатПолная = РезультатПолная;
	КонецЦикла;
	
	
	//ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоГода(ПериодРегистрации), КонецМесяца(ПериодРегистрации));

	//УстановитьПривилегированныйРежим(Истина);
	//
	//Запрос.Текст =                                                    
	//"ВЫБРАТЬ
	//|	ТаблицаФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
	//|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	//|ИЗ
	//|	ВТФизическиеЛица КАК ТаблицаФизЛиц
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	ФизическоеЛицо";
	//Запрос.Выполнить();
	//
	//СформироватьВТРасширенныеСведенияОДоходахИВзносах(ПериодРегистрации, КонецМесяца(ПериодРегистрации), Организация, Запрос.МенеджерВременныхТаблиц, Истина, Ложь, Истина, Истина, Истина, Ложь, ИсключатьДоходыРегистратора, Ссылка, ДатаОкончанияРегистрацииДоходов);
	//
	//ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	//ПараметрыПостроения.ВсеЗаписи = Истина;
	//	
	//ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
	//	"ТарифыВзносовЗаЗанятыхНаРаботахСДосрочнойПенсией",
	//	Запрос.МенеджерВременныхТаблиц,
	//	Ложь,
	//	ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТПериоды"),
	//	ПараметрыПостроения);
	//
	//Запрос.Текст = 
	//   "ВЫБРАТЬ
	//   |	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо
	//   |ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
	//   |ИЗ
	//   |	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	//   |ГДЕ
	//   |	СведенияОДоходах.Регистратор <> &ИсключаемыйРегистратор
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	СведенияОДоходах.ФизическоеЛицо
	//   |
	//   |ИМЕЮЩИЕ
	//   |	СУММА(ВЫБОР
	//   |			КОГДА СведенияОДоходах.ВходитВБазуПФР
	//   |					ИЛИ СведенияОДоходах.ВходитВБазуФОМС
	//   |				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) < 0
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	ИсчисленныеСтраховыеВзносы.Период,
	//   |	ИсчисленныеСтраховыеВзносы.Регистратор,
	//   |	ИсчисленныеСтраховыеВзносы.ГоловнаяОрганизация,
	//   |	ИсчисленныеСтраховыеВзносы.ФизическоеЛицо,
	//   |	ИсчисленныеСтраховыеВзносы.Организация,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРПоСуммарномуТарифу,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРПоСуммарномуТарифуЕНВД,
	//   |	ИсчисленныеСтраховыеВзносы.ФСС,
	//   |	ИсчисленныеСтраховыеВзносы.ФССЕНВД,
	//   |	ИсчисленныеСтраховыеВзносы.ФССНесчастныеСлучаи,
	//   |	ИсчисленныеСтраховыеВзносы.ФФОМС,
	//   |	ИсчисленныеСтраховыеВзносы.ФФОМСЕНВД,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРНаДоплатуЛетчикам,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРНаДоплатуШахтерам,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
	//   |	ИсчисленныеСтраховыеВзносы.ДатаПолученияДохода,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРДоПредельнойВеличины,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРДоПредельнойВеличиныЕНВД,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРСПревышения,
	//   |	ИсчисленныеСтраховыеВзносы.ПФРСПревышенияЕНВД
	//   |ПОМЕСТИТЬ ВТДанныеУчетаВзносов
	//   |ИЗ
	//   |	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК ИсчисленныеСтраховыеВзносы
	//   |ГДЕ
	//   |	ИсчисленныеСтраховыеВзносы.ГоловнаяОрганизация = &ГоловнаяОрганизация
	//   |	И ИсчисленныеСтраховыеВзносы.Период МЕЖДУ &НачалоПредыдущегоГода И &КонецМесяца
	//   |	И ИсчисленныеСтраховыеВзносы.ДатаПолученияДохода МЕЖДУ &НачалоГода И &КонецМесяца
	//   |	И НЕ ИсчисленныеСтраховыеВзносы.ФизическоеЛицо В
	//   |				(ВЫБРАТЬ
	//   |					СписокСотрудников.ФизическоеЛицо
	//   |				ИЗ
	//   |					ВТФизлицаБезОблагаемойБазы КАК СписокСотрудников)
	//   |	И ИсчисленныеСтраховыеВзносы.ФизическоеЛицо В
	//   |			(ВЫБРАТЬ
	//   |				СписокСотрудников.ФизическоеЛицо
	//   |			ИЗ
	//   |				ВТФизическиеЛица КАК СписокСотрудников)
	//   |	И ИсчисленныеСтраховыеВзносы.Регистратор <> &Регистратор
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	РанееИсчисленныеВзносы.ФизическоеЛицо,
	//   |	РанееИсчисленныеВзносы.Период,
	//   |	СУММА(РанееИсчисленныеВзносы.ФССОборот) КАК ФССОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ФФОМСОборот) КАК ФФОМСОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРПоСуммарномуТарифуОборот) КАК ПФРПоСуммарномуТарифуОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРДоПредельнойВеличиныОборот) КАК ПФРДоПредельнойВеличиныОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРСПревышенияОборот) КАК ПФРСПревышенияОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ФССНесчастныеСлучаиОборот) КАК ФССНесчастныеСлучаиОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРНаДоплатуЛетчикамОборот) КАК ПФРНаДоплатуЛетчикамОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОборот) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОборот) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасныйОборот) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасныйОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасныйОборот) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасныйОборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1Оборот) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1Оборот) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2Оборот) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2Оборот) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3Оборот) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3Оборот) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4Оборот) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4Оборот) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4Оборот,
	//   |	СУММА(РанееИсчисленныеВзносы.ПФРНаДоплатуШахтерамОборот) КАК ПФРНаДоплатуШахтерамОборот
	//   |ПОМЕСТИТЬ ВТРанееИсчисленныеВзносы
	//   |ИЗ
	//   |	(ВЫБРАТЬ
	//   |		РанееИсчисленныеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |		НАЧАЛОПЕРИОДА(РанееИсчисленныеВзносы.ДатаПолученияДохода, МЕСЯЦ) КАК Период,
	//   |		РанееИсчисленныеВзносы.ФСС + РанееИсчисленныеВзносы.ФССЕНВД КАК ФССОборот,
	//   |		РанееИсчисленныеВзносы.ФФОМС + РанееИсчисленныеВзносы.ФФОМСЕНВД КАК ФФОМСОборот,
	//   |		РанееИсчисленныеВзносы.ПФРПоСуммарномуТарифу + РанееИсчисленныеВзносы.ПФРПоСуммарномуТарифуЕНВД КАК ПФРПоСуммарномуТарифуОборот,
	//   |		РанееИсчисленныеВзносы.ПФРДоПредельнойВеличины + РанееИсчисленныеВзносы.ПФРДоПредельнойВеличиныЕНВД КАК ПФРДоПредельнойВеличиныОборот,
	//   |		РанееИсчисленныеВзносы.ПФРСПревышения + РанееИсчисленныеВзносы.ПФРСПревышенияЕНВД КАК ПФРСПревышенияОборот,
	//   |		0 КАК ФССНесчастныеСлучаиОборот,
	//   |		ВЫБОР
	//   |			КОГДА РанееИсчисленныеВзносы.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |				ТОГДА 0
	//   |			ИНАЧЕ РанееИсчисленныеВзносы.ПФРНаДоплатуЛетчикам
	//   |		КОНЕЦ КАК ПФРНаДоплатуЛетчикамОборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасныйОборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасныйОборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4Оборот,
	//   |		РанееИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4Оборот,
	//   |		ВЫБОР
	//   |			КОГДА РанееИсчисленныеВзносы.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |				ТОГДА 0
	//   |			ИНАЧЕ РанееИсчисленныеВзносы.ПФРНаДоплатуШахтерам
	//   |		КОНЕЦ КАК ПФРНаДоплатуШахтерамОборот
	//   |	ИЗ
	//   |		ВТДанныеУчетаВзносов КАК РанееИсчисленныеВзносы
	//   |	
	//   |	ОБЪЕДИНИТЬ ВСЕ
	//   |	
	//   |	ВЫБРАТЬ
	//   |		РанееИсчисленныеВзносы.ФизическоеЛицо,
	//   |		&ПериодРегистрации,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		ВЫБОР
	//   |			КОГДА НАЧАЛОПЕРИОДА(РанееИсчисленныеВзносы.Период, МЕСЯЦ) = &ПериодРегистрации
	//   |					И РанееИсчисленныеВзносы.Организация = &Организация
	//   |				ТОГДА РанееИсчисленныеВзносы.ФССНесчастныеСлучаи
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ,
	//   |		ВЫБОР
	//   |			КОГДА РанееИсчисленныеВзносы.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |				ТОГДА РанееИсчисленныеВзносы.ПФРНаДоплатуЛетчикам
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		ВЫБОР
	//   |			КОГДА РанееИсчисленныеВзносы.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |				ТОГДА РанееИсчисленныеВзносы.ПФРНаДоплатуШахтерам
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ
	//   |	ИЗ
	//   |		ВТДанныеУчетаВзносов КАК РанееИсчисленныеВзносы) КАК РанееИсчисленныеВзносы
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	РанееИсчисленныеВзносы.ФизическоеЛицо,
	//   |	РанееИсчисленныеВзносы.Период
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	Основная.Организация КАК Организация,
	//   |	Основная.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	Основная.ФизическоеЛицоНаименование,
	//   |	Основная.ВидТарифаСтраховыхВзносов,
	//   |	Основная.Период,
	//   |	Основная.ПериодРегистрации,
	//   |	СУММА(Основная.БазаПФР) КАК БазаПФР,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ОблагаетсяВзносамиНаДоплатуЛетчикам
	//   |				ТОГДА Основная.БазаПФР
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаНаДоплатуЛетчикам,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ОблагаетсяВзносамиНаДоплатуШахтерам
	//   |				ТОГДА Основная.БазаПФР
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаНаДоплатуШахтерам,
	//   |	СУММА(Основная.БазаФОМС) КАК БазаФОМС,
	//   |	СУММА(Основная.СуммаПревысившаяПределПФР) КАК СуммаПревысившаяПределПФР,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ЗастрахованФСС
	//   |				ТОГДА Основная.СуммаПревысившаяПределФСС
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК СуммаПревысившаяПределФСС,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ЗастрахованФССкакИностранец
	//   |				ТОГДА Основная.СуммаПревысившаяПределФСС
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК СуммаПревысившаяПределФССсИностранцев,
	//   |	СУММА(Основная.СуммаПревысившаяПределФОМС) КАК СуммаПревысившаяПределФОМС,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ЗастрахованФСС
	//   |				ТОГДА Основная.БазаФСС
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФСС,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ЗастрахованФССкакИностранец
	//   |				ТОГДА Основная.БазаФСС
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФССсИностранцев,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ИспользоватьЛьготуИнвалидамПоФСС_НС
	//   |				ТОГДА Основная.БазаФСС_НС
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФСС_НСИнвалида,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ИспользоватьЛьготуИнвалидамПоФСС_НС
	//   |				ТОГДА 0
	//   |			ИНАЧЕ Основная.БазаФСС_НС
	//   |		КОНЕЦ) КАК БазаФСС_НСПоОсновномуТарифу,
	//   |	СУММА(Основная.БазаПодземныеИВредныеРаботы) КАК БазаПодземныеИВредныеРаботы,
	//   |	СУММА(Основная.БазаТяжелыеИПрочиеРаботы) КАК БазаТяжелыеИПрочиеРаботы,
	//   |	СУММА(Основная.БазаПодземныеИВредныеРаботыОпасный) КАК БазаПодземныеИВредныеРаботыОпасный,
	//   |	СУММА(Основная.БазаТяжелыеИПрочиеРаботыОпасный) КАК БазаТяжелыеИПрочиеРаботыОпасный,
	//   |	СУММА(Основная.БазаПодземныеИВредныеРаботыВредный1) КАК БазаПодземныеИВредныеРаботыВредный1,
	//   |	СУММА(Основная.БазаТяжелыеИПрочиеРаботыВредный1) КАК БазаТяжелыеИПрочиеРаботыВредный1,
	//   |	СУММА(Основная.БазаПодземныеИВредныеРаботыВредный2) КАК БазаПодземныеИВредныеРаботыВредный2,
	//   |	СУММА(Основная.БазаТяжелыеИПрочиеРаботыВредный2) КАК БазаТяжелыеИПрочиеРаботыВредный2,
	//   |	СУММА(Основная.БазаПодземныеИВредныеРаботыВредный3) КАК БазаПодземныеИВредныеРаботыВредный3,
	//   |	СУММА(Основная.БазаТяжелыеИПрочиеРаботыВредный3) КАК БазаТяжелыеИПрочиеРаботыВредный3,
	//   |	СУММА(Основная.БазаПодземныеИВредныеРаботыВредный4) КАК БазаПодземныеИВредныеРаботыВредный4,
	//   |	СУММА(Основная.БазаТяжелыеИПрочиеРаботыВредный4) КАК БазаТяжелыеИПрочиеРаботыВредный4
	//   |ПОМЕСТИТЬ ВТДоходыЗастрахованныхЛиц
	//   |ИЗ
	//   |	ВТРасширенныеСведенияОДоходах КАК Основная
	//   |ГДЕ
	//   |	Основная.Регистратор <> &ИсключаемыйРегистратор
	//   |	И НЕ Основная.ФизическоеЛицо В
	//   |				(ВЫБРАТЬ
	//   |					СписокСотрудников.ФизическоеЛицо
	//   |				ИЗ
	//   |					ВТФизлицаБезОблагаемойБазы КАК СписокСотрудников)
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	Основная.Организация,
	//   |	Основная.ФизическоеЛицо,
	//   |	Основная.Инвалид,
	//   |	Основная.ФизическоеЛицоНаименование,
	//   |	Основная.ВидТарифаСтраховыхВзносов,
	//   |	Основная.Период,
	//   |	Основная.ПериодРегистрации
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	Периоды.Период,
	//   |	ДоходыЗастрахованныхЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	ДоходыЗастрахованныхЛиц.ФизическоеЛицоНаименование,
	//   |	ДоходыЗастрахованныхЛиц.ВидТарифаСтраховыхВзносов,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПФР) КАК БазаПФР,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаНаДоплатуЛетчикам) КАК БазаНаДоплатуЛетчикам,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаНаДоплатуШахтерам) КАК БазаНаДоплатуШахтерам,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаФСС) КАК БазаФСС,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаФССсИностранцев) КАК БазаФССсИностранцев,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаФОМС) КАК БазаФОМС,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.СуммаПревысившаяПределПФР) КАК СуммаПревысившаяПределПФР,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.СуммаПревысившаяПределФСС) КАК СуммаПревысившаяПределФСС,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.СуммаПревысившаяПределФССсИностранцев) КАК СуммаПревысившаяПределФССсИностранцев,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.СуммаПревысившаяПределФОМС) КАК СуммаПревысившаяПределФОМС,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПодземныеИВредныеРаботы) КАК БазаПодземныеИВредныеРаботы,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаТяжелыеИПрочиеРаботы) КАК БазаТяжелыеИПрочиеРаботы,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПодземныеИВредныеРаботыОпасный) КАК БазаПодземныеИВредныеРаботыОпасный,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаТяжелыеИПрочиеРаботыОпасный) КАК БазаТяжелыеИПрочиеРаботыОпасный,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПодземныеИВредныеРаботыВредный1) КАК БазаПодземныеИВредныеРаботыВредный1,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаТяжелыеИПрочиеРаботыВредный1) КАК БазаТяжелыеИПрочиеРаботыВредный1,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПодземныеИВредныеРаботыВредный2) КАК БазаПодземныеИВредныеРаботыВредный2,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаТяжелыеИПрочиеРаботыВредный2) КАК БазаТяжелыеИПрочиеРаботыВредный2,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПодземныеИВредныеРаботыВредный3) КАК БазаПодземныеИВредныеРаботыВредный3,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаТяжелыеИПрочиеРаботыВредный3) КАК БазаТяжелыеИПрочиеРаботыВредный3,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаПодземныеИВредныеРаботыВредный4) КАК БазаПодземныеИВредныеРаботыВредный4,
	//   |	СУММА(ДоходыЗастрахованныхЛиц.БазаТяжелыеИПрочиеРаботыВредный4) КАК БазаТяжелыеИПрочиеРаботыВредный4
	//   |ПОМЕСТИТЬ ВТНакопленнаяОблагаемаяБаза
	//   |ИЗ
	//   |	ВТПериоды КАК Периоды
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗастрахованныхЛиц КАК ДоходыЗастрахованныхЛиц
	//   |		ПО Периоды.Период >= ДоходыЗастрахованныхЛиц.Период
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	Периоды.Период,
	//   |	ДоходыЗастрахованныхЛиц.ФизическоеЛицо,
	//   |	ДоходыЗастрахованныхЛиц.ФизическоеЛицоНаименование,
	//   |	ДоходыЗастрахованныхЛиц.ВидТарифаСтраховыхВзносов
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	НеОграниченнаяОблагаемаяБаза.Период,
	//   |	НеОграниченнаяОблагаемаяБаза.ФизическоеЛицо,
	//   |	НеОграниченнаяОблагаемаяБаза.ФизическоеЛицоНаименование,
	//   |	СУММА(ВЫРАЗИТЬ(ВЫБОР
	//   |				КОГДА НеОграниченнаяОблагаемаяБаза.Период < &ДатаВыделенияВзносовНаОПСсСуммПревышения
	//   |					ТОГДА 0
	//   |				ИНАЧЕ НеОграниченнаяОблагаемаяБаза.БазаПФР - ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределПФР, 0)
	//   |			КОНЕЦ * ОсновнойТариф.ПФР / 100 КАК ЧИСЛО(15, 2))) КАК РезультатПФРДоПредельнойВеличины,
	//   |	СУММА(ВЫРАЗИТЬ(ВЫБОР
	//   |				КОГДА НеОграниченнаяОблагаемаяБаза.Период < &ДатаВыделенияВзносовНаОПСсСуммПревышения
	//   |					ТОГДА 0
	//   |				КОГДА ОписаниеТарифов.НачислятьВзносыСПревышения
	//   |					ТОГДА ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределПФР, 0)
	//   |				ИНАЧЕ 0
	//   |			КОНЕЦ * 0.1 КАК ЧИСЛО(15, 2))) КАК РезультатПФРСПревышения,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА НеОграниченнаяОблагаемаяБаза.Период < &ДатаВыделенияВзносовНаОПСсСуммПревышения
	//   |				ТОГДА (ВЫРАЗИТЬ((НеОграниченнаяОблагаемаяБаза.БазаПФР - ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределПФР, 0)) * ОсновнойТариф.ПФР / 100 КАК ЧИСЛО(15, 2))) + (ВЫРАЗИТЬ(ВЫБОР
	//   |							КОГДА ОписаниеТарифов.НачислятьВзносыСПревышения
	//   |								ТОГДА ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределПФР, 0) * 0.1
	//   |							ИНАЧЕ 0
	//   |						КОНЕЦ КАК ЧИСЛО(15, 2)))
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК РезультатПФРПоСуммарномуТарифу,
	//   |	СУММА(ВЫРАЗИТЬ(НеОграниченнаяОблагаемаяБаза.БазаНаДоплатуЛетчикам * 0.14 КАК ЧИСЛО(15, 2))) КАК РезультатНаДоплатуЛетчикам,
	//   |	СУММА(ВЫРАЗИТЬ(НеОграниченнаяОблагаемаяБаза.БазаНаДоплатуШахтерам * 0.067 КАК ЧИСЛО(15, 2))) КАК РезультатНаДоплатуШахтерам,
	//   |	СУММА((ВЫРАЗИТЬ((НеОграниченнаяОблагаемаяБаза.БазаФСС - ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределФСС, 0)) * ОсновнойТариф.ФСС / 100 КАК ЧИСЛО(15, 2))) + (ВЫРАЗИТЬ((НеОграниченнаяОблагаемаяБаза.БазаФССсИностранцев - ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределФССсИностранцев, 0)) * ОсновнойТариф.ФССсИностранцев / 100 КАК ЧИСЛО(15, 2)))) КАК РезультатФСС,
	//   |	СУММА(ВЫРАЗИТЬ((НеОграниченнаяОблагаемаяБаза.БазаФОМС - ЕСТЬNULL(НеОграниченнаяОблагаемаяБаза.СуммаПревысившаяПределФОМС, 0)) * ОсновнойТариф.ФФОМС / 100 КАК ЧИСЛО(15, 2))) КАК РезультатФФОМС
	//   |ПОМЕСТИТЬ ВТИсчисленоПоОсновномуТарифуНарастающимИтогом
	//   |ИЗ
	//   |	ВТНакопленнаяОблагаемаяБаза КАК НеОграниченнаяОблагаемаяБаза
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыТарифныхСтавок КАК ОсновнойТариф
	//   |		ПО НеОграниченнаяОблагаемаяБаза.ВидТарифаСтраховыхВзносов = ОсновнойТариф.ВидТарифа
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТОписаниеТарифов КАК ОписаниеТарифов
	//   |		ПО НеОграниченнаяОблагаемаяБаза.ВидТарифаСтраховыхВзносов = ОписаниеТарифов.ВидТарифа
	//   |			И (ОписаниеТарифов.РасчетныйПериод = &ГодРасчета)
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	НеОграниченнаяОблагаемаяБаза.Период,
	//   |	НеОграниченнаяОблагаемаяБаза.ФизическоеЛицо,
	//   |	НеОграниченнаяОблагаемаяБаза.ФизическоеЛицоНаименование
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	ВзносыПоТекущийМесяц.Период,
	//   |	ВзносыПоТекущийМесяц.ФизическоеЛицо,
	//   |	ВзносыПоТекущийМесяц.ФизическоеЛицоНаименование,
	//   |	ВзносыПоТекущийМесяц.РезультатПФРДоПредельнойВеличины - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатПФРДоПредельнойВеличины, 0) КАК РезультатПФРДоПредельнойВеличины,
	//   |	ВзносыПоТекущийМесяц.РезультатПФРСПревышения - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатПФРСПревышения, 0) КАК РезультатПФРСПревышения,
	//   |	ВзносыПоТекущийМесяц.РезультатПФРПоСуммарномуТарифу - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатПФРПоСуммарномуТарифу, 0) КАК РезультатПФРПоСуммарномуТарифу,
	//   |	ВзносыПоТекущийМесяц.РезультатФСС - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатФСС, 0) КАК РезультатФСС,
	//   |	ВзносыПоТекущийМесяц.РезультатФФОМС - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатФФОМС, 0) КАК РезультатФФОМС,
	//   |	ВзносыПоТекущийМесяц.РезультатНаДоплатуЛетчикам - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатНаДоплатуЛетчикам, 0) КАК РезультатНаДоплатуЛетчикам,
	//   |	ВзносыПоТекущийМесяц.РезультатНаДоплатуШахтерам - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатНаДоплатуШахтерам, 0) КАК РезультатНаДоплатуШахтерам
	//   |ПОМЕСТИТЬ ВТИсчисленоПоОсновномуТарифу
	//   |ИЗ
	//   |	ВТИсчисленоПоОсновномуТарифуНарастающимИтогом КАК ВзносыПоТекущийМесяц
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленоПоОсновномуТарифуНарастающимИтогом КАК ВзносыПоПрошлыйМесяц
	//   |		ПО ВзносыПоТекущийМесяц.ФизическоеЛицо = ВзносыПоПрошлыйМесяц.ФизическоеЛицо
	//   |			И (ВзносыПоТекущийМесяц.Период = ДОБАВИТЬКДАТЕ(ВзносыПоПрошлыйМесяц.Период, МЕСЯЦ, 1))
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	&ПериодРегистрации КАК Период,
	//   |	ВЫРАЗИТЬ(СУММА(ВЫБОР
	//   |				КОГДА ГОД(ДоходыФизлиц.Период) < 2016
	//   |					ТОГДА ВЫБОР
	//   |							КОГДА ДоходыФизлиц.ВходитВБазуПФР
	//   |								ТОГДА ДоходыФизлиц.Сумма - ДоходыФизлиц.Скидка
	//   |							ИНАЧЕ 0
	//   |						КОНЕЦ
	//   |				ИНАЧЕ ДоходыФизлиц.БазаПФР
	//   |			КОНЕЦ) * 0.14 КАК ЧИСЛО(15, 2)) КАК РезультатПоДополнительномуТарифу,
	//   |	ДоходыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	ДоходыФизлиц.ФизическоеЛицоНаименование
	//   |ПОМЕСТИТЬ ВТВзносыДляЛетчиков
	//   |ИЗ
	//   |	ВТРасширенныеСведенияОДоходах КАК ДоходыФизлиц
	//   |ГДЕ
	//   |	ДоходыФизлиц.Регистратор <> &ИсключаемыйРегистратор
	//   |	И ДоходыФизлиц.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |	И ДоходыФизлиц.ОблагаетсяВзносамиНаДоплатуЛетчикам
	//   |	И НЕ ДоходыФизлиц.ФизическоеЛицо В
	//   |				(ВЫБРАТЬ
	//   |					СписокСотрудников.ФизическоеЛицо
	//   |				ИЗ
	//   |					ВТФизлицаБезОблагаемойБазы КАК СписокСотрудников)
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	ДоходыФизлиц.ФизическоеЛицо,
	//   |	ДоходыФизлиц.ФизическоеЛицоНаименование
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	&ПериодРегистрации КАК Период,
	//   |	ВЫРАЗИТЬ(СУММА(ВЫБОР
	//   |				КОГДА ГОД(ДоходыФизлиц.Период) < 2016
	//   |					ТОГДА ВЫБОР
	//   |							КОГДА ДоходыФизлиц.ВходитВБазуПФР
	//   |								ТОГДА ДоходыФизлиц.Сумма - ДоходыФизлиц.Скидка
	//   |							ИНАЧЕ 0
	//   |						КОНЕЦ
	//   |				ИНАЧЕ ДоходыФизлиц.БазаПФР
	//   |			КОНЕЦ) * 0.067 КАК ЧИСЛО(15, 2)) КАК РезультатПоДополнительномуТарифу,
	//   |	ДоходыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	ДоходыФизлиц.ФизическоеЛицоНаименование
	//   |ПОМЕСТИТЬ ВТВзносыДляШахтеров
	//   |ИЗ
	//   |	ВТРасширенныеСведенияОДоходах КАК ДоходыФизлиц
	//   |ГДЕ
	//   |	ДоходыФизлиц.Регистратор <> &ИсключаемыйРегистратор
	//   |	И ДоходыФизлиц.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |	И ДоходыФизлиц.ОблагаетсяВзносамиНаДоплатуШахтерам
	//   |	И ДоходыФизлиц.ВходитВБазуПФР
	//   |	И НЕ ДоходыФизлиц.ФизическоеЛицо В
	//   |				(ВЫБРАТЬ
	//   |					СписокСотрудников.ФизическоеЛицо
	//   |				ИЗ
	//   |					ВТФизлицаБезОблагаемойБазы КАК СписокСотрудников)
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	ДоходыФизлиц.ФизическоеЛицо,
	//   |	ДоходыФизлиц.ФизическоеЛицоНаименование
	//   |
	//   |ИНДЕКСИРОВАТЬ ПО
	//   |	ФизическоеЛицо
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	ДоходыФизлиц.Период,
	//   |	ДоходыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	ДоходыФизлиц.ФизическоеЛицоНаименование,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаПодземныеИВредныеРаботы) * ЕСТЬNULL(ТарифыВзносов.ЗаЗанятыхНаПодземныхИВредныхРаботах, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаТяжелыеИПрочиеРаботы) * ЕСТЬNULL(ТарифыВзносов.ЗаЗанятыхНаТяжелыхИПрочихРаботах, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаПодземныеИВредныеРаботыОпасный) * ЕСТЬNULL(ТарифОпасный.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаТяжелыеИПрочиеРаботыОпасный) * ЕСТЬNULL(ТарифОпасный.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаПодземныеИВредныеРаботыВредный1) * ЕСТЬNULL(ТарифВредный1.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаТяжелыеИПрочиеРаботыВредный1) * ЕСТЬNULL(ТарифВредный1.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаПодземныеИВредныеРаботыВредный2) * ЕСТЬNULL(ТарифВредный2.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаТяжелыеИПрочиеРаботыВредный2) * ЕСТЬNULL(ТарифВредный2.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаПодземныеИВредныеРаботыВредный3) * ЕСТЬNULL(ТарифВредный3.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаТяжелыеИПрочиеРаботыВредный3) * ЕСТЬNULL(ТарифВредный3.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаПодземныеИВредныеРаботыВредный4) * ЕСТЬNULL(ТарифВредный4.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |	ВЫРАЗИТЬ(СУММА(ДоходыФизлиц.БазаТяжелыеИПрочиеРаботыВредный4) * ЕСТЬNULL(ТарифВредный4.Тариф, 0) / 100 КАК ЧИСЛО(15, 2)) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4
	//   |ПОМЕСТИТЬ ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботахНарастающимИтогом
	//   |ИЗ
	//   |	ВТНакопленнаяОблагаемаяБаза КАК ДоходыФизлиц
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыВзносовЗаЗанятыхНаРаботахСДосрочнойПенсиейСрезПоследних КАК ТарифыВзносов
	//   |		ПО ДоходыФизлиц.Период = ТарифыВзносов.Период
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда КАК ТарифОпасный
	//   |		ПО (ТарифОпасный.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Опасный))
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда КАК ТарифВредный1
	//   |		ПО (ТарифВредный1.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный1))
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда КАК ТарифВредный2
	//   |		ПО (ТарифВредный2.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный2))
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда КАК ТарифВредный3
	//   |		ПО (ТарифВредный3.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный3))
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыВзносовПоРезультатамСпециальнойОценкиУсловийТруда КАК ТарифВредный4
	//   |		ПО (ТарифВредный4.КлассУсловийТруда = ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.Вредный4))
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	ТарифОпасный.Тариф,
	//   |	ТарифВредный1.Тариф,
	//   |	ТарифВредный2.Тариф,
	//   |	ТарифВредный3.Тариф,
	//   |	ТарифВредный4.Тариф,
	//   |	ТарифыВзносов.ЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	ТарифыВзносов.ЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |	ДоходыФизлиц.ФизическоеЛицо,
	//   |	ДоходыФизлиц.ФизическоеЛицоНаименование,
	//   |	ДоходыФизлиц.Период
	//   |
	//   |ИНДЕКСИРОВАТЬ ПО
	//   |	ФизическоеЛицо
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	ВзносыПоТекущийМесяц.Период,
	//   |	ВзносыПоТекущийМесяц.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	ВзносыПоТекущийМесяц.ФизическоеЛицоНаименование,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный, 0) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный, 0) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1, 0) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1, 0) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2, 0) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2, 0) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3, 0) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3, 0) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4, 0) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4 - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4, 0) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботах - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаПодземныхИВредныхРаботах, 0) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	ВзносыПоТекущийМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах - ЕСТЬNULL(ВзносыПоПрошлыйМесяц.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах, 0) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах
	//   |ПОМЕСТИТЬ ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботах
	//   |ИЗ
	//   |	ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботахНарастающимИтогом КАК ВзносыПоТекущийМесяц
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботахНарастающимИтогом КАК ВзносыПоПрошлыйМесяц
	//   |		ПО (ВзносыПоТекущийМесяц.Период = ДОБАВИТЬКДАТЕ(ВзносыПоПрошлыйМесяц.Период, МЕСЯЦ, 1))
	//   |			И ВзносыПоТекущийМесяц.ФизическоеЛицо = ВзносыПоПрошлыйМесяц.ФизическоеЛицо
	//   |
	//   |ИНДЕКСИРОВАТЬ ПО
	//   |	ФизическоеЛицо
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	&ПериодРегистрации КАК Период,
	//   |	Начислено.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	Начислено.ФизическоеЛицоНаименование,
	//   |	(ВЫРАЗИТЬ(СУММА(Начислено.БазаФСС_НСПоОсновномуТарифу) * &СтавкаВзносаФСС_НС_ПЗ КАК ЧИСЛО(18, 5))) + (ВЫРАЗИТЬ(СУММА(Начислено.БазаФСС_НСИнвалида) * &СтавкаВзносаФСС_НС_ПЗ * 0.6 КАК ЧИСЛО(18, 5))) КАК Взносов
	//   |ПОМЕСТИТЬ ВТВзносыФССНесчастныеСлучаи
	//   |ИЗ
	//   |	ВТДоходыЗастрахованныхЛиц КАК Начислено
	//   |ГДЕ
	//   |	Начислено.ПериодРегистрации = &ПериодРегистрации
	//   |	И Начислено.Организация = &Организация
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	Начислено.ФизическоеЛицоНаименование,
	//   |	Начислено.ФизическоеЛицо
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	Начислено.Взносов - ЕСТЬNULL(РанееИсчисленныеВзносы.ФССНесчастныеСлучаиОборот, 0) КАК Взносов
	//   |ПОМЕСТИТЬ ВТВзносыФССНесчастныеСлучаиСводно
	//   |ИЗ
	//   |	(ВЫБРАТЬ
	//   |		(ВЫРАЗИТЬ(СУММА(Начислено.БазаФСС_НСПоОсновномуТарифу) * &СтавкаВзносаФСС_НС_ПЗ КАК ЧИСЛО(15, 2))) + (ВЫРАЗИТЬ(СУММА(Начислено.БазаФСС_НСИнвалида) * &СтавкаВзносаФСС_НС_ПЗ * 0.6 КАК ЧИСЛО(15, 2))) КАК Взносов
	//   |	ИЗ
	//   |		ВТДоходыЗастрахованныхЛиц КАК Начислено
	//   |	ГДЕ
	//   |		Начислено.ПериодРегистрации = &ПериодРегистрации
	//   |		И Начислено.Организация = &Организация) КАК Начислено
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//   |			СУММА(РанееИсчисленныеВзносы.ФССНесчастныеСлучаиОборот) КАК ФССНесчастныеСлучаиОборот
	//   |		ИЗ
	//   |			ВТРанееИсчисленныеВзносы КАК РанееИсчисленныеВзносы) КАК РанееИсчисленныеВзносы
	//   |		ПО (ИСТИНА)
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	ВсегоИсчислено.Период,
	//   |	ВсегоИсчислено.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	ВсегоИсчислено.Порядок,
	//   |	СУММА(ВсегоИсчислено.РезультатПФРПоСуммарномуТарифу) КАК РезультатПФРПоСуммарномуТарифу,
	//   |	СУММА(ВсегоИсчислено.РезультатПФРДоПредельнойВеличины) КАК РезультатПФРДоПредельнойВеличины,
	//   |	СУММА(ВсегоИсчислено.РезультатПФРСПревышения) КАК РезультатПФРСПревышения,
	//   |	СУММА(ВсегоИсчислено.РезультатФСС) КАК РезультатФСС,
	//   |	СУММА(ВсегоИсчислено.РезультатФФОМС) КАК РезультатФФОМС,
	//   |	СУММА(ВсегоИсчислено.РезультатФССНесчастныеСлучаи) КАК РезультатФССНесчастныеСлучаи,
	//   |	СУММА(ВсегоИсчислено.РезультатДляЛетчиков) КАК РезультатДляЛетчиков,
	//   |	СУММА(ВсегоИсчислено.РезультатДляШахтеров) КАК РезультатДляШахтеров,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаПодземныхИВредныхРаботах) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4) КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |	СУММА(ВсегоИсчислено.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4) КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4
	//   |ПОМЕСТИТЬ ВТИсчисленныеСуммыВзносов
	//   |ИЗ
	//   |	(ВЫБРАТЬ
	//   |		ИсчисленоПоОсновномуТарифу.Период КАК Период,
	//   |		ИсчисленоПоОсновномуТарифу.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |		ИсчисленоПоОсновномуТарифу.ФизическоеЛицоНаименование КАК Порядок,
	//   |		ИсчисленоПоОсновномуТарифу.РезультатПФРПоСуммарномуТарифу КАК РезультатПФРПоСуммарномуТарифу,
	//   |		ИсчисленоПоОсновномуТарифу.РезультатПФРДоПредельнойВеличины КАК РезультатПФРДоПредельнойВеличины,
	//   |		ИсчисленоПоОсновномуТарифу.РезультатПФРСПревышения КАК РезультатПФРСПревышения,
	//   |		ИсчисленоПоОсновномуТарифу.РезультатФСС КАК РезультатФСС,
	//   |		ИсчисленоПоОсновномуТарифу.РезультатФФОМС КАК РезультатФФОМС,
	//   |		0 КАК РезультатФССНесчастныеСлучаи,
	//   |		ВЫБОР
	//   |			КОГДА ИсчисленоПоОсновномуТарифу.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |				ТОГДА 0
	//   |			ИНАЧЕ ИсчисленоПоОсновномуТарифу.РезультатНаДоплатуЛетчикам
	//   |		КОНЕЦ КАК РезультатДляЛетчиков,
	//   |		ВЫБОР
	//   |			КОГДА ИсчисленоПоОсновномуТарифу.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |				ТОГДА 0
	//   |			ИНАЧЕ ИсчисленоПоОсновномуТарифу.РезультатНаДоплатуШахтерам
	//   |		КОНЕЦ КАК РезультатДляШахтеров,
	//   |		0 КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |		0 КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |		0 КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |		0 КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |		0 КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |		0 КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |		0 КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |		0 КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |		0 КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |		0 КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |		0 КАК РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |		0 КАК РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4
	//   |	ИЗ
	//   |		ВТИсчисленоПоОсновномуТарифу КАК ИсчисленоПоОсновномуТарифу
	//   |	
	//   |	ОБЪЕДИНИТЬ ВСЕ
	//   |	
	//   |	ВЫБРАТЬ
	//   |		ВзносыФССНесчастныеСлучаи.Период,
	//   |		ВзносыФССНесчастныеСлучаи.ФизическоеЛицо,
	//   |		ВзносыФССНесчастныеСлучаи.ФизическоеЛицоНаименование,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		ВзносыФССНесчастныеСлучаи.Взносов,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0
	//   |	ИЗ
	//   |		ВТВзносыФССНесчастныеСлучаи КАК ВзносыФССНесчастныеСлучаи
	//   |	
	//   |	ОБЪЕДИНИТЬ ВСЕ
	//   |	
	//   |	ВЫБРАТЬ
	//   |		ВзносыДляЛетчиков.Период,
	//   |		ВзносыДляЛетчиков.ФизическоеЛицо,
	//   |		ВзносыДляЛетчиков.ФизическоеЛицоНаименование,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		ВзносыДляЛетчиков.РезультатПоДополнительномуТарифу,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0
	//   |	ИЗ
	//   |		ВТВзносыДляЛетчиков КАК ВзносыДляЛетчиков
	//   |	ГДЕ
	//   |		ВзносыДляЛетчиков.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |	
	//   |	ОБЪЕДИНИТЬ ВСЕ
	//   |	
	//   |	ВЫБРАТЬ
	//   |		ВзносыДляШахтеров.Период,
	//   |		ВзносыДляШахтеров.ФизическоеЛицо,
	//   |		ВзносыДляШахтеров.ФизическоеЛицоНаименование,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		ВзносыДляШахтеров.РезультатПоДополнительномуТарифу,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0
	//   |	ИЗ
	//   |		ВТВзносыДляШахтеров КАК ВзносыДляШахтеров
	//   |	ГДЕ
	//   |		ВзносыДляШахтеров.Период < &ДатаРегистрацииПерерасчетовПоВзносамНаДоплатыКПенсиям
	//   |	
	//   |	ОБЪЕДИНИТЬ ВСЕ
	//   |	
	//   |	ВЫБРАТЬ
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.Период,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.ФизическоеЛицо,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.ФизическоеЛицоНаименование,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		0,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |		ЗаЗанятыхНаПодземныхИВредныхРаботах.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4
	//   |	ИЗ
	//   |		ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботах КАК ЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ВсегоИсчислено
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	ВсегоИсчислено.ФизическоеЛицо,
	//   |	ВсегоИсчислено.Порядок,
	//   |	ВсегоИсчислено.Период
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	СуммыНарастающимИтогом.Период,
	//   |	СуммыНарастающимИтогом.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	СуммыНарастающимИтогом.Порядок КАК Порядок,
	//   |	СуммыНарастающимИтогом.РезультатФСС - ЕСТЬNULL(ИсчисленныеВзносы.ФССОборот, 0) КАК ФСС,
	//   |	СуммыНарастающимИтогом.РезультатФФОМС - ЕСТЬNULL(ИсчисленныеВзносы.ФФОМСОборот, 0) КАК ФФОМС,
	//   |	СуммыНарастающимИтогом.РезультатПФРПоСуммарномуТарифу - ЕСТЬNULL(ИсчисленныеВзносы.ПФРПоСуммарномуТарифуОборот, 0) КАК ПФРПоСуммарномуТарифу,
	//   |	СуммыНарастающимИтогом.РезультатПФРДоПредельнойВеличины - ЕСТЬNULL(ИсчисленныеВзносы.ПФРДоПредельнойВеличиныОборот, 0) КАК ПФРДоПредельнойВеличины,
	//   |	СуммыНарастающимИтогом.РезультатПФРСПревышения - ЕСТЬNULL(ИсчисленныеВзносы.ПФРСПревышенияОборот, 0) КАК ПФРСПревышения,
	//   |	СуммыНарастающимИтогом.РезультатФССНесчастныеСлучаи - ЕСТЬNULL(ИсчисленныеВзносы.ФССНесчастныеСлучаиОборот, 0) КАК ФССНесчастныеСлучаи,
	//   |	СуммыНарастающимИтогом.РезультатДляЛетчиков - ЕСТЬNULL(ИсчисленныеВзносы.ПФРНаДоплатуЛетчикамОборот, 0) КАК ПФРНаДоплатуЛетчикам,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаПодземныхИВредныхРаботах - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОборот, 0) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботах - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОборот, 0) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахОпасный - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасныйОборот, 0) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасныйОборот, 0) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1Оборот, 0) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1Оборот, 0) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2Оборот, 0) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2Оборот, 0) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3Оборот, 0) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3Оборот, 0) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаПодземныхИВредныхРаботахВредный4 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4Оборот, 0) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |	СуммыНарастающимИтогом.РезультатЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4 - ЕСТЬNULL(ИсчисленныеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4Оборот, 0) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
	//   |	СуммыНарастающимИтогом.РезультатДляШахтеров - ЕСТЬNULL(ИсчисленныеВзносы.ПФРНаДоплатуШахтерамОборот, 0) КАК ПФРНаДоплатуШахтерам
	//   |ПОМЕСТИТЬ ВТВзносыЗаМесяц
	//   |ИЗ
	//   |	ВТИсчисленныеСуммыВзносов КАК СуммыНарастающимИтогом
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТРанееИсчисленныеВзносы КАК ИсчисленныеВзносы
	//   |		ПО СуммыНарастающимИтогом.ФизическоеЛицо = ИсчисленныеВзносы.ФизическоеЛицо
	//   |			И СуммыНарастающимИтогом.Период = ИсчисленныеВзносы.Период
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	Основная.Период,
	//   |	Основная.ФизическоеЛицо КАК ФизическоеЛицо,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА НЕ Основная.ОблагаетсяЕНВД
	//   |					И Основная.ВходитВБазуПФР
	//   |				ТОГДА Основная.Сумма - Основная.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаПФР,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА НЕ Основная.ОблагаетсяЕНВД
	//   |					И Основная.ВходитВБазуФСС
	//   |				ТОГДА Основная.Сумма - Основная.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФСС,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА НЕ Основная.ОблагаетсяЕНВД
	//   |					И Основная.ВходитВБазуФОМС
	//   |				ТОГДА Основная.Сумма - Основная.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФОМС,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ОблагаетсяЕНВД
	//   |					И Основная.ВходитВБазуПФР
	//   |				ТОГДА Основная.Сумма - Основная.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаПФРЕНВД,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ОблагаетсяЕНВД
	//   |					И Основная.ВходитВБазуФСС
	//   |				ТОГДА Основная.Сумма - Основная.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФССЕНВД,
	//   |	СУММА(ВЫБОР
	//   |			КОГДА Основная.ОблагаетсяЕНВД
	//   |					И Основная.ВходитВБазуФОМС
	//   |				ТОГДА Основная.Сумма - Основная.Скидка
	//   |			ИНАЧЕ 0
	//   |		КОНЕЦ) КАК БазаФОМСЕНВД
	//   |ПОМЕСТИТЬ ВТРаспределениеДоходовПоЕНВД
	//   |ИЗ
	//   |	ВТРасширенныеСведенияОДоходах КАК Основная
	//   |ГДЕ
	//   |	Основная.Регистратор <> &ИсключаемыйРегистратор
	//   |	И НЕ Основная.ФизическоеЛицо В
	//   |				(ВЫБРАТЬ
	//   |					СписокСотрудников.ФизическоеЛицо
	//   |				ИЗ
	//   |					ВТФизлицаБезОблагаемойБазы КАК СписокСотрудников)
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	Основная.ФизическоеЛицо,
	//   |	Основная.Период
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	ВЫБОР
	//   |		КОГДА СУММА(ВЫБОР
	//   |						КОГДА СведенияОДоходах.ОблагаетсяЕНВД
	//   |							ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
	//   |						ИНАЧЕ 0
	//   |					КОНЕЦ) > 0
	//   |				И СУММА(ВЫБОР
	//   |						КОГДА НЕ СведенияОДоходах.ОблагаетсяЕНВД
	//   |							ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
	//   |						ИНАЧЕ 0
	//   |					КОНЕЦ) = 0
	//   |			ТОГДА ИСТИНА
	//   |		ИНАЧЕ ЛОЖЬ
	//   |	КОНЕЦ КАК ТолькоЕНВД,
	//   |	СведенияОДоходах.ФизическоеЛицо,
	//   |	СведенияОДоходах.Период
	//   |ПОМЕСТИТЬ ВТВидыДеятельностиПоФизическимЛицам
	//   |ИЗ
	//   |	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
	//   |ГДЕ
	//   |	СведенияОДоходах.Регистратор <> &ИсключаемыйРегистратор
	//   |
	//   |СГРУППИРОВАТЬ ПО
	//   |	СведенияОДоходах.ФизическоеЛицо,
	//   |	СведенияОДоходах.Период
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТФизЛицаОрганизаций
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТФизлицаБезОблагаемойБазы
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТРанееИсчисленныеВзносы
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТДоходыЗастрахованныхЛиц
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТНакопленнаяОблагаемаяБаза
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТИсчисленоПоОсновномуТарифу
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТИсчисленоПоОсновномуТарифуНарастающимИтогом
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТТарифыВзносовЗаЗанятыхНаРаботахСДосрочнойПенсиейСрезПоследних
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТВзносыДляЛетчиков
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТВзносыДляШахтеров
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботах
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТЗаЗанятыхНаПодземныхВредныхИТяжелыхРаботахНарастающимИтогом
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТВзносыФССНесчастныеСлучаи
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТИсчисленныеСуммыВзносов
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |УНИЧТОЖИТЬ ВТДанныеУчетаВзносов
	//   |;
	//   |
	//   |////////////////////////////////////////////////////////////////////////////////
	//   |ВЫБРАТЬ
	//   |	Взносы.ФизическоеЛицо,
	//   |	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Взносы.Период, МЕСЯЦ), ДЕНЬ) КАК ДатаПолученияДохода,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМС + РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) = 0
	//   |				И НЕ ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ФФОМС
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМС + РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ Взносы.ФФОМС - (ВЫРАЗИТЬ(Взносы.ФФОМС * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМС + РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) КАК ЧИСЛО(15, 2)))
	//   |	КОНЕЦ КАК ФФОМС,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМС + РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) = 0
	//   |				И ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ФФОМС
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМС + РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ ВЫРАЗИТЬ(Взносы.ФФОМС * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФОМС + РаспределениеДоходовПоЕНВД.БазаФОМСЕНВД, 0) КАК ЧИСЛО(15, 2))
	//   |	КОНЕЦ КАК ФФОМСЕНВД,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФСС + РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) = 0
	//   |				И НЕ ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ФСС
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФСС + РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ Взносы.ФСС - (ВЫРАЗИТЬ(Взносы.ФСС * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФСС + РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) КАК ЧИСЛО(15, 2)))
	//   |	КОНЕЦ КАК ФСС,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФСС + РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) = 0
	//   |				И ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ФСС
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФСС + РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ ВЫРАЗИТЬ(Взносы.ФСС * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаФСС + РаспределениеДоходовПоЕНВД.БазаФССЕНВД, 0) КАК ЧИСЛО(15, 2))
	//   |	КОНЕЦ КАК ФССЕНВД,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |				И НЕ ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ПФРПоСуммарномуТарифу
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ Взносы.ПФРПоСуммарномуТарифу - (ВЫРАЗИТЬ(Взносы.ПФРПоСуммарномуТарифу * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) КАК ЧИСЛО(15, 2)))
	//   |	КОНЕЦ КАК ПФРПоСуммарномуТарифу,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |				И ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ПФРПоСуммарномуТарифу
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ ВЫРАЗИТЬ(Взносы.ПФРПоСуммарномуТарифу * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) КАК ЧИСЛО(15, 2))
	//   |	КОНЕЦ КАК ПФРПоСуммарномуТарифуЕНВД,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |				И НЕ ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ПФРДоПредельнойВеличины
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ Взносы.ПФРДоПредельнойВеличины - (ВЫРАЗИТЬ(Взносы.ПФРДоПредельнойВеличины * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) КАК ЧИСЛО(15, 2)))
	//   |	КОНЕЦ КАК ПФРДоПредельнойВеличины,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |				И ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ПФРДоПредельнойВеличины
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ ВЫРАЗИТЬ(Взносы.ПФРДоПредельнойВеличины * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) КАК ЧИСЛО(15, 2))
	//   |	КОНЕЦ КАК ПФРДоПредельнойВеличиныЕНВД,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |				И НЕ ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ПФРСПревышения
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ Взносы.ПФРСПревышения - (ВЫРАЗИТЬ(Взносы.ПФРСПревышения * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) КАК ЧИСЛО(15, 2)))
	//   |	КОНЕЦ КАК ПФРСПревышения,
	//   |	ВЫБОР
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |				И ВидыДеятельности.ТолькоЕНВД
	//   |			ТОГДА Взносы.ПФРСПревышения
	//   |		КОГДА ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) = 0
	//   |			ТОГДА 0
	//   |		ИНАЧЕ ВЫРАЗИТЬ(Взносы.ПФРСПревышения * ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) / ЕСТЬNULL(РаспределениеДоходовПоЕНВД.БазаПФР + РаспределениеДоходовПоЕНВД.БазаПФРЕНВД, 0) КАК ЧИСЛО(15, 2))
	//   |	КОНЕЦ КАК ПФРСПревышенияЕНВД,
	//   |	Взносы.ПФРНаДоплатуЛетчикам,
	//   |	Взносы.ФССНесчастныеСлучаи,
	//   |	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	//   |	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	//   |	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный,
	//   |	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный,
	//   |	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1,
	//   |	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1,
	//   |	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2,
	//   |	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2,
	//   |	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3,
	//   |	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3,
	//   |	Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4,
	//   |	Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4,
	//   |	Взносы.ПФРНаДоплатуШахтерам
	//   |ИЗ
	//   |	ВТВзносыЗаМесяц КАК Взносы
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределениеДоходовПоЕНВД КАК РаспределениеДоходовПоЕНВД
	//   |		ПО Взносы.ФизическоеЛицо = РаспределениеДоходовПоЕНВД.ФизическоеЛицо
	//   |			И Взносы.Период = РаспределениеДоходовПоЕНВД.Период
	//   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыДеятельностиПоФизическимЛицам КАК ВидыДеятельности
	//   |		ПО Взносы.ФизическоеЛицо = ВидыДеятельности.ФизическоеЛицо
	//   |			И Взносы.Период = ВидыДеятельности.Период
	//   |ГДЕ
	//   |	(Взносы.ФСС <> 0
	//   |			ИЛИ Взносы.ФФОМС <> 0
	//   |			ИЛИ Взносы.ПФРПоСуммарномуТарифу <> 0
	//   |			ИЛИ Взносы.ПФРСПревышения <> 0
	//   |			ИЛИ Взносы.ПФРДоПредельнойВеличины <> 0
	//   |			ИЛИ Взносы.ПФРНаДоплатуЛетчикам <> 0
	//   |			ИЛИ Взносы.ПФРНаДоплатуШахтерам <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасный <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасный <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4 <> 0
	//   |			ИЛИ Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4 <> 0
	//   |			ИЛИ Взносы.ФССНесчастныеСлучаи <> 0)
	//   |
	//   |УПОРЯДОЧИТЬ ПО
	//   |	Взносы.Порядок,
	//   |	ДатаПолученияДохода";
	//
	//ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
	//
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	Начислено.Взносов КАК ВзносовСводно
	//|ИЗ
	//|	ВТВзносыФССНесчастныеСлучаиСводно КАК Начислено";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ВзносовСводно) Тогда
	//	ЗарплатаКадры.ОкруглитьСлагаемыеПоСумме(ВременнаяТаблица,"ФССНесчастныеСлучаи", Выборка.ВзносовСводно, 2, "ФизическоеЛицо, ДатаПолученияДохода");
	//Иначе 	
	//	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
	//		СтрокаТЗ.ФССНесчастныеСлучаи = 0
	//	КонецЦикла;
	//КонецЕсли;
	//
	//Если ВременнаяТаблица.Количество() > 0 Тогда
	//	
	//	Колонки = ВременнаяТаблица.Колонки;
	//	Ресурсы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносовКлиентСервер.РассчитываемыеВзносы());
	//	ВГраницаДляРесурсов = Ресурсы.ВГраница();
	//	Для Индекс = 0 По ВГраницаДляРесурсов Цикл
	//		ИндексЭлемента = ВГраницаДляРесурсов - Индекс;
	//		Если Колонки.Найти(Ресурсы[ИндексЭлемента]) = Неопределено Тогда
	//			Ресурсы.Удалить(ИндексЭлемента); 
	//		КонецЕсли;
	//	КонецЦикла; 
	//	
	//	ТаблицаРезультатов = ВременнаяТаблица.СкопироватьКолонки();
	//	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
	//		ЕстьДанныеВСтроке = Ложь;
	//		Для каждого ИмяРесурса Из Ресурсы Цикл
	//			Если СтрокаТЗ[ИмяРесурса] <> 0 Тогда
	//				ЕстьДанныеВСтроке = Истина;
	//				Прервать;
	//			КонецЕсли;
	//		КонецЦикла;
	//		Если ЕстьДанныеВСтроке Тогда
	//			ЗаполнитьЗначенияСвойств(ТаблицаРезультатов.Добавить(),СтрокаТЗ);
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//Иначе
	//	ТаблицаРезультатов = ВременнаяТаблица
	//КонецЕсли;
	
	Возврат СтрокиКРасчету;
	
КонецФункции

Функция СформироватьДоходыСтраховыхВзносов(Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);

	Запрос.Текст = 
	   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	СведенияОДоходахСтраховыеВзносы.Организация,
	   |	СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо,
	   |	СведенияОДоходахСтраховыеВзносы.ВидЕСВ,
	   |	СведенияОДоходахСтраховыеВзносы.НалоговыйПериод,
	   |	СведенияОДоходахСтраховыеВзносы.Сотрудник,
	   |	СведенияОДоходахСтраховыеВзносы.Начисление,
	   |	СведенияОДоходахСтраховыеВзносы.Подразделение,
	   |	СведенияОДоходахСтраховыеВзносы.ДатаНачала КАК ДатаНачалаНачисление,
	   |	СведенияОДоходахСтраховыеВзносы.Сумма КАК СуммаДоход
	   |
	   |ИЗ
	   |	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК  СведенияОДоходахСтраховыеВзносы
	   |ГДЕ
	   |	НАЧАЛОПЕРИОДА(СведенияОДоходахСтраховыеВзносы.Период, МЕСЯЦ) = &ПериодРегистрации
	   |	И СведенияОДоходахСтраховыеВзносы.Организация = &Организация
	   |	И СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо В 
	   |					(ВЫБРАТЬ
	   |						СтрокиРасчета.ФизическоеЛицо
	   |					ИЗ
	   |						ВТФизическиеЛица КАК СтрокиРасчета)
	   |";

	Возврат Запрос.Выполнить().Выгрузить();   
	
КонецФункции	

// Формирует движения по регистру СтраховыеВзносыПоФизическимЛицам.
//	Менеджер временных таблиц содержит таблицу ВТФизическиеЛица с полями
//		ФизическоеЛицо.
//
// Параметры:
//		Движения - коллекция движений регистратора.
//		Отказ - признак отказа от заполнения движений.
//		Организация
//		ПериодРегистрации
//      Ссылка
//		ВзносыИсчисленные  - ТаблицаЗначений - с колонкой ФизическоеЛицо.
//
Процедура СформироватьСтраховыеВзносыПоФизическимЛицам(Движения, Отказ, Организация, ПериодРегистрации, Ссылка, ВзносыИсчисленные) Экспорт
	
	МассивФизическихЛиц = ОбщегоНазначения.ВыгрузитьКолонку(ВзносыИсчисленные, "ФизическоеЛицо", Истина);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФизическиеЛица", МассивФизическихЛиц);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&ФизическиеЛица)";
	Запрос.Выполнить();
	
	Доходы = СформироватьДоходыСтраховыхВзносов(Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц);
	
	//Распределение таблицы взносов по таблице начислений
	ПоляРазрез = Новый Массив();
	ПоляРазрез.Добавить("Организация");
	ПоляРазрез.Добавить("Сотрудник");
	ПоляРазрез.Добавить("Подразделение");
	ПоляРазрез.Добавить("Начисление");
	ПоляРазрез.Добавить("ДатаНачалаНачисление");
	ПоляСвязи = Новый Структура();
	ПоляСвязи.Вставить("ФизическоеЛицо","ФизическоеЛицо");
	ПоляСвязи.Вставить("ВидЕСВ","ВидЕСВ");
	ПоляСвязи.Вставить("НалоговыйПериод","НалоговыйПериод");
	СтраховыеВзносыПоФизическимЛицам = ЗарплатаКадры.РаспределитьТаблицуПропорциональноТаблицеКоэффициентов(ВзносыИсчисленные, "Результат", Доходы, "СуммаДоход", ПоляРазрез, ПоляСвязи);

	ЗаписатьСтраховыеВзносыПоФизическимЛицам(Движения, Отказ, Организация, ПериодРегистрации, СтраховыеВзносыПоФизическимЛицам, Истина);
	
КонецПроцедуры

// Формирует Таблицу со структурой регистра СтраховыеВзносыПоФизическимЛицам.
// Менеджер временных таблиц содержит таблицы
//  ВТФизическиеЛица 
//  ВТРасширенныеСведенияОВзносах или таблица с именем, указанно м параметре ИмяВременнойТаблицы.
//
Функция СтраховыеВзносыПоФизическимЛицам(Организация, ПериодРегистрации, Ссылка, МенеджерВременныхТаблиц, ИмяВременнойТаблицы = Неопределено) Экспорт

	ИмяВременнойТаблицы = ?(ИмяВременнойТаблицы = Неопределено,"ВТРасширенныеСведенияОВзносах",ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МесяцНачисления", ПериодРегистрации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата"));
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыПоФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыПоФизическимЛицам.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносыПоФизическимЛицам.Подразделение КАК Подразделение,
	|	СтраховыеВзносыПоФизическимЛицам.Начисление КАК Начисление,
	|	СтраховыеВзносыПоФизическимЛицам.ДатаНачала КАК ДатаНачала,
	|	СтраховыеВзносыПоФизическимЛицам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРДоПредельнойВеличины) КАК ПФРДоПредельнойВеличины,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРСПревышения) КАК ПФРСПревышения,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ФСС) КАК ФСС,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ФФОМС) КАК ФФОМС,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ТФОМС) КАК ТФОМС,
	|	СУММА(СтраховыеВзносыПоФизическимЛицам.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА СтраховыеВзносыПоФизическимЛицам.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА СтраховыеВзносыПоФизическимЛицам.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА СтраховыеВзносыПоФизическимЛицам.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете
	|ПОМЕСТИТЬ ВТЗарегистрированныеСтраховыеВзносы
	|ИЗ
	|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносыПоФизическимЛицам
	|ГДЕ
	|	СтраховыеВзносыПоФизическимЛицам.Организация = &Организация
	|	И СтраховыеВзносыПоФизическимЛицам.Период = &МесяцНачисления
	|	И СтраховыеВзносыПоФизическимЛицам.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ВТФизическиеЛица.ФизическоеЛицо
	|			ИЗ
	|				ВТФизическиеЛица)
	|	И СтраховыеВзносыПоФизическимЛицам.Регистратор <> &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыПоФизическимЛицам.ФизическоеЛицо,
	|	СтраховыеВзносыПоФизическимЛицам.Сотрудник,
	|	СтраховыеВзносыПоФизическимЛицам.Подразделение,
	|	СтраховыеВзносыПоФизическимЛицам.Начисление,
	|	СтраховыеВзносыПоФизическимЛицам.ДатаНачала,
	|	СтраховыеВзносыПоФизическимЛицам.ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА СтраховыеВзносыПоФизическимЛицам.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА СтраховыеВзносыПоФизическимЛицам.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА СтраховыеВзносыПоФизическимЛицам.СтатьяФинансирования
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Взносы.ФизическоеЛицо,
	|	Взносы.Сотрудник,
	|	Взносы.ОблагаетсяЕНВД,
	|	Взносы.Начисление,
	|	Взносы.ДатаНачала,
	|	Взносы.Подразделение,
	|	Взносы.СтатьяФинансирования,
	|	Взносы.СтатьяРасходов,
	|	Взносы.СпособОтраженияЗарплатыВБухучете,
	|	СУММА(Взносы.ПФРДоПредельнойВеличины) КАК ПФРДоПредельнойВеличины,
	|	СУММА(Взносы.ПФРСПревышения) КАК ПФРСПревышения,
	|	СУММА(Взносы.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
	|	СУММА(Взносы.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(Взносы.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(Взносы.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,
	|	СУММА(Взносы.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,
	|	СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(Взносы.ТФОМС) КАК ТФОМС,
	|	СУММА(Взносы.ФФОМС) КАК ФФОМС,
	|	СУММА(Взносы.ФСС) КАК ФСС,
	|	СУММА(Взносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи
	|ИЗ
	|	(ВЫБРАТЬ
	|		СведенияОВзносах.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СведенияОВзносах.Сотрудник КАК Сотрудник,
	|		СведенияОВзносах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		СведенияОВзносах.Начисление КАК Начисление,
	|		СведенияОВзносах.ДатаНачала КАК ДатаНачала,
	|		СведенияОВзносах.Подразделение КАК Подразделение,
	|		СведенияОВзносах.СтатьяФинансирования КАК СтатьяФинансирования,
	|		СведенияОВзносах.СтатьяРасходов КАК СтатьяРасходов,
	|		СведенияОВзносах.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		СведенияОВзносах.ПФРДоПредельнойВеличины КАК ПФРДоПредельнойВеличины,
	|		СведенияОВзносах.ПФРСПревышения КАК ПФРСПревышения,
	|		СведенияОВзносах.ПФРПоСуммарномуТарифу КАК ПФРПоСуммарномуТарифу,
	|		СведенияОВзносах.ПФРСтраховая КАК ПФРСтраховая,
	|		СведенияОВзносах.ПФРНакопительная КАК ПФРНакопительная,
	|		СведенияОВзносах.ПФРНаДоплатуЛетчикам КАК ПФРНаДоплатуЛетчикам,
	|		СведенияОВзносах.ПФРНаДоплатуШахтерам КАК ПФРНаДоплатуШахтерам,
	|		СведенияОВзносах.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		СведенияОВзносах.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		СведенияОВзносах.ТФОМС КАК ТФОМС,
	|		СведенияОВзносах.ФФОМС КАК ФФОМС,
	|		СведенияОВзносах.ФСС КАК ФСС,
	|		СведенияОВзносах.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи
	|	ИЗ
	|		#ТаблицаСведенияОВзносах КАК СведенияОВзносах
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗарегистрированныеСтраховыеВзносы.ФизическоеЛицо,
	|		ЗарегистрированныеСтраховыеВзносы.Сотрудник,
	|		ЗарегистрированныеСтраховыеВзносы.ОблагаетсяЕНВД,
	|		ЗарегистрированныеСтраховыеВзносы.Начисление,
	|		ЗарегистрированныеСтраховыеВзносы.ДатаНачала,
	|		ЗарегистрированныеСтраховыеВзносы.Подразделение,
	|		ЗарегистрированныеСтраховыеВзносы.СтатьяФинансирования,
	|		ЗарегистрированныеСтраховыеВзносы.СтатьяРасходов,
	|		ЗарегистрированныеСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРДоПредельнойВеличины,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРСПревышения,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРПоСуммарномуТарифу,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРСтраховая,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРНакопительная,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРНаДоплатуЛетчикам,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРНаДоплатуШахтерам,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		-ЗарегистрированныеСтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		-ЗарегистрированныеСтраховыеВзносы.ТФОМС,
	|		-ЗарегистрированныеСтраховыеВзносы.ФФОМС,
	|		-ЗарегистрированныеСтраховыеВзносы.ФСС,
	|		-ЗарегистрированныеСтраховыеВзносы.ФССНесчастныеСлучаи
	|	ИЗ
	|		ВТЗарегистрированныеСтраховыеВзносы КАК ЗарегистрированныеСтраховыеВзносы) КАК Взносы
	|
	|СГРУППИРОВАТЬ ПО
	|	Взносы.ФизическоеЛицо,
	|	Взносы.Сотрудник,
	|	Взносы.ОблагаетсяЕНВД,
	|	Взносы.Начисление,
	|	Взносы.ДатаНачала,
	|	Взносы.Подразделение,
	|	Взносы.СтатьяФинансирования,
	|	Взносы.СтатьяРасходов,
	|	Взносы.СпособОтраженияЗарплатыВБухучете
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Взносы.ПФРПоСуммарномуТарифу) <> 0
	|		ИЛИ СУММА(Взносы.ПФРДоПредельнойВеличины) <> 0
	|		ИЛИ СУММА(Взносы.ПФРСПревышения) <> 0
	|		ИЛИ СУММА(Взносы.ПФРСтраховая) <> 0
	|		ИЛИ СУММА(Взносы.ПФРНакопительная) <> 0
	|		ИЛИ СУММА(Взносы.ПФРНаДоплатуЛетчикам) <> 0
	|		ИЛИ СУММА(Взносы.ПФРНаДоплатуШахтерам) <> 0
	|		ИЛИ СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) <> 0
	|		ИЛИ СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) <> 0
	|		ИЛИ СУММА(Взносы.ТФОМС) <> 0
	|		ИЛИ СУММА(Взносы.ФФОМС) <> 0
	|		ИЛИ СУММА(Взносы.ФСС) <> 0
	|		ИЛИ СУММА(Взносы.ФССНесчастныеСлучаи) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Взносы.Сотрудник,
	|	Взносы.Начисление,
	|	Взносы.ДатаНачала";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаСведенияОВзносах", ИмяВременнойТаблицы);
	Если ИмяВременнойТаблицы = "ВТРасширенныеСведенияОВзносах" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СведенияОВзносах.СтатьяФинансирования", "ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СведенияОВзносах.СтатьяРасходов", "ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СведенияОВзносах.СпособОтраженияЗарплатыВБухучете", "ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 


// Возвращает таблицу значений с данными по страховым взносам, прочитанную из данных документа.
//      	 
// Параметры:
//      ДокументСсылка - ДокументСсылка - документ, содержащий сведения о суммах взносов.
//      ОписаниеТаблицыВзносовВДокументе - строка - необязательный.
//		ЧитатьДопВзносы - булево - необязательный, если выставлен в Ложь, взносы по доп.тарифам из документа не читаются.
//      ФизическиеЛица - массив, СправочникСсылка.ФизическиеЛица - необязательный, содержит тех физических лиц, по
//                       которым надо прочесть данные документа.
//		ЧитатьВзносыСПревышения - булево - необязательный, если выставлен в Ложь, взносы с сумм превышения из документа не
//		                                   читаются.
//      ИмяПоляДатаПолученияДохода - строка - необязательный.
//      	 
// Возвращаемое значение:
//	таблица значений с колонками:
//		ФизическоеЛицо,
//		ДатаПолученияДохода,
//		ФФОМС,
//		ФФОМСЕНВД,
//		ТФОМС,
//		ТФОМСЕНВД,
//		ФСС,
//		ФССЕНВД,
//		ФССНесчастныеСлучаи,
//		ПФРДоПредельнойВеличины,
//		ПФРСПревышения,
//		ПФРДоПредельнойВеличиныЕНВД,
//		ПФРСПревышенияЕНВД,
//		ПФРПоСуммарномуТарифу,
//		ПФРПоСуммарномуТарифуЕНВД,
//		ПФРНакопительная,
//		ПФРНакопительнаяЕНВД,
//		ПФРСтраховая,
//		ПФРСтраховаяЕНВД,
//		ПФРНаДоплатуЛетчикам,
//		ПФРНаДоплатуШахтерам,
//		ПФРЗаЗанятыхНаПодземныхИВредныхРаботахХХХ,
//		ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахХХХ
//      	 
Функция ДанныеОВзносахИзДокумента(ДокументСсылка, ОписаниеТаблицыВзносовВДокументе = Неопределено, ЧитатьДопВзносы = Истина, ФизическиеЛица = Неопределено, ЧитатьВзносыСПревышения = Ложь, ИмяПоляДатаПолученияДохода = "ДатаПолученияДохода") Экспорт
	

	Запрос = Новый Запрос();
		
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Взносы.ВидЕСВ КАК ВидЕСВ,
	|	Взносы.КатегорияЕСВ КАК КатегорияЕСВ,
	|	НАЧАЛОПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК НалоговыйПериод,
	|	Взносы.ДатаНачала КАК ДатаНачала,
	|	Взносы.ДатаОкончания КАК ДатаОкончания,
	|	Взносы.Налог КАК Налог,
	|	Взносы.СтатьяНалоговойДекларации КАК СтатьяНалоговойДекларации,
	|	Взносы.База КАК База,
	|	Взносы.БазаВзноса КАК БазаВзноса,
	|	Взносы.БазаОтпускные КАК БазаОтпускные,
	|	Взносы.БазаДоначисление КАК БазаДоначисление,
	|	Взносы.Результат КАК Результат,
	|	Взносы.РезультатДоначисление КАК РезультатДоначисление,
	|	Взносы.РезультатПолная КАК РезультатПолная,
	|	Взносы.СтавкаПолная КАК СтавкаПолная,
	|	Взносы.Предел КАК Предел,
	|	Взносы.Ставка КАК Ставка,
	|	Взносы.МинимальнаяБаза КАК МинимальнаяБаза,
	|	Взносы.КоэффициентСтавки КАК КоэффициентСтавки,
	|	Взносы.БазаВычет КАК БазаВычет,
	|	Взносы.ТипНачисления КАК ТипНачисления,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.Взносы) КАК СпособРасчета
	|ИЗ
	|	#ТаблицаВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Ссылка = &Ссылка
	|	И &УсловиеОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Взносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Взносы.ВидЕСВ КАК ВидЕСВ,
	|	Взносы.КатегорияЕСВ КАК КатегорияЕСВ,
	|	НАЧАЛОПЕРИОДА(Взносы.ДатаНачала, МЕСЯЦ) КАК НалоговыйПериод,
	|	Взносы.ДатаНачала КАК ДатаНачала,
	|	Взносы.ДатаОкончания КАК ДатаОкончания,
	|	Взносы.Налог КАК Налог,
	|	Взносы.СтатьяНалоговойДекларации КАК СтатьяНалоговойДекларации,
	|	Взносы.База КАК База,
	|	Взносы.БазаВзноса КАК БазаВзноса,
	|	Взносы.БазаОтпускные КАК БазаОтпускные,
	|	Взносы.БазаДоначисление КАК БазаДоначисление,
	|	Взносы.Результат КАК Результат,
	|	Взносы.РезультатДоначисление КАК РезультатДоначисление,
	|	Взносы.РезультатПолная КАК РезультатПолная,
	|	Взносы.СтавкаПолная КАК СтавкаПолная,
	|	Взносы.Предел КАК Предел,
	|	Взносы.Ставка КАК Ставка,
	|	Взносы.МинимальнаяБаза КАК МинимальнаяБаза,
	|	Взносы.КоэффициентСтавки КАК КоэффициентСтавки,
	|	Взносы.БазаВычет КАК БазаВычет,
	|	Взносы.ТипНачисления КАК ТипНачисления,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаВзносов.ВзносыФОТ) КАК СпособРасчета
	|ИЗ
	|	#ТаблицаВзносыФОТ КАК Взносы
	|ГДЕ
	|	Взносы.Ссылка = &Ссылка
	|	И &УсловиеОтбора
	|";
	
	Если ОписаниеТаблицыВзносовВДокументе = Неопределено Тогда
		ПолноеИмяДокумента = ДокументСсылка.Метаданные().ПолноеИмя();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаВзносыФОТ", ПолноеИмяДокумента + ".ВзносыФОТ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаВзносы", ПолноеИмяДокумента + ".Взносы");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ТаблицаВзносы", ОписаниеТаблицыВзносовВДокументе);
	КонецЕсли;
	Если ФизическиеЛица = Неопределено Тогда
		Запрос.УстановитьПараметр("УсловиеОтбора", Истина);
	Иначе
		Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", "Взносы.ФизическоеЛицо В (&ФизическиеЛица)");
	КонецЕсли; 
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

// Возвращает строку-перечень полей ресурсов страховых взносов.
//
// Параметры:
//	БезЕНВД - булево - необязательный, если Истина, в строку будут включены парные ЕНВДные поля.
//  ИмяТаблицы - строка - необязательный, если задан, строка результат может использоваться как часть текста запроса к
//                        таблице, содержащей соответствующие поля.
//	ВключатьДопТарифы - булево - необязательный, если Истина, в строку будут включены поля взносов по дополнительным
//	                             тарифам для вредников.
//
// Возвращаемое значение:
//	Строка.
// 
Функция РассчитываемыеВзносы(БезЕНВД = Ложь, ИмяТаблицы = "", ВключатьДопТарифы = Истина) Экспорт
	
	Возврат УчетСтраховыхВзносовКлиентСервер.РассчитываемыеВзносы(БезЕНВД, ИмяТаблицы, ВключатьДопТарифы)
	
КонецФункции 

// Возвращает строку-перечень полей ресурсов страховых взносов, по которым ведутся расчеты с фондами.
//
// Параметры:
//	БезЕНВД - булево - необязательный, если Истина, в строку будут включены парные ЕНВДные поля.
//  ИмяТаблицы - строка - необязательный, если задан, строка результат может использоваться как часть текста запроса к
//                        таблице, содержащей соответствующие поля.
//	ВключатьДопТарифы - булево - необязательный, если Истина, в строку будут включены поля взносов по дополнительным
//	                             тарифам для вредников.
//
// Возвращаемое значение:
//	Строка.
// 
Функция ОтражаемыеВУчетеВзносы(БезЕНВД = Ложь, ИмяТаблицы = "", ВключатьДопТарифы = Истина) Экспорт
	
	Возврат УчетСтраховыхВзносовКлиентСервер.ОтражаемыеВУчетеВзносы(БезЕНВД, ИмяТаблицы, ВключатьДопТарифы)
	
КонецФункции 

// Возвращает строку-перечень полей ресурсов страховых взносов.
//
// Параметры:
//	БезЕНВД - булево - необязательный, если Истина, в строку будут включены парные ЕНВДные поля.
//  ИмяТаблицы - строка - необязательный, если задан, строка результат может использоваться как часть текста запроса к
//                        таблице, содержащей соответствующие поля.
//	ВключатьДопТарифы - булево - необязательный, если Истина, в строку будут включены поля взносов по дополнительным
//	                             тарифам для вредников.
//
// Возвращаемое значение:
//	Строка.
// 
Функция ВзносыССуммПревышения(ИмяТаблицы = "")
	
	ИмяТаблицыСТочкой = "";
	Если ЗначениеЗаполнено(ИмяТаблицы) Тогда
		ИмяТаблицыСТочкой = ИмяТаблицы + "."
	КонецЕсли;
	
	ПереченьРесурсов = "ПФРПоСуммарномуТарифуСПревышения,ПФРСтраховаяСПревышения";
	
	Возврат ИмяТаблицыСТочкой + СтрЗаменить(ПереченьРесурсов, ",", "," + ИмяТаблицыСТочкой)
	
КонецФункции 


// Кадровые данные физических лиц

// Возвращает подготовленный запрос, формирующий временную таблицу с указанным именем.
// Временная таблица содержит поля Период, ФизическоеЛицо, ВидЗастрахованногоЛица.
//
// Параметры:
//		ТолькоРазрешенные
//		ОписательВременнойТаблицыОтборов - Структура, см. КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц.
//		ПоляОтбораПериодическихДанных - Соответствие
//		ИмяВТСведенияОСтатусахЗастрахованныхЛиц - Строка, имя временной таблицы, созданной в результате выполнения запроса.
//
// ВозвращаемоеЗначение:
//		Запрос
//
Функция ЗапросВТСведенияОСтатусахЗастрахованныхЛиц(ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИмяВТСведенияОСтатусахЗастрахованныхЛиц = "ВТСведенияОСтатусахЗастрахованныхЛиц") Экспорт
	
	ИмяВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц");
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц,
		"Период,ФизическоеЛицо");
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("Период", ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("ФизическоеЛицо", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	
	ПоляОтбора = Неопределено;
	Если ПоляОтбораПериодическихДанных <> Неопределено Тогда
		ПоляОтбораПериодическихДанных.Свойство("СтатусыЗастрахованныхФизическихЛиц", ПоляОтбора);
	КонецЕсли;
	
	ПараметрыПостроения.Отборы = ПоляОтбора;
	
	ЗапросВТИмяРегистраСрез = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТИмяРегистраСрез(
		"СтатусыЗастрахованныхФизическихЛиц",
		ТолькоРазрешенные,
		ОписаниеФильтра,
		ПараметрыПостроения,
		Истина,
		ИмяВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц);
	 
	ТекстЗапросаДанных =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаОтборовФизическихЛиц.Период КАК Период,
		|	ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ПериодЗаписи КАК ПериодЗаписи,
		|	ТаблицаОтборовФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ВидЗастрахованногоЛица, ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ГражданеРФ)
		|		ИНАЧЕ ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ВидЗастрахованногоЛица
		|	КОНЕЦ КАК ВидЗастрахованногоЛица
		|ПОМЕСТИТЬ ВТСведенияОСтатусахЗастрахованныхЛиц
		|ИЗ
		|	ВТОтборовФизическихЛиц КАК ТаблицаОтборовФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц КАК ПредварительныеСведенияОСтатусахЗастрахованныхЛиц
		|		ПО ТаблицаОтборовФизическихЛиц.Период = ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.Период
		|			И ТаблицаОтборовФизическихЛиц.ФизическоеЛицо = ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ФизическоеЛицо";
		
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТОтборовФизическихЛиц", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.Период", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.ФизическоеЛицо", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц", ИмяВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТСведенияОСтатусахЗастрахованныхЛиц", ИмяВТСведенияОСтатусахЗастрахованныхЛиц);
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаДанных, ТолькоРазрешенные);
	
	ЗапросВТИмяРегистраСрез.Текст = 
		ЗапросВТИмяРегистраСрез.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+ ТекстЗапросаДанных;
		
	Возврат ЗапросВТИмяРегистраСрез;
	
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Описывает источник данных для запроса по уплате страховых взносов.
//
// Возвращаемое значение
//	Структура с полями:
//		ИмяТаблицы - имя объекта метаданных в которой хранятся данные об уплате взносов.
//		ИспользоватьОсновнуюТаблицуДинамическогоСписка - определяет, используется ли таблица (ИмяТаблицы),
//														 в качестве основной таблицы динамического списка.
//		ИмяПоляДатаПлатежа - имя поля в таблице (ИмяТаблицы), в котором хранится дата платежа.
//		ИмяПоляВидПлатежа - имя поля в таблице (ИмяТаблицы), в котором хранится ВидОбязательногоСтрахованияСотрудников.
//		ИмяПоляСумма - имя поля в таблице (ИмяТаблицы), в котором хранится сумма платежа.
//		ИмяПоляОрганизация - имя поля в таблице (ИмяТаблицы), в котором хранится организация.
//		ИмяПоляПлатежЗарегистрирован - имя поля в таблице (ИмяТаблицы), в признак того что уплата взносов учтена в системе
//									   если не заполнено, то в тексте запроса будет значение ИСТИНА.
//		Отбор - массив содержащий структуры вида:
//			Поле - имя поля в таблице (имя таблицы).
//			ВидСравнения - строка вида "=", ">", "<" и т.п.
//			Значение - значение которое будет установлено в качестве параметра в запрос.
//		 На основании данного поля в запросе будет построена секция ГДЕ вида
//		 ИмяТаблицы.ИмяПоля = &Значение. 
//
Функция ОписаниеИсточникаДанныхУплатаВзносов() Экспорт 
	ОписаниеИсточникаДанных = Новый Структура();
	ОписаниеИсточникаДанных.Вставить("ИмяТаблицы", "РегистрНакопления.РасчетыСФондамиПоСтраховымВзносам");
	ОписаниеИсточникаДанных.Вставить("ИспользоватьОсновнуюТаблицуДинамическогоСписка", Истина);
	ОписаниеИсточникаДанных.Вставить("ИмяПоляДатаПлатежа", "Период");
	ОписаниеИсточникаДанных.Вставить("ИмяПоляВидПлатежа", "ВидОбязательногоСтрахованияСотрудников");
	ОписаниеИсточникаДанных.Вставить("ИмяПоляСумма", "Сумма");
	ОписаниеИсточникаДанных.Вставить("ИмяПоляОрганизация", "Организация");
	ОписаниеИсточникаДанных.Вставить("ИмяПоляПлатежЗарегистрирован");

    Отбор = Новый Массив;
	ЭлементОтбора = Новый Структура("Поле, ВидСравнения, Значение", "ВидДвижения", "=", ВидДвиженияНакопления.Расход);
	Отбор.Добавить(ЭлементОтбора);
	
	Отбор = Новый Массив;
	ЭлементОтбора = Новый Структура("Поле, ВидСравнения, Значение", "ЭтоСтраховыеВзносы", "=", Истина);
	Отбор.Добавить(ЭлементОтбора);
	
	ОписаниеИсточникаДанных.Вставить("Отбор", Отбор);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ВнешниеХозяйственныеОперации.УчетСтраховыхВзносовВХО") Тогда
		ОписаниеИсточникаДанных.ИмяТаблицы = "Документ.УплатаСтраховыхВзносовВФонды";
		ОписаниеИсточникаДанных.ИспользоватьОсновнуюТаблицуДинамическогоСписка = Истина;
		ОписаниеИсточникаДанных.ИмяПоляДатаПлатежа = "Дата";
		ОписаниеИсточникаДанных.ИмяПоляВидПлатежа = "ВидПлатежа";
		ОписаниеИсточникаДанных.ИмяПоляСумма = "СуммаПлатежа";
		ОписаниеИсточникаДанных.ИмяПоляОрганизация = "Организация";
		ОписаниеИсточникаДанных.ИмяПоляПлатежЗарегистрирован = "Проведен";	
		ОписаниеИсточникаДанных.Отбор = Новый Массив;
	КонецЕсли;
	
	УчетСтраховыхВзносовПереопределяемый.ИзменитьОписаниеИсточникаДанныхУплатаВзносов(ОписаниеИсточникаДанных);
	
	Возврат ОписаниеИсточникаДанных;
КонецФункции	

// Вспомогательные функции процедур формирования движений.

// Параметры:
//		Движения - коллекция движений регистратора.
//		Организация - СправочникСсылка.Организации -
//		ПериодРегистрации - дата -
//		ВидСтрахования - ПеречислениеСсылка.ВидыОбязательногоСтрахованияСотрудников -
//		Сумма - число - 
//
//  Возвращает РегистрНакопленияЗапись.РасчетыСФондамиПоСтраховымВзносам или Неопределено.
//
Функция СтрокаНачисленияВзносов(Движения, Организация, ПериодРегистрации, СтрокаВзносов, ПоАктуПроверки = Ложь)

	Если Не ЗначениеЗаполнено(СтрокаВзносов.Сумма) Тогда
		Возврат Неопределено
	КонецЕсли;
	
	НоваяСтрока = Движения.РасчетыСФондамиПоСтраховымВзносам.Добавить();
	НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
	НоваяСтрока.ПериодВзаиморасчетов = ПериодРегистрации;
	НоваяСтрока.ЭтоДоначислениеПоАктуПроверки = ПоАктуПроверки;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВзносов);
	
    Возврат НоваяСтрока
	
КонецФункции

// Параметры:
//		Движения - коллекция движений регистратора.
//		Организация - СправочникСсылка.Организации -
//		ПериодРегистрации - дата -
//		ПоАктуПроверки - булево -
//		ДанныеДокумента - Структура, строка выборки (и пр.) с полями, соответствующими полям рег-ра
//		                  СведенияОДоходахСтраховыеВзносы
//			ФизическоеЛицо
//          ВидДохода.
//          Сумма
//          Скидка - может отсутствовать.
//          Сотрудник - может отсутствовать.
//          Начисление - может отсутствовать
//          ...
//
//  Возвращает РегистрНакопленияЗапись.СведенияОДоходахСтраховыеВзносы
//
Функция СтрокаНачисленияДоходов(Движения, Организация, ПериодРегистрации, ПоАктуПроверки, ДанныеДокумента)
	
	НоваяСтрока = Движения.СведенияОДоходахСтраховыеВзносы.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеДокумента);
	НоваяСтрока.Организация = Организация;
	НоваяСтрока.ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	Если Не ЗначениеЗаполнено(НоваяСтрока.Период) Тогда
		НоваяСтрока.Период = ПериодРегистрации;
	КонецЕсли;
	НоваяСтрока.ПоАктуПроверки = ПоАктуПроверки;
	НоваяСтрока.ДатаПолученияДохода = УчетСтраховыхВзносовКлиентСервер.ДатаПолученияДохода(?(ЗначениеЗаполнено(НоваяСтрока.ДатаПолученияДохода), НоваяСтрока.ДатаПолученияДохода, ПериодРегистрации));
	
    Возврат НоваяСтрока
	
КонецФункции

Функция СтрокаПеречисленияВзносов(Движения, Организация, ПериодРегистрации, СтрокаВзносов, ПоАктуПроверки = Ложь)

	Если Не ЗначениеЗаполнено(СтрокаВзносов.Сумма) Тогда
		Возврат Неопределено
	КонецЕсли;
	
	НоваяСтрока = Движения.РасчетыСФондамиПоСтраховымВзносам.Добавить();
	НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
	НоваяСтрока.ПериодВзаиморасчетов = ПериодРегистрации;
	НоваяСтрока.ЭтоДоначислениеПоАктуПроверки = ПоАктуПроверки;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВзносов);
	
    Возврат НоваяСтрока
	
КонецФункции

// Формирование печатных форм.
// Специфические алгоритмы чтения данных.


// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТКадровыхДанных, которая содержит следующие поля
//		Сотрудник - СправочникСсылка.Сотрудники
//		ДатаНачала - дата
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		Должность - СправочникСсылка.Должности
//		ЯвляетсяФармацевтом - булево.
//		ЯвляетсяЧленомЭкипажаСуднаПодФлагомРФ - булево.
//		ЯвляетсяРаботникомСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//		ЯвляетсяПрокурором - булево.
//		ЯвляетсяВоеннослужащим - булево.
//		РаботаетВСтуденческомОтряде - булево.
//		ЯвляетсяЧленомЛетногоЭкипажа - булево.
//		ЯвляетсяШахтером - булево
//		КоэффициентУчетаСтроки - число от 0 до 1.
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу ВТНачисления с полями
//				Сотрудник - СправочникСсылка.Сотрудники
//				ДатаНачала - дата -
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления -
//				Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		УточнятьПериодКадровыхДанных - булево - если выставлен в Истина, период будет скорректирован с учетом дат приема и
//		                                        увольнения, для работающих постоянно - выставлен на конец месяца.
//
Процедура СформироватьВТКадровыхДанных(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, УточнятьПериодКадровыхДанных = Истина) Экспорт

	УчетСтраховыхВзносовВнутренний.СформироватьВТКадровыхДанных(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, УточнятьПериодКадровыхДанных)	
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТНачисленияСДаннымиУчета, которая содержит следующие поля:
//		Сотрудник - СправочникСсылка.Сотрудники
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		ДатаНачала - дата
//		ДатаПолученияДохода - дата.
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам -
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		ЯвляетсяФармацевтом - булево.
//		ЯвляетсяЧленомЭкипажаСуднаПодФлагомРФ - булево.
//		ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//		КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//		ОблагаетсяВзносамиНаДоплатуЛетчикам - булево.
//		ОблагаетсяВзносамиНаДоплатуШахтерам - булево.
//		Сумма - число 
//		Скидка - число 
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит 
//			вр. таблицу ВТНачисления с полями:
//				Сотрудник -
//				ДатаНачала - дата -
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления -
//				Подразделение - 
//				СуммаДохода - 
//				СуммаВычетаВзносы -
//      	        и, возможно, другими
//			вр. таблицу ВТСДаннымиУчета, с полями:
//				Сотрудник - СправочникСсылка.Сотрудники
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ДатаНачала - дата
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам -
//				Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//				ЯвляетсяФармацевтом - булево.
//				ЯвляетсяЧленомЭкипажаСуднаПодФлагомРФ - булево.
//				ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//				КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//				ОблагаетсяВзносамиНаДоплатуЛетчикам - булево.
//				ОблагаетсяВзносамиНаДоплатуШахтерам - булево.
//				КоэффициентУчетаСтроки - число от 0 до 1.
//		ИсключаемыйРегистратор - ДокументСсылка -
//
Процедура СформироватьВТНачисленияСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключаемыйРегистратор) Экспорт

	УчетСтраховыхВзносовВнутренний.СформироватьВТНачисленияСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключаемыйРегистратор)	
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТСДаннымиУчета, которая содержит следующие поля
//		Сотрудник - СправочникСсылка.Сотрудники
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		ДатаНачала - дата
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		ВидЕСВ - ПеречислениеСсылка.ВидыЕСВ
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		УсловияТруда - СправочникСсылка.УсловияТруда
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит
//			вр. таблицу ВТНачисления с полями:
//				Сотрудник - СправочникСсылка.Сотрудники
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ДатаНачала - дата
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				ПодразделениеОрганизации - СправочникСсылка.ПодразделенияОрганизаций
//				УсловияТруда - СправочникСсылка.УсловияТруда
//
Процедура СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт 

	УчетСтраховыхВзносовВнутренний.СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц)	
	
КонецПроцедуры

// Формирует таблицу значений с данными для проведения по регистру СведенияОДоходахСтраховыеВзносы,
// дополняя таблицу с данными учета по страховым взносам данными о ЕНВДности доходов.
//      	 
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит
//			вр. таблицу ВТНачисленияСДаннымиУчета с полями
//				Сотрудник - СправочникСсылка.Сотрудники
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ДатаНачала - дата
//				ДатаПолученияДохода - дата.
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам -
//				Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//				ЯвляетсяФармацевтом - булево.
//				ЯвляетсяЧленомЭкипажаСуднаПодФлагомРФ - булево.
//				ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//				КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//				ОблагаетсяВзносамиНаДоплатуЛетчикам - булево.
//				ОблагаетсяВзносамиНаДоплатуШахтерам - булево.
//				Сумма - число 
//				Скидка - число 
//			вр. таблицу ВТНачисленияСДаннымиЕНВД с полями
//				Сотрудник -
//				ДатаНачала - дата -
//				Начисление - ПланВидовРасчетаСсылка.Начисления -
//				Подразделение  
//				ДоляЕНВД  
//
//  Возвращает значение типа ТаблицаЗначений.
//
Функция СведенияОДоходахСУчетомЕНВД(МенеджерВременныхТаблиц) Экспорт 

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияСЕНВД.ФизическоеЛицо,
	|	НачисленияСЕНВД.ВидДохода,
	|	НачисленияСЕНВД.ОблагаетсяЕНВД,
	|	НачисленияСЕНВД.ЯвляетсяДоходомФармацевта,
	|	НачисленияСЕНВД.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	НачисленияСЕНВД.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	НачисленияСЕНВД.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	|	НачисленияСЕНВД.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	НачисленияСЕНВД.КлассУсловийТруда,
	|	СУММА(НачисленияСЕНВД.Сумма) КАК Сумма,
	|	СУММА(НачисленияСЕНВД.Скидка) КАК Скидка,
	|	НачисленияСЕНВД.Сотрудник,
	|	НачисленияСЕНВД.Начисление,
	|	НачисленияСЕНВД.Подразделение,
	|	НачисленияСЕНВД.ДатаНачала,
	|	НачисленияСЕНВД.ДатаПолученияДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияСДаннымиУчета.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|		НачисленияСДаннымиУчета.ВидДохода КАК ВидДохода,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
	|		НачисленияСДаннымиУчета.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
	|		НачисленияСДаннымиУчета.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ КАК ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		НачисленияСДаннымиУчета.КлассУсловийТруда КАК КлассУсловийТруда,
	|		ВЫРАЗИТЬ(НачисленияСДаннымиУчета.Сумма * ЕСТЬNULL(НачисленияСДаннымиЕНВД.ДоляЕНВД, 0) КАК ЧИСЛО(15, 2)) КАК Сумма,
	|		ВЫРАЗИТЬ(НачисленияСДаннымиУчета.Скидка * ЕСТЬNULL(НачисленияСДаннымиЕНВД.ДоляЕНВД, 0) КАК ЧИСЛО(15, 2)) КАК Скидка,
	|		НачисленияСДаннымиУчета.Сотрудник КАК Сотрудник,
	|		НачисленияСДаннымиУчета.Начисление КАК Начисление,
	|		НачисленияСДаннымиУчета.Подразделение КАК Подразделение,
	|		НачисленияСДаннымиУчета.ДатаНачала КАК ДатаНачала,
	|		НачисленияСДаннымиУчета.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ИСТИНА КАК ОблагаетсяЕНВД
	|	ИЗ
	|		ВТНачисленияСДаннымиУчета КАК НачисленияСДаннымиУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияСДаннымиЕНВД КАК НачисленияСДаннымиЕНВД
	|			ПО НачисленияСДаннымиУчета.Сотрудник = НачисленияСДаннымиЕНВД.Сотрудник
	|				И НачисленияСДаннымиУчета.Подразделение = НачисленияСДаннымиЕНВД.Подразделение
	|				И НачисленияСДаннымиУчета.Начисление = НачисленияСДаннымиЕНВД.Начисление
	|				И НачисленияСДаннымиУчета.ДатаНачала = НачисленияСДаннымиЕНВД.ДатаНачала
	|	ГДЕ
	|		НачисленияСДаннымиУчета.РаспределятьЕНВД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленияСДаннымиУчета.ДатаПолученияДохода,
	|		НачисленияСДаннымиУчета.ВидДохода,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|		НачисленияСДаннымиУчета.ЯвляетсяДоходомФармацевта,
	|		НачисленияСДаннымиУчета.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		НачисленияСДаннымиУчета.КлассУсловийТруда,
	|		НачисленияСДаннымиУчета.Сумма - (ВЫРАЗИТЬ(НачисленияСДаннымиУчета.Сумма * ЕСТЬNULL(НачисленияСДаннымиЕНВД.ДоляЕНВД, 0) КАК ЧИСЛО(15, 2))),
	|		НачисленияСДаннымиУчета.Скидка - (ВЫРАЗИТЬ(НачисленияСДаннымиУчета.Скидка * ЕСТЬNULL(НачисленияСДаннымиЕНВД.ДоляЕНВД, 0) КАК ЧИСЛО(15, 2))),
	|		НачисленияСДаннымиУчета.Сотрудник,
	|		НачисленияСДаннымиУчета.Начисление,
	|		НачисленияСДаннымиУчета.Подразделение,
	|		НачисленияСДаннымиУчета.ДатаНачала,
	|		НачисленияСДаннымиУчета.ФизическоеЛицо,
	|		ЛОЖЬ
	|	ИЗ
	|		ВТНачисленияСДаннымиУчета КАК НачисленияСДаннымиУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияСДаннымиЕНВД КАК НачисленияСДаннымиЕНВД
	|			ПО НачисленияСДаннымиУчета.Сотрудник = НачисленияСДаннымиЕНВД.Сотрудник
	|				И НачисленияСДаннымиУчета.Подразделение = НачисленияСДаннымиЕНВД.Подразделение
	|				И НачисленияСДаннымиУчета.Начисление = НачисленияСДаннымиЕНВД.Начисление
	|				И НачисленияСДаннымиУчета.ДатаНачала = НачисленияСДаннымиЕНВД.ДатаНачала
	|	ГДЕ
	|		НачисленияСДаннымиУчета.РаспределятьЕНВД
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленияСДаннымиУчета.ДатаПолученияДохода,
	|		НачисленияСДаннымиУчета.ВидДохода,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|		НачисленияСДаннымиУчета.ЯвляетсяДоходомФармацевта,
	|		НачисленияСДаннымиУчета.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	|		НачисленияСДаннымиУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		НачисленияСДаннымиУчета.КлассУсловийТруда,
	|		НачисленияСДаннымиУчета.Сумма,
	|		НачисленияСДаннымиУчета.Скидка,
	|		НачисленияСДаннымиУчета.Сотрудник,
	|		НачисленияСДаннымиУчета.Начисление,
	|		НачисленияСДаннымиУчета.Подразделение,
	|		НачисленияСДаннымиУчета.ДатаНачала,
	|		НачисленияСДаннымиУчета.ФизическоеЛицо,
	|		НачисленияСДаннымиУчета.ОблагаетсяЕНВД
	|	ИЗ
	|		ВТНачисленияСДаннымиУчета КАК НачисленияСДаннымиУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияСДаннымиЕНВД КАК НачисленияСДаннымиЕНВД
	|			ПО НачисленияСДаннымиУчета.Сотрудник = НачисленияСДаннымиЕНВД.Сотрудник
	|				И НачисленияСДаннымиУчета.Подразделение = НачисленияСДаннымиЕНВД.Подразделение
	|				И НачисленияСДаннымиУчета.Начисление = НачисленияСДаннымиЕНВД.Начисление
	|				И НачисленияСДаннымиУчета.ДатаНачала = НачисленияСДаннымиЕНВД.ДатаНачала
	|	ГДЕ
	|		НЕ НачисленияСДаннымиУчета.РаспределятьЕНВД) КАК НачисленияСЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияСЕНВД.ВидДохода,
	|	НачисленияСЕНВД.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	НачисленияСЕНВД.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	НачисленияСЕНВД.ЯвляетсяДоходомФармацевта,
	|	НачисленияСЕНВД.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,
	|	НачисленияСЕНВД.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	НачисленияСЕНВД.КлассУсловийТруда,
	|	НачисленияСЕНВД.Сотрудник,
	|	НачисленияСЕНВД.Начисление,
	|	НачисленияСЕНВД.Подразделение,
	|	НачисленияСЕНВД.ДатаНачала,
	|	НачисленияСЕНВД.ФизическоеЛицо,
	|	НачисленияСЕНВД.ОблагаетсяЕНВД,
	|	НачисленияСЕНВД.ДатаПолученияДохода
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачисленияСЕНВД.Сумма) <> 0
	|		ИЛИ СУММА(НачисленияСЕНВД.Скидка) <> 0)";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТДанныеОФактеНачисленияВзносов, которая содержит следующие поля
//		ФизическоеЛицо.
//		НачисленоНаОПС - булево, флажок, означающий, что за ФизическоеЛицо уплачивались взносы в ПФР на ОПС.
//		НачисленоПоДополнительнымТарифам - булево, флажок, означающий, что за ФизическоеЛицо уплачивались взносы в ПФР по
//		                                   доп.тарифам за вредников.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещена сформированная 
//								временная таблица;
//			содержит вр.таблицу ВТФизическиеЛица с полями:
//			* ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - должно быть непустым.
//  	    * Период - дата - должно быть непустым.
//		Организация - СправочникСсылка.Организации - организация, включая обособленные подразделения с выделенным балансом.
//		НачалоПериода - дата -
//		ОкончаниеПериода - дата -
//
Процедура СформироватьВТДанныеОФактеНачисленияВзносовВПФР(МенеджерВременныхТаблиц, Организация, НачалоПериода, ОкончаниеПериода)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ОкончаниеПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыИсчисленныеОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыИсчисленныеОбороты.Период КАК МесяцОтчетногоПериода,
	|	СтраховыеВзносыИсчисленныеОбороты.ПФРПоСуммарномуТарифуОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРПоСуммарномуТарифуЕНВДОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРДоПредельнойВеличиныОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРДоПредельнойВеличиныЕНВДОборот КАК ПФРНаОПС,
	|	СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахОпасныйОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный1Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный2Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный3Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахВредный4Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахОпасныйОборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный1Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный2Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный3Оборот + СтраховыеВзносыИсчисленныеОбороты.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахВредный4Оборот КАК ПФРПоДополнительномуТарифу
	|ПОМЕСТИТЬ ВТИсчисленоПоЗЛ
	|ИЗ
	|	РегистрНакопления.ИсчисленныеСтраховыеВзносы.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			ФизическоеЛицо В
	|					(ВЫБРАТЬ
	|						ФизическиеЛица.ФизическоеЛицо
	|					ИЗ
	|						ВТФизическиеЛица КАК ФизическиеЛица)
	|				И Организация = &Организация
	|				И ГоловнаяОрганизация = &ГоловнаяОрганизация) КАК СтраховыеВзносыИсчисленныеОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыходящиеНаПенсию.ФизическоеЛицо,
	|	ЕСТЬNULL(СУММА(ИсчисленоПоЗЛ.ПФРНаОПС), 0) КАК ПФРНаОПС,
	|	ЕСТЬNULL(СУММА(ИсчисленоПоЗЛ.ПФРПоДополнительномуТарифу), 0) КАК ПФРПоДополнительномуТарифу
	|ПОМЕСТИТЬ ВТНачисленоПоДатуСоставления
	|ИЗ
	|	ВТФизическиеЛица КАК ВыходящиеНаПенсию
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсчисленоПоЗЛ КАК ИсчисленоПоЗЛ
	|		ПО ВыходящиеНаПенсию.Период > ИсчисленоПоЗЛ.МесяцОтчетногоПериода
	|			И ВыходящиеНаПенсию.ФизическоеЛицо = ИсчисленоПоЗЛ.ФизическоеЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыходящиеНаПенсию.ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетныеДанные.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА РасчетныеДанные.ПФРНаОПС > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачисленоНаОПС,
	|	ВЫБОР
	|		КОГДА РасчетныеДанные.ПФРПоДополнительномуТарифу > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачисленоПоДополнительнымТарифам
	|ПОМЕСТИТЬ ВТДанныеОФактеНачисленияВзносов
	|ИЗ
	|	ВТНачисленоПоДатуСоставления КАК РасчетныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленоПоДатуСоставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТИсчисленоПоЗЛ";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу
//	ВТИсправленияВзносовПрошлыхПериодов (это имя можно изменить - см. параметры), которая содержит следующие поля
//		ФизическоеЛицо
//		ГоловнаяОрганизация.
//      ОтчетныйПериод - дата, начало квартала, период, в котором есть исправления для ИсправленныйПериод.
//      ИсправленныйПериод - дата, начало квартала.
//
// Параметры:
//	НачалоПериода - дата -
//  ОкончаниеПериода - дата -  
//  Организация - СправочникСсылка.Организации -   
//  МенеджерВременныхТаблиц - менеджер временных таблиц, куда будет помещена сформированная временная таблица.
//  ТолькоРазрешенные - булево - флажок, определяющий, надо ли оставлять в запросе только разрешенные при РЛС записи.
//  ИмяСоздаваемойТаблицы - строка, имя временной таблицы - результата.
//
Процедура СформироватьВТИсправленияВзносовПрошлыхПериодов(НачалоПериода, ОкончаниеПериода, Организация, МенеджерВременныхТаблиц, ТолькоРазрешенные = Ложь, ИмяСоздаваемойТаблицы = "ВТИсправленияВзносовПрошлыхПериодов") Экспорт 

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СтраховыеВзносыИсчисленные.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, КВАРТАЛ) КАК ОтчетныйПериод,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ) КАК ИсправленныйПериод
	|ПОМЕСТИТЬ ВТИсправленияВзносовПрошлыхПериодов
	|ИЗ
	|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК СтраховыеВзносыИсчисленные
	|ГДЕ
	|	СтраховыеВзносыИсчисленные.Организация = &Организация
	|	И СтраховыеВзносыИсчисленные.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И СтраховыеВзносыИсчисленные.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И (СтраховыеВзносыИсчисленные.ОснованиеДляДоначисления В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляДоначисленияСтраховыхВзносов.ВыезднаяПроверка), ЗНАЧЕНИЕ(Перечисление.ОснованияДляДоначисленияСтраховыхВзносов.КамеральнаяПроверка))
	|			ИЛИ НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, КВАРТАЛ) > НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносыИсчисленные.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.ДатаПолученияДохода, КВАРТАЛ),
	|	НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, КВАРТАЛ)
	|
	|ИМЕЮЩИЕ
	|	(СУММА(СтраховыеВзносыИсчисленные.ПФРСтраховая + СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД) <> 0
	|		ИЛИ СУММА(СтраховыеВзносыИсчисленные.ПФРНакопительная + СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД) <> 0
	|		ИЛИ СУММА(СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу + СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличины + СтраховыеВзносыИсчисленные.ПФРДоПредельнойВеличиныЕНВД) <> 0)";	
	Если Не ТолькоРазрешенные Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РАЗРЕШЕННЫЕ", "");
	КонецЕсли;
	Если ИмяСоздаваемойТаблицы <> "ВТИсправленияВзносовПрошлыхПериодов" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТИсправленияПрошлыхПериодов", ИмяСоздаваемойТаблицы);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

КонецПроцедуры

// Формирует таблицу значений с данными для проведения по регистру СведенияОДоходахСтраховыеВзносы.
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит 
//			вр. таблицу ВТНачисления с полями
//				Сотрудник -
//				ДатаНачала - дата -
//				Начисление - ПланВидовРасчетаСсылка.Начисления -
//				Подразделение  
//				СуммаДохода 
//				СуммаВычетаВзносы
//      	        и, возможно, другими
//			вр. таблицу ВТНачисленияСДаннымиЕНВД с полями
//				Сотрудник -
//				ДатаНачала - дата -
//				Начисление - ПланВидовРасчетаСсылка.Начисления -
//				Подразделение  
//				ДоляЕНВД  
//		ИсключаемыйРегистратор - ДокументСсылка -
//
//  Возвращает значение типа ТаблицаЗначений.
//
Функция СведенияОДоходахСтраховыеВзносы(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключаемыйРегистратор)
	

	СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	| *
	|ИЗ ВТСДаннымиУчета";
	
	ДанныеУчета = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеУчета;

КонецФункции

Процедура ДобавитьОтборПриЧтенииПериодическихДанных(ПараметрыПостроения, ДатаАктуальности, ДляПервичнойОтчетностиПФР) Экспорт 
    
    Если ДляПервичнойОтчетностиПФР Тогда
        ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "НАЧАЛОПЕРИОДА(РегистрСведений.Период, КВАРТАЛ)", ">=", "НАЧАЛОПЕРИОДА(РегистрСведений.ДатаРегистрацииИзменений, КВАРТАЛ) ИЛИ РегистрСведений.ДатаРегистрацииИзменений <= КОНЕЦПЕРИОДА(ИзмеренияДаты.Период, КВАРТАЛ)", Ложь);
    Иначе
        ЗарплатаКадрыОбщиеНаборыДанных.ДобавитьВКоллекциюОтбор(ПараметрыПостроения.Отборы, "РегистрСведений.ДатаРегистрацииИзменений", "<=", "ДАТАВРЕМЯ(" + Формат(ДатаАктуальности,"ДФ=гггг") + ", " + Месяц(ДатаАктуальности) + ", " + День(ДатаАктуальности) + ", 23, 59, 59)", Ложь);
    КонецЕсли;

КонецПроцедуры	

#КонецОбласти

#Область БлокФункцийПервоначальногоЗаполненияИОбновленияИБ

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  ИмяРегистра - строка - 
//  ТекстЗапроса - строка - текст исполняемого запроса, в котором обязательно присутствует 
//			поле Регистратор, остальные поля должны соответствовать 
//          полям записи заполняемого регистра, в результате должны 
//          присутствовать все заполняемые поля;
//			кроме того, результат запроса должен быть упорядочен, 
//			первое поле упорядочивания - Регистратор
//  ПараметрыЗапроса - Структура - необязательный, содержит имена и значения параметров,
//          которые требуются запросу
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбработатьНаборыЗаписейРегистраНакопления(ИмяРегистра, ТекстЗапроса, ПараметрыЗапроса = Неопределено, МенеджерВременныхТаблиц = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Если МенеджерВременныхТаблиц <> Неопределено Тогда
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Если ЗначениеЗаполнено(ПараметрыЗапроса) Тогда
		Для каждого КлючИЗначение Из ПараметрыЗапроса Цикл
			Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение)
		КонецЦикла;
	КонецЕсли;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("Регистратор") Цикл
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры


// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.0.14";
	Обработчик.Процедура = "УчетСтраховыхВзносов.ОбновитьШкалуСтавок";


КонецПроцедуры

Процедура ОбновитьШкалуСтавок() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "ШкалаСтавокНалогов");	
	
КонецПроцедуры



Процедура ЗаполнитьПолеДатаПолученияДоходаПоОписаниюДокумента(ОписаниеДокумента) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВзносов.Ссылка
	|ИЗ
	|	#ТаблицаВзносов КАК ТаблицаВзносов
	|ГДЕ
	|	ТаблицаВзносов.ДатаПолученияДохода = ДАТАВРЕМЯ(1, 1, 1)";
	
	ПутьКТаблицеВзносов = "Документ." + ОписаниеДокумента.ИмяДокумента + "." + ОписаниеДокумента.ИмяТаблицыВзносов;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаВзносов", ПутьКТаблицеВзносов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ТаблицаВзносы = ДокументОбъект[ОписаниеДокумента.ИмяТаблицыВзносов];
		ПериодРегистрации = ДокументОбъект[ОписаниеДокумента.ИмяПоляПериодРегистрации];
		
		ДатаПолученияДохода = УчетСтраховыхВзносовКлиентСервер.ДатаПолученияДохода(ПериодРегистрации);
		
		Для Каждого СтрокаВзносов Из ТаблицаВзносы Цикл 
			Если Не ЗначениеЗаполнено(СтрокаВзносов.ДатаПолученияДохода) Тогда
				СтрокаВзносов.ДатаПолученияДохода = ДатаПолученияДохода;
			КонецЕсли;	
		КонецЦикла;	
		
		ДокументОбъект.ОбменДанными.Загрузка = Истина;
		ДокументОбъект.Записать();
	КонецЦикла;	
	
КонецПроцедуры	

/////////////////////////////////////////////////////////////////////////////////////////

// Устанавливает видимость колонок таблицы страховых взносов в форме документа
// в зависимости от месяца расчета.
//
// Параметры:
//	- Форма - управляемая форма документа,
//	- Месяц - дата начисления взносов.
//	- ИмяТаблицыСтраховыхВзносов - имя таблицы формы, колонками которой нужно управлять, 
//		необязательный, по умолчанию "Взносы".
//
Процедура УстановитьВидимостьКолонокТаблицыСтраховыхВзносов(Форма, Месяц, ИмяТаблицыСтраховыхВзносов = "Взносы") Экспорт
	
	
КонецПроцедуры


#КонецОбласти
