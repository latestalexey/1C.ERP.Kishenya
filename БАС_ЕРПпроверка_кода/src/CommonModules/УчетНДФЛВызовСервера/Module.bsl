
#Область СлужебныйПрограммныйИнтерфейс

/// Получение описаний вычетов для представления пользователю.
//	Параметры:
//		Вычеты - ссылок на вычеты
// 	Возвращает: 
//		Соответствие ссылок вычетов и их описаний.
Функция ПолучитьОписаниеЛьготы(Льгота, ВключатьЛьготуВОписание = Ложь) Экспорт
	Если ЗначениеЗаполнено(Льгота) Тогда
		ДанныеЛьготы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Льгота, "Наименование, Код");
		Если ВключатьЛьготуВОписание Тогда
			Возврат ДанныеЛьготы.Код + " " + ДанныеЛьготы.Наименование;
		Иначе
			Возврат ДанныеЛьготы.Наименование;
		КонецЕсли;	
	Иначе
		Возврат НСтр("ru='Льгота не указана';uk='Пільга не вказана'");
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОписаниеКодаДохода(КодДохода) Экспорт
	ОписаниеКодаДохода = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодДохода, "ВычетРассчитываетсяАвтоматически, ВычетПоУмолчанию, ИмеетЕдинственныйВычет");	
			
	Возврат ОписаниеКодаДохода;
КонецФункции	

Функция ВычетыКДоходам(ГодНалоговогоПериода) Экспорт
	Возврат УчетНДФЛ.ВычетыКДоходам(ГодНалоговогоПериода);	
КонецФункции

Процедура ПрочитатьДанныеФизическогоЛицаВДанныеДокумента(ФизическоеЛицо, КонецНалоговогоПериода, ДанныеФизическогоЛица = Неопределено) Экспорт
	МассивФизЛиц = Новый Массив;
	МассивФизЛиц.Добавить(ФизическоеЛицо);
	
	Если ДанныеФизическогоЛица = Неопределено Тогда
		ДанныеФизическогоЛица = Новый Структура;
		ПолучаемыеПоля = "ИНН,Фамилия,Имя,Отчество,АдресПоПрописке,АдресПоПропискеПредставление,ДокументВид,ДокументСерия,ДокументНомер,Страна,ДатаРождения,АдресЗаПределамиРФ,АдресЗаПределамиРФПредставление"; 
		ТаблицаДанныхФизЛица = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, МассивФизЛиц, ПолучаемыеПоля, КонецНалоговогоПериода); 
		Если ТаблицаДанныхФизЛица.Количество() > 0 Тогда
			СтрокаДанныхФизЛица = ТаблицаДанныхФизЛица[0];
			
			ДанныеФизическогоЛица.Вставить("ФизическоеЛицо", ФизическоеЛицо);
			ДанныеФизическогоЛица.Вставить("ДатаРождения", СтрокаДанныхФизЛица.ДатаРождения);
			ДанныеФизическогоЛица.Вставить("Фамилия", СтрокаДанныхФизЛица.Фамилия);
			ДанныеФизическогоЛица.Вставить("Имя", СтрокаДанныхФизЛица.Имя);
			ДанныеФизическогоЛица.Вставить("Отчество", СтрокаДанныхФизЛица.Отчество);
			ДанныеФизическогоЛица.Вставить("Гражданство", СтрокаДанныхФизЛица.Страна);
			ДанныеФизическогоЛица.Вставить("ВидДокумента", СтрокаДанныхФизЛица.ДокументВид);
			ДанныеФизическогоЛица.Вставить("Серия", СтрокаДанныхФизЛица.ДокументСерия);
			ДанныеФизическогоЛица.Вставить("Номер", СтрокаДанныхФизЛица.ДокументНомер);
			ДанныеФизическогоЛица.Вставить("АдресРегистрации", СтрокаДанныхФизЛица.АдресПоПрописке);
			ДанныеФизическогоЛица.Вставить("АдресРегистрацииПредставление", СтрокаДанныхФизЛица.АдресПоПропискеПредставление);
			ДанныеФизическогоЛица.Вставить("АдресЗарубежом", СтрокаДанныхФизЛица.АдресЗаПределамиРФ);
			ДанныеФизическогоЛица.Вставить("АдресЗарубежомПредставление", СтрокаДанныхФизЛица.АдресЗаПределамиРФПредставление);

		КонецЕсли;	
		
	КонецЕсли;	
	
	СтатусРезидент = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент");
	
	ДанныеОСтатусеНДФЛ = КадровыйУчет.КадровыеДанныеФизическихЛиц(Истина, МассивФизЛиц, "СтатусНалогоплательщика", КонецНалоговогоПериода);
	
	Если ДанныеОСтатусеНДФЛ.Количество() > 0 Тогда
		ДанныеФизическогоЛица.Вставить("СтатусНалогоплательщика", ?(ЗначениеЗаполнено(ДанныеОСтатусеНДФЛ[0].СтатусНалогоплательщика), ДанныеОСтатусеНДФЛ[0].СтатусНалогоплательщика, СтатусРезидент));
	Иначе                                                                                                     
		ДанныеФизическогоЛица.Вставить("СтатусНалогоплательщика", СтатусРезидент);
	КонецЕсли;	
	
КонецПроцедуры	

// Обработчик события "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника ВидыЛьготПоНДФЛ.
//
// Параметры:
//  	ДанныеВыбора			- СписокЗначений
//		Параметры				- Структура
//		СтандартнаяОбработка	- Булево
//
Процедура ВидыЛьготНДФЛОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Начисление = Неопределено;
	КодДохода = Неопределено;
	МесяцНачисления = Неопределено;
	НалоговыйПериод = Неопределено;
	ГруппаВычета = Неопределено;
	
	Параметры.Свойство("Начисление", Начисление);
	Параметры.Свойство("КодДохода", КодДохода);
	Параметры.Свойство("МесяцНачисления", МесяцНачисления);
	Параметры.Свойство("НалоговыйПериод", НалоговыйПериод);
	
	Если МесяцНачисления <> Неопределено И НалоговыйПериод = Неопределено Тогда
		НалоговыйПериод = Год(МесяцНачисления)
	КонецЕсли;
	Если Начисление <> Неопределено Тогда
		КодДохода = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Начисление, "КодДоходаНДФЛ");
	КонецЕсли;
	
		
	
		
		ДанныеВыбора = Новый СписокЗначений;

		ДоступныеВычеты = УчетНДФЛ.ВычетыНалогоплательщика(НалоговыйПериод, ГруппаВычета);
		ЗаполнитьДанныеВыбораПоДоступнымВычетам(ДанныеВыбора, ДоступныеВычеты, Параметры, СтандартнаяОбработка);
		СтандартнаяОбработка = Ложь;
		
		Возврат;
		
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Вспомогательные функции и процедуры

Процедура ЗаполнитьДанныеВыбораПоДоступнымВычетам(ДанныеВыбора, ДоступныеВычеты, Параметры, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Параметры.СтрокаПоиска) Тогда 
		
		ЗначенияРеквизитовВычетов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДоступныеВычеты, "Код,Наименование");
		Для каждого Вычет Из ДоступныеВычеты Цикл
			ЗначенияРеквизитовВычета = ЗначенияРеквизитовВычетов.Получить(Вычет);
			ДанныеВыбора.Добавить(Вычет, СокрЛП(ЗначенияРеквизитовВычета.Код) + " (" + ЗначенияРеквизитовВычета.Наименование + ")");
		КонецЦикла;
		
	Иначе 	
		Параметры.Отбор.Вставить("Ссылка", Новый ФиксированныйМассив(ДоступныеВычеты));
		ЗарплатаКадрыВызовСервера.ПодготовитьДанныеВыбораКлассификаторовСПорядкомКодов(ДанныеВыбора, Параметры, СтандартнаяОбработка, "Справочник.ВидыЛьготПоНДФЛ");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
