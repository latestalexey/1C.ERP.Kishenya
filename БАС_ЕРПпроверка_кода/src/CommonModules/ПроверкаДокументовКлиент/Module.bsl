//////////////////////////////////////////////////////////////////////////////////////////////
// Проверка документов: методы, работающие на  стороне клиента.
//  
//////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет команду изменения статуса проверки документа (см. метод общего модуля "ПроверкаДокументовВызовСервера.ВыполнитьКомандуИзмененияСтатусаПроверкиДокумента")
//
// Параметры:
//  Форма	- УправляемаяФорма - Форма в которой расположена команда
//  Команда	- КомандаФормы - Команда, которую нужно выполнить
//
Процедура ВыполнитьКомандуИзмененияСтатусаПроверкиДокумента(Форма, Команда) Экспорт
	
	Если СтрНайти(Команда.Имя, "ПроверкаДокументов_КомандаИзмененияСтатусаПроверкиДокумента") И ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ПроверкаДокументов_ДокументПроверен") Тогда
		
		Если Не Форма.Объект.Проведен Тогда
			ДополнительныеПараметрыОповещения = Новый Структура("Форма, Команда, Проведение", Форма, Команда, Истина);
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикОповещенияВопросПередПроверкой", ЭтотОбъект, ДополнительныеПараметрыОповещения);
			ТекстВопроса = НСтр("ru='Проверка возможна только для проведенных документов. Провести документ и продолжить выполнение проверки?';uk='Перевірка можлива тільки для проведених документів. Провести документ і продовжити виконання перевірки?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		ИначеЕсли Форма.Модифицированность Тогда
			ДополнительныеПараметрыОповещения = Новый Структура("Форма, Команда", Форма, Команда);
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикОповещенияВопросПередПроверкой", ЭтотОбъект, ДополнительныеПараметрыОповещения);
			ТекстВопроса = НСтр("ru='Документ был изменен. Для изменения статуса проверки необходимо записать документ. Продолжить?';uk='Документ був змінений. Для зміни статусу перевірки необхідно записати документ. Продовжити?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ДанныеОбОшибке = Новый Соответствие;
			Форма.РазблокироватьДанныеФормыДляРедактирования();
			ПроверкаДокументовВызовСервера.ВыполнитьКомандуИзмененияСтатусаПроверкиДокумента(Форма.Объект.Ссылка, ДанныеОбОшибке);
			Если ДанныеОбОшибке.Количество() Тогда
				ПоказатьПредупреждение(, ДанныеОбОшибке.Получить(Форма.Объект.Ссылка), 15, НСтр("ru='Не удалось изменить статус проверки документа';uk='Не вдалося змінити статус перевірки документа'"));
			Иначе
				Оповестить("Запись_СтатусПроверкиДокумента", Форма.Объект.Ссылка, Форма);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы. Проверяет, если оповещение вызвано новым статусом проверки -
// обновляет команду изменения статуса проверки формы и блокирует форму в случае необходимости (когда статус проверки документа "Проверен")
//
// Параметры:
//  Форма					- УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//  ИмяСобытия				- Строка - идентификатор сообщения принимающей формой (см. метод Оповестить)
//	Параметр				- Структура - параметр сообщения (см. метод Оповестить)
//	Источник				- Произвольный - источник события (см. метод Оповестить)
//
Процедура ОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ИмяСобытия = "Запись_СтатусПроверкиДокумента" Тогда
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ПроверкаДокументов_ДокументПроверен") Тогда
			Форма.Прочитать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы.
// Необходимо при записи проверенного документа выводить предупреждение о том, что документ был проверен и при записи снимется с проверки.
// У пользователя будет возможность отменить запись. Данная проверка будет вызываться вне зависимости от опции жесткой/мягкой проверки,
// так как при жесткой проверке запись измененного документа не возможна.
//
// Параметры:
//  Форма					- УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ					- Булево - признак отказа от записи документа
//	ПараметрыЗаписи			- Структура - параметры записи (см. событие ПередЗаписью)
//
Процедура ПередЗаписью(Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ПроверкаДокументов_ДокументПроверен")
		И ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ПроверкаДокументов_ПодтверждениеЗаписи")
		И Форма.ПроверкаДокументов_ПодтверждениеЗаписи И Форма.ПроверкаДокументов_ДокументПроверен Тогда
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "НеВыполнятьПроверкуПередЗаписью") Тогда
			Форма.НеВыполнятьПроверкуПередЗаписью = Истина;
		КонецЕсли;
		
		Отказ = Истина;
		
		ДополнительныеПараметрыОповещения = Новый Структура("Форма, ПараметрыЗаписи", Форма, ПараметрыЗаписи);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикОповещенияВопросПередЗаписью", ЭтотОбъект, ДополнительныеПараметрыОповещения);
		ТекстВопроса = НСтр("ru='Данный документ ранее был проверен. Запись документа пометит его к повторной проверке. Продолжить?';uk='Даний документ раніше був перевірений. Запис документа позначить його до повторної перевірки. Продовжити?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработчикОповещенияВопросПередЗаписью(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры.Форма.ПроверкаДокументов_ПодтверждениеЗаписи = Ложь;
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(ДополнительныеПараметры.Форма, "НеВыполнятьПроверкуПередЗаписью") Тогда
			ДополнительныеПараметры.Форма.НеВыполнятьПроверкуПередЗаписью = Ложь;
		КонецЕсли;
		ДополнительныеПараметры.Форма.Записать(ДополнительныеПараметры.ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработчикОповещенияВопросПередПроверкой(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Перем Форма;
	Если РезультатВопроса = КодВозвратаДиалога.Да И ДополнительныеПараметры.Свойство("Форма", Форма) Тогда
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма, "ПроверкаДокументов_ПодтверждениеЗаписи") Тогда
			Форма.ПроверкаДокументов_ПодтверждениеЗаписи = Ложь;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("Проведение") Тогда
			СтруктураЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
			Форма.Записать(СтруктураЗаписи);
		Иначе
			Форма.Записать();
		КонецЕсли;
		ВыполнитьКомандуИзмененияСтатусаПроверкиДокумента(Форма, ДополнительныеПараметры.Команда);
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти