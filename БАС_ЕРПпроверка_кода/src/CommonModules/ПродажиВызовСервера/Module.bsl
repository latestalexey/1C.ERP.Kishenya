////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для пересчета итогов документов в формах.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//Проверяет, есть ли в табличной части строки с незаполненной датой отгрузки в неотмененных строках
//	
//Параметры:
//		Объект - ДанныеФормыСтруктура - проверяемый обеъкт
//		ИмяТЧ - Строка - имя проверяемой ТЧ
//
//Возвращаемое значение:
//		Булево - признак наличия строк с незаполненной датой отгрузки
Функция ДатаОтгрузкиПустая(Знач Объект, ИмяТЧ) Экспорт
	
	Если Объект.НеОтгружатьЧастями Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОтгрузки) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	Иначе
		Для Каждого ТекСтрока Из Объект[ИмяТЧ] Цикл
			
			Если Не ТекСтрока.Отменено
				И Не ЗначениеЗаполнено(ТекСтрока.ДатаОтгрузки) Тогда
				
				Возврат Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции

// Функция возвращает состояние фактической отгрузки по документу
//
// Параметры:
// 		ДокументыОтгрузки - Массив - Ссылки на документы-распоряжения на отгрузку
//
// Возвращаемое значение:
// 		Структура - Структура с полями "ЕстьОтгруженныеТовары, ЕстьНесобранныеТовары" типа "Булево"
//
Функция ПолучитьСостояниеФактическойОтгрузки(ДокументыОтгрузки) Экспорт
	
	Возврат ПродажиСервер.ПолучитьСостояниеФактическойОтгрузки(ДокументыОтгрузки);
	
КонецФункции


// Формирует структуру для создания реализации по одному или нескольким заказам клиентов
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
// МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию
// РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
// Возвращаемое значение:
// Булево
// Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция СформироватьДанныеЗаполненияРеализации(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗаказКлиента.ИмяДокумента)                   КАК ИмяДокумента,
		|	МИНИМУМ(ЗаказКлиента.Партнер)                        КАК Партнер,
		|	МИНИМУМ(ЗаказКлиента.Контрагент)                     КАК Контрагент,
		|	МИНИМУМ(ЗаказКлиента.Договор)                        КАК Договор,
		|	МИНИМУМ(ЗаказКлиента.Организация)                    КАК Организация,
		|	МИНИМУМ(ЗаказКлиента.Соглашение)                     КАК Соглашение,
		|	МИНИМУМ(ЗаказКлиента.Сделка)                         КАК Сделка,
		|	МИНИМУМ(ЗаказКлиента.Склад)                          КАК Склад,
		|	МИНИМУМ(ЗаказКлиента.ХозяйственнаяОперация)          КАК ХозяйственнаяОперация,
		|	МИНИМУМ(ЗаказКлиента.ВалютаВзаиморасчетов)           КАК ВалютаВзаиморасчетов,
		|	МИНИМУМ(ЗаказКлиента.ЦенаВключаетНДС)                КАК ЦенаВключаетНДС,
		|	МИНИМУМ(ЗаказКлиента.ПорядокРасчетов)                КАК ПорядокРасчетов,
		|	МИНИМУМ(ЗаказКлиента.ВернутьМногооборотнуюТару)      КАК ВернутьМногооборотнуюТару,
		|	МИНИМУМ(ЗаказКлиента.ТребуетсяЗалогЗаТару)           КАК ТребуетсяЗалогЗаТару,
		|	МИНИМУМ(ЗаказКлиента.СрокВозвратаМногооборотнойТары) КАК СрокВозвратаМногооборотнойТары,
		|	МИНИМУМ(ЗаказКлиента.НаправлениеДеятельности)        КАК НаправлениеДеятельности,
		|	МИНИМУМ(
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами
		|				ТОГДА ЗаказКлиента.Соглашение.РассчитыватьДатуВозвратаТарыПоКалендарю
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК РассчитыватьДатуВозвратаТарыПоКалендарю,
		|	МИНИМУМ(
		|		ВЫБОР
		|			КОГДА &ИспользоватьСоглашенияСКлиентами 
		|				ТОГДА ЗаказКлиента.Соглашение.КалендарьВозвратаТары
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПроизводственныеКалендари.ПустаяСсылка)
		|		КОНЕЦ) КАК КалендарьВозвратаТары,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Подразделение) > 1
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|		ИНАЧЕ
		|			МИНИМУМ(ЗаказКлиента.Подразделение)
		|	КОНЕЦ КАК Подразделение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Партнер) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПартнер,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Договор) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияДоговор,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияОрганизация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Соглашение) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСоглашение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Сделка) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСделка,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СкладОтгрузки) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСклад,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ХозяйственнаяОперация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВалютаВзаиморасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЦенаВключаетНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВернутьМногооборотнуюТару) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВернутьМногооборотнуюТару,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ТребуетсяЗалогЗаТару) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияТребуетсяЗалогЗаТару,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СрокВозвратаМногооборотнойТары) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСрокВозвратаМногооборотнойТары,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ПорядокРасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПорядокРасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчет
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчет)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчет,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетКонтрагента)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетКонтрагента,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузоотправитель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.Грузоотправитель)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Грузоотправитель,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузополучатель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.Грузополучатель)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|	КОНЕЦ КАК Грузополучатель,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетГрузоотправителя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетГрузоотправителя
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузоотправитель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетГрузоотправителя)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетГрузоотправителя,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетГрузополучателя <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетГрузополучателя
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.Грузополучатель
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетГрузополучателя)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетГрузополучателя,
		|	МИНИМУМ(ЗаказКлиента.СкладОтгрузки) КАК СкладОтгрузки,
		|	ВЫБОР
		|		КОГДА
		|			МИНИМУМ(ЗаказКлиента.Склад.ЭтоГруппа) = ИСТИНА И МИНИМУМ(ЗаказКлиента.Склад.ВыборГруппы) = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЗапрещеноВыбиратьГруппуСкладов,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
		|			И МИНИМУМ(ЗаказКлиента.СпособДоставки) = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|			ТОГДА МИНИМУМ(ЗаказКлиента.СпособДоставки)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз)
		|	КОНЕЦ КАК СпособДоставки,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
		|			И МИНИМУМ(ЗаказКлиента.СпособДоставки) = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|			И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ПеревозчикПартнер) = 1
		|		ТОГДА МИНИМУМ(ЗаказКлиента.ПеревозчикПартнер)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|	КОНЕЦ КАК ПеревозчикПартнер,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.АдресДоставки) = 1
		|		ТОГДА МИНИМУМ(ЗаказКлиента.АдресДоставки)
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК АдресДоставки,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.АдресДоставки) = 1
		|		ТОГДА МИНИМУМ(ВЫРАЗИТЬ(ЗаказКлиента.АдресДоставкиЗначенияПолей КАК СТРОКА(1000)))
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК АдресДоставкиЗначенияПолей,
		|	ВЫБОР
		|		КОГДА НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
		|			И МИНИМУМ(ЗаказКлиента.СпособДоставки) = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|			И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(ЗаказКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(1000))) = 1
		|		ТОГДА МИНИМУМ(ВЫРАЗИТЬ(ЗаказКлиента.ДополнительнаяИнформацияПоДоставке КАК СТРОКА(1000)))
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ДополнительнаяИнформацияПоДоставке,
		|	НЕОПРЕДЕЛЕНО КАК АдресДоставкиПеревозчика,
		|	НЕОПРЕДЕЛЕНО КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	НЕОПРЕДЕЛЕНО КАК ЗонаДоставки,
		|	НЕОПРЕДЕЛЕНО КАК ВремяДоставкиС,
		|	НЕОПРЕДЕЛЕНО КАК ВремяДоставкиПо,
		|
		|	НЕ &ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками
		|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.СпособДоставки) > 1
		|		И МАКСИМУМ(ЗаказКлиента.СпособДоставкиСиламиПеревозчика) = ИСТИНА
		|		КАК ЕстьНесовместимыеСпособыДоставки,
		|
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.НаправлениеДеятельности) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияНаправлениеДеятельности
		|ИЗ (
		|ВЫБРАТЬ
		|	ЗаказКлиента.Партнер                               КАК Партнер,
		|	ЗаказКлиента.Контрагент                            КАК Контрагент,
		|	ЗаказКлиента.Договор                               КАК Договор,
		|	ЗаказКлиента.Организация                           КАК Организация,
		|	ЗаказКлиента.Соглашение                            КАК Соглашение,
		|	ЗаказКлиента.Сделка                                КАК Сделка,
		|	ЗаказКлиента.Склад                                 КАК Склад,
		|	ЗаказКлиента.Подразделение                         КАК Подразделение,
		|	ЗаказКлиента.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ЗаказКлиента.Валюта                                КАК ВалютаВзаиморасчетов,
		|	ЗаказКлиента.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|	ЗаказКлиента.ПорядокРасчетов                       КАК ПорядокРасчетов,
		|	ЗаказКлиента.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
		|	ЗаказКлиента.ТребуетсяЗалогЗаТару                  КАК ТребуетсяЗалогЗаТару,
		|	ЗаказКлиента.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказКлиента.БанковскийСчет                        КАК БанковскийСчет,
		|	ЗаказКлиента.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|	ЗаказКлиента.Грузоотправитель                      КАК Грузоотправитель,
		|	ЗаказКлиента.Грузополучатель                       КАК Грузополучатель,
		|	ЗаказКлиента.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|	ЗаказКлиента.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказКлиента.Склад.ЭтоГруппа И ЗаказКлиента.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах)
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		ИНАЧЕ
		|			ЗаказКлиента.Склад
		|	КОНЕЦ КАК СкладОтгрузки,
		|	ЗаказКлиента.СпособДоставки                        КАК СпособДоставки,
		|
		|	ЗаказКлиента.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|		                                               КАК СпособДоставкиСиламиПеревозчика,
		|	ЗаказКлиента.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаказКлиента.АдресДоставки                         КАК АдресДоставки,
		|	ЗаказКлиента.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаказКлиента.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаказКлиента.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаказКлиента.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаказКлиента.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаказКлиента.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаказКлиента.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
		|	&ИмяДокументаРТУ                                   КАК ИмяДокумента,
		|	ЗаказКлиента.НаправлениеДеятельности			   КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)
		//++ НЕ УТКА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказДавальца.Партнер                               КАК Партнер,
		|	ЗаказДавальца.Контрагент                            КАК Контрагент,
		|	ЗаказДавальца.Договор                               КАК Договор,
		|	ЗаказДавальца.Организация                           КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                        КАК Соглашение,
		|	ЗаказДавальца.Сделка                                КАК Сделка,
		|	ЗаказДавальца.Склад                                 КАК Склад,
		|	ЗаказДавальца.Подразделение                         КАК Подразделение,
		|	ЗаказДавальца.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ЗаказДавальца.Валюта                                КАК ВалютаВзаиморасчетов,
		|	ЗаказДавальца.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|	ЗаказДавальца.ПорядокРасчетов                       КАК ПорядокРасчетов,
		|	НЕОПРЕДЕЛЕНО                                        КАК ВернутьМногооборотнуюТару,
		|	НЕОПРЕДЕЛЕНО                                        КАК ТребуетсяЗалогЗаТару,
		|	НЕОПРЕДЕЛЕНО                                        КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказДавальца.БанковскийСчет                        КАК БанковскийСчет,
		|	ЗаказДавальца.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|	ЗаказДавальца.Грузоотправитель                      КАК Грузоотправитель,
		|	ЗаказДавальца.Грузополучатель                       КАК Грузополучатель,
		|	ЗаказДавальца.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|	ЗаказДавальца.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|	ВЫБОР КОГДА ЗаказДавальца.Склад.ЭтоГруппа И ЗаказДавальца.Склад.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказах) ТОГДА
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|	ИНАЧЕ
		|		ЗаказДавальца.Склад
		|	КОНЕЦ КАК СкладОтгрузки,
		|	ЗаказДавальца.СпособДоставки                        КАК СпособДоставки,
		|
		|	ЗаказДавальца.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|		                                                КАК СпособДоставкиСиламиПеревозчика,
		|	ЗаказДавальца.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаказДавальца.АдресДоставки                         КАК АдресДоставки,
		|	ЗаказДавальца.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаказДавальца.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаказДавальца.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаказДавальца.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаказДавальца.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаказДавальца.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаказДавальца.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
		|	&ИмяДокументаПД                                     КАК ИмяДокумента,
		|	ЗаказДавальца.НаправлениеДеятельности			    КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаказДавальца КАК ЗаказДавальца
		|ГДЕ
		|	ЗаказДавальца.Ссылка В (&МассивСсылок)
		//-- НЕ УТКА
		//++ НЕ УТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказПереработчику.Партнер                               КАК Партнер,
		|	ЗаказПереработчику.Контрагент                            КАК Контрагент,
		|	ЗаказПереработчику.Договор                               КАК Договор,
		|	ЗаказПереработчику.Организация                           КАК Организация,
		|	НЕОПРЕДЕЛЕНО                                             КАК Соглашение,
		|	ЗаказПереработчику.Сделка                                КАК Сделка,
		|	ЗаказПереработчику.Склад                                 КАК Склад,
		|	ЗаказПереработчику.Подразделение                         КАК Подразделение,
		|	ЗаказПереработчику.ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
		|	ЗаказПереработчику.Валюта                                КАК ВалютаВзаиморасчетов,
		|	НЕОПРЕДЕЛЕНО                                             КАК ЦенаВключаетНДС,
		|	ЗаказПереработчику.ПорядокРасчетов                       КАК ПорядокРасчетов,
		|	НЕОПРЕДЕЛЕНО                                             КАК ВернутьМногооборотнуюТару,
		|	НЕОПРЕДЕЛЕНО                                             КАК ТребуетсяЗалогЗаТару,
		|	НЕОПРЕДЕЛЕНО                                             КАК СрокВозвратаМногооборотнойТары,
		|	ЗаказПереработчику.БанковскийСчет                        КАК БанковскийСчет,
		|	НЕОПРЕДЕЛЕНО                                             КАК БанковскийСчетКонтрагента,
		|	НЕОПРЕДЕЛЕНО                                             КАК Грузоотправитель,
		|	НЕОПРЕДЕЛЕНО                                             КАК Грузополучатель,
		|	НЕОПРЕДЕЛЕНО                                             КАК БанковскийСчетГрузоотправителя,
		|	НЕОПРЕДЕЛЕНО                                             КАК БанковскийСчетГрузополучателя,
		|	НЕОПРЕДЕЛЕНО                                             КАК СкладОтгрузки,
		|	ЗаказПереработчику.СпособДоставки                        КАК СпособДоставки,
		|
		|	ЗаказПереработчику.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|		                                                     КАК СпособДоставкиСиламиПеревозчика,
		|	ЗаказПереработчику.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаказПереработчику.АдресДоставки                         КАК АдресДоставки,
		|	ЗаказПереработчику.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаказПереработчику.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаказПереработчику.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаказПереработчику.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаказПереработчику.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаказПереработчику.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаказПереработчику.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
		|	&ИмяДокументаПСП                                         КАК ИмяДокумента,
		|	ЗаказПереработчику.НаправлениеДеятельности			     КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаказПереработчику КАК ЗаказПереработчику
		|ГДЕ
		|	ЗаказПереработчику.Ссылка В (&МассивСсылок)
		//-- НЕ УТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Партнер                        КАК Партнер,
		|	ЗаявкаНаВозврат.Контрагент                     КАК Контрагент,
		|	ЗаявкаНаВозврат.Договор                        КАК Договор,
		|	ЗаявкаНаВозврат.Организация                    КАК Организация,
		|	ЗаявкаНаВозврат.Соглашение                     КАК Соглашение,
		|	ЗаявкаНаВозврат.Сделка                         КАК Сделка,
		|	ЗаявкаНаВозврат.Склад                          КАК Склад,
		|	ЗаявкаНаВозврат.Подразделение                  КАК Подразделение,
		|	ВЫБОР
		|		КОГДА
		|			ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|			ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|		ТОГДА
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|	КОНЕЦ КАК ХозяйственнаяОперация,
		|	ЗаявкаНаВозврат.Валюта                                КАК ВалютаВзаиморасчетов,
		|	ЗаявкаНаВозврат.ЦенаВключаетНДС                       КАК ЦенаВключаетНДС,
		|	ЗаявкаНаВозврат.ПорядокРасчетов                       КАК ПорядокРасчетов,
		|	ЗаявкаНаВозврат.ВернутьМногооборотнуюТару             КАК ВернутьМногооборотнуюТару,
		|	ЗаявкаНаВозврат.ТребуетсяЗалогЗаТару                  КАК ТребуетсяЗалогЗаТару,
		|	ЗаявкаНаВозврат.СрокВозвратаМногооборотнойТары        КАК СрокВозвратаМногооборотнойТары,
		|	ЗаявкаНаВозврат.БанковскийСчет                        КАК БанковскийСчет,
		|	ЗаявкаНаВозврат.БанковскийСчетКонтрагента             КАК БанковскийСчетКонтрагента,
		|	ЗаявкаНаВозврат.Грузоотправитель                      КАК Грузоотправитель,
		|	ЗаявкаНаВозврат.Грузополучатель                       КАК Грузополучатель,
		|	ЗаявкаНаВозврат.БанковскийСчетГрузоотправителя        КАК БанковскийСчетГрузоотправителя,
		|	ЗаявкаНаВозврат.БанковскийСчетГрузополучателя         КАК БанковскийСчетГрузополучателя,
		|	ЗаявкаНаВозврат.Склад                                 КАК СкладОтгрузки,
		|	ЗаявкаНаВозврат.СпособДоставки                        КАК СпособДоставки,
		|
		|	ЗаявкаНаВозврат.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика)
		|		                                               КАК СпособДоставкиСиламиПеревозчика,
		|	ЗаявкаНаВозврат.ПеревозчикПартнер                     КАК ПеревозчикПартнер,
		|	ЗаявкаНаВозврат.АдресДоставки                         КАК АдресДоставки,
		|	ЗаявкаНаВозврат.АдресДоставкиЗначенияПолей            КАК АдресДоставкиЗначенияПолей,
		|	ЗаявкаНаВозврат.АдресДоставкиПеревозчика              КАК АдресДоставкиПеревозчика,
		|	ЗаявкаНаВозврат.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
		|	ЗаявкаНаВозврат.ЗонаДоставки                          КАК ЗонаДоставки,
		|	ЗаявкаНаВозврат.ВремяДоставкиС                        КАК ВремяДоставкиС,
		|	ЗаявкаНаВозврат.ВремяДоставкиПо                       КАК ВремяДоставкиПо,
		|	ЗаявкаНаВозврат.ДополнительнаяИнформацияПоДоставке    КАК ДополнительнаяИнформацияПоДоставке,
		|	&ИмяДокументаРТУ                                      КАК ИмяДокумента,
		|	ЗаявкаНаВозврат.НаправлениеДеятельности			  	  КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В (&МассивСсылок)
		|) КАК ЗаказКлиента
		|
		|;
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.Статус КАК Статус,
		|	НЕ ЗаказКлиента.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказКлиента.Статус В (&МассивСтатусовЗаказКлиента)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус
		|	
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В (&МассивСсылок)
		|	И (НЕ ЗаказКлиента.Проведен ИЛИ
		|		  НЕ ЗаказКлиента.Статус В (&МассивСтатусовЗаказКлиента))
		//++ НЕ УТКА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказДавальца.Ссылка КАК ЗаказДавальца,
		|	ЗаказДавальца.Статус КАК Статус,
		|	НЕ ЗаказДавальца.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказДавальца.Статус В (&МассивСтатусовЗаказДавальца)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус
		|	
		|ИЗ
		|	Документ.ЗаказДавальца КАК ЗаказДавальца
		|ГДЕ
		|	ЗаказДавальца.Ссылка В (&МассивСсылок)
		|	И (НЕ ЗаказДавальца.Проведен ИЛИ
		|		  НЕ ЗаказДавальца.Статус В (&МассивСтатусовЗаказДавальца))
		//-- НЕ УТКА
		//++ НЕ УТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказПереработчику.Ссылка КАК ЗаказКлиента,
		|	ЗаказПереработчику.Статус КАК Статус,
		|	НЕ ЗаказПереработчику.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаказПереработчику.Статус В (&МассивСтатусовЗаказПереработчику)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус
		|ИЗ
		|	Документ.ЗаказПереработчику КАК ЗаказПереработчику
		|ГДЕ
		|	ЗаказПереработчику.Ссылка В (&МассивСсылок)
		|	И (НЕ ЗаказПереработчику.Проведен ИЛИ
		|		  НЕ ЗаказПереработчику.Статус В (&МассивСтатусовЗаказПереработчику))
		//-- НЕ УТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Ссылка КАК ЗаказКлиента,
		|	ЗаявкаНаВозврат.Статус КАК Статус,
		|	НЕ ЗаявкаНаВозврат.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА
		|			ЗаявкаНаВозврат.Статус В (&МассивСтатусовЗаявкаНаВозврат)
		|		ТОГДА
		|			ЛОЖЬ
		|		ИНАЧЕ
		|			ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В (&МассивСсылок)
		|	И (НЕ ЗаявкаНаВозврат.Проведен ИЛИ
		|		  НЕ ЗаявкаНаВозврат.Статус В (&МассивСтатусовЗаявкаНаВозврат))
		|");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("ИмяДокументаРТУ", НСтр("ru='реализации товаров и услуг';uk='реалізації товарів і послуг'"));
	Запрос.УстановитьПараметр("ИспользоватьСоглашенияСКлиентами", ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами"));
	Запрос.УстановитьПараметр("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками", ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками"));
	//++ НЕ УТКА
	Запрос.УстановитьПараметр("ИмяДокументаПД", НСтр("ru='передачи давальцу';uk='передачі давальцю'"));
	//-- НЕ УТКА
	//++ НЕ УТ
	Запрос.УстановитьПараметр("ИмяДокументаПСП", НСтр("ru='передачи сырья переработчику';uk='передачі сировини переробнику'"));
	//-- НЕ УТ
	
	СоответствиеСтатусов = Новый Соответствие;
	МассивДопустимыхСтатусов = Документы.ЗаказКлиента.ДопустимыеСтатусыВводаНаОсновании();
	СоответствиеСтатусов.Вставить(Тип("ПеречислениеСсылка.СтатусыЗаказовКлиентов"), МассивДопустимыхСтатусов);
	Запрос.УстановитьПараметр("МассивСтатусовЗаказКлиента", МассивДопустимыхСтатусов);
	МассивДопустимыхСтатусов = Документы.ЗаявкаНаВозвратТоваровОтКлиента.ДопустимыеСтатусыВводаНаОсновании();
	СоответствиеСтатусов.Вставить(Тип("ПеречислениеСсылка.СтатусыЗаявокНаВозвратТоваровОтКлиентов"), МассивДопустимыхСтатусов);
	Запрос.УстановитьПараметр("МассивСтатусовЗаявкаНаВозврат", МассивДопустимыхСтатусов);
	//++ НЕ УТКА
	МассивДопустимыхСтатусов = Документы.ЗаказДавальца.ДопустимыеСтатусыВводаНаОсновании();
	СоответствиеСтатусов.Вставить(Тип("ПеречислениеСсылка.СтатусыЗаказовДавальцев"), МассивДопустимыхСтатусов);
	Запрос.УстановитьПараметр("МассивСтатусовЗаказДавальца", МассивДопустимыхСтатусов);
	//-- НЕ УТКА
	//++ НЕ УТ
	МассивДопустимыхСтатусов = Документы.ЗаказПереработчику.ДопустимыеСтатусыВводаНаОсновании();
	СоответствиеСтатусов.Вставить(Тип("ПеречислениеСсылка.СтатусыЗаказовПереработчикам"), МассивДопустимыхСтатусов);
	Запрос.УстановитьПараметр("МассивСтатусовЗаказПереработчику", МассивДопустимыхСтатусов);
	//-- НЕ УТ
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	Если ПродажиСервер.СообщитьОбОшибкахФормированияДанныхЗаполненияРеализации(ВыборкаРеквизитыШапки) Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одной %Документ% на основании выделенных распоряжений невозможен';uk='Введення одного %Документ% на підставі виділених розпоряджень неможливе'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаРеквизитыШапки.ИмяДокумента);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Документы.ЗаказКлиента.ПроверитьВозможностьВводаНаОсновании(
					ВыборкаЗаказы.ЗаказКлиента,
					ВыборкаЗаказы.Статус,
					ВыборкаЗаказы.ЕстьОшибкиПроведен);
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",                               ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",                            ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",                               ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",                           ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Склад",                                 ВыборкаРеквизитыШапки.Склад);
		РеквизитыШапки.Вставить("Подразделение",                         ВыборкаРеквизитыШапки.Подразделение);
		РеквизитыШапки.Вставить("Соглашение",                            ВыборкаРеквизитыШапки.Соглашение);
		РеквизитыШапки.Вставить("ХозяйственнаяОперация",                 ВыборкаРеквизитыШапки.ХозяйственнаяОперация);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",                  ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",                       ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("ПорядокРасчетов",                       ВыборкаРеквизитыШапки.ПорядокРасчетов);
		РеквизитыШапки.Вставить("ВернутьМногооборотнуюТару",             ВыборкаРеквизитыШапки.ВернутьМногооборотнуюТару);
		РеквизитыШапки.Вставить("ТребуетсяЗалогЗаТару",                  ВыборкаРеквизитыШапки.ТребуетсяЗалогЗаТару);
		РеквизитыШапки.Вставить("РассчитыватьДатуВозвратаТарыПоКалендарю", ВыборкаРеквизитыШапки.РассчитыватьДатуВозвратаТарыПоКалендарю);
		РеквизитыШапки.Вставить("КалендарьВозвратаТары",                 ВыборкаРеквизитыШапки.КалендарьВозвратаТары);
		РеквизитыШапки.Вставить("СрокВозвратаМногооборотнойТары",        ВыборкаРеквизитыШапки.СрокВозвратаМногооборотнойТары);
		РеквизитыШапки.Вставить("СкладОтгрузки",                         ВыборкаРеквизитыШапки.СкладОтгрузки);
		РеквизитыШапки.Вставить("ЗапрещеноВыбиратьГруппуСкладов",        ВыборкаРеквизитыШапки.ЗапрещеноВыбиратьГруппуСкладов);
		РеквизитыШапки.Вставить("Сделка",                                ВыборкаРеквизитыШапки.Сделка);
		РеквизитыШапки.Вставить("Грузоотправитель",                      ВыборкаРеквизитыШапки.Грузоотправитель);
		РеквизитыШапки.Вставить("Грузополучатель",                       ВыборкаРеквизитыШапки.Грузополучатель);
		РеквизитыШапки.Вставить("БанковскийСчетГрузоотправителя",        ВыборкаРеквизитыШапки.БанковскийСчетГрузоотправителя);
		РеквизитыШапки.Вставить("БанковскийСчетГрузополучателя",         ВыборкаРеквизитыШапки.БанковскийСчетГрузополучателя);
		РеквизитыШапки.Вставить("БанковскийСчет",                        ВыборкаРеквизитыШапки.БанковскийСчет);
		РеквизитыШапки.Вставить("БанковскийСчетКонтрагента",             ВыборкаРеквизитыШапки.БанковскийСчетКонтрагента);
		РеквизитыШапки.Вставить("НаправлениеДеятельности",               ВыборкаРеквизитыШапки.НаправлениеДеятельности);
		ДоставкаТоваров.ДополнитьРеквизитамиДоставкиДанныеЗаполнения(РеквизитыШапки,ВыборкаРеквизитыШапки);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

// Формирует структуру для создания выполнения работ по одному или нескольким заказам клиентов
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
// МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию
// РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
// Булево
// Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция СформироватьДанныеЗаполненияАктовВыполненныхРабот(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗаказКлиента.Партнер)              КАК Партнер,
		|	МИНИМУМ(ЗаказКлиента.Контрагент)           КАК Контрагент,
		|	МИНИМУМ(ЗаказКлиента.Договор)              КАК Договор,
		|	МИНИМУМ(ЗаказКлиента.Организация)          КАК Организация,
		|	МИНИМУМ(ЗаказКлиента.Соглашение)           КАК Соглашение,
		|	МИНИМУМ(ЗаказКлиента.Сделка)               КАК Сделка,
		|	МИНИМУМ(ЗаказКлиента.ВалютаВзаиморасчетов) КАК ВалютаВзаиморасчетов,
		|	МИНИМУМ(ЗаказКлиента.ЦенаВключаетНДС)      КАК ЦенаВключаетНДС,
		|	МИНИМУМ(ЗаказКлиента.ПорядокРасчетов)      КАК ПорядокРасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчет
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчет)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчет,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказКлиента.БанковскийСчетКонтрагента
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказКлиента.БанковскийСчетКонтрагента)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетКонтрагента,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Партнер) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПартнер,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Контрагент) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Договор) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияДоговор,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Организация) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияОрганизация,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Соглашение) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСоглашение,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.Сделка) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСделка,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ВалютаВзаиморасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ЦенаВключаетНДС) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.ПорядокРасчетов) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПорядокРасчетов,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказКлиента.НаправлениеДеятельности) > 1
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияНаправлениеДеятельности
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказКлиента.Партнер КАК Партнер,
		|		ЗаказКлиента.Контрагент КАК Контрагент,
		|		ЗаказКлиента.Договор КАК Договор,
		|		ЗаказКлиента.Организация КАК Организация,
		|		ЗаказКлиента.Соглашение КАК Соглашение,
		|		ЗаказКлиента.Сделка КАК Сделка,
		|		ЗаказКлиента.Валюта КАК ВалютаВзаиморасчетов,
		|		ЗаказКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|		ЗаказКлиента.ПорядокРасчетов КАК ПорядокРасчетов,
		|		ЗаказКлиента.БанковскийСчет,
		|		ЗаказКлиента.БанковскийСчетКонтрагента,
		|		ЗаказКлиента.НаправлениеДеятельности
		|	ИЗ
		|		Документ.ЗаказКлиента КАК ЗаказКлиента
		|	ГДЕ
		|		ЗаказКлиента.Ссылка В(&МассивСсылок)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗаявкаНаВозврат.Партнер,
		|		ЗаявкаНаВозврат.Контрагент,
		|		ЗаявкаНаВозврат.Договор,
		|		ЗаявкаНаВозврат.Организация,
		|		ЗаявкаНаВозврат.Соглашение,
		|		ЗаявкаНаВозврат.Сделка,
		|		ЗаявкаНаВозврат.Валюта,
		|		ЗаявкаНаВозврат.ЦенаВключаетНДС,
		|		ЗаявкаНаВозврат.ПорядокРасчетов,
		|		ЗаявкаНаВозврат.БанковскийСчет,
		|		ЗаявкаНаВозврат.БанковскийСчетКонтрагента,
		|		ЗаявкаНаВозврат.НаправлениеДеятельности
		|	ИЗ
		|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|	ГДЕ
		|		ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)) КАК ЗаказКлиента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.Статус КАК Статус,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиХозяйственнаяОперация,
		|	(НЕ ЗаказКлиента.Проведен) КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|				ИЛИ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьОшибкиСтатус,
		|	ИСТИНА КАК РаспоряжениеЗаказ,
		|	ЗаказКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка В(&МассивСсылок)
		|	И ((НЕ ЗаказКлиента.Проведен)
		|			ИЛИ (НЕ ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту))
		|			ИЛИ ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
		|				И ЗаказКлиента.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаявкаНаВозврат.Ссылка,
		|	ЗаявкаНаВозврат.Статус,
		|	(НЕ ЗаявкаНаВозврат.Проведен),
		|	ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|				ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|				ИЛИ ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ЛОЖЬ,
		|	ЗаявкаНаВозврат.ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
		|ГДЕ
		|	ЗаявкаНаВозврат.Ссылка В(&МассивСсылок)
		|	И ((НЕ ЗаявкаНаВозврат.Проведен)
		|			ИЛИ (НЕ(ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
		|					ИЛИ ЗаявкаНаВозврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)))
		|			ИЛИ ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
		|				И ЗаявкаНаВозврат.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""';uk='У виділених розпоряджень відрізняється поле ""%ПредставлениеПоля%""'");
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Партнер';uk='Партнер'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Контрагент';uk='Контрагент'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Организация';uk='Організація'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Соглашение';uk='Оферта'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Договор';uk='Договір'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСделка Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Сделка';uk='Угода'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Валюта взаиморасчетов';uk='Валюта взаєморозрахунків'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Цена включает НДС';uk='Ціна включає ПДВ'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПорядокРасчетов Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Порядок расчетов';uk='Порядок розрахунків'")),
			,
			,
			,
			Отказ);
		
		КонецЕсли;
		
	Если ВыборкаРеквизитыШапки.ЕстьОтличияНаправлениеДеятельности Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", НСтр("ru='Направление деятельности';uk='Напрям діяльності'")),
			,
			,
			,
			Отказ);
		
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Или
		ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Или
		ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСоглашение Или
		ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСделка Или
		ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Или
		ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Или
		ВыборкаРеквизитыШапки.ЕстьОтличияПорядокРасчетов Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного акта выполненных работ на основании выделенных распоряжений невозможен';uk='Введення одного акта виконаних робіт на підставі виділених розпоряджень неможливе'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.РаспоряжениеЗаказ Тогда
					Документы.ЗаказКлиента.ПроверитьВозможностьВводаНаОсновании(
						ВыборкаЗаказы.ЗаказКлиента,
						ВыборкаЗаказы.Статус,
						ВыборкаЗаказы.ЕстьОшибкиПроведен);
				Иначе
					Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПроверитьВозможностьВводаНаОсновании(
						ВыборкаЗаказы.ЗаказКлиента,
						ВыборкаЗаказы.Статус,
						ВыборкаЗаказы.ЕстьОшибкиПроведен);
				КонецЕсли;
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.';uk='Документ %Документ% не проведено. Введення на підставі непроведенного документа заборонене.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказКлиента);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиХозяйственнаяОперация Тогда
					
					ТекстОшибки = НСтр("ru='Ввод на основании документа с хозяйственной операцией %ХозяйственнаяОперация% невозможен.';uk='Введення на підставі документа з господарською операцією %ХозяйственнаяОперация% неможливе.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ХозяйственнаяОперация%", ВыборкаЗаказы.ХозяйственнаяОперация);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",                        ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",                     ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",                        ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",                    ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("Соглашение",                     ВыборкаРеквизитыШапки.Соглашение);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",           ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",                ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("ПорядокРасчетов",                ВыборкаРеквизитыШапки.ПорядокРасчетов);
		РеквизитыШапки.Вставить("Сделка",                         ВыборкаРеквизитыШапки.Сделка);
		РеквизитыШапки.Вставить("БанковскийСчетКонтрагента",      ВыборкаРеквизитыШапки.БанковскийСчетКонтрагента);
		РеквизитыШапки.Вставить("БанковскийСчет",                 ВыборкаРеквизитыШапки.БанковскийСчет);
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

//++ НЕ УТКА

// Формирует структуру для создания реализации услуг по переработке по одному или нескольким заказам клиентов
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
// МассивСсылок   - Массив - заказы поставщикам, по которым необходимо ввести реализацию
// РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
// Булево
// Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция СформироватьДанныеЗаполненияОтчетаДавальцу(МассивСсылок, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	МИНИМУМ(ЗаказДавальца.Партнер)              КАК Партнер,
		|	МИНИМУМ(ЗаказДавальца.Контрагент)           КАК Контрагент,
		|	МИНИМУМ(ЗаказДавальца.Договор)              КАК Договор,
		|	МИНИМУМ(ЗаказДавальца.Организация)          КАК Организация,
		|	МИНИМУМ(ЗаказДавальца.ВалютаВзаиморасчетов) КАК ВалютаВзаиморасчетов,
		|	МИНИМУМ(ЗаказДавальца.ЦенаВключаетНДС)      КАК ЦенаВключаетНДС,
		|	МИНИМУМ(ЗаказДавальца.СтавкаНДС)            КАК СтавкаНДС,
		|	МИНИМУМ(ЗаказДавальца.Номенклатура)         КАК Номенклатура,
		|	МИНИМУМ(ЗаказДавальца.Характеристика)       КАК Характеристика,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказДавальца.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказДавальца.БанковскийСчет
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Организация) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказДавальца.БанковскийСчет)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетОрганизации,
		|	ВЫБОР
		|		КОГДА
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
		|				ВЫБОР
		|					КОГДА
		|						ЗаказДавальца.БанковскийСчетКонтрагента <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|					ТОГДА
		|						ЗаказДавальца.БанковскийСчетКонтрагента
		|					ИНАЧЕ
		|						NULL
		|				КОНЕЦ) = 1 И
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Контрагент) = 1
		|		ТОГДА
		|			МАКСИМУМ(ЗаказДавальца.БанковскийСчетКонтрагента)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК БанковскийСчетКонтрагента,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Партнер) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияПартнер,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Контрагент) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Договор) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияДоговор,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Организация) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияОрганизация,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.ВалютаВзаиморасчетов) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияВалютаВзаиморасчетов,
		|
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.ЦенаВключаетНДС) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияЦенаВключаетНДС,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.СтавкаНДС) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияСтавкаНДС,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Номенклатура) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияНоменклатура,
		|
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаказДавальца.Характеристика) > 1 ТОГДА
		|		ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОтличияХарактеристика
		|
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказДавальца.Партнер					КАК Партнер,
		|		ЗаказДавальца.Контрагент				КАК Контрагент,
		|		ЗаказДавальца.Договор					КАК Договор,
		|		ЗаказДавальца.Организация				КАК Организация,
		|		ЗаказДавальца.Валюта					КАК ВалютаВзаиморасчетов,
		|		ЗаказДавальца.СтавкаНДС					КАК СтавкаНДС,
		|		ЗаказДавальца.Номенклатура				КАК Номенклатура,
		|		ЗаказДавальца.Характеристика			КАК Характеристика,
		|		ЗаказДавальца.ЦенаВключаетНДС			КАК ЦенаВключаетНДС,
		|		ЗаказДавальца.БанковскийСчет			КАК БанковскийСчет,
		|		ЗаказДавальца.БанковскийСчетКонтрагента	КАК БанковскийСчетКонтрагента
		|	ИЗ
		|		Документ.ЗаказДавальца КАК ЗаказДавальца
		|	ГДЕ
		|		ЗаказДавальца.Ссылка В(&МассивСсылок)) КАК ЗаказДавальца
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказДавальца.Ссылка				КАК ЗаказДавальца,
		|	ЗаказДавальца.Статус				КАК Статус,
		|	(НЕ ЗаказДавальца.Проведен)			КАК ЕстьОшибкиПроведен,
		|	ВЫБОР КОГДА ЗаказДавальца.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовДавальцев.КОтгрузке)
		|			ИЛИ ЗаказДавальца.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовДавальцев.Закрыт) ТОГДА
		|		ЛОЖЬ
		|	ИНАЧЕ
		|		ИСТИНА
		|	КОНЕЦ								КАК ЕстьОшибкиСтатус,
		|	ИСТИНА								КАК РаспоряжениеЗаказ,
		|	ЗаказДавальца.ХозяйственнаяОперация КАК ХозяйственнаяОперация
		|ИЗ
		|	Документ.ЗаказДавальца КАК ЗаказДавальца
		|ГДЕ
		|	ЗаказДавальца.Ссылка В(&МассивСсылок)
		|	И (НЕ ЗаказДавальца.Проведен
		|		ИЛИ ЗаказДавальца.Статус НЕ В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовДавальцев.КОтгрузке),
		|									   ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовДавальцев.Закрыт)))");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Партнер';uk='Партнер'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Контрагент';uk='Контрагент'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Организация';uk='Організація'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Договор';uk='Договір'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Валюта взаиморасчетов';uk='Валюта взаєморозрахунків'"), Отказ);
	КонецЕсли;
	
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Цена включает НДС';uk='Ціна включає ПДВ'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияСтавкаНДС Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Ставка НДС';uk='Ставка ПДВ'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияНоменклатура Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Номенклатура';uk='Номенклатура'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияХарактеристика Тогда
		СообщитьОРазличииПолейЗаказаДавальца(НСтр("ru='Характеристика';uk='Характеристика'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ЕстьОтличияПартнер Или
		ВыборкаРеквизитыШапки.ЕстьОтличияКонтрагент Или
		ВыборкаРеквизитыШапки.ЕстьОтличияОрганизация Или
		ВыборкаРеквизитыШапки.ЕстьОтличияДоговор Или
		ВыборкаРеквизитыШапки.ЕстьОтличияВалютаВзаиморасчетов Или
		ВыборкаРеквизитыШапки.ЕстьОтличияСтавкаНДС Или
		ВыборкаРеквизитыШапки.ЕстьОтличияНоменклатура Или
		ВыборкаРеквизитыШапки.ЕстьОтличияХарактеристика Или
		ВыборкаРеквизитыШапки.ЕстьОтличияЦенаВключаетНДС Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного акта выполненных работ на основании выделенных распоряжений невозможен';uk='Введення одного акта виконаних робіт на підставі виділених розпоряджень неможливе'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			,
			,
			Отказ);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаказы.Следующий() Цикл
				
				Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.';uk='Документ %Документ% не проведено. Введення на підставі непроведенного документа заборонене.'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказДавальца);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ);
					
				ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К отгрузке"", ""Закрыт"".';uk='Документ %Документ% знаходиться в статусі ""%Статус%"". Введення на підставі дозволене тільки в статусах ""До відвантаження"", ""Закритий"".'");
					
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.ЗаказДавальца);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстОшибки,
						,
						,
						,
						Отказ);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		РеквизитыШапки.Вставить("Партнер",						ВыборкаРеквизитыШапки.Партнер);
		РеквизитыШапки.Вставить("Контрагент",					ВыборкаРеквизитыШапки.Контрагент);
		РеквизитыШапки.Вставить("Договор",						ВыборкаРеквизитыШапки.Договор);
		РеквизитыШапки.Вставить("Организация",					ВыборкаРеквизитыШапки.Организация);
		РеквизитыШапки.Вставить("ВалютаВзаиморасчетов",			ВыборкаРеквизитыШапки.ВалютаВзаиморасчетов);
		РеквизитыШапки.Вставить("ЦенаВключаетНДС",				ВыборкаРеквизитыШапки.ЦенаВключаетНДС);
		РеквизитыШапки.Вставить("БанковскийСчетКонтрагента",	ВыборкаРеквизитыШапки.БанковскийСчетКонтрагента);
		РеквизитыШапки.Вставить("БанковскийСчетОрганизации",	ВыборкаРеквизитыШапки.БанковскийСчетОрганизации);
		РеквизитыШапки.Вставить("СтавкаНДС",					ВыборкаРеквизитыШапки.СтавкаНДС);
		РеквизитыШапки.Вставить("Номенклатура",					ВыборкаРеквизитыШапки.Номенклатура);
		РеквизитыШапки.Вставить("Характеристика",				ВыборкаРеквизитыШапки.Характеристика);
		
	КонецЕсли;
	
	Возврат Не Отказ;
	
КонецФункции

Процедура СообщитьОРазличииПолейЗаказаДавальца(ПредставлениеПоля, Отказ)
	
	ТекстСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""';uk='У виділених розпоряджень відрізняється поле ""%ПредставлениеПоля%""'");
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		СтрЗаменить(ТекстСообщения, "%ПредставлениеПоля%", ПредставлениеПоля),
		,
		,
		,
		Отказ);
	
КонецПроцедуры

//-- НЕ УТКА

// Функция проверки наличия графика оплаты в соглашении
//
// Параметры:
// 		Соглашение - СправочникСсылка.Соглашение
//
// Возвращаемое значение:
// 		Булево - "Истина", если в графике есть хотя бы один этап
//
Функция ГрафикСоглашенияЗаполнен(Соглашение) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Соглашение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоглашенияСКлиентамиЭтапыГрафикаОплаты.Ссылка
	|ИЗ
	|	Справочник.СоглашенияСКлиентами.ЭтапыГрафикаОплаты КАК СоглашенияСКлиентамиЭтапыГрафикаОплаты
	|ГДЕ
	|	СоглашенияСКлиентамиЭтапыГрафикаОплаты.Ссылка = &Соглашение");
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Перезаполняет данные формы накладной по ордерам
//
// Параметры:
// 		ДанныеФормы - ДанныеФормыСтруктура - перезаполняемая накладная
//
// Возвращаемое значение:
// 		Булево - "Истина", если накладная перезаполнена.
//
Функция ПерезаполнитьНакладнуюПоОрдерам(ДанныеФормы) Экспорт
	
	СтруктураЗаполнения = ПродажиСервер.ПерезаполнитьНакладнуюПоОрдерам(ДанныеФормы);
	Возврат СтруктураЗаполнения;
	
КонецФункции

#Область ПроцедурыИФункцииДляУстановкиСтатусовСоглашений

// Устанавливает статус "НеСогласовано" у выделенных в списке соглашений
//
// Параметры:
// Соглашения - Массив - массив соглашений с клиентами
//
// Возвращаемое значение:
// Число
// Количество успешно обработанных соглашений
//
Функция УстановитьСтатусСоглашенийСКлиентамиНеСогласовано (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.НеСогласовано);

КонецФункции

// Устанавливает статус "Действует" у выделенных в списке соглашений
//
// Параметры:
// Соглашения - Массив - массив соглашений с клиентами
//
Функция УстановитьСтатусСоглашенийСКлиентамиДействует (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.Действует);

КонецФункции

// Устанавливает статус "Закрыто" у выделенных в списке соглашений
//
// Параметры:
// Соглашения - Массив - массив соглашений с клиентами
//
// Возвращаемое значение: 
// Число.
// Количество успешно обработанных соглашений
//
Функция УстановитьСтатусСоглашенийСКлиентамиЗакрыто (Знач Соглашения) Экспорт
	
	Возврат Справочники.СоглашенияСКлиентами.УстановитьСтатус(Соглашения, Перечисления.СтатусыСоглашенийСКлиентами.Закрыто);

КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииДляРаботыСГТД

// Проверяет способ доставки заказа.
//
// Параметры:
//  ДокументСсылка - РеализацияТоваровУслуг - ссылка на документ.
//  МожноСоздатьТТН - Булево - Возможность создания ТТН.
//
Процедура ПроверитьСпособыДоставкиЗаказов(ДокументСсылка, МожноСоздатьТТН) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументТовары.ЗаказКлиента КАК Заказ
	|ПОМЕСТИТЬ ТаблицаЗаказы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.Заказ КАК Заказ,
	|	ТаблицаЗаказы.Заказ.СпособДоставки КАК СпособДоставки
	|ИЗ
	|	ТаблицаЗаказы КАК ТаблицаЗаказы
	|ГДЕ
	|	ТаблицаЗаказы.Заказ.СпособДоставки В (&СпособыДоставкиСНашимУчастием)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ТаблицаЗаказы.Заказ) КАК Количество
	|ИЗ
	|	ТаблицаЗаказы КАК ТаблицаЗаказы";	
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("СпособыДоставкиСНашимУчастием", 
		ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
			ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками")));
	
	Результаты = Запрос.ВыполнитьПакет();
	ВыборкаЗаказы = Результаты[1].Выбрать();
	ВыборкаКоличество = Результаты[2].Выбрать();
	
	Пока ВыборкаЗаказы.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru='В заказе ""%Заказ%"" указан способ доставки ""%СпособДоставки%"". Транспортные накладные в этом случае создаются при оформлении задания на перевозку.';uk='У замовленні ""%Заказ%"" вказаний спосіб доставки ""%СпособДоставки%"". Транспортні накладні в цьому випадку створюються при оформленні завдання на перевезення.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СпособДоставки%", ВыборкаЗаказы.СпособДоставки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заказ%",          ВыборкаЗаказы.Заказ);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЦикла;
	
	ВыборкаКоличество.Следующий();
	
	// Если выше мы поругались на все заказы из ТЧ Товары, то создать ТТН невозможно вообще.
	Если ВыборкаКоличество.Количество = ВыборкаЗаказы.Количество() Тогда 
		МожноСоздатьТТН = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Проверяет наличие ТН.
//
// Параметры:
//  ДокументСсылка - РеализацияТоваровУслуг - ссылка на документ.
//
Функция ПроверитьНаличиеТранспортныхНакладных(ДокументСсылка) Экспорт

	Отбор = Новый Структура("ДокументОснование, Дата",ДокументСсылка,ДокументСсылка.Дата);
	
	Возврат Документы.ТранспортнаяНакладная.ПроверитьНаличиеОформленныхТранспортныхНакладных(Отбор);

КонецФункции

// Получает адрес хранилища с отбором по ТТН
//
// Параметры:
//	Форма - УправляемаяФорма - форма документа реализации.
//
Функция ПолучитьАдресХранилищаСПараметрамиОтбораТТН(ДокументСсылка) Экспорт
	
	ТаблицаПараметровОтбора = Документы.ТранспортнаяНакладная.ПолучитьПараметрыОтбораТТН(ДокументСсылка);
	Возврат ПоместитьВоВременноеХранилище(ТаблицаПараметровОтбора);
	
КонецФункции

// Оформляет ТН
//
// Параметры:
//  ДокументСсылка - РеализацияТоваровУслуг - ссылка на документ.
//
Функция ОформитьТранспортныеНакладныеНаСервере(ДокументСсылка) Экспорт
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументСсылка);
	СозданныеТТН = Документы.ТранспортнаяНакладная.СоздатьТранспортныеНакладные(МассивОбъектов);
	
	Возврат СозданныеТТН;
	
КонецФункции

// Получение данных ТН
//
// Параметры:
//  ДокументСсылка - РеализацияТоваровУслуг - ссылка на документ.
//
Функция ПолучитьДанныеТранспортныхНакладныхНаСервере(ДокументСсылка) Экспорт
	
	Возврат Документы.ТранспортнаяНакладная.ПолучитьИнформациюТранспортныхНакладных(ДокументСсылка)
	
КонецФункции

// Проверить доступность ТН
//
// Параметры:
//  ДокументСсылка - РеализацияТоваровУслуг - ссылка на документ.
//
Функция ПроверитьИспользованиеИДоступТТН() Экспорт

	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьТТН") И ПравоДоступа("Чтение", Метаданные.Документы.ТранспортнаяНакладная);

КонецФункции

#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
