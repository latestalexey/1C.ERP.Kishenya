////////////////////////////////////////////////////////////////////////////////
// Подсистема подработок (кратковременных трудовых соглашений сотрудников).
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Прекращает все действующие на дату увольнения подработки сотрудника.
//
// Параметры:
// 	РегистраторОбъект - ДокументОбъект - документ, регистрирующий увольнение.
// 	Сотрудник - СправочникСсылка.Сотрудники - увольняемый основной сотрудник.
// 	ДатаУвольнения - Дата - дата увольнения основного сотрудника.
//
Процедура ПрекратитьПодработкиСотрудника(РегистраторОбъект, Сотрудник, ДатаУвольнения) Экспорт
	
	// 1 Получаем Все действующие подработки сотрудника 
	//  по условию ГоловнойСотрудник, ВидСобытия - Увольнение, на дату увольнения.
	// 2 Делаем движения увольнение по РС Сведения По Подработкам.
	// 3 Прекращаем все плановые начисления по найденным подработкам.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Сотрудник,
	               |	&ДатаУвольнения КАК НачалоПериода,
	               |	&ДатаУвольнения КАК ОкончаниеПериода
				   |ПОМЕСТИТЬ ВТСотрудникиПериоды
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |ГДЕ
	               |	Сотрудники.ГоловнойСотрудник = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ДатаУвольнения", ДатаУвольнения);
	Запрос.Выполнить();
	
	ПрекратитьПодработкиСотрудниковПоВременнойТаблице(РегистраторОбъект, Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Прекращает все действующие подработки сотрудников.
//
// Параметры:
// 	РегистраторОбъект - ДокументОбъект - документ, регистрирующий увольнение.
// 	Сотрудники - ТаблицаЗначений
//					* Сотрудник - СправочникСсылка.Сотрудники - увольняемый основной сотрудник.
// 					* ДатаУвольнения - Дата - дата увольнения основного сотрудника.
//
Процедура ПрекратитьПодработкиСотрудников(РегистраторОбъект, Сотрудники) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	Сотрудники.ДатаУвольнения КАК ДатаУвольнения
		|ПОМЕСТИТЬ ВТГоловныеСотрудники
		|ИЗ
		|	&Сотрудники КАК Сотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	ГоловныеСотрудники.ДатаУвольнения КАК НачалоПериода,
		|	ГоловныеСотрудники.ДатаУвольнения КАК ОкончаниеПериода
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТГоловныеСотрудники КАК ГоловныеСотрудники
		|		ПО Сотрудники.ГоловнойСотрудник = ГоловныеСотрудники.Сотрудник
		|ГДЕ
		|	Сотрудники.Ссылка <> ГоловныеСотрудники.Сотрудник";
		
	Запрос.Выполнить();
	
	ПрекратитьПодработкиСотрудниковПоВременнойТаблице(РегистраторОбъект, Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура ПрекратитьПодработкиСотрудниковПоВременнойТаблице(РегистраторОбъект, МенеджерВременныхТаблиц) Экспорт
	
	Организация = РегистраторОбъект.Организация;
	Ссылка = РегистраторОбъект.Ссылка;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ПараметрыПолученияПодработок = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоВременнойТаблице();
	
	ПараметрыПолученияПодработок.РаботникиПоТрудовымДоговорам =  Ложь;
	ПараметрыПолученияПодработок.ПодработкиРаботниковПоТрудовымДоговорам = Истина;
	ПараметрыПолученияПодработок.РаботникиПоДоговорамГПХ = Ложь;
	
	КадровыйУчет.СоздатьВТРабочиеМестаСотрудниковПоВременнойТаблице(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияПодработок);
	
	Запрос.Текст = "ВЫБРАТЬ *, СотрудникиПериоды.ОкончаниеПериода КАК ДатаУвольнения ИЗ ВТРабочиеМестаСотрудников КАК РабочиеМестаСотрудников
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиПериоды КАК СотрудникиПериоды ПО РабочиеМестаСотрудников.ГоловнойСотрудник = СотрудникиПериоды.Сотрудник";
	ПодработкиСотрудника = Запрос.Выполнить().Выгрузить();
	
	Если ПодработкиСотрудника.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КадровыеСобытия =  Неопределено;
	Для Каждого Подработка Из ПодработкиСотрудника Цикл
		
		Если КадровыеСобытия = Неопределено Тогда
			КадровыеСобытия = Документы.ПрекращениеПодработки.КадровыеСобытияУвольнение(Подработка.Сотрудник, Подработка.ДатаУвольнения, Подработка.ФизическоеЛицо);
			Продолжить;
		КонецЕсли;
		
		КадровоеСобытие = Документы.ПрекращениеПодработки.КадровыеСобытияУвольнение(Подработка.Сотрудник, Подработка.ДатаУвольнения, Подработка.ФизическоеЛицо);
		ЗаполнитьЗначенияСвойств(КадровыеСобытия.Добавить(), КадровоеСобытие[0]);

	КонецЦикла;
	
	РегистрыСведений.СостоянияПодработок.СформироватьДвижения(РегистраторОбъект, РегистраторОбъект.Движения, КадровыеСобытия);
	
	Для Каждого Подработка Из ПодработкиСотрудника Цикл
		
		// Прекращаем плановые начисления и удержания.
		РасчетЗарплатыРасширенный.ПрекратитьВсеПлановыеНачисленияУдержания(РегистраторОбъект.Движения, Подработка.Сотрудник, КонецДня(Подработка.ДатаУвольнения) + 1, Организация, Ложь);
		
		// Регистрируем состояние
		СостоянияСотрудников.ЗарегистрироватьСостояниеСотрудника(РегистраторОбъект.Движения, Ссылка, Подработка.Сотрудник, Перечисления.СостоянияСотрудника.Увольнение, КонецДня(Подработка.ДатаУвольнения) + 1);
		
	КонецЦикла;	

КонецПроцедуры

Процедура ДобавитьДанныеДляРегистрацииПрекращенияПодработок(ДанныеДляПроведения, ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УвольнениеСпискомСотрудники.Сотрудник,
		|	УвольнениеСпискомСотрудники.ДатаУвольнения
		|ИЗ
		|	Документ.УвольнениеСписком.Сотрудники КАК УвольнениеСпискомСотрудники
		|ГДЕ
		|	УвольнениеСпискомСотрудники.Ссылка = &Ссылка";
	
	ДанныеДляПроведения.Вставить("ДанныеДляРегистрацииПрекращенияПодработок", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#Область НастройкиВариантовОтчетов

// Содержит настройки размещения вариантов отчетов в панели отчетов.
// Описание см. ЗарплатаКадрыВариантыОтчетов.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.Подработки);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.НазначениеПодработки);
	СписокОбъектов.Добавить(Документы.ПрекращениеПодработки); 
	
КонецПроцедуры

Процедура ПроверкаЗаполненияДокументаНачальнаяШтатнаяРасстановка(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодработки") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиПодработок = Объект.Сотрудники.НайтиСтроки(Новый Структура("ВидЗанятости", Перечисления.ВидыЗанятости.Подработка));
	Если СтрокиПодработок.Количество() > 0 Тогда
		ВызватьИсключение НСтр("ru='Для регистрации данных по подработкам необходимо включить настройку кадрового учета ""Использовать подработки""';uk='Для реєстрації даних про підробіток необхідно включити налаштування кадрового обліку ""Використовувати підробітку""'");
	КонецЕсли; 
	
КонецПроцедуры


#Область ДатыЗапретаИзменения

Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.НазначениеПодработки", "ДатаНачала", "Зарплата", "Организация");
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.ПрекращениеПодработки", "ДатаОкончания", "Зарплата", "Организация");

КонецПроцедуры

#КонецОбласти

#Область МногофункциональныеДокументы

Функция ТипыМногофункциональныхДокументов() Экспорт 
	
	МногофункциональныеДокументы = Новый Соответствие;
	
	ОписаниеДокумента = ЗарплатаКадрыРасширенныйКлиентСервер.ОписаниеМногофункциональногоДокумента();
	ОписаниеДокумента.РеквизитСостояние = "Утверждено";
	ОписаниеДокумента.ВторойОтветственный = Неопределено;
	ОписаниеДокумента.ВидУчета = "ПлановыеНачисления";
	ОписаниеДокумента.СообщениеДокументНеУтвержден = НСтр("ru='%1 - документ не утвержден.';uk='%1 - документ не затверджено.'");
	
	МногофункциональныеДокументы.Вставить(Тип("ДокументСсылка.НазначениеПодработки"), ОписаниеДокумента);
		
	Возврат МногофункциональныеДокументы;
	
КонецФункции
	
#КонецОбласти

#КонецОбласти