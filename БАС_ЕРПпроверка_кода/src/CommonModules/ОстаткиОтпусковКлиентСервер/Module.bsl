////////////////////////////////////////////////////////////////////////////////
// ПОДСИСТЕМА ОСТАТКИ ОТПУСКОВ
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьКомментарииДействийСЕжегоднымОтпуском(СтрокаЕжегодногоОтпуска) Экспорт
	
	Если СтрокаЕжегодногоОтпуска.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.Утвердить") И (Не СтрокаЕжегодногоОтпуска.ДействующийОтпуск) Тогда
		СтрокаЕжегодногоОтпуска.Комментарий = НСтр("ru='Новый ежегодный отпуск';uk='Нова щорічна відпустка'");
		
	ИначеЕсли СтрокаЕжегодногоОтпуска.Действие = ПредопределенноеЗначение("Перечисление.ДействияСЕжегоднымиОтпусками.Отменить") Тогда
		СтрокаЕжегодногоОтпуска.Комментарий = НСтр("ru='Ежегодный отпуск больше не предоставляется';uk='Щорічна відпустка більше не надається'");
		
	ИначеЕсли Не СтрокаЕжегодногоОтпуска.ДействующийОтпуск Тогда
		СтрокаЕжегодногоОтпуска.Комментарий = НСтр("ru='Новый ежегодный отпуск';uk='Нова щорічна відпустка'");
		
	Иначе
		СтрокаЕжегодногоОтпуска.Комментарий = "";
		Если СтрокаЕжегодногоОтпуска.КоличествоДнейВГод > СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод Тогда
			СтрокаЕжегодногоОтпуска.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Увеличен на +%1';uk='Збільшено на +%1'"), 
			СтрокаЕжегодногоОтпуска.КоличествоДнейВГод - СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод);
		ИначеЕсли СтрокаЕжегодногоОтпуска.КоличествоДнейВГод < СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод Тогда
			СтрокаЕжегодногоОтпуска.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Уменьшен на %1';uk='Зменшено на %1'"), 
			СтрокаЕжегодногоОтпуска.КоличествоДнейВГод - СтрокаЕжегодногоОтпуска.ТекущееКоличествоДнейВГод);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ДатаОкончанияОтпуска(Знач Сотрудник, Знач ДатаНачала, Знач КоличествоДней, Знач ОтпускЯвляетсяЕжегодным) Экспорт
	
	Если ОтпускЯвляетсяЕжегодным Тогда
		ДатаОкончания = ОстаткиОтпусковВызовСервера.ДатаОкончанияЕжегодногоОтпуска(Сотрудник, ДатаНачала, КоличествоДней);
	Иначе
		ДатаОкончания = НачалоДня(ДатаНачала) + (КоличествоДней - 1) * 86400;
	КонецЕсли; 
	
	Возврат ДатаОкончания;
	
КонецФункции

Процедура ВнестиСводныйОстатокВТаблицуПрав(Форма) Экспорт
	
	Если ТипЗнч(Форма) = Тип("УправляемаяФорма") Тогда
		ИмяРеквизитаОстатков = "КоличествоДней";
	Иначе
		ИмяРеквизитаОстатков = "ОстатокНаДатуОстатков";
	КонецЕсли;
	
	УдалитьПустыеСтрокиИзТаблицы(Форма.ОстаткиОтпусковПоРабочимГодам);
	СводныеОстаткиОтпусков = СводныеОстаткиВидовОтпусков(Форма.ОстаткиОтпусковПоРабочимГодам);
	
	ПосчитаныйОтпуск = Новый СписокЗначений;
	
	Для каждого ОстатокОтпуска Из СводныеОстаткиОтпусков Цикл
		НайденныеСтроки = Форма.ЕжегодныеОтпуска.НайтиСтроки(Новый Структура("ВидЕжегодногоОтпуска", ОстатокОтпуска.Ключ));
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];
		Иначе	
			НайденнаяСтрока = Форма.ЕжегодныеОтпуска.Добавить();
			НайденнаяСтрока.ВидЕжегодногоОтпуска = ОстатокОтпуска.Ключ;
		КонецЕсли;
		НайденнаяСтрока[ИмяРеквизитаОстатков] = ОстатокОтпуска.Значение;
		ПосчитаныйОтпуск.Добавить(НайденнаяСтрока.ВидЕжегодногоОтпуска);
	КонецЦикла; 
	
	Для каждого ЕжегоднаяСтрока Из Форма.ЕжегодныеОтпуска Цикл
		Если ПосчитаныйОтпуск.НайтиПоЗначению(ЕжегоднаяСтрока.ВидЕжегодногоОтпуска) = Неопределено Тогда
			ЕжегоднаяСтрока[ИмяРеквизитаОстатков] = 0;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

Процедура УдалитьПустыеСтрокиИзТаблицы(ТабличнаяЧасть)

	МассивУдаляемыхСтрок = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ВидЕжегодногоОтпуска) Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого УдаляемаяСтрока Из МассивУдаляемыхСтрок Цикл
		ТабличнаяЧасть.Удалить(УдаляемаяСтрока);
	КонецЦикла;

КонецПроцедуры

Функция СводныеОстаткиВидовОтпусков(ТабличнаяЧасть)

	СводныеОстаткиОтпусков = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		КоличествоОстаткаОтпуска = СводныеОстаткиОтпусков.Получить(СтрокаТаблицы.ВидЕжегодногоОтпуска);
		Если КоличествоОстаткаОтпуска = Неопределено Тогда
			СводныеОстаткиОтпусков.Вставить(СтрокаТаблицы.ВидЕжегодногоОтпуска, СтрокаТаблицы.Остаток);
		Иначе
			СводныеОстаткиОтпусков[СтрокаТаблицы.ВидЕжегодногоОтпуска] = КоличествоОстаткаОтпуска + СтрокаТаблицы.Остаток;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат СводныеОстаткиОтпусков;

КонецФункции

#КонецОбласти
