#Область СлужебныеПроцедурыИФункции

// Возвращает подготовленный запрос, формирующий временную таблицу с указанным именем.
// Временная таблица содержит поля Период, ФизическоеЛицо, ВидЗастрахованногоЛица.
//
// Параметры:
//		ТолькоРазрешенные
//		ОписательВременнойТаблицыОтборов - Структура, см. КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц.
//		ПоляОтбораПериодическихДанных - Соответствие
//		ИмяВТСведенияОСтатусахЗастрахованныхЛиц - Строка, имя временной таблицы, созданной в результате выполнения запроса.
//
// ВозвращаемоеЗначение:
//		Запрос
//
Функция ЗапросВТСведенияОСтатусахЗастрахованныхЛиц(ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИмяВТСведенияОСтатусахЗастрахованныхЛиц = "ВТСведенияОСтатусахЗастрахованныхЛиц") Экспорт
	
	ИмяВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц");
	
	ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
		ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц,
		"Период,ФизическоеЛицо");
	
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("Период", ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	ОписаниеФильтра.СоответствиеИзмеренийРегистраИзмерениямФильтра.Вставить("ФизическоеЛицо", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	
	ПоляОтбора = Неопределено;
	Если ПоляОтбораПериодическихДанных <> Неопределено Тогда
		ПоляОтбораПериодическихДанных.Свойство("СтатусыЗастрахованныхФизическихЛиц", ПоляОтбора);
	КонецЕсли;
	
	ПараметрыПостроения.Отборы = ПоляОтбора;
	
	ЗапросВТИмяРегистраСрез = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТИмяРегистраСрез(
		"СтатусыЗастрахованныхФизическихЛиц",
		ТолькоРазрешенные,
		ОписаниеФильтра,
		ПараметрыПостроения,
		Истина,
		ИмяВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц);
	 
	КадровыйУчет.УстановитьПутьКПолюФизическоеЛицо(ЗапросВТИмяРегистраСрез.Текст, "ИзмеренияДаты", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	
	ТекстЗапросаДанных =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаОтборовФизическихЛиц.Период КАК Период,
		|	ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ПериодЗаписи КАК ПериодЗаписи,
		|	ТаблицаОтборовФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ВидЗастрахованногоЛица, ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ГражданеРФ)
		|		ИНАЧЕ ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ВидЗастрахованногоЛица
		|	КОНЕЦ КАК ВидЗастрахованногоЛица
		|ПОМЕСТИТЬ ВТСведенияОСтатусахЗастрахованныхЛиц
		|ИЗ
		|	ВТОтборовФизическихЛиц КАК ТаблицаОтборовФизическихЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц КАК ПредварительныеСведенияОСтатусахЗастрахованныхЛиц
		|		ПО ТаблицаОтборовФизическихЛиц.Период = ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.Период
		|			И ТаблицаОтборовФизическихЛиц.ФизическоеЛицо = ПредварительныеСведенияОСтатусахЗастрахованныхЛиц.ФизическоеЛицо";
		
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТОтборовФизическихЛиц", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.Период", "ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод);
	КадровыйУчет.УстановитьВТекстеЗапросаИмяПоляФизическоеЛицо(ТекстЗапросаДанных, "ТаблицаОтборовФизическихЛиц.ФизическоеЛицо", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц", ИмяВТПредварительныеСведенияОСтатусахЗастрахованныхЛиц);
	ТекстЗапросаДанных = СтрЗаменить(ТекстЗапросаДанных, "ВТСведенияОСтатусахЗастрахованныхЛиц", ИмяВТСведенияОСтатусахЗастрахованныхЛиц);
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаДанных, ТолькоРазрешенные);
	
	ЗапросВТИмяРегистраСрез.Текст = 
		ЗапросВТИмяРегистраСрез.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+ ТекстЗапросаДанных;
		
	Возврат ЗапросВТИмяРегистраСрез;
	
КонецФункции

// Сведения о статусах застрахованных физических лиц.

Функция ДобавитьПолеСведенийОСтатусахЗастрахованныхЛиц(ИмяПоля, ТекстОписанияПолей, ИсточникиДанных) Экспорт
	
	ДобавленоПолеСведений = Ложь;
	Если НеобходимыСведенияОСтатусахЗастрахованныхЛиц(ИмяПоля) Тогда
		
		ДобавленоПолеСведений = Истина;
		ИсточникиДанных.Вставить("СведенияОСтатусахЗастрахованныхЛиц", Истина);
		
		ПутьКДанным = ПутьКДаннымСведенийОСтатусахЗастрахованныхЛиц(ИмяПоля);
		ТекстОписанияПолей = ТекстОписанияПолей + "," + Символы.ПС + ПутьКДанным + " КАК " + ИмяПоля;
		
	КонецЕсли;
	
	Возврат ДобавленоПолеСведений;
	
КонецФункции

Процедура ДобавитьТекстЗапросаВТСведенияОСтатусахЗастрахованныхЛиц(Запрос, ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИсточникиДанных) Экспорт
	
	Если ИсточникиДанных.Получить("СведенияОСтатусахЗастрахованныхЛиц") = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ИмяВТСведенияОСтатусахЗастрахованныхЛиц = ЗарплатаКадрыОбщиеНаборыДанных.УникальноеИмяТекстаЗапроса("ВТСведенияОСтатусахЗастрахованныхЛиц");
	
	ЗапросВТ = ЗапросВТСведенияОСтатусахЗастрахованныхЛиц(ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ПоляОтбораПериодическихДанных, ИмяВТСведенияОСтатусахЗастрахованныхЛиц);
			
	ЗарплатаКадрыОбщиеНаборыДанных.СкопироватьПараметрыЗапроса(Запрос, ЗапросВТ);
	
	Запрос.Текст = 
		ЗапросВТ.Текст
		+ ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов()
		+ Запрос.Текст;
		
	Запрос.Текст = Запрос.Текст + Символы.ПС
		+ "		{ЛЕВОЕ СОЕДИНЕНИЕ " + ИмяВТСведенияОСтатусахЗастрахованныхЛиц + " КАК СтатусыЗастрахованныхЛиц
			|		ПО " + КадровыйУчет.ПутьКПолюФизическоеЛицо("ТаблицаОтборовФизическихЛиц", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо) + " = СтатусыЗастрахованныхЛиц.ФизическоеЛицо
			|			И ТаблицаОтборовФизическихЛиц." + ОписательВременнойТаблицыОтборов.ИмяПоляПериод + " = СтатусыЗастрахованныхЛиц.Период}";
				
КонецПроцедуры

Функция НеобходимыСведенияОСтатусахЗастрахованныхЛиц(Знач ИмяПоля) Экспорт
	
	Возврат ВРег(ИмяПоля) = ВРег("ВидЗастрахованногоЛицаПериодРегистрации")
		Или ВРег(ИмяПоля) = ВРег("ВидЗастрахованногоЛица");

КонецФункции

Функция ДобавитьКритерийПоискаПоСведениямОСтатусахЗастрахованныхЛиц(КритерииПоиска, УсловиеПоиска) Экспорт
	
	КритерийДобавлен = Ложь;
	Если НеобходимыСведенияОСтатусахЗастрахованныхЛиц(УсловиеПоиска.ЛевоеЗначение) Тогда
		
		ИмяПоля = ВРег(УсловиеПоиска.ЛевоеЗначение);
		Если ИмяПоля = ВРег("ВидЗастрахованногоЛицаПериодРегистрации") Тогда
			УсловиеПоиска.ЛевоеЗначение = "Период";
			
		КонецЕсли;
		
		КадровыйУчет.ДобавитьКритерийПоискаСотрудников(КритерииПоиска, "РегистрСведений.СтатусыЗастрахованныхФизическихЛиц", УсловиеПоиска);
		КритерийДобавлен = Истина;
		
	КонецЕсли; 
	
	Возврат КритерийДобавлен;
	
КонецФункции

Функция ПутьКДаннымСведенийОСтатусахЗастрахованныхЛиц(Знач ИмяПоля)
	
	ИмяПоляВВерхнемРегистре = ВРег(ИмяПоля);
	
	ПутьКДанным = "";
	Если ИмяПоляВВерхнемРегистре = ВРег("ВидЗастрахованногоЛицаПериодРегистрации") Тогда
		ПутьКДанным = "	СтатусыЗастрахованныхЛиц.ПериодЗаписи";
	Иначе
		ПутьКДанным = "	СтатусыЗастрахованныхЛиц." + ИмяПоля;
	КонецЕсли;
	
	Возврат ПутьКДанным;
	
КонецФункции

#КонецОбласти
