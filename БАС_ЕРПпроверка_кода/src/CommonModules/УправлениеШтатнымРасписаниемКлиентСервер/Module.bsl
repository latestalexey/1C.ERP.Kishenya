////////////////////////////////////////////////////////////////////////////////
// УправлениеШтатнымРасписаниемКлиентСервер:
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеРеквизитовПроверяемыхНаСоответствие() Экспорт
	
	Возврат Новый Структура("СтруктураПоиска,РеквизитНесоответствияСтроки,РасшифровкаНачислений,ОписаниеСоответствияПоказателей,МаксимальноеКоличествоПоказателей")
	
КонецФункции

Функция ПолучитьКомментарийКДействиюСПозициейШР(СтрокаПозицииШР, ДоступноЧтениеНачисленийШтатногоРасписания)Экспорт	
	
	КомментарийНачисления = "";
	СтрокаПодстановки = "";
	
	Если ДоступноЧтениеНачисленийШтатногоРасписания Тогда
		Если СтрокаПозицииШР.ФОТМакс > СтрокаПозицииШР.ТекущийФОТ Тогда
			КомментарийНачисления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='увеличен ФОТ (+%1)';uk='збільшено ФОП (+%1)'"), СтрокаПозицииШР.ФОТМакс - СтрокаПозицииШР.ТекущийФОТ);
			СтрокаПодстановки = ", " + КомментарийНачисления;
		ИначеЕсли СтрокаПозицииШР.ФОТМакс < СтрокаПозицииШР.ТекущийФОТ Тогда
			КомментарийНачисления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='уменьшен ФОТ (%1)';uk='зменшено ФОП (%1)'"), СтрокаПозицииШР.ФОТМакс - СтрокаПозицииШР.ТекущийФОТ);	
			СтрокаПодстановки = ", " + КомментарийНачисления;	
		КонецЕсли;	
	КонецЕсли; 
	
	Если СтрокаПозицииШР.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПозициямиШтатногоРасписания.СоздатьНовуюПозицию") Тогда
		Возврат НСтр("ru='Новая позиция';uk='Нова позиція'");		
	ИначеЕсли СтрокаПозицииШР.Действие = ПредопределенноеЗначение("Перечисление.ДействияСПозициямиШтатногоРасписания.ЗакрытьПозицию") Тогда	
		Возврат НСтр("ru='Позиция закрыта';uk='Позиція закрита'");		
	ИначеЕсли СтрокаПозицииШР.ТекущееКоличествоСтавок > СтрокаПозицииШР.КоличествоСтавок Тогда 
		Возврат	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='уменьшено количество штатных единиц (%1)%2';uk='зменшено кількість штатних одиниць (%1)%2'"), Формат(СтрокаПозицииШР.КоличествоСтавок - СтрокаПозицииШР.ТекущееКоличествоСтавок, ""), СтрокаПодстановки); 
	ИначеЕсли СтрокаПозицииШР.ТекущееКоличествоСтавок < СтрокаПозицииШР.КоличествоСтавок Тогда  
		Возврат	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='увеличено количество штатных единиц (+%1)%2';uk='збільшено кількість штатних одиниць (+%1)%2'"), Формат(СтрокаПозицииШР.КоличествоСтавок - СтрокаПозицииШР.ТекущееКоличествоСтавок, ""), СтрокаПодстановки); 	
	ИначеЕсли ДоступноЧтениеНачисленийШтатногоРасписания И СтрокаПозицииШР.ФОТМакс <> СтрокаПозицииШР.ТекущийФОТ Тогда 
		Возврат КомментарийНачисления;	
	Иначе 
		Возврат "";
	КонецЕсли;	
	
КонецФункции	

Функция СтруктураДанныхОЗанятыхПозициях(ДатаСеанса) Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Период", ДатаСеанса);
	СтруктураДанных.Вставить("ПозицияШтатногоРасписания", ПредопределенноеЗначение("Справочник.ШтатноеРасписание.ПустаяСсылка"));
	СтруктураДанных.Вставить("Сотрудник", ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка"));
	СтруктураДанных.Вставить("КоличествоСтавок", 0);
	СтруктураДанных.Вставить("ДанныеОНачислениях", Новый Массив);
	СтруктураДанных.Вставить("ФОТ", 0);
	СтруктураДанных.Вставить("Грейд");
		
	Возврат СтруктураДанных;
		
КонецФункции

Процедура УстановитьКомментарииДействийСНачислением(СтрокаНачисления, МаксимальноеКоличествоПоказателей, ИспользоватьВилкуСтавокВШтатномРасписании) Экспорт
	
	Если СтрокаНачисления.Действие = ПредопределенноеЗначение("Перечисление.ДействияСНачислениямиИУдержаниями.Утвердить") И (Не СтрокаНачисления.ДействующийВидРасчета) Тогда
		СтрокаНачисления.Комментарий = НСтр("ru='Новое начисление';uk='Нове нарахування'");
	ИначеЕсли СтрокаНачисления.Действие = ПредопределенноеЗначение("Перечисление.ДействияСНачислениямиИУдержаниями.Отменить") Тогда
		СтрокаНачисления.Комментарий = НСтр("ru='Начисление отменено';uk='Нарахування скасовано'");	
	ИначеЕсли Не СтрокаНачисления.ДействующийВидРасчета Тогда
		СтрокаНачисления.Комментарий = НСтр("ru='Новое начисление';uk='Нове нарахування'");	
	Иначе
		Комментарий = "";
		Для Сч = 1 По МаксимальноеКоличествоПоказателей Цикл
			
			Если СтрокаНачисления.Свойство("ТекущееМинимальноеЗначение" + Сч) Тогда
				
				ТекущееЗначение = ?(СтрокаНачисления["ТекущееМинимальноеЗначение" + Сч] = Неопределено, 0, СтрокаНачисления["ТекущееМинимальноеЗначение" + Сч]);
				Значение = ?(СтрокаНачисления["МинимальноеЗначение" + Сч] = Неопределено, 0, СтрокаНачисления["МинимальноеЗначение" + Сч]); 
				Если Значение > ТекущееЗначение  Тогда
					Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Увеличен минимум';uk='Збільшений мінімум'") + " %1 (+%2); ", 
					СтрокаНачисления["Показатель" + Сч],  Значение - ТекущееЗначение);
				ИначеЕсли  Значение < ТекущееЗначение Тогда
					Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Уменьшен минимум';uk='Зменшено мінімум'") + " %1 (%2); ", 
					СтрокаНачисления["Показатель" + Сч],  Значение - ТекущееЗначение);
				КонецЕсли;
				
				ТекущееЗначение = ?(СтрокаНачисления["ТекущееМаксимальноеЗначение" + Сч] = Неопределено, 0, СтрокаНачисления["ТекущееМаксимальноеЗначение" + Сч]);
				Значение = ?(СтрокаНачисления["МаксимальноеЗначение" + Сч] = Неопределено, 0, СтрокаНачисления["МаксимальноеЗначение" + Сч]); 
				Если Значение > ТекущееЗначение Тогда
					Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Увеличен максимум';uk='Збільшено максимум'") + " %1 (+%2); ", 
					СтрокаНачисления["Показатель" + Сч],  Значение - ТекущееЗначение);
				ИначеЕсли  Значение < ТекущееЗначение Тогда
					Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Уменьшен максимум';uk='Зменшено максимум'") + " %1 (%2); ", 
					СтрокаНачисления["Показатель" + Сч],  Значение - ТекущееЗначение);
				КонецЕсли;
				
			Иначе
				
				ТекущееЗначение = ?(СтрокаНачисления["ТекущееЗначение" + Сч] = Неопределено, 0, СтрокаНачисления["ТекущееЗначение" + Сч]);
				Значение = ?(СтрокаНачисления["Значение" + Сч] = Неопределено, 0, СтрокаНачисления["Значение" + Сч]); 
				Если Значение > ТекущееЗначение Тогда
					Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Увеличен';uk='Збільшений'") + " %1 (+%2); ", 
					СтрокаНачисления["Показатель" + Сч],  Значение - ТекущееЗначение);
				ИначеЕсли  Значение < ТекущееЗначение Тогда
					Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Уменьшен';uk='Зменшений'") + " %1 (%2); ", 
					СтрокаНачисления["Показатель" + Сч],  Значение - ТекущееЗначение);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаНачисления.Комментарий = Комментарий;
		
	КонецЕсли;
	
КонецПроцедуры	

Функция ПредставлениеНадбавкиЗаВредность(НачислениеНадбавкаЗаВредность) Экспорт
	
	ПредставлениеНадбавкиЗаВредность = Строка(НачислениеНадбавкаЗаВредность);
	Если ПустаяСтрока(ПредставлениеНадбавкиЗаВредность) Тогда
		ПредставлениеНадбавкиЗаВредность = НСтр("ru='Надбавка за вредность';uk='Надбавка за шкідливість'");
	КонецЕсли; 
	
	Возврат ПредставлениеНадбавкиЗаВредность;
	
КонецФункции

Функция ПредставлениеРайонногоКоэффициента(НачислениеРайонныйКоэффициент, РайонныйКоэффициент) Экспорт
	
	РайонныйКоэффициентПредставление = Строка(НачислениеРайонныйКоэффициент);
	Если ПустаяСтрока(РайонныйКоэффициентПредставление) Тогда
		РайонныйКоэффициентПредставление = НСтр("ru='Районный коэффициент';uk='Районний коефіцієнт'");
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РайонныйКоэффициент) Тогда
		РайонныйКоэффициентПредставление = РайонныйКоэффициентПредставление + " (" + Формат(РайонныйКоэффициент, "ЧЦ=3; ЧДЦ=2") + ")";
	КонецЕсли;
		
	Возврат РайонныйКоэффициентПредставление;
	
КонецФункции

Функция ПредставлениеСевернойНадбавки(НачислениеСевернаяНадбавка, ПроцентСевернойНадбавки) Экспорт
	
	СевернаяНадбавкаПредставление = Строка(НачислениеСевернаяНадбавка);
	Если ПустаяСтрока(СевернаяНадбавкаПредставление) Тогда
		СевернаяНадбавкаПредставление = НСтр("ru='Северная надбавка';uk='Північна надбавка'");
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ПроцентСевернойНадбавки) Тогда
		СевернаяНадбавкаПредставление = СевернаяНадбавкаПредставление + " (" + Формат(ПроцентСевернойНадбавки, "ЧЦ=5; ЧДЦ=2; ЧН=") + "%)";
	Иначе
		СевернаяНадбавкаПредставление = СевернаяНадбавкаПредставление + " (" + НСтр("ru='не задан';uk='не заданий'") + ")";
	КонецЕсли;
		
	Возврат СевернаяНадбавкаПредставление;
	
КонецФункции

Функция НаименованиеПозицииШтатногоРасписания(Подразделение, Должность, РазрядКатегория = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(РазрядКатегория) Тогда
		НаименованиеПозиции = Строка(Должность) + ", " + Строка(РазрядКатегория);
	Иначе
		НаименованиеПозиции = Строка(Должность);
	КонецЕсли;
	
	НаименованиеПозиции = НаименованиеПозиции + ?(ЗначениеЗаполнено(Подразделение), " /" + Строка(Подразделение) + "/", "");
	
	Возврат НаименованиеПозиции;
	
КонецФункции

Процедура ЗаполнитьИтоговыйФОТПоПозициям(Форма) Экспорт
	
	Для каждого СтрокаПозиции Из Форма.Объект.Позиции Цикл
		РассчитатьИтогиФОТПоСтрокеПозиции(Форма, СтрокаПозиции);
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьИтогиФОТПоСтрокеПозиции(Форма, СтрокаПозиции) Экспорт
	
	Если Форма.ДоступноЧтениеНачисленийШтатногоРасписания Тогда
		СтрокаПозиции.ФОТПоПозиции = СтрокаПозиции.ФОТ * СтрокаПозиции.КоличествоСтавок;
		СтрокаПозиции.ФОТПоПозицииМин = СтрокаПозиции.ФОТМин * СтрокаПозиции.КоличествоСтавок;
		СтрокаПозиции.ФОТПоПозицииМакс = СтрокаПозиции.ФОТМакс * СтрокаПозиции.КоличествоСтавок;
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
