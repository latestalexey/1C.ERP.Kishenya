#Область ПрограммныйИнтерфейс

// Возвращает структуру настроек резервов отпусков
//
// Параметры:
//   Организация - Спр.Организации.СправочникСсылка - Организация.
//   Период - Дата - Период дат.
//
// Возвращаемое значение:
//  Структура - описанная в методе
//
Функция НастройкиРезервовОтпусков(Организация, Период) Экспорт
	
	Настройки = Новый Структура;
	
	Настройки.Вставить("ФормироватьРезервОтпусковБУ", Ложь);
	Настройки.Вставить("ФормироватьРезервОтпусковНУ", Ложь);
	Настройки.Вставить("МетодНачисленияРезерваОтпусков", Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод);
	Настройки.Вставить("НормативОтчисленийВРезервОтпусков", 0);
	Настройки.Вставить("ПредельнаяВеличинаОтчисленийВРезервОтпусков", 0);
	Настройки.Вставить("ОпределятьИзлишкиЕжемесячно", Ложь);
	
	Если Не ЗначениеЗаполнено(Период) Или Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Настройки;
	КонецЕсли;
	
	НастройкиРасчетаРезервовОтпусков = РегистрыСведений.НастройкиРасчетаРезервовОтпусков.СрезПоследних(Период, Новый Структура("Организация", Организация));
	Если НастройкиРасчетаРезервовОтпусков.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Настройки, НастройкиРасчетаРезервовОтпусков[0]);
	КонецЕсли;
	
	РезервОтпусковПереопределяемый.ЗаполнитьНастройкиРезервовОтпусков(Настройки, Организация, Период);
	
	Возврат Настройки;
	
КонецФункции

// Возвращает ссылку на заполненный Док.НачислениеОценочныхОбязательствПоОтпускам.
// Если для заданного месяца и организации существует несколько 
// документов, возвращается хронологически первый.
// Если необходимого документа нет, он создается и записывается.
// В любом случае выполняется заполнение документа.
//
// Параметры:
//	ПериодРегистрации - Дата - Период регистрации.
//	Организация - СправочникСсылка.Организации - Ссылка на организацию.
//
// Возвращаемое значение - ссылка на документ.
//
Функция ДокументНачислениеОценочныхОбязательствПоОтпускам(ПериодРегистрации, Организация) Экспорт
	
	ДокументСсылка = Неопределено;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НачислениеОценочныхОбязательствПоОтпускам.Ссылка КАК Документ
	|ИЗ
	|	Документ.НачислениеОценочныхОбязательствПоОтпускам КАК НачислениеОценочныхОбязательствПоОтпускам
	|ГДЕ
	|	НачислениеОценочныхОбязательствПоОтпускам.ПериодРегистрации = &ПериодРегистрации
	|	И НачислениеОценочныхОбязательствПоОтпускам.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачислениеОценочныхОбязательствПоОтпускам.Дата,
	|	НачислениеОценочныхОбязательствПоОтпускам.Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ДокументОбъект = Выборка.Документ.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.НачислениеОценочныхОбязательствПоОтпускам.СоздатьДокумент();
		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		ДокументОбъект.ПериодРегистрации = ПериодРегистрации;
		ДокументОбъект.Организация = Организация;
	КонецЕсли;

	ЗаполнитьДокументНачислениеОценочныхОбязательствПоОтпускам(ДокументОбъект);
	
	ДокументОбъект.Записать();
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	
	Возврат ДокументСсылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// См. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения.
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт
	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, "Документ.НачислениеОценочныхОбязательствПоОтпускам",		"ПериодРегистрации",	"БухгалтерскийУчетЗарплаты", "Организация");
	
КонецПроцедуры

// Списывает расходы по оплате отпуска за счет оценочных обязательств
//
// Параметры:
//			Организация - СправочникСсылка.Организации - Организация.
//			ПериодРегистрации - Дата - ПериодРегистрации.
//			ДокументСсылка - ДокументСсылка - ДокументСсылка.
//			ТаблицаНачисленнаяЗарплатаИВзносы - ТаблицаЗначений - из ОтражениеЗарплатыВБухучете.ДанныеДляОтраженияЗарплатыВБухучете.
//			НачисленныеОтпуска - ТаблицаЗначений - из ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска().
//			КолонкиСуммирования - Массив - Имена колонок для суммирования значений.
//
Процедура СписатьРасходыПоОплатеОтпускаЗаСчетОценочныхОбязательств(Организация, ПериодРегистрации, ДокументСсылка, ТаблицаНачисленнаяЗарплатаИВзносы, НачисленныеОтпуска, КолонкиСуммирования) Экспорт

	
	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
	Если Не НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("ВидОперации", Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск);
	ТаблицаОтпусков = ТаблицаНачисленнаяЗарплатаИВзносы.Скопировать(Отбор);
	
	Отбор = Новый Структура("ВидОперации", Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска);
	ТаблицаКомпенсаций = ТаблицаНачисленнаяЗарплатаИВзносы.Скопировать(Отбор);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаКомпенсаций, ТаблицаОтпусков);
	
	Если ТаблицаОтпусков.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНачисленнаяЗарплатаИВзносы.Индексы.Добавить("Сотрудник,ВидОперации");
	
	НоваяТаблицаОтпусков = ТаблицаОтпусков.СкопироватьКолонки();
	
	КолонкиСуммированияСтрока = СтрСоединить(КолонкиСуммирования, ", ");
	ТаблицаОтпусков.Свернуть("Сотрудник", КолонкиСуммированияСтрока);
	Сотрудники = ТаблицаОтпусков.ВыгрузитьКолонку("Сотрудник");
	
	НакопленныеОценочныеОбязательства = НакопленныеОценочныеОбязательства(Организация, ПериодРегистрации, ДокументСсылка, Сотрудники);
	
	КолонкиВзносов = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(КолонкиСуммирования);
	ИндексЭлемента = КолонкиВзносов.Найти("Сумма");   
	КолонкиВзносов.Удалить(ИндексЭлемента);
	
	КолонкиГруппировок = Новый Массив;
	Для каждого КолонкаТЗ Из НоваяТаблицаОтпусков.Колонки Цикл
		Если КолонкиСуммирования.Найти(КолонкаТЗ.Имя) = Неопределено Тогда
			КолонкиГруппировок.Добавить(КолонкаТЗ.Имя);
		КонецЕсли;
	КонецЦикла;
	КолонкиГруппировокСтрока = СтрСоединить(КолонкиГруппировок, ", ");
	
	Отбор = Новый Структура("Сотрудник");
	ОтборОсновнойТаблицы = Новый Структура("Сотрудник,ВидОперации");
	
	ФормироватьРезервОтпусковНУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковНУ;
	
	Для каждого СтрокаТЗ Из ТаблицаОтпусков Цикл
		
		СуммаВзносовПоСтрокеРасчетная = 0;
		СуммаВзносовПоСтроке = 0;
		Для каждого КолонкаТЗ Из ТаблицаОтпусков.Колонки Цикл
			Если КолонкиВзносов.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
				СуммаВзносовПоСтроке = СуммаВзносовПоСтроке + СтрокаТЗ[КолонкаТЗ.Имя];
			КонецЕсли;
		КонецЦикла;
		
		Отбор.Сотрудник = СтрокаТЗ.Сотрудник;
		ОценочныеОбязательстваСотрудника = НакопленныеОценочныеОбязательства.НайтиСтроки(Отбор);
		
		ОтборОсновнойТаблицы.Сотрудник = СтрокаТЗ.Сотрудник;
		ОтборОсновнойТаблицы.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск;
		СтрокиОтпуска = ТаблицаНачисленнаяЗарплатаИВзносы.НайтиСтроки(ОтборОсновнойТаблицы);
		
		ОтборОсновнойТаблицы.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска;
		СтрокиКомпенсации = ТаблицаНачисленнаяЗарплатаИВзносы.НайтиСтроки(ОтборОсновнойТаблицы);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СтрокиОтпуска, СтрокиКомпенсации);
		
		Если ОценочныеОбязательстваСотрудника.Количество() = 0 Тогда
			
			Сумма = 0;
			СтраховыеВзносы = 0;
			
		Иначе
			
			Сумма = Макс(ОценочныеОбязательстваСотрудника[0].Сумма, 0);
			СтраховыеВзносы = Макс(ОценочныеОбязательстваСотрудника[0].СтраховыеВзносы, 0);
			
		КонецЕсли;
		
		Если Сумма = 0 И СтраховыеВзносы = 0 Тогда
			
			Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
				ЗаполнитьЗначенияСвойств(НоваяТаблицаОтпусков.Добавить(), СтрокаОтпуска);
			КонецЦикла;
			
		ИначеЕсли Сумма >= СтрокаТЗ.Сумма И СтраховыеВзносы >= СуммаВзносовПоСтроке Тогда

			ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства;
			ВидОперацииКомпенсации = Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства;
			
			Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
				НоваяСтрока = НоваяТаблицаОтпусков.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска);
				Если СтрокаОтпуска.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск Тогда
					НоваяСтрока.ВидОперации = ВидОперации;
				Иначе
					НоваяСтрока.ВидОперации = ВидОперацииКомпенсации;
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			КоэффициентСуммы   = ?(СтрокаТЗ.Сумма = 0,0, Мин(Сумма/СтрокаТЗ.Сумма,1));
			КоэффициентВзносов = ?(СуммаВзносовПоСтроке = 0,0, Мин(СтраховыеВзносы/СуммаВзносовПоСтроке,1));
			
			КоэффициентНУ = ?(ФормироватьРезервОтпусковНУ,1,0);
			
			ТаблицаОтпусковВременная = НоваяТаблицаОтпусков.СкопироватьКолонки();
			
			Для каждого СтрокаОтпуска Из СтрокиОтпуска Цикл
				
				ЭтоОтпуск = (СтрокаОтпуска.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск);
				
				Для каждого КолонкаТЗ Из ТаблицаОтпусков.Колонки Цикл
					
					РасчетВзносов = Ложь;
					
					Если КолонкиСуммирования.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
						
						Если КолонкаТЗ.Имя = "Сумма" Тогда
							КоэффициентБУ = КоэффициентСуммы;
						Иначе
							КоэффициентБУ = КоэффициентВзносов;
							РасчетВзносов = Истина;
						КонецЕсли;
						
						СуммаБУ_ОО = ОКР(СтрокаОтпуска[КолонкаТЗ.Имя] * КоэффициентБУ, 2);
						СуммаБУ    = СтрокаОтпуска[КолонкаТЗ.Имя] - СуммаБУ_ОО;
						
						СуммаНУ_ОО = ОКР(СтрокаОтпуска[КолонкаТЗ.Имя] * КоэффициентНУ, 2);
						СуммаНУ    = СтрокаОтпуска[КолонкаТЗ.Имя] - СуммаНУ_ОО;
						
						Разница_ОО = СуммаБУ_ОО - СуммаНУ_ОО;
						Разница = СуммаБУ - СуммаНУ;
						
						Если Разница_ОО = 0 Тогда
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = СуммаБУ_ОО;
							НоваяСтрока.ВидОперации = ?(ЭтоОтпуск,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства);
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = СуммаБУ;
							НоваяСтрока.ВидОперации = СтрокаОтпуска.ВидОперации;
							
						ИначеЕсли Разница_ОО > 0 Тогда
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = СуммаНУ_ОО;
							НоваяСтрока.ВидОперации = ?(ЭтоОтпуск,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства);
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = Разница_ОО;
							НоваяСтрока.ВидОперации = ?(ЭтоОтпуск,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства);
							
						ИначеЕсли Разница_ОО < 0 Тогда
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = СуммаБУ_ОО;
							НоваяСтрока.ВидОперации = ?(ЭтоОтпуск,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства);
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = -1*Разница_ОО;
							НоваяСтрока.ВидОперации = ?(ЭтоОтпуск,Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы,Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска);
							
						КонецЕсли;
						
						Если Разница > 0 Тогда
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = СуммаНу;
							НоваяСтрока.ВидОперации = СтрокаОтпуска.ВидОперации;
							
						ИначеЕсли Разница < 0 Тогда
							
							НоваяСтрока = ТаблицаОтпусковВременная.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтпуска, КолонкиГруппировокСтрока);
							НоваяСтрока[КолонкаТЗ.Имя] = СуммаБу;
							НоваяСтрока.ВидОперации = СтрокаОтпуска.ВидОперации;
							
						КонецЕсли;
						
						Если РасчетВзносов Тогда
							СуммаВзносовПоСтрокеРасчетная = СуммаВзносовПоСтрокеРасчетная + СуммаБУ_ОО;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			ТаблицаОтпусковВременная.Свернуть(КолонкиГруппировокСтрока,КолонкиСуммированияСтрока);
			
			// Корректировка ошибки округления в большую сторону.
			РазницаСумма  = ТаблицаОтпусковВременная.Итог("Сумма") - СтрокаТЗ.Сумма;
			РазницаВзносы = СуммаВзносовПоСтрокеРасчетная - СтраховыеВзносы;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаОтпусковВременная,НоваяТаблицаОтпусков);
			
		КонецЕсли;
	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачисленнаяЗарплатаИВзносы", ТаблицаНачисленнаяЗарплатаИВзносы);
	Запрос.УстановитьПараметр("НоваяТаблицаОтпусков", НоваяТаблицаОтпусков);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.ВзносыВсего,	
	|	НачисленияИВзносы.Сумма
	|ПОМЕСТИТЬ ВТНачисленнаяЗарплатаИВзносы
	|ИЗ
	|	&НачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.ВзносыВсего,	
	|	НачисленияИВзносы.Сумма
	|ПОМЕСТИТЬ ВТТаблицаОтпусков
	|ИЗ
	|	&НоваяТаблицаОтпусков КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(НачисленияИВзносы.ВзносыВсего) КАК ВзносыВсего,
	|	СУММА(НачисленияИВзносы.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияИВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|		НачисленияИВзносы.Подразделение КАК Подразделение,
	|		НачисленияИВзносы.ВидОперации КАК ВидОперации,
	|		НачисленияИВзносы.Начисление КАК Начисление,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|		НачисленияИВзносы.ВзносыВсего КАК ВзносыВсего,
	|		НачисленияИВзносы.Сумма КАК Сумма
	|	ИЗ
	|		ВТНачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|	ГДЕ
	|		НЕ НачисленияИВзносы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпуск), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпуска))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НачисленияИВзносы.ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник,
	|		НачисленияИВзносы.Подразделение,
	|		НачисленияИВзносы.ВидОперации,
	|		НачисленияИВзносы.Начисление,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов,
	|		НачисленияИВзносы.ВзносыВсего,
	|		НачисленияИВзносы.Сумма
	|	ИЗ
	|		ВТТаблицаОтпусков КАК НачисленияИВзносы) КАК НачисленияИВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО НачисленияИВзносы.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачисленияИВзносы.Сумма) <> 0
	|		ИЛИ СУММА(НачисленияИВзносы.ВзносыВсего) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ТаблицаОтпусков.Сотрудник,
	|	ТаблицаОтпусков.ВидОперации,
	|	СУММА(ТаблицаОтпусков.Сумма) КАК Сумма,
	|	СУММА(ТаблицаОтпусков.ВзносыВсего) КАК СтраховыеВзносы
	|ИЗ
	|	ВТТаблицаОтпусков КАК ТаблицаОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ТаблицаОтпусков.Сотрудник = Сотрудники.Ссылка
	|ГДЕ
	|	ТаблицаОтпусков.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОтпусков.Сотрудник,
	|	Сотрудники.Наименование,
	|	ТаблицаОтпусков.ВидОперации
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаОтпусков.Сумма) <> 0
	|		ИЛИ СУММА(ТаблицаОтпусков.ВзносыВсего) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудники.Наименование";
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.ВыполнитьПакет();
		
	ТаблицаНачисленнаяЗарплатаИВзносы.Очистить();
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНачисленнаяЗарплатаИВзносы.Добавить(),Выборка);
	КонецЦикла;
	
	Выборка = Результат[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(НачисленныеОтпуска.Добавить(),Выборка);
	КонецЦикла;

КонецПроцедуры

// Формирует движения выплаты отпусков за счет резерва
//
// Параметры:
//			Движения - КоллекцияДвижений - Движения.
//			Отказ - Булево - Отказ.
//			Организация - СправочникСсылка.Организации - Организация.
//			ПериодРегистрации - Дата - ПериодРегистрации.
//			ВыплатаОтпусковЗаСчетРезерва - ТаблицаЗначений - из ОтражениеЗарплатыВБухучете.НоваяТаблицаНачисленныеОтпуска.
//
Процедура СформироватьДвиженияВыплатаОтпусковЗаСчетРезерва(Движения, Отказ, Организация, ПериодРегистрации, ВыплатаОтпусковЗаСчетРезерва) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.УстановитьПараметр("ВыплатаОтпусковЗаСчетРезерва", ВыплатаОтпусковЗаСчетРезерва);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыплатаОтпусковЗаСчетРезерва.Сотрудник,
	|	ВыплатаОтпусковЗаСчетРезерва.ВидОперации,
	|	ВыплатаОтпусковЗаСчетРезерва.Сумма,
	|	ВыплатаОтпусковЗаСчетРезерва.СтраховыеВзносы
	|ПОМЕСТИТЬ ВТВыплаты
	|ИЗ
	|	&ВыплатаОтпусковЗаСчетРезерва КАК ВыплатаОтпусковЗаСчетРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	Выплаты.Сотрудник,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства))
	|			ТОГДА Выплаты.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваВыбыло,
	|	ВЫБОР
	|		КОГДА Выплаты.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.КомпенсацияЕжегодногоОтпускаОценочныеОбязательства))
	|			ТОГДА Выплаты.СтраховыеВзносы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовВыбыло
	|ИЗ
	|	ВТВыплаты КАК Выплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО Выплаты.Сотрудник = Сотрудники.Ссылка";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
		Движения.ВыплатаОтпусковЗаСчетРезерва.Загрузить(Результат);
		Движения.ВыплатаОтпусковЗаСчетРезерва.Записывать = Истина;
	КонецЕсли;

КонецПроцедуры

// Формирует движения списания резерва отпусков в Рнк.ВыплатаОтпусковЗаСчетРезерва
//
// Параметры:
//			Движения - КоллекцияДвижений - Движения.
//			Отказ - Булево - Отказ.
//			Организация - СправочникСсылка.Организации - Организация.
//			ПериодРегистрации - Дата - ПериодРегистрации.
//			ТаблицаОбязательств - ТаблицаЗначений - Соответствует ресурсам Рнк.ВыплатаОтпусковЗаСчетРезерва.
//
Процедура СформироватьДвиженияСписаниеРезерваОтпусков(Движения, Отказ, Организация, ПериодРегистрации, ТаблицаОбязательств) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбязательств", ТаблицаОбязательств);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбязательств.СуммаРезерваВыбыло КАК СуммаРезерва,
	|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовВыбыло КАК СуммаРезерваСтраховыхВзносов,
	|	&Организация КАК Организация,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
	|ИЗ
	|	&ТаблицаОбязательств КАК ТаблицаОбязательств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация КАК Организация,
	|	ВТ_ТаблицаОбязательств.Период КАК Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерва) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВознаграждениям) КАК ТипОценочногоОбязательства,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерва <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоСтраховымВзносам),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	ТипОценочногоОбязательства";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
		Движения.ОценочныеОбязательства.Загрузить(Результат);
		Движения.ОценочныеОбязательства.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Распределяет суммы начисленных резервов по способам отражения в учете
// при ручном редактировании сумм резервов.
//
// Параметры:
//			Объект - Объект - Движения.
//
Процедура ПеречитатьОценочныеОбязательства(Объект) Экспорт
	
	РасчетРезерваОтпусков = Объект.РасчетРезерваОтпусков.Скопировать();
	
	ТаблицыРасчетаОбязательств = ОтражениеЗарплатыВБухучете.ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Объект.Организация, Объект.ПериодРегистрации);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОстаткиОтпусков",                 ТаблицыРасчетаОбязательств.ОстаткиОтпусков);
	Запрос.УстановитьПараметр("ФондОплатыТрудаИСтраховыеВзносы", ТаблицыРасчетаОбязательств.ФондОплатыТрудаИСтраховыеВзносы);
	Запрос.УстановитьПараметр("Регистратор",                     Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиОтпусков.Организация,
	|	ОстаткиОтпусков.Сотрудник,
	|	ОстаткиОтпусков.Подразделение,
	|	ОстаткиОтпусков.СпособОтраженияЗарплатыВБухучете,
	|	ОстаткиОтпусков.СтатьяФинансирования
	|ПОМЕСТИТЬ ВТ_ОстаткиОтпусков
	|ИЗ
	|	&ОстаткиОтпусков КАК ОстаткиОтпусков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФондОплатыТрудаИСтраховыеВзносы.Организация,
	|	ФондОплатыТрудаИСтраховыеВзносы.Сотрудник,
	|	ФондОплатыТрудаИСтраховыеВзносы.Подразделение,
	|	ФондОплатыТрудаИСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	ФондОплатыТрудаИСтраховыеВзносы.СтатьяФинансирования,
	|	ФондОплатыТрудаИСтраховыеВзносы.ФондОплатыТруда,
	|	ФондОплатыТрудаИСтраховыеВзносы.СтраховыеВзносы
	|ПОМЕСТИТЬ ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|ИЗ
	|	&ФондОплатыТрудаИСтраховыеВзносы КАК ФондОплатыТрудаИСтраховыеВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.ФондОплатыТруда КАК ФОТ,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СтраховыеВзносы КАК СтраховыеВзносы,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Подразделение КАК Подразделение
	|ИЗ
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиОтпусков КАК ВТ_ОстаткиОтпусков
	|		ПО (ВТ_ОстаткиОтпусков.Организация = ВТ_ФондОплатыТрудаИСтраховыеВзносы.Организация)
	|			И (ВТ_ОстаткиОтпусков.Сотрудник = ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОстаткиОтпусков.Сотрудник,
	|	ВТ_ОстаткиОтпусков.СпособОтраженияЗарплатыВБухучете,
	|	ВТ_ОстаткиОтпусков.СтатьяФинансирования,
	|	СУММА(0),
	|	СУММА(0),
	|	ВТ_ОстаткиОтпусков.Подразделение
	|ИЗ
	|	ВТ_ОстаткиОтпусков КАК ВТ_ОстаткиОтпусков,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|ГДЕ
	|	НЕ ВТ_ОстаткиОтпусков.Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиОтпусков.СтатьяФинансирования,
	|	ВТ_ОстаткиОтпусков.Сотрудник,
	|	ВТ_ОстаткиОтпусков.Подразделение,
	|	ВТ_ОстаткиОтпусков.СпособОтраженияЗарплатыВБухучете";
	
	ТаблицаРаспределения = Запрос.Выполнить().Выгрузить();
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	ТаблицаРаспределения.Колонки.Добавить("СуммаРезерва",                      ОписаниеТиповЧисло);
	ТаблицаРаспределения.Колонки.Добавить("СуммаРезерваСтраховыхВзносов",      ОписаниеТиповЧисло);
	
	Для Каждого СтрокаТаблицы Из РасчетРезерваОтпусков Цикл
		
		ПараметрыОтбора = Новый Структура("Сотрудник",СтрокаТаблицы.Сотрудник);
		МассивСтрок = ТаблицаРаспределения.НайтиСтроки(ПараметрыОтбора);
		Если МассивСтрок.Количество() <> 0 Тогда
			
			РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерва;
			МассивСтарыхСумм = Новый Массив;
			Для Каждого ЗначениеМассива Из МассивСтрок Цикл
				МассивСтарыхСумм.Добавить(ЗначениеМассива.ФОТ);
			КонецЦикла;
			МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
			Если МассивНовыхСумм <> Неопределено Тогда
				ИндексСтроки = 0;
				КоличествоСтрок = МассивСтрок.Количество();
				Пока ИндексСтроки < КоличествоСтрок Цикл
					МассивСтрок[ИндексСтроки].СуммаРезерва = МассивНовыхСумм[ИндексСтроки];
					ИндексСтроки = ИндексСтроки + 1;
				КонецЦикла;
			КонецЕсли;
			
			РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваСтраховыхВзносов;
			МассивСтарыхСумм = Новый Массив;
			Для Каждого ЗначениеМассива Из МассивСтрок Цикл
				МассивСтарыхСумм.Добавить(ЗначениеМассива.ФОТ);
			КонецЦикла;
			МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
			Если МассивНовыхСумм <> Неопределено Тогда
				ИндексСтроки = 0;
				КоличествоСтрок = МассивСтрок.Количество();
				Пока ИндексСтроки < КоличествоСтрок Цикл
					МассивСтрок[ИндексСтроки].СуммаРезерваСтраховыхВзносов = МассивНовыхСумм[ИндексСтроки];
					ИндексСтроки = ИндексСтроки + 1;
				КонецЦикла;
			КонецЕсли;
			
			
		КонецЕсли;
		
	КонецЦикла;
	
	// ERP 3286
	ОтражениеЗарплатыВФинансовомУчетеУП.ЗаполнитьПодразделениеПредприятиеПоМестамСотрудников(ТаблицаРаспределения, Объект.ПериодРегистрации);
	
	ТаблицаРаспределения.Свернуть("ПодразделениеПредприятия, Подразделение,СпособОтраженияЗарплатыВБухучете,СтатьяФинансирования", 
		"СуммаРезерва,СуммаРезерваСтраховыхВзносов");

	// Конец
		
	Объект.ОценочныеОбязательства.Очистить();
	СформироватьТаблицуОценочныеОбязательства(ТаблицаРаспределения, Объект.ОценочныеОбязательства);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область НачислениеРезерваОтпусков

Функция МетодНачисленияРезерваОтпусков(Организация, Период) Экспорт
	
	Возврат УточнитьМетодНачисленияРезерваОтпусков(Организация, Период);

КонецФункции

Функция ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Регистратор = Неопределено, Инвентаризация, ОпределятьИзлишкиЕжемесячно) Экспорт
	
	
	ТаблицыРасчетаОбязательств = ОтражениеЗарплатыВБухучете.ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации);
	ТаблицаОстаткиОтпусков = ТаблицыРасчетаОбязательств.ОстаткиОтпусков;
	Если Инвентаризация Тогда
		РезервОтпусковПереопределяемый.ДополнитьТаблицуОстатковОтпусков(Организация, ПериодРегистрации, ТаблицаОстаткиОтпусков);
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОстаткиОтпусков",                 ТаблицаОстаткиОтпусков);
	Запрос.УстановитьПараметр("ФондОплатыТрудаИСтраховыеВзносы", ТаблицыРасчетаОбязательств.ФондОплатыТрудаИСтраховыеВзносы);
	Запрос.УстановитьПараметр("Регистратор",                     Регистратор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиОтпусков.Организация,
	|	ОстаткиОтпусков.Сотрудник,
	|	ОстаткиОтпусков.ОстатокОтпусков,
	|	ОстаткиОтпусков.ОтпускАвансом,
	|	ОстаткиОтпусков.Подразделение,
	|	ОстаткиОтпусков.СпособОтраженияЗарплатыВБухучете,
	|	ОстаткиОтпусков.СтатьяФинансирования,
	|	ОстаткиОтпусков.СреднийЗаработок
	|ПОМЕСТИТЬ ВТ_ОстаткиОтпусков
	|ИЗ
	|	&ОстаткиОтпусков КАК ОстаткиОтпусков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФондОплатыТрудаИСтраховыеВзносы.Организация,
	|	ФондОплатыТрудаИСтраховыеВзносы.Сотрудник,
	|	ФондОплатыТрудаИСтраховыеВзносы.Подразделение,
	|	ФондОплатыТрудаИСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	ФондОплатыТрудаИСтраховыеВзносы.СтатьяФинансирования,
	|	ФондОплатыТрудаИСтраховыеВзносы.Налог,
	|	ФондОплатыТрудаИСтраховыеВзносы.ФондОплатыТруда,
	|	ФондОплатыТрудаИСтраховыеВзносы.СтраховыеВзносы
	|ПОМЕСТИТЬ ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|ИЗ
	|	&ФондОплатыТрудаИСтраховыеВзносы КАК ФондОплатыТрудаИСтраховыеВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Регистратор КАК Регистратор,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Организация КАК Организация,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.ФондОплатыТруда КАК ФОТ,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.СтраховыеВзносы КАК СтраховыеВзносы,
	|	ВТ_ОстаткиОтпусков.ОстатокОтпусков КАК ОстатокОтпуска,
	|	ВТ_ОстаткиОтпусков.ОтпускАвансом КАК ОтпускАвансом,
	|	ВТ_ОстаткиОтпусков.СреднийЗаработок КАК СреднийЗаработок,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Подразделение КАК Подразделение,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы.Налог КАК Налог,
	|	0 КАК ТекущаяСтавкаСтраховыхВзносов
	|ИЗ
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиОтпусков КАК ВТ_ОстаткиОтпусков
	|		ПО (ВТ_ОстаткиОтпусков.Организация = ВТ_ФондОплатыТрудаИСтраховыеВзносы.Организация)
	|			И (ВТ_ОстаткиОтпусков.Сотрудник = ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Регистратор,
	|	ВТ_ОстаткиОтпусков.Организация,
	|	ВТ_ОстаткиОтпусков.Сотрудник,
	|	ВТ_ОстаткиОтпусков.СпособОтраженияЗарплатыВБухучете,
	|	ВТ_ОстаткиОтпусков.СтатьяФинансирования,
	|	СУММА(0),
	|	СУММА(0),
	|	ВТ_ОстаткиОтпусков.ОстатокОтпусков,
	|	ВТ_ОстаткиОтпусков.ОтпускАвансом,
	|	ВТ_ОстаткиОтпусков.СреднийЗаработок,
	|	ВТ_ОстаткиОтпусков.Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка),
	|	СУММА(0)
	|ИЗ
	|	ВТ_ОстаткиОтпусков КАК ВТ_ОстаткиОтпусков,
	|	ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы
	|ГДЕ
	|	НЕ ВТ_ОстаткиОтпусков.Сотрудник В
	|				(ВЫБРАТЬ
	|					ВТ_ФондОплатыТрудаИСтраховыеВзносы.Сотрудник КАК Сотрудник
	|				ИЗ
	|					ВТ_ФондОплатыТрудаИСтраховыеВзносы КАК ВТ_ФондОплатыТрудаИСтраховыеВзносы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиОтпусков.СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.Налоги.ПустаяСсылка),
	|	ВТ_ОстаткиОтпусков.Сотрудник,
	|	ВТ_ОстаткиОтпусков.Подразделение,
	|	ВТ_ОстаткиОтпусков.СреднийЗаработок,
	|	ВТ_ОстаткиОтпусков.Организация,
	|	ВТ_ОстаткиОтпусков.СпособОтраженияЗарплатыВБухучете,
	|	ВТ_ОстаткиОтпусков.ОстатокОтпусков,
	|	ВТ_ОстаткиОтпусков.ОтпускАвансом";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Инвентаризация Тогда
		ТаблицыСтавокСтраховыхВзносов = ОтражениеЗарплатыВБухучете.ПараметрыДляИнвентаризацииОценочныхОбязательствОтпусков(Организация, ПериодРегистрации);
		СтавкиСтраховыхВзносов = ТаблицыСтавокСтраховыхВзносов.СтавкиСтраховыхВзносов;
		Для Каждого СтрокаТаблицы Из Результат Цикл
			ПараметрыОтбора = Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник);
			МассивСтрок = СтавкиСтраховыхВзносов.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаМассива Из МассивСтрок Цикл
				СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов = СтрокаМассива.Ставка;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура СобратьДанныеДляНачислениеРезерваОтпусков(Регистратор, Организация, ПериодРегистрации, РасчетРезерваОтпусков, ОценочныеОбязательства) Экспорт
	

	Реквизиты = Новый Структура("Организация, Период", Организация, ПериодРегистрации);
	
	НастройкиРезервовОтпусков   = НастройкиРезервовОтпусков(Организация, НачалоМесяца(ПериодРегистрации));
	ФормироватьРезервОтпусковБУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ;
	ФормироватьРезервОтпусковНУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковНУ;
	ОпределятьИзлишкиЕжемесячно = НастройкиРезервовОтпусков.ОпределятьИзлишкиЕжемесячно;
		
	Если НЕ ФормироватьРезервОтпусковБУ И НЕ ФормироватьРезервОтпусковНУ Тогда
		Возврат;
	КонецЕсли;
	
	МетодНачисленияРезерваОтпусков              = НастройкиРезервовОтпусков.МетодНачисленияРезерваОтпусков;
	НормативОтчисленийВРезервОтпусков           = НастройкиРезервовОтпусков.НормативОтчисленийВРезервОтпусков;
	ПредельнаяВеличинаОтчисленийВРезервОтпусков = НастройкиРезервовОтпусков.ПредельнаяВеличинаОтчисленийВРезервОтпусков;
	Инвентаризация                              = КонецМесяца(ПериодРегистрации) = КонецГода(ПериодРегистрации);
	
	ПараметрыРасчетаОбязательств = ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, Регистратор, Инвентаризация, ОпределятьИзлишкиЕжемесячно);
	
	Организации = ВсяОрганизация(Организация);
	ДоляРезервовОтпусков = ДоляСписанияКосвенныхРасходов(ПериодРегистрации, Организация, Регистратор);
	ПредельнаяВеличинаРезерваТекущегоМесяца = Окр(ДоляРезервовОтпусков * (ПараметрыРасчетаОбязательств.Итог("ФОТ")
		+ ПараметрыРасчетаОбязательств.Итог("СтраховыеВзносы"))
		, 2);

	СтруктураПараметровРасчета = Новый Структура;
	СтруктураПараметровРасчета.Вставить("Организация", Организация);
	СтруктураПараметровРасчета.Вставить("ПериодРегистрации", ПериодРегистрации);
	СтруктураПараметровРасчета.Вставить("Инвентаризация", Инвентаризация);
	СтруктураПараметровРасчета.Вставить("ОпределятьИзлишкиЕжемесячно", ОпределятьИзлишкиЕжемесячно);
	СтруктураПараметровРасчета.Вставить("ФормироватьРезервОтпусковБУ", ФормироватьРезервОтпусковБУ);
	СтруктураПараметровРасчета.Вставить("ФормироватьРезервОтпусковНУ", ФормироватьРезервОтпусковНУ);
	СтруктураПараметровРасчета.Вставить("МетодНачисленияРезерваОтпусков", МетодНачисленияРезерваОтпусков);
	СтруктураПараметровРасчета.Вставить("НормативОтчисленийВРезервОтпусков", НормативОтчисленийВРезервОтпусков);
	СтруктураПараметровРасчета.Вставить("ПредельнаяВеличинаОтчисленийВРезервОтпусков", 
		ПредельнаяВеличинаОтчисленийВРезервОтпусков);
	СтруктураПараметровРасчета.Вставить("ПредельнаяВеличинаРезерваТекущегоМесяца", 
		ПредельнаяВеличинаРезерваТекущегоМесяца);
								
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерва",                               ОписаниеТиповЧисло);
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносов",               ОписаниеТиповЧисло);
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваНакоплено",                      ОписаниеТиповЧисло);
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовНакоплено",      ОписаниеТиповЧисло);
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваИсчислено",                      ОписаниеТиповЧисло);
	ПараметрыРасчетаОбязательств.Колонки.Добавить("СуммаРезерваСтраховыхВзносовИсчислено",      ОписаниеТиповЧисло);
	
	РассчитатьСуммыРезервовОтпусков(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
	ВычислитьСуммыРезервовТекущегоМесяца(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, Регистратор);
	
	СформироватьТаблицуРасчетаРезерваОтпусков(ПараметрыРасчетаОбязательств, Реквизиты, РасчетРезерваОтпусков, МетодНачисленияРезерваОтпусков);
	
	// ERP 3286
	ОтражениеЗарплатыВФинансовомУчетеУП.ЗаполнитьПодразделениеПредприятиеПоМестамСотрудников(ПараметрыРасчетаОбязательств, ПериодРегистрации);
	// Конец ERP
	
	СформироватьТаблицуОценочныеОбязательства(ПараметрыРасчетаОбязательств, ОценочныеОбязательства);
	
КонецПроцедуры

Процедура СформироватьТаблицуРасчетаРезерваОтпусков(ТаблицаОбязательств, Реквизиты, РасчетРезерваОтпусков, МетодНачисленияРезерваОтпусков)
	
	ТаблицаРезервов =  ТаблицаОбязательств.Скопировать();
	

	ТаблицаРезервов.Свернуть("Сотрудник,
		|СреднийЗаработок,ТекущаяСтавкаСтраховыхВзносов",
		"ОстатокОтпуска,ОтпускАвансом,ФОТ,СтраховыеВзносы,
		|СуммаРезерваНакоплено,СуммаРезерваСтраховыхВзносовНакоплено,
		|СуммаРезерваИсчислено,СуммаРезерваСтраховыхВзносовИсчислено,
		|СуммаРезерва,СуммаРезерваСтраховыхВзносов");

	ТаблицаРезервов.Колонки.Добавить("Организация");
	ТаблицаРезервов.Колонки.Добавить("ПериодРасчета");
	ТаблицаРезервов.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	ТаблицаРезервов.ЗаполнитьЗначения(Реквизиты.Период, "ПериодРасчета");
	
	РасчетРезерваОтпусков = ТаблицаРезервов.Скопировать();
	
КонецПроцедуры

Процедура СформироватьТаблицуОценочныеОбязательства(ТаблицаОбязательств, ОценочныеОбязательства)
	
	ТаблицаРезервов =  ТаблицаОбязательств.Скопировать();
	
	// ERP 3286
	ТаблицаРезервов.Свернуть("ПодразделениеПредприятия, Подразделение, СпособОтраженияЗарплатыВБухУчете",	
	"СуммаРезерва,СуммаРезерваСтраховыхВзносов");
	ТаблицаРезервов.Сортировать("ПодразделениеПредприятия, Подразделение, СпособОтраженияЗарплатыВБухУчете, СуммаРезерва, СуммаРезерваСтраховыхВзносов");

	// Конец ERP
	
	Для Каждого СтрокаТаблицы Из ТаблицаРезервов Цикл
		
		Если СтрокаТаблицы.СуммаРезерва = 0
			И СтрокаТаблицы.СуммаРезерваСтраховыхВзносов = 0
			Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ОценочныеОбязательства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНачислениеОценочныхОбязательствПоОтпускам(ДокументОбъект) Экспорт
	
	// Начисленная зарплата и взносы.
	ДокументОбъект.РасчетРезерваОтпусков.Очистить();
	ДокументОбъект.ОценочныеОбязательства.Очистить();
	
	Если ДокументОбъект.ДоляРасходов = 0 Тогда
		
		ДокументОбъект.ДоляРасходов = ДоляРезерваОтпусков(ДокументОбъект.ПериодРегистрации, 
			ДокументОбъект.Организация, ДокументОбъект.Ссылка);
			
	КонецЕсли;
	
	РасчетРезерваОтпусков  = ДокументОбъект.РасчетРезерваОтпусков.СкопироватьКолонки();
	ОценочныеОбязательства = ДокументОбъект.ОценочныеОбязательства.СкопироватьКолонки();

	СобратьДанныеДляНачислениеРезерваОтпусков(ДокументОбъект.Ссылка, ДокументОбъект.Организация, ДокументОбъект.ПериодРегистрации, 
		РасчетРезерваОтпусков, ОценочныеОбязательства);
		
	РасчетРезерваОтпусков.Сортировать("Сотрудник");
	ОценочныеОбязательства.Сортировать("Подразделение, СпособОтраженияЗарплатыВБухучете, СтатьяФинансирования");
		
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетРезерваОтпусков,
		ДокументОбъект.РасчетРезерваОтпусков);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОценочныеОбязательства,
		ДокументОбъект.ОценочныеОбязательства);
	
КонецПроцедуры

#КонецОбласти

#Область РасчетСуммыРезерва

Процедура РассчитатьСуммыРезервовОтпусков(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета)
	
	Если СтруктураПараметровРасчета.Инвентаризация Тогда
		СуммыРезервовОтпусковМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
		СинхронизацияСведенийОСуммеРезервовБУиНУ(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
	Иначе
		Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ Тогда
			СуммыРезервовОтпусковМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета);
			СуммыРезервовОтпусковНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета)
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВычислитьСуммыРезервовТекущегоМесяца(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, Регистратор)
	
	ЗначениеРезервОтпусков                     = Перечисления.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВознаграждениям;
	ЗначениеВзносыРезерваОтпусков              = Перечисления.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоСтраховымВзносам;
	
	ТаблицаНакопленныхРезервов = ТаблицаНакопленныхРезервовТекущегоМесяца(СтруктураПараметровРасчета, Регистратор);
	
	НачисленоРезервов                    = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваИсчислено");
	НачисленоВзносовРезервов             = ПараметрыРасчетаОбязательств.Итог("СуммаРезерваСтраховыхВзносовИсчислено");
	ВсегоНачисленоРезервов               = НачисленоРезервов + НачисленоВзносовРезервов;
	
	
	НакопленоРезервов                      = 0;
	НакопленоВзносовРезервов               = 0;
	
	Если ТаблицаНакопленныхРезервов <> Неопределено Тогда
		
		НайденнаяСтрока = ТаблицаНакопленныхРезервов.Найти(ЗначениеРезервОтпусков, "ТипОценочногоОбязательства"); 
		Если НайденнаяСтрока <> Неопределено Тогда
			НакопленоРезервов   = НайденнаяСтрока.НачальныйОстаток + НайденнаяСтрока.Оборот;
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаНакопленныхРезервов.Найти(ЗначениеВзносыРезерваОтпусков, "ТипОценочногоОбязательства"); 
		Если НайденнаяСтрока <> Неопределено Тогда
			НакопленоВзносовРезервов   = НайденнаяСтрока.НачальныйОстаток + НайденнаяСтрока.Оборот;
		КонецЕсли;
		
		
	КонецЕсли;
	
	ВсегоНакопленоРезервов   = НакопленоРезервов + НакопленоВзносовРезервов;
	
	СтруктураПараметровРасчета.Вставить("НакопленоРезервов",                      НакопленоРезервов);
	СтруктураПараметровРасчета.Вставить("НакопленоВзносовРезервов",               НакопленоВзносовРезервов);
	СтруктураПараметровРасчета.Вставить("ВсегоНакопленоРезервов",                 ВсегоНакопленоРезервов);
	
	СтруктураПараметровРасчета.Вставить("НачисленоРезервов",                      НачисленоРезервов);
	СтруктураПараметровРасчета.Вставить("НачисленоВзносовРезервов",               НачисленоВзносовРезервов);
	СтруктураПараметровРасчета.Вставить("ВсегоНачисленоРезервов",                 ВсегоНачисленоРезервов);
	
	Если НЕ СтруктураПараметровРасчета.Инвентаризация Тогда
		СуммыРезервовТекущегоМесяцаНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты);
		Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ Тогда
			СуммыРезервовТекущегоМесяцаНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, "НУ");
		КонецЕсли;
	КонецЕсли;
	ДополнитьТаблицуНакопленнымиРезервами(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Регистратор);
	
	СуммыРезервовТекущегоМесяцаМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, Регистратор);
	
КонецПроцедуры

Процедура СинхронизацияСведенийОСуммеРезервовБУиНУ(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета)
	
	Для Каждого СтрокаТаблицы Из ПараметрыРасчетаОбязательств Цикл
		Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ Тогда
			СтрокаТаблицы.СуммаРезерваИсчисленоНУ                    = СтрокаТаблицы.СуммаРезерваИсчислено;
			СтрокаТаблицы.СуммаРезерваСтраховыхВзносовИсчисленоНУ    = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовИсчислено;
			СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ = СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиИсчислено;
		КонецЕсли;
		Если НЕ СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ Тогда
			СтрокаТаблицы.СуммаРезерваИсчислено                    = 0;
			СтрокаТаблицы.СуммаРезерваСтраховыхВзносовИсчислено    = 0;
			СтрокаТаблицы.СуммаРезерваФССНесчастныеСлучаиИсчислено = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область НормативныйМетод

Процедура СуммыРезервовОтпусковНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, ВидУчета = "")
	
	
	
	Если СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод 
		ИЛИ ВидУчета = "НУ" Тогда
		
		Для Каждого СтрокаТаблицы Из ПараметрыРасчетаОбязательств Цикл
			
			СтрокаТаблицы["СуммаРезерваИсчислено" + ВидУчета]                    = Окр(СтрокаТаблицы.ФОТ*СтруктураПараметровРасчета.НормативОтчисленийВРезервОтпусков/100,2);
			СтрокаТаблицы["СуммаРезерваСтраховыхВзносовИсчислено" + ВидУчета]    = Окр(СтрокаТаблицы.СтраховыеВзносы*СтруктураПараметровРасчета.НормативОтчисленийВРезервОтпусков/100,2);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СуммыРезервовТекущегоМесяцаНормативныйМетод(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, ВидУчета = "")
	
	Если ((СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод))
		ИЛИ (СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ И ВидУчета = "НУ") Тогда
		Если СтруктураПараметровРасчета["ВсегоНакопленоРезервов" + ВидУчета] + СтруктураПараметровРасчета["ВсегоНачисленоРезервов" + ВидУчета] > СтруктураПараметровРасчета.ПредельнаяВеличинаОтчисленийВРезервОтпусков Тогда
			Разница = СтруктураПараметровРасчета.ПредельнаяВеличинаОтчисленийВРезервОтпусков - СтруктураПараметровРасчета["ВсегоНакопленоРезервов" + ВидУчета];
			Разница = Мин(Разница,СтруктураПараметровРасчета["ВсегоНачисленоРезервов" + ВидУчета], СтруктураПараметровРасчета.ПредельнаяВеличинаРезерваТекущегоМесяца);
			Если Разница <> 0 Тогда
				
				ВсегоНачисленоРезервов = СтруктураПараметровРасчета["НачисленоРезервов" + ВидУчета]
					+ СтруктураПараметровРасчета["НачисленоВзносовРезервов" + ВидУчета];
				
				ДоляВзносов =  ?(ВсегоНачисленоРезервов = 0, 0, СтруктураПараметровРасчета["НачисленоВзносовРезервов" + ВидУчета]/ВсегоНачисленоРезервов);
				ВзносыКНачислению  = Окр(Разница*ДоляВзносов, 2);
				
				
				РезервКНачислению = Разница - ВзносыКНачислению;		
				
				РаспределитьСуммуПоКолонкеТаблицы(РезервКНачислению, ПараметрыРасчетаОбязательств, "СуммаРезерва" + ВидУчета,                    "СуммаРезерваИсчислено" + ВидУчета);
				РаспределитьСуммуПоКолонкеТаблицы(ВзносыКНачислению, ПараметрыРасчетаОбязательств, "СуммаРезерваСтраховыхВзносов" + ВидУчета,    "СуммаРезерваСтраховыхВзносовИсчислено" + ВидУчета);
				
			Иначе
				
				ПараметрыРасчетаОбязательств.ЗаполнитьЗначения(0, "СуммаРезерва" + ВидУчета);
				ПараметрыРасчетаОбязательств.ЗаполнитьЗначения(0, "СуммаРезерваСтраховыхВзносов" + ВидУчета);
				
			КонецЕсли;
			
		Иначе
			
			РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета["НачисленоРезервов" + ВидУчета],                     ПараметрыРасчетаОбязательств, "СуммаРезерва" + ВидУчета,                    "СуммаРезерваИсчислено" + ВидУчета);
			РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета["НачисленоВзносовРезервов" + ВидУчета] ,             ПараметрыРасчетаОбязательств, "СуммаРезерваСтраховыхВзносов" + ВидУчета,    "СуммаРезерваСтраховыхВзносовИсчислено" + ВидУчета);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьТаблицуНакопленнымиРезервами(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Регистратор)
	
	Если (СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод) 
		ИЛИ СтруктураПараметровРасчета.Инвентаризация Тогда
		
		
		ТаблицаОстатков = ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаОбязательств", ПараметрыРасчетаОбязательств);
		Запрос.УстановитьПараметр("ТаблицаОстатков",     ТаблицаОстатков);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник,
		|	ТаблицаОбязательств.Подразделение,
		|	ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаОбязательств.СтатьяФинансирования,
		|	ТаблицаОбязательств.ФОТ,
		|	ТаблицаОбязательств.СтраховыеВзносы,
		|	ТаблицаОбязательств.ОстатокОтпуска,
		|	ТаблицаОбязательств.ОтпускАвансом,
		|	ТаблицаОбязательств.СреднийЗаработок,
		|	ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерва,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерваНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено,
		|	ТаблицаОбязательств.Регистратор
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
		|ИЗ
		|	&ТаблицаОбязательств КАК ТаблицаОбязательств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	СУММА(ТаблицаОбязательств.СуммаРезерва) КАК СуммаРезерва,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов) КАК СуммаРезерваСтраховыхВзносов,
		|	СУММА(ТаблицаОбязательств.ОстатокОтпуска) КАК ОстатокОтпуска
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательствСводная
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ТаблицаОбязательств
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОбязательств.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Сотрудник КАК Сотрудник,
		|	ТаблицаОстатков.СуммаРезерваОстаток КАК СуммаРезерваОстаток,
		|	ТаблицаОстатков.СуммаРезерваСтраховыхВзносовОстаток КАК СуммаРезерваСтраховыхВзносовОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиРезервов
		|ИЗ
		|	&ТаблицаОстатков КАК ТаблицаОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаОбязательств.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ВТ_ТаблицаОбязательств.ФОТ КАК ФОТ,
		|	ВТ_ТаблицаОбязательств.СтраховыеВзносы КАК СтраховыеВзносы,
		|	ВТ_ТаблицаОбязательств.ОстатокОтпуска КАК ОстатокОтпуска,
		|	ВТ_ТаблицаОбязательств.ОтпускАвансом КАК ОтпускАвансом,
		|	ВТ_ТаблицаОбязательств.СреднийЗаработок КАК СреднийЗаработок,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов КАК ТекущаяСтавкаСтраховыхВзносов,
		|	ВТ_ТаблицаОбязательств.СуммаРезерва КАК СуммаРезерва,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов КАК СуммаРезерваСтраховыхВзносов,
		|	ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерва <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|	КОНЕЦ КАК СуммаРезерваНакоплено,
		|	ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНакоплено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено КАК СуммаРезерваИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено КАК СуммаРезерваСтраховыхВзносовИсчислено,
		|	ВТ_ТаблицаОбязательств.Регистратор КАК Регистратор,
		|	ВТ_ТаблицаОбязательств.СтатьяФинансирования КАК СтатьяФинансирования
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОбязательствСводная КАК ВТ_ТаблицаОбязательствСводная
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ТаблицаОбязательствСводная.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиРезервов КАК ВТ_ОстаткиРезервов
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ОстаткиРезервов.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	СпособОтраженияЗарплатыВБухучете,
		|	СтатьяФинансирования";
		
		ПараметрыРасчетаОбязательств = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РезервОтпусковМетодОбязательств

// Содержимое модуля отличается в версиях ПРОФ и КОРП

#Область Соглашения

Функция УточнитьМетодНачисленияРезерваОтпусков(Организация, Период) Экспорт

	Результат = Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод;
	
	// Версия КОРП
	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, НачалоМесяца(Период));
	Результат = НастройкиРезервовОтпусков.МетодНачисленияРезерваОтпусков;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область МетодОбязательств

Процедура СуммыРезервовОтпусковМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета) Экспорт
	
	
	Если СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.МетодОбязательств 
		ИЛИ СтруктураПараметровРасчета.Инвентаризация Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаОбязательств",        ПараметрыРасчетаОбязательств);
		Запрос.УстановитьПараметр("Организация",                СтруктураПараметровРасчета.Организация);
		Запрос.УстановитьПараметр("ПредыдущийПериод",           КонецМесяца(ДобавитьМесяц(СтруктураПараметровРасчета.ПериодРегистрации, -1)));
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник,
		|	ТаблицаОбязательств.ФОТ,
		|	ТаблицаОбязательств.СтраховыеВзносы,
		|	ТаблицаОбязательств.ОстатокОтпуска,
		|	ТаблицаОбязательств.ОтпускАвансом,
		|	ТаблицаОбязательств.СреднийЗаработок
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
		|ИЗ
		|	&ТаблицаОбязательств КАК ТаблицаОбязательств
		|ГДЕ
		|	ТаблицаОбязательств.ФОТ = 0
		|	И ТаблицаОбязательств.СтраховыеВзносы = 0
		|	И ТаблицаОбязательств.СреднийЗаработок <> 0
		|	И ТаблицаОбязательств.ОстатокОтпуска <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РасчетРезерваОтпусков.ТекущаяСтавкаСтраховыхВзносов) КАК ТекущаяСтавкаСтраховыхВзносов,
		|	РасчетРезерваОтпусков.Сотрудник
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств,
		|	РегистрСведений.РасчетРезерваОтпусков КАК РасчетРезерваОтпусков
		|ГДЕ
		|	РасчетРезерваОтпусков.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ)
		|	И РасчетРезерваОтпусков.Организация = &Организация
		|	И РасчетРезерваОтпусков.Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТ_ТаблицаОбязательств.Сотрудник КАК Сотрудник
		|			ИЗ
		|				ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетРезерваОтпусков.Сотрудник";
		
		ТаблицаСтавокПредыдущегоПериода = Запрос.Выполнить().Выгрузить();
		
		СводнаяТаблица =  ПараметрыРасчетаОбязательств.Скопировать();
		
		СводнаяТаблица.Свернуть("Сотрудник", "СтраховыеВзносы, ФОТ");
		
		Для Каждого СтрокаТаблицы Из СводнаяТаблица Цикл
			
			МассивСтрок = ПараметрыРасчетаОбязательств.НайтиСтроки(Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник));
			МассивСумм = Новый Массив;
			Для Каждого ЗначениеМассива Из МассивСтрок Цикл
				
				МассивСумм.Добавить(ЗначениеМассива.ФОТ);
				
			КонецЦикла;
			
			ДниОтпуска = МассивСтрок[0].ОстатокОтпуска;
			МассивНовыхДней = РаспределитьПропорционально(ДниОтпуска, МассивСумм);
			Если МассивНовыхДней <> Неопределено Тогда
				
				ИндексСтроки = 0;
				КоличествоСтрок = МассивСтрок.Количество();
				Пока ИндексСтроки < КоличествоСтрок Цикл
					
					МассивСтрок[ИндексСтроки].ОстатокОтпуска = МассивНовыхДней[ИндексСтроки];
					ИндексСтроки = ИндексСтроки + 1;
					
				КонецЦикла;
				
				ДниОтпускаАвансом = МассивСтрок[0].ОтпускАвансом;
				МассивНовыхДнейАвансом = РаспределитьПропорционально(ДниОтпускаАвансом, МассивНовыхДней);
				Если МассивНовыхДнейАвансом <> Неопределено Тогда
					
					ИндексСтроки = 0;
					КоличествоСтрок = МассивСтрок.Количество();
					Пока ИндексСтроки < КоличествоСтрок Цикл
						
						МассивСтрок[ИндексСтроки].ОтпускАвансом = МассивНовыхДнейАвансом[ИндексСтроки];
						ИндексСтроки = ИндексСтроки + 1;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ПараметрыРасчетаОбязательств Цикл
			
			ОтборПоСотруднику = Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник);
			
			МассивСтрок = СводнаяТаблица.НайтиСтроки(ОтборПоСотруднику);
			
			Если МассивСтрок.Количество() <> 0 Тогда
				
				// Проверка на случай нулевого ФОТа
				Если МассивСтрок[0].ФОТ = 0 Тогда
				
					НулевойЗнаменатель = Истина;
					
				Иначе 
					
					НулевойЗнаменатель = Ложь;
					
				КонецЕсли;
				
				// Проверка на случай отсутствия остатка отпусков или среднего заработка
				Если (СтрокаТаблицы.СреднийЗаработок = Null)
					ИЛИ (СтрокаТаблицы.ОстатокОтпуска = Null)
					ИЛИ (СтрокаТаблицы.ОтпускАвансом = Null)
					ИЛИ СтрокаТаблицы.ОстатокОтпуска <= 0 
					ИЛИ СтрокаТаблицы.ОстатокОтпуска <= СтрокаТаблицы.ОтпускАвансом
					Тогда
				
					СтрокаТаблицы.СуммаРезерваИсчислено = 0;
				
				Иначе
				
					СтрокаТаблицы.СуммаРезерваИсчислено = Окр(СтрокаТаблицы.СреднийЗаработок*(СтрокаТаблицы.ОстатокОтпуска - СтрокаТаблицы.ОтпускАвансом), 2);
				
				КонецЕсли;
				
				МассивСтавокПредыдущегоПериода = ТаблицаСтавокПредыдущегоПериода.НайтиСтроки(ОтборПоСотруднику);
				// Расчет на случай нулевого ФОТа
				Если НулевойЗнаменатель Тогда
					
					СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов = 0;
					
					Если МассивСтавокПредыдущегоПериода.Количество() <> 0 Тогда
						СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов = МассивСтавокПредыдущегоПериода[0].ТекущаяСтавкаСтраховыхВзносов;
					КонецЕсли;
				
				Иначе
				
					Если НЕ СтруктураПараметровРасчета.Инвентаризация
						И НЕ СтруктураПараметровРасчета.ОпределятьИзлишкиЕжемесячно Тогда
						СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов = Окр(МассивСтрок[0].СтраховыеВзносы/МассивСтрок[0].ФОТ*100, 4);
					КонецЕсли;
				
				КонецЕсли; 
				
				СтрокаТаблицы.СуммаРезерваСтраховыхВзносовИсчислено = Окр(СтрокаТаблицы.СуммаРезерваИсчислено*СтрокаТаблицы.ТекущаяСтавкаСтраховыхВзносов/100, 2);
				
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СуммыРезервовТекущегоМесяцаМетодОбязательств(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Реквизиты, Регистратор) Экспорт
	
	Если (СтруктураПараметровРасчета.ФормироватьРезервОтпусковБУ И СтруктураПараметровРасчета.МетодНачисленияРезерваОтпусков =  Перечисления.МетодыНачисленияРезервовОтпусков.МетодОбязательств) 
		ИЛИ СтруктураПараметровРасчета.Инвентаризация Тогда
		
		ТаблицаОстатков = ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаОбязательств",         ПараметрыРасчетаОбязательств);
		Запрос.УстановитьПараметр("ТаблицаОстатков",             ТаблицаОстатков);
		Запрос.УстановитьПараметр("Инвентаризация",              СтруктураПараметровРасчета.Инвентаризация);
		Запрос.УстановитьПараметр("ОпределятьИзлишкиЕжемесячно", СтруктураПараметровРасчета.ОпределятьИзлишкиЕжемесячно);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник,
		|	ТаблицаОбязательств.Подразделение,
		|	ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаОбязательств.СтатьяФинансирования,
		|	ТаблицаОбязательств.ФОТ,
		|	ТаблицаОбязательств.СтраховыеВзносы,
		|	ТаблицаОбязательств.ОстатокОтпуска,
		|	ТаблицаОбязательств.ОтпускАвансом,
		|	ТаблицаОбязательств.СреднийЗаработок,
		|	ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерва,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерваНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено,
		|	ТаблицаОбязательств.Регистратор
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
		|ИЗ
		|	&ТаблицаОбязательств КАК ТаблицаОбязательств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	СУММА(ТаблицаОбязательств.СуммаРезерва) КАК СуммаРезерва,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов) КАК СуммаРезерваСтраховыхВзносов,
		|	СУММА(ТаблицаОбязательств.ОстатокОтпуска) КАК ОстатокОтпуска
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательствСводная
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ТаблицаОбязательств
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОбязательств.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Сотрудник КАК Сотрудник,
		|	ТаблицаОстатков.СуммаРезерваОстаток КАК СуммаРезерваОстаток,
		|	ТаблицаОстатков.СуммаРезерваСтраховыхВзносовОстаток КАК СуммаРезерваСтраховыхВзносовОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиРезервов
		|ИЗ
		|	&ТаблицаОстатков КАК ТаблицаОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаОбязательств.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ВТ_ТаблицаОбязательств.ФОТ КАК ФОТ,
		|	ВТ_ТаблицаОбязательств.СтраховыеВзносы КАК СтраховыеВзносы,
		|	ВТ_ТаблицаОбязательств.ОстатокОтпуска КАК ОстатокОтпуска,
		|	ВТ_ТаблицаОбязательств.ОтпускАвансом КАК ОтпускАвансом,
		|	ВТ_ТаблицаОбязательств.СреднийЗаработок КАК СреднийЗаработок,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов КАК ТекущаяСтавкаСтраховыхВзносов,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|					КОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|									И ВТ_ТаблицаОбязательствСводная.СуммаРезерва <> 0
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|								ТОГДА ВЫБОР
		|										КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|											ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|										ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|									КОНЕЦ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|						КОНЕЦ ЕСТЬ NULL 
		|						ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено
		|					ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено - ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|									И ВТ_ТаблицаОбязательствСводная.СуммаРезерва <> 0
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|								ТОГДА ВЫБОР
		|										КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|											ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|										ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|									КОНЕЦ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|						КОНЕЦ
		|				КОНЕЦ < 0
		|				И НЕ &Инвентаризация
		|				И НЕ &ОпределятьИзлишкиЕжемесячно
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|								И ВТ_ТаблицаОбязательствСводная.СуммаРезерва <> 0
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|							ТОГДА ВЫБОР
		|									КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|										ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|									ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|								КОНЕЦ
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|								И ВТ_ТаблицаОбязательствСводная.СуммаРезерва <> 0
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|							ТОГДА ВЫБОР
		|									КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|										ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|									ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|								КОНЕЦ
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерва,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|					КОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|									И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов <> 0
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|								ТОГДА ВЫБОР
		|										КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|											ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|										ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|									КОНЕЦ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|						КОНЕЦ ЕСТЬ NULL 
		|						ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено
		|					ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено - ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|									И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов <> 0
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|							КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|								ТОГДА ВЫБОР
		|										КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|											ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|										ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|									КОНЕЦ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|						КОНЕЦ
		|				КОНЕЦ < 0
		|				И НЕ &Инвентаризация
		|				И НЕ &ОпределятьИзлишкиЕжемесячно
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|								И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов <> 0
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|							ТОГДА ВЫБОР
		|									КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|										ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|									ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|								КОНЕЦ
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|					КОНЕЦ ЕСТЬ NULL 
		|					ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено
		|				ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено - ВЫБОР
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|								И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов <> 0
		|							ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|						КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|							ТОГДА ВЫБОР
		|									КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|										ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|									ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|								КОНЕЦ
		|						ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносов,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = ВТ_ТаблицаОбязательств.СуммаРезерва
		|				И ВТ_ТаблицаОбязательствСводная.СуммаРезерва <> 0
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерва = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|						ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстаток
		|					ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстаток * ВТ_ТаблицаОбязательств.СуммаРезерва / ВТ_ТаблицаОбязательствСводная.СуммаРезерва
		|	КОНЕЦ КАК СуммаРезерваНакоплено,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов
		|				И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов <> 0
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|						ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток
		|					ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстаток * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносов
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНакоплено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено КАК СуммаРезерваИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено КАК СуммаРезерваСтраховыхВзносовИсчислено,
		|	ВТ_ТаблицаОбязательств.Регистратор КАК Регистратор,
		|	ВТ_ТаблицаОбязательств.СтатьяФинансирования КАК СтатьяФинансирования
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОбязательствСводная КАК ВТ_ТаблицаОбязательствСводная
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ТаблицаОбязательствСводная.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиРезервов КАК ВТ_ОстаткиРезервов
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ОстаткиРезервов.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	СпособОтраженияЗарплатыВБухучете,
		|	СтатьяФинансирования";
		
		ПараметрыРасчетаОбязательств = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СуммыРезервовТекущегоМесяцаМетодОбязательствНУ(ПараметрыРасчетаОбязательств, СтруктураПараметровРасчета, Регистратор) Экспорт
	
	Если СтруктураПараметровРасчета.ФормироватьРезервОтпусковНУ И СтруктураПараметровРасчета.Инвентаризация Тогда
		
		ТаблицаОстатков = ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаОбязательств",        ПараметрыРасчетаОбязательств);
		Запрос.УстановитьПараметр("ТаблицаОстатков",            ТаблицаОстатков);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник,
		|	ТаблицаОбязательств.Подразделение,
		|	ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаОбязательств.СтатьяФинансирования,
		|	ТаблицаОбязательств.ФОТ,
		|	ТаблицаОбязательств.СтраховыеВзносы,
		|	ТаблицаОбязательств.ФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.ОстатокОтпуска,
		|	ТаблицаОбязательств.ОтпускАвансом,
		|	ТаблицаОбязательств.СреднийЗаработок,
		|	ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов,
		|	ТаблицаОбязательств.ТекущаяСтавкаФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.СуммаРезерва,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи,
		|	ТаблицаОбязательств.СуммаРезерваНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ,
		|	ТаблицаОбязательств.СуммаРезерваНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакоплено,
		|	ТаблицаОбязательств.СуммаРезерваНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено,
		|	ТаблицаОбязательств.СуммаРезерваИсчисленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ,
		|	ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
		|	ТаблицаОбязательств.Регистратор,
		|	ТаблицаОбязательств.ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
		|ИЗ
		|	&ТаблицаОбязательств КАК ТаблицаОбязательств
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваНУ) КАК СуммаРезерваНУ,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ) КАК СуммаРезерваСтраховыхВзносовНУ,
		|	СУММА(ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ) КАК СуммаРезерваФССНесчастныеСлучаиНУ,
		|	СУММА(ТаблицаОбязательств.ОстатокОтпуска) КАК ОстатокОтпуска
		|ПОМЕСТИТЬ ВТ_ТаблицаОбязательствСводная
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ТаблицаОбязательств
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОбязательств.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Сотрудник КАК Сотрудник,
		|	ТаблицаОстатков.СуммаРезерваОстатокНУ КАК СуммаРезерваОстатокНУ,
		|	ТаблицаОстатков.СуммаРезерваСтраховыхВзносовОстатокНУ КАК СуммаРезерваСтраховыхВзносовОстатокНУ,
		|	ТаблицаОстатков.СуммаРезерваФССНесчастныеСлучаиОстатокНУ КАК СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|ПОМЕСТИТЬ ВТ_ОстаткиРезервов
		|ИЗ
		|	&ТаблицаОстатков КАК ТаблицаОстатков
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаОбязательств.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаОбязательств.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаОбязательств.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
		|	ВТ_ТаблицаОбязательств.ФОТ КАК ФОТ,
		|	ВТ_ТаблицаОбязательств.СтраховыеВзносы КАК СтраховыеВзносы,
		|	ВТ_ТаблицаОбязательств.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.ОстатокОтпуска КАК ОстатокОтпуска,
		|	ВТ_ТаблицаОбязательств.ОтпускАвансом КАК ОтпускАвансом,
		|	ВТ_ТаблицаОбязательств.СреднийЗаработок КАК СреднийЗаработок,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаСтраховыхВзносов КАК ТекущаяСтавкаСтраховыхВзносов,
		|	ВТ_ТаблицаОбязательств.ТекущаяСтавкаФССНесчастныеСлучаи КАК ТекущаяСтавкаФССНесчастныеСлучаи,
		|	ВТ_ТаблицаОбязательств.СуммаРезерва КАК СуммаРезерва,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов КАК СуммаРезерваСтраховыхВзносов,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаи КАК СуммаРезерваФССНесчастныеСлучаи,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = ВТ_ТаблицаОбязательств.СуммаРезерваНУ
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ
		|			КОНЕЦ ЕСТЬ NULL 
		|			ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваИсчисленоНУ
		|		ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваИсчисленоНУ - ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = ВТ_ТаблицаОбязательств.СуммаРезерваНУ
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваНУ,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ
		|			КОНЕЦ ЕСТЬ NULL 
		|			ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ
		|		ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ - ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНУ,
		|	ВЫБОР
		|		КОГДА ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ
		|			КОНЕЦ ЕСТЬ NULL 
		|			ТОГДА ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ
		|		ИНАЧЕ ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ - ВЫБОР
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ
		|						И ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ <> 0
		|					ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|				КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = 0
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|								ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|							ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|						КОНЕЦ
		|				ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваНакоплено КАК СуммаРезерваНакоплено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНакоплено КАК СуммаРезерваСтраховыхВзносовНакоплено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНакоплено КАК СуммаРезерваФССНесчастныеСлучаиНакоплено,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = ВТ_ТаблицаОбязательств.СуммаРезерваНУ
		|				И ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ <> 0
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|						ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ
		|					ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваНУ
		|	КОНЕЦ КАК СуммаРезерваНакопленоНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ
		|				И ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ <> 0
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|						ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ
		|					ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваСтраховыхВзносовОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваСтраховыхВзносовНУ
		|	КОНЕЦ КАК СуммаРезерваСтраховыхВзносовНакопленоНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ
		|				И ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ <> 0
		|			ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|		КОГДА ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ = 0
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска = ВТ_ТаблицаОбязательств.ОстатокОтпуска
		|						ТОГДА ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ
		|					ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.ОстатокОтпуска / ВТ_ТаблицаОбязательствСводная.ОстатокОтпуска
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_ОстаткиРезервов.СуммаРезерваФССНесчастныеСлучаиОстатокНУ * ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиНУ / ВТ_ТаблицаОбязательствСводная.СуммаРезерваФССНесчастныеСлучаиНУ
		|	КОНЕЦ КАК СуммаРезерваФССНесчастныеСлучаиНакопленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчислено КАК СуммаРезерваИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчислено КАК СуммаРезерваСтраховыхВзносовИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчислено КАК СуммаРезерваФССНесчастныеСлучаиИсчислено,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваИсчисленоНУ КАК СуммаРезерваИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносовИсчисленоНУ КАК СуммаРезерваСтраховыхВзносовИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ КАК СуммаРезерваФССНесчастныеСлучаиИсчисленоНУ,
		|	ВТ_ТаблицаОбязательств.Регистратор КАК Регистратор,
		|	ВТ_ТаблицаОбязательств.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
		|	ВТ_ТаблицаОбязательств.СтатьяФинансирования КАК СтатьяФинансирования
		|ИЗ
		|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаОбязательствСводная КАК ВТ_ТаблицаОбязательствСводная
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ТаблицаОбязательствСводная.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиРезервов КАК ВТ_ОстаткиРезервов
		|		ПО ВТ_ТаблицаОбязательств.Сотрудник = ВТ_ОстаткиРезервов.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Подразделение,
		|	СпособОтраженияЗарплатыВБухучете,
		|	СтатьяФинансирования";
		
		ПараметрыРасчетаОбязательств = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьВходящиеОстатки(СтруктураПараметровРасчета, ПараметрыРасчетаОбязательств) Экспорт
	
	ТаблицаРаспределенияОстатков = ПараметрыРасчетаОбязательств.Скопировать();
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	ТаблицаРаспределенияОстатков.Колонки.Добавить("СуммаРезерваОстаток",                      ОписаниеТиповЧисло);
	ТаблицаРаспределенияОстатков.Колонки.Добавить("СуммаРезерваСтраховыхВзносовОстаток",      ОписаниеТиповЧисло);
	
	ПредыдущийПериод = КонецМесяца(ДобавитьМесяц(СтруктураПараметровРасчета.ПериодРегистрации, -1));
	ТекущийПериод    = КонецМесяца(СтруктураПараметровРасчета.ПериодРегистрации);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      СтруктураПараметровРасчета.Организация);
	Запрос.УстановитьПараметр("ПредыдущийПериод", ПредыдущийПериод);
	Запрос.УстановитьПараметр("ТекущийПериод",    ТекущийПериод);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетРезерваОтпусковПредыдущийМесяц.Сотрудник КАК Сотрудник,
	|	СУММА(РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваНакоплено + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерва) КАК СуммаРезерваОстаток,
	|	СУММА(РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваСтраховыхВзносовНакоплено + РасчетРезерваОтпусковПредыдущийМесяц.СуммаРезерваСтраховыхВзносов) КАК СуммаРезерваСтраховыхВзносовОстаток
	|ПОМЕСТИТЬ ВТ_ПредыдущийМесяц
	|ИЗ
	|	РегистрСведений.РасчетРезерваОтпусков КАК РасчетРезерваОтпусковПредыдущийМесяц
	|ГДЕ
	|	РасчетРезерваОтпусковПредыдущийМесяц.Организация = &Организация
	|	И КОНЕЦПЕРИОДА(РасчетРезерваОтпусковПредыдущийМесяц.ПериодРасчета, МЕСЯЦ) = КОНЕЦПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетРезерваОтпусковПредыдущийМесяц.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыплатаОтпусковЗаСчетРезерва.Сотрудник КАК Сотрудник,
	|	СУММА(ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваВыбыло) КАК СуммаРезерваВыбыло,
	|	СУММА(ВыплатаОтпусковЗаСчетРезерва.СуммаРезерваСтраховыхВзносовВыбыло) КАК СуммаРезерваСтраховыхВзносовВыбыло
	|ПОМЕСТИТЬ ВТ_ТекущийМесяц
	|ИЗ
	|	РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва КАК ВыплатаОтпусковЗаСчетРезерва
	|ГДЕ
	|	ВыплатаОтпусковЗаСчетРезерва.Организация = &Организация
	|	И КОНЕЦПЕРИОДА(ВыплатаОтпусковЗаСчетРезерва.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(&ТекущийПериод, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаОтпусковЗаСчетРезерва.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПредыдущийМесяц.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_ПредыдущийМесяц.СуммаРезерваОстаток - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваВыбыло, 0)) КАК СуммаРезерваОстаток,
	|	СУММА(ВТ_ПредыдущийМесяц.СуммаРезерваСтраховыхВзносовОстаток - ЕСТЬNULL(ВТ_ТекущийМесяц.СуммаРезерваСтраховыхВзносовВыбыло, 0)) КАК СуммаРезерваСтраховыхВзносовОстаток
	|ИЗ
	|	ВТ_ПредыдущийМесяц КАК ВТ_ПредыдущийМесяц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущийМесяц КАК ВТ_ТекущийМесяц
	|		ПО ВТ_ПредыдущийМесяц.Сотрудник = ВТ_ТекущийМесяц.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПредыдущийМесяц.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() <> 0 Тогда
		
		Для Каждого СтрокаТаблицы Из РезультатЗапроса Цикл
			
			МассивСтрок = ТаблицаРаспределенияОстатков.НайтиСтроки(Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник));
			Если МассивСтрок.Количество() <> 0 Тогда
				Если МассивСтрок.Количество() > 1 Тогда
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваОстаток;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива Из МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваИсчислено);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваОстаток = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					РаспределяемаяСумма = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовОстаток;
					МассивСтарыхСумм = Новый Массив;
					Для Каждого ЗначениеМассива Из МассивСтрок Цикл
						МассивСтарыхСумм.Добавить(ЗначениеМассива.СуммаРезерваСтраховыхВзносовИсчислено);
					КонецЦикла;
					МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
					Если МассивНовыхСумм <> Неопределено Тогда
						ИндексСтроки = 0;
						КоличествоСтрок = МассивСтрок.Количество();
						Пока ИндексСтроки < КоличествоСтрок Цикл
							МассивСтрок[ИндексСтроки].СуммаРезерваСтраховыхВзносовОстаток = МассивНовыхСумм[ИндексСтроки];
							ИндексСтроки = ИндексСтроки + 1;
						КонецЦикла;
					КонецЕсли;
					
					
				Иначе
					МассивСтрок[0].СуммаРезерваОстаток                      = СтрокаТаблицы.СуммаРезерваОстаток;
					МассивСтрок[0].СуммаРезерваСтраховыхВзносовОстаток      = СтрокаТаблицы.СуммаРезерваСтраховыхВзносовОстаток;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;	
		
	Иначе
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоВзносовРезервов,               ТаблицаРаспределенияОстатков, "СуммаРезерваСтраховыхВзносовОстаток",		"СуммаРезерваИсчислено");
		РаспределитьСуммуПоКолонкеТаблицы(СтруктураПараметровРасчета.НакопленоРезервов,                      ТаблицаРаспределенияОстатков, "СуммаРезерваОстаток",						"СуммаРезерваИсчислено");
	КонецЕсли;
	
	ТаблицаРаспределенияОстатков.Свернуть("Сотрудник, Регистратор", "СуммаРезерваОстаток, СуммаРезерваСтраховыхВзносовОстаток");
	
	Возврат ТаблицаРаспределенияОстатков;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область РезервОтпусковПереопределяемый

#Область НакопленныеРезервы

// Получаем суммы накопленных резервов по сотрудникам 
// для отражения в учете оплаты отпуска за счет резерва.
//
Функция НакопленныеОценочныеОбязательства(Организация, Период, ДокументСсылка, Сотрудники) Экспорт
	
	
	
	ПредыдущийПериод = КонецМесяца(ДобавитьМесяц(Период, -1));
	ТекущийПериод    = КонецМесяца(Период);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("ТекущийПериод",    ТекущийПериод);
	Запрос.УстановитьПараметр("ПредыдущийПериод", ПредыдущийПериод);
	Запрос.УстановитьПараметр("Сотрудники",       Сотрудники);
	Запрос.УстановитьПараметр("Регистратор",      ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыплатаОтпусков.Сотрудник,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваВыбылоОборот) КАК СуммаРезерваВыбылоОборот,
	|	СУММА(ВыплатаОтпусков.СуммаРезерваСтраховыхВзносовВыбылоОборот) КАК СуммаРезерваСтраховыхВзносовВыбылоОборот
	|ПОМЕСТИТЬ ВТ_ВыплатаОтпусковЗаСчетРезерва
	|ИЗ
	|	РегистрНакопления.ВыплатаОтпусковЗаСчетРезерва.Обороты(
	|			НАЧАЛОПЕРИОДА(&ТекущийПериод, МЕСЯЦ),
	|			КОНЕЦПЕРИОДА(&ТекущийПериод, МЕСЯЦ),
	|			Регистратор,
	|			Организация = &Организация
	|				И Сотрудник В (&Сотрудники)) КАК ВыплатаОтпусков
	|ГДЕ
	|	ВыплатаОтпусков.Регистратор <> &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыплатаОтпусков.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетРезерваОтпусков.Сотрудник КАК Сотрудник,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваНакоплено, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерва, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваВыбылоОборот, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносовНакоплено, 0) + ЕСТЬNULL(РасчетРезерваОтпусков.СуммаРезерваСтраховыхВзносов, 0) - ЕСТЬNULL(ВыплатаОтпусков.СуммаРезерваСтраховыхВзносовВыбылоОборот, 0)) КАК СтраховыеВзносы
	|ИЗ
	|	РегистрСведений.РасчетРезерваОтпусков КАК РасчетРезерваОтпусков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыплатаОтпусковЗаСчетРезерва КАК ВыплатаОтпусков
	|		ПО РасчетРезерваОтпусков.Сотрудник = ВыплатаОтпусков.Сотрудник
	|ГДЕ
	|	РасчетРезерваОтпусков.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ПредыдущийПериод, МЕСЯЦ)
	|	И РасчетРезерваОтпусков.Организация = &Организация
	|	И РасчетРезерваОтпусков.Сотрудник В(&Сотрудники)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетРезерваОтпусков.Сотрудник";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область ОпределениеДолиРезерва

Функция РассчитыватьДолиРезерваПоБУ(Организация, Период) Экспорт
	
	Возврат УточнитьМетодНачисленияРезерваОтпусков(Организация, Период) = Перечисления.МетодыНачисленияРезервовОтпусков.НормативныйМетод;
	
КонецФункции

Функция ДоляРезерваОтпусков(Период, Организация, Регистратор = Неопределено) Экспорт
	
	НастройкиРезервовОтпусков = НастройкиРезервовОтпусков(Организация, НачалоМесяца(Период));
	РассчитыватьДолиПоБУ = НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ;

	Если РассчитыватьДолиПоБУ Тогда
		РассчитыватьДолиПоБУ = РассчитыватьДолиРезерваПоБУ(Организация, Период);
	КонецЕсли;
	
	Если НЕ РассчитыватьДолиПоБУ Тогда
		Возврат 0;
	КонецЕсли;
	
	Организации = ВсяОрганизация(Организация);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации",                Организации);
	Запрос.УстановитьПараметр("НачалоПериода",              НачалоГода(Период));
	Запрос.УстановитьПараметр("КонецПериода",               КонецМесяца(Период));
	Запрос.УстановитьПараметр("Регистратор",               Регистратор);
	
	Если Регистратор = Неопределено Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства,
		|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНачальныйОстаток + ОценочныеОбязательстваОстаткиИОбороты.СуммаПриход) КАК НакопленныйРезерв
		|ИЗ
		|	РегистрНакопления.ОценочныеОбязательства.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Организация В (&Организации)) КАК ОценочныеОбязательстваОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства";
		
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства,
		|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНачальныйОстаток + ОценочныеОбязательстваОстаткиИОбороты.СуммаПриход) КАК НакопленныйРезерв
		|ПОМЕСТИТЬ ВТ_ОстаткиИОбороты
		|ИЗ
		|	РегистрНакопления.ОценочныеОбязательства.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Организация В (&Организации)) КАК ОценочныеОбязательстваОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства,
		|	СУММА(ОценочныеОбязательстваОбороты.СуммаПриход) КАК Оборот
		|ПОМЕСТИТЬ ВТ_ТекущиеОбороты
		|ИЗ
		|	РегистрНакопления.ОценочныеОбязательства.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Организация В (&Организации)) КАК ОценочныеОбязательстваОбороты
		|ГДЕ
		|	ОценочныеОбязательстваОбороты.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства КАК ТипОценочногоОбязательства,
		|	СУММА(ВТ_ОстаткиИОбороты.НакопленныйРезерв - ЕСТЬNULL(ВТ_ТекущиеОбороты.Оборот, 0)) КАК НакопленныйРезерв
		|ИЗ
		|	ВТ_ОстаткиИОбороты КАК ВТ_ОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеОбороты КАК ВТ_ТекущиеОбороты
		|		ПО ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства = ВТ_ТекущиеОбороты.ТипОценочногоОбязательства
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства";
	КонецЕсли;

	ТаблицаНакопленныхРезервов = Запрос.Выполнить().Выгрузить();
		
	ТаблицаФондаОплатыТруда = ОтражениеЗарплатыВБухучете.ФондОплатыТрудаПоОрганизациямДляРасчетаОценочныхОбязательствОтпусков(Организации, Период);
	
	НормативОтчисленийВРезервОтпусков           = НастройкиРезервовОтпусков.НормативОтчисленийВРезервОтпусков;
	ПредельнаяВеличинаОтчисленийВРезервОтпусков = НастройкиРезервовОтпусков.ПредельнаяВеличинаОтчисленийВРезервОтпусков;
	
	ФондОплатыТруда          = ТаблицаФондаОплатыТруда.Итог("ФондаОплатыТруда");
	ВсегоНачисленоРезервов   = Окр(ФондОплатыТруда*НормативОтчисленийВРезервОтпусков/100,2);
	
	Если РассчитыватьДолиПоБУ Тогда
		ВсегоНакопленоРезервов = ТаблицаНакопленныхРезервов.Итог("НакопленныйРезерв");
	КонецЕсли;
	
	Если ВсегоНакопленоРезервов + ВсегоНачисленоРезервов > ПредельнаяВеличинаОтчисленийВРезервОтпусков Тогда
		Разница = ПредельнаяВеличинаОтчисленийВРезервОтпусков - ВсегоНакопленоРезервов;
		РезервОтпусковТекущегоМесяца = Макс(0,Мин(Разница,ВсегоНачисленоРезервов));
	Иначе
		РезервОтпусковТекущегоМесяца = ВсегоНачисленоРезервов;
	КонецЕсли;
	
	Если ФондОплатыТруда = 0 Тогда
		ДоляРезервовОтпусков = 0;
	Иначе
		ДоляРезервовОтпусков = РезервОтпусковТекущегоМесяца/ФондОплатыТруда;	
	КонецЕсли;
	// Эта доля - максимально допустимое соотношение между начисленным резервом текущего месяца
	// и фондом оплаты труда текущего месяца.
	
	ДолиСписанияКосвенныхРасходов = РегистрыСведений.ЗарплатаКадрыДолиСписанияКосвенныхРасходов.СоздатьМенеджерЗаписи();
	ДолиСписанияКосвенныхРасходов.Организация = Организация;
	ДолиСписанияКосвенныхРасходов.ПериодРасчета = Период;
	ДолиСписанияКосвенныхРасходов.Прочитать();
	ДолиСписанияКосвенныхРасходов.Организация = Организация;
	ДолиСписанияКосвенныхРасходов.ПериодРасчета = Период;
	ДолиСписанияКосвенныхРасходов.ДоляРезервовОтпусков = ДоляРезервовОтпусков;
	ДолиСписанияКосвенныхРасходов.Записать();
	
	Возврат ДоляРезервовОтпусков;
	
КонецФункции

Функция ДоляСписанияКосвенныхРасходов(Период, Организация, Регистратор = Неопределено) Экспорт
	
	ДолиСписанияКосвенныхРасходов = РегистрыСведений.ЗарплатаКадрыДолиСписанияКосвенныхРасходов.Получить(Новый Структура("Организация,ПериодРасчета", Организация, Период));
	ДоляРезервовОтпусков = ДолиСписанияКосвенныхРасходов.ДоляРезервовОтпусков;
	
	Если ДоляРезервовОтпусков = 0 Тогда
		ДоляРезервовОтпусков = ДоляРезерваОтпусков(Период, Организация, Регистратор);
	КонецЕсли;
	
	Возврат ДоляРезервовОтпусков;
	
КонецФункции

#КонецОбласти

#Область ОпределениеРазмераРезерваТекущегоПериода

// Получает накопленные с начала года суммы резервов с учетом движений текущего месяца.
//
Функция ТаблицаНакопленныхРезервовТекущегоМесяца(СтруктураПараметровРасчета, Регистратор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   СтруктураПараметровРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(СтруктураПараметровРасчета.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(СтруктураПараметровРасчета.ПериодРегистрации));
	Запрос.УстановитьПараметр("Регистратор",   Регистратор);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства,
	|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаНачальныйОстаток) КАК НачальныйОстаток,
	|	СУММА(ОценочныеОбязательстваОстаткиИОбороты.СуммаПриход) КАК Оборот
	|ПОМЕСТИТЬ ВТ_ОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.ОценочныеОбязательства.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Организация = &Организация) КАК ОценочныеОбязательстваОстаткиИОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОценочныеОбязательстваОстаткиИОбороты.ТипОценочногоОбязательства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства,
	|	СУММА(ОценочныеОбязательстваОбороты.СуммаПриход) КАК Оборот
	|ПОМЕСТИТЬ ВТ_ТекущиеОбороты
	|ИЗ
	|	РегистрНакопления.ОценочныеОбязательства.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Организация = &Организация) КАК ОценочныеОбязательстваОбороты
	|ГДЕ
	|	ОценочныеОбязательстваОбороты.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ОценочныеОбязательстваОбороты.ТипОценочногоОбязательства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства КАК ТипОценочногоОбязательства,
	|	СУММА(ВТ_ОстаткиИОбороты.НачальныйОстаток) КАК НачальныйОстаток,
	|	СУММА(ВТ_ОстаткиИОбороты.Оборот - ЕСТЬNULL(ВТ_ТекущиеОбороты.Оборот, 0)) КАК Оборот
	|ИЗ
	|	ВТ_ОстаткиИОбороты КАК ВТ_ОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеОбороты КАК ВТ_ТекущиеОбороты
	|		ПО ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства = ВТ_ТекущиеОбороты.ТипОценочногоОбязательства
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиИОбороты.ТипОценочногоОбязательства";
	
	ТаблицаНакопленныхРезервов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаНакопленныхРезервов;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

// Возвращает перечень (фиксированный массив) всех структурных частей переданной головной организации, имеющих отдельный баланс.
// В перечень входит головная организация и все ее обособленные подразделения на выделенном балансе.
//
Функция ВсяОрганизация(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";

	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
	Возврат Новый ФиксированныйМассив(Результат);
	
КонецФункции

// Функция выполняет пропорциональное распределение суммы в соответствии
// с заданными коэффициентами распределения.
//
// Параметры:
//		ИсхСумма - распределяемая сумма.
//		МассивКоэф - массив коэффициентов распределения.
//		Точность - точность округления при распределении. Необязателен.
//
//	Возврат:
//		МассивСумм - массив размерностью равный массиву коэффициентов, содержит
//			суммы в соответствии с весом коэффициента (из массива коэффициентов)
//          В случае если распределить не удалось (сумма = 0, кол-во коэф. = 0
//          или суммарный вес коэф. = 0), тогда возвращается значение Неопределено
//
Функция РаспределитьПропорционально(Знач ИсхСумма, МассивКоэф, Знач Точность = 2) Экспорт

	Если МассивКоэф.Количество() = 0 Или ИсхСумма = 0 Или ИсхСумма = Null Тогда
		Возврат Неопределено;
	КонецЕсли;

	ИндексМакс = 0;
	МаксЗнач   = 0;
	РаспрСумма = 0;
	СуммаКоэф  = 0;

	Для ИндексМассиваКоэффициентов = 0 По МассивКоэф.Количество() - 1 Цикл

		МодульЧисла = ?(МассивКоэф[ИндексМассиваКоэффициентов] > 0, МассивКоэф[ИндексМассиваКоэффициентов], - МассивКоэф[ИндексМассиваКоэффициентов]);

		Если МаксЗнач < МодульЧисла Тогда
			МаксЗнач = МодульЧисла;
			ИндексМакс = ИндексМассиваКоэффициентов;
		КонецЕсли;

		СуммаКоэф = СуммаКоэф + МассивКоэф[ИндексМассиваКоэффициентов];

	КонецЦикла;

	Если СуммаКоэф = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	МассивСумм = Новый Массив(МассивКоэф.Количество());

	Для ИндексМассиваКоэффициентов = 0 По МассивКоэф.Количество() - 1 Цикл
		МассивСумм[ИндексМассиваКоэффициентов] = Окр(ИсхСумма * МассивКоэф[ИндексМассиваКоэффициентов] / СуммаКоэф, Точность, 1);
		РаспрСумма = РаспрСумма + МассивСумм[ИндексМассиваКоэффициентов];
	КонецЦикла;

	// Погрешности округления отнесем на коэффициент с максимальным весом
	Если Не РаспрСумма = ИсхСумма Тогда
		МассивСумм[ИндексМакс] = МассивСумм[ИндексМакс] + ИсхСумма - РаспрСумма;
	КонецЕсли;

	Возврат МассивСумм;

КонецФункции // РаспределитьПропорционально()

Процедура РаспределитьСуммуПоКолонкеТаблицы(РаспределяемаяСумма, Таблица, ИмяКолонки, ИмяКолонкиБазы = "") Экспорт

	Если РаспределяемаяСумма <> 0 Тогда
		Если ПустаяСтрока(ИмяКолонкиБазы) Тогда
			МассивСтарыхСумм = Таблица.ВыгрузитьКолонку(ИмяКолонки);
		Иначе
			МассивСтарыхСумм = Таблица.ВыгрузитьКолонку(ИмяКолонкиБазы);
		КонецЕсли;
		МассивНовыхСумм = РаспределитьПропорционально(РаспределяемаяСумма, МассивСтарыхСумм);
		Если МассивНовыхСумм <> Неопределено Тогда
	 		Таблица.ЗагрузитьКолонку(МассивНовыхСумм, ИмяКолонки);
		КонецЕсли; 
	Иначе
		Таблица.ЗаполнитьЗначения(0, ИмяКолонки);
	КонецЕсли;

КонецПроцедуры

Процедура СкорректироватьОкругление(Знач РазницаСумма, Знач РазницаВзносы, Знач РазницаФСС_НС, 
	ТаблицаРаспределения, КолонкиСуммирования, КорректировкаОбязательств)
	
	Если РазницаСумма > 0 ИЛИ РазницаВзносы > 0 ИЛИ РазницаФСС_НС > 0 Тогда
		Для каждого СтрокаОтпуска Из ТаблицаРаспределения Цикл
			
			Если СтрокаОтпуска.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускРезервы Тогда
				Продолжить;
			КонецЕсли;
			
			Если КорректировкаОбязательств Тогда
				Если СтрокаОтпуска.ВидОперации <> Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы
					И СтрокаОтпуска.ВидОперации <> Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства Тогда
					Продолжить;
				КонецЕсли;
				Если РазницаСумма > 0 И СтрокаОтпуска.Сумма <> 0 Тогда
					Корректировка = МИН(СтрокаОтпуска.Сумма, РазницаСумма);
					СтрокаОтпуска.Сумма = СтрокаОтпуска.Сумма - Корректировка;
					РазницаСумма = РазницаСумма - Корректировка;
				КонецЕсли;
				Если РазницаФСС_НС > 0 И СтрокаОтпуска.ФССНесчастныеСлучаи <> 0 Тогда
					Корректировка = МИН(СтрокаОтпуска.ФССНесчастныеСлучаи, РазницаФСС_НС);
					СтрокаОтпуска.ФССНесчастныеСлучаи = СтрокаОтпуска.ФССНесчастныеСлучаи - Корректировка;
					РазницаФСС_НС = РазницаФСС_НС - Корректировка;
				КонецЕсли;
				Если РазницаВзносы > 0 Тогда
					Для каждого КолонкаТЗ Из ТаблицаРаспределения.Колонки Цикл
						Если КолонкиСуммирования.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
							Если (КолонкаТЗ.Имя <> "Сумма" И КолонкаТЗ.Имя <> "ФССНесчастныеСлучаи") И СтрокаОтпуска[КолонкаТЗ.Имя] <> 0 Тогда
								Корректировка = МИН(СтрокаОтпуска[КолонкаТЗ.Имя], РазницаВзносы);
								СтрокаОтпуска[КолонкаТЗ.Имя] = СтрокаОтпуска[КолонкаТЗ.Имя] - Корректировка;
								РазницаВзносы = РазницаВзносы - Корректировка;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			Иначе
				Если СтрокаОтпуска.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательстваИРезервы
					ИЛИ СтрокаОтпуска.ВидОперации = Перечисления.ВидыОперацийПоЗарплате.ЕжегодныйОтпускОценочныеОбязательства Тогда
					Продолжить;
				КонецЕсли;
				Если РазницаСумма > 0 И СтрокаОтпуска.Сумма <> 0 Тогда
					СтрокаОтпуска.Сумма = СтрокаОтпуска.Сумма + РазницаСумма;
					РазницаСумма = 0;
				КонецЕсли;
				Если РазницаФСС_НС > 0 И СтрокаОтпуска.ФССНесчастныеСлучаи <> 0 Тогда
					СтрокаОтпуска.ФССНесчастныеСлучаи = СтрокаОтпуска.ФССНесчастныеСлучаи + РазницаФСС_НС;
					РазницаФСС_НС = 0;
				КонецЕсли;
				Если РазницаВзносы > 0 Тогда
					Для каждого КолонкаТЗ Из ТаблицаРаспределения.Колонки Цикл
						Если КолонкиСуммирования.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
							Если (КолонкаТЗ.Имя <> "Сумма" И КолонкаТЗ.Имя <> "ФССНесчастныеСлучаи") И СтрокаОтпуска[КолонкаТЗ.Имя] <> 0 Тогда
								СтрокаОтпуска[КолонкаТЗ.Имя] = СтрокаОтпуска[КолонкаТЗ.Имя] + РазницаВзносы;
								РазницаВзносы = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияДвиженийДокумента

Процедура СформироватьДвиженияПоНачислениюОбязательств(Движения, Отказ, Организация, Период, ПериодРегистрации, ДанныеДляОтражения) Экспорт
	
	Если ДанныеДляОтражения.Свойство("ОценочныеОбязательства") Тогда
		СформироватьДвиженияНачислениеРезерваОтпусков(ДанныеДляОтражения.ОценочныеОбязательства, Организация, ПериодРегистрации, Движения, Отказ)
	КонецЕсли;
	Если ДанныеДляОтражения.Свойство("РасчетРезерваОтпусков") Тогда
		СформироватьДвиженияРегистраРасчетРезерваОтпусков(ДанныеДляОтражения.РасчетРезерваОтпусков, Организация, Период, ПериодРегистрации, Движения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияРегистраРасчетРезерваОтпусков(ТаблицаОбязательств, Организация, Период, ПериодРегистрации, Движения, Отказ)
	

	ТаблицаОбязательств.Свернуть("Сотрудник,	
	|СреднийЗаработок,ТекущаяСтавкаСтраховыхВзносов" ,
	"ОстатокОтпуска,ОтпускАвансом,ФОТ,СтраховыеВзносы,
	|СуммаРезерваНакоплено,СуммаРезерваСтраховыхВзносовНакоплено,
	|СуммаРезерваИсчислено,СуммаРезерваСтраховыхВзносовИсчислено,
	|СуммаРезерва,СуммаРезерваСтраховыхВзносов");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудники", ТаблицаОбязательств.ВыгрузитьКолонку("Сотрудник"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка В(&Сотрудники)";
	Выборка = Запрос.Выполнить().Выбрать();
	СотрудникиФизическиеЛица = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СотрудникиФизическиеЛица.Вставить(Выборка.Сотрудник, Выборка.ФизическоеЛицо);
	КонецЦикла;	
	
	Для каждого СтрокаТЗ Из ТаблицаОбязательств Цикл
	
		НоваяСтрока = Движения.РасчетРезерваОтпусков.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТЗ);
		НоваяСтрока.Организация = Организация;
		НоваяСтрока.ПериодРасчета = ПериодРегистрации;
		НоваяСтрока.Период = КонецМесяца(ПериодРегистрации);
		НоваяСтрока.ФизическоеЛицо = СотрудникиФизическиеЛица[НоваяСтрока.Сотрудник];
	
	КонецЦикла;
	
	Движения.РасчетРезерваОтпусков.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияНачислениеРезерваОтпусков(ТаблицаОбязательств, Организация, ПериодРегистрации, Движения, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОбязательств", ТаблицаОбязательств);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ПериодРегистрации);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбязательств.СуммаРезерва,
	|	ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов,
	|	&Организация КАК Организация,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ВТ_ТаблицаОбязательств
	|ИЗ
	|	&ТаблицаОбязательств КАК ТаблицаОбязательств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация КАК Организация,
	|	ВТ_ТаблицаОбязательств.Период КАК Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерва) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоВознаграждениям) КАК ТипОценочногоОбязательства
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерва <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период,
	|	СУММА(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОценочныхОбязательств.ОценочныеОбязательстваПоСтраховымВзносам)
	|ИЗ
	|	ВТ_ТаблицаОбязательств КАК ВТ_ТаблицаОбязательств
	|ГДЕ
	|	(ВТ_ТаблицаОбязательств.СуммаРезерваСтраховыхВзносов <> 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаОбязательств.Организация,
	|	ВТ_ТаблицаОбязательств.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	ТипОценочногоОбязательства";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() <> 0 Тогда
		Движения.ОценочныеОбязательства.Загрузить(Результат);
		Движения.ОценочныеОбязательства.Записывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
// Подробнее см. УправлениеПечатьюПереопределяемый.
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	СписокОбъектов.Добавить(Документы.НачислениеОценочныхОбязательствПоОтпускам);
	
КонецПроцедуры

#КонецОбласти 
