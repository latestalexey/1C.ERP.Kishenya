&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("мВерсияФормы");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	
	СтруктураРеквизитовФормы.Вставить("ВерсияОтчета", "04");
	СтруктураРеквизитовФормы.Вставить("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());	
	
	// Версия формы
	СтруктураРеквизитовФормы.мВерсияФормы = "01/01/2016";
	
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.Организация              = Параметры.Организация;
	
	СписокПоказателей = новый СписокЗначений;
	СписокПоказателей.Добавить("","КодПоЕДРПОУ");
	Сведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Параметры.Организация, Параметры.мДатаКонцаПериодаОтчета, СписокПоказателей);
	СтруктураРеквизитовФормы.Вставить("КодПоЕДРПОУ", Сведения.КодПоЕДРПОУ);

	Элементы.ИнформационнаяНадпись.Заголовок = "Организация " + Параметры.Организация.Наименование;

	АвтоЗаголовок = Ложь;
	Заголовок = "Отчет о контролируемых операциях за " + Формат(Параметры.мДатаКонцаПериодаОтчета, "ДФ=yyyy") + " год";
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура НадписьСведенияНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Организация, Год", СтруктураРеквизитовФормы.Организация, Год(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета));
	
	ОткрытьФорму("Документ.СведенияОКонтролируемыхОперациях.Форма.ФормаСписка", ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьКонтрагентыОтчетаНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Организация, Год", СтруктураРеквизитовФормы.Организация, Год(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета));
	
	ОткрытьФорму("РегистрСведений.КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Форма.ФормаСписка", ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСвязанностьНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Организация", СтруктураРеквизитовФормы.Организация);
	
	ОткрытьФорму("РегистрСведений.СвязанностьЛицКонтролируемыхОпераций.Форма.ФормаСписка", ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПредметыНажатие(Элемент)
	
	ОткрытьФорму("РегистрСведений.ПредметыКонтролируемыхОпераций.Форма.ФормаСписка", ,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьДоговорыНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Организация", СтруктураРеквизитовФормы.Организация);
	
	ОткрытьФорму("РегистрСведений.ДоговорыУчастниковКонтролируемыхОпераций.Форма.ФормаСписка", ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПараметрыОбычныхЦенНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Организация", СтруктураРеквизитовФормы.Организация);
	
	ОткрытьФорму("РегистрСведений.ПараметрыОпределенияОбычныхЦенКонтролируемыхОпераций.Форма.ФормаСписка", ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОбычныеЦеныНажатие(Элемент)
	
	ПараметрыОткрытия = Новый Структура("Организация", СтруктураРеквизитовФормы.Организация);
	
	ОткрытьФорму("РегистрСведений.ОбычныеЦеныКонтролируемыхОпераций.Форма.ФормаСписка", ПараметрыОткрытия,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПередатьДанныеВ1СЗвит(Команда)
	
	Если Не РегламентированнаяОтчетностьКлиент.ПодключитьМенеджерЗвит1С(Истина) Тогда
		Возврат;
	КонецЕсли;	
	
	Оповещение = Новый ОписаниеОповещения("КнопкаПередатьДанныеВ1СЗвитЗавершение", ЭтаФорма);
	Если ПроверитьКорректностьДанных(СтруктураРеквизитовФормы) = Ложь Тогда
		ПоказатьВопрос(Оповещение, "Обнаружены ошибки в данных. Продолжить выгрузку отчета?", РежимДиалогаВопрос.ДаНетОтмена);
	Иначе	
		ВыполнитьОбработкуОповещения(Оповещение, КодВозвратаДиалога.Да);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПередатьДанныеВ1СЗвитЗавершение(Результат, ДопПараметры) Экспорт
	
	Если НЕ Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	// Попробуем запустить FREDO Звіт или выведем причины отказа (не установлен, не используется в этой ИБ)
	Если Не глМенеджерЗвит1С.ЗапуститьЗвит1С(Ложь, СтруктураРеквизитовФормы.Организация) Тогда
		Сообщить(НСтр("ru='Не удалось запустить ""FREDO Звіт""';uk='Не вдалося запустити ""FREDO Звіт""'"));
		Возврат ;
	КонецЕсли;		
	
	глКомпонентаЗвит1С.Bring1CToFront();	
	
	// Создаем основной документ J01047хх
	ТипПериода	   = 30;
	НомерВПериоде  = 1;
	Год			   = Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ИмяСхемыЗвит1С = "J01047"+СтруктураРеквизитовФормы.ВерсияОтчета;
	
	ИдГоловнойОтчет = СтрЗаменить("" + Новый УникальныйИдентификатор,"-", "");
	Попытка
		ГоловнойОтчет = глКомпонентаЗвит1С.OpenCreateReport(СтруктураРеквизитовФормы.КодПоЕДРПОУ, ИмяСхемыЗвит1С, ТипПериода, НомерВПериоде, Год, ИдГоловнойОтчет);
	Исключение
	    Сообщить("Ошибка создания отчета " + ИмяСхемыЗвит1С + ": " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Сообщить("Формирование отчета прервано!", СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	ДанныеПоКонтрагентам = ПолучитьДанныеОперацийКонтрагентаНаСервере(СтруктураРеквизитовФормы);
	ИтогоСуммаКонтролируемыхОпераций = 0;
	Для  каждого Контрагент Из ДанныеПоКонтрагентам Цикл 
	
		// записываем данные в головной отчет
		ДобавитьСтрокуВОтчетЗвит1С(ГоловнойОтчет, "TAB1");
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A1", Контрагент.НомерПриложенияОтчета);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A2", СокрЛП(Контрагент.КонтрагентНаименованиеПолное));
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A3", Контрагент.Код);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A4", Контрагент.СуммаКонтролируемыхОпераций);
		
		ИтогоСуммаКонтролируемыхОпераций = ИтогоСуммаКонтролируемыхОпераций + Контрагент.СуммаКонтролируемыхОпераций;
		
	КонецЦикла;
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A1_4",   ИтогоСуммаКонтролируемыхОпераций);
	
	// записываем основной отчет	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N1",   Контрагент.НомерПриложенияОтчета); //количество приложений
	глКомпонентаЗвит1С.SaveReportEx(ГоловнойОтчет, 0);
	
	Для  каждого Контрагенты Из ДанныеПоКонтрагентам Цикл
		
		НомерПриложения = Контрагенты.НомерПриложенияОтчета;
		
		// создаем расшифровку - приложение(я) по 20000 записей J01471хх
		// учитываем, что порции должны быть по 20000 строк, при этом нумерации для единственной порции 0, а для нескольких начинается с 1
		СтрокиПриложенийМассив = ПолучитьСтрокиПриложений(СтруктураРеквизитовФормы, Контрагенты.КонтрагентСсылка);
		НомерСтроки = 1;
		НомерПорции = 0;
		ПриложениеЗаписано 			  = Ложь;
		ИнформацияКПриложениюЗаписана = Ложь;
		R01G20 = 0;
		Для каждого СтрокиПриложений Из СтрокиПриложенийМассив Цикл
			
			Если ИнформацияКПриложениюЗаписана = Ложь Тогда
				ИнформацияКПриложениюЗаписана = Истина;
				
				// создаем информацию к приложению J01472хх
				ИмяСхемыЗвит1С = "J01472"+СтруктураРеквизитовФормы.ВерсияОтчета;
				Попытка
					ИдОтчетИнформация = СтрЗаменить("" + Новый УникальныйИдентификатор,"-", "");
					ОтчетИнформация = глКомпонентаЗвит1С.OpenCreateReport(СтруктураРеквизитовФормы.КодПоЕДРПОУ, ИмяСхемыЗвит1С, ТипПериода, НомерВПериоде, Год, ИдОтчетИнформация);
				Исключение
				    Сообщить("Ошибка создания отчета " + ИмяСхемыЗвит1С + ": " + ОписаниеОшибки(), СтатусСообщения.Внимание);
					Сообщить("Формирование отчета продолжено", СтатусСообщения.Внимание);
				КонецПопытки;
				
				// заполняем отчет с информацией по связанности
				ЗаполнитьОтчетИнформация(ОтчетИнформация, СтрокиПриложений, НомерПриложения);
				глКомпонентаЗвит1С.SaveReportEx(ОтчетИнформация, 0);
				Попытка
					Результат = глКомпонентаЗвит1С.SetParentDoc(ИдОтчетИнформация, ИдГоловнойОтчет);
				Исключение
				КонецПопытки;

			КонецЕсли;
			
			Если НомерСтроки = 1 Тогда
				
				ПриложениеЗаписано = Ложь;
				
				// создаем новый документ
				ИмяСхемыЗвит1С = "J01471"+СтруктураРеквизитовФормы.ВерсияОтчета;
				Попытка
					ИдОтчетПриложение = СтрЗаменить("" + Новый УникальныйИдентификатор,"-", "");
					ОтчетПриложение = глКомпонентаЗвит1С.OpenCreateReport(СтруктураРеквизитовФормы.КодПоЕДРПОУ, ИмяСхемыЗвит1С, ТипПериода, НомерВПериоде, Год, ИдОтчетПриложение);
				Исключение
				    Сообщить("Ошибка создания отчета " + ИмяСхемыЗвит1С + ": " + ОписаниеОшибки(), СтатусСообщения.Важное);
					Сообщить("Формирование отчета прервано!", СтатусСообщения.Важное);
					Возврат;
				КонецПопытки;
				
				// заполняем шапку приложения
				// HNUM
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N11", НомерПриложения);
				
				// адрес, код, наименование
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "NAME", 		СокрЛП(СтрокиПриложений.КонтрагентНаименованиеПолное));
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "ADR",  		СтрокиПриложений.Местонахождение);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "EDRPOU",   	СтрокиПриложений.Код);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N1",   		СтрокиПриложений.СтранаНаименование);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N2",   		СтрокиПриложений.СтранаКод);
				
				// коды операций
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N3", СтрокиПриложений.КодКонтролируемойОперации1);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N4", СтрокиПриложений.КодКонтролируемойОперации2);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N5", СтрокиПриложений.КодКонтролируемойОперации3);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N6", СтрокиПриложений.КодКонтролируемойОперации4);
				
				// коды связанности
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N7", СтрокиПриложений.КодСвязанностиЛиц1);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N8", СтрокиПриложений.КодСвязанностиЛиц2);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N9", СтрокиПриложений.КодСвязанностиЛиц3);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "", "N10", СтрокиПриложений.КодСвязанностиЛиц4);
				
				
			КонецЕсли;	
			
			// таб часть
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетПриложение, "TAB1");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A1", НомерСтроки);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A2", СтрокиПриложений.КодНаименованияОперации);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A3", СтрокиПриложений.КодПредмета);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A4", СтрокиПриложений.ПредметСделкиСтрока);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A5", СтрЗаменить("" + СтрокиПриложений.КодУКТВЭД, " ",""));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A6", СтрокиПриложений.КодУКВЭП);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A7", СтрокиПриложений.ДатаКонтракта);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A8", СтрокиПриложений.НомерКонтракта);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A9", СтрокиПриложений.КодСтороныОперации1);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A10",СтрокиПриложений.КодСтраныПроисхождения);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A11", СтрокиПриложений.УсловиеПоставкиПоИнкотермс);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A12", СтрокиПриложений.ТорговаяМарка);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A13", СтрокиПриложений.Производитель);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A14", СтрокиПриложений.ДатаОперацииС);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A15", СтрокиПриложений.ДатаОперацииПо);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A16", СтрокиПриложений.ЦенаВал);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A17", СтрокиПриложений.Количество);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A18", "" +СтрокиПриложений.ЕдиницаИзмеренияКод);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A19", СтрокиПриложений.КодВалюты);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A20", СтрокиПриложений.СуммаРегл);
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A21", СтрокиПриложений.КодМетода1);   
			
			Если  НЕ (СтрокиПриложений.КодМетода1 = "301")
				И НЕ (СтрокиПриложений.КодМетода1 = "305") Тогда
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A25", ?(СтрокиПриложений.ИсследуемаяСторона,"1","0"));   	
			КонецЕсли;
			
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A22", СтрокиПриложений.ПоказательРентабельности); 		
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A23", СтрокиПриложений.ЗначениеПоказателяРентабельности);
			
			Если СтрокиПриложений.ПризнакГруппировкиВСовокупность = Истина Тогда
			
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A24", "1");
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A7",  Неопределено);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A8",  "");
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A12", "");
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A13", "");
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение,  "TAB1", "TAB1_A16", 0);
				
			КонецЕсли;
			
			
			R01G20 = R01G20 + СтрокиПриложений.СуммаРегл;
			
			Если НомерСтроки = 20000 Тогда
				
				// установим параметр порции в текущем приложении
				НомерПорции = НомерПорции + 1;
				
				// запишем текущее приложение
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение, "", "N12",   НомерПорции);
				ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение, "", "A1_20", R01G20);
				глКомпонентаЗвит1С.SaveReportEx(ОтчетПриложение, 0);
				Попытка
					Результат = глКомпонентаЗвит1С.SetParentDoc(ИдОтчетПриложение, ИдГоловнойОтчет);
				Исключение
				КонецПопытки;			
				
				// установим номер строки для нового приложения
				НомерСтроки = 1;
			    ПриложениеЗаписано = Истина;
				R01G20 = 0;
				
			Иначе
				
				НомерСтроки = НомерСтроки + 1;
				
			КонецЕсли;
		
		КонецЦикла;
		// запишем текущее приложение
		Если ПриложениеЗаписано = Ложь Тогда
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение, "", "N12", НомерПорции, Истина);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетПриложение, "", "A1_20", R01G20);
			глКомпонентаЗвит1С.SaveReportEx(ОтчетПриложение, 0);
			Попытка
				Результат = глКомпонентаЗвит1С.SetParentDoc(ИдОтчетПриложение, ИдГоловнойОтчет);
			Исключение
			КонецПопытки;			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоказатьПредупреждение(, "Отчет с приложениями успешно выгружен в ""FREDO Звіт""!");
	глКомпонентаЗвит1С.BringZvitToFront();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОтчетИнформация(ОтчетИнформация, Контрагенты, НомерПриложения)
	
	// получим форму регистра, в ней будет развернутые данные по связанности
	Ключ = ПолучитьПериодЗаписиСвязанностиЛиц(СтруктураРеквизитовФормы.Организация, Контрагенты.КонтрагентСсылка, СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ДанныеСвязанности = ПолучитьФорму("РегистрСведений.СвязанностьЛицКонтролируемыхОпераций.Форма.ФормаЗаписи", Новый Структура("Ключ", Ключ));
	
	ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "N1",     НомерПриложения);
	ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "NAME",   Контрагенты.КонтрагентНаименованиеПолное);
	ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "EDRPOU", Контрагенты.Код);
	
	 Если   Контрагенты.КодСвязанностиЛиц1 = "501"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "501" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "501" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "501" 
		ИЛИ Контрагенты.КодСвязанностиЛиц1 = "509" 
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "509" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "509" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "509" Тогда
		
		СтруктураДанных = ДанныеСвязанности;
		
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A1_1", ПреобразоватьВ01(ДанныеСвязанности.Код501_2016КорпПраваПлательщик));
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A1_2", ПреобразоватьВ01(СтруктураДанных.Код501_2016КорпПраваКонрагент));
		
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A1_3", СтруктураДанных.Код501_2016ПроцентКорпПрава);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A1_4", СтруктураДанных.Код501_2016КорпПраваНепосредственно);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A1_5", СтруктураДанных.Код501_2016КорпПраваОпосредовано);
		
		Для каждого СтрокаТаблицы Из СтруктураДанных.Код501_2016Контрагенты Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB1");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB1", "TAB1_A1", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.Контрагент, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB1", "TAB1_A2", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СтранаРегистрации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB1", "TAB1_A3", СтрокаТаблицы.Код);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB1", "TAB1_A4", СтрокаТаблицы.Размер);
		КонецЦикла;
		
	КонецЕсли;
	
	 Если   Контрагенты.КодСвязанностиЛиц1 = "502"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "502" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "502" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "502" Тогда
		
		СтруктураДанных = ДанныеСвязанности;
		
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_1", ЗначениеРеквизитаОбъекта(СтруктураДанных.Код502_2016Контрагент, "НаименованиеПолное"));
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_2", ЗначениеРеквизитаОбъекта(СтруктураДанных.Код502_2016Страна, "НаименованиеПолное"));
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_3", СтруктураДанных.Код502_2016Код);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_4", СтруктураДанных.Код502_2016ПроцентКорпПраваОрганизации);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_5", СтруктураДанных.Код502_2016КорпПраваНепосредственноОрганизации);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_6", СтруктураДанных.Код502_2016КорпПраваОпосредованоОрганизации);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_7", СтруктураДанных.Код502_2016ПроцентКорпПраваКонтрагента);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_8", СтруктураДанных.Код502_2016КорпПраваНепосредственноКонтрагента);
		ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, , "A2_9", СтруктураДанных.Код502_2016КорпПраваОпосредованоКонтрагента);
		
		Для каждого СтрокаТаблицы Из СтруктураДанных.Код502_2016Контрагенты Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB2");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A1", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.Контрагент, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A2", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СтранаРегистрации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A3", СтрокаТаблицы.Код);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A4", СтрокаТаблицы.Размер);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A5", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.КонтрагентОрганизации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A6", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СтранаРегистрацииОрганизации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A7", СтрокаТаблицы.КодОрганизации);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB2", "TAB2_A8", СтрокаТаблицы.РазмерОрганизации);
		КонецЦикла;
		
	КонецЕсли;
	
	 Если   Контрагенты.КодСвязанностиЛиц1 = "503"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "503" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "503" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "503" Тогда
		
		СтруктураДанных = ДанныеСвязанности;
		
		Для каждого СтрокаТаблицы Из ДанныеСвязанности.Код503_2016ФизЛица Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB3");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB3", "TAB3_A1", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ФизЛицо, "Наименование"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB3", "TAB3_A2", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СтранаРегистрации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB3", "TAB3_A3", СтрокаТаблицы.Код);
		КонецЦикла;
		
	КонецЕсли;
	
	 Если   Контрагенты.КодСвязанностиЛиц1 = "504"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "504" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "504" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "504" Тогда
		
		СтруктураДанных = ДанныеСвязанности;
		
		Для каждого СтрокаТаблицы Из ДанныеСвязанности.Код504_2016ФизЛица Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB4");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB4", "TAB4_A1", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ФизЛицо, "Наименование"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB4", "TAB4_A2", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СтранаРегистрации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB4", "TAB4_A3", СтрокаТаблицы.Код);
		КонецЦикла;
		
	КонецЕсли;
	
	 Если   Контрагенты.КодСвязанностиЛиц1 = "505"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "505" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "505" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "505" Тогда
		                                        
		СтруктураДанных = ДанныеСвязанности;
		
		Для каждого СтрокаТаблицы Из ДанныеСвязанности.Код505_2016ФизЛица Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB5");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB5", "TAB5_A1", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ФизЛицо,"Наименование"));
		КонецЦикла;
		
	КонецЕсли;
	
     Если   Контрагенты.КодСвязанностиЛиц1 = "506"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "506" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "506" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "506" Тогда
		
		СтруктураДанных = ДанныеСвязанности;
		
		Для каждого СтрокаТаблицы Из ДанныеСвязанности.Код506_2016Контрагенты Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB6");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB6", "TAB6_A1", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.Контрагент, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB6", "TAB6_A2", ЗначениеРеквизитаОбъекта(СтрокаТаблицы.СтранаРегистрации, "НаименованиеПолное"));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB6", "TAB6_A3", СтрокаТаблицы.Код);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB6", "TAB6_A4", ?(СтрокаТаблицы.Собственник,    1, 0));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB6", "TAB6_A5", ?(СтрокаТаблицы.Уполномоченный, 1, 0));
		КонецЦикла;
	КонецЕсли;
	
	 Если   Контрагенты.КодСвязанностиЛиц1 = "507"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "507" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "507" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "507" Тогда
		
		СтруктураДанных = ДанныеСвязанности;
		
		Для каждого СтрокаТаблицы Из ДанныеСвязанности.Код507_2016Контрагенты Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB7");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB7", "TAB7_A1", ?(СтрокаТаблицы.Плательщик, 1, 0));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB7", "TAB7_A2", ?(СтрокаТаблицы.Контрагент, 1, 0));
		КонецЦикла;
		
	КонецЕсли;
	
     Если   Контрагенты.КодСвязанностиЛиц1 = "508"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "508" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "508" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "508"
		ИЛИ Контрагенты.КодСвязанностиЛиц1 = "513"
		ИЛИ Контрагенты.КодСвязанностиЛиц2 = "513" 
		ИЛИ Контрагенты.КодСвязанностиЛиц3 = "513" 
		ИЛИ Контрагенты.КодСвязанностиЛиц4 = "513" Тогда

		СтруктураДанных = ДанныеСвязанности;
		
		Для каждого СтрокаТаблицы Из ДанныеСвязанности.Код508_2016Контрагенты Цикл
			ДобавитьСтрокуВОтчетЗвит1С(ОтчетИнформация, "TAB8");
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB8", "TAB8_A1", СтрокаТаблицы.СуммаКредитов);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB8", "TAB8_A2", СтрокаТаблицы.СуммаСобственногоКапитала);
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB8", "TAB8_A3", ?(СтрокаТаблицы.Плательщик, 1, 0));
			ДобавитьПоказательВОтчетЗвит1С(ОтчетИнформация, "TAB8", "TAB8_A4", ?(СтрокаТаблицы.Контрагент, 1, 0));
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура КнопкаПроверитьКорректностьДанных(Команда)
	
	Если ПроверитьКорректностьДанных(СтруктураРеквизитовФормы) = Истина Тогда
	
		ПоказатьПредупреждение(,"Данные корректны, можно формировать отчет!");	
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоказательВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С = "", ИмяЗвит1С, Значение, ЗаписыватьПустое = Ложь)
	
	Если НЕ ЗаписыватьПустое И НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат;	
	КонецЕсли;
	
	Попытка
		Отчет.SetValue(ИмяТаблицыЗвит1С, ИмяЗвит1С, Значение); 
	Исключение
		Если глМенеджерЗвит1С.ФлагОтладки Тогда
			Сообщить("FREDO Звіт. Ошибка установки показателя (схема """+Отчет.CharCode+?(ПустаяСтрока(ИмяТаблицыЗвит1С),"",""", имя таблицы """+ИмяТаблицыЗвит1С)+""", поле """+ИмяЗвит1С+""", тип значения """+ТипЗнч(Значение)+""", значение """+ Значение+""")", СтатусСообщения.Внимание);
		КонецЕсли;
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С)

	Отчет.NewRow(ИмяТаблицыЗвит1С);

КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьВ01(Значение)

	Возврат ?(ЗначениеЗаполнено(Значение) И НЕ Значение = Ложь, "1", "");	

КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьКорректностьДанных(СтруктураРеквизитовФормы)
	
	// 1. Проверяем, что в РС КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях все контрагенты у которых сумма операций >50000000
	// есть и только они
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Контрагент КАК Контрагент,
	               |	1 КАК ВключаетсяВОтчет,
	               |	0 КАК СуммаОбщая,
	               |	0 КАК СуммаКонтролируемыхОпераций
	               |ПОМЕСТИТЬ ВремЗапрос
	               |ИЗ
	               |	РегистрСведений.КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях КАК КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях
	               |ГДЕ
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Период = &Период
	               |	И КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Организация = &Организация
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОбщиеСведенияОКонтролируемыхОперацияхОбороты.Контрагент,
	               |	0,
	               |	ОбщиеСведенияОКонтролируемыхОперацияхОбороты.СуммаОбщаяОборот,
	               |	ОбщиеСведенияОКонтролируемыхОперацияхОбороты.СуммаКонтролируемыхОперацийОборот
	               |ИЗ
	               |	РегистрНакопления.ОбщиеСведенияОКонтролируемыхОперациях.Обороты(НАЧАЛОПЕРИОДА(&Период, ГОД), КОНЕЦПЕРИОДА(&Период, ГОД), , Организация = &Организация) КАК ОбщиеСведенияОКонтролируемыхОперацияхОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВремЗапрос.Контрагент
	               |ИЗ
	               |	ВремЗапрос КАК ВремЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВремЗапрос.Контрагент
	               |
	               |ИМЕЮЩИЕ
	               |	(МАКСИМУМ(ВремЗапрос.ВключаетсяВОтчет) = 1  И ЕСТЬNULL(СУММА(ВремЗапрос.СуммаКонтролируемыхОпераций), 0) <= &Предел)
	               |ИЛИ (МАКСИМУМ(ВремЗапрос.ВключаетсяВОтчет) = 0  И ЕСТЬNULL(СУММА(ВремЗапрос.СуммаКонтролируемыхОпераций), 0) >  &Предел)";
				   
	Запрос.УстановитьПараметр("Организация", СтруктураРеквизитовФормы.Организация);
	Запрос.УстановитьПараметр("Период", 	 НачалоГода(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("Предел", 	 КонтролируемыеОперацииПовтИсп.ОграничениеСуммыВсехОпераций(Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета)));
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		Сообщить("В регистре сведений ""Контрагенты, включаемые в отчет о контролируемых операциях"" список контрагентов не совпадает с итоговыми данными документов, регистрирующих сведения о контролируемых операциях.  Либо не все контрагенты с оборотами более 5 000 000 грн включаются в отчет, либо есть контрагенты, включаемые в отчет, однако обороты с ними менее 5 000 000 грн. Проверьте регистр сведений!");	
		Возврат Ложь;
	КонецЕсли;
	
	// 2. нумерация приложений в РС КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях правильная (не нарушена)
	Запрос.Текст = "ВЫБРАТЬ
	               |	МИНИМУМ(КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.НомерПриложенияОтчета) КАК МинНомер,
	               |	МАКСИМУМ(КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.НомерПриложенияОтчета) КАК МаксНомер,
	               |	КОЛИЧЕСТВО(*) КАК ВсегоЗаписей
	               |ИЗ
	               |	РегистрСведений.КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях КАК КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях
	               |ГДЕ
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Период = &Период
	               |	И КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Организация = &Организация";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.ВсегоЗаписей > 0 Тогда
			Если    НЕ Выборка.МинНомер = 1
				ИЛИ НЕ Выборка.МаксНомер = Выборка.ВсегоЗаписей Тогда
			
				Сообщить("В регистре сведений ""Контрагенты, включаемые в отчет о контролируемых операциях"" нарушена нумерация приложений отчета по контрагентам. Перенумеруйте контрагентов вручную или восстановите нумерацию автоматически!");
				Возврат Ложь;
			
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// 3. для каждого контрагента из РС КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях есть данные по связанности
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтрагентыОтчета.Контрагент,
				   |	ВЫБОР КОГДА Сведения.Контрагент ЕСТЬ NULL ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК НетСведений,
				   |	Сведения.Код501_2016 КАК Код501_2016
				   |ИЗ
	               |	РегистрСведений.КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях КАК КонтрагентыОтчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязанностьЛицКонтролируемыхОпераций.СрезПоследних(&Период, Организация = &Организация) КАК Сведения
	               |		ПО КонтрагентыОтчета.Контрагент = Сведения.Контрагент
	               |ГДЕ
	               |	КонтрагентыОтчета.Период = &Период
	               |	И КонтрагентыОтчета.Организация = &Организация
				   |";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	СообщениеОбОшибкеВыдавалось1 = Ложь;
	СообщениеОбОшибкеВыдавалось2 = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НетСведений Тогда
			Если СообщениеОбОшибкеВыдавалось1 = Ложь Тогда
				СообщениеОбОшибкеВыдавалось1 = Истина;
				Сообщить("Список контрагентов, по которым отсутствуют записи в регистре ""Связанность лиц контролируемых операций"" на " + Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) + " год.:");
			КонецЕсли;
			Сообщить("   " + Выборка.Контрагент);
		ИначеЕсли НЕ ТипЗнч(Выборка.Код501_2016.Получить()) = Тип("Структура") Тогда
			Если СообщениеОбОшибкеВыдавалось2 = Ложь Тогда
				СообщениеОбОшибкеВыдавалось2 = Истина;
				Сообщить("Список контрагентов, по которым нет данных по классификации 2016 года в  регистре ""Связанность лиц контролируемых операций""");
			КонецЕсли;
			Сообщить("   " + Выборка.Контрагент);
		КонецЕсли;
		
	КонецЦикла;
	Если    СообщениеОбОшибкеВыдавалось1 = Истина 
		ИЛИ СообщениеОбОшибкеВыдавалось2 = Истина Тогда
		Сообщить("В регистре сведений ""Связанность лиц контролируемых операций"" отсутствует или неполна информация о некоторых контрагентах, включаемых в отчет. Проверьте заполнение данного регистра!");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеОперацийКонтрагентаНаСервере(СтруктураРеквизитовФормы)
	
	МассивДанных = Новый Массив();
	
	// готовим данные
	ТекстЗапроса = "ВЫБРАТЬ
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Контрагент КАК КонтрагентСсылка,
	               |	СвязанностьЛицКонтролируемыхОпераций.Код КАК Код,
				   |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.НомерПриложенияОтчета КАК НомерПриложенияОтчета,
	               |	ЕстьNULL(ОбщиеСведенияОКонтролируемыхОперацияхОбороты.СуммаКонтролируемыхОперацийОборот, 0) КАК СуммаКонтролируемыхОпераций
	               |ИЗ
	               |	РегистрСведений.КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях КАК КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбщиеСведенияОКонтролируемыхОперациях.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК ОбщиеСведенияОКонтролируемыхОперацияхОбороты
	               |		ПО КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Контрагент = ОбщиеСведенияОКонтролируемыхОперацияхОбороты.Контрагент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязанностьЛицКонтролируемыхОпераций.СрезПоследних(&КонецПериода, Организация = &Организация) КАК СвязанностьЛицКонтролируемыхОпераций
	               |		ПО КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Контрагент = СвязанностьЛицКонтролируемыхОпераций.Контрагент
	               |ГДЕ
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Организация = &Организация
	               |	И КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КонтрагентыВключаемыеВОтчетОКонтролируемыхОперациях.НомерПриложенияОтчета";
				   
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериода",  КонецГода(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Организация",  СтруктураРеквизитовФормы.Организация);
	Запрос.Текст = ТекстЗапроса; 
	
	Результат = Запрос.Выполнить();
	СписокКолонокЗапроса = "";
	Для каждого Колонка Из Результат.Колонки Цикл
		СписокКолонокЗапроса = СписокКолонокЗапроса + ", " + Колонка.Имя;
	КонецЦикла;
	СписокКолонокЗапроса = Сред(СписокКолонокЗапроса, 3);
	
	Выборка = Результат.Выбрать();
	МассивДанных = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураДанных = Новый Структура(СписокКолонокЗапроса);
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка); 
		МассивДанных.Добавить(СтруктураДанных);	
	
	КонецЦикла;
	
	Возврат МассивДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтрокиПриложений(СтруктураРеквизитовФормы, Контрагент)
	
	// готовим данные
	ТекстЗапроса = "ВЫБРАТЬ
	               |	КонтролируемыеОперации.Контрагент.Ссылка КАК КонтрагентСсылка,
				   |	КонтролируемыеОперации.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	               |	КонтролируемыеОперации.КодНаименованияОперации,
	               |	КонтролируемыеОперации.ПредметСделкиСтрока,
	               |	КонтролируемыеОперации.КодПредмета,
	               |	КонтролируемыеОперации.КодКлассификатораПродукцииИУслуг,
	               |	КонтролируемыеОперации.КодУКТВЭД,
	               |	КонтролируемыеОперации.КодУКВЭП,
	               |	КонтролируемыеОперации.ДатаКонтракта,
	               |	КонтролируемыеОперации.НомерКонтракта,
	               |	КонтролируемыеОперации.КодСтороныОперации1,
	               |	КонтролируемыеОперации.КодСтраныПроисхождения,
	               |	КонтролируемыеОперации.УсловиеПоставкиПоИнкотермс,
	               |	КонтролируемыеОперации.ТорговаяМарка,
	               |	КонтролируемыеОперации.Производитель,
	               |	КонтролируемыеОперации.ДатаОперацииС,
	               |	КонтролируемыеОперации.ДатаОперацииПо,
	               |	КонтролируемыеОперации.ЦенаВал,
	               |	КонтролируемыеОперации.Количество,
	               |	КонтролируемыеОперации.Упаковка.Код КАК ЕдиницаИзмеренияКод,
	               |	КонтролируемыеОперации.КодВалюты,
	               |	КонтролируемыеОперации.КурсВалюты,
	               |	КонтролируемыеОперации.СуммаРегл,
	               |	КонтролируемыеОперации.КодОснования,
	               |	КонтролируемыеОперации.КодМетода1,
				   |	КонтролируемыеОперации.ИсследуемаяСторона,
				   |	КонтролируемыеОперации.ПоказательРентабельности,
				   |	КонтролируемыеОперации.ЗначениеПоказателяРентабельности,
				   |	КонтролируемыеОперации.ПризнакГруппировкиВСовокупность,
				   |	КонтролируемыеОперации.КодИсточника,
	               |	КонтролируемыеОперации.ЦенаОбычнаяРегл,
				   
				   |	СвязанностьЛицКонтролируемыхОпераций.Местонахождение КАК Местонахождение,
				   |	СвязанностьЛицКонтролируемыхОпераций.АдресВКонтракте КАК АдресВКонтракте,
				   |	ЕстьNULL(СвязанностьЛицКонтролируемыхОпераций.Страна.Наименование, """") КАК СтранаНаименование,
				   |	ЕстьNULL(СвязанностьЛицКонтролируемыхОпераций.Страна.Код, """") КАК СтранаКод,
				   |	СвязанностьЛицКонтролируемыхОпераций.Статус КАК Статус,
				   |	СвязанностьЛицКонтролируемыхОпераций.Код КАК Код,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодСвязанностиЛиц1 КАК КодСвязанностиЛиц1,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодСвязанностиЛиц2 КАК КодСвязанностиЛиц2,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодСвязанностиЛиц3 КАК КодСвязанностиЛиц3,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодСвязанностиЛиц4 КАК КодСвязанностиЛиц4,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодКонтролируемойОперации1 КАК КодКонтролируемойОперации1,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодКонтролируемойОперации2 КАК КодКонтролируемойОперации2,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодКонтролируемойОперации3 КАК КодКонтролируемойОперации3,
				   |	СвязанностьЛицКонтролируемыхОпераций.КодКонтролируемойОперации4 КАК КодКонтролируемойОперации4
	               |ИЗ
	               |	РегистрНакопления.КонтролируемыеОперации КАК КонтролируемыеОперации
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязанностьЛицКонтролируемыхОпераций.СрезПоследних(&КонецПериода, Организация = &Организация И Контрагент  = &Контрагент) КАК СвязанностьЛицКонтролируемыхОпераций
	               |		ПО Истина
	               |ГДЕ
	               |	  КонтролируемыеОперации.Организация = &Организация
				   |	И КонтролируемыеОперации.Контрагент  = &Контрагент
	               |	И КонтролируемыеОперации.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КонтролируемыеОперации.МоментВремени,
	               |	КонтролируемыеОперации.НомерСтроки
				   |";
				   
   	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериода",  КонецГода(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Организация",   СтруктураРеквизитовФормы.Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.Текст = ТекстЗапроса; 
	
	Результат = Запрос.Выполнить();
	СписокКолонокЗапроса = "";
	Для каждого Колонка Из Результат.Колонки Цикл
		СписокКолонокЗапроса = СписокКолонокЗапроса + ", " + Колонка.Имя;
	КонецЦикла;
	СписокКолонокЗапроса = Сред(СписокКолонокЗапроса, 3);
	
	Выборка = Результат.Выбрать();
	МассивДанных = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураДанных = Новый Структура(СписокКолонокЗапроса);
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка); 
		МассивДанных.Добавить(СтруктураДанных);	
	
	КонецЦикла;
	
	Возврат МассивДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПериодЗаписиСвязанностиЛиц(Организация, Контрагент, Дата)
	
	Ключ = Неопределено;
	
	// готовим данные
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СвязанностьЛицКонтролируемыхОпераций.Период
	               |ИЗ
	               |	РегистрСведений.СвязанностьЛицКонтролируемыхОпераций.СрезПоследних(
	               |			&КонецПериода,
	               |			Организация = &Организация
	               |				И Контрагент = &Контрагент) КАК СвязанностьЛицКонтролируемыхОпераций";
				   
   	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("КонецПериода",  КонецГода(Дата));
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.Текст = ТекстЗапроса; 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Ключ = РегистрыСведений.СвязанностьЛицКонтролируемыхОпераций.СоздатьКлючЗаписи(Новый Структура("Период, Организация, Контрагент", Выборка.Период, Организация, Контрагент));	
	
	КонецЕсли;
	
	Возврат Ключ;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Ссылка, Реквизит)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);	
	
КонецФункции // ()

&НаКлиенте
Функция СформироватьДанныеДляЗвит1С(ОтчетЗвит1С = Неопределено) Экспорт 
	
	глМенеджерЗвит1С.ПредупреждениеЗвит1С("Заполнение данного отчета необходимо инициировать из платформы!
										|  Перейдите в окно 1С и сфорируйте отчет, нажав на кнопку ""Передать данные в ""FREDO Звіт"""" на форме отчета", "");
										
	ЭтаФорма.Открыть();											
										
	Возврат Неопределено;
	
КонецФункции

