#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
	Настройки.События.ПриСозданииНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("ЗаказРасшифровка", Параметры.ПараметрКоманды);
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в форме отчета перед выводом настройки.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   СвойстваНастройки - Структура - Описание настройки отчета, которая будет выведена в форме отчета.
//       * ОписаниеТипов - ОписаниеТипов -
//           Тип настройки.
//       * ЗначенияДляВыбора - СписокЗначений -
//           Объекты, которые будут предложены пользователю в списке выбора.
//           Дополняет список объектов, уже выбранных пользователем ранее.
//       * ЗапросЗначенийВыбора - Запрос -
//           Возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//           Первой колонкой (с 0м индексом) должен выбираться объект,
//           который следует добавить в ЗначенияДляВыбора.Значение.
//           Для отключения автозаполнения
//           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//       * ОграничиватьВыборУказаннымиЗначениями - Булево -
//           Когда Истина, то выбор пользователя будет ограничен значениями,
//           указанными в ЗначенияДляВыбора (его конечным состоянием).
//
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	Если СвойстваНастройки.Тип = "ЗначениеПараметраНастроек"
		И СвойстваНастройки.ПолеКД = Новый ПолеКомпоновкиДанных("ПараметрыДанных.ДанныеОтчета") Тогда
		НастроитьСписокВыбораВалютыОтчета(СвойстваНастройки);
	КонецЕсли;
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	СтандартнаяОбработка = Ложь;
	
	Документы.ПлановаяКалькуляция.УстановитьОбязательныеНастройкиОтчетов(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	ЗаголовокОтчета = НастройкиОтчета.ПараметрыВывода.Элементы.Найти("Заголовок");
	
	ВспомогательныеПараметры = Новый Массив;
	
	Если ЗаголовокОтчета.Значение = "Отклонения расходов" Или ЗаголовокОтчета.Значение = "Отклонения по подразделениям" Тогда
		ВспомогательныеПараметры.Добавить("ПоказыватьВыполненныеЗаказы");
	КонецЕсли;
	
	СкрытьОтборПоТипуЗатрат = Ложь;
	Если ЗаголовокОтчета.Значение = НСтр("ru='Отклонения по подразделениям';uk='Відхилення по підрозділах'") Тогда
		СкрытьОтборПоТипуЗатрат = Истина;;
	КонецЕсли;
	
	// Сформируем отчет
	
	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.ДанныеСебестоимости.Запрос;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ЦеныНоменклатуры.Упаковка",
		"ЦеныНоменклатуры.Номенклатура"));
	СхемаКомпоновкиДанных.НаборыДанных[0].Запрос = ТекстЗапроса;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	КомпоновкаДанныхСервер.СкрытьВспомогательныеПараметрыОтчета(СхемаКомпоновкиДанных, КомпоновщикНастроек, ДокументРезультат, ВспомогательныеПараметры);
	
	Если СкрытьОтборПоТипуЗатрат Тогда
		
		ПредставлениеОтбора = "Статья калькуляции.Тип затрат В списке ""Материальные; Оплата труда; Возвратные отходы""";
		
		НайденнаяОбласть = ДокументРезультат.НайтиТекст(ПредставлениеОтбора);
		
		Если НайденнаяОбласть <> Неопределено Тогда
			
			Если НайденнаяОбласть.Текст = ПредставлениеОтбора Тогда
				
				Если НайденнаяОбласть.РежимИзмененияРазмераКолонки = РежимИзмененияРазмера.Обычный Тогда
					УдаляемаяОбласть = ДокументРезультат.Область(НайденнаяОбласть.Верх,, НайденнаяОбласть.Низ);
					ДокументРезультат.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
					
					Если ДокументРезультат.ФиксацияСверху <> 0 Тогда
						ДокументРезультат.ФиксацияСверху = ДокументРезультат.ФиксацияСверху - 1;
					КонецЕсли;
				КонецЕсли;
			Иначе
				НайденнаяОбласть.Текст = СтрЗаменить(НайденнаяОбласть.Текст, ПредставлениеОтбора + " И
					|", "");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НастроитьСписокВыбораВалютыОтчета(СвойстваНастройки)
	
	ВидЦеныПлановойСтоимости   = Константы.ВидЦеныПлановойСтоимостиМатериаловРабот.Получить();
	ПлановаяСтоимостьСНДС      = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЦеныПлановойСтоимости, "ЦенаВключаетНДС");
	
	Если ПлановаяСтоимостьСНДС <> Неопределено И ПлановаяСтоимостьСНДС Тогда
		
		НайденныйЭлементСписка = СвойстваНастройки.ЗначенияДляВыбора.НайтиПоЗначению(3);
		Если НайденныйЭлементСписка <> Неопределено Тогда
			СвойстваНастройки.ЗначенияДляВыбора.Удалить(НайденныйЭлементСписка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

