#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "АнализЗарплатыПоПодразделениямИСотрудникамЗаПериод");
	НастройкиВарианта.Описание =
		НСтр("ru='Начисления, удержания и выплаты по сотрудникам, выведенные сводно за весь 
        |период отчета. Сальдо выводится на начало и на конец заданного периода'
        |;uk='Нарахування, утримання та виплати співробітникам, виведені зведено за весь 
        |період звіту. Сальдо виводиться на початок і на кінець заданого періоду'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "АнализЗарплатыПоПодразделениямИСотрудникам");
	НастройкиВарианта.Описание =
		НСтр("ru='Начисления, удержания и выплаты по сотрудникам, сгруппированные помесячно. 
        |Сальдо выводится на начало и на конец каждого месяца, включенного в период формирования отчета'
        |;uk='Нарахування, утримання та виплати співробітникам, згруповані помісячно. 
        |Сальдо виводиться на початок і на кінець кожного місяця, включеного в період формування звіту'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "КраткийСводНачисленийИУдержаний");
	НастройкиВарианта.Описание =
		НСтр("ru='Свод начислений и удержаний, попавших в расчетные ведомости
        |и расчетные листки'
        |;uk='Зведення нарахувань і утримань, які потрапили у розрахункові відомості
        |та розрахункові листки'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПолныйСводНачисленийУдержанийИВыплат");
	НастройкиВарианта.Описание =
		НСтр("ru='Свод начислений (с количеством оплаченных дней и часов), удержаний, выплат, 
        |а также начальное и конечное сальдо взаиморасчетов с сотрудниками'
        |;uk='Зведення нарахувань (з кількістю оплачених днів і годин), утримань, виплат, 
        |а також початкове та кінцеве сальдо взаєморозрахунків з працівниками'");
		
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасчетныйЛисток");
	НастройкиВарианта.Описание =
		НСтр("ru='Расчетные листки могут выводиться с разбивкой по подразделениям';uk='Розрахункові листки можуть виводитися з розбивкою по підрозділах'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "УдержанияИзЗарплаты");
	НастройкиВарианта.Описание =
		НСтр("ru='Удержания по видам и общий процент удержаний по отношению к начислениям.
        |Цветом выделены сотрудники с размером удержаний более 20%'
        |;uk='Утримання за видами і загальний відсоток утримань по відношенню до нарахувань.
        |Кольором виділені співробітники з розміром утримань більше 20%'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасчетныйЛистокПоРабочимМестам");
	НастройкиВарианта.Описание =
		НСтр("ru='Расчетные листки с разбивкой по рабочим местам могут выводиться по подразделениям';uk='Розрахункові листки з розбивкою по робочих місцях можуть виводитися по підрозділах'");
		
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "П6");
	НастройкиВарианта.Описание =
		НСтр("ru='Расчетно-платежная ведомость по сотрудникам (типовая форма П-6)';uk='Розрахунково-платіжна відомість працівників (типова форма П-6)'");
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "П7");
	НастройкиВарианта.Описание =
		НСтр("ru='Расчетно-платежная ведомость сводная (типовая форма П-7)';uk='Розрахунково-платіжна відомість зведена (типова форма П-7)'");
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасчетныйЛистокПодробнее") Тогда
		
		ПечатаемыйДокумент = Неопределено;
		Если МассивОбъектов.Количество() > 1 Тогда
			ПечатаемыйДокумент = МассивОбъектов[1];
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РасчетныйЛистокПодробнее",
			"РасчетныйЛисток",
			ПечатаемыйДокумент);
						
	КонецЕсли;
	
КонецПроцедуры


Функция РасчетныйЛисток(ФизическиеЛица, Организация, МесяцФормированияОтчета) Экспорт
	
	Если ТипЗнч(ФизическиеЛица) = Тип("Массив")
		Или ТипЗнч(ФизическиеЛица) = Тип("ФиксированныйМассив") Тогда
		
		ФизическиеЛицаОтчета = ФизическиеЛица;
		
	Иначе
		ФизическиеЛицаОтчета = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическиеЛица);
	КонецЕсли;
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ОтображатьЗаголовки = Ложь;
	ДокументРезультат.ОтображатьСетку = Ложь;
	
	ОтчетАнализНачисленийИУдержаний = Отчеты.АнализНачисленийИУдержаний.Создать();
	ОтчетАнализНачисленийИУдержаний.ИнициализироватьОтчет();
	
	ОтчетАнализНачисленийИУдержаний.КомпоновщикНастроек.ЗагрузитьНастройки(
		ОтчетАнализНачисленийИУдержаний.СхемаКомпоновкиДанных.ВариантыНастроек.РасчетныйЛисток.Настройки);
	
	Отбор = ОтчетАнализНачисленийИУдержаний.КомпоновщикНастроек.Настройки.Отбор;
	Отбор.Элементы.Очистить();
	
	СтандартныйПериод = Новый СтандартныйПериод;
	СтандартныйПериод.ДатаНачала    = НачалоМесяца(МесяцФормированияОтчета);
	СтандартныйПериод.ДатаОкончания = КонецМесяца(МесяцФормированияОтчета);
	
	ОтчетАнализНачисленийИУдержаний.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("Период", СтандартныйПериод);
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "Организация", ВидСравненияКомпоновкиДанных.Равно, Организация);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ФизическоеЛицо", ВидСравненияКомпоновкиДанных.ВСписке, ФизическиеЛицаОтчета);
	
	ОтчетАнализНачисленийИУдержаний.СкомпоноватьРезультат(ДокументРезультат);
	
	Возврат ДокументРезультат;
	
КонецФункции

#КонецОбласти

#КонецЕсли